const	O
char	O
*	O
xgettext_global_source_encoding	pointer
;	O
iconv_t	pointer
xgettext_global_source_iconv	pointer
;	O
const	O
char	O
*	O
xgettext_current_source_encoding	pointer
;	O
iconv_t	pointer
xgettext_current_source_iconv	pointer
;	O
char	O
*	O
non_ascii_error_message	function
(	O
lexical_context_ty	enum
lcontext	enum
,	O
const	O
char	O
*	O
file_name	pointer
,	O
size_t	long
line_number	long
)	O
{	O
char	O
buffer	array
[	O
21	int
]	O
;	O
char	O
*	O
errmsg	pointer
;	O
if	O
(	O
line_number	long
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
buffer	array
[	O
0	int
]	O
=	O
'\0'	O
;	O
else	O
sprintf	function
(	O
buffer	array
,	O
":%ld"	pointer
,	O
(	O
long	O
)	O
line_number	long
)	O
;	O
switch	O
(	O
lcontext	enum
)	O
{	O
case	O
lc_outside	int
:	O
errmsg	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"Non-ASCII character at %s%s."	pointer
)	O
,	O
file_name	pointer
,	O
buffer	array
)	O
;	O
break	O
;	O
case	O
lc_comment	int
:	O
errmsg	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"Non-ASCII comment at or before %s%s."	pointer
)	O
,	O
file_name	pointer
,	O
buffer	array
)	O
;	O
break	O
;	O
case	O
lc_string	int
:	O
errmsg	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"Non-ASCII string at %s%s."	pointer
)	O
,	O
file_name	pointer
,	O
buffer	array
)	O
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
return	O
errmsg	pointer
;	O
}	O
char	O
*	O
from_current_source_encoding	function
(	O
const	O
char	O
*	O
string	pointer
,	O
lexical_context_ty	enum
lcontext	enum
,	O
const	O
char	O
*	O
file_name	pointer
,	O
size_t	long
line_number	long
)	O
{	O
if	O
(	O
xgettext_current_source_encoding	pointer
==	O
po_charset_ascii	pointer
)	O
{	O
if	O
(	O
!	O
is_ascii_string	function
(	O
string	pointer
)	O
)	O
{	O
multiline_error	function
(	O
xstrdup	function
(	O
""	pointer
)	O
,	O
xasprintf	function
(	O
"%s\n%s\n"	pointer
,	O
non_ascii_error_message	function
(	O
lcontext	enum
,	O
file_name	pointer
,	O
line_number	long
)	O
,	O
_	O
(	O
"Please specify the source encoding through --from-code."	pointer
)	O
)	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
xgettext_current_source_encoding	pointer
!=	O
po_charset_utf8	pointer
)	O
{	O
struct	O
conversion_context	struct
context	pointer
;	O
context	pointer
.	O
from_code	pointer
=	O
xgettext_current_source_encoding	pointer
;	O
context	pointer
.	O
to_code	pointer
=	O
po_charset_utf8	pointer
;	O
context	pointer
.	O
from_filename	pointer
=	O
file_name	pointer
;	O
context	pointer
.	O
message	pointer
=	O
NULL	O
;	O
string	pointer
=	O
convert_string_directly	function
(	O
xgettext_current_source_iconv	pointer
,	O
string	pointer
,	O
&	O
context	pointer
)	O
;	O
}	O
return	O
(	O
char	O
*	O
)	O
string	pointer
;	O
}	O
