int	O
imap4d_bye	function
(	O
int	O
reason	int
)	O
{	O
return	O
imap4d_bye_command	function
(	O
reason	int
,	O
NULL	O
)	O
;	O
}	O
static	O
jmp_buf	array
pipejmp	array
;	O
static	O
RETSIGTYPE	void
sigpipe	function
(	O
int	O
sig	int
)	O
{	O
longjmp	function
(	O
pipejmp	array
,	O
1	int
)	O
;	O
}	O
int	O
imap4d_bye_command	function
(	O
int	O
reason	int
,	O
struct	O
imap4d_command	struct
*	O
command	pointer
)	O
{	O
int	O
status	int
=	O
EX_SOFTWARE	int
;	O
static	O
int	O
sigtab	array
[	O
]	O
=	O
{	O
SIGPIPE	int
}	O
;	O
mu_set_signals	function
(	O
sigpipe	function
,	O
sigtab	array
,	O
MU_ARRAY_SIZE	O
(	O
sigtab	array
)	O
)	O
;	O
if	O
(	O
setjmp	function
(	O
pipejmp	array
)	O
)	O
{	O
mu_set_signals	function
(	O
SIG_IGN	O
,	O
sigtab	array
,	O
MU_ARRAY_SIZE	O
(	O
sigtab	array
)	O
)	O
;	O
iostream	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
if	O
(	O
mbox	pointer
)	O
{	O
imap4d_enter_critical	function
(	O
)	O
;	O
mu_mailbox_flush	function
(	O
mbox	pointer
,	O
0	int
)	O
;	O
mu_mailbox_close	function
(	O
mbox	pointer
)	O
;	O
manlock_unlock	function
(	O
mbox	pointer
)	O
;	O
mu_mailbox_destroy	function
(	O
&	O
mbox	pointer
)	O
;	O
imap4d_leave_critical	function
(	O
)	O
;	O
}	O
switch	O
(	O
reason	int
)	O
{	O
case	O
ERR_NO_MEM	int
:	O
io_untagged_response	function
(	O
RESP_BYE	int
,	O
"Server terminating: no more resources."	pointer
)	O
;	O
mu_diag_output	function
(	O
MU_DIAG_ERROR	O
,	O
_	O
(	O
"not enough memory"	pointer
)	O
)	O
;	O
break	O
;	O
case	O
ERR_TERMINATE	int
:	O
status	int
=	O
EX_OK	int
;	O
io_untagged_response	function
(	O
RESP_BYE	int
,	O
"Server terminating on request."	pointer
)	O
;	O
mu_diag_output	function
(	O
MU_DIAG_NOTICE	O
,	O
_	O
(	O
"terminating on request"	pointer
)	O
)	O
;	O
break	O
;	O
case	O
ERR_SIGNAL	int
:	O
mu_diag_output	function
(	O
MU_DIAG_ERROR	O
,	O
_	O
(	O
"quitting on signal"	pointer
)	O
)	O
;	O
exit	function
(	O
status	int
)	O
;	O
case	O
ERR_TIMEOUT	int
:	O
status	int
=	O
EX_TEMPFAIL	int
;	O
io_untagged_response	function
(	O
RESP_BYE	int
,	O
"Session timed out"	pointer
)	O
;	O
if	O
(	O
state	pointer
==	O
STATE_NONAUTH	O
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"session timed out for no user"	pointer
)	O
)	O
;	O
else	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"session timed out for user: %s"	pointer
)	O
,	O
auth_data	pointer
->	O
name	pointer
)	O
;	O
break	O
;	O
case	O
ERR_NO_OFILE	int
:	O
status	int
=	O
EX_IOERR	int
;	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"write error on control stream"	pointer
)	O
)	O
;	O
break	O
;	O
case	O
ERR_NO_IFILE	int
:	O
status	int
=	O
EX_IOERR	int
;	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"read error on control stream"	pointer
)	O
)	O
;	O
break	O
;	O
case	O
ERR_MAILBOX_CORRUPTED	int
:	O
status	int
=	O
EX_OSERR	int
;	O
mu_diag_output	function
(	O
MU_DIAG_ERROR	O
,	O
_	O
(	O
"mailbox modified by third party"	pointer
)	O
)	O
;	O
break	O
;	O
case	O
ERR_STREAM_CREATE	int
:	O
status	int
=	O
EX_UNAVAILABLE	int
;	O
mu_diag_output	function
(	O
MU_DIAG_ERROR	O
,	O
_	O
(	O
"cannot create transport stream"	pointer
)	O
)	O
;	O
break	O
;	O
case	O
OK	int
:	O
status	int
=	O
EX_OK	int
;	O
io_untagged_response	function
(	O
RESP_BYE	int
,	O
"Session terminating."	pointer
)	O
;	O
if	O
(	O
state	pointer
==	O
STATE_NONAUTH	O
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"session terminating"	pointer
)	O
)	O
;	O
else	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"session terminating for user: %s"	pointer
)	O
,	O
auth_data	pointer
->	O
name	pointer
)	O
;	O
break	O
;	O
default	O
:	O
io_untagged_response	function
(	O
RESP_BYE	int
,	O
"Quitting (reason unknown)"	pointer
)	O
;	O
mu_diag_output	function
(	O
MU_DIAG_ERROR	O
,	O
_	O
(	O
"quitting (numeric reason %d)"	pointer
)	O
,	O
reason	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
status	int
==	O
EX_OK	int
&&	O
command	pointer
)	O
io_completion_response	function
(	O
command	pointer
,	O
RESP_OK	int
,	O
"Completed"	pointer
)	O
;	O
}	O
util_bye	function
(	O
)	O
;	O
closelog	function
(	O
)	O
;	O
exit	function
(	O
status	int
)	O
;	O
}	O
