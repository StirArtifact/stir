int	O
gsl_histogram2d_fread	function
(	O
FILE	struct
*	O
stream	pointer
,	O
gsl_histogram2d	struct
*	O
h	pointer
)	O
{	O
int	O
status	int
=	O
gsl_block_raw_fread	function
(	O
stream	pointer
,	O
h	pointer
->	O
xrange	pointer
,	O
h	pointer
->	O
nx	long
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
gsl_block_raw_fread	function
(	O
stream	pointer
,	O
h	pointer
->	O
yrange	pointer
,	O
h	pointer
->	O
ny	long
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
gsl_block_raw_fread	function
(	O
stream	pointer
,	O
h	pointer
->	O
bin	pointer
,	O
h	pointer
->	O
nx	long
*	O
h	pointer
->	O
ny	long
,	O
1	int
)	O
;	O
return	O
status	int
;	O
}	O
int	O
gsl_histogram2d_fwrite	function
(	O
FILE	struct
*	O
stream	pointer
,	O
const	O
gsl_histogram2d	struct
*	O
h	pointer
)	O
{	O
int	O
status	int
=	O
gsl_block_raw_fwrite	function
(	O
stream	pointer
,	O
h	pointer
->	O
xrange	pointer
,	O
h	pointer
->	O
nx	long
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
gsl_block_raw_fwrite	function
(	O
stream	pointer
,	O
h	pointer
->	O
yrange	pointer
,	O
h	pointer
->	O
ny	long
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
gsl_block_raw_fwrite	function
(	O
stream	pointer
,	O
h	pointer
->	O
bin	pointer
,	O
h	pointer
->	O
nx	long
*	O
h	pointer
->	O
ny	long
,	O
1	int
)	O
;	O
return	O
status	int
;	O
}	O
int	O
gsl_histogram2d_fprintf	function
(	O
FILE	struct
*	O
stream	pointer
,	O
const	O
gsl_histogram2d	struct
*	O
h	pointer
,	O
const	O
char	O
*	O
range_format	pointer
,	O
const	O
char	O
*	O
bin_format	pointer
)	O
{	O
size_t	long
i	pointer
,	O
j	pointer
;	O
const	O
size_t	long
nx	long
=	O
h	pointer
->	O
nx	long
;	O
const	O
size_t	long
ny	long
=	O
h	pointer
->	O
ny	long
;	O
int	O
status	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
nx	long
;	O
i	pointer
++	O
)	O
{	O
for	O
(	O
j	pointer
=	O
0	int
;	O
j	pointer
<	O
ny	long
;	O
j	pointer
++	O
)	O
{	O
status	int
=	O
fprintf	function
(	O
stream	pointer
,	O
range_format	pointer
,	O
h	pointer
->	O
xrange	pointer
[	O
i	pointer
]	O
)	O
;	O
if	O
(	O
status	int
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"fprintf failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
;	O
if	O
(	O
status	int
==	O
EOF	O
)	O
{	O
GSL_ERROR	O
(	O
"putc failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
fprintf	function
(	O
stream	pointer
,	O
range_format	pointer
,	O
h	pointer
->	O
xrange	pointer
[	O
i	pointer
+	O
1	int
]	O
)	O
;	O
if	O
(	O
status	int
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"fprintf failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
;	O
if	O
(	O
status	int
==	O
EOF	O
)	O
{	O
GSL_ERROR	O
(	O
"putc failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
fprintf	function
(	O
stream	pointer
,	O
range_format	pointer
,	O
h	pointer
->	O
yrange	pointer
[	O
j	pointer
]	O
)	O
;	O
if	O
(	O
status	int
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"fprintf failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
;	O
if	O
(	O
status	int
==	O
EOF	O
)	O
{	O
GSL_ERROR	O
(	O
"putc failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
fprintf	function
(	O
stream	pointer
,	O
range_format	pointer
,	O
h	pointer
->	O
yrange	pointer
[	O
j	pointer
+	O
1	int
]	O
)	O
;	O
if	O
(	O
status	int
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"fprintf failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
;	O
if	O
(	O
status	int
==	O
EOF	O
)	O
{	O
GSL_ERROR	O
(	O
"putc failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
fprintf	function
(	O
stream	pointer
,	O
bin_format	pointer
,	O
h	pointer
->	O
bin	pointer
[	O
i	pointer
*	O
ny	long
+	O
j	pointer
]	O
)	O
;	O
if	O
(	O
status	int
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"fprintf failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
status	int
=	O
putc	function
(	O
'\n'	O
,	O
stream	pointer
)	O
;	O
if	O
(	O
status	int
==	O
EOF	O
)	O
{	O
GSL_ERROR	O
(	O
"putc failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
}	O
status	int
=	O
putc	function
(	O
'\n'	O
,	O
stream	pointer
)	O
;	O
if	O
(	O
status	int
==	O
EOF	O
)	O
{	O
GSL_ERROR	O
(	O
"putc failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
int	O
gsl_histogram2d_fscanf	function
(	O
FILE	struct
*	O
stream	pointer
,	O
gsl_histogram2d	struct
*	O
h	pointer
)	O
{	O
size_t	long
i	pointer
,	O
j	pointer
;	O
const	O
size_t	long
nx	long
=	O
h	pointer
->	O
nx	long
;	O
const	O
size_t	long
ny	long
=	O
h	pointer
->	O
ny	long
;	O
double	O
xupper	pointer
,	O
yupper	pointer
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
nx	long
;	O
i	pointer
++	O
)	O
{	O
for	O
(	O
j	pointer
=	O
0	int
;	O
j	pointer
<	O
ny	long
;	O
j	pointer
++	O
)	O
{	O
int	O
status	int
=	O
fscanf	function
(	O
stream	pointer
,	O
"%lg %lg %lg %lg %lg"	pointer
,	O
h	pointer
->	O
xrange	pointer
+	O
i	pointer
,	O
&	O
xupper	pointer
,	O
h	pointer
->	O
yrange	pointer
+	O
j	pointer
,	O
&	O
yupper	pointer
,	O
h	pointer
->	O
bin	pointer
+	O
i	pointer
*	O
ny	long
+	O
j	pointer
)	O
;	O
if	O
(	O
status	int
!=	O
5	int
)	O
{	O
GSL_ERROR	O
(	O
"fscanf failed"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
}	O
h	pointer
->	O
yrange	pointer
[	O
ny	long
]	O
=	O
yupper	pointer
;	O
}	O
h	pointer
->	O
xrange	pointer
[	O
nx	long
]	O
=	O
xupper	pointer
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
