const	O
char	O
_uuconf_callin_rcsid	array
[	O
]	O
=	O
"$Id: callin.c,v 1.14 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
static	O
int	O
ipcheck	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
struct	O
sinfo	struct
{	O
int	O
(	O
*	O
pcmpfn	pointer
)	O
P	O
(	O
(	O
int	O
,	O
pointer	pointer
,	O
const	O
char	O
*	O
)	O
)	O
;	O
pointer	pointer
pinfo	pointer
;	O
boolean	int
ffound	int
;	O
boolean	int
fmatched	int
;	O
}	O
;	O
int	O
uuconf_callin	function
(	O
pglobal	pointer
,	O
pcmpfn	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
(	O
*	O
pcmpfn	pointer
)	O
P	O
(	O
(	O
int	O
,	O
pointer	pointer
,	O
const	O
char	O
*	O
)	O
)	O
;	O
pointer	pointer
pinfo	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
int	O
iret	int
;	O
char	O
*	O
*	O
pz	pointer
;	O
struct	O
uuconf_cmdtab	struct
as	array
[	O
1	int
]	O
;	O
struct	O
sinfo	struct
s	struct
;	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
if	O
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzpwdfiles	pointer
==	O
NULL	O
)	O
{	O
char	O
ab	char
[	O
sizeof	O
NEWCONFIGLIB	O
+	O
sizeof	O
PASSWDFILE	pointer
-	O
1	int
]	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
ab	char
,	O
(	O
pointer	pointer
)	O
NEWCONFIGLIB	O
,	O
sizeof	O
NEWCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
ab	char
+	O
sizeof	O
NEWCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
PASSWDFILE	pointer
,	O
sizeof	O
PASSWDFILE	pointer
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
ab	char
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzpwdfiles	pointer
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
as	array
[	O
0	int
]	O
.	O
uuconf_zcmd	pointer
=	O
NULL	O
;	O
s	struct
.	O
pcmpfn	pointer
=	O
pcmpfn	pointer
;	O
s	struct
.	O
pinfo	pointer
=	O
pinfo	pointer
;	O
s	struct
.	O
ffound	int
=	O
FALSE	O
;	O
s	struct
.	O
fmatched	int
=	O
FALSE	O
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
for	O
(	O
pz	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzpwdfiles	pointer
;	O
*	O
pz	pointer
!=	O
NULL	O
;	O
pz	pointer
++	O
)	O
{	O
FILE	struct
*	O
e	pointer
;	O
e	pointer
=	O
fopen	function
(	O
*	O
pz	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
FNO_SUCH_FILE	O
(	O
)	O
)	O
continue	O
;	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_FOPEN_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
qglobal	pointer
->	O
ilineno	int
=	O
0	int
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
while	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
>	O
0	int
)	O
{	O
char	O
*	O
z0	pointer
,	O
*	O
z1	pointer
;	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
z0	pointer
=	O
strchr	function
(	O
zline	pointer
,	O
':'	O
)	O
;	O
if	O
(	O
z0	pointer
!=	O
NULL	O
)	O
{	O
*	O
z0	pointer
=	O
' '	O
;	O
z1	pointer
=	O
strchr	function
(	O
z0	pointer
,	O
':'	O
)	O
;	O
if	O
(	O
z1	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
z1	pointer
-	O
z0	pointer
==	O
1	int
)	O
continue	O
;	O
*	O
z1	pointer
=	O
'\0'	O
;	O
if	O
(	O
strchr	function
(	O
z0	pointer
+	O
1	int
,	O
' '	O
)	O
!=	O
NULL	O
)	O
continue	O
;	O
}	O
}	O
iret	int
=	O
uuconf_cmd_line	function
(	O
pglobal	pointer
,	O
zline	pointer
,	O
as	array
,	O
(	O
pointer	pointer
)	O
&	O
s	struct
,	O
ipcheck	function
,	O
0	int
,	O
(	O
pointer	pointer
)	O
NULL	O
)	O
;	O
if	O
(	O
(	O
iret	int
&	O
UUCONF_CMDTABRET_EXIT	O
)	O
!=	O
0	int
)	O
{	O
iret	int
&=	O
~	O
UUCONF_CMDTABRET_EXIT	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
iret	int
|=	O
UUCONF_ERROR_LINENO	O
;	O
break	O
;	O
}	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
||	O
s	struct
.	O
ffound	int
)	O
break	O
;	O
}	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
qglobal	pointer
->	O
zfilename	pointer
=	O
*	O
pz	pointer
;	O
iret	int
|=	O
UUCONF_ERROR_FILENAME	O
;	O
}	O
else	O
if	O
(	O
!	O
s	struct
.	O
ffound	int
||	O
!	O
s	struct
.	O
fmatched	int
)	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
return	O
iret	int
;	O
}	O
static	O
int	O
ipcheck	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pinfo	pointer
;	O
{	O
struct	O
sinfo	struct
*	O
q	pointer
=	O
(	O
struct	O
sinfo	struct
*	O
)	O
pinfo	pointer
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
if	O
(	O
!	O
(	O
*	O
q	pointer
->	O
pcmpfn	pointer
)	O
(	O
0	int
,	O
q	pointer
->	O
pinfo	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
q	pointer
->	O
ffound	int
=	O
TRUE	O
;	O
q	pointer
->	O
fmatched	int
=	O
(	O
*	O
q	pointer
->	O
pcmpfn	pointer
)	O
(	O
1	int
,	O
q	pointer
->	O
pinfo	pointer
,	O
argv	pointer
[	O
1	int
]	O
)	O
!=	O
0	int
;	O
return	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
