int	O
gdbm_export_to_file	function
(	O
GDBM_FILE	pointer
dbf	pointer
,	O
FILE	struct
*	O
fp	pointer
)	O
{	O
unsigned	O
long	O
size	int
;	O
datum	struct
key	struct
,	O
nextkey	struct
,	O
data	pointer
;	O
const	O
char	O
*	O
header1	pointer
=	O
"!\r\n! GDBM FLAT FILE DUMP -- THIS IS NOT A TEXT FILE\r\n! "	pointer
;	O
const	O
char	O
*	O
header2	pointer
=	O
"\r\n!\r\n"	pointer
;	O
int	O
count	int
=	O
0	int
;	O
GDBM_ASSERT_CONSISTENCY	O
(	O
dbf	pointer
,	O
-	O
1	int
)	O
;	O
if	O
(	O
fwrite	function
(	O
header1	pointer
,	O
strlen	function
(	O
header1	pointer
)	O
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
if	O
(	O
fwrite	function
(	O
gdbm_version	pointer
,	O
strlen	function
(	O
gdbm_version	pointer
)	O
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
if	O
(	O
fwrite	function
(	O
header2	pointer
,	O
strlen	function
(	O
header2	pointer
)	O
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
key	struct
=	O
gdbm_firstkey	function
(	O
dbf	pointer
)	O
;	O
while	O
(	O
key	struct
.	O
dptr	pointer
!=	O
NULL	O
)	O
{	O
data	pointer
=	O
gdbm_fetch	function
(	O
dbf	pointer
,	O
key	struct
)	O
;	O
if	O
(	O
data	pointer
.	O
dptr	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
gdbm_errno	O
!=	O
GDBM_NO_ERROR	int
)	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
size	int
=	O
htonl	function
(	O
key	struct
.	O
dsize	int
)	O
;	O
if	O
(	O
fwrite	function
(	O
&	O
size	int
,	O
sizeof	O
(	O
size	int
)	O
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
if	O
(	O
fwrite	function
(	O
key	struct
.	O
dptr	pointer
,	O
key	struct
.	O
dsize	int
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
size	int
=	O
htonl	function
(	O
data	pointer
.	O
dsize	int
)	O
;	O
if	O
(	O
fwrite	function
(	O
&	O
size	int
,	O
sizeof	O
(	O
size	int
)	O
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
if	O
(	O
fwrite	function
(	O
data	pointer
.	O
dptr	pointer
,	O
data	pointer
.	O
dsize	int
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
goto	O
write_fail	O
;	O
}	O
nextkey	struct
=	O
gdbm_nextkey	function
(	O
dbf	pointer
,	O
key	struct
)	O
;	O
free	function
(	O
key	struct
.	O
dptr	pointer
)	O
;	O
free	function
(	O
data	pointer
.	O
dptr	pointer
)	O
;	O
key	struct
=	O
nextkey	struct
;	O
count	int
++	O
;	O
}	O
if	O
(	O
gdbm_last_errno	function
(	O
dbf	pointer
)	O
==	O
GDBM_ITEM_NOT_FOUND	int
)	O
{	O
gdbm_clear_error	function
(	O
dbf	pointer
)	O
;	O
gdbm_errno	O
=	O
GDBM_NO_ERROR	int
;	O
}	O
else	O
return	O
-	O
1	int
;	O
return	O
count	int
;	O
write_fail	O
:	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
int	O
gdbm_export	function
(	O
GDBM_FILE	pointer
dbf	pointer
,	O
const	O
char	O
*	O
exportfile	pointer
,	O
int	O
flags	int
,	O
int	O
mode	int
)	O
{	O
int	O
nfd	int
,	O
rc	int
;	O
FILE	struct
*	O
fp	pointer
;	O
switch	O
(	O
flags	int
)	O
{	O
case	O
GDBM_WRCREAT	int
:	O
nfd	int
=	O
open	function
(	O
exportfile	pointer
,	O
O_WRONLY	int
|	O
O_CREAT	int
|	O
O_EXCL	int
,	O
mode	int
)	O
;	O
if	O
(	O
nfd	int
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
GDBM_NEWDB	int
:	O
nfd	int
=	O
open	function
(	O
exportfile	pointer
,	O
O_WRONLY	int
|	O
O_CREAT	int
|	O
O_TRUNC	int
,	O
mode	int
)	O
;	O
if	O
(	O
nfd	int
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
break	O
;	O
default	O
:	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_BAD_OPEN_FLAGS	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
fp	pointer
=	O
fdopen	function
(	O
nfd	int
,	O
"w"	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
{	O
close	function
(	O
nfd	int
)	O
;	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
gdbm_export_to_file	function
(	O
dbf	pointer
,	O
fp	pointer
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
