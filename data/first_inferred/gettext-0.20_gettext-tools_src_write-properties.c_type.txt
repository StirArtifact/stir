static	O
const	O
char	O
*	O
conv_to_java	function
(	O
const	O
char	O
*	O
string	pointer
)	O
{	O
static	O
const	O
char	O
hexdigit	array
[	O
]	O
=	O
"0123456789abcdef"	pointer
;	O
size_t	long
length	long
;	O
char	O
*	O
result	pointer
;	O
if	O
(	O
is_ascii_string	function
(	O
string	pointer
)	O
)	O
return	O
string	pointer
;	O
length	long
=	O
0	int
;	O
{	O
const	O
char	O
*	O
str	pointer
=	O
string	pointer
;	O
const	O
char	O
*	O
str_limit	pointer
=	O
str	pointer
+	O
strlen	function
(	O
str	pointer
)	O
;	O
while	O
(	O
str	pointer
<	O
str_limit	pointer
)	O
{	O
ucs4_t	int
uc	int
;	O
str	pointer
+=	O
u8_mbtouc	function
(	O
&	O
uc	int
,	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
str	pointer
,	O
str_limit	pointer
-	O
str	pointer
)	O
;	O
length	long
+=	O
(	O
uc	int
<=	O
0x007f	int
?	O
1	int
:	O
uc	int
<	O
0x10000	int
?	O
6	int
:	O
12	int
)	O
;	O
}	O
}	O
result	pointer
=	O
XNMALLOC	O
(	O
length	long
+	O
1	int
,	O
char	O
)	O
;	O
{	O
char	O
*	O
newstr	pointer
=	O
result	pointer
;	O
const	O
char	O
*	O
str	pointer
=	O
string	pointer
;	O
const	O
char	O
*	O
str_limit	pointer
=	O
str	pointer
+	O
strlen	function
(	O
str	pointer
)	O
;	O
while	O
(	O
str	pointer
<	O
str_limit	pointer
)	O
{	O
ucs4_t	int
uc	int
;	O
str	pointer
+=	O
u8_mbtouc	function
(	O
&	O
uc	int
,	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
str	pointer
,	O
str_limit	pointer
-	O
str	pointer
)	O
;	O
if	O
(	O
uc	int
<=	O
0x007f	int
)	O
*	O
newstr	pointer
++	O
=	O
uc	int
;	O
else	O
if	O
(	O
uc	int
<	O
0x10000	int
)	O
{	O
sprintf	function
(	O
newstr	pointer
,	O
"\\u%c%c%c%c"	pointer
,	O
hexdigit	array
[	O
(	O
uc	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
(	O
uc	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
(	O
uc	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
uc	int
&	O
0x0f	int
]	O
)	O
;	O
newstr	pointer
+=	O
6	int
;	O
}	O
else	O
{	O
ucs4_t	int
uc1	int
=	O
0xd800	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
>>	O
10	int
)	O
;	O
ucs4_t	int
uc2	int
=	O
0xdc00	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
&	O
0x3ff	int
)	O
;	O
sprintf	function
(	O
newstr	pointer
,	O
"\\u%c%c%c%c"	pointer
,	O
hexdigit	array
[	O
(	O
uc1	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
(	O
uc1	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
(	O
uc1	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
uc1	int
&	O
0x0f	int
]	O
)	O
;	O
newstr	pointer
+=	O
6	int
;	O
sprintf	function
(	O
newstr	pointer
,	O
"\\u%c%c%c%c"	pointer
,	O
hexdigit	array
[	O
(	O
uc2	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
(	O
uc2	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
(	O
uc2	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array
[	O
uc2	int
&	O
0x0f	int
]	O
)	O
;	O
newstr	pointer
+=	O
6	int
;	O
}	O
}	O
*	O
newstr	pointer
=	O
'\0'	O
;	O
}	O
return	O
result	pointer
;	O
}	O
static	O
void	O
write_escaped_string	function
(	O
ostream_t	pointer
stream	pointer
,	O
const	O
char	O
*	O
str	pointer
,	O
bool	bool
in_key	bool
)	O
{	O
static	O
const	O
char	O
hexdigit	array
[	O
]	O
=	O
"0123456789abcdef"	pointer
;	O
const	O
char	O
*	O
str_limit	pointer
=	O
str	pointer
+	O
strlen	function
(	O
str	pointer
)	O
;	O
bool	bool
first	pointer
=	O
true	int
;	O
while	O
(	O
str	pointer
<	O
str_limit	pointer
)	O
{	O
ucs4_t	int
uc	int
;	O
str	pointer
+=	O
u8_mbtouc	function
(	O
&	O
uc	int
,	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
str	pointer
,	O
str_limit	pointer
-	O
str	pointer
)	O
;	O
if	O
(	O
uc	int
==	O
0x0020	int
&&	O
(	O
first	pointer
||	O
in_key	bool
)	O
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\\ "	pointer
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x0009	int
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\\t"	pointer
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x000a	int
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\\n"	pointer
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x000d	int
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\\r"	pointer
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x000c	int
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\\f"	pointer
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
'\\'	O
||	O
uc	int
==	O
'#'	O
||	O
uc	int
==	O
'!'	O
||	O
uc	int
==	O
'='	O
||	O
uc	int
==	O
':'	O
)	O
{	O
char	O
seq	array
[	O
2	int
]	O
;	O
seq	array
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array
[	O
1	int
]	O
=	O
uc	int
;	O
ostream_write_mem	function
(	O
stream	pointer
,	O
seq	array
,	O
2	int
)	O
;	O
}	O
else	O
if	O
(	O
uc	int
>=	O
0x0020	int
&&	O
uc	int
<=	O
0x007e	int
)	O
{	O
char	O
seq	array
[	O
1	int
]	O
;	O
seq	array
[	O
0	int
]	O
=	O
uc	int
;	O
ostream_write_mem	function
(	O
stream	pointer
,	O
seq	array
,	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
uc	int
<	O
0x10000	int
)	O
{	O
char	O
seq	array
[	O
6	int
]	O
;	O
seq	array
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array
[	O
1	int
]	O
=	O
'u'	O
;	O
seq	array
[	O
2	int
]	O
=	O
hexdigit	array
[	O
(	O
uc	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
3	int
]	O
=	O
hexdigit	array
[	O
(	O
uc	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
4	int
]	O
=	O
hexdigit	array
[	O
(	O
uc	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
5	int
]	O
=	O
hexdigit	array
[	O
uc	int
&	O
0x0f	int
]	O
;	O
ostream_write_mem	function
(	O
stream	pointer
,	O
seq	array
,	O
6	int
)	O
;	O
}	O
else	O
{	O
ucs4_t	int
uc1	int
=	O
0xd800	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
>>	O
10	int
)	O
;	O
ucs4_t	int
uc2	int
=	O
0xdc00	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
&	O
0x3ff	int
)	O
;	O
char	O
seq	array
[	O
6	int
]	O
;	O
seq	array
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array
[	O
1	int
]	O
=	O
'u'	O
;	O
seq	array
[	O
2	int
]	O
=	O
hexdigit	array
[	O
(	O
uc1	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
3	int
]	O
=	O
hexdigit	array
[	O
(	O
uc1	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
4	int
]	O
=	O
hexdigit	array
[	O
(	O
uc1	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
5	int
]	O
=	O
hexdigit	array
[	O
uc1	int
&	O
0x0f	int
]	O
;	O
ostream_write_mem	function
(	O
stream	pointer
,	O
seq	array
,	O
6	int
)	O
;	O
seq	array
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array
[	O
1	int
]	O
=	O
'u'	O
;	O
seq	array
[	O
2	int
]	O
=	O
hexdigit	array
[	O
(	O
uc2	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
3	int
]	O
=	O
hexdigit	array
[	O
(	O
uc2	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
4	int
]	O
=	O
hexdigit	array
[	O
(	O
uc2	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array
[	O
5	int
]	O
=	O
hexdigit	array
[	O
uc2	int
&	O
0x0f	int
]	O
;	O
ostream_write_mem	function
(	O
stream	pointer
,	O
seq	array
,	O
6	int
)	O
;	O
}	O
first	pointer
=	O
false	int
;	O
}	O
}	O
static	O
void	O
write_message	function
(	O
ostream_t	pointer
stream	pointer
,	O
const	O
message_ty	struct
*	O
mp	pointer
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
message_print_comment	function
(	O
mp	pointer
,	O
stream	pointer
)	O
;	O
message_print_comment_dot	function
(	O
mp	pointer
,	O
stream	pointer
)	O
;	O
message_print_comment_filepos	function
(	O
mp	pointer
,	O
stream	pointer
,	O
false	int
,	O
page_width	long
)	O
;	O
message_print_comment_flags	function
(	O
mp	pointer
,	O
stream	pointer
,	O
debug	bool
)	O
;	O
if	O
(	O
is_header	O
(	O
mp	pointer
)	O
||	O
mp	pointer
->	O
msgstr	pointer
[	O
0	int
]	O
==	O
'\0'	O
||	O
(	O
mp	pointer
->	O
is_fuzzy	bool
&&	O
!	O
is_header	O
(	O
mp	pointer
)	O
)	O
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"!"	pointer
)	O
;	O
write_escaped_string	function
(	O
stream	pointer
,	O
mp	pointer
->	O
msgid	pointer
,	O
true	int
)	O
;	O
ostream_write_str	function
(	O
stream	pointer
,	O
"="	pointer
)	O
;	O
write_escaped_string	function
(	O
stream	pointer
,	O
mp	pointer
->	O
msgstr	pointer
,	O
false	int
)	O
;	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
static	O
void	O
write_properties	function
(	O
ostream_t	pointer
stream	pointer
,	O
message_list_ty	struct
*	O
mlp	pointer
,	O
const	O
char	O
*	O
canon_encoding	pointer
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
bool	bool
blank_line	bool
;	O
size_t	long
j	long
,	O
i	long
;	O
iconv_message_list	function
(	O
mlp	pointer
,	O
canon_encoding	pointer
,	O
po_charset_utf8	pointer
,	O
NULL	O
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
message_ty	struct
*	O
mp	pointer
=	O
mlp	pointer
->	O
item	pointer
[	O
j	long
]	O
;	O
if	O
(	O
mp	pointer
->	O
comment	pointer
!=	O
NULL	O
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mp	pointer
->	O
comment	pointer
->	O
nitems	long
;	O
++	O
i	long
)	O
mp	pointer
->	O
comment	pointer
->	O
item	pointer
[	O
i	long
]	O
=	O
conv_to_java	function
(	O
mp	pointer
->	O
comment	pointer
->	O
item	pointer
[	O
i	long
]	O
)	O
;	O
if	O
(	O
mp	pointer
->	O
comment_dot	pointer
!=	O
NULL	O
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mp	pointer
->	O
comment_dot	pointer
->	O
nitems	long
;	O
++	O
i	long
)	O
mp	pointer
->	O
comment_dot	pointer
->	O
item	pointer
[	O
i	long
]	O
=	O
conv_to_java	function
(	O
mp	pointer
->	O
comment_dot	pointer
->	O
item	pointer
[	O
i	long
]	O
)	O
;	O
}	O
blank_line	bool
=	O
false	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
const	O
message_ty	struct
*	O
mp	pointer
=	O
mlp	pointer
->	O
item	pointer
[	O
j	long
]	O
;	O
if	O
(	O
mp	pointer
->	O
msgid_plural	pointer
==	O
NULL	O
&&	O
!	O
mp	pointer
->	O
obsolete	bool
)	O
{	O
if	O
(	O
blank_line	bool
)	O
ostream_write_str	function
(	O
stream	pointer
,	O
"\n"	pointer
)	O
;	O
write_message	function
(	O
stream	pointer
,	O
mp	pointer
,	O
page_width	long
,	O
debug	bool
)	O
;	O
blank_line	bool
=	O
true	int
;	O
}	O
}	O
}	O
static	O
void	O
msgdomain_list_print_properties	function
(	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
,	O
ostream_t	pointer
stream	pointer
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
message_list_ty	struct
*	O
mlp	pointer
;	O
if	O
(	O
mdlp	pointer
->	O
nitems	long
==	O
1	int
)	O
mlp	pointer
=	O
mdlp	pointer
->	O
item	pointer
[	O
0	int
]	O
->	O
messages	pointer
;	O
else	O
mlp	pointer
=	O
message_list_alloc	function
(	O
false	int
)	O
;	O
write_properties	function
(	O
stream	pointer
,	O
mlp	pointer
,	O
mdlp	pointer
->	O
encoding	pointer
,	O
page_width	long
,	O
debug	bool
)	O
;	O
}	O
const	O
struct	O
catalog_output_format	struct
output_format_properties	struct
=	O
{	O
msgdomain_list_print_properties	function
,	O
true	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
true	int
,	O
true	int
}	O
;	O
