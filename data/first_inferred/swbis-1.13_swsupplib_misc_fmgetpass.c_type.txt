static	O
int	O
ttyfd	int
;	O
static	O
int	O
init_ttyfd	int
;	O
static	O
struct	O
termios	struct
termb	struct
;	O
static	O
tcflag_t	int
flags	int
;	O
static	O
void	O
save_tty_state	function
(	O
void	O
)	O
;	O
static	O
void	O
disable_tty_echo	function
(	O
void	O
)	O
;	O
static	O
void	O
restore_tty_state	function
(	O
void	O
)	O
;	O
static	O
RETSIGTYPE	void
sigint_handler	function
(	O
int	O
)	O
;	O
char	O
*	O
fm_getpassphrase	function
(	O
char	O
*	O
prompt	pointer
,	O
char	O
*	O
pbuf	pointer
,	O
int	O
INPUT_BUF_SIZE	int
)	O
{	O
register	O
char	O
*	O
p	pointer
;	O
register	O
int	O
c	int
;	O
FILE	struct
*	O
fi	pointer
;	O
SIGHANDLERTYPE	pointer
sig	pointer
=	O
0	int
;	O
RETSIGTYPE	void
sigint_handler	function
(	O
int	O
)	O
;	O
int	O
istty	int
=	O
0	int
;	O
init_ttyfd	int
=	O
open	function
(	O
ctermid	function
(	O
NULL	O
)	O
,	O
O_RDWR	int
)	O
;	O
if	O
(	O
init_ttyfd	int
<	O
0	int
)	O
{	O
istty	int
=	O
0	int
;	O
fi	pointer
=	O
stdin	pointer
;	O
}	O
else	O
{	O
if	O
(	O
(	O
fi	pointer
=	O
fdopen	function
(	O
init_ttyfd	int
,	O
"r"	pointer
)	O
)	O
==	O
NULL	O
)	O
{	O
istty	int
=	O
0	int
;	O
fi	pointer
=	O
stdin	pointer
;	O
}	O
else	O
{	O
istty	int
=	O
1	int
;	O
setbuf	function
(	O
fi	pointer
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
}	O
ttyfd	int
=	O
fileno	function
(	O
fi	pointer
)	O
;	O
if	O
(	O
istty	int
)	O
{	O
save_tty_state	function
(	O
)	O
;	O
sig	pointer
=	O
swgp_signal	function
(	O
SIGINT	int
,	O
sigint_handler	function
)	O
;	O
disable_tty_echo	function
(	O
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s"	pointer
,	O
prompt	pointer
)	O
;	O
}	O
for	O
(	O
p	pointer
=	O
pbuf	pointer
;	O
(	O
c	int
=	O
getc	function
(	O
fi	pointer
)	O
)	O
!=	O
'\n'	O
&&	O
c	int
!=	O
EOF	O
;	O
)	O
{	O
if	O
(	O
p	pointer
<	O
&	O
pbuf	pointer
[	O
INPUT_BUF_SIZE	int
-	O
1	int
]	O
)	O
*	O
p	pointer
++	O
=	O
c	int
;	O
}	O
*	O
p	pointer
=	O
'\0'	O
;	O
if	O
(	O
fi	pointer
!=	O
stdin	pointer
)	O
fprintf	function
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
if	O
(	O
istty	int
)	O
{	O
restore_tty_state	function
(	O
)	O
;	O
swgp_signal	function
(	O
SIGINT	int
,	O
sig	pointer
)	O
;	O
}	O
if	O
(	O
fi	pointer
!=	O
stdin	pointer
)	O
fclose	function
(	O
fi	pointer
)	O
;	O
return	O
(	O
pbuf	pointer
)	O
;	O
}	O
static	O
void	O
save_tty_state	function
(	O
void	O
)	O
{	O
tcgetattr	function
(	O
ttyfd	int
,	O
&	O
termb	struct
)	O
;	O
flags	int
=	O
termb	struct
.	O
c_lflag	int
;	O
}	O
static	O
void	O
disable_tty_echo	function
(	O
void	O
)	O
{	O
termb	struct
.	O
c_lflag	int
&=	O
~	O
ECHO	int
;	O
tcsetattr	function
(	O
ttyfd	int
,	O
TCSAFLUSH	int
,	O
&	O
termb	struct
)	O
;	O
}	O
static	O
void	O
restore_tty_state	function
(	O
void	O
)	O
{	O
termb	struct
.	O
c_lflag	int
=	O
flags	int
;	O
tcsetattr	function
(	O
ttyfd	int
,	O
TCSAFLUSH	int
,	O
&	O
termb	struct
)	O
;	O
}	O
static	O
RETSIGTYPE	void
sigint_handler	function
(	O
int	O
signum	int
)	O
{	O
restore_tty_state	function
(	O
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
GT_	O
(	O
"\nCaught SIGINT... bailing out.\n"	pointer
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
