static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: os_handle.c,v 1.4 2000/06/28 16:47:02 loic Exp $"	pointer
;	O
int	O
CDB___os_openhandle	function
(	O
dbenv	pointer
,	O
name	pointer
,	O
flags	int
,	O
mode	enum
,	O
fhp	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
const	O
char	O
*	O
name	pointer
;	O
int	O
flags	int
,	O
mode	enum
;	O
DB_FH	struct
*	O
fhp	pointer
;	O
{	O
int	O
ret	int
,	O
try	int
;	O
memset	function
(	O
fhp	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
fhp	pointer
)	O
)	O
;	O
if	O
(	O
CDB___db_jump	struct
.	O
j_open	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
(	O
fhp	pointer
->	O
fd	pointer
=	O
CDB___db_jump	struct
.	O
j_open	pointer
(	O
name	pointer
,	O
flags	int
,	O
mode	enum
)	O
)	O
==	O
-	O
1	int
)	O
return	O
(	O
CDB___os_get_errno	function
(	O
)	O
)	O
;	O
F_SET	O
(	O
fhp	pointer
,	O
DB_FH_VALID	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
for	O
(	O
ret	int
=	O
0	int
,	O
try	int
=	O
1	int
;	O
try	int
<	O
4	int
;	O
++	O
try	int
)	O
{	O
fhp	pointer
->	O
fd	pointer
=	O
open	function
(	O
name	pointer
,	O
flags	int
,	O
mode	enum
)	O
;	O
if	O
(	O
fhp	pointer
->	O
fd	pointer
==	O
-	O
1	int
)	O
{	O
ret	int
=	O
CDB___os_get_errno	function
(	O
)	O
;	O
if	O
(	O
ret	int
==	O
ENFILE	int
||	O
ret	int
==	O
EMFILE	int
||	O
ret	int
==	O
ENOSPC	int
)	O
{	O
(	O
void	O
)	O
CDB___os_sleep	function
(	O
dbenv	pointer
,	O
try	int
*	O
2	int
,	O
0	int
)	O
;	O
continue	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
fcntl	function
(	O
fhp	pointer
->	O
fd	pointer
,	O
F_SETFD	int
,	O
1	int
)	O
==	O
-	O
1	int
)	O
{	O
ret	int
=	O
CDB___os_get_errno	function
(	O
)	O
;	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"fcntl(F_SETFD): %s"	pointer
,	O
strerror	function
(	O
ret	int
)	O
)	O
;	O
(	O
void	O
)	O
CDB___os_closehandle	function
(	O
fhp	pointer
)	O
;	O
}	O
else	O
F_SET	O
(	O
fhp	pointer
,	O
DB_FH_VALID	int
)	O
;	O
}	O
break	O
;	O
}	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
CDB___os_closehandle	function
(	O
fhp	pointer
)	O
DB_FH	struct
*	O
fhp	pointer
;	O
{	O
int	O
ret	int
;	O
DB_ASSERT	O
(	O
F_ISSET	O
(	O
fhp	pointer
,	O
DB_FH_VALID	int
)	O
&&	O
fhp	pointer
->	O
fd	pointer
!=	O
-	O
1	int
)	O
;	O
ret	int
=	O
CDB___db_jump	struct
.	O
j_close	pointer
!=	O
NULL	O
?	O
CDB___db_jump	struct
.	O
j_close	pointer
(	O
fhp	pointer
->	O
fd	pointer
)	O
:	O
close	function
(	O
fhp	pointer
->	O
fd	pointer
)	O
;	O
fhp	pointer
->	O
fd	pointer
=	O
-	O
1	int
;	O
F_CLR	O
(	O
fhp	pointer
,	O
DB_FH_VALID	int
)	O
;	O
return	O
(	O
ret	int
==	O
0	int
?	O
0	int
:	O
CDB___os_get_errno	function
(	O
)	O
)	O
;	O
}	O
