voidpf	pointer
call_zopen64	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pfilefunc	pointer
,	O
const	O
void	O
*	O
filename	pointer
,	O
int	O
mode	pointer
)	O
{	O
if	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
zopen64_file	pointer
!=	O
NULL	O
)	O
return	O
(	O
*	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
zopen64_file	pointer
)	O
)	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
,	O
filename	pointer
,	O
mode	pointer
)	O
;	O
else	O
{	O
return	O
(	O
*	O
(	O
pfilefunc	pointer
->	O
zopen32_file	pointer
)	O
)	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
,	O
(	O
const	O
char	O
*	O
)	O
filename	pointer
,	O
mode	pointer
)	O
;	O
}	O
}	O
long	O
call_zseek64	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pfilefunc	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
ZPOS64_T	long long
offset	long
,	O
int	O
origin	int
)	O
{	O
if	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
zseek64_file	pointer
!=	O
NULL	O
)	O
return	O
(	O
*	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
zseek64_file	pointer
)	O
)	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
,	O
filestream	pointer
,	O
offset	long
,	O
origin	int
)	O
;	O
else	O
{	O
uLong	long
offsetTruncated	long
=	O
(	O
uLong	long
)	O
offset	long
;	O
if	O
(	O
offsetTruncated	long
!=	O
offset	long
)	O
return	O
-	O
1	int
;	O
else	O
return	O
(	O
*	O
(	O
pfilefunc	pointer
->	O
zseek32_file	pointer
)	O
)	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
,	O
filestream	pointer
,	O
offsetTruncated	long
,	O
origin	int
)	O
;	O
}	O
}	O
ZPOS64_T	long long
call_ztell64	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pfilefunc	pointer
,	O
voidpf	pointer
filestream	pointer
)	O
{	O
if	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
zseek64_file	pointer
!=	O
NULL	O
)	O
return	O
(	O
*	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
ztell64_file	pointer
)	O
)	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
,	O
filestream	pointer
)	O
;	O
else	O
{	O
uLong	long
tell_uLong	long
=	O
(	O
*	O
(	O
pfilefunc	pointer
->	O
ztell32_file	pointer
)	O
)	O
(	O
pfilefunc	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
,	O
filestream	pointer
)	O
;	O
if	O
(	O
(	O
tell_uLong	long
)	O
==	O
MAXU32	int
)	O
return	O
(	O
ZPOS64_T	long long
)	O
-	O
1	int
;	O
else	O
return	O
tell_uLong	long
;	O
}	O
}	O
void	O
fill_zlib_filefunc64_32_def_from_filefunc32	function
(	O
zlib_filefunc64_32_def	struct
*	O
p_filefunc64_32	pointer
,	O
const	O
zlib_filefunc_def	struct
*	O
p_filefunc32	pointer
)	O
{	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zopen64_file	pointer
=	O
NULL	O
;	O
p_filefunc64_32	pointer
->	O
zopen32_file	pointer
=	O
p_filefunc32	pointer
->	O
zopen_file	pointer
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zerror_file	pointer
=	O
p_filefunc32	pointer
->	O
zerror_file	pointer
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zread_file	pointer
=	O
p_filefunc32	pointer
->	O
zread_file	pointer
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zwrite_file	pointer
=	O
p_filefunc32	pointer
->	O
zwrite_file	pointer
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
ztell64_file	pointer
=	O
NULL	O
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zseek64_file	pointer
=	O
NULL	O
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zclose_file	pointer
=	O
p_filefunc32	pointer
->	O
zclose_file	pointer
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
zerror_file	pointer
=	O
p_filefunc32	pointer
->	O
zerror_file	pointer
;	O
p_filefunc64_32	pointer
->	O
zfile_func64	struct
.	O
opaque	pointer
=	O
p_filefunc32	pointer
->	O
opaque	pointer
;	O
p_filefunc64_32	pointer
->	O
zseek32_file	pointer
=	O
p_filefunc32	pointer
->	O
zseek_file	pointer
;	O
p_filefunc64_32	pointer
->	O
ztell32_file	pointer
=	O
p_filefunc32	pointer
->	O
ztell_file	pointer
;	O
}	O
static	O
voidpf	pointer
ZCALLBACK	O
fopen_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
int	O
mode	pointer
)	O
)	O
;	O
static	O
uLong	long
ZCALLBACK	O
fread_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
void	O
*	O
buf	pointer
,	O
uLong	long
size	int
)	O
)	O
;	O
static	O
uLong	long
ZCALLBACK	O
fwrite_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
const	O
void	O
*	O
buf	pointer
,	O
uLong	long
size	int
)	O
)	O
;	O
static	O
ZPOS64_T	long long
ZCALLBACK	O
ftell64_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
)	O
;	O
static	O
long	O
ZCALLBACK	O
fseek64_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
ZPOS64_T	long long
offset	long
,	O
int	O
origin	int
)	O
)	O
;	O
static	O
int	O
ZCALLBACK	O
fclose_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
)	O
;	O
static	O
int	O
ZCALLBACK	O
ferror_file_func	function
OF	O
(	O
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
)	O
;	O
static	O
voidpf	pointer
ZCALLBACK	O
fopen_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
int	O
mode	pointer
)	O
{	O
FILE	struct
*	O
file	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
mode_fopen	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
mode	pointer
&	O
ZLIB_FILEFUNC_MODE_READWRITEFILTER	O
)	O
==	O
ZLIB_FILEFUNC_MODE_READ	O
)	O
mode_fopen	pointer
=	O
"rb"	pointer
;	O
else	O
if	O
(	O
mode	pointer
&	O
ZLIB_FILEFUNC_MODE_EXISTING	O
)	O
mode_fopen	pointer
=	O
"r+b"	pointer
;	O
else	O
if	O
(	O
mode	pointer
&	O
ZLIB_FILEFUNC_MODE_CREATE	O
)	O
mode_fopen	pointer
=	O
"wb"	pointer
;	O
if	O
(	O
(	O
filename	pointer
!=	O
NULL	O
)	O
&&	O
(	O
mode_fopen	pointer
!=	O
NULL	O
)	O
)	O
file	pointer
=	O
fopen	function
(	O
filename	pointer
,	O
mode_fopen	pointer
)	O
;	O
return	O
file	pointer
;	O
}	O
static	O
voidpf	pointer
ZCALLBACK	O
fopen64_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
const	O
void	O
*	O
filename	pointer
,	O
int	O
mode	pointer
)	O
{	O
FILE	struct
*	O
file	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
mode_fopen	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
mode	pointer
&	O
ZLIB_FILEFUNC_MODE_READWRITEFILTER	O
)	O
==	O
ZLIB_FILEFUNC_MODE_READ	O
)	O
mode_fopen	pointer
=	O
"rb"	pointer
;	O
else	O
if	O
(	O
mode	pointer
&	O
ZLIB_FILEFUNC_MODE_EXISTING	O
)	O
mode_fopen	pointer
=	O
"r+b"	pointer
;	O
else	O
if	O
(	O
mode	pointer
&	O
ZLIB_FILEFUNC_MODE_CREATE	O
)	O
mode_fopen	pointer
=	O
"wb"	pointer
;	O
if	O
(	O
(	O
filename	pointer
!=	O
NULL	O
)	O
&&	O
(	O
mode_fopen	pointer
!=	O
NULL	O
)	O
)	O
file	pointer
=	O
FOPEN_FUNC	O
(	O
(	O
const	O
char	O
*	O
)	O
filename	pointer
,	O
mode_fopen	pointer
)	O
;	O
return	O
file	pointer
;	O
}	O
static	O
uLong	long
ZCALLBACK	O
fread_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
void	O
*	O
buf	pointer
,	O
uLong	long
size	int
)	O
{	O
uLong	long
ret	long
;	O
ret	long
=	O
(	O
uLong	long
)	O
fread	function
(	O
buf	pointer
,	O
1	int
,	O
(	O
size_t	long
)	O
size	int
,	O
(	O
FILE	struct
*	O
)	O
stream	pointer
)	O
;	O
return	O
ret	long
;	O
}	O
static	O
uLong	long
ZCALLBACK	O
fwrite_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
const	O
void	O
*	O
buf	pointer
,	O
uLong	long
size	int
)	O
{	O
uLong	long
ret	long
;	O
ret	long
=	O
(	O
uLong	long
)	O
fwrite	function
(	O
buf	pointer
,	O
1	int
,	O
(	O
size_t	long
)	O
size	int
,	O
(	O
FILE	struct
*	O
)	O
stream	pointer
)	O
;	O
return	O
ret	long
;	O
}	O
static	O
long	O
ZCALLBACK	O
ftell_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
{	O
long	O
ret	long
;	O
ret	long
=	O
ftell	function
(	O
(	O
FILE	struct
*	O
)	O
stream	pointer
)	O
;	O
return	O
ret	long
;	O
}	O
static	O
ZPOS64_T	long long
ZCALLBACK	O
ftell64_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
{	O
ZPOS64_T	long long
ret	long
;	O
ret	long
=	O
FTELLO_FUNC	O
(	O
(	O
FILE	struct
*	O
)	O
stream	pointer
)	O
;	O
return	O
ret	long
;	O
}	O
static	O
long	O
ZCALLBACK	O
fseek_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
uLong	long
offset	long
,	O
int	O
origin	int
)	O
{	O
int	O
fseek_origin	int
=	O
0	int
;	O
long	O
ret	long
;	O
switch	O
(	O
origin	int
)	O
{	O
case	O
ZLIB_FILEFUNC_SEEK_CUR	O
:	O
fseek_origin	int
=	O
SEEK_CUR	int
;	O
break	O
;	O
case	O
ZLIB_FILEFUNC_SEEK_END	O
:	O
fseek_origin	int
=	O
SEEK_END	int
;	O
break	O
;	O
case	O
ZLIB_FILEFUNC_SEEK_SET	O
:	O
fseek_origin	int
=	O
SEEK_SET	int
;	O
break	O
;	O
default	O
:	O
return	O
-	O
1	int
;	O
}	O
ret	long
=	O
0	int
;	O
if	O
(	O
fseek	function
(	O
(	O
FILE	struct
*	O
)	O
stream	pointer
,	O
offset	long
,	O
fseek_origin	int
)	O
!=	O
0	int
)	O
ret	long
=	O
-	O
1	int
;	O
return	O
ret	long
;	O
}	O
static	O
long	O
ZCALLBACK	O
fseek64_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
,	O
ZPOS64_T	long long
offset	long
,	O
int	O
origin	int
)	O
{	O
int	O
fseek_origin	int
=	O
0	int
;	O
long	O
ret	long
;	O
switch	O
(	O
origin	int
)	O
{	O
case	O
ZLIB_FILEFUNC_SEEK_CUR	O
:	O
fseek_origin	int
=	O
SEEK_CUR	int
;	O
break	O
;	O
case	O
ZLIB_FILEFUNC_SEEK_END	O
:	O
fseek_origin	int
=	O
SEEK_END	int
;	O
break	O
;	O
case	O
ZLIB_FILEFUNC_SEEK_SET	O
:	O
fseek_origin	int
=	O
SEEK_SET	int
;	O
break	O
;	O
default	O
:	O
return	O
-	O
1	int
;	O
}	O
ret	long
=	O
0	int
;	O
if	O
(	O
FSEEKO_FUNC	O
(	O
(	O
FILE	struct
*	O
)	O
stream	pointer
,	O
offset	long
,	O
fseek_origin	int
)	O
!=	O
0	int
)	O
ret	long
=	O
-	O
1	int
;	O
return	O
ret	long
;	O
}	O
static	O
int	O
ZCALLBACK	O
fclose_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
{	O
int	O
ret	long
;	O
ret	long
=	O
fclose	function
(	O
(	O
FILE	struct
*	O
)	O
stream	pointer
)	O
;	O
return	O
ret	long
;	O
}	O
static	O
int	O
ZCALLBACK	O
ferror_file_func	function
(	O
voidpf	pointer
opaque	pointer
,	O
voidpf	pointer
stream	pointer
)	O
{	O
int	O
ret	long
;	O
ret	long
=	O
ferror	function
(	O
(	O
FILE	struct
*	O
)	O
stream	pointer
)	O
;	O
return	O
ret	long
;	O
}	O
void	O
fill_fopen_filefunc	function
(	O
pzlib_filefunc_def	pointer
)	O
zlib_filefunc_def	struct
*	O
pzlib_filefunc_def	pointer
;	O
{	O
pzlib_filefunc_def	pointer
->	O
zopen_file	pointer
=	O
fopen_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zread_file	pointer
=	O
fread_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zwrite_file	pointer
=	O
fwrite_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
ztell_file	pointer
=	O
ftell_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zseek_file	pointer
=	O
fseek_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zclose_file	pointer
=	O
fclose_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zerror_file	pointer
=	O
ferror_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
opaque	pointer
=	O
NULL	O
;	O
}	O
void	O
fill_fopen64_filefunc	function
(	O
zlib_filefunc64_def	struct
*	O
pzlib_filefunc_def	pointer
)	O
{	O
pzlib_filefunc_def	pointer
->	O
zopen64_file	pointer
=	O
fopen64_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zread_file	pointer
=	O
fread_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zwrite_file	pointer
=	O
fwrite_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
ztell64_file	pointer
=	O
ftell64_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zseek64_file	pointer
=	O
fseek64_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zclose_file	pointer
=	O
fclose_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
zerror_file	pointer
=	O
ferror_file_func	function
;	O
pzlib_filefunc_def	pointer
->	O
opaque	pointer
=	O
NULL	O
;	O
}	O
