int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
struct	O
grecs_version_info	struct
*	O
vinfo	pointer
;	O
int	O
res	int
;	O
if	O
(	O
argc	int
>	O
3	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"usage: %s [version [version]]\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
argc	int
==	O
2	int
)	O
exit	function
(	O
!	O
grecs_version_ok	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
argc	int
==	O
3	int
)	O
exit	function
(	O
grecs_version_cmp	function
(	O
argv	pointer
[	O
1	int
]	O
,	O
argv	pointer
[	O
2	int
]	O
,	O
&	O
res	int
)	O
?	O
1	int
:	O
res	int
==	O
0	int
?	O
0	int
:	O
res	int
<	O
0	int
?	O
2	int
:	O
3	int
)	O
;	O
vinfo	pointer
=	O
grecs_version	function
(	O
)	O
;	O
printf	function
(	O
"package: %s\n"	pointer
,	O
vinfo	pointer
->	O
package	pointer
)	O
;	O
printf	function
(	O
"version: %s\n"	pointer
,	O
vinfo	pointer
->	O
version	pointer
)	O
;	O
printf	function
(	O
"major: %d\n"	pointer
,	O
vinfo	pointer
->	O
major	int
)	O
;	O
printf	function
(	O
"minor: %d\n"	pointer
,	O
vinfo	pointer
->	O
minor	int
)	O
;	O
printf	function
(	O
"patch: %d\n"	pointer
,	O
vinfo	pointer
->	O
patch	int
)	O
;	O
printf	function
(	O
"suffix:"	pointer
)	O
;	O
if	O
(	O
vinfo	pointer
->	O
suffix	pointer
&&	O
vinfo	pointer
->	O
suffix	pointer
[	O
0	int
]	O
)	O
printf	function
(	O
" %s"	pointer
,	O
vinfo	pointer
->	O
suffix	pointer
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
grecs_version_info_free	function
(	O
vinfo	pointer
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
