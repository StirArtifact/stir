static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: os_alloc.c,v 1.5 2014/04/17 20:27:32 sebdiaz Exp $"	pointer
;	O
int	O
CDB___os_strdup	function
(	O
dbenv	pointer
,	O
str	pointer
,	O
storep	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
const	O
char	O
*	O
str	pointer
;	O
void	O
*	O
storep	pointer
;	O
{	O
size_t	long
size	int
;	O
int	O
ret	int
;	O
void	O
*	O
p	pointer
;	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
=	O
NULL	O
;	O
size	int
=	O
strlen	function
(	O
str	pointer
)	O
+	O
1	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_malloc	function
(	O
dbenv	pointer
,	O
size	int
,	O
NULL	O
,	O
&	O
p	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
memcpy	function
(	O
p	pointer
,	O
str	pointer
,	O
size	int
)	O
;	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
=	O
p	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___os_calloc	function
(	O
dbenv	pointer
,	O
num	long
,	O
size	int
,	O
storep	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
size_t	long
num	long
,	O
size	int
;	O
void	O
*	O
storep	pointer
;	O
{	O
void	O
*	O
p	pointer
;	O
int	O
ret	int
;	O
size	int
*=	O
num	long
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_malloc	function
(	O
dbenv	pointer
,	O
size	int
,	O
NULL	O
,	O
&	O
p	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
memset	function
(	O
p	pointer
,	O
0	int
,	O
size	int
)	O
;	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
=	O
p	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___os_malloc	function
(	O
dbenv	pointer
,	O
size	int
,	O
db_malloc	pointer
,	O
storep	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
size_t	long
size	int
;	O
void	O
*	O
(	O
*	O
db_malloc	pointer
)	O
__P	O
(	O
(	O
size_t	long
)	O
)	O
,	O
*	O
storep	pointer
;	O
{	O
int	O
ret	int
;	O
void	O
*	O
p	pointer
;	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
=	O
NULL	O
;	O
if	O
(	O
size	int
==	O
0	int
)	O
++	O
size	int
;	O
CDB___os_set_errno	function
(	O
0	int
)	O
;	O
if	O
(	O
db_malloc	pointer
!=	O
NULL	O
)	O
p	pointer
=	O
db_malloc	pointer
(	O
size	int
)	O
;	O
else	O
if	O
(	O
CDB___db_jump	struct
.	O
j_malloc	pointer
!=	O
NULL	O
)	O
p	pointer
=	O
CDB___db_jump	struct
.	O
j_malloc	pointer
(	O
size	int
)	O
;	O
else	O
p	pointer
=	O
malloc	function
(	O
size	int
)	O
;	O
if	O
(	O
p	pointer
==	O
NULL	O
)	O
{	O
ret	int
=	O
CDB___os_get_errno	function
(	O
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
CDB___os_set_errno	function
(	O
ENOMEM	int
)	O
;	O
ret	int
=	O
ENOMEM	int
;	O
}	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"malloc: %s: %lu"	pointer
,	O
strerror	function
(	O
ret	int
)	O
,	O
(	O
u_long	long
)	O
size	int
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
=	O
p	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___os_realloc	function
(	O
dbenv	pointer
,	O
size	int
,	O
db_realloc	pointer
,	O
storep	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
size_t	long
size	int
;	O
void	O
*	O
(	O
*	O
db_realloc	pointer
)	O
__P	O
(	O
(	O
void	O
*	O
,	O
size_t	long
)	O
)	O
,	O
*	O
storep	pointer
;	O
{	O
int	O
ret	int
;	O
void	O
*	O
p	pointer
,	O
*	O
ptr	pointer
;	O
ptr	pointer
=	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
&&	O
db_realloc	pointer
==	O
NULL	O
)	O
return	O
(	O
CDB___os_malloc	function
(	O
dbenv	pointer
,	O
size	int
,	O
NULL	O
,	O
storep	pointer
)	O
)	O
;	O
if	O
(	O
size	int
==	O
0	int
)	O
++	O
size	int
;	O
CDB___os_set_errno	function
(	O
0	int
)	O
;	O
if	O
(	O
db_realloc	pointer
!=	O
NULL	O
)	O
p	pointer
=	O
db_realloc	pointer
(	O
ptr	pointer
,	O
size	int
)	O
;	O
else	O
if	O
(	O
CDB___db_jump	struct
.	O
j_realloc	pointer
!=	O
NULL	O
)	O
p	pointer
=	O
CDB___db_jump	struct
.	O
j_realloc	pointer
(	O
ptr	pointer
,	O
size	int
)	O
;	O
else	O
p	pointer
=	O
realloc	function
(	O
ptr	pointer
,	O
size	int
)	O
;	O
if	O
(	O
p	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_get_errno	function
(	O
)	O
)	O
==	O
0	int
)	O
{	O
ret	int
=	O
ENOMEM	int
;	O
CDB___os_set_errno	function
(	O
ENOMEM	int
)	O
;	O
}	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"realloc: %s: %lu"	pointer
,	O
strerror	function
(	O
ret	int
)	O
,	O
(	O
u_long	long
)	O
size	int
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
*	O
(	O
void	O
*	O
*	O
)	O
storep	pointer
=	O
p	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
void	O
CDB___os_free	function
(	O
ptr	pointer
,	O
size	int
)	O
void	O
*	O
ptr	pointer
;	O
size_t	long
size	int
;	O
{	O
if	O
(	O
size	int
)	O
{	O
}	O
COMPQUIET	O
(	O
size	int
,	O
0	int
)	O
;	O
if	O
(	O
CDB___db_jump	struct
.	O
j_free	pointer
!=	O
NULL	O
)	O
CDB___db_jump	struct
.	O
j_free	pointer
(	O
ptr	pointer
)	O
;	O
else	O
free	function
(	O
ptr	pointer
)	O
;	O
}	O
void	O
CDB___os_freestr	function
(	O
ptr	pointer
)	O
void	O
*	O
ptr	pointer
;	O
{	O
if	O
(	O
CDB___db_jump	struct
.	O
j_free	pointer
!=	O
NULL	O
)	O
CDB___db_jump	struct
.	O
j_free	pointer
(	O
ptr	pointer
)	O
;	O
else	O
free	function
(	O
ptr	pointer
)	O
;	O
}	O
void	O
*	O
CDB___ua_memcpy	function
(	O
dst	pointer
,	O
src	pointer
,	O
len	long
)	O
void	O
*	O
dst	pointer
;	O
const	O
void	O
*	O
src	pointer
;	O
size_t	long
len	long
;	O
{	O
return	O
(	O
memcpy	function
(	O
dst	pointer
,	O
src	pointer
,	O
len	long
)	O
)	O
;	O
}	O
