int	O
nettle_buffer_grow	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
,	O
size_t	long
length	long
)	O
{	O
assert	O
(	O
buffer	pointer
->	O
size	long
<=	O
buffer	pointer
->	O
alloc	long
)	O
;	O
if	O
(	O
buffer	pointer
->	O
size	long
+	O
length	long
>	O
buffer	pointer
->	O
alloc	long
)	O
{	O
size_t	long
alloc	long
;	O
uint8_t	char
*	O
p	pointer
;	O
if	O
(	O
!	O
buffer	pointer
->	O
realloc	function
)	O
return	O
0	int
;	O
alloc	long
=	O
buffer	pointer
->	O
alloc	long
*	O
2	int
+	O
length	long
+	O
100	int
;	O
p	pointer
=	O
buffer	pointer
->	O
realloc	function
(	O
buffer	pointer
->	O
realloc_ctx	pointer
,	O
buffer	pointer
->	O
contents	pointer
,	O
alloc	long
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
0	int
;	O
buffer	pointer
->	O
contents	pointer
=	O
p	pointer
;	O
buffer	pointer
->	O
alloc	long
=	O
alloc	long
;	O
}	O
return	O
1	int
;	O
}	O
void	O
nettle_buffer_init_realloc	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
,	O
void	O
*	O
realloc_ctx	pointer
,	O
nettle_realloc_func	function
*	O
realloc	function
)	O
{	O
buffer	pointer
->	O
contents	pointer
=	O
NULL	O
;	O
buffer	pointer
->	O
alloc	long
=	O
0	int
;	O
buffer	pointer
->	O
realloc	function
=	O
realloc	function
;	O
buffer	pointer
->	O
realloc_ctx	pointer
=	O
realloc_ctx	pointer
;	O
buffer	pointer
->	O
size	long
=	O
0	int
;	O
}	O
void	O
nettle_buffer_init_size	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
space	pointer
)	O
{	O
buffer	pointer
->	O
contents	pointer
=	O
space	pointer
;	O
buffer	pointer
->	O
alloc	long
=	O
length	long
;	O
buffer	pointer
->	O
realloc	function
=	O
NULL	O
;	O
buffer	pointer
->	O
realloc_ctx	pointer
=	O
NULL	O
;	O
buffer	pointer
->	O
size	long
=	O
0	int
;	O
}	O
void	O
nettle_buffer_clear	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
)	O
{	O
if	O
(	O
buffer	pointer
->	O
realloc	function
)	O
buffer	pointer
->	O
realloc	function
(	O
buffer	pointer
->	O
realloc_ctx	pointer
,	O
buffer	pointer
->	O
contents	pointer
,	O
0	int
)	O
;	O
buffer	pointer
->	O
contents	pointer
=	O
NULL	O
;	O
buffer	pointer
->	O
alloc	long
=	O
0	int
;	O
buffer	pointer
->	O
size	long
=	O
0	int
;	O
}	O
void	O
nettle_buffer_reset	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
)	O
{	O
buffer	pointer
->	O
size	long
=	O
0	int
;	O
}	O
uint8_t	char
*	O
nettle_buffer_space	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
,	O
size_t	long
length	long
)	O
{	O
uint8_t	char
*	O
p	pointer
;	O
if	O
(	O
!	O
nettle_buffer_grow	function
(	O
buffer	pointer
,	O
length	long
)	O
)	O
return	O
NULL	O
;	O
p	pointer
=	O
buffer	pointer
->	O
contents	pointer
+	O
buffer	pointer
->	O
size	long
;	O
buffer	pointer
->	O
size	long
+=	O
length	long
;	O
return	O
p	pointer
;	O
}	O
int	O
nettle_buffer_write	function
(	O
struct	O
nettle_buffer	struct
*	O
buffer	pointer
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	pointer
)	O
{	O
uint8_t	char
*	O
p	pointer
=	O
nettle_buffer_space	function
(	O
buffer	pointer
,	O
length	long
)	O
;	O
if	O
(	O
p	pointer
)	O
{	O
memcpy	function
(	O
p	pointer
,	O
data	pointer
,	O
length	long
)	O
;	O
return	O
1	int
;	O
}	O
else	O
return	O
0	int
;	O
}	O
int	O
nettle_buffer_copy	function
(	O
struct	O
nettle_buffer	struct
*	O
dst	pointer
,	O
const	O
struct	O
nettle_buffer	struct
*	O
src	pointer
)	O
{	O
return	O
nettle_buffer_write	function
(	O
dst	pointer
,	O
src	pointer
->	O
size	long
,	O
src	pointer
->	O
contents	pointer
)	O
;	O
}	O
