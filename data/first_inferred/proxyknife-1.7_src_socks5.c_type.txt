extern	O
int	O
h_errno	O
;	O
void	O
s5_build_auth	function
(	O
)	O
{	O
unsigned	O
char	O
ulen	char
;	O
unsigned	O
char	O
plen	char
;	O
char	O
*	O
p	pointer
;	O
int	O
len	int
;	O
ulen	char
=	O
(	O
unsigned	O
char	O
)	O
strlen	function
(	O
my	struct
.	O
myuser	pointer
)	O
;	O
if	O
(	O
ulen	char
==	O
0	int
)	O
xexit	function
(	O
EXIT_FAILURE	int
)	O
;	O
plen	char
=	O
(	O
unsigned	O
char	O
)	O
strlen	function
(	O
my	struct
.	O
mypass	pointer
)	O
;	O
len	int
=	O
ulen	char
+	O
plen	char
+	O
3	int
;	O
p	pointer
=	O
xmalloc	function
(	O
len	int
+	O
1	int
)	O
;	O
snprintf	function
(	O
p	pointer
,	O
len	int
+	O
1	int
,	O
"\x01%c%s%c%s"	pointer
,	O
ulen	char
,	O
my	struct
.	O
myuser	pointer
,	O
plen	char
,	O
my	struct
.	O
mypass	pointer
)	O
;	O
my	struct
.	O
socks5authreq	pointer
=	O
p	pointer
;	O
}	O
int	O
s5_nego_auth	function
(	O
int	O
sockfd	int
)	O
{	O
char	O
ret	array
[	O
2	int
]	O
;	O
int	O
len	int
;	O
if	O
(	O
write	function
(	O
sockfd	int
,	O
"\x05\x01\x02"	pointer
,	O
3	int
)	O
==	O
3	int
)	O
{	O
if	O
(	O
read	function
(	O
sockfd	int
,	O
ret	array
,	O
2	int
)	O
==	O
2	int
)	O
{	O
if	O
(	O
!	O
strncmp	function
(	O
ret	array
,	O
"\x05\x02"	pointer
,	O
2	int
)	O
)	O
{	O
len	int
=	O
strlen	function
(	O
my	struct
.	O
socks5authreq	pointer
)	O
;	O
if	O
(	O
write	function
(	O
sockfd	int
,	O
my	struct
.	O
socks5authreq	pointer
,	O
len	int
)	O
==	O
len	int
)	O
{	O
if	O
(	O
read	function
(	O
sockfd	int
,	O
ret	array
,	O
2	int
)	O
==	O
2	int
)	O
{	O
if	O
(	O
!	O
strncmp	function
(	O
ret	array
,	O
"\x01\x00"	pointer
,	O
2	int
)	O
)	O
{	O
return	O
0	int
;	O
}	O
}	O
}	O
}	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
s5_nego_free	function
(	O
int	O
sockfd	int
)	O
{	O
char	O
ret	array
[	O
2	int
]	O
;	O
if	O
(	O
write	function
(	O
sockfd	int
,	O
"\x05\x01\x00"	pointer
,	O
3	int
)	O
==	O
3	int
)	O
{	O
if	O
(	O
read	function
(	O
sockfd	int
,	O
ret	array
,	O
2	int
)	O
==	O
2	int
)	O
{	O
if	O
(	O
!	O
strncmp	function
(	O
ret	array
,	O
"\x05\x00"	pointer
,	O
2	int
)	O
)	O
return	O
0	int
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
s5con	function
(	O
int	O
sockfd	int
,	O
struct	O
sockaddr	struct
*	O
serv	pointer
)	O
{	O
unsigned	O
char	O
p	pointer
[	O
10	int
]	O
=	O
{	O
"\x05\x01\x00\x01"	pointer
}	O
;	O
*	O
(	O
struct	O
in_addr	struct
*	O
)	O
(	O
p	pointer
+	O
4	int
)	O
=	O
(	O
(	O
struct	O
sockaddr_in	struct
*	O
)	O
serv	pointer
)	O
->	O
sin_addr	struct
;	O
*	O
(	O
short	O
int	O
*	O
)	O
(	O
p	pointer
+	O
8	int
)	O
=	O
(	O
short	O
int	O
)	O
(	O
(	O
(	O
struct	O
sockaddr_in	struct
*	O
)	O
serv	pointer
)	O
->	O
sin_port	short
)	O
;	O
if	O
(	O
write	function
(	O
sockfd	int
,	O
p	pointer
,	O
10	int
)	O
==	O
10	int
)	O
{	O
if	O
(	O
read	function
(	O
sockfd	int
,	O
p	pointer
,	O
10	int
)	O
==	O
10	int
)	O
{	O
if	O
(	O
!	O
strncmp	function
(	O
(	O
const	O
char	O
*	O
)	O
p	pointer
,	O
"\x05\x00\x00"	pointer
,	O
3	int
)	O
)	O
return	O
0	int
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
CONVIASOCKS5_MAIN	function
(	O
int	O
sockfd	int
,	O
struct	O
sockaddr	struct
*	O
addr	pointer
)	O
{	O
int	O
ret	array
,	O
len	int
,	O
offset	int
;	O
char	O
*	O
p	pointer
;	O
ret	array
=	O
connect	function
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
(	O
my	struct
.	O
myaddr	struct
)	O
,	O
sizeof	O
(	O
struct	O
sockaddr	struct
)	O
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
{	O
perror	function
(	O
__FILE__	O
": CONVIASOCKS5_MAIN:connect:Connect to myaddr"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
my	struct
.	O
mytype	int
==	O
SOCKS5_CONNECT_AUTH	int
)	O
{	O
ret	array
=	O
s5_nego_auth	function
(	O
sockfd	int
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
my	struct
.	O
mytype	int
==	O
SOCKS5_CONNECT	int
)	O
{	O
ret	array
=	O
s5_nego_free	function
(	O
sockfd	int
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s %s: CONVIASOCKS5_MAIN:This message can't  be printed!\n"	pointer
,	O
progname	pointer
,	O
__FILE__	O
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
ret	array
=	O
s5con	function
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
addr	pointer
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
CONVIASOCKS5	function
(	O
int	O
sockfd	int
,	O
struct	O
timeval	struct
*	O
start	pointer
,	O
struct	O
timeval	struct
*	O
end	pointer
,	O
struct	O
thread_mem	struct
*	O
thread_mem	struct
)	O
{	O
int	O
ret	array
,	O
len	int
,	O
offset	int
;	O
char	O
*	O
p	pointer
;	O
ret	array
=	O
connect	function
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
(	O
my	struct
.	O
myaddr	struct
)	O
,	O
sizeof	O
(	O
struct	O
sockaddr	struct
)	O
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s %s: CONVIASOCKS5:connect:Connect to myaddr"	pointer
,	O
progname	pointer
,	O
__FILE__	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
my	struct
.	O
mytype	int
==	O
SOCKS5_CONNECT_AUTH	int
)	O
{	O
ret	array
=	O
s5_nego_auth	function
(	O
sockfd	int
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
my	struct
.	O
mytype	int
==	O
SOCKS5_CONNECT	int
)	O
{	O
ret	array
=	O
s5_nego_free	function
(	O
sockfd	int
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: CONVIASOCKS5:This message can't  be printed!\n"	pointer
,	O
progname	pointer
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
gettimeofday	function
(	O
start	pointer
,	O
NULL	O
)	O
;	O
ret	array
=	O
s5con	function
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
(	O
thread_mem	struct
->	O
queue	struct
.	O
proxyaddr	struct
)	O
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
gettimeofday	function
(	O
end	pointer
,	O
NULL	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
S5PCONGET	function
(	O
int	O
sockfd	int
,	O
struct	O
timeval	struct
*	O
start_CON	pointer
,	O
struct	O
timeval	struct
*	O
end_CON	pointer
,	O
struct	O
timeval	struct
*	O
start_GET	pointer
,	O
struct	O
thread_mem	struct
*	O
thread_mem	struct
)	O
{	O
int	O
ret	array
;	O
ret	array
=	O
s5_nego_free	function
(	O
sockfd	int
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
gettimeofday	function
(	O
start_CON	pointer
,	O
NULL	O
)	O
;	O
ret	array
=	O
s5con	function
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
(	O
target	struct
.	O
targetaddr	struct
)	O
)	O
;	O
if	O
(	O
ret	array
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
gettimeofday	function
(	O
end_CON	pointer
,	O
NULL	O
)	O
;	O
return	O
GET	function
(	O
sockfd	int
,	O
start_GET	pointer
,	O
thread_mem	struct
)	O
;	O
}	O
