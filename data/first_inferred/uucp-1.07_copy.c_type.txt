const	O
char	O
copy_rcsid	array
[	O
]	O
=	O
"$Id: copy.c,v 1.22 2002/03/05 19:10:41 ian Rel $"	pointer
;	O
boolean	int
fcopy_file	function
(	O
zfrom	pointer
,	O
zto	pointer
,	O
fpublic	int
,	O
fmkdirs	int
,	O
fsignals	int
)	O
const	O
char	O
*	O
zfrom	pointer
;	O
const	O
char	O
*	O
zto	pointer
;	O
boolean	int
fpublic	int
;	O
boolean	int
fmkdirs	int
;	O
boolean	int
fsignals	int
;	O
{	O
FILE	struct
*	O
efrom	pointer
;	O
boolean	int
fret	int
;	O
efrom	pointer
=	O
fopen	function
(	O
zfrom	pointer
,	O
BINREAD	pointer
)	O
;	O
if	O
(	O
efrom	pointer
==	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fopen (%s): %s"	pointer
,	O
zfrom	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
fret	int
=	O
fcopy_open_file	function
(	O
efrom	pointer
,	O
zto	pointer
,	O
fpublic	int
,	O
fmkdirs	int
,	O
fsignals	int
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
efrom	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fcopy_open_file	function
(	O
efrom	pointer
,	O
zto	pointer
,	O
fpublic	int
,	O
fmkdirs	int
,	O
fsignals	int
)	O
FILE	struct
*	O
efrom	pointer
;	O
const	O
char	O
*	O
zto	pointer
;	O
boolean	int
fpublic	int
;	O
boolean	int
fmkdirs	int
;	O
boolean	int
fsignals	int
;	O
{	O
FILE	struct
*	O
eto	pointer
;	O
char	O
ab	array
[	O
8192	int
]	O
;	O
size_t	long
c	long
;	O
eto	pointer
=	O
esysdep_fopen	function
(	O
zto	pointer
,	O
fpublic	int
,	O
FALSE	O
,	O
fmkdirs	int
)	O
;	O
if	O
(	O
eto	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
while	O
(	O
(	O
c	long
=	O
fread	function
(	O
ab	array
,	O
sizeof	O
(	O
char	O
)	O
,	O
sizeof	O
ab	array
,	O
efrom	pointer
)	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
fwrite	function
(	O
ab	array
,	O
sizeof	O
(	O
char	O
)	O
,	O
(	O
size_t	long
)	O
c	long
,	O
eto	pointer
)	O
!=	O
c	long
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fwrite: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
eto	pointer
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zto	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fsignals	int
&&	O
FGOT_SIGNAL	O
(	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
eto	pointer
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zto	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
!	O
fsysdep_sync	function
(	O
eto	pointer
,	O
zto	pointer
)	O
)	O
{	O
(	O
void	O
)	O
fclose	function
(	O
eto	pointer
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zto	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fclose	function
(	O
eto	pointer
)	O
!=	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fclose: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zto	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
ferror	function
(	O
efrom	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fread: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zto	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
