mu_list_t	pointer
mu_sieve_include_path	pointer
=	O
NULL	O
;	O
mu_list_t	pointer
mu_sieve_library_path	pointer
=	O
NULL	O
;	O
mu_list_t	pointer
mu_sieve_library_path_prefix	pointer
=	O
NULL	O
;	O
mu_debug_handle_t	int
mu_sieve_debug_handle	int
;	O
void	O
mu_sieve_debug_init	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
mu_sieve_debug_handle	int
)	O
mu_sieve_debug_handle	int
=	O
mu_debug_register_category	function
(	O
"sieve"	pointer
)	O
;	O
}	O
struct	O
sieve_settings	struct
{	O
int	O
clearflags	int
;	O
mu_list_t	pointer
include_path	pointer
;	O
mu_list_t	pointer
library_path_prefix	pointer
;	O
mu_list_t	pointer
library_path	pointer
;	O
}	O
;	O
static	O
struct	O
sieve_settings	struct
sieve_settings	struct
;	O
static	O
int	O
_path_append	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
mu_list_t	pointer
*	O
plist	pointer
=	O
data	pointer
;	O
char	O
*	O
p	pointer
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
*	O
plist	pointer
)	O
{	O
rc	int
=	O
mu_list_create	function
(	O
plist	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"cannot create list: %s"	pointer
)	O
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
mu_list_set_destroy_item	function
(	O
*	O
plist	pointer
,	O
mu_list_free_item	function
)	O
;	O
}	O
p	pointer
=	O
strdup	function
(	O
item	pointer
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
rc	int
=	O
errno	O
;	O
else	O
rc	int
=	O
mu_list_append	function
(	O
*	O
plist	pointer
,	O
p	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"can't add directory to path: %s"	pointer
)	O
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
cb_clear_library_path	function
(	O
void	O
*	O
data	pointer
,	O
mu_config_value_t	struct
*	O
val	pointer
)	O
{	O
int	O
flag	int
;	O
if	O
(	O
mu_cfg_assert_value_type	function
(	O
val	pointer
,	O
MU_CFG_STRING	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
mu_str_to_c	function
(	O
val	pointer
->	O
v	array
.	O
string	pointer
,	O
mu_c_bool	int
,	O
&	O
flag	int
,	O
NULL	O
)	O
)	O
{	O
mu_error	function
(	O
_	O
(	O
"not a boolean"	pointer
)	O
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
flag	int
)	O
sieve_settings	struct
.	O
clearflags	int
|=	O
MU_SIEVE_CLEAR_LIBRARY_PATH	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
cb_clear_include_path	function
(	O
void	O
*	O
data	pointer
,	O
mu_config_value_t	struct
*	O
val	pointer
)	O
{	O
int	O
flag	int
;	O
if	O
(	O
mu_cfg_assert_value_type	function
(	O
val	pointer
,	O
MU_CFG_STRING	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
mu_str_to_c	function
(	O
val	pointer
->	O
v	array
.	O
string	pointer
,	O
mu_c_bool	int
,	O
&	O
flag	int
,	O
NULL	O
)	O
)	O
{	O
mu_error	function
(	O
_	O
(	O
"not a boolean"	pointer
)	O
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
flag	int
)	O
sieve_settings	struct
.	O
clearflags	int
|=	O
MU_SIEVE_CLEAR_INCLUDE_PATH	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_add_path	function
(	O
const	O
char	O
*	O
arg	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
mu_list_t	pointer
*	O
plist	pointer
=	O
data	pointer
;	O
if	O
(	O
!	O
*	O
plist	pointer
)	O
{	O
int	O
rc	int
=	O
mu_list_create	function
(	O
plist	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"cannot create list: %s"	pointer
)	O
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
mu_list_set_destroy_item	function
(	O
*	O
plist	pointer
,	O
mu_list_free_item	function
)	O
;	O
}	O
return	O
mu_string_split	function
(	O
arg	pointer
,	O
":"	pointer
,	O
*	O
plist	pointer
)	O
;	O
}	O
static	O
int	O
cb_include_path	function
(	O
void	O
*	O
data	pointer
,	O
mu_config_value_t	struct
*	O
val	pointer
)	O
{	O
return	O
mu_cfg_string_value_cb	function
(	O
val	pointer
,	O
_add_path	function
,	O
&	O
sieve_settings	struct
.	O
include_path	pointer
)	O
;	O
}	O
static	O
int	O
cb_library_path	function
(	O
void	O
*	O
data	pointer
,	O
mu_config_value_t	struct
*	O
val	pointer
)	O
{	O
return	O
mu_cfg_string_value_cb	function
(	O
val	pointer
,	O
_add_path	function
,	O
&	O
sieve_settings	struct
.	O
library_path	pointer
)	O
;	O
}	O
static	O
int	O
cb_library_path_prefix	function
(	O
void	O
*	O
data	pointer
,	O
mu_config_value_t	struct
*	O
val	pointer
)	O
{	O
return	O
mu_cfg_string_value_cb	function
(	O
val	pointer
,	O
_add_path	function
,	O
&	O
sieve_settings	struct
.	O
library_path_prefix	pointer
)	O
;	O
}	O
static	O
struct	O
mu_cfg_param	struct
mu_sieve_param	array
[	O
]	O
=	O
{	O
{	O
"clear-library-path"	pointer
,	O
mu_cfg_callback	int
,	O
NULL	O
,	O
0	int
,	O
cb_clear_library_path	function
,	O
N_	O
(	O
"Clear library search path."	pointer
)	O
,	O
N_	O
(	O
"arg: directory list"	pointer
)	O
}	O
,	O
{	O
"clear-include-path"	pointer
,	O
mu_cfg_callback	int
,	O
NULL	O
,	O
0	int
,	O
cb_clear_include_path	function
,	O
N_	O
(	O
"Clear include search path."	pointer
)	O
,	O
N_	O
(	O
"arg: directory list"	pointer
)	O
}	O
,	O
{	O
"library-path"	pointer
,	O
mu_cfg_callback	int
,	O
NULL	O
,	O
0	int
,	O
cb_library_path	function
,	O
N_	O
(	O
"Add directories to the library search path.  Argument is a "	pointer
"colon-separated list of directories."	pointer
)	O
,	O
N_	O
(	O
"arg: directory list"	pointer
)	O
}	O
,	O
{	O
"library-path-prefix"	pointer
,	O
mu_cfg_callback	int
,	O
NULL	O
,	O
0	int
,	O
cb_library_path_prefix	function
,	O
N_	O
(	O
"Add directories to the beginning of the library search path.  "	pointer
"Argument is a colon-separated list of directories."	pointer
)	O
,	O
N_	O
(	O
"arg: directory list"	pointer
)	O
}	O
,	O
{	O
"include-path"	pointer
,	O
mu_cfg_callback	int
,	O
NULL	O
,	O
0	int
,	O
cb_include_path	function
,	O
N_	O
(	O
"Add directories to the include search path.  Argument is a "	pointer
"colon-separated list of directories."	pointer
)	O
,	O
N_	O
(	O
"arg: directory list"	pointer
)	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
static	O
void	O
cli_includedir	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
_add_path	function
(	O
arg	pointer
,	O
&	O
sieve_settings	struct
.	O
include_path	pointer
)	O
;	O
}	O
static	O
void	O
cli_libdir	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
_add_path	function
(	O
arg	pointer
,	O
&	O
sieve_settings	struct
.	O
library_path	pointer
)	O
;	O
}	O
static	O
void	O
cli_libdir_prefix	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
_add_path	function
(	O
arg	pointer
,	O
&	O
sieve_settings	struct
.	O
library_path_prefix	pointer
)	O
;	O
}	O
static	O
void	O
cli_clear_include_path	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
sieve_settings	struct
.	O
clearflags	int
|=	O
MU_SIEVE_CLEAR_INCLUDE_PATH	int
;	O
}	O
static	O
void	O
cli_clear_library_path	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
sieve_settings	struct
.	O
clearflags	int
|=	O
MU_SIEVE_CLEAR_LIBRARY_PATH	int
;	O
}	O
static	O
struct	O
mu_option	struct
sieve_option	array
[	O
]	O
=	O
{	O
MU_OPTION_GROUP	O
(	O
N_	O
(	O
"Sieve options"	pointer
)	O
)	O
,	O
{	O
"includedir"	pointer
,	O
'I'	O
,	O
N_	O
(	O
"DIR"	pointer
)	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"append DIR to the list of directories searched for include files"	pointer
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
cli_includedir	function
}	O
,	O
{	O
"libdir"	pointer
,	O
'L'	O
,	O
N_	O
(	O
"DIR"	pointer
)	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"append DIR to the list of directories searched for library files"	pointer
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
cli_libdir	function
}	O
,	O
{	O
"libdir-prefix"	pointer
,	O
0	int
,	O
N_	O
(	O
"DIR"	pointer
)	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"add DIR to the beginning of the list of directories searched for "	pointer
"library files"	pointer
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
cli_libdir_prefix	function
}	O
,	O
{	O
"clear-include-path"	pointer
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"clear Sieve include path"	pointer
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
cli_clear_include_path	function
}	O
,	O
{	O
"clear-library-path"	pointer
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"clear Sieve library path"	pointer
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
cli_clear_library_path	function
}	O
,	O
{	O
"clearpath"	pointer
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_ALIAS	int
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
void	O
sieve_commit	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
if	O
(	O
sieve_settings	struct
.	O
clearflags	int
&	O
MU_SIEVE_CLEAR_INCLUDE_PATH	int
)	O
mu_list_destroy	function
(	O
&	O
mu_sieve_include_path	pointer
)	O
;	O
mu_list_foreach	function
(	O
sieve_settings	struct
.	O
include_path	pointer
,	O
_path_append	function
,	O
&	O
mu_sieve_include_path	pointer
)	O
;	O
if	O
(	O
sieve_settings	struct
.	O
clearflags	int
&	O
MU_SIEVE_CLEAR_LIBRARY_PATH	int
)	O
{	O
mu_list_destroy	function
(	O
&	O
mu_sieve_library_path	pointer
)	O
;	O
mu_list_destroy	function
(	O
&	O
mu_sieve_library_path_prefix	pointer
)	O
;	O
}	O
mu_list_foreach	function
(	O
sieve_settings	struct
.	O
library_path_prefix	pointer
,	O
_path_append	function
,	O
&	O
mu_sieve_library_path_prefix	pointer
)	O
;	O
mu_list_foreach	function
(	O
sieve_settings	struct
.	O
library_path	pointer
,	O
_path_append	function
,	O
&	O
mu_sieve_library_path	pointer
)	O
;	O
mu_list_destroy	function
(	O
&	O
sieve_settings	struct
.	O
library_path	pointer
)	O
;	O
mu_list_destroy	function
(	O
&	O
sieve_settings	struct
.	O
library_path_prefix	pointer
)	O
;	O
mu_list_destroy	function
(	O
&	O
sieve_settings	struct
.	O
include_path	pointer
)	O
;	O
mu_sieve_debug_init	function
(	O
)	O
;	O
}	O
struct	O
mu_cli_capa	struct
mu_cli_capa_sieve	struct
=	O
{	O
"sieve"	pointer
,	O
sieve_option	array
,	O
mu_sieve_param	array
,	O
NULL	O
,	O
sieve_commit	function
}	O
;	O
