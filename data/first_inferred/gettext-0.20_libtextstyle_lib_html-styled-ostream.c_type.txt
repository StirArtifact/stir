const	O
typeinfo_t	O
html_styled_ostream_typeinfo	O
=	O
{	O
"html_styled_ostream"	pointer
}	O
;	O
static	O
const	O
typeinfo_t	O
*	O
const	O
html_styled_ostream_superclasses	array
[	O
]	O
=	O
{	O
html_styled_ostream_SUPERCLASSES	O
}	O
;	O
static	O
void	O
html_styled_ostream__write_mem	function
(	O
html_styled_ostream_t	O
stream	int
,	O
const	O
void	O
*	O
data	pointer
,	O
size_t	O
len	int
)	O
{	O
html_ostream_write_mem	function
(	O
stream	int
->	O
html_destination	O
,	O
data	pointer
,	O
len	int
)	O
;	O
}	O
static	O
void	O
html_styled_ostream__flush	function
(	O
html_styled_ostream_t	O
stream	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
html_ostream_flush	function
(	O
stream	int
->	O
html_destination	O
,	O
scope	int
)	O
;	O
}	O
static	O
void	O
html_styled_ostream__free	function
(	O
html_styled_ostream_t	O
stream	int
)	O
{	O
html_ostream_free	function
(	O
stream	int
->	O
html_destination	O
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"</body>\n"	pointer
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"</html>\n"	pointer
)	O
;	O
free	function
(	O
stream	int
)	O
;	O
}	O
static	O
void	O
html_styled_ostream__begin_use_class	function
(	O
html_styled_ostream_t	O
stream	int
,	O
const	O
char	O
*	O
classname	pointer
)	O
{	O
html_ostream_begin_span	function
(	O
stream	int
->	O
html_destination	O
,	O
classname	pointer
)	O
;	O
}	O
static	O
void	O
html_styled_ostream__end_use_class	function
(	O
html_styled_ostream_t	O
stream	int
,	O
const	O
char	O
*	O
classname	pointer
)	O
{	O
html_ostream_end_span	function
(	O
stream	int
->	O
html_destination	O
,	O
classname	pointer
)	O
;	O
}	O
static	O
void	O
html_styled_ostream__flush_to_current_style	function
(	O
html_styled_ostream_t	O
stream	int
)	O
{	O
html_ostream_flush_to_current_style	function
(	O
stream	int
->	O
html_destination	O
)	O
;	O
}	O
html_styled_ostream_t	O
html_styled_ostream_create	function
(	O
ostream_t	O
destination	int
,	O
const	O
char	O
*	O
css_filename	pointer
)	O
{	O
html_styled_ostream_t	O
stream	int
=	O
XMALLOC	O
(	O
struct	O
html_styled_ostream_representation	O
)	O
;	O
stream	int
->	O
base	O
.	O
base	O
.	O
vtable	pointer
=	O
&	O
html_styled_ostream_vtable	O
;	O
stream	int
->	O
destination	int
=	O
destination	int
;	O
stream	int
->	O
html_destination	O
=	O
html_ostream_create	function
(	O
destination	int
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"<?xml version=\"1.0\"?>\n"	pointer
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n"	pointer
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"<html>\n"	pointer
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"<head>\n"	pointer
)	O
;	O
if	O
(	O
css_filename	pointer
!=	O
NULL	O
)	O
{	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"<style type=\"text/css\">\n"	pointer
"<!--\n"	pointer
)	O
;	O
{	O
int	O
fd	int
;	O
char	O
buf	array
[	O
4096	int
]	O
;	O
fd	int
=	O
open	function
(	O
css_filename	pointer
,	O
O_RDONLY	O
|	O
O_TEXT	int
)	O
;	O
if	O
(	O
fd	int
<	O
0	int
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error while opening \"%s\" for reading"	pointer
)	O
,	O
css_filename	pointer
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
size_t	O
n_read	O
=	O
safe_read	O
(	O
fd	int
,	O
buf	array
,	O
sizeof	O
(	O
buf	array
)	O
)	O
;	O
if	O
(	O
n_read	O
==	O
SAFE_READ_ERROR	O
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error reading \"%s\""	pointer
)	O
,	O
css_filename	pointer
)	O
;	O
if	O
(	O
n_read	O
==	O
0	int
)	O
break	O
;	O
ostream_write_mem	function
(	O
stream	int
->	O
destination	int
,	O
buf	array
,	O
n_read	O
)	O
;	O
}	O
if	O
(	O
close	function
(	O
fd	int
)	O
<	O
0	int
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error after reading \"%s\""	pointer
)	O
,	O
css_filename	pointer
)	O
;	O
}	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"-->\n"	pointer
"</style>\n"	pointer
)	O
;	O
}	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"</head>\n"	pointer
)	O
;	O
ostream_write_str	function
(	O
stream	int
->	O
destination	int
,	O
"<body>\n"	pointer
)	O
;	O
return	O
stream	int
;	O
}	O
const	O
struct	O
html_styled_ostream_implementation	O
html_styled_ostream_vtable	O
=	O
{	O
html_styled_ostream_superclasses	array
,	O
sizeof	O
(	O
html_styled_ostream_superclasses	array
)	O
/	O
sizeof	O
(	O
html_styled_ostream_superclasses	array
[	O
0	int
]	O
)	O
,	O
sizeof	O
(	O
struct	O
html_styled_ostream_representation	O
)	O
,	O
html_styled_ostream__write_mem	function
,	O
html_styled_ostream__flush	function
,	O
html_styled_ostream__free	function
,	O
html_styled_ostream__begin_use_class	function
,	O
html_styled_ostream__end_use_class	function
,	O
html_styled_ostream__flush_to_current_style	function
,	O
}	O
;	O
void	O
html_styled_ostream_write_mem	function
(	O
html_styled_ostream_t	O
first_arg	int
,	O
const	O
void	O
*	O
data	pointer
,	O
size_t	O
len	int
)	O
{	O
const	O
struct	O
html_styled_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
html_styled_ostream_representation_header	O
*	O
)	O
(	O
struct	O
html_styled_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
write_mem	O
(	O
first_arg	int
,	O
data	pointer
,	O
len	int
)	O
;	O
}	O
void	O
html_styled_ostream_flush	function
(	O
html_styled_ostream_t	O
first_arg	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
const	O
struct	O
html_styled_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
html_styled_ostream_representation_header	O
*	O
)	O
(	O
struct	O
html_styled_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
flush	O
(	O
first_arg	int
,	O
scope	int
)	O
;	O
}	O
void	O
html_styled_ostream_free	function
(	O
html_styled_ostream_t	O
first_arg	int
)	O
{	O
const	O
struct	O
html_styled_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
html_styled_ostream_representation_header	O
*	O
)	O
(	O
struct	O
html_styled_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
free	function
(	O
first_arg	int
)	O
;	O
}	O
void	O
html_styled_ostream_begin_use_class	function
(	O
html_styled_ostream_t	O
first_arg	int
,	O
const	O
char	O
*	O
classname	pointer
)	O
{	O
const	O
struct	O
html_styled_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
html_styled_ostream_representation_header	O
*	O
)	O
(	O
struct	O
html_styled_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
begin_use_class	O
(	O
first_arg	int
,	O
classname	pointer
)	O
;	O
}	O
void	O
html_styled_ostream_end_use_class	function
(	O
html_styled_ostream_t	O
first_arg	int
,	O
const	O
char	O
*	O
classname	pointer
)	O
{	O
const	O
struct	O
html_styled_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
html_styled_ostream_representation_header	O
*	O
)	O
(	O
struct	O
html_styled_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
end_use_class	O
(	O
first_arg	int
,	O
classname	pointer
)	O
;	O
}	O
void	O
html_styled_ostream_flush_to_current_style	function
(	O
html_styled_ostream_t	O
first_arg	int
)	O
{	O
const	O
struct	O
html_styled_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
html_styled_ostream_representation_header	O
*	O
)	O
(	O
struct	O
html_styled_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
flush_to_current_style	O
(	O
first_arg	int
)	O
;	O
}	O
