void	O
usage	function
(	O
)	O
{	O
mu_stream_printf	function
(	O
mu_strout	pointer
,	O
"usage: %s [-format=FMT] [-tz=TZ]\n"	pointer
,	O
mu_program_name	pointer
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
rc	int
,	O
i	int
;	O
char	O
*	O
format	pointer
=	O
"%d-%b-%Y%? %H:%M:%S %z"	pointer
;	O
char	O
*	O
buf	pointer
=	O
NULL	O
;	O
size_t	long
size	long
=	O
0	int
;	O
size_t	long
n	int
;	O
int	O
line	int
;	O
mu_set_program_name	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
mu_stdstream_setup	function
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
opt	pointer
=	O
argv	pointer
[	O
i	int
]	O
;	O
if	O
(	O
strncmp	function
(	O
opt	pointer
,	O
"-format="	pointer
,	O
8	int
)	O
==	O
0	int
)	O
format	pointer
=	O
opt	pointer
+	O
8	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
opt	pointer
,	O
"-h"	pointer
)	O
==	O
0	int
)	O
usage	function
(	O
)	O
;	O
else	O
{	O
mu_error	function
(	O
"%s: unrecognized argument"	pointer
,	O
opt	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
line	int
=	O
0	int
;	O
while	O
(	O
(	O
rc	int
=	O
mu_stream_getline	function
(	O
mu_strin	pointer
,	O
&	O
buf	pointer
,	O
&	O
size	long
,	O
&	O
n	int
)	O
)	O
==	O
0	int
&&	O
n	int
>	O
0	int
)	O
{	O
char	O
*	O
endp	pointer
;	O
struct	O
tm	struct
tm	struct
;	O
struct	O
mu_timezone	struct
tz	pointer
;	O
line	int
++	O
;	O
mu_ltrim_class	function
(	O
buf	pointer
,	O
MU_CTYPE_BLANK	int
)	O
;	O
mu_rtrim_class	function
(	O
buf	pointer
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
!	O
*	O
buf	pointer
)	O
continue	O
;	O
rc	int
=	O
mu_scan_datetime	function
(	O
buf	pointer
,	O
format	pointer
,	O
&	O
tm	struct
,	O
&	O
tz	pointer
,	O
&	O
endp	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
*	O
endp	pointer
)	O
mu_error	function
(	O
"%d: parse failed near %s"	pointer
,	O
line	int
,	O
endp	pointer
)	O
;	O
else	O
mu_error	function
(	O
"%d: parse failed at end of input"	pointer
,	O
line	int
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
*	O
endp	pointer
)	O
mu_printf	function
(	O
"# %d: stopped at %s\n"	pointer
,	O
line	int
,	O
endp	pointer
)	O
;	O
mu_printf	function
(	O
"sec=%d,min=%d,hour=%d,mday=%d,mon=%d,year=%d,wday=%d,yday=%d,tz=%d\n"	pointer
,	O
tm	struct
.	O
tm_sec	int
,	O
tm	struct
.	O
tm_min	int
,	O
tm	struct
.	O
tm_hour	int
,	O
tm	struct
.	O
tm_mday	int
,	O
tm	struct
.	O
tm_mon	int
,	O
tm	struct
.	O
tm_year	int
,	O
tm	struct
.	O
tm_wday	int
,	O
tm	struct
.	O
tm_yday	int
,	O
tz	pointer
.	O
utc_offset	int
)	O
;	O
}	O
if	O
(	O
rc	int
)	O
{	O
mu_error	function
(	O
"%s"	pointer
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
