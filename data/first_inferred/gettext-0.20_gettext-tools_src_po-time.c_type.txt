static	O
long	O
difftm	function
(	O
const	O
struct	O
tm	struct
*	O
a	pointer
,	O
const	O
struct	O
tm	struct
*	O
b	pointer
)	O
{	O
int	O
ay	int
=	O
a	pointer
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
-	O
1	int
;	O
int	O
by	int
=	O
b	pointer
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
-	O
1	int
;	O
long	O
days	long
=	O
(	O
a	pointer
->	O
tm_yday	int
-	O
b	pointer
->	O
tm_yday	int
+	O
(	O
(	O
ay	int
>>	O
2	int
)	O
-	O
(	O
by	int
>>	O
2	int
)	O
)	O
-	O
(	O
ay	int
/	O
100	int
-	O
by	int
/	O
100	int
)	O
+	O
(	O
(	O
ay	int
/	O
100	int
>>	O
2	int
)	O
-	O
(	O
by	int
/	O
100	int
>>	O
2	int
)	O
)	O
+	O
(	O
long	O
)	O
(	O
ay	int
-	O
by	int
)	O
*	O
365l	int
)	O
;	O
return	O
60l	int
*	O
(	O
60l	int
*	O
(	O
24l	int
*	O
days	long
+	O
(	O
a	pointer
->	O
tm_hour	int
-	O
b	pointer
->	O
tm_hour	int
)	O
)	O
+	O
(	O
a	pointer
->	O
tm_min	int
-	O
b	pointer
->	O
tm_min	int
)	O
)	O
+	O
(	O
a	pointer
->	O
tm_sec	int
-	O
b	pointer
->	O
tm_sec	int
)	O
;	O
}	O
char	O
*	O
po_strftime	function
(	O
const	O
time_t	long
*	O
tp	pointer
)	O
{	O
struct	O
tm	struct
local_time	struct
;	O
char	O
tz_sign	char
;	O
long	O
tz_min	long
;	O
local_time	struct
=	O
*	O
localtime	function
(	O
tp	pointer
)	O
;	O
tz_sign	char
=	O
'+'	O
;	O
tz_min	long
=	O
difftm	function
(	O
&	O
local_time	struct
,	O
gmtime	function
(	O
tp	pointer
)	O
)	O
/	O
60	int
;	O
if	O
(	O
tz_min	long
<	O
0	int
)	O
{	O
tz_min	long
=	O
-	O
tz_min	long
;	O
tz_sign	char
=	O
'-'	O
;	O
}	O
return	O
xasprintf	function
(	O
"%d-%02d-%02d %02d:%02d%c%02ld%02ld"	pointer
,	O
local_time	struct
.	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
,	O
local_time	struct
.	O
tm_mon	int
+	O
1	int
,	O
local_time	struct
.	O
tm_mday	int
,	O
local_time	struct
.	O
tm_hour	int
,	O
local_time	struct
.	O
tm_min	int
,	O
tz_sign	char
,	O
tz_min	long
/	O
60	int
,	O
tz_min	long
%	O
60	int
)	O
;	O
}	O
