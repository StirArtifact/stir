static	O
void	O
free_entry	function
(	O
hllist_entry	struct
*	O
en	pointer
)	O
{	O
if	O
(	O
en	pointer
->	O
path_	pointer
)	O
swbis_free	O
(	O
en	pointer
->	O
path_	pointer
)	O
;	O
}	O
HLLIST	struct
*	O
hllist_open	function
(	O
)	O
{	O
HLLIST	struct
*	O
hllist	pointer
=	O
(	O
HLLIST	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
HLLIST	struct
)	O
)	O
;	O
HLLIST_E_DEBUG	O
(	O
"Entering"	pointer
)	O
;	O
if	O
(	O
!	O
hllist	pointer
)	O
return	O
NULL	O
;	O
hllist	pointer
->	O
list_	pointer
=	O
cplob_open	function
(	O
8	int
)	O
;	O
cplob_additem	function
(	O
hllist	pointer
->	O
list_	pointer
,	O
0	int
,	O
NULL	O
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Leaving %p"	pointer
,	O
(	O
void	O
*	O
)	O
hllist	pointer
)	O
;	O
hllist	pointer
->	O
disable_find_	int
=	O
0	int
;	O
hllist	pointer
->	O
disable_add_	int
=	O
0	int
;	O
return	O
hllist	pointer
;	O
}	O
void	O
hllist_close	function
(	O
HLLIST	struct
*	O
hllist	pointer
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct
*	O
en	pointer
;	O
HLLIST_E_DEBUG	O
(	O
"Entering"	pointer
)	O
;	O
while	O
(	O
(	O
en	pointer
=	O
(	O
hllist_entry	struct
*	O
)	O
cplob_val	function
(	O
hllist	pointer
->	O
list_	pointer
,	O
i	int
++	O
)	O
)	O
)	O
{	O
free_entry	function
(	O
en	pointer
)	O
;	O
}	O
cplob_close	function
(	O
hllist	pointer
->	O
list_	pointer
)	O
;	O
free	function
(	O
hllist	pointer
)	O
;	O
}	O
void	O
hllist_add_record	function
(	O
HLLIST	struct
*	O
hllist	pointer
,	O
char	O
*	O
path	pointer
,	O
dev_t	long
dev	long
,	O
ino_t	long
ino	long
)	O
{	O
HLLIST_E_DEBUG	O
(	O
"Entering"	pointer
)	O
;	O
if	O
(	O
hllist	pointer
->	O
disable_add_	int
)	O
return	O
;	O
hllist_add_vrecord	function
(	O
hllist	pointer
,	O
path	pointer
,	O
dev	long
,	O
ino	long
,	O
0	int
,	O
0	int
)	O
;	O
HLLIST_E_DEBUG	O
(	O
"Leaving"	pointer
)	O
;	O
}	O
void	O
hllist_add_vrecord	function
(	O
HLLIST	struct
*	O
hllist	pointer
,	O
char	O
*	O
path	pointer
,	O
dev_t	long
dev	long
,	O
ino_t	long
ino	long
,	O
dev_t	long
v_dev	long
,	O
ino_t	long
v_ino	long
)	O
{	O
CPLOB	struct
*	O
lob	pointer
=	O
hllist	pointer
->	O
list_	pointer
;	O
hllist_entry	struct
*	O
en	pointer
=	O
(	O
hllist_entry	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
hllist_entry	struct
)	O
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Entering %p"	pointer
,	O
hllist	pointer
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Adding dev=%d"	pointer
,	O
(	O
int	O
)	O
dev	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Adding ino=%d"	pointer
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Adding path=[%s]"	pointer
,	O
path	pointer
)	O
;	O
if	O
(	O
hllist	pointer
->	O
disable_add_	int
)	O
return	O
;	O
en	pointer
->	O
path_	pointer
=	O
strdup	function
(	O
path	pointer
)	O
;	O
en	pointer
->	O
dev_	long
=	O
dev	long
;	O
en	pointer
->	O
ino_	long
=	O
ino	long
;	O
en	pointer
->	O
v_dev_	long
=	O
v_dev	long
;	O
en	pointer
->	O
v_ino_	long
=	O
v_ino	long
;	O
cplob_additem	function
(	O
lob	pointer
,	O
cplob_get_nused	function
(	O
lob	pointer
)	O
-	O
1	int
,	O
(	O
char	O
*	O
)	O
en	pointer
)	O
;	O
cplob_additem	function
(	O
lob	pointer
,	O
cplob_get_nused	function
(	O
lob	pointer
)	O
,	O
NULL	O
)	O
;	O
HLLIST_E_DEBUG	O
(	O
"Leaving"	pointer
)	O
;	O
}	O
hllist_entry	struct
*	O
hllist_find_file_entry	function
(	O
HLLIST	struct
*	O
hllist	pointer
,	O
dev_t	long
dev	long
,	O
ino_t	long
ino	long
,	O
int	O
occurance	int
,	O
int	O
*	O
nfound	pointer
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct
*	O
en	pointer
;	O
HLLIST_E_DEBUG2	O
(	O
"Entering %p"	pointer
,	O
hllist	pointer
)	O
;	O
if	O
(	O
hllist	pointer
->	O
disable_find_	int
)	O
{	O
HLLIST_E_DEBUG	O
(	O
"Leaving because disabled, returning NULL"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
HLLIST_E_DEBUG2	O
(	O
"Looking for dev=%d"	pointer
,	O
(	O
int	O
)	O
dev	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Looking for ino=%d"	pointer
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Looking for occurance=%d"	pointer
,	O
(	O
int	O
)	O
occurance	int
)	O
;	O
while	O
(	O
(	O
en	pointer
=	O
(	O
hllist_entry	struct
*	O
)	O
cplob_val	function
(	O
hllist	pointer
->	O
list_	pointer
,	O
i	int
++	O
)	O
)	O
)	O
{	O
HLLIST_E_DEBUG2	O
(	O
"Entry BEGIN Index=%d"	pointer
,	O
i	int
-	O
1	int
)	O
;	O
HLLIST_E_DEBUG3	O
(	O
"Entry: dev=%d ino=%d"	pointer
,	O
(	O
int	O
)	O
dev	long
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Entry: path=%s"	pointer
,	O
en	pointer
->	O
path_	pointer
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Entry END Index=%d"	pointer
,	O
i	int
-	O
1	int
)	O
;	O
if	O
(	O
en	pointer
->	O
ino_	long
==	O
ino	long
&&	O
en	pointer
->	O
dev_	long
==	O
dev	long
)	O
{	O
(	O
*	O
nfound	pointer
)	O
++	O
;	O
if	O
(	O
occurance	int
>	O
0	int
&&	O
(	O
*	O
nfound	pointer
)	O
==	O
occurance	int
)	O
{	O
HLLIST_E_DEBUG3	O
(	O
"Found dev=%d ino=%d"	pointer
,	O
(	O
int	O
)	O
dev	long
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
return	O
en	pointer
;	O
}	O
}	O
}	O
HLLIST_E_DEBUG	O
(	O
"Leaving having not found any, returning NULL"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
void	O
hllist_show_to_file	function
(	O
HLLIST	struct
*	O
hllist	pointer
,	O
FILE	struct
*	O
fp	pointer
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct
*	O
en	pointer
;	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: hllist_show_to_file BEGIN\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
)	O
;	O
while	O
(	O
(	O
en	pointer
=	O
(	O
hllist_entry	struct
*	O
)	O
cplob_val	function
(	O
hllist	pointer
->	O
list_	pointer
,	O
i	int
++	O
)	O
)	O
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: Entry %d: BEGIN\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
,	O
i	int
-	O
1	int
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: Entry %d: dev=%d ino=%d\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
,	O
i	int
-	O
1	int
,	O
(	O
int	O
)	O
(	O
en	pointer
->	O
dev_	long
)	O
,	O
(	O
int	O
)	O
(	O
en	pointer
->	O
ino_	long
)	O
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: Entry %d: v_dev=%d v_ino=%d\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
,	O
i	int
-	O
1	int
,	O
(	O
int	O
)	O
(	O
en	pointer
->	O
v_dev_	long
)	O
,	O
(	O
int	O
)	O
(	O
en	pointer
->	O
v_ino_	long
)	O
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: Entry %d: path=[%s]\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
,	O
i	int
-	O
1	int
,	O
en	pointer
->	O
path_	pointer
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: Entry %d: END\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
,	O
i	int
-	O
1	int
)	O
;	O
}	O
fprintf	function
(	O
fp	pointer
,	O
"%s: addr=%p: hllist_show_to_file END\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	pointer
)	O
;	O
}	O
void	O
hllist_disable_add	function
(	O
HLLIST	struct
*	O
hllist	pointer
)	O
{	O
hllist	pointer
->	O
disable_add_	int
=	O
1	int
;	O
}	O
void	O
hllist_disable_find	function
(	O
HLLIST	struct
*	O
hllist	pointer
)	O
{	O
hllist	pointer
->	O
disable_find_	int
=	O
1	int
;	O
}	O
void	O
hllist_clear_entries_and_disable	function
(	O
HLLIST	struct
*	O
hllist	pointer
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct
*	O
en	pointer
;	O
HLLIST_E_DEBUG	O
(	O
"Entering"	pointer
)	O
;	O
while	O
(	O
(	O
en	pointer
=	O
(	O
hllist_entry	struct
*	O
)	O
cplob_val	function
(	O
hllist	pointer
->	O
list_	pointer
,	O
i	int
++	O
)	O
)	O
)	O
{	O
free_entry	function
(	O
en	pointer
)	O
;	O
}	O
cplob_close	function
(	O
hllist	pointer
->	O
list_	pointer
)	O
;	O
hllist	pointer
->	O
list_	pointer
=	O
cplob_open	function
(	O
8	int
)	O
;	O
cplob_additem	function
(	O
hllist	pointer
->	O
list_	pointer
,	O
0	int
,	O
NULL	O
)	O
;	O
hllist	pointer
->	O
disable_find_	int
=	O
1	int
;	O
}	O
