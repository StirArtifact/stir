struct	O
directory	struct
*	O
dir_read	function
(	O
direntry_t	struct
*	O
entry	int
,	O
int	O
*	O
error	pointer
)	O
{	O
int	O
n	pointer
;	O
*	O
error	pointer
=	O
0	int
;	O
if	O
(	O
(	O
n	pointer
=	O
force_read	function
(	O
entry	int
->	O
Dir	pointer
,	O
(	O
char	O
*	O
)	O
(	O
&	O
entry	int
->	O
dir	pointer
)	O
,	O
(	O
mt_off_t	long
)	O
entry	int
->	O
entry	int
*	O
MDIR_SIZE	int
,	O
MDIR_SIZE	int
)	O
)	O
!=	O
MDIR_SIZE	int
)	O
{	O
if	O
(	O
n	pointer
<	O
0	int
)	O
{	O
*	O
error	pointer
=	O
-	O
1	int
;	O
}	O
return	O
NULL	O
;	O
}	O
return	O
&	O
entry	int
->	O
dir	pointer
;	O
}	O
int	O
dir_grow	function
(	O
Stream_t	struct
*	O
Dir	pointer
,	O
int	O
size	array
)	O
{	O
Stream_t	struct
*	O
Stream	pointer
=	O
GetFs	function
(	O
Dir	pointer
)	O
;	O
DeclareThis	O
(	O
FsPublic_t	struct
)	O
;	O
int	O
ret	int
;	O
unsigned	O
int	O
buflen	int
;	O
char	O
*	O
buffer	pointer
;	O
if	O
(	O
!	O
getfreeMinClusters	function
(	O
Dir	pointer
,	O
1	int
)	O
)	O
return	O
-	O
1	int
;	O
buflen	int
=	O
This	pointer
->	O
cluster_size	int
*	O
This	pointer
->	O
sector_size	int
;	O
if	O
(	O
!	O
(	O
buffer	pointer
=	O
malloc	function
(	O
buflen	int
)	O
)	O
)	O
{	O
perror	function
(	O
"dir_grow: malloc"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
memset	function
(	O
(	O
char	O
*	O
)	O
buffer	pointer
,	O
'\0'	O
,	O
buflen	int
)	O
;	O
ret	int
=	O
force_write	function
(	O
Dir	pointer
,	O
buffer	pointer
,	O
(	O
mt_off_t	long
)	O
size	array
*	O
MDIR_SIZE	int
,	O
buflen	int
)	O
;	O
free	function
(	O
buffer	pointer
)	O
;	O
if	O
(	O
ret	int
<	O
(	O
int	O
)	O
buflen	int
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
void	O
low_level_dir_write	function
(	O
direntry_t	struct
*	O
entry	int
)	O
{	O
force_write	function
(	O
entry	int
->	O
Dir	pointer
,	O
(	O
char	O
*	O
)	O
(	O
&	O
entry	int
->	O
dir	pointer
)	O
,	O
(	O
mt_off_t	long
)	O
entry	int
->	O
entry	int
*	O
MDIR_SIZE	int
,	O
MDIR_SIZE	int
)	O
;	O
}	O
void	O
low_level_dir_write_end	function
(	O
Stream_t	struct
*	O
Dir	pointer
,	O
int	O
entry	int
)	O
{	O
char	O
zero	char
=	O
ENDMARK	O
;	O
force_write	function
(	O
Dir	pointer
,	O
&	O
zero	char
,	O
(	O
mt_off_t	long
)	O
entry	int
*	O
MDIR_SIZE	int
,	O
1	int
)	O
;	O
}	O
struct	O
directory	struct
*	O
mk_entry	function
(	O
const	O
dos_name_t	struct
*	O
dn	pointer
,	O
unsigned	O
char	O
attr	char
,	O
unsigned	O
int	O
fat	int
,	O
size_t	long
size	array
,	O
time_t	long
date	array
,	O
struct	O
directory	struct
*	O
ndir	pointer
)	O
{	O
struct	O
tm	struct
*	O
now	pointer
;	O
time_t	long
date2	long
=	O
date	array
;	O
unsigned	O
char	O
hour	char
,	O
min_hi	char
,	O
min_low	char
,	O
sec	char
;	O
unsigned	O
char	O
year	char
,	O
month_hi	char
,	O
month_low	char
,	O
day	char
;	O
now	pointer
=	O
localtime	function
(	O
&	O
date2	long
)	O
;	O
dosnameToDirentry	function
(	O
dn	pointer
,	O
ndir	pointer
)	O
;	O
ndir	pointer
->	O
attr	char
=	O
attr	char
;	O
ndir	pointer
->	O
ctime_ms	char
=	O
0	int
;	O
hour	char
=	O
now	pointer
->	O
tm_hour	int
<<	O
3	int
;	O
min_hi	char
=	O
now	pointer
->	O
tm_min	int
>>	O
3	int
;	O
min_low	char
=	O
now	pointer
->	O
tm_min	int
<<	O
5	int
;	O
sec	char
=	O
now	pointer
->	O
tm_sec	int
/	O
2	int
;	O
ndir	pointer
->	O
ctime	function
[	O
1	int
]	O
=	O
ndir	pointer
->	O
time	struct
[	O
1	int
]	O
=	O
hour	char
+	O
min_hi	char
;	O
ndir	pointer
->	O
ctime	function
[	O
0	int
]	O
=	O
ndir	pointer
->	O
time	struct
[	O
0	int
]	O
=	O
min_low	char
+	O
sec	char
;	O
year	char
=	O
(	O
now	pointer
->	O
tm_year	int
-	O
80	int
)	O
<<	O
1	int
;	O
month_hi	char
=	O
(	O
now	pointer
->	O
tm_mon	int
+	O
1	int
)	O
>>	O
3	int
;	O
month_low	char
=	O
(	O
now	pointer
->	O
tm_mon	int
+	O
1	int
)	O
<<	O
5	int
;	O
day	char
=	O
now	pointer
->	O
tm_mday	int
;	O
ndir	pointer
->	O
adate	array
[	O
1	int
]	O
=	O
ndir	pointer
->	O
cdate	array
[	O
1	int
]	O
=	O
ndir	pointer
->	O
date	array
[	O
1	int
]	O
=	O
year	char
+	O
month_hi	char
;	O
ndir	pointer
->	O
adate	array
[	O
0	int
]	O
=	O
ndir	pointer
->	O
cdate	array
[	O
0	int
]	O
=	O
ndir	pointer
->	O
date	array
[	O
0	int
]	O
=	O
month_low	char
+	O
day	char
;	O
set_word	function
(	O
ndir	pointer
->	O
start	array
,	O
fat	int
&	O
0xffff	int
)	O
;	O
set_word	function
(	O
ndir	pointer
->	O
startHi	array
,	O
fat	int
>>	O
16	int
)	O
;	O
set_dword	function
(	O
ndir	pointer
->	O
size	array
,	O
size	array
)	O
;	O
return	O
ndir	pointer
;	O
}	O
struct	O
directory	struct
*	O
mk_entry_from_base	function
(	O
const	O
char	O
*	O
base	int
,	O
unsigned	O
char	O
attr	char
,	O
unsigned	O
int	O
fat	int
,	O
size_t	long
size	array
,	O
time_t	long
date	array
,	O
struct	O
directory	struct
*	O
ndir	pointer
)	O
{	O
struct	O
dos_name_t	struct
dn	pointer
;	O
strncpy	function
(	O
dn	pointer
.	O
base	int
,	O
base	int
,	O
8	int
)	O
;	O
strncpy	function
(	O
dn	pointer
.	O
ext	array
,	O
"   "	pointer
,	O
3	int
)	O
;	O
return	O
mk_entry	function
(	O
&	O
dn	pointer
,	O
attr	char
,	O
fat	int
,	O
size	array
,	O
date	array
,	O
ndir	pointer
)	O
;	O
}	O
