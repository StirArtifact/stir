static	O
void	O
usage	function
(	O
void	O
)	O
NORETURN	O
;	O
static	O
void	O
usage	function
(	O
void	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Mtools version %s, dated %s\n"	pointer
,	O
mversion	pointer
,	O
mdate	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: mcat [-V] [-w] device\n"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"       -w write on device else read\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
static	O
size_t	long
bufLen	function
(	O
size_t	long
blocksize	int
,	O
mt_size_t	long
totalSize	long
,	O
mt_off_t	long
address	long
)	O
{	O
if	O
(	O
totalSize	long
==	O
0	int
)	O
return	O
blocksize	int
;	O
if	O
(	O
address	long
+	O
blocksize	int
>	O
totalSize	long
)	O
return	O
totalSize	long
-	O
address	long
;	O
return	O
blocksize	int
;	O
}	O
void	O
mcat	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
NORETURN	O
;	O
void	O
mcat	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
{	O
struct	O
device	struct
*	O
dev	pointer
;	O
struct	O
device	struct
out_dev	pointer
;	O
char	O
drive	char
,	O
name	pointer
[	O
EXPAND_BUF	int
]	O
;	O
char	O
errmsg	pointer
[	O
200	int
]	O
;	O
Stream_t	struct
*	O
Stream	pointer
;	O
char	O
buf	pointer
[	O
BUF_SIZE	int
]	O
;	O
mt_off_t	long
address	long
=	O
0	int
;	O
char	O
mode	int
=	O
O_RDONLY	int
;	O
int	O
optindex	int
=	O
1	int
;	O
size_t	long
len	long
;	O
noPrivileges	int
=	O
1	int
;	O
if	O
(	O
argc	int
<	O
2	int
)	O
{	O
usage	function
(	O
)	O
;	O
}	O
if	O
(	O
argv	pointer
[	O
1	int
]	O
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
if	O
(	O
argv	pointer
[	O
1	int
]	O
[	O
1	int
]	O
!=	O
'w'	O
)	O
{	O
usage	function
(	O
)	O
;	O
}	O
mode	int
=	O
O_WRONLY	int
;	O
optindex	int
++	O
;	O
}	O
if	O
(	O
argc	int
-	O
optindex	int
<	O
1	int
)	O
usage	function
(	O
)	O
;	O
if	O
(	O
!	O
argv	pointer
[	O
optindex	int
]	O
[	O
0	int
]	O
||	O
argv	pointer
[	O
optindex	int
]	O
[	O
1	int
]	O
!=	O
':'	O
||	O
argv	pointer
[	O
optindex	int
]	O
[	O
2	int
]	O
)	O
{	O
usage	function
(	O
)	O
;	O
}	O
drive	char
=	O
ch_toupper	function
(	O
argv	pointer
[	O
optindex	int
]	O
[	O
0	int
]	O
)	O
;	O
sprintf	function
(	O
errmsg	pointer
,	O
"Drive '%c:' not supported"	pointer
,	O
drive	char
)	O
;	O
Stream	pointer
=	O
NULL	O
;	O
for	O
(	O
dev	pointer
=	O
devices	pointer
;	O
dev	pointer
->	O
name	pointer
;	O
dev	pointer
++	O
)	O
{	O
FREE	O
(	O
&	O
Stream	pointer
)	O
;	O
if	O
(	O
dev	pointer
->	O
drive	char
!=	O
drive	char
)	O
continue	O
;	O
out_dev	pointer
=	O
*	O
dev	pointer
;	O
expand	function
(	O
dev	pointer
->	O
name	pointer
,	O
name	pointer
)	O
;	O
Stream	pointer
=	O
0	int
;	O
Stream	pointer
=	O
XdfOpen	function
(	O
&	O
out_dev	pointer
,	O
name	pointer
,	O
mode	int
,	O
errmsg	pointer
,	O
0	int
)	O
;	O
if	O
(	O
Stream	pointer
)	O
out_dev	pointer
.	O
use_2m	int
=	O
0x7f	int
;	O
if	O
(	O
!	O
Stream	pointer
)	O
Stream	pointer
=	O
FloppydOpen	function
(	O
&	O
out_dev	pointer
,	O
name	pointer
,	O
mode	int
,	O
errmsg	pointer
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
Stream	pointer
)	O
Stream	pointer
=	O
SimpleFileOpen	function
(	O
&	O
out_dev	pointer
,	O
dev	pointer
,	O
name	pointer
,	O
mode	int
,	O
errmsg	pointer
,	O
0	int
,	O
1	int
,	O
0	int
)	O
;	O
if	O
(	O
!	O
Stream	pointer
)	O
continue	O
;	O
break	O
;	O
}	O
if	O
(	O
dev	pointer
->	O
drive	char
==	O
0	int
)	O
{	O
FREE	O
(	O
&	O
Stream	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s\n"	pointer
,	O
errmsg	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
mode	int
==	O
O_WRONLY	int
)	O
{	O
mt_size_t	long
size	array
=	O
0	int
;	O
size	array
=	O
out_dev	pointer
.	O
sectors	short
*	O
out_dev	pointer
.	O
heads	short
*	O
out_dev	pointer
.	O
tracks	int
;	O
size	array
*=	O
512	int
;	O
while	O
(	O
(	O
len	long
=	O
fread	function
(	O
buf	pointer
,	O
1	int
,	O
bufLen	function
(	O
BUF_SIZE	int
,	O
size	array
,	O
address	long
)	O
,	O
stdin	pointer
)	O
)	O
>	O
0	int
)	O
{	O
int	O
r	int
=	O
WRITES	O
(	O
Stream	pointer
,	O
buf	pointer
,	O
address	long
,	O
len	long
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Wrote to %d\n"	pointer
,	O
(	O
int	O
)	O
address	long
)	O
;	O
if	O
(	O
r	int
<	O
0	int
)	O
break	O
;	O
address	long
+=	O
len	long
;	O
}	O
}	O
else	O
{	O
while	O
(	O
(	O
len	long
=	O
READS	O
(	O
Stream	pointer
,	O
buf	pointer
,	O
address	long
,	O
BUF_SIZE	int
)	O
)	O
>	O
0	int
)	O
{	O
fwrite	function
(	O
buf	pointer
,	O
1	int
,	O
len	long
,	O
stdout	pointer
)	O
;	O
address	long
+=	O
len	long
;	O
}	O
}	O
FREE	O
(	O
&	O
Stream	pointer
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
