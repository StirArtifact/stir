int	O
statfs	function
(	O
)	O
;	O
int	O
statvfs	struct
(	O
)	O
;	O
static	O
long	O
adjust_blocks	function
P	O
(	O
(	O
long	O
blocks	long
,	O
int	O
fromsize	int
,	O
int	O
tosize	int
)	O
)	O
;	O
static	O
long	O
adjust_blocks	function
(	O
blocks	long
,	O
fromsize	int
,	O
tosize	int
)	O
long	O
blocks	long
;	O
int	O
fromsize	int
,	O
tosize	int
;	O
{	O
if	O
(	O
tosize	int
<=	O
0	int
)	O
abort	function
(	O
)	O
;	O
if	O
(	O
fromsize	int
<=	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
fromsize	int
==	O
tosize	int
)	O
return	O
blocks	long
;	O
else	O
if	O
(	O
fromsize	int
>	O
tosize	int
)	O
return	O
blocks	long
*	O
(	O
fromsize	int
/	O
tosize	int
)	O
;	O
else	O
return	O
(	O
blocks	long
+	O
(	O
blocks	long
<	O
0	int
?	O
-	O
1	int
:	O
1	int
)	O
)	O
/	O
(	O
tosize	int
/	O
fromsize	int
)	O
;	O
}	O
int	O
get_fs_usage	function
(	O
path	pointer
,	O
disk	pointer
,	O
fsp	pointer
)	O
char	O
*	O
path	pointer
,	O
*	O
disk	pointer
ATTRIBUTE_UNUSED	O
;	O
struct	O
fs_usage	struct
*	O
fsp	pointer
;	O
{	O
struct	O
statvfs	struct
fsd	struct
;	O
if	O
(	O
statvfs	struct
(	O
path	pointer
,	O
&	O
fsd	struct
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
fsp	pointer
->	O
fsu_blocks	long
=	O
CONVERT_BLOCKS	O
(	O
fsd	struct
.	O
f_blocks	long
)	O
;	O
fsp	pointer
->	O
fsu_bfree	long
=	O
CONVERT_BLOCKS	O
(	O
fsd	struct
.	O
f_bfree	long
)	O
;	O
fsp	pointer
->	O
fsu_bavail	long
=	O
CONVERT_BLOCKS	O
(	O
fsd	struct
.	O
f_bavail	long
)	O
;	O
fsp	pointer
->	O
fsu_files	long
=	O
fsd	struct
.	O
f_files	long
;	O
fsp	pointer
->	O
fsu_ffree	long
=	O
fsd	struct
.	O
f_ffree	long
;	O
return	O
0	int
;	O
}	O
