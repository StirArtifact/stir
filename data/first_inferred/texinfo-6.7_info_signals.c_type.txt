void	O
initialize_info_signal_handler	function
(	O
void	O
)	O
;	O
static	O
void	O
mask_termsig	function
(	O
sigset_t	struct
*	O
set	pointer
)	O
{	O
sigaddset	function
(	O
set	pointer
,	O
SIGTSTP	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGTTOU	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGTTIN	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGWINCH	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGQUIT	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGINT	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGTERM	int
)	O
;	O
sigaddset	function
(	O
set	pointer
,	O
SIGUSR1	int
)	O
;	O
}	O
static	O
void	O
info_signal_proc	function
(	O
int	O
sig	int
)	O
;	O
typedef	O
struct	O
sigaction	struct
signal_info	struct
;	O
signal_info	struct
info_signal_handler	struct
;	O
static	O
void	O
set_termsig	function
(	O
int	O
sig	int
,	O
signal_info	struct
*	O
old	pointer
)	O
{	O
sigaction	struct
(	O
sig	int
,	O
&	O
info_signal_handler	struct
,	O
old	pointer
)	O
;	O
}	O
static	O
void	O
restore_termsig	function
(	O
int	O
sig	int
,	O
const	O
signal_info	struct
*	O
saved	pointer
)	O
{	O
sigaction	struct
(	O
sig	int
,	O
saved	pointer
,	O
NULL	O
)	O
;	O
}	O
static	O
signal_info	struct
old_TSTP	struct
,	O
old_TTOU	struct
,	O
old_TTIN	struct
;	O
static	O
signal_info	struct
old_WINCH	struct
,	O
old_INT	struct
,	O
old_TERM	struct
,	O
old_USR1	struct
;	O
static	O
signal_info	struct
old_QUIT	struct
;	O
void	O
initialize_info_signal_handler	function
(	O
void	O
)	O
{	O
info_signal_handler	struct
.	O
sa_handler	pointer
=	O
info_signal_proc	function
;	O
info_signal_handler	struct
.	O
sa_flags	int
=	O
0	int
;	O
mask_termsig	function
(	O
&	O
info_signal_handler	struct
.	O
sa_mask	struct
)	O
;	O
set_termsig	function
(	O
SIGTSTP	int
,	O
&	O
old_TSTP	struct
)	O
;	O
set_termsig	function
(	O
SIGTTOU	int
,	O
&	O
old_TTOU	struct
)	O
;	O
set_termsig	function
(	O
SIGTTIN	int
,	O
&	O
old_TTIN	struct
)	O
;	O
set_termsig	function
(	O
SIGWINCH	int
,	O
&	O
old_WINCH	struct
)	O
;	O
set_termsig	function
(	O
SIGQUIT	int
,	O
&	O
old_QUIT	struct
)	O
;	O
set_termsig	function
(	O
SIGINT	int
,	O
&	O
old_INT	struct
)	O
;	O
set_termsig	function
(	O
SIGTERM	int
,	O
&	O
old_TERM	struct
)	O
;	O
set_termsig	function
(	O
SIGUSR1	int
,	O
&	O
old_USR1	struct
)	O
;	O
}	O
void	O
redisplay_after_signal	function
(	O
void	O
)	O
{	O
terminal_clear_screen	function
(	O
)	O
;	O
display_clear_display	function
(	O
the_display	pointer
)	O
;	O
if	O
(	O
auto_footnotes_p	int
)	O
info_get_or_remove_footnotes	function
(	O
active_window	pointer
)	O
;	O
window_mark_chain	function
(	O
windows	pointer
,	O
W_UpdateWindow	int
)	O
;	O
display_update_display	function
(	O
)	O
;	O
display_cursor_at_point	function
(	O
active_window	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
}	O
void	O
reset_info_window_sizes	function
(	O
void	O
)	O
{	O
terminal_get_screen_size	function
(	O
)	O
;	O
display_initialize_display	function
(	O
screenwidth	int
,	O
screenheight	int
)	O
;	O
window_new_screen_size	function
(	O
screenwidth	int
,	O
screenheight	int
)	O
;	O
redisplay_after_signal	function
(	O
)	O
;	O
}	O
static	O
int	O
sigwinch_block_count	int
=	O
0	int
;	O
void	O
signal_block_winch	function
(	O
void	O
)	O
{	O
if	O
(	O
sigwinch_block_count	int
==	O
0	int
)	O
BLOCK_SIGNAL	O
(	O
SIGWINCH	int
)	O
;	O
sigwinch_block_count	int
++	O
;	O
}	O
void	O
signal_unblock_winch	function
(	O
void	O
)	O
{	O
sigwinch_block_count	int
--	O
;	O
if	O
(	O
sigwinch_block_count	int
==	O
0	int
)	O
UNBLOCK_SIGNAL	O
(	O
SIGWINCH	int
)	O
;	O
}	O
static	O
void	O
info_signal_proc	function
(	O
int	O
sig	int
)	O
{	O
signal_info	struct
*	O
old_signal_handler	pointer
=	O
NULL	O
;	O
switch	O
(	O
sig	int
)	O
{	O
case	O
SIGTSTP	int
:	O
case	O
SIGTTOU	int
:	O
case	O
SIGTTIN	int
:	O
case	O
SIGQUIT	int
:	O
case	O
SIGINT	int
:	O
case	O
SIGTERM	int
:	O
{	O
if	O
(	O
sig	int
==	O
SIGTSTP	int
)	O
old_signal_handler	pointer
=	O
&	O
old_TSTP	struct
;	O
if	O
(	O
sig	int
==	O
SIGTTOU	int
)	O
old_signal_handler	pointer
=	O
&	O
old_TTOU	struct
;	O
if	O
(	O
sig	int
==	O
SIGTTIN	int
)	O
old_signal_handler	pointer
=	O
&	O
old_TTIN	struct
;	O
if	O
(	O
sig	int
==	O
SIGQUIT	int
)	O
old_signal_handler	pointer
=	O
&	O
old_QUIT	struct
;	O
if	O
(	O
sig	int
==	O
SIGINT	int
)	O
old_signal_handler	pointer
=	O
&	O
old_INT	struct
;	O
if	O
(	O
sig	int
==	O
SIGTERM	int
)	O
old_signal_handler	pointer
=	O
&	O
old_TERM	struct
;	O
terminal_goto_xy	function
(	O
0	int
,	O
screenheight	int
-	O
1	int
)	O
;	O
terminal_clear_to_eol	function
(	O
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
terminal_unprep_terminal	function
(	O
)	O
;	O
restore_termsig	function
(	O
sig	int
,	O
old_signal_handler	pointer
)	O
;	O
UNBLOCK_SIGNAL	O
(	O
sig	int
)	O
;	O
kill	function
(	O
getpid	function
(	O
)	O
,	O
sig	int
)	O
;	O
terminal_prep_terminal	function
(	O
)	O
;	O
set_termsig	function
(	O
sig	int
,	O
old_signal_handler	pointer
)	O
;	O
reset_info_window_sizes	function
(	O
)	O
;	O
}	O
break	O
;	O
case	O
SIGWINCH	int
:	O
case	O
SIGUSR1	int
:	O
{	O
if	O
(	O
sig	int
==	O
SIGWINCH	int
)	O
old_signal_handler	pointer
=	O
&	O
old_WINCH	struct
;	O
if	O
(	O
sig	int
==	O
SIGUSR1	int
)	O
old_signal_handler	pointer
=	O
&	O
old_USR1	struct
;	O
set_termsig	function
(	O
sig	int
,	O
old_signal_handler	pointer
)	O
;	O
if	O
(	O
sigwinch_block_count	int
!=	O
0	int
)	O
abort	function
(	O
)	O
;	O
sigwinch_block_count	int
++	O
;	O
reset_info_window_sizes	function
(	O
)	O
;	O
sigwinch_block_count	int
--	O
;	O
UNBLOCK_SIGNAL	O
(	O
sig	int
)	O
;	O
}	O
break	O
;	O
}	O
}	O
