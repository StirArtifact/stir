static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: txn_rec.c,v 1.4 2014/04/17 20:27:41 sebdiaz Exp $"	pointer
;	O
int	O
CDB___txn_regop_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
op	enum
)	O
{	O
}	O
__txn_regop_args	struct
*	O
argp	pointer
;	O
int	O
ret	int
;	O
COMPQUIET	O
(	O
op	enum
,	O
0	int
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___txn_regop_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
argp	pointer
->	O
opcode	int
!=	O
TXN_COMMIT	int
)	O
ret	int
=	O
EINVAL	int
;	O
else	O
if	O
(	O
dbenv	pointer
->	O
tx_timestamp	long
==	O
0	int
||	O
argp	pointer
->	O
timestamp	int
<=	O
(	O
int32_t	int
)	O
dbenv	pointer
->	O
tx_timestamp	long
)	O
if	O
(	O
CDB___db_txnlist_find	function
(	O
info	pointer
,	O
argp	pointer
->	O
txnid	int
->	O
txnid	int
)	O
==	O
DB_NOTFOUND	O
)	O
ret	int
=	O
CDB___db_txnlist_add	function
(	O
dbenv	pointer
,	O
info	pointer
,	O
argp	pointer
->	O
txnid	int
->	O
txnid	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
CDB___os_free	function
(	O
argp	pointer
,	O
0	int
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
CDB___txn_xa_regop_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
op	enum
)	O
{	O
}	O
__txn_xa_regop_args	struct
*	O
argp	pointer
;	O
int	O
ret	int
;	O
COMPQUIET	O
(	O
op	enum
,	O
0	int
)	O
;	O
COMPQUIET	O
(	O
dbenv	pointer
,	O
NULL	O
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___txn_xa_regop_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
argp	pointer
->	O
opcode	int
!=	O
TXN_PREPARE	int
)	O
ret	int
=	O
EINVAL	int
;	O
else	O
(	O
void	O
)	O
CDB___db_txnlist_find	function
(	O
info	pointer
,	O
argp	pointer
->	O
txnid	int
->	O
txnid	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
CDB___os_free	function
(	O
argp	pointer
,	O
0	int
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
CDB___txn_ckp_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
op	enum
)	O
{	O
}	O
__txn_ckp_args	struct
*	O
argp	pointer
;	O
int	O
ret	int
;	O
COMPQUIET	O
(	O
dbenv	pointer
,	O
NULL	O
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___txn_ckp_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
argp	pointer
->	O
ckp_lsn	struct
.	O
file	int
==	O
lsnp	pointer
->	O
file	int
&&	O
argp	pointer
->	O
ckp_lsn	struct
.	O
offset	int
==	O
lsnp	pointer
->	O
offset	int
)	O
CDB___db_txnlist_gen	function
(	O
info	pointer
,	O
DB_REDO	O
(	O
op	enum
)	O
?	O
-	O
1	int
:	O
1	int
)	O
;	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
last_ckp	struct
;	O
CDB___os_free	function
(	O
argp	pointer
,	O
0	int
)	O
;	O
return	O
(	O
DB_TXN_CKP	O
)	O
;	O
}	O
int	O
CDB___txn_child_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
op	enum
)	O
{	O
}	O
__txn_child_args	struct
*	O
argp	pointer
;	O
int	O
ret	int
;	O
COMPQUIET	O
(	O
op	enum
,	O
0	int
)	O
;	O
COMPQUIET	O
(	O
dbenv	pointer
,	O
NULL	O
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___txn_child_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
argp	pointer
->	O
opcode	int
!=	O
TXN_COMMIT	int
)	O
ret	int
=	O
EINVAL	int
;	O
else	O
if	O
(	O
CDB___db_txnlist_find	function
(	O
info	pointer
,	O
argp	pointer
->	O
parent	pointer
)	O
==	O
0	int
&&	O
CDB___db_txnlist_find	function
(	O
info	pointer
,	O
argp	pointer
->	O
txnid	int
->	O
txnid	int
)	O
==	O
DB_NOTFOUND	O
)	O
ret	int
=	O
CDB___db_txnlist_add	function
(	O
dbenv	pointer
,	O
info	pointer
,	O
argp	pointer
->	O
txnid	int
->	O
txnid	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
CDB___os_free	function
(	O
argp	pointer
,	O
0	int
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
