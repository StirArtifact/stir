int	O
debugging_enabled	int
=	O
0	int
;	O
int	O
strict_match_flag	int
=	O
0	int
;	O
int	O
print_controls	int
=	O
0	int
;	O
int	O
ahz	int
=	O
AHZ	int
;	O
char	O
*	O
program_name	pointer
;	O
int	O
show_paging	int
=	O
0	int
;	O
char	O
show_pid	char
=	O
0	int
;	O
static	O
unsigned	O
int	O
hzval	int
;	O
struct	O
hashtab	struct
*	O
user_list	pointer
=	O
NULL	O
;	O
struct	O
hashtab	struct
*	O
tty_list	pointer
=	O
NULL	O
;	O
struct	O
hashtab	struct
*	O
command_list	pointer
=	O
NULL	O
;	O
struct	O
hashtab	struct
*	O
all_list	pointer
=	O
NULL	O
;	O
char	O
*	O
dev_gnu_name	function
(	O
long	O
)	O
;	O
int	O
get_entry	function
(	O
struct	O
acct	function
*	O
*	O
)	O
;	O
int	O
desired_entry	function
(	O
char	O
*	O
,	O
char	O
*	O
,	O
char	O
*	O
)	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
c	int
;	O
int	O
other_pacct_file_specified	int
=	O
0	int
;	O
int	O
backwards	int
=	O
1	int
;	O
hzval	int
=	O
sysconf	function
(	O
_SC_CLK_TCK	int
)	O
;	O
program_name	pointer
=	O
argv	array
[	O
0	int
]	O
;	O
while	O
(	O
1	int
)	O
{	O
int	O
option_index	int
=	O
0	int
;	O
static	O
struct	O
option	struct
long_options	array
[	O
]	O
=	O
{	O
{	O
"debug"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
"version"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
3	int
}	O
,	O
{	O
"file"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
4	int
}	O
,	O
{	O
"strict-match"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
5	int
}	O
,	O
{	O
"print-controls"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
6	int
}	O
,	O
{	O
"user"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
7	int
}	O
,	O
{	O
"tty"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
8	int
}	O
,	O
{	O
"command"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
9	int
}	O
,	O
{	O
"ahz"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
10	int
}	O
,	O
{	O
"show-paging"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
11	int
}	O
,	O
{	O
"forwards"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
12	int
}	O
,	O
{	O
"pid"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
13	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
}	O
;	O
c	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	array
,	O
"f:hV"	pointer
"p"	pointer
,	O
long_options	array
,	O
&	O
option_index	int
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
break	O
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
1	int
:	O
debugging_enabled	int
=	O
1	int
;	O
break	O
;	O
case	O
'V'	O
:	O
case	O
2	int
:	O
(	O
void	O
)	O
printf	function
(	O
"%s: GNU Accounting Utilities (release %s)\n"	pointer
,	O
program_name	pointer
,	O
VERSION_STRING	pointer
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
'f'	O
:	O
case	O
4	int
:	O
if	O
(	O
strcmp	function
(	O
optarg	pointer
,	O
"-"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
backwards	int
&&	O
other_pacct_file_specified	int
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"%s: -f - must be specified first, or --forwards must precede the first -f\n"	pointer
,	O
program_name	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
backwards	int
=	O
0	int
;	O
optarg	pointer
=	O
"/proc/self/fd/0"	pointer
;	O
}	O
if	O
(	O
other_pacct_file_specified	int
==	O
0	int
)	O
pacct_init	function
(	O
backwards	int
)	O
;	O
add_pacct_file	function
(	O
optarg	pointer
)	O
;	O
other_pacct_file_specified	int
=	O
1	int
;	O
break	O
;	O
case	O
5	int
:	O
strict_match_flag	int
=	O
1	int
;	O
break	O
;	O
case	O
6	int
:	O
print_controls	int
=	O
1	int
;	O
break	O
;	O
case	O
7	int
:	O
if	O
(	O
user_list	pointer
==	O
NULL	O
)	O
user_list	pointer
=	O
hashtab_init	function
(	O
0	int
)	O
;	O
hashtab_create	function
(	O
user_list	pointer
,	O
optarg	pointer
,	O
0	int
)	O
;	O
break	O
;	O
case	O
8	int
:	O
if	O
(	O
tty_list	pointer
==	O
NULL	O
)	O
tty_list	pointer
=	O
hashtab_init	function
(	O
0	int
)	O
;	O
hashtab_create	function
(	O
tty_list	pointer
,	O
optarg	pointer
,	O
0	int
)	O
;	O
break	O
;	O
case	O
9	int
:	O
if	O
(	O
command_list	pointer
==	O
NULL	O
)	O
command_list	pointer
=	O
hashtab_init	function
(	O
0	int
)	O
;	O
hashtab_create	function
(	O
command_list	pointer
,	O
optarg	pointer
,	O
0	int
)	O
;	O
break	O
;	O
case	O
10	int
:	O
ahz	int
=	O
strtol	function
(	O
optarg	pointer
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
ahz	int
<	O
1	int
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"%s: AHZ must be one or greater\n"	pointer
,	O
program_name	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
break	O
;	O
case	O
'p'	O
:	O
case	O
11	int
:	O
show_paging	int
=	O
1	int
;	O
break	O
;	O
case	O
12	int
:	O
if	O
(	O
other_pacct_file_specified	int
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"%s: --forwards must come before -f\n"	pointer
,	O
program_name	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
backwards	int
=	O
0	int
;	O
break	O
;	O
case	O
13	int
:	O
show_pid	char
=	O
1	int
;	O
break	O
;	O
case	O
'h'	O
:	O
case	O
3	int
:	O
default	O
:	O
give_usage	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
if	O
(	O
other_pacct_file_specified	int
==	O
0	int
)	O
pacct_init	function
(	O
backwards	int
)	O
;	O
if	O
(	O
optind	int
<	O
argc	int
)	O
{	O
all_list	pointer
=	O
hashtab_init	function
(	O
0	int
)	O
;	O
while	O
(	O
optind	int
<	O
argc	int
)	O
hashtab_create	function
(	O
all_list	pointer
,	O
argv	array
[	O
optind	int
++	O
]	O
,	O
0	int
)	O
;	O
}	O
if	O
(	O
strict_match_flag	int
)	O
{	O
if	O
(	O
(	O
tty_list	pointer
&&	O
(	O
tty_list	pointer
->	O
items_hashed	long
>	O
1	int
)	O
)	O
||	O
(	O
user_list	pointer
&&	O
(	O
user_list	pointer
->	O
items_hashed	long
>	O
1	int
)	O
)	O
||	O
(	O
command_list	pointer
&&	O
(	O
command_list	pointer
->	O
items_hashed	long
>	O
1	int
)	O
)	O
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"%s: ERROR: when using the `--strict-match' flag,\n"	pointer
"   it is nonsensical to specify more than one item\n"	pointer
"   to match in a single category (using the `--tty',\n"	pointer
"   `--user', or `--command' flags).\n"	pointer
,	O
program_name	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
if	O
(	O
debugging_enabled	int
)	O
{	O
if	O
(	O
all_list	pointer
)	O
{	O
(	O
void	O
)	O
fputs	function
(	O
"all_list\n--------\n"	pointer
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	function
(	O
all_list	pointer
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
tty_list	pointer
)	O
{	O
(	O
void	O
)	O
fputs	function
(	O
"tty_list\n--------\n"	pointer
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	function
(	O
tty_list	pointer
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
user_list	pointer
)	O
{	O
(	O
void	O
)	O
fputs	function
(	O
"user_list\n---------\n"	pointer
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	function
(	O
user_list	pointer
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
command_list	pointer
)	O
{	O
(	O
void	O
)	O
fputs	function
(	O
"command_list\n------------\n"	pointer
,	O
stddebug	O
)	O
;	O
hashtab_dump_keys	function
(	O
command_list	pointer
,	O
stddebug	O
)	O
;	O
}	O
}	O
if	O
(	O
!	O
other_pacct_file_specified	int
)	O
add_pacct_file	function
(	O
ACCT_FILE_LOC	pointer
)	O
;	O
parse_entries	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
void	O
give_usage	function
(	O
void	O
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"Usage: %s [-h"	pointer
"p"	pointer
"V] [-f file] [command] ... [user] ... [terminal] ...\n"	pointer
"       [--forwards] [--file <file>] [--strict-match] [--print-controls]\n"	pointer
"       [--user <name>] [--tty <name>] [--command <name>] [--debug]\n"	pointer
"       "	pointer
"[--show-paging] "	pointer
"[--pid] "	pointer
"[--ahz <freq>] [--version] [--help]\n"	pointer
,	O
program_name	pointer
)	O
;	O
print_acct_file_location	function
(	O
)	O
;	O
}	O
void	O
parse_entries	function
(	O
void	O
)	O
{	O
struct	O
acct	function
*	O
rec	pointer
;	O
time_t	long
btime	long
;	O
while	O
(	O
(	O
rec	pointer
=	O
pacct_get_entry	function
(	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
char	O
*	O
this_uid	pointer
=	O
uid_name	function
(	O
rec	pointer
->	O
ac_uid	int
)	O
;	O
char	O
*	O
this_dev	pointer
=	O
dev_gnu_name	function
(	O
(	O
long	O
)	O
rec	pointer
->	O
ac_tty	short
)	O
;	O
if	O
(	O
debugging_enabled	int
)	O
{	O
fprintf	function
(	O
stddebug	O
,	O
"---------------------------------------------------------------------------\nCURRENT REC: "	pointer
)	O
;	O
print_pacct_record	function
(	O
rec	pointer
,	O
stddebug	O
)	O
;	O
}	O
if	O
(	O
desired_entry	function
(	O
this_uid	pointer
,	O
this_dev	pointer
,	O
rec	pointer
->	O
ac_comm	array
)	O
)	O
{	O
double	O
ut	double
=	O
ACUTIME_2_DOUBLE	O
(	O
rec	pointer
->	O
ac_utime	short
)	O
;	O
double	O
st	double
=	O
ACSTIME_2_DOUBLE	O
(	O
rec	pointer
->	O
ac_stime	short
)	O
;	O
double	O
minf	double
=	O
ACMINFLT_2_DOUBLE	O
(	O
rec	pointer
->	O
ac_minflt	short
)	O
;	O
double	O
majf	double
=	O
ACMAJFLT_2_DOUBLE	O
(	O
rec	pointer
->	O
ac_majflt	short
)	O
;	O
double	O
swap	double
=	O
ACSWAPS_2_DOUBLE	O
(	O
rec	pointer
->	O
ac_swaps	short
)	O
;	O
if	O
(	O
!	O
print_controls	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
COMM_LEN	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
rec	pointer
->	O
ac_comm	array
[	O
i	int
]	O
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
!	O
isprint	function
(	O
rec	pointer
->	O
ac_comm	array
[	O
i	int
]	O
)	O
)	O
rec	pointer
->	O
ac_comm	array
[	O
i	int
]	O
=	O
'?'	O
;	O
}	O
}	O
(	O
void	O
)	O
printf	function
(	O
"%-*.*s "	pointer
,	O
COMM_LEN	O
,	O
COMM_LEN	O
,	O
rec	pointer
->	O
ac_comm	array
)	O
;	O
if	O
(	O
rec	pointer
->	O
ac_flag	char
&	O
ASU	int
)	O
(	O
void	O
)	O
putchar	function
(	O
'S'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
rec	pointer
->	O
ac_flag	char
&	O
AFORK	int
)	O
(	O
void	O
)	O
putchar	function
(	O
'F'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
rec	pointer
->	O
ac_flag	char
&	O
ACOMPAT	int
)	O
(	O
void	O
)	O
putchar	function
(	O
'C'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
rec	pointer
->	O
ac_flag	char
&	O
ACORE	int
)	O
(	O
void	O
)	O
putchar	function
(	O
'D'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
rec	pointer
->	O
ac_flag	char
&	O
AXSIG	int
)	O
(	O
void	O
)	O
putchar	function
(	O
'X'	O
)	O
;	O
else	O
(	O
void	O
)	O
putchar	function
(	O
' '	O
)	O
;	O
btime	long
=	O
(	O
time_t	long
)	O
rec	pointer
->	O
ac_btime	int
;	O
if	O
(	O
show_paging	int
==	O
0	int
)	O
(	O
void	O
)	O
printf	function
(	O
" %-8.8s %-8.8s %6.2f secs %-16.16s"	pointer
,	O
this_uid	pointer
,	O
this_dev	pointer
,	O
(	O
(	O
ut	double
+	O
st	double
)	O
/	O
(	O
double	O
)	O
rec	pointer
->	O
ac_ahz	short
)	O
,	O
ctime	function
(	O
&	O
btime	long
)	O
)	O
;	O
else	O
(	O
void	O
)	O
printf	function
(	O
" %6.0fmin %6.0fmaj %4.0fswp %6.2f secs %-16.16s"	pointer
,	O
minf	double
,	O
majf	double
,	O
swap	double
,	O
(	O
(	O
ut	double
+	O
st	double
)	O
/	O
(	O
double	O
)	O
rec	pointer
->	O
ac_ahz	short
)	O
,	O
ctime	function
(	O
&	O
btime	long
)	O
)	O
;	O
if	O
(	O
show_pid	char
)	O
{	O
if	O
(	O
(	O
rec	pointer
->	O
ac_version	char
&	O
0x7f	int
)	O
==	O
3	int
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
" %d %d"	pointer
,	O
rec	pointer
->	O
ac_pid	int
,	O
rec	pointer
->	O
ac_ppid	int
)	O
;	O
}	O
}	O
(	O
void	O
)	O
printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
}	O
}	O
int	O
desired_entry	function
(	O
char	O
*	O
uid	pointer
,	O
char	O
*	O
dev	pointer
,	O
char	O
*	O
comm	pointer
)	O
{	O
if	O
(	O
(	O
all_list	pointer
==	O
NULL	O
)	O
&&	O
(	O
user_list	pointer
==	O
NULL	O
)	O
&&	O
(	O
tty_list	pointer
==	O
NULL	O
)	O
&&	O
(	O
command_list	pointer
==	O
NULL	O
)	O
)	O
return	O
1	int
;	O
if	O
(	O
strict_match_flag	int
)	O
{	O
if	O
(	O
all_list	pointer
)	O
{	O
struct	O
hashtab_order	struct
ho	pointer
;	O
struct	O
hashtab_elem	struct
*	O
he	pointer
;	O
for	O
(	O
he	pointer
=	O
hashtab_first	function
(	O
all_list	pointer
,	O
&	O
ho	pointer
)	O
;	O
he	pointer
!=	O
NULL	O
;	O
he	pointer
=	O
hashtab_next	function
(	O
&	O
ho	pointer
)	O
)	O
{	O
int	O
commlen	int
=	O
strlen	function
(	O
comm	pointer
)	O
;	O
if	O
(	O
commlen	int
>	O
COMM_LEN	O
)	O
commlen	int
=	O
COMM_LEN	O
;	O
if	O
(	O
strcmp	function
(	O
he	pointer
->	O
key	pointer
,	O
uid	pointer
)	O
||	O
strcmp	function
(	O
he	pointer
->	O
key	pointer
,	O
dev	pointer
)	O
||	O
strncmp	function
(	O
he	pointer
->	O
key	pointer
,	O
comm	pointer
,	O
commlen	int
)	O
)	O
return	O
0	int
;	O
}	O
}	O
if	O
(	O
tty_list	pointer
&&	O
hashtab_find	function
(	O
tty_list	pointer
,	O
dev	pointer
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
user_list	pointer
&&	O
hashtab_find	function
(	O
user_list	pointer
,	O
uid	pointer
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
command_list	pointer
&&	O
hashtab_find	function
(	O
command_list	pointer
,	O
comm	pointer
,	O
(	O
unsigned	O
int	O
)	O
COMM_LEN	O
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
all_list	pointer
&&	O
(	O
hashtab_find	function
(	O
all_list	pointer
,	O
uid	pointer
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
||	O
hashtab_find	function
(	O
all_list	pointer
,	O
dev	pointer
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
||	O
hashtab_find	function
(	O
all_list	pointer
,	O
comm	pointer
,	O
(	O
unsigned	O
int	O
)	O
COMM_LEN	O
)	O
)	O
)	O
return	O
1	int
;	O
if	O
(	O
tty_list	pointer
&&	O
hashtab_find	function
(	O
tty_list	pointer
,	O
dev	pointer
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
user_list	pointer
&&	O
hashtab_find	function
(	O
user_list	pointer
,	O
uid	pointer
,	O
(	O
unsigned	O
int	O
)	O
0	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
command_list	pointer
&&	O
hashtab_find	function
(	O
command_list	pointer
,	O
comm	pointer
,	O
(	O
unsigned	O
int	O
)	O
COMM_LEN	O
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
}	O
