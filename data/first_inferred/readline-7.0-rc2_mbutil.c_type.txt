int	O
rl_byte_oriented	int
=	O
0	int
;	O
int	O
_rl_utf8locale	int
=	O
0	int
;	O
static	O
int	O
_rl_find_next_mbchar_internal	function
(	O
string	pointer
,	O
seed	int
,	O
count	int
,	O
find_non_zero	int
)	O
char	O
*	O
string	pointer
;	O
int	O
seed	int
,	O
count	int
,	O
find_non_zero	int
;	O
{	O
size_t	long
tmp	long
,	O
len	long
;	O
mbstate_t	struct
ps	struct
;	O
int	O
point	int
;	O
wchar_t	int
wc	int
;	O
tmp	long
=	O
0	int
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
if	O
(	O
seed	int
<	O
0	int
)	O
seed	int
=	O
0	int
;	O
if	O
(	O
count	int
<=	O
0	int
)	O
return	O
seed	int
;	O
point	int
=	O
seed	int
+	O
_rl_adjust_point	function
(	O
string	pointer
,	O
seed	int
,	O
&	O
ps	struct
)	O
;	O
if	O
(	O
seed	int
<	O
point	int
)	O
count	int
--	O
;	O
while	O
(	O
count	int
>	O
0	int
)	O
{	O
len	long
=	O
strlen	function
(	O
string	pointer
+	O
point	int
)	O
;	O
if	O
(	O
len	long
==	O
0	int
)	O
break	O
;	O
tmp	long
=	O
mbrtowc	function
(	O
&	O
wc	int
,	O
string	pointer
+	O
point	int
,	O
len	long
,	O
&	O
ps	struct
)	O
;	O
if	O
(	O
MB_INVALIDCH	O
(	O
(	O
size_t	long
)	O
tmp	long
)	O
)	O
{	O
point	int
++	O
;	O
count	int
--	O
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
}	O
else	O
if	O
(	O
MB_NULLWCH	O
(	O
tmp	long
)	O
)	O
break	O
;	O
else	O
{	O
point	int
+=	O
tmp	long
;	O
if	O
(	O
find_non_zero	int
)	O
{	O
if	O
(	O
WCWIDTH	O
(	O
wc	int
)	O
==	O
0	int
)	O
continue	O
;	O
else	O
count	int
--	O
;	O
}	O
else	O
count	int
--	O
;	O
}	O
}	O
if	O
(	O
find_non_zero	int
)	O
{	O
tmp	long
=	O
mbrtowc	function
(	O
&	O
wc	int
,	O
string	pointer
+	O
point	int
,	O
strlen	function
(	O
string	pointer
+	O
point	int
)	O
,	O
&	O
ps	struct
)	O
;	O
while	O
(	O
MB_NULLWCH	O
(	O
tmp	long
)	O
==	O
0	int
&&	O
MB_INVALIDCH	O
(	O
tmp	long
)	O
==	O
0	int
&&	O
WCWIDTH	O
(	O
wc	int
)	O
==	O
0	int
)	O
{	O
point	int
+=	O
tmp	long
;	O
tmp	long
=	O
mbrtowc	function
(	O
&	O
wc	int
,	O
string	pointer
+	O
point	int
,	O
strlen	function
(	O
string	pointer
+	O
point	int
)	O
,	O
&	O
ps	struct
)	O
;	O
}	O
}	O
return	O
point	int
;	O
}	O
int	O
_rl_find_prev_mbchar_internal	function
(	O
string	pointer
,	O
seed	int
,	O
find_non_zero	int
)	O
char	O
*	O
string	pointer
;	O
int	O
seed	int
,	O
find_non_zero	int
;	O
{	O
mbstate_t	struct
ps	struct
;	O
int	O
prev	int
,	O
non_zero_prev	int
,	O
point	int
,	O
length	int
;	O
size_t	long
tmp	long
;	O
wchar_t	int
wc	int
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
length	int
=	O
strlen	function
(	O
string	pointer
)	O
;	O
if	O
(	O
seed	int
<	O
0	int
)	O
return	O
0	int
;	O
else	O
if	O
(	O
length	int
<	O
seed	int
)	O
return	O
length	int
;	O
prev	int
=	O
non_zero_prev	int
=	O
point	int
=	O
0	int
;	O
while	O
(	O
point	int
<	O
seed	int
)	O
{	O
tmp	long
=	O
mbrtowc	function
(	O
&	O
wc	int
,	O
string	pointer
+	O
point	int
,	O
length	int
-	O
point	int
,	O
&	O
ps	struct
)	O
;	O
if	O
(	O
MB_INVALIDCH	O
(	O
(	O
size_t	long
)	O
tmp	long
)	O
)	O
{	O
tmp	long
=	O
1	int
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
prev	int
=	O
point	int
;	O
}	O
else	O
if	O
(	O
MB_NULLWCH	O
(	O
tmp	long
)	O
)	O
break	O
;	O
else	O
{	O
if	O
(	O
find_non_zero	int
)	O
{	O
if	O
(	O
WCWIDTH	O
(	O
wc	int
)	O
!=	O
0	int
)	O
prev	int
=	O
point	int
;	O
}	O
else	O
prev	int
=	O
point	int
;	O
}	O
point	int
+=	O
tmp	long
;	O
}	O
return	O
prev	int
;	O
}	O
int	O
_rl_get_char_len	function
(	O
src	pointer
,	O
ps	struct
)	O
char	O
*	O
src	pointer
;	O
mbstate_t	struct
*	O
ps	struct
;	O
{	O
size_t	long
tmp	long
;	O
tmp	long
=	O
mbrlen	function
(	O
(	O
const	O
char	O
*	O
)	O
src	pointer
,	O
(	O
size_t	long
)	O
strlen	function
(	O
src	pointer
)	O
,	O
ps	struct
)	O
;	O
if	O
(	O
tmp	long
==	O
(	O
size_t	long
)	O
(	O
-	O
2	int
)	O
)	O
{	O
if	O
(	O
ps	struct
)	O
memset	function
(	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
return	O
-	O
2	int
;	O
}	O
else	O
if	O
(	O
tmp	long
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
{	O
if	O
(	O
ps	struct
)	O
memset	function
(	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
tmp	long
==	O
(	O
size_t	long
)	O
0	int
)	O
return	O
0	int
;	O
else	O
return	O
(	O
int	O
)	O
tmp	long
;	O
}	O
int	O
_rl_compare_chars	function
(	O
buf1	pointer
,	O
pos1	int
,	O
ps1	pointer
,	O
buf2	pointer
,	O
pos2	int
,	O
ps2	pointer
)	O
char	O
*	O
buf1	pointer
;	O
int	O
pos1	int
;	O
mbstate_t	struct
*	O
ps1	pointer
;	O
char	O
*	O
buf2	pointer
;	O
int	O
pos2	int
;	O
mbstate_t	struct
*	O
ps2	pointer
;	O
{	O
int	O
i	int
,	O
w1	int
,	O
w2	int
;	O
if	O
(	O
(	O
w1	int
=	O
_rl_get_char_len	function
(	O
&	O
buf1	pointer
[	O
pos1	int
]	O
,	O
ps1	pointer
)	O
)	O
<=	O
0	int
||	O
(	O
w2	int
=	O
_rl_get_char_len	function
(	O
&	O
buf2	pointer
[	O
pos2	int
]	O
,	O
ps2	pointer
)	O
)	O
<=	O
0	int
||	O
(	O
w1	int
!=	O
w2	int
)	O
||	O
(	O
buf1	pointer
[	O
pos1	int
]	O
!=	O
buf2	pointer
[	O
pos2	int
]	O
)	O
)	O
return	O
0	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
w1	int
;	O
i	int
++	O
)	O
if	O
(	O
buf1	pointer
[	O
pos1	int
+	O
i	int
]	O
!=	O
buf2	pointer
[	O
pos2	int
+	O
i	int
]	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
int	O
_rl_adjust_point	function
(	O
string	pointer
,	O
point	int
,	O
ps	struct
)	O
char	O
*	O
string	pointer
;	O
int	O
point	int
;	O
mbstate_t	struct
*	O
ps	struct
;	O
{	O
size_t	long
tmp	long
=	O
0	int
;	O
int	O
length	int
;	O
int	O
pos	int
=	O
0	int
;	O
length	int
=	O
strlen	function
(	O
string	pointer
)	O
;	O
if	O
(	O
point	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
length	int
<	O
point	int
)	O
return	O
-	O
1	int
;	O
while	O
(	O
pos	int
<	O
point	int
)	O
{	O
tmp	long
=	O
mbrlen	function
(	O
string	pointer
+	O
pos	int
,	O
length	int
-	O
pos	int
,	O
ps	struct
)	O
;	O
if	O
(	O
MB_INVALIDCH	O
(	O
(	O
size_t	long
)	O
tmp	long
)	O
)	O
{	O
pos	int
++	O
;	O
if	O
(	O
ps	struct
)	O
memset	function
(	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
}	O
else	O
if	O
(	O
MB_NULLWCH	O
(	O
tmp	long
)	O
)	O
pos	int
++	O
;	O
else	O
pos	int
+=	O
tmp	long
;	O
}	O
return	O
(	O
pos	int
-	O
point	int
)	O
;	O
}	O
int	O
_rl_is_mbchar_matched	function
(	O
string	pointer
,	O
seed	int
,	O
end	int
,	O
mbchar	pointer
,	O
length	int
)	O
char	O
*	O
string	pointer
;	O
int	O
seed	int
,	O
end	int
;	O
char	O
*	O
mbchar	pointer
;	O
int	O
length	int
;	O
{	O
int	O
i	int
;	O
if	O
(	O
(	O
end	int
-	O
seed	int
)	O
<	O
length	int
)	O
return	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
length	int
;	O
i	int
++	O
)	O
if	O
(	O
string	pointer
[	O
seed	int
+	O
i	int
]	O
!=	O
mbchar	pointer
[	O
i	int
]	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
wchar_t	int
_rl_char_value	function
(	O
buf	pointer
,	O
ind	int
)	O
char	O
*	O
buf	pointer
;	O
int	O
ind	int
;	O
{	O
size_t	long
tmp	long
;	O
wchar_t	int
wc	int
;	O
mbstate_t	struct
ps	struct
;	O
int	O
l	int
;	O
if	O
(	O
MB_LEN_MAX	int
==	O
1	int
||	O
rl_byte_oriented	int
)	O
return	O
(	O
(	O
wchar_t	int
)	O
buf	pointer
[	O
ind	int
]	O
)	O
;	O
l	int
=	O
strlen	function
(	O
buf	pointer
)	O
;	O
if	O
(	O
ind	int
>=	O
l	int
-	O
1	int
)	O
return	O
(	O
(	O
wchar_t	int
)	O
buf	pointer
[	O
ind	int
]	O
)	O
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
tmp	long
=	O
mbrtowc	function
(	O
&	O
wc	int
,	O
buf	pointer
+	O
ind	int
,	O
l	int
-	O
ind	int
,	O
&	O
ps	struct
)	O
;	O
if	O
(	O
MB_INVALIDCH	O
(	O
tmp	long
)	O
||	O
MB_NULLWCH	O
(	O
tmp	long
)	O
)	O
return	O
(	O
(	O
wchar_t	int
)	O
buf	pointer
[	O
ind	int
]	O
)	O
;	O
return	O
wc	int
;	O
}	O
int	O
_rl_find_next_mbchar	function
(	O
string	pointer
,	O
seed	int
,	O
count	int
,	O
flags	int
)	O
char	O
*	O
string	pointer
;	O
int	O
seed	int
,	O
count	int
,	O
flags	int
;	O
{	O
return	O
_rl_find_next_mbchar_internal	function
(	O
string	pointer
,	O
seed	int
,	O
count	int
,	O
flags	int
)	O
;	O
}	O
int	O
_rl_find_prev_mbchar	function
(	O
string	pointer
,	O
seed	int
,	O
flags	int
)	O
char	O
*	O
string	pointer
;	O
int	O
seed	int
,	O
flags	int
;	O
{	O
return	O
_rl_find_prev_mbchar_internal	function
(	O
string	pointer
,	O
seed	int
,	O
flags	int
)	O
;	O
}	O
