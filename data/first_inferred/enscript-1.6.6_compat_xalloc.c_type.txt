void	O
*	O
xmalloc	function
(	O
size	long
)	O
size_t	long
size	long
;	O
{	O
void	O
*	O
ptr	pointer
;	O
ptr	pointer
=	O
malloc	function
(	O
size	long
)	O
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"xmalloc(): couldn't allocate %d bytes\n"	pointer
)	O
,	O
size	long
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
ptr	pointer
;	O
}	O
void	O
*	O
xcalloc	function
(	O
num	long
,	O
size	long
)	O
size_t	long
num	long
;	O
size_t	long
size	long
;	O
{	O
void	O
*	O
ptr	pointer
;	O
ptr	pointer
=	O
calloc	function
(	O
num	long
,	O
size	long
)	O
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"xcalloc(): couldn't allocate %d bytes\n"	pointer
)	O
,	O
size	long
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
ptr	pointer
;	O
}	O
void	O
*	O
xrealloc	function
(	O
ptr	pointer
,	O
size	long
)	O
void	O
*	O
ptr	pointer
;	O
size_t	long
size	long
;	O
{	O
void	O
*	O
nptr	pointer
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
)	O
return	O
xmalloc	function
(	O
size	long
)	O
;	O
nptr	pointer
=	O
realloc	function
(	O
ptr	pointer
,	O
size	long
)	O
;	O
if	O
(	O
nptr	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"xrealloc(): couldn't reallocate %d bytes\n"	pointer
)	O
,	O
size	long
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
nptr	pointer
;	O
}	O
void	O
xfree	function
(	O
ptr	pointer
)	O
void	O
*	O
ptr	pointer
;	O
{	O
if	O
(	O
ptr	pointer
==	O
NULL	O
)	O
return	O
;	O
free	function
(	O
ptr	pointer
)	O
;	O
}	O
char	O
*	O
xstrdup	function
(	O
str	pointer
)	O
char	O
*	O
str	pointer
;	O
{	O
char	O
*	O
tmp	pointer
;	O
tmp	pointer
=	O
xmalloc	function
(	O
strlen	function
(	O
str	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
tmp	pointer
,	O
str	pointer
)	O
;	O
return	O
tmp	pointer
;	O
}	O
