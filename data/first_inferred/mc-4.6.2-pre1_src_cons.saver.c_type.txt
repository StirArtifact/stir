static	O
void	O
send_contents	function
(	O
char	O
*	O
buffer	pointer
,	O
unsigned	O
int	O
columns	int
,	O
unsigned	O
int	O
rows	int
)	O
{	O
unsigned	O
char	O
begin_line	char
=	O
0	int
,	O
end_line	char
=	O
0	int
;	O
unsigned	O
int	O
lastline	int
,	O
index	function
,	O
x	int
;	O
unsigned	O
char	O
message	char
,	O
outbuf	array
[	O
1024	int
]	O
,	O
*	O
p	pointer
;	O
unsigned	O
short	O
bytes	short
;	O
index	function
=	O
2	int
*	O
rows	int
*	O
columns	int
;	O
for	O
(	O
lastline	int
=	O
rows	int
;	O
lastline	int
>	O
0	int
;	O
lastline	int
--	O
)	O
for	O
(	O
x	int
=	O
0	int
;	O
x	int
<	O
columns	int
;	O
x	int
++	O
)	O
{	O
index	function
-=	O
2	int
;	O
if	O
(	O
buffer	pointer
[	O
index	function
]	O
!=	O
' '	O
)	O
goto	O
out	O
;	O
}	O
out	O
:	O
message	char
=	O
CONSOLE_CONTENTS	int
;	O
write	pointer
(	O
1	int
,	O
&	O
message	char
,	O
1	int
)	O
;	O
read	pointer
(	O
0	int
,	O
&	O
begin_line	char
,	O
1	int
)	O
;	O
read	pointer
(	O
0	int
,	O
&	O
end_line	char
,	O
1	int
)	O
;	O
if	O
(	O
begin_line	char
>	O
lastline	int
)	O
begin_line	char
=	O
lastline	int
;	O
if	O
(	O
end_line	char
>	O
lastline	int
)	O
end_line	char
=	O
lastline	int
;	O
index	function
=	O
(	O
end_line	char
-	O
begin_line	char
)	O
*	O
columns	int
;	O
bytes	short
=	O
index	function
;	O
if	O
(	O
index	function
!=	O
bytes	short
)	O
bytes	short
=	O
0	int
;	O
write	pointer
(	O
1	int
,	O
&	O
bytes	short
,	O
2	int
)	O
;	O
if	O
(	O
!	O
bytes	short
)	O
return	O
;	O
p	pointer
=	O
outbuf	array
;	O
for	O
(	O
index	function
=	O
2	int
*	O
begin_line	char
*	O
columns	int
;	O
index	function
<	O
2	int
*	O
end_line	char
*	O
columns	int
;	O
index	function
+=	O
2	int
)	O
{	O
*	O
p	pointer
++	O
=	O
buffer	pointer
[	O
index	function
]	O
;	O
if	O
(	O
p	pointer
==	O
outbuf	array
+	O
sizeof	O
(	O
outbuf	array
)	O
)	O
{	O
write	pointer
(	O
1	int
,	O
outbuf	array
,	O
sizeof	O
(	O
outbuf	array
)	O
)	O
;	O
p	pointer
=	O
outbuf	array
;	O
}	O
}	O
if	O
(	O
p	pointer
!=	O
outbuf	array
)	O
write	pointer
(	O
1	int
,	O
outbuf	array
,	O
p	pointer
-	O
outbuf	array
)	O
;	O
}	O
static	O
void	O
__attribute__	O
(	O
(	O
noreturn	O
)	O
)	O
die	function
(	O
void	O
)	O
{	O
unsigned	O
char	O
zero	char
=	O
0	int
;	O
write	pointer
(	O
1	int
,	O
&	O
zero	char
,	O
1	int
)	O
;	O
exit	function
(	O
3	int
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
char	O
action	char
=	O
0	int
,	O
console_flag	char
=	O
3	int
;	O
int	O
console_fd	int
,	O
vcsa_fd	int
,	O
console_minor	int
,	O
buffer_size	int
;	O
struct	O
stat	struct
st	struct
;	O
uid_t	int
uid	int
,	O
euid	int
;	O
char	O
*	O
buffer	pointer
,	O
*	O
tty_name	pointer
,	O
console_name	array
[	O
16	int
]	O
,	O
vcsa_name	array
[	O
16	int
]	O
,	O
*	O
p	pointer
,	O
*	O
q	pointer
;	O
struct	O
winsize	struct
winsz	struct
;	O
close	pointer
(	O
2	int
)	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
die	function
(	O
)	O
;	O
tty_name	pointer
=	O
argv	pointer
[	O
1	int
]	O
;	O
if	O
(	O
strnlen	function
(	O
tty_name	pointer
,	O
15	int
)	O
==	O
15	int
||	O
strncmp	function
(	O
tty_name	pointer
,	O
"/dev/"	pointer
,	O
5	int
)	O
)	O
die	function
(	O
)	O
;	O
setsid	function
(	O
)	O
;	O
uid	int
=	O
getuid	function
(	O
)	O
;	O
euid	int
=	O
geteuid	function
(	O
)	O
;	O
if	O
(	O
seteuid	function
(	O
uid	int
)	O
<	O
0	int
)	O
die	function
(	O
)	O
;	O
console_fd	int
=	O
open	function
(	O
tty_name	pointer
,	O
O_RDONLY	int
)	O
;	O
if	O
(	O
console_fd	int
<	O
0	int
)	O
die	function
(	O
)	O
;	O
if	O
(	O
fstat	function
(	O
console_fd	int
,	O
&	O
st	struct
)	O
<	O
0	int
||	O
!	O
S_ISCHR	O
(	O
st	struct
.	O
st_mode	int
)	O
)	O
die	function
(	O
)	O
;	O
if	O
(	O
(	O
st	struct
.	O
st_rdev	long
&	O
0xff00	int
)	O
!=	O
0x0400	int
)	O
die	function
(	O
)	O
;	O
console_minor	int
=	O
(	O
int	O
)	O
(	O
st	struct
.	O
st_rdev	long
&	O
0x00ff	int
)	O
;	O
if	O
(	O
console_minor	int
<	O
1	int
||	O
console_minor	int
>	O
63	int
)	O
die	function
(	O
)	O
;	O
if	O
(	O
st	struct
.	O
st_uid	int
!=	O
uid	int
)	O
die	function
(	O
)	O
;	O
switch	O
(	O
tty_name	pointer
[	O
5	int
]	O
)	O
{	O
case	O
'v'	O
:	O
p	pointer
=	O
"/dev/vc/%d"	pointer
;	O
q	pointer
=	O
"/dev/vcc/a%d"	pointer
;	O
break	O
;	O
case	O
't'	O
:	O
p	pointer
=	O
"/dev/tty%d"	pointer
;	O
q	pointer
=	O
"/dev/vcsa%d"	pointer
;	O
break	O
;	O
default	O
:	O
die	function
(	O
)	O
;	O
break	O
;	O
}	O
snprintf	function
(	O
console_name	array
,	O
sizeof	O
(	O
console_name	array
)	O
,	O
p	pointer
,	O
console_minor	int
)	O
;	O
if	O
(	O
strncmp	function
(	O
console_name	array
,	O
tty_name	pointer
,	O
sizeof	O
(	O
console_name	array
)	O
)	O
!=	O
0	int
)	O
die	function
(	O
)	O
;	O
if	O
(	O
seteuid	function
(	O
euid	int
)	O
<	O
0	int
)	O
die	function
(	O
)	O
;	O
snprintf	function
(	O
vcsa_name	array
,	O
sizeof	O
(	O
vcsa_name	array
)	O
,	O
q	pointer
,	O
console_minor	int
)	O
;	O
vcsa_fd	int
=	O
open	function
(	O
vcsa_name	array
,	O
O_RDWR	int
)	O
;	O
if	O
(	O
vcsa_fd	int
<	O
0	int
)	O
die	function
(	O
)	O
;	O
if	O
(	O
fstat	function
(	O
vcsa_fd	int
,	O
&	O
st	struct
)	O
<	O
0	int
||	O
!	O
S_ISCHR	O
(	O
st	struct
.	O
st_mode	int
)	O
)	O
die	function
(	O
)	O
;	O
if	O
(	O
seteuid	function
(	O
uid	int
)	O
<	O
0	int
)	O
die	function
(	O
)	O
;	O
winsz	struct
.	O
ws_col	short
=	O
winsz	struct
.	O
ws_row	short
=	O
0	int
;	O
if	O
(	O
ioctl	function
(	O
console_fd	int
,	O
TIOCGWINSZ	int
,	O
&	O
winsz	struct
)	O
<	O
0	int
||	O
winsz	struct
.	O
ws_col	short
<=	O
0	int
||	O
winsz	struct
.	O
ws_row	short
<=	O
0	int
||	O
winsz	struct
.	O
ws_col	short
>=	O
256	int
||	O
winsz	struct
.	O
ws_row	short
>=	O
256	int
)	O
die	function
(	O
)	O
;	O
buffer_size	int
=	O
4	int
+	O
2	int
*	O
winsz	struct
.	O
ws_col	short
*	O
winsz	struct
.	O
ws_row	short
;	O
buffer	pointer
=	O
calloc	function
(	O
buffer_size	int
,	O
1	int
)	O
;	O
if	O
(	O
buffer	pointer
==	O
NULL	O
)	O
die	function
(	O
)	O
;	O
write	pointer
(	O
1	int
,	O
&	O
console_flag	char
,	O
1	int
)	O
;	O
while	O
(	O
console_flag	char
&&	O
read	pointer
(	O
0	int
,	O
&	O
action	char
,	O
1	int
)	O
==	O
1	int
)	O
{	O
switch	O
(	O
action	char
)	O
{	O
case	O
CONSOLE_DONE	int
:	O
console_flag	char
=	O
0	int
;	O
continue	O
;	O
case	O
CONSOLE_SAVE	int
:	O
if	O
(	O
seteuid	function
(	O
euid	int
)	O
<	O
0	int
||	O
lseek	function
(	O
vcsa_fd	int
,	O
0	int
,	O
0	int
)	O
!=	O
0	int
||	O
fstat	function
(	O
console_fd	int
,	O
&	O
st	struct
)	O
<	O
0	int
||	O
st	struct
.	O
st_uid	int
!=	O
uid	int
||	O
read	pointer
(	O
vcsa_fd	int
,	O
buffer	pointer
,	O
buffer_size	int
)	O
!=	O
buffer_size	int
||	O
fstat	function
(	O
console_fd	int
,	O
&	O
st	struct
)	O
<	O
0	int
||	O
st	struct
.	O
st_uid	int
!=	O
uid	int
)	O
memset	function
(	O
buffer	pointer
,	O
0	int
,	O
buffer_size	int
)	O
;	O
if	O
(	O
seteuid	function
(	O
uid	int
)	O
<	O
0	int
)	O
die	function
(	O
)	O
;	O
break	O
;	O
case	O
CONSOLE_RESTORE	int
:	O
if	O
(	O
seteuid	function
(	O
euid	int
)	O
>=	O
0	int
&&	O
lseek	function
(	O
vcsa_fd	int
,	O
0	int
,	O
0	int
)	O
==	O
0	int
&&	O
fstat	function
(	O
console_fd	int
,	O
&	O
st	struct
)	O
>=	O
0	int
&&	O
st	struct
.	O
st_uid	int
==	O
uid	int
)	O
write	pointer
(	O
vcsa_fd	int
,	O
buffer	pointer
,	O
buffer_size	int
)	O
;	O
if	O
(	O
seteuid	function
(	O
uid	int
)	O
<	O
0	int
)	O
die	function
(	O
)	O
;	O
break	O
;	O
case	O
CONSOLE_CONTENTS	int
:	O
send_contents	function
(	O
buffer	pointer
+	O
4	int
,	O
winsz	struct
.	O
ws_col	short
,	O
winsz	struct
.	O
ws_row	short
)	O
;	O
break	O
;	O
}	O
write	pointer
(	O
1	int
,	O
&	O
console_flag	char
,	O
1	int
)	O
;	O
}	O
exit	function
(	O
0	int
)	O
;	O
}	O
