static	O
int	O
sort_names	function
(	O
char	O
const	O
*	O
aname	pointer
,	O
void	O
const	O
*	O
adata	pointer
,	O
char	O
const	O
*	O
bname	pointer
,	O
void	O
const	O
*	O
bdata	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
return	O
mu_c_strcasecmp	function
(	O
aname	pointer
,	O
bname	pointer
)	O
;	O
}	O
static	O
int	O
print_param	function
(	O
const	O
char	O
*	O
name	pointer
,	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
mu_mime_param	struct
*	O
param	pointer
=	O
item	pointer
;	O
mu_printf	function
(	O
"%s"	pointer
,	O
name	pointer
)	O
;	O
if	O
(	O
param	pointer
->	O
lang	pointer
)	O
mu_printf	function
(	O
"(lang:%s/%s)"	pointer
,	O
param	pointer
->	O
lang	pointer
,	O
param	pointer
->	O
cset	pointer
)	O
;	O
mu_printf	function
(	O
"=%s\n"	pointer
,	O
param	pointer
->	O
value	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
i	int
;	O
mu_stream_t	pointer
tmp	pointer
;	O
mu_transport_t	pointer
trans	pointer
[	O
2	int
]	O
;	O
char	O
*	O
value	pointer
;	O
mu_assoc_t	pointer
assoc	pointer
;	O
char	O
*	O
charset	pointer
=	O
NULL	O
;	O
char	O
*	O
header_name	pointer
=	O
NULL	O
;	O
unsigned	O
long	O
width	long
=	O
76	int
;	O
mu_set_program_name	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
opt	pointer
=	O
argv	pointer
[	O
i	int
]	O
;	O
if	O
(	O
strncmp	function
(	O
opt	pointer
,	O
"-debug="	pointer
,	O
7	int
)	O
==	O
0	int
)	O
mu_debug_parse_spec	function
(	O
opt	pointer
+	O
7	int
)	O
;	O
else	O
if	O
(	O
strncmp	function
(	O
opt	pointer
,	O
"-charset="	pointer
,	O
9	int
)	O
==	O
0	int
)	O
charset	pointer
=	O
opt	pointer
+	O
9	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
opt	pointer
,	O
"-h"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
opt	pointer
,	O
"-help"	pointer
)	O
==	O
0	int
)	O
{	O
mu_printf	function
(	O
"usage: %s [-charset=cs] [-debug=SPEC] [-header=NAME] [-width=N]"	pointer
,	O
mu_program_name	pointer
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
strncmp	function
(	O
opt	pointer
,	O
"-header="	pointer
,	O
8	int
)	O
==	O
0	int
)	O
header_name	pointer
=	O
opt	pointer
+	O
8	int
;	O
else	O
if	O
(	O
strncmp	function
(	O
opt	pointer
,	O
"-width="	pointer
,	O
7	int
)	O
==	O
0	int
)	O
width	long
=	O
strtoul	function
(	O
opt	pointer
+	O
7	int
,	O
NULL	O
,	O
10	int
)	O
;	O
else	O
{	O
mu_error	function
(	O
"unknown option %s"	pointer
,	O
opt	pointer
)	O
;	O
return	O
1	int
;	O
}	O
}	O
if	O
(	O
i	int
!=	O
argc	int
)	O
{	O
mu_error	function
(	O
"too many arguments"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
MU_ASSERT	O
(	O
mu_memory_stream_create	function
(	O
&	O
tmp	pointer
,	O
MU_STREAM_RDWR	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	function
(	O
tmp	pointer
,	O
mu_strin	pointer
,	O
0	int
,	O
NULL	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_write	function
(	O
tmp	pointer
,	O
""	pointer
,	O
1	int
,	O
NULL	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_ioctl	function
(	O
tmp	pointer
,	O
MU_IOCTL_TRANSPORT	int
,	O
MU_IOCTL_OP_GET	int
,	O
trans	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mime_header_parse	function
(	O
(	O
char	O
*	O
)	O
trans	pointer
[	O
0	int
]	O
,	O
charset	pointer
,	O
&	O
value	pointer
,	O
&	O
assoc	pointer
)	O
)	O
;	O
if	O
(	O
header_name	pointer
)	O
{	O
mu_header_t	pointer
hdr	pointer
;	O
mu_stream_t	pointer
hstr	pointer
;	O
MU_ASSERT	O
(	O
mu_header_create	function
(	O
&	O
hdr	pointer
,	O
NULL	O
,	O
0	int
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mime_header_set_w	function
(	O
hdr	pointer
,	O
header_name	pointer
,	O
value	pointer
,	O
assoc	pointer
,	O
width	long
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_get_streamref	function
(	O
hdr	pointer
,	O
&	O
hstr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	function
(	O
mu_strout	pointer
,	O
hstr	pointer
,	O
0	int
,	O
NULL	O
)	O
)	O
;	O
}	O
else	O
{	O
mu_printf	function
(	O
"%s\n"	pointer
,	O
value	pointer
)	O
;	O
mu_assoc_sort_r	function
(	O
assoc	pointer
,	O
sort_names	function
,	O
NULL	O
)	O
;	O
mu_assoc_foreach	function
(	O
assoc	pointer
,	O
print_param	function
,	O
NULL	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
