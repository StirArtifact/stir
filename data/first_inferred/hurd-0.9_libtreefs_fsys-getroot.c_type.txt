error_t	function
_treefs_s_fsys_getroot	function
(	O
struct	O
treefs_fsys	struct
*	O
fsys	pointer
,	O
mach_port_t	O
dotdot	int
,	O
uid_t	O
*	O
uids	pointer
,	O
unsigned	O
nuids	int
,	O
uid_t	O
*	O
gids	pointer
,	O
unsigned	O
ngids	int
,	O
int	O
flags	int
,	O
retry_type	O
*	O
retry	pointer
,	O
char	O
*	O
retry_name	pointer
,	O
file_t	O
*	O
result	pointer
,	O
mach_msg_type_name_t	O
*	O
result_type	pointer
)	O
{	O
error_t	function
err	O
;	O
mode_t	int
type	enum
;	O
struct	O
treefs_node	struct
*	O
root	pointer
;	O
struct	O
treefs_auth	struct
*	O
auth	pointer
;	O
flags	int
&=	O
O_HURD	O
;	O
err	O
=	O
treefs_fsys_get_root	function
(	O
fsys	pointer
,	O
&	O
root	pointer
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
O_NOTRANS	O
)	O
)	O
{	O
fsys_t	O
child_fsys	O
;	O
do	O
{	O
err	O
=	O
treefs_node_get_active_trans	function
(	O
root	pointer
,	O
0	int
,	O
0	int
,	O
&	O
dotdot	int
,	O
&	O
child_fsys	O
)	O
;	O
if	O
(	O
err	O
==	O
0	int
&&	O
child_fsys	O
!=	O
MACH_PORT_NULL	O
)	O
{	O
err	O
=	O
fsys_getroot	function
(	O
child_fsys	O
,	O
dotdot	int
,	O
MACH_MSG_TYPE_COPY_SEND	O
,	O
uids	pointer
,	O
nuids	int
,	O
gids	pointer
,	O
ngids	int
,	O
flags	int
,	O
retry	pointer
,	O
retry_name	pointer
,	O
result	pointer
)	O
;	O
if	O
(	O
err	O
==	O
MACH_SEND_INVALID_DEST	O
||	O
err	O
==	O
EMIG_SERVER_DIED	O
)	O
treefs_node_drop_active_trans	function
(	O
root	pointer
,	O
control_port	pointer
)	O
;	O
}	O
}	O
while	O
(	O
err	O
==	O
MACH_SEND_INVALID_DEST	O
||	O
err	O
==	O
MIG_SERVER_DIED	O
)	O
;	O
if	O
(	O
err	O
||	O
child_fsys	O
)	O
{	O
if	O
(	O
!	O
err	O
&&	O
*	O
result	pointer
!=	O
MACH_PORT_NULL	O
)	O
*	O
result_type	pointer
=	O
MACH_MSG_TYPE_MOVE_SEND	O
;	O
else	O
*	O
result_type	pointer
=	O
MACH_MSG_TYPE_COPY_SEND	O
;	O
if	O
(	O
!	O
err	O
)	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
dotdot	int
)	O
;	O
treefs_node_unref	function
(	O
root	pointer
)	O
;	O
return	O
err	O
;	O
}	O
}	O
pthread_mutex_lock	function
(	O
&	O
root	pointer
->	O
lock	int
)	O
;	O
type	enum
=	O
treefs_node_type	function
(	O
root	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
S_IFLNK	O
&&	O
!	O
(	O
flags	int
&	O
(	O
O_NOLINK	O
|	O
O_NOTRANS	O
)	O
)	O
)	O
{	O
int	O
sym_len	int
=	O
1000	int
;	O
char	O
path_buf	O
[	O
sym_len	int
+	O
1	int
]	O
,	O
*	O
path	pointer
=	O
path_buf	O
;	O
err	O
=	O
treefs_node_get_symlink	function
(	O
root	pointer
,	O
path	pointer
,	O
&	O
sym_len	int
)	O
;	O
if	O
(	O
err	O
==	O
E2BIG	O
)	O
{	O
path	pointer
=	O
alloca	O
(	O
sym_len	int
+	O
1	int
)	O
;	O
err	O
=	O
treefs_node_get_symlink	function
(	O
node	pointer
,	O
path	pointer
,	O
&	O
sym_len	int
)	O
;	O
}	O
if	O
(	O
err	O
)	O
goto	O
out	O
;	O
if	O
(	O
*	O
path	pointer
==	O
'/'	O
)	O
{	O
*	O
retry	pointer
=	O
FS_RETRY_MAGICAL	O
;	O
*	O
result	pointer
=	O
MACH_PORT_NULL	O
;	O
*	O
result_type	pointer
=	O
MACH_MSG_TYPE_COPY_SEND	O
;	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
dotdot	int
)	O
;	O
}	O
else	O
{	O
*	O
retry	pointer
=	O
FS_RETRY_REAUTH	O
;	O
*	O
result	pointer
=	O
dotdot	int
;	O
*	O
result_type	pointer
=	O
MACH_MSG_TYPE_COPY_SEND	O
;	O
}	O
strcpy	O
(	O
retry_name	pointer
,	O
path	pointer
)	O
;	O
goto	O
out	O
;	O
}	O
err	O
=	O
treefs_node_create_auth	function
(	O
root	pointer
,	O
uids	pointer
,	O
nuids	int
,	O
gids	pointer
,	O
ngids	int
,	O
&	O
auth	pointer
)	O
;	O
if	O
(	O
err	O
)	O
goto	O
out	O
;	O
*	O
retry	pointer
=	O
FS_RETRY_NORMAL	O
;	O
*	O
retry_name	pointer
=	O
'\0'	O
;	O
*	O
result_type	pointer
=	O
MACH_MSG_TYPE_MAKE_SEND	O
;	O
err	O
=	O
treefs_node_create_right	function
(	O
root	pointer
,	O
dotdot	int
,	O
flags	int
,	O
auth	pointer
,	O
result	pointer
)	O
;	O
treefs_node_auth_unref	function
(	O
root	pointer
,	O
auth	pointer
)	O
;	O
out	O
:	O
treefs_node_release	function
(	O
root	pointer
)	O
;	O
return	O
err	O
;	O
}	O
