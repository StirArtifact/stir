const	O
char	O
hello	array
[	O
]	O
=	O
"hello, hello!"	pointer
;	O
const	O
char	O
dictionary	pointer
[	O
]	O
=	O
"hello"	pointer
;	O
uLong	long
dictId	long
;	O
void	O
test_compress	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
,	O
Byte	char
*	O
uncompr	pointer
,	O
uLong	long
uncomprLen	long
)	O
)	O
;	O
void	O
test_gzio	function
OF	O
(	O
(	O
const	O
char	O
*	O
out	pointer
,	O
const	O
char	O
*	O
in	pointer
,	O
Byte	char
*	O
uncompr	pointer
,	O
int	O
uncomprLen	long
)	O
)	O
;	O
void	O
test_deflate	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
)	O
)	O
;	O
void	O
test_inflate	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
,	O
Byte	char
*	O
uncompr	pointer
,	O
uLong	long
uncomprLen	long
)	O
)	O
;	O
void	O
test_large_deflate	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
,	O
Byte	char
*	O
uncompr	pointer
,	O
uLong	long
uncomprLen	long
)	O
)	O
;	O
void	O
test_large_inflate	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
,	O
Byte	char
*	O
uncompr	pointer
,	O
uLong	long
uncomprLen	long
)	O
)	O
;	O
void	O
test_flush	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
*	O
comprLen	long
)	O
)	O
;	O
void	O
test_sync	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
,	O
Byte	char
*	O
uncompr	pointer
,	O
uLong	long
uncomprLen	long
)	O
)	O
;	O
void	O
test_dict_deflate	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
)	O
)	O
;	O
void	O
test_dict_inflate	function
OF	O
(	O
(	O
Byte	char
*	O
compr	pointer
,	O
uLong	long
comprLen	long
,	O
Byte	char
*	O
uncompr	pointer
,	O
uLong	long
uncomprLen	long
)	O
)	O
;	O
int	O
main	function
OF	O
(	O
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
)	O
;	O
void	O
test_compress	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
,	O
uncomprLen	long
;	O
{	O
int	O
err	int
;	O
uLong	long
len	int
=	O
strlen	function
(	O
hello	array
)	O
+	O
1	int
;	O
err	int
=	O
compress	function
(	O
compr	pointer
,	O
&	O
comprLen	long
,	O
(	O
const	O
Bytef	char
*	O
)	O
hello	array
,	O
len	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"compress"	pointer
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
"garbage"	pointer
)	O
;	O
err	int
=	O
uncompress	function
(	O
uncompr	pointer
,	O
&	O
uncomprLen	long
,	O
compr	pointer
,	O
comprLen	long
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"uncompress"	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
hello	array
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad uncompress\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"uncompress(): %s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
}	O
}	O
void	O
test_gzio	function
(	O
out	pointer
,	O
in	pointer
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
const	O
char	O
*	O
out	pointer
;	O
const	O
char	O
*	O
in	pointer
;	O
Byte	char
*	O
uncompr	pointer
;	O
int	O
uncomprLen	long
;	O
{	O
int	O
err	int
;	O
int	O
len	int
=	O
strlen	function
(	O
hello	array
)	O
+	O
1	int
;	O
gzFile	pointer
file	pointer
;	O
z_off_t	O
pos	long
;	O
file	pointer
=	O
gzopen	function
(	O
out	pointer
,	O
"wb"	pointer
)	O
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzopen error\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
gzputc	function
(	O
file	pointer
,	O
'h'	O
)	O
;	O
if	O
(	O
gzputs	function
(	O
file	pointer
,	O
"ello"	pointer
)	O
!=	O
4	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzputs err: %s\n"	pointer
,	O
gzerror	function
(	O
file	pointer
,	O
&	O
err	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
gzprintf	function
(	O
file	pointer
,	O
", %s!"	pointer
,	O
"hello"	pointer
)	O
!=	O
8	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzprintf err: %s\n"	pointer
,	O
gzerror	function
(	O
file	pointer
,	O
&	O
err	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
gzseek	function
(	O
file	pointer
,	O
1L	int
,	O
SEEK_CUR	int
)	O
;	O
gzclose	function
(	O
file	pointer
)	O
;	O
file	pointer
=	O
gzopen	function
(	O
in	pointer
,	O
"rb"	pointer
)	O
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzopen error\n"	pointer
)	O
;	O
}	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
"garbage"	pointer
)	O
;	O
uncomprLen	long
=	O
gzread	function
(	O
file	pointer
,	O
uncompr	pointer
,	O
(	O
unsigned	O
)	O
uncomprLen	long
)	O
;	O
if	O
(	O
uncomprLen	long
!=	O
len	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzread err: %s\n"	pointer
,	O
gzerror	function
(	O
file	pointer
,	O
&	O
err	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
hello	array
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad gzread: %s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"gzread(): %s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
}	O
pos	long
=	O
gzseek	function
(	O
file	pointer
,	O
-	O
8L	int
,	O
SEEK_CUR	int
)	O
;	O
if	O
(	O
pos	long
!=	O
6	int
||	O
gztell	function
(	O
file	pointer
)	O
!=	O
pos	long
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzseek error, pos=%ld, gztell=%ld\n"	pointer
,	O
(	O
long	O
)	O
pos	long
,	O
(	O
long	O
)	O
gztell	function
(	O
file	pointer
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
gzgetc	function
(	O
file	pointer
)	O
!=	O
' '	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzgetc error\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
gzgets	function
(	O
file	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
uncomprLen	long
=	O
strlen	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
if	O
(	O
uncomprLen	long
!=	O
6	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"gzgets err after gzseek: %s\n"	pointer
,	O
gzerror	function
(	O
file	pointer
,	O
&	O
err	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
hello	array
+	O
7	int
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad gzgets after gzseek\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"gzgets() after gzseek: %s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
}	O
gzclose	function
(	O
file	pointer
)	O
;	O
}	O
void	O
test_deflate	function
(	O
compr	pointer
,	O
comprLen	long
)	O
Byte	char
*	O
compr	pointer
;	O
uLong	long
comprLen	long
;	O
{	O
z_stream	struct
c_stream	struct
;	O
int	O
err	int
;	O
int	O
len	int
=	O
strlen	function
(	O
hello	array
)	O
+	O
1	int
;	O
c_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
err	int
=	O
deflateInit	O
(	O
&	O
c_stream	struct
,	O
Z_DEFAULT_COMPRESSION	O
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateInit"	pointer
)	O
;	O
c_stream	struct
.	O
next_in	pointer
=	O
(	O
Bytef	char
*	O
)	O
hello	array
;	O
c_stream	struct
.	O
next_out	pointer
=	O
compr	pointer
;	O
while	O
(	O
c_stream	struct
.	O
total_in	long
!=	O
(	O
uLong	long
)	O
len	int
&&	O
c_stream	struct
.	O
total_out	long
<	O
comprLen	long
)	O
{	O
c_stream	struct
.	O
avail_in	int
=	O
c_stream	struct
.	O
avail_out	int
=	O
1	int
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
}	O
for	O
(	O
;	O
;	O
)	O
{	O
c_stream	struct
.	O
avail_out	int
=	O
1	int
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_FINISH	int
)	O
;	O
if	O
(	O
err	int
==	O
Z_STREAM_END	int
)	O
break	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
}	O
err	int
=	O
deflateEnd	function
(	O
&	O
c_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateEnd"	pointer
)	O
;	O
}	O
void	O
test_inflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
,	O
uncomprLen	long
;	O
{	O
int	O
err	int
;	O
z_stream	struct
d_stream	struct
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
"garbage"	pointer
)	O
;	O
d_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
d_stream	struct
.	O
next_in	pointer
=	O
compr	pointer
;	O
d_stream	struct
.	O
avail_in	int
=	O
0	int
;	O
d_stream	struct
.	O
next_out	pointer
=	O
uncompr	pointer
;	O
err	int
=	O
inflateInit	O
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateInit"	pointer
)	O
;	O
while	O
(	O
d_stream	struct
.	O
total_out	long
<	O
uncomprLen	long
&&	O
d_stream	struct
.	O
total_in	long
<	O
comprLen	long
)	O
{	O
d_stream	struct
.	O
avail_in	int
=	O
d_stream	struct
.	O
avail_out	int
=	O
1	int
;	O
err	int
=	O
inflate	function
(	O
&	O
d_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
if	O
(	O
err	int
==	O
Z_STREAM_END	int
)	O
break	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflate"	pointer
)	O
;	O
}	O
err	int
=	O
inflateEnd	function
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateEnd"	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
hello	array
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad inflate\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"inflate(): %s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
}	O
}	O
void	O
test_large_deflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
,	O
uncomprLen	long
;	O
{	O
z_stream	struct
c_stream	struct
;	O
int	O
err	int
;	O
c_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
err	int
=	O
deflateInit	O
(	O
&	O
c_stream	struct
,	O
Z_BEST_SPEED	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateInit"	pointer
)	O
;	O
c_stream	struct
.	O
next_out	pointer
=	O
compr	pointer
;	O
c_stream	struct
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
comprLen	long
;	O
c_stream	struct
.	O
next_in	pointer
=	O
uncompr	pointer
;	O
c_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
uncomprLen	long
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
if	O
(	O
c_stream	struct
.	O
avail_in	int
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"deflate not greedy\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
deflateParams	function
(	O
&	O
c_stream	struct
,	O
Z_NO_COMPRESSION	int
,	O
Z_DEFAULT_STRATEGY	int
)	O
;	O
c_stream	struct
.	O
next_in	pointer
=	O
compr	pointer
;	O
c_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
comprLen	long
/	O
2	int
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
deflateParams	function
(	O
&	O
c_stream	struct
,	O
Z_BEST_COMPRESSION	int
,	O
Z_FILTERED	int
)	O
;	O
c_stream	struct
.	O
next_in	pointer
=	O
uncompr	pointer
;	O
c_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
uncomprLen	long
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_FINISH	int
)	O
;	O
if	O
(	O
err	int
!=	O
Z_STREAM_END	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"deflate should report Z_STREAM_END\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
err	int
=	O
deflateEnd	function
(	O
&	O
c_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateEnd"	pointer
)	O
;	O
}	O
void	O
test_large_inflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
,	O
uncomprLen	long
;	O
{	O
int	O
err	int
;	O
z_stream	struct
d_stream	struct
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
"garbage"	pointer
)	O
;	O
d_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
d_stream	struct
.	O
next_in	pointer
=	O
compr	pointer
;	O
d_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
comprLen	long
;	O
err	int
=	O
inflateInit	O
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateInit"	pointer
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
d_stream	struct
.	O
next_out	pointer
=	O
uncompr	pointer
;	O
d_stream	struct
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
uncomprLen	long
;	O
err	int
=	O
inflate	function
(	O
&	O
d_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
if	O
(	O
err	int
==	O
Z_STREAM_END	int
)	O
break	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"large inflate"	pointer
)	O
;	O
}	O
err	int
=	O
inflateEnd	function
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateEnd"	pointer
)	O
;	O
if	O
(	O
d_stream	struct
.	O
total_out	long
!=	O
2	int
*	O
uncomprLen	long
+	O
comprLen	long
/	O
2	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad large inflate: %ld\n"	pointer
,	O
d_stream	struct
.	O
total_out	long
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"large_inflate(): OK\n"	pointer
)	O
;	O
}	O
}	O
void	O
test_flush	function
(	O
compr	pointer
,	O
comprLen	long
)	O
Byte	char
*	O
compr	pointer
;	O
uLong	long
*	O
comprLen	long
;	O
{	O
z_stream	struct
c_stream	struct
;	O
int	O
err	int
;	O
int	O
len	int
=	O
strlen	function
(	O
hello	array
)	O
+	O
1	int
;	O
c_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
err	int
=	O
deflateInit	O
(	O
&	O
c_stream	struct
,	O
Z_DEFAULT_COMPRESSION	O
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateInit"	pointer
)	O
;	O
c_stream	struct
.	O
next_in	pointer
=	O
(	O
Bytef	char
*	O
)	O
hello	array
;	O
c_stream	struct
.	O
next_out	pointer
=	O
compr	pointer
;	O
c_stream	struct
.	O
avail_in	int
=	O
3	int
;	O
c_stream	struct
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
*	O
comprLen	long
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_FULL_FLUSH	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
compr	pointer
[	O
3	int
]	O
++	O
;	O
c_stream	struct
.	O
avail_in	int
=	O
len	int
-	O
3	int
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_FINISH	int
)	O
;	O
if	O
(	O
err	int
!=	O
Z_STREAM_END	int
)	O
{	O
CHECK_ERR	O
(	O
err	int
,	O
"deflate"	pointer
)	O
;	O
}	O
err	int
=	O
deflateEnd	function
(	O
&	O
c_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateEnd"	pointer
)	O
;	O
*	O
comprLen	long
=	O
c_stream	struct
.	O
total_out	long
;	O
}	O
void	O
test_sync	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
,	O
uncomprLen	long
;	O
{	O
int	O
err	int
;	O
z_stream	struct
d_stream	struct
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
"garbage"	pointer
)	O
;	O
d_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
d_stream	struct
.	O
next_in	pointer
=	O
compr	pointer
;	O
d_stream	struct
.	O
avail_in	int
=	O
2	int
;	O
err	int
=	O
inflateInit	O
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateInit"	pointer
)	O
;	O
d_stream	struct
.	O
next_out	pointer
=	O
uncompr	pointer
;	O
d_stream	struct
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
uncomprLen	long
;	O
inflate	function
(	O
&	O
d_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflate"	pointer
)	O
;	O
d_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
comprLen	long
-	O
2	int
;	O
err	int
=	O
inflateSync	function
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateSync"	pointer
)	O
;	O
err	int
=	O
inflate	function
(	O
&	O
d_stream	struct
,	O
Z_FINISH	int
)	O
;	O
if	O
(	O
err	int
!=	O
Z_DATA_ERROR	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"inflate should report DATA_ERROR\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
err	int
=	O
inflateEnd	function
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateEnd"	pointer
)	O
;	O
printf	function
(	O
"after inflateSync(): hel%s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
}	O
void	O
test_dict_deflate	function
(	O
compr	pointer
,	O
comprLen	long
)	O
Byte	char
*	O
compr	pointer
;	O
uLong	long
comprLen	long
;	O
{	O
z_stream	struct
c_stream	struct
;	O
int	O
err	int
;	O
c_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
c_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
err	int
=	O
deflateInit	O
(	O
&	O
c_stream	struct
,	O
Z_BEST_COMPRESSION	int
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateInit"	pointer
)	O
;	O
err	int
=	O
deflateSetDictionary	function
(	O
&	O
c_stream	struct
,	O
(	O
const	O
Bytef	char
*	O
)	O
dictionary	pointer
,	O
sizeof	O
(	O
dictionary	pointer
)	O
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateSetDictionary"	pointer
)	O
;	O
dictId	long
=	O
c_stream	struct
.	O
adler	long
;	O
c_stream	struct
.	O
next_out	pointer
=	O
compr	pointer
;	O
c_stream	struct
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
comprLen	long
;	O
c_stream	struct
.	O
next_in	pointer
=	O
(	O
Bytef	char
*	O
)	O
hello	array
;	O
c_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
strlen	function
(	O
hello	array
)	O
+	O
1	int
;	O
err	int
=	O
deflate	function
(	O
&	O
c_stream	struct
,	O
Z_FINISH	int
)	O
;	O
if	O
(	O
err	int
!=	O
Z_STREAM_END	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"deflate should report Z_STREAM_END\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
err	int
=	O
deflateEnd	function
(	O
&	O
c_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"deflateEnd"	pointer
)	O
;	O
}	O
void	O
test_dict_inflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
,	O
uncomprLen	long
;	O
{	O
int	O
err	int
;	O
z_stream	struct
d_stream	struct
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
"garbage"	pointer
)	O
;	O
d_stream	struct
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
d_stream	struct
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
d_stream	struct
.	O
next_in	pointer
=	O
compr	pointer
;	O
d_stream	struct
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
comprLen	long
;	O
err	int
=	O
inflateInit	O
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateInit"	pointer
)	O
;	O
d_stream	struct
.	O
next_out	pointer
=	O
uncompr	pointer
;	O
d_stream	struct
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
uncomprLen	long
;	O
for	O
(	O
;	O
;	O
)	O
{	O
err	int
=	O
inflate	function
(	O
&	O
d_stream	struct
,	O
Z_NO_FLUSH	int
)	O
;	O
if	O
(	O
err	int
==	O
Z_STREAM_END	int
)	O
break	O
;	O
if	O
(	O
err	int
==	O
Z_NEED_DICT	int
)	O
{	O
if	O
(	O
d_stream	struct
.	O
adler	long
!=	O
dictId	long
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"unexpected dictionary"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
err	int
=	O
inflateSetDictionary	function
(	O
&	O
d_stream	struct
,	O
(	O
const	O
Bytef	char
*	O
)	O
dictionary	pointer
,	O
sizeof	O
(	O
dictionary	pointer
)	O
)	O
;	O
}	O
CHECK_ERR	O
(	O
err	int
,	O
"inflate with dict"	pointer
)	O
;	O
}	O
err	int
=	O
inflateEnd	function
(	O
&	O
d_stream	struct
)	O
;	O
CHECK_ERR	O
(	O
err	int
,	O
"inflateEnd"	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
(	O
char	O
*	O
)	O
uncompr	pointer
,	O
hello	array
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad inflate with dict\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"inflate with dictionary: %s\n"	pointer
,	O
(	O
char	O
*	O
)	O
uncompr	pointer
)	O
;	O
}	O
}	O
int	O
main	function
(	O
argc	int
,	O
argv	array
)	O
int	O
argc	int
;	O
char	O
*	O
argv	array
[	O
]	O
;	O
{	O
Byte	char
*	O
compr	pointer
,	O
*	O
uncompr	pointer
;	O
uLong	long
comprLen	long
=	O
10000	int
*	O
sizeof	O
(	O
int	O
)	O
;	O
uLong	long
uncomprLen	long
=	O
comprLen	long
;	O
static	O
const	O
char	O
*	O
myVersion	pointer
=	O
ZLIB_VERSION	pointer
;	O
if	O
(	O
zlibVersion	function
(	O
)	O
[	O
0	int
]	O
!=	O
myVersion	pointer
[	O
0	int
]	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"incompatible zlib version\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
zlibVersion	function
(	O
)	O
,	O
ZLIB_VERSION	pointer
)	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"warning: different zlib version\n"	pointer
)	O
;	O
}	O
compr	pointer
=	O
(	O
Byte	char
*	O
)	O
calloc	function
(	O
(	O
uInt	int
)	O
comprLen	long
,	O
1	int
)	O
;	O
uncompr	pointer
=	O
(	O
Byte	char
*	O
)	O
calloc	function
(	O
(	O
uInt	int
)	O
uncomprLen	long
,	O
1	int
)	O
;	O
if	O
(	O
compr	pointer
==	O
Z_NULL	int
||	O
uncompr	pointer
==	O
Z_NULL	int
)	O
{	O
printf	function
(	O
"out of memory\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
test_compress	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
test_gzio	function
(	O
(	O
argc	int
>	O
1	int
?	O
argv	array
[	O
1	int
]	O
:	O
TESTFILE	pointer
)	O
,	O
(	O
argc	int
>	O
2	int
?	O
argv	array
[	O
2	int
]	O
:	O
TESTFILE	pointer
)	O
,	O
uncompr	pointer
,	O
(	O
int	O
)	O
uncomprLen	long
)	O
;	O
test_deflate	function
(	O
compr	pointer
,	O
comprLen	long
)	O
;	O
test_inflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
test_large_deflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
test_large_inflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
test_flush	function
(	O
compr	pointer
,	O
&	O
comprLen	long
)	O
;	O
test_sync	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
comprLen	long
=	O
uncomprLen	long
;	O
test_dict_deflate	function
(	O
compr	pointer
,	O
comprLen	long
)	O
;	O
test_dict_inflate	function
(	O
compr	pointer
,	O
comprLen	long
,	O
uncompr	pointer
,	O
uncomprLen	long
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
