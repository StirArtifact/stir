int	O
swdef_write_attribute_to_buffer	function
(	O
STROB	struct
*	O
buf	pointer
,	O
char	O
*	O
keyword	pointer
,	O
char	O
*	O
value	int
,	O
int	O
level	int
,	O
int	O
attribute_type	int
)	O
{	O
int	O
iret	int
,	O
ret	int
;	O
ret	int
=	O
swdef_write_keyword_to_buffer	function
(	O
buf	pointer
,	O
keyword	pointer
,	O
level	int
,	O
attribute_type	int
)	O
;	O
if	O
(	O
attribute_type	int
!=	O
SWPARSE_MD_TYPE_OBJ	char
)	O
{	O
iret	int
=	O
swdef_write_value_to_buffer	function
(	O
buf	pointer
,	O
value	int
)	O
;	O
if	O
(	O
iret	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
ret	int
+=	O
iret	int
;	O
}	O
return	O
ret	int
;	O
}	O
int	O
swdef_write_attribute	function
(	O
char	O
*	O
keyword	pointer
,	O
char	O
*	O
value	int
,	O
int	O
level	int
,	O
int	O
len	long
,	O
int	O
attribute_type	int
,	O
int	O
uxfio_fd	int
)	O
{	O
int	O
iret	int
,	O
ret	int
;	O
ret	int
=	O
swdef_write_keyword	function
(	O
keyword	pointer
,	O
level	int
,	O
attribute_type	int
,	O
uxfio_fd	int
)	O
;	O
if	O
(	O
attribute_type	int
!=	O
SWPARSE_MD_TYPE_OBJ	char
)	O
{	O
iret	int
=	O
swdef_write_value	function
(	O
value	int
,	O
uxfio_fd	int
,	O
len	long
,	O
0	int
)	O
;	O
if	O
(	O
iret	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
ret	int
+=	O
iret	int
;	O
}	O
return	O
ret	int
;	O
}	O
int	O
swdef_write_keyword_to_buffer	function
(	O
STROB	struct
*	O
ob	pointer
,	O
char	O
*	O
keyword	pointer
,	O
int	O
level	int
,	O
int	O
attribute_type	int
)	O
{	O
char	O
sp	pointer
[	O
8	int
]	O
;	O
memset	function
(	O
sp	pointer
,	O
040	int
,	O
sizeof	O
(	O
sp	pointer
)	O
)	O
;	O
if	O
(	O
level	int
>	O
(	O
int	O
)	O
sizeof	O
(	O
sp	pointer
)	O
)	O
level	int
=	O
1	int
;	O
if	O
(	O
level	int
)	O
strob_strncat	function
(	O
ob	pointer
,	O
sp	pointer
,	O
level	int
)	O
;	O
strob_strcat	function
(	O
ob	pointer
,	O
keyword	pointer
)	O
;	O
if	O
(	O
attribute_type	int
==	O
SWPARSE_MD_TYPE_OBJ	char
)	O
{	O
strob_strcat	function
(	O
ob	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
else	O
{	O
strob_strcat	function
(	O
ob	pointer
,	O
" "	pointer
)	O
;	O
}	O
return	O
strob_strlen	function
(	O
ob	pointer
)	O
;	O
}	O
int	O
swdef_write_keyword	function
(	O
char	O
*	O
keyword	pointer
,	O
int	O
level	int
,	O
int	O
attribute_type	int
,	O
int	O
uxfio_fd	int
)	O
{	O
STROB	struct
*	O
ob	pointer
;	O
int	O
ret	int
;	O
int	O
iret	int
;	O
ob	pointer
=	O
strob_open	function
(	O
32	int
)	O
;	O
ret	int
=	O
swdef_write_keyword_to_buffer	function
(	O
ob	pointer
,	O
keyword	pointer
,	O
level	int
,	O
attribute_type	int
)	O
;	O
iret	int
=	O
uxfio_write	function
(	O
uxfio_fd	int
,	O
strob_str	function
(	O
ob	pointer
)	O
,	O
ret	int
)	O
;	O
strob_close	function
(	O
ob	pointer
)	O
;	O
return	O
iret	int
;	O
}	O
int	O
swdef_write_value_to_buffer	function
(	O
STROB	struct
*	O
ob	pointer
,	O
char	O
*	O
value	int
)	O
{	O
char	O
*	O
newbuf	pointer
=	O
NULL	O
,	O
*	O
s	pointer
;	O
int	O
newlen	pointer
,	O
ret	int
=	O
0	int
;	O
if	O
(	O
(	O
s	pointer
=	O
strstr	function
(	O
value	int
,	O
"\n"	pointer
)	O
)	O
)	O
{	O
*	O
s	pointer
=	O
'\0'	O
;	O
}	O
swlib_expand_escapes	function
(	O
&	O
newbuf	pointer
,	O
&	O
newlen	pointer
,	O
value	int
,	O
(	O
STROB	struct
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
newlen	pointer
==	O
0	int
)	O
{	O
strob_strcat	function
(	O
ob	pointer
,	O
"\"\""	pointer
)	O
;	O
ret	int
=	O
2	int
;	O
}	O
else	O
if	O
(	O
strstr	function
(	O
value	int
,	O
"\\n"	pointer
)	O
||	O
strstr	function
(	O
value	int
,	O
"\n"	pointer
)	O
||	O
strpbrk	function
(	O
value	int
,	O
"#\"\\"	pointer
)	O
)	O
{	O
strob_strcat	function
(	O
ob	pointer
,	O
"\""	pointer
)	O
;	O
ret	int
=	O
1	int
;	O
strob_strncat	function
(	O
ob	pointer
,	O
newbuf	pointer
,	O
newlen	pointer
)	O
;	O
ret	int
+=	O
newlen	pointer
;	O
strob_strcat	function
(	O
ob	pointer
,	O
"\""	pointer
)	O
;	O
ret	int
++	O
;	O
}	O
else	O
{	O
strob_strcat	function
(	O
ob	pointer
,	O
value	int
)	O
;	O
ret	int
=	O
strlen	function
(	O
value	int
)	O
;	O
}	O
strob_strcat	function
(	O
ob	pointer
,	O
"\n"	pointer
)	O
;	O
ret	int
++	O
;	O
if	O
(	O
newbuf	pointer
)	O
swbis_free	O
(	O
newbuf	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
swdef_write_value	function
(	O
char	O
*	O
value	int
,	O
int	O
uxfio_ofd	int
,	O
int	O
value_length	int
,	O
int	O
quote_off	int
)	O
{	O
char	O
buf0	array
[	O
8	int
]	O
;	O
char	O
*	O
newbuf	pointer
=	O
NULL	O
;	O
char	O
*	O
s	pointer
;	O
int	O
newlen	pointer
,	O
ret	int
=	O
0	int
;	O
if	O
(	O
value_length	int
>	O
0	int
)	O
{	O
ret	int
+=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
value	int
,	O
value_length	int
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strlen	function
(	O
value	int
)	O
)	O
{	O
sprintf	function
(	O
buf0	array
,	O
"\"\""	pointer
)	O
;	O
ret	int
=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
buf0	array
,	O
strlen	function
(	O
buf0	array
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
value_length	int
<	O
0	int
)	O
{	O
if	O
(	O
(	O
s	pointer
=	O
strstr	function
(	O
value	int
,	O
"\n"	pointer
)	O
)	O
)	O
{	O
*	O
s	pointer
=	O
'\0'	O
;	O
}	O
}	O
swlib_expand_escapes	function
(	O
&	O
newbuf	pointer
,	O
&	O
newlen	pointer
,	O
value	int
,	O
(	O
STROB	struct
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
!	O
newlen	pointer
)	O
{	O
sprintf	function
(	O
buf0	array
,	O
"\"\""	pointer
)	O
;	O
ret	int
=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
buf0	array
,	O
strlen	function
(	O
buf0	array
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strstr	function
(	O
value	int
,	O
"\\n"	pointer
)	O
||	O
strstr	function
(	O
value	int
,	O
"\n"	pointer
)	O
||	O
(	O
(	O
s	pointer
=	O
strstr	function
(	O
value	int
,	O
"<"	pointer
)	O
)	O
&&	O
s	pointer
!=	O
value	int
)	O
||	O
strstr	function
(	O
value	int
,	O
">"	pointer
)	O
||	O
strpbrk	function
(	O
value	int
,	O
"#\"\\"	pointer
)	O
||	O
0	int
)	O
{	O
sprintf	function
(	O
buf0	array
,	O
"\""	pointer
)	O
;	O
if	O
(	O
quote_off	int
==	O
0	int
)	O
ret	int
=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
buf0	array
,	O
strlen	function
(	O
buf0	array
)	O
)	O
;	O
ret	int
+=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
newbuf	pointer
,	O
newlen	pointer
)	O
;	O
if	O
(	O
quote_off	int
==	O
0	int
)	O
ret	int
+=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
buf0	array
,	O
strlen	function
(	O
buf0	array
)	O
)	O
;	O
}	O
else	O
{	O
ret	int
=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
value	int
,	O
strlen	function
(	O
value	int
)	O
)	O
;	O
}	O
}	O
sprintf	function
(	O
buf0	array
,	O
"\n"	pointer
)	O
;	O
ret	int
+=	O
uxfio_write	function
(	O
uxfio_ofd	int
,	O
buf0	array
,	O
strlen	function
(	O
buf0	array
)	O
)	O
;	O
if	O
(	O
newbuf	pointer
)	O
swbis_free	O
(	O
newbuf	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
