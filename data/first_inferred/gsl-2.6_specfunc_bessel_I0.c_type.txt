static	O
double	O
bi0_data	array
[	O
12	int
]	O
=	O
{	O
-	O
.07660547252839144951	int
,	O
1.92733795399380827000	int
,	O
.22826445869203013390	int
,	O
.01304891466707290428	int
,	O
.00043442709008164874	int
,	O
.00000942265768600193	int
,	O
.00000014340062895106	int
,	O
.00000000161384906966	int
,	O
.00000000001396650044	int
,	O
.00000000000009579451	int
,	O
.00000000000000053339	int
,	O
.00000000000000000245	int
}	O
;	O
static	O
cheb_series	struct
bi0_cs	struct
=	O
{	O
bi0_data	array
,	O
11	int
,	O
-	O
1	int
,	O
1	int
,	O
11	int
}	O
;	O
static	O
double	O
ai0_data	array
[	O
21	int
]	O
=	O
{	O
.07575994494023796	int
,	O
.00759138081082334	int
,	O
.00041531313389237	int
,	O
.00001070076463439	int
,	O
-	O
.00000790117997921	int
,	O
-	O
.00000078261435014	int
,	O
.00000027838499429	int
,	O
.00000000825247260	int
,	O
-	O
.00000001204463945	int
,	O
.00000000155964859	int
,	O
.00000000022925563	int
,	O
-	O
.00000000011916228	int
,	O
.00000000001757854	int
,	O
.00000000000112822	int
,	O
-	O
.00000000000114684	int
,	O
.00000000000027155	int
,	O
-	O
.00000000000002415	int
,	O
-	O
.00000000000000608	int
,	O
.00000000000000314	int
,	O
-	O
.00000000000000071	int
,	O
.00000000000000007	int
}	O
;	O
static	O
cheb_series	struct
ai0_cs	struct
=	O
{	O
ai0_data	array
,	O
20	int
,	O
-	O
1	int
,	O
1	int
,	O
13	int
}	O
;	O
static	O
double	O
ai02_data	array
[	O
22	int
]	O
=	O
{	O
.05449041101410882	int
,	O
.00336911647825569	int
,	O
.00006889758346918	int
,	O
.00000289137052082	int
,	O
.00000020489185893	int
,	O
.00000002266668991	int
,	O
.00000000339623203	int
,	O
.00000000049406022	int
,	O
.00000000001188914	int
,	O
-	O
.00000000003149915	int
,	O
-	O
.00000000001321580	int
,	O
-	O
.00000000000179419	int
,	O
.00000000000071801	int
,	O
.00000000000038529	int
,	O
.00000000000001539	int
,	O
-	O
.00000000000004151	int
,	O
-	O
.00000000000000954	int
,	O
.00000000000000382	int
,	O
.00000000000000176	int
,	O
-	O
.00000000000000034	int
,	O
-	O
.00000000000000027	int
,	O
.00000000000000003	int
}	O
;	O
static	O
cheb_series	struct
ai02_cs	struct
=	O
{	O
ai02_data	array
,	O
21	int
,	O
-	O
1	int
,	O
1	int
,	O
11	int
}	O
;	O
int	O
gsl_sf_bessel_I0_scaled_e	function
(	O
const	O
double	O
x	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
double	O
y	double
=	O
fabs	function
(	O
x	double
)	O
;	O
if	O
(	O
y	double
<	O
2.0	int
*	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
result	pointer
->	O
val	double
=	O
1.0	int
-	O
y	double
;	O
result	pointer
->	O
err	double
=	O
0.5	int
*	O
y	double
*	O
y	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
y	double
<=	O
3.0	int
)	O
{	O
const	O
double	O
ey	double
=	O
exp	function
(	O
-	O
y	double
)	O
;	O
gsl_sf_result	struct
c	pointer
;	O
cheb_eval_e	function
(	O
&	O
bi0_cs	struct
,	O
y	double
*	O
y	double
/	O
4.5	int
-	O
1.0	int
,	O
&	O
c	pointer
)	O
;	O
result	pointer
->	O
val	double
=	O
ey	double
*	O
(	O
2.75	int
+	O
c	pointer
.	O
val	double
)	O
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
+	O
ey	double
*	O
c	pointer
.	O
err	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
y	double
<=	O
8.0	int
)	O
{	O
const	O
double	O
sy	double
=	O
sqrt	function
(	O
y	double
)	O
;	O
gsl_sf_result	struct
c	pointer
;	O
cheb_eval_e	function
(	O
&	O
ai0_cs	struct
,	O
(	O
48.0	int
/	O
y	double
-	O
11.0	int
)	O
/	O
5.0	int
,	O
&	O
c	pointer
)	O
;	O
result	pointer
->	O
val	double
=	O
(	O
0.375	int
+	O
c	pointer
.	O
val	double
)	O
/	O
sy	double
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
0.375	int
+	O
fabs	function
(	O
c	pointer
.	O
val	double
)	O
)	O
/	O
sy	double
;	O
result	pointer
->	O
err	double
+=	O
c	pointer
.	O
err	double
/	O
sy	double
;	O
result	pointer
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
sy	double
=	O
sqrt	function
(	O
y	double
)	O
;	O
gsl_sf_result	struct
c	pointer
;	O
cheb_eval_e	function
(	O
&	O
ai02_cs	struct
,	O
16.0	int
/	O
y	double
-	O
1.0	int
,	O
&	O
c	pointer
)	O
;	O
result	pointer
->	O
val	double
=	O
(	O
0.375	int
+	O
c	pointer
.	O
val	double
)	O
/	O
sy	double
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
0.375	int
+	O
fabs	function
(	O
c	pointer
.	O
val	double
)	O
)	O
/	O
sy	double
;	O
result	pointer
->	O
err	double
+=	O
c	pointer
.	O
err	double
/	O
sy	double
;	O
result	pointer
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
int	O
gsl_sf_bessel_I0_e	function
(	O
const	O
double	O
x	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
double	O
y	double
=	O
fabs	function
(	O
x	double
)	O
;	O
if	O
(	O
y	double
<	O
2.0	int
*	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
result	pointer
->	O
val	double
=	O
1.0	int
;	O
result	pointer
->	O
err	double
=	O
0.5	int
*	O
y	double
*	O
y	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
y	double
<=	O
3.0	int
)	O
{	O
gsl_sf_result	struct
c	pointer
;	O
cheb_eval_e	function
(	O
&	O
bi0_cs	struct
,	O
y	double
*	O
y	double
/	O
4.5	int
-	O
1.0	int
,	O
&	O
c	pointer
)	O
;	O
result	pointer
->	O
val	double
=	O
2.75	int
+	O
c	pointer
.	O
val	double
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
(	O
2.75	int
+	O
fabs	function
(	O
c	pointer
.	O
val	double
)	O
)	O
;	O
result	pointer
->	O
err	double
+=	O
c	pointer
.	O
err	double
;	O
result	pointer
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
y	double
<	O
GSL_LOG_DBL_MAX	int
-	O
1.0	int
)	O
{	O
const	O
double	O
ey	double
=	O
exp	function
(	O
y	double
)	O
;	O
gsl_sf_result	struct
b_scaled	struct
;	O
gsl_sf_bessel_I0_scaled_e	function
(	O
x	double
,	O
&	O
b_scaled	struct
)	O
;	O
result	pointer
->	O
val	double
=	O
ey	double
*	O
b_scaled	struct
.	O
val	double
;	O
result	pointer
->	O
err	double
=	O
ey	double
*	O
b_scaled	struct
.	O
err	double
+	O
y	double
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
result	pointer
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
OVERFLOW_ERROR	O
(	O
result	pointer
)	O
;	O
}	O
}	O
double	O
gsl_sf_bessel_I0_scaled	function
(	O
const	O
double	O
x	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_bessel_I0_scaled_e	function
(	O
x	double
,	O
&	O
result	pointer
)	O
;	O
)	O
}	O
double	O
gsl_sf_bessel_I0	function
(	O
const	O
double	O
x	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_bessel_I0_e	function
(	O
x	double
,	O
&	O
result	pointer
)	O
;	O
)	O
}	O
