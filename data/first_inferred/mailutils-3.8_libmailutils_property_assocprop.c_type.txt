static	O
void	O
_assoc_prop_done	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
mu_assoc_t	pointer
assoc	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
mu_stream_t	pointer
str	pointer
=	O
prop	pointer
->	O
_prop_init_data	pointer
;	O
mu_assoc_destroy	function
(	O
&	O
assoc	pointer
)	O
;	O
mu_stream_destroy	function
(	O
&	O
str	pointer
)	O
;	O
}	O
static	O
int	O
_assoc_prop_getval	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
*	O
pval	pointer
)	O
{	O
mu_assoc_t	pointer
assoc	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
char	O
*	O
item	pointer
;	O
item	pointer
=	O
mu_assoc_get	function
(	O
assoc	pointer
,	O
key	pointer
)	O
;	O
if	O
(	O
item	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_NOENT	O
;	O
if	O
(	O
pval	pointer
)	O
*	O
pval	pointer
=	O
item	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_assoc_prop_setval	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
val	pointer
,	O
int	O
overwrite	int
)	O
{	O
mu_assoc_t	pointer
assoc	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
char	O
*	O
*	O
item	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_assoc_install_ref	function
(	O
assoc	pointer
,	O
key	pointer
,	O
&	O
item	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
*	O
item	pointer
=	O
strdup	function
(	O
val	pointer
)	O
;	O
if	O
(	O
!	O
*	O
item	pointer
)	O
{	O
mu_assoc_remove	function
(	O
assoc	pointer
,	O
key	pointer
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
}	O
else	O
if	O
(	O
rc	int
==	O
MU_ERR_EXISTS	O
&&	O
overwrite	int
)	O
{	O
char	O
*	O
newval	pointer
=	O
strdup	function
(	O
val	pointer
)	O
;	O
if	O
(	O
!	O
newval	pointer
)	O
return	O
ENOMEM	int
;	O
free	function
(	O
*	O
item	pointer
)	O
;	O
*	O
item	pointer
=	O
newval	pointer
;	O
}	O
else	O
return	O
rc	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_assoc_prop_unset	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
const	O
char	O
*	O
key	pointer
)	O
{	O
mu_assoc_t	pointer
assoc	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
return	O
mu_assoc_remove	function
(	O
assoc	pointer
,	O
key	pointer
)	O
;	O
}	O
static	O
int	O
_assoc_prop_clear	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
mu_assoc_t	pointer
assoc	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
mu_assoc_clear	function
(	O
assoc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_assoc_prop_getitr	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
mu_iterator_t	pointer
*	O
pitr	pointer
)	O
{	O
int	O
rc	int
;	O
mu_iterator_t	pointer
itr	pointer
;	O
rc	int
=	O
mu_assoc_get_iterator	function
(	O
(	O
mu_assoc_t	pointer
)	O
prop	pointer
->	O
_prop_data	pointer
,	O
&	O
itr	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
pitr	pointer
=	O
itr	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_assoc_prop_fill	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	pointer
str	pointer
=	O
prop	pointer
->	O
_prop_init_data	pointer
;	O
int	O
state	pointer
=	O
0	int
;	O
char	O
*	O
buf	pointer
[	O
2	int
]	O
=	O
{	O
NULL	O
,	O
NULL	O
}	O
;	O
size_t	long
size	long
[	O
2	int
]	O
=	O
{	O
0	int
,	O
0	int
}	O
,	O
n	long
;	O
if	O
(	O
!	O
str	pointer
)	O
return	O
0	int
;	O
mu_stream_seek	function
(	O
str	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
while	O
(	O
(	O
rc	int
=	O
mu_stream_getdelim	function
(	O
str	pointer
,	O
&	O
buf	pointer
[	O
state	pointer
]	O
,	O
&	O
size	long
[	O
state	pointer
]	O
,	O
0	int
,	O
&	O
n	long
)	O
)	O
==	O
0	int
&&	O
n	long
>	O
0	int
)	O
{	O
if	O
(	O
state	pointer
==	O
1	int
)	O
_assoc_prop_setval	function
(	O
prop	pointer
,	O
buf	pointer
[	O
0	int
]	O
,	O
buf	pointer
[	O
1	int
]	O
,	O
1	int
)	O
;	O
state	pointer
=	O
!	O
state	pointer
;	O
}	O
free	function
(	O
buf	pointer
[	O
0	int
]	O
)	O
;	O
free	function
(	O
buf	pointer
[	O
1	int
]	O
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_assoc_prop_save	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
mu_stream_t	pointer
str	pointer
=	O
prop	pointer
->	O
_prop_init_data	pointer
;	O
mu_iterator_t	pointer
itr	pointer
;	O
int	O
rc	int
;	O
mu_off_t	long
off	long
;	O
if	O
(	O
!	O
str	pointer
)	O
return	O
0	int
;	O
rc	int
=	O
mu_property_get_iterator	function
(	O
prop	pointer
,	O
&	O
itr	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_seek	function
(	O
str	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
for	O
(	O
mu_iterator_first	function
(	O
itr	pointer
)	O
;	O
!	O
mu_iterator_is_done	function
(	O
itr	pointer
)	O
;	O
mu_iterator_next	function
(	O
itr	pointer
)	O
)	O
{	O
const	O
char	O
*	O
name	pointer
,	O
*	O
val	pointer
;	O
mu_iterator_current_kv	function
(	O
itr	pointer
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
name	pointer
,	O
(	O
void	O
*	O
*	O
)	O
&	O
val	pointer
)	O
;	O
rc	int
=	O
mu_stream_write	function
(	O
str	pointer
,	O
name	pointer
,	O
strlen	function
(	O
name	pointer
)	O
+	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
rc	int
=	O
mu_stream_write	function
(	O
str	pointer
,	O
val	pointer
,	O
strlen	function
(	O
val	pointer
)	O
+	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
}	O
mu_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
rc	int
=	O
mu_stream_seek	function
(	O
str	pointer
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
off	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_stream_truncate	function
(	O
str	pointer
,	O
off	long
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_assoc_property_init	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
mu_assoc_t	pointer
assoc	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_assoc_create	function
(	O
&	O
assoc	pointer
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_assoc_set_destroy_item	function
(	O
assoc	pointer
,	O
mu_list_free_item	function
)	O
;	O
prop	pointer
->	O
_prop_data	pointer
=	O
assoc	pointer
;	O
prop	pointer
->	O
_prop_done	pointer
=	O
_assoc_prop_done	function
;	O
if	O
(	O
prop	pointer
->	O
_prop_init_data	pointer
)	O
{	O
prop	pointer
->	O
_prop_fill	pointer
=	O
_assoc_prop_fill	function
;	O
prop	pointer
->	O
_prop_save	pointer
=	O
_assoc_prop_save	function
;	O
}	O
else	O
{	O
prop	pointer
->	O
_prop_fill	pointer
=	O
NULL	O
;	O
prop	pointer
->	O
_prop_save	pointer
=	O
NULL	O
;	O
}	O
prop	pointer
->	O
_prop_getval	pointer
=	O
_assoc_prop_getval	function
;	O
prop	pointer
->	O
_prop_setval	pointer
=	O
_assoc_prop_setval	function
;	O
prop	pointer
->	O
_prop_unset	pointer
=	O
_assoc_prop_unset	function
;	O
prop	pointer
->	O
_prop_getitr	pointer
=	O
_assoc_prop_getitr	function
;	O
prop	pointer
->	O
_prop_clear	pointer
=	O
_assoc_prop_clear	function
;	O
return	O
0	int
;	O
}	O
