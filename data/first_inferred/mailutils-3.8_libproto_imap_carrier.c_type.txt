int	O
mu_imap_set_carrier	function
(	O
mu_imap_t	pointer
imap	pointer
,	O
mu_stream_t	pointer
carrier	pointer
)	O
{	O
int	O
rc	int
;	O
mu_imapio_t	pointer
io	pointer
;	O
if	O
(	O
imap	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
mu_imapio_create	function
(	O
&	O
io	pointer
,	O
carrier	pointer
,	O
MU_IMAPIO_CLIENT	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
imap	pointer
->	O
io	pointer
)	O
{	O
mu_imap_disconnect	function
(	O
imap	pointer
)	O
;	O
mu_imapio_free	function
(	O
imap	pointer
->	O
io	pointer
)	O
;	O
}	O
imap	pointer
->	O
io	pointer
=	O
io	pointer
;	O
if	O
(	O
MU_IMAP_FISSET	O
(	O
imap	pointer
,	O
MU_IMAP_TRACE	int
)	O
)	O
_mu_imap_trace_enable	function
(	O
imap	pointer
)	O
;	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_READY	int
;	O
imap	pointer
->	O
session_state	enum
=	O
MU_IMAP_SESSION_INIT	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_imap_get_carrier	function
(	O
mu_imap_t	pointer
imap	pointer
,	O
mu_stream_t	pointer
*	O
pcarrier	pointer
)	O
{	O
if	O
(	O
imap	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pcarrier	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
mu_stream_ref	function
(	O
imap	pointer
->	O
io	pointer
->	O
_imap_stream	pointer
)	O
;	O
*	O
pcarrier	pointer
=	O
imap	pointer
->	O
io	pointer
->	O
_imap_stream	pointer
;	O
return	O
0	int
;	O
}	O
