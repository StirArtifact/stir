local	O
size_t	long
bythirds	function
(	O
size_t	long
size	long
)	O
{	O
int	O
n	int
;	O
size_t	long
m	long
;	O
m	long
=	O
size	long
;	O
for	O
(	O
n	int
=	O
0	int
;	O
m	long
;	O
n	int
++	O
)	O
m	long
>>=	O
1	int
;	O
if	O
(	O
n	int
<	O
3	int
)	O
return	O
size	long
+	O
1	int
;	O
n	int
-=	O
3	int
;	O
m	long
=	O
size	long
>>	O
n	int
;	O
m	long
+=	O
m	long
==	O
6	int
?	O
2	int
:	O
1	int
;	O
m	long
<<=	O
n	int
;	O
return	O
m	long
>	O
size	long
?	O
m	long
:	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
;	O
}	O
local	O
void	O
*	O
load	function
(	O
const	O
char	O
*	O
name	pointer
,	O
size_t	long
*	O
len	pointer
)	O
{	O
size_t	long
size	long
;	O
void	O
*	O
buf	pointer
,	O
*	O
swap	pointer
;	O
FILE	struct
*	O
in	pointer
;	O
*	O
len	pointer
=	O
0	int
;	O
buf	pointer
=	O
malloc	function
(	O
size	long
=	O
4096	int
)	O
;	O
if	O
(	O
buf	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
in	pointer
=	O
name	pointer
==	O
NULL	O
?	O
stdin	pointer
:	O
fopen	function
(	O
name	pointer
,	O
"rb"	pointer
)	O
;	O
if	O
(	O
in	pointer
!=	O
NULL	O
)	O
{	O
for	O
(	O
;	O
;	O
)	O
{	O
*	O
len	pointer
+=	O
fread	function
(	O
(	O
char	O
*	O
)	O
buf	pointer
+	O
*	O
len	pointer
,	O
1	int
,	O
size	long
-	O
*	O
len	pointer
,	O
in	pointer
)	O
;	O
if	O
(	O
*	O
len	pointer
<	O
size	long
)	O
break	O
;	O
size	long
=	O
bythirds	function
(	O
size	long
)	O
;	O
if	O
(	O
size	long
==	O
*	O
len	pointer
||	O
(	O
swap	pointer
=	O
realloc	function
(	O
buf	pointer
,	O
size	long
)	O
)	O
==	O
NULL	O
)	O
{	O
free	function
(	O
buf	pointer
)	O
;	O
buf	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
buf	pointer
=	O
swap	pointer
;	O
}	O
fclose	function
(	O
in	pointer
)	O
;	O
}	O
return	O
buf	pointer
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
ret	int
,	O
put	int
=	O
0	int
,	O
fail	int
=	O
0	int
;	O
unsigned	O
skip	int
=	O
0	int
;	O
char	O
*	O
arg	pointer
,	O
*	O
name	pointer
=	O
NULL	O
;	O
unsigned	O
char	O
*	O
source	pointer
=	O
NULL	O
,	O
*	O
dest	pointer
;	O
size_t	long
len	pointer
=	O
0	int
;	O
unsigned	O
long	O
sourcelen	pointer
,	O
destlen	pointer
;	O
while	O
(	O
arg	pointer
=	O
*	O
++	O
argv	pointer
,	O
--	O
argc	int
)	O
if	O
(	O
arg	pointer
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
if	O
(	O
arg	pointer
[	O
1	int
]	O
==	O
'w'	O
&&	O
arg	pointer
[	O
2	int
]	O
==	O
0	int
)	O
put	int
=	O
1	int
;	O
else	O
if	O
(	O
arg	pointer
[	O
1	int
]	O
==	O
'f'	O
&&	O
arg	pointer
[	O
2	int
]	O
==	O
0	int
)	O
fail	int
=	O
1	int
,	O
put	int
=	O
1	int
;	O
else	O
if	O
(	O
arg	pointer
[	O
1	int
]	O
>=	O
'0'	O
&&	O
arg	pointer
[	O
1	int
]	O
<=	O
'9'	O
)	O
skip	int
=	O
(	O
unsigned	O
)	O
atoi	function
(	O
arg	pointer
+	O
1	int
)	O
;	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"invalid option %s\n"	pointer
,	O
arg	pointer
)	O
;	O
return	O
3	int
;	O
}	O
}	O
else	O
if	O
(	O
name	pointer
!=	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"only one file name allowed\n"	pointer
)	O
;	O
return	O
3	int
;	O
}	O
else	O
name	pointer
=	O
arg	pointer
;	O
source	pointer
=	O
load	function
(	O
name	pointer
,	O
&	O
len	pointer
)	O
;	O
if	O
(	O
source	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"memory allocation failure\n"	pointer
)	O
;	O
return	O
4	int
;	O
}	O
if	O
(	O
len	pointer
==	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"could not read %s, or it was empty\n"	pointer
,	O
name	pointer
==	O
NULL	O
?	O
"<stdin>"	pointer
:	O
name	pointer
)	O
;	O
free	function
(	O
source	pointer
)	O
;	O
return	O
3	int
;	O
}	O
if	O
(	O
skip	int
>=	O
len	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"skip request of %d leaves no input\n"	pointer
,	O
skip	int
)	O
;	O
free	function
(	O
source	pointer
)	O
;	O
return	O
3	int
;	O
}	O
len	pointer
-=	O
skip	int
;	O
sourcelen	pointer
=	O
(	O
unsigned	O
long	O
)	O
len	pointer
;	O
ret	int
=	O
puff	function
(	O
NIL	O
,	O
&	O
destlen	pointer
,	O
source	pointer
+	O
skip	int
,	O
&	O
sourcelen	pointer
)	O
;	O
if	O
(	O
ret	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"puff() failed with return code %d\n"	pointer
,	O
ret	int
)	O
;	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"puff() succeeded uncompressing %lu bytes\n"	pointer
,	O
destlen	pointer
)	O
;	O
if	O
(	O
sourcelen	pointer
<	O
len	pointer
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%lu compressed bytes unused\n"	pointer
,	O
len	pointer
-	O
sourcelen	pointer
)	O
;	O
}	O
if	O
(	O
put	int
&&	O
ret	int
==	O
0	int
)	O
{	O
if	O
(	O
fail	int
)	O
destlen	pointer
>>=	O
1	int
;	O
dest	pointer
=	O
malloc	function
(	O
destlen	pointer
)	O
;	O
if	O
(	O
dest	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"memory allocation failure\n"	pointer
)	O
;	O
free	function
(	O
source	pointer
)	O
;	O
return	O
4	int
;	O
}	O
puff	function
(	O
dest	pointer
,	O
&	O
destlen	pointer
,	O
source	pointer
+	O
skip	int
,	O
&	O
sourcelen	pointer
)	O
;	O
SET_BINARY_MODE	O
(	O
stdout	pointer
)	O
;	O
fwrite	function
(	O
dest	pointer
,	O
1	int
,	O
destlen	pointer
,	O
stdout	pointer
)	O
;	O
free	function
(	O
dest	pointer
)	O
;	O
}	O
free	function
(	O
source	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
