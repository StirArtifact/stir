boolean	int
fsysdep_move_file	function
(	O
zorig	pointer
,	O
zto	pointer
,	O
fmkdirs	int
,	O
fpublic	int
,	O
fcheck	int
,	O
zuser	pointer
)	O
const	O
char	O
*	O
zorig	pointer
;	O
const	O
char	O
*	O
zto	pointer
;	O
boolean	int
fmkdirs	int
;	O
boolean	int
fpublic	int
;	O
boolean	int
fcheck	int
;	O
const	O
char	O
*	O
zuser	pointer
;	O
{	O
struct	O
stat	struct
s	struct
;	O
int	O
o	int
;	O
DEBUG_MESSAGE2	O
(	O
DEBUG_SPOOLDIR	O
,	O
"fsysdep_move_file: Moving %s to %s"	pointer
,	O
zorig	pointer
,	O
zto	pointer
)	O
;	O
if	O
(	O
fcheck	int
)	O
{	O
char	O
*	O
zcopy	pointer
;	O
char	O
*	O
zslash	pointer
;	O
zcopy	pointer
=	O
zbufcpy	function
(	O
zto	pointer
)	O
;	O
zslash	pointer
=	O
strrchr	function
(	O
zcopy	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
zslash	pointer
==	O
zcopy	pointer
)	O
zslash	pointer
[	O
1	int
]	O
=	O
'\0'	O
;	O
else	O
*	O
zslash	pointer
=	O
'\0'	O
;	O
if	O
(	O
stat	struct
(	O
zcopy	pointer
,	O
&	O
s	struct
)	O
!=	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"stat (%s): %s"	pointer
,	O
zcopy	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
ubuffree	function
(	O
zcopy	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fsuser_access	function
(	O
&	O
s	struct
,	O
W_OK	int
,	O
zuser	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
zcopy	pointer
,	O
strerror	function
(	O
EACCES	int
)	O
)	O
;	O
ubuffree	function
(	O
zcopy	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	function
(	O
zcopy	pointer
)	O
;	O
}	O
if	O
(	O
rename	function
(	O
zorig	pointer
,	O
zto	pointer
)	O
==	O
0	int
)	O
return	O
TRUE	O
;	O
if	O
(	O
fmkdirs	int
&&	O
errno	O
==	O
ENOENT	int
)	O
{	O
if	O
(	O
!	O
fsysdep_make_dirs	function
(	O
zto	pointer
,	O
fpublic	int
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
rename	function
(	O
zorig	pointer
,	O
zto	pointer
)	O
==	O
0	int
)	O
return	O
TRUE	O
;	O
}	O
errno	O
=	O
EXDEV	int
;	O
if	O
(	O
errno	O
!=	O
EXDEV	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"rename (%s, %s): %s"	pointer
,	O
zorig	pointer
,	O
zto	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
stat	struct
(	O
(	O
char	O
*	O
)	O
zorig	pointer
,	O
&	O
s	struct
)	O
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"stat (%s): %s"	pointer
,	O
zorig	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
(	O
void	O
)	O
remove	function
(	O
zto	pointer
)	O
;	O
o	int
=	O
creat	function
(	O
(	O
char	O
*	O
)	O
zto	pointer
,	O
s	struct
.	O
st_mode	int
)	O
;	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
if	O
(	O
fmkdirs	int
&&	O
errno	O
==	O
ENOENT	int
)	O
{	O
if	O
(	O
!	O
fsysdep_make_dirs	function
(	O
zto	pointer
,	O
fpublic	int
)	O
)	O
return	O
FALSE	O
;	O
o	int
=	O
creat	function
(	O
(	O
char	O
*	O
)	O
zto	pointer
,	O
s	struct
.	O
st_mode	int
)	O
;	O
}	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"creat (%s): %s"	pointer
,	O
zto	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
if	O
(	O
!	O
fcopy_file	function
(	O
zorig	pointer
,	O
zto	pointer
,	O
fpublic	int
,	O
fmkdirs	int
,	O
FALSE	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
remove	function
(	O
zorig	pointer
)	O
!=	O
0	int
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"remove (%s): %s"	pointer
,	O
zorig	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
TRUE	O
;	O
}	O
