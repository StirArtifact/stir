typedef	O
unsigned	O
char	O
*	O
Poly	pointer
;	O
typedef	O
Poly	pointer
*	O
PolyRow	pointer
;	O
typedef	O
PolyRow	pointer
*	O
PolyMatrix	pointer
;	O
static	O
int	O
degree	function
(	O
Poly	pointer
)	O
;	O
static	O
void	O
rowop	function
(	O
PolyMatrix	pointer
,	O
int	O
,	O
int	O
)	O
;	O
static	O
int	O
fix_errors	function
(	O
unsigned	O
char	O
*	O
,	O
unsigned	O
char	O
*	O
,	O
unsigned	O
char	O
*	O
)	O
;	O
static	O
void	O
solve_key_equation	function
(	O
unsigned	O
char	O
*	O
,	O
unsigned	O
char	O
*	O
,	O
unsigned	O
char	O
*	O
)	O
;	O
static	O
unsigned	O
char	O
evaluate	function
(	O
Poly	pointer
,	O
int	O
,	O
unsigned	O
char	O
)	O
;	O
static	O
void	O
free_matrix	function
(	O
PolyMatrix	pointer
)	O
;	O
static	O
PolyMatrix	pointer
initialize_matrix	function
(	O
unsigned	O
char	O
*	O
)	O
;	O
static	O
unsigned	O
char	O
f256_multiply	function
(	O
unsigned	O
char	O
,	O
unsigned	O
char	O
)	O
;	O
static	O
void	O
dump_syndrome	function
(	O
unsigned	O
char	O
*	O
)	O
;	O
int	O
rs_decode_block	function
(	O
unsigned	O
char	O
*	O
,	O
int	O
)	O
;	O
void	O
rs_encode_block	function
(	O
unsigned	O
char	O
*	O
,	O
unsigned	O
char	O
*	O
,	O
int	O
)	O
;	O
static	O
const	O
unsigned	O
char	O
f256_inverse	array
[	O
]	O
=	O
{	O
0	int
,	O
0x01	int
,	O
0xb4	int
,	O
0xd8	int
,	O
0x5a	int
,	O
0x48	int
,	O
0x6c	int
,	O
0x78	int
,	O
0x2d	int
,	O
0x28	int
,	O
0x24	int
,	O
0xa4	int
,	O
0x36	int
,	O
0xc9	int
,	O
0x3c	int
,	O
0x38	int
,	O
0xa2	int
,	O
0xcf	int
,	O
0x14	int
,	O
0x6a	int
,	O
0x12	int
,	O
0x6b	int
,	O
0x52	int
,	O
0x47	int
,	O
0x1b	int
,	O
0xd1	int
,	O
0xd0	int
,	O
0x18	int
,	O
0x1e	int
,	O
0xbb	int
,	O
0x1c	int
,	O
0xba	int
,	O
0x51	int
,	O
0xb1	int
,	O
0xd3	int
,	O
0xa6	int
,	O
0x0a	int
,	O
0xa5	int
,	O
0x35	int
,	O
0x69	int
,	O
0x09	int
,	O
0x2c	int
,	O
0x81	int
,	O
0x4f	int
,	O
0x29	int
,	O
0x08	int
,	O
0x97	int
,	O
0x67	int
,	O
0xb9	int
,	O
0xca	int
,	O
0xdc	int
,	O
0x45	int
,	O
0x68	int
,	O
0x26	int
,	O
0x0c	int
,	O
0xc8	int
,	O
0x0f	int
,	O
0x3d	int
,	O
0xe9	int
,	O
0x61	int
,	O
0x0e	int
,	O
0x39	int
,	O
0x5d	int
,	O
0xfe	int
,	O
0x9c	int
,	O
0x8d	int
,	O
0xec	int
,	O
0xe1	int
,	O
0xdd	int
,	O
0x33	int
,	O
0x53	int
,	O
0x17	int
,	O
0x05	int
,	O
0x5b	int
,	O
0xe6	int
,	O
0xcc	int
,	O
0xae	int
,	O
0xf8	int
,	O
0x80	int
,	O
0x2b	int
,	O
0xb0	int
,	O
0x20	int
,	O
0x16	int
,	O
0x46	int
,	O
0xf4	int
,	O
0xe4	int
,	O
0x93	int
,	O
0x98	int
,	O
0xa0	int
,	O
0x9f	int
,	O
0x04	int
,	O
0x49	int
,	O
0xff	int
,	O
0x3e	int
,	O
0x87	int
,	O
0xc5	int
,	O
0xe8	int
,	O
0x3b	int
,	O
0x65	int
,	O
0x6f	int
,	O
0x6e	int
,	O
0x62	int
,	O
0x96	int
,	O
0x2f	int
,	O
0x34	int
,	O
0x27	int
,	O
0x13	int
,	O
0x15	int
,	O
0x06	int
,	O
0x79	int
,	O
0x64	int
,	O
0x63	int
,	O
0xb3	int
,	O
0xfa	int
,	O
0xaa	int
,	O
0x94	int
,	O
0xc0	int
,	O
0xeb	int
,	O
0x84	int
,	O
0xdf	int
,	O
0x07	int
,	O
0x6d	int
,	O
0xa8	int
,	O
0xc3	int
,	O
0x9a	int
,	O
0xe2	int
,	O
0x7f	int
,	O
0x7e	int
,	O
0x4e	int
,	O
0x2a	int
,	O
0xf2	int
,	O
0xc6	int
,	O
0x76	int
,	O
0xde	int
,	O
0xc4	int
,	O
0x5e	int
,	O
0xda	int
,	O
0xef	int
,	O
0xad	int
,	O
0xfc	int
,	O
0x9d	int
,	O
0x41	int
,	O
0xbf	int
,	O
0xd7	int
,	O
0xb6	int
,	O
0xf1	int
,	O
0x99	int
,	O
0x56	int
,	O
0x73	int
,	O
0xab	int
,	O
0x66	int
,	O
0x2e	int
,	O
0x57	int
,	O
0x92	int
,	O
0x7c	int
,	O
0xe3	int
,	O
0x40	int
,	O
0x8c	int
,	O
0xa1	int
,	O
0x59	int
,	O
0x58	int
,	O
0x9e	int
,	O
0x10	int
,	O
0xce	int
,	O
0x0b	int
,	O
0x25	int
,	O
0x23	int
,	O
0xd2	int
,	O
0x7a	int
,	O
0xc2	int
,	O
0x72	int
,	O
0x95	int
,	O
0xfd	int
,	O
0x8a	int
,	O
0x4c	int
,	O
0xf9	int
,	O
0x50	int
,	O
0x21	int
,	O
0xfb	int
,	O
0x70	int
,	O
0x02	int
,	O
0xd9	int
,	O
0x90	int
,	O
0xf0	int
,	O
0xcb	int
,	O
0x30	int
,	O
0x1f	int
,	O
0x1d	int
,	O
0xf7	int
,	O
0xd4	int
,	O
0xd6	int
,	O
0x8e	int
,	O
0x74	int
,	O
0xea	int
,	O
0xa9	int
,	O
0x7b	int
,	O
0x86	int
,	O
0x5f	int
,	O
0x83	int
,	O
0xf3	int
,	O
0x37	int
,	O
0x0d	int
,	O
0x31	int
,	O
0xb8	int
,	O
0x4b	int
,	O
0xe7	int
,	O
0xa3	int
,	O
0x11	int
,	O
0x1a	int
,	O
0x19	int
,	O
0xa7	int
,	O
0x22	int
,	O
0xbd	int
,	O
0xf6	int
,	O
0xbe	int
,	O
0x8f	int
,	O
0x03	int
,	O
0xb5	int
,	O
0x88	int
,	O
0xee	int
,	O
0x32	int
,	O
0x44	int
,	O
0x85	int
,	O
0x77	int
,	O
0xed	int
,	O
0x43	int
,	O
0x7d	int
,	O
0x9b	int
,	O
0x55	int
,	O
0xf5	int
,	O
0x4a	int
,	O
0xcd	int
,	O
0x60	int
,	O
0x3a	int
,	O
0xc1	int
,	O
0x75	int
,	O
0x42	int
,	O
0xe0	int
,	O
0xdb	int
,	O
0x89	int
,	O
0xb7	int
,	O
0x91	int
,	O
0x82	int
,	O
0xc7	int
,	O
0x54	int
,	O
0xe5	int
,	O
0xd5	int
,	O
0xbc	int
,	O
0x4d	int
,	O
0xaf	int
,	O
0x71	int
,	O
0xb2	int
,	O
0x8b	int
,	O
0xac	int
,	O
0x3f	int
,	O
0x5c	int
,	O
}	O
;	O
const	O
unsigned	O
char	O
f256_power	array
[	O
]	O
=	O
{	O
0x01	int
,	O
0x02	int
,	O
0x04	int
,	O
0x08	int
,	O
0x10	int
,	O
0x20	int
,	O
0x40	int
,	O
0x80	int
,	O
0x69	int
,	O
0xd2	int
,	O
0xcd	int
,	O
0xf3	int
,	O
0x8f	int
,	O
0x77	int
,	O
0xee	int
,	O
0xb5	int
,	O
0x03	int
,	O
0x06	int
,	O
0x0c	int
,	O
0x18	int
,	O
0x30	int
,	O
0x60	int
,	O
0xc0	int
,	O
0xe9	int
,	O
0xbb	int
,	O
0x1f	int
,	O
0x3e	int
,	O
0x7c	int
,	O
0xf8	int
,	O
0x99	int
,	O
0x5b	int
,	O
0xb6	int
,	O
0x05	int
,	O
0x0a	int
,	O
0x14	int
,	O
0x28	int
,	O
0x50	int
,	O
0xa0	int
,	O
0x29	int
,	O
0x52	int
,	O
0xa4	int
,	O
0x21	int
,	O
0x42	int
,	O
0x84	int
,	O
0x61	int
,	O
0xc2	int
,	O
0xed	int
,	O
0xb3	int
,	O
0x0f	int
,	O
0x1e	int
,	O
0x3c	int
,	O
0x78	int
,	O
0xf0	int
,	O
0x89	int
,	O
0x7b	int
,	O
0xf6	int
,	O
0x85	int
,	O
0x63	int
,	O
0xc6	int
,	O
0xe5	int
,	O
0xa3	int
,	O
0x2f	int
,	O
0x5e	int
,	O
0xbc	int
,	O
0x11	int
,	O
0x22	int
,	O
0x44	int
,	O
0x88	int
,	O
0x79	int
,	O
0xf2	int
,	O
0x8d	int
,	O
0x73	int
,	O
0xe6	int
,	O
0xa5	int
,	O
0x23	int
,	O
0x46	int
,	O
0x8c	int
,	O
0x71	int
,	O
0xe2	int
,	O
0xad	int
,	O
0x33	int
,	O
0x66	int
,	O
0xcc	int
,	O
0xf1	int
,	O
0x8b	int
,	O
0x7f	int
,	O
0xfe	int
,	O
0x95	int
,	O
0x43	int
,	O
0x86	int
,	O
0x65	int
,	O
0xca	int
,	O
0xfd	int
,	O
0x93	int
,	O
0x4f	int
,	O
0x9e	int
,	O
0x55	int
,	O
0xaa	int
,	O
0x3d	int
,	O
0x7a	int
,	O
0xf4	int
,	O
0x81	int
,	O
0x6b	int
,	O
0xd6	int
,	O
0xc5	int
,	O
0xe3	int
,	O
0xaf	int
,	O
0x37	int
,	O
0x6e	int
,	O
0xdc	int
,	O
0xd1	int
,	O
0xcb	int
,	O
0xff	int
,	O
0x97	int
,	O
0x47	int
,	O
0x8e	int
,	O
0x75	int
,	O
0xea	int
,	O
0xbd	int
,	O
0x13	int
,	O
0x26	int
,	O
0x4c	int
,	O
0x98	int
,	O
0x59	int
,	O
0xb2	int
,	O
0x0d	int
,	O
0x1a	int
,	O
0x34	int
,	O
0x68	int
,	O
0xd0	int
,	O
0xc9	int
,	O
0xfb	int
,	O
0x9f	int
,	O
0x57	int
,	O
0xae	int
,	O
0x35	int
,	O
0x6a	int
,	O
0xd4	int
,	O
0xc1	int
,	O
0xeb	int
,	O
0xbf	int
,	O
0x17	int
,	O
0x2e	int
,	O
0x5c	int
,	O
0xb8	int
,	O
0x19	int
,	O
0x32	int
,	O
0x64	int
,	O
0xc8	int
,	O
0xf9	int
,	O
0x9b	int
,	O
0x5f	int
,	O
0xbe	int
,	O
0x15	int
,	O
0x2a	int
,	O
0x54	int
,	O
0xa8	int
,	O
0x39	int
,	O
0x72	int
,	O
0xe4	int
,	O
0xa1	int
,	O
0x2b	int
,	O
0x56	int
,	O
0xac	int
,	O
0x31	int
,	O
0x62	int
,	O
0xc4	int
,	O
0xe1	int
,	O
0xab	int
,	O
0x3f	int
,	O
0x7e	int
,	O
0xfc	int
,	O
0x91	int
,	O
0x4b	int
,	O
0x96	int
,	O
0x45	int
,	O
0x8a	int
,	O
0x7d	int
,	O
0xfa	int
,	O
0x9d	int
,	O
0x53	int
,	O
0xa6	int
,	O
0x25	int
,	O
0x4a	int
,	O
0x94	int
,	O
0x41	int
,	O
0x82	int
,	O
0x6d	int
,	O
0xda	int
,	O
0xdd	int
,	O
0xd3	int
,	O
0xcf	int
,	O
0xf7	int
,	O
0x87	int
,	O
0x67	int
,	O
0xce	int
,	O
0xf5	int
,	O
0x83	int
,	O
0x6f	int
,	O
0xde	int
,	O
0xd5	int
,	O
0xc3	int
,	O
0xef	int
,	O
0xb7	int
,	O
0x07	int
,	O
0x0e	int
,	O
0x1c	int
,	O
0x38	int
,	O
0x70	int
,	O
0xe0	int
,	O
0xa9	int
,	O
0x3b	int
,	O
0x76	int
,	O
0xec	int
,	O
0xb1	int
,	O
0x0b	int
,	O
0x16	int
,	O
0x2c	int
,	O
0x58	int
,	O
0xb0	int
,	O
0x09	int
,	O
0x12	int
,	O
0x24	int
,	O
0x48	int
,	O
0x90	int
,	O
0x49	int
,	O
0x92	int
,	O
0x4d	int
,	O
0x9a	int
,	O
0x5d	int
,	O
0xba	int
,	O
0x1d	int
,	O
0x3a	int
,	O
0x74	int
,	O
0xe8	int
,	O
0xb9	int
,	O
0x1b	int
,	O
0x36	int
,	O
0x6c	int
,	O
0xd8	int
,	O
0xd9	int
,	O
0xdb	int
,	O
0xdf	int
,	O
0xd7	int
,	O
0xc7	int
,	O
0xe7	int
,	O
0xa7	int
,	O
0x27	int
,	O
0x4e	int
,	O
0x9c	int
,	O
0x51	int
,	O
0xa2	int
,	O
0x2d	int
,	O
0x5a	int
,	O
0xb4	int
,	O
}	O
;	O
static	O
const	O
unsigned	O
char	O
f256_residue	array
[	O
]	O
=	O
{	O
0x00	int
,	O
0x69	int
,	O
0xd2	int
,	O
0xbb	int
,	O
0xcd	int
,	O
0xa4	int
,	O
0x1f	int
,	O
0x76	int
,	O
0xf3	int
,	O
0x9a	int
,	O
0x21	int
,	O
0x48	int
,	O
0x3e	int
,	O
0x57	int
,	O
0xec	int
,	O
0x85	int
,	O
0x8f	int
,	O
0xe6	int
,	O
0x5d	int
,	O
0x34	int
,	O
0x42	int
,	O
0x2b	int
,	O
0x90	int
,	O
0xf9	int
,	O
0x7c	int
,	O
0x15	int
,	O
0xae	int
,	O
0xc7	int
,	O
0xb1	int
,	O
0xd8	int
,	O
0x63	int
,	O
0x0a	int
,	O
0x77	int
,	O
0x1e	int
,	O
0xa5	int
,	O
0xcc	int
,	O
0xba	int
,	O
0xd3	int
,	O
0x68	int
,	O
0x01	int
,	O
0x84	int
,	O
0xed	int
,	O
0x56	int
,	O
0x3f	int
,	O
0x49	int
,	O
0x20	int
,	O
0x9b	int
,	O
0xf2	int
,	O
0xf8	int
,	O
0x91	int
,	O
0x2a	int
,	O
0x43	int
,	O
0x35	int
,	O
0x5c	int
,	O
0xe7	int
,	O
0x8e	int
,	O
0x0b	int
,	O
0x62	int
,	O
0xd9	int
,	O
0xb0	int
,	O
0xc6	int
,	O
0xaf	int
,	O
0x14	int
,	O
0x7d	int
,	O
0xee	int
,	O
0x87	int
,	O
0x3c	int
,	O
0x55	int
,	O
0x23	int
,	O
0x4a	int
,	O
0xf1	int
,	O
0x98	int
,	O
0x1d	int
,	O
0x74	int
,	O
0xcf	int
,	O
0xa6	int
,	O
0xd0	int
,	O
0xb9	int
,	O
0x02	int
,	O
0x6b	int
,	O
0x61	int
,	O
0x08	int
,	O
0xb3	int
,	O
0xda	int
,	O
0xac	int
,	O
0xc5	int
,	O
0x7e	int
,	O
0x17	int
,	O
0x92	int
,	O
0xfb	int
,	O
0x40	int
,	O
0x29	int
,	O
0x5f	int
,	O
0x36	int
,	O
0x8d	int
,	O
0xe4	int
,	O
0x99	int
,	O
0xf0	int
,	O
0x4b	int
,	O
0x22	int
,	O
0x54	int
,	O
0x3d	int
,	O
0x86	int
,	O
0xef	int
,	O
0x6a	int
,	O
0x03	int
,	O
0xb8	int
,	O
0xd1	int
,	O
0xa7	int
,	O
0xce	int
,	O
0x75	int
,	O
0x1c	int
,	O
0x16	int
,	O
0x7f	int
,	O
0xc4	int
,	O
0xad	int
,	O
0xdb	int
,	O
0xb2	int
,	O
0x09	int
,	O
0x60	int
,	O
0xe5	int
,	O
0x8c	int
,	O
0x37	int
,	O
0x5e	int
,	O
0x28	int
,	O
0x41	int
,	O
0xfa	int
,	O
0x93	int
,	O
0xb5	int
,	O
0xdc	int
,	O
0x67	int
,	O
0x0e	int
,	O
0x78	int
,	O
0x11	int
,	O
0xaa	int
,	O
0xc3	int
,	O
0x46	int
,	O
0x2f	int
,	O
0x94	int
,	O
0xfd	int
,	O
0x8b	int
,	O
0xe2	int
,	O
0x59	int
,	O
0x30	int
,	O
0x3a	int
,	O
0x53	int
,	O
0xe8	int
,	O
0x81	int
,	O
0xf7	int
,	O
0x9e	int
,	O
0x25	int
,	O
0x4c	int
,	O
0xc9	int
,	O
0xa0	int
,	O
0x1b	int
,	O
0x72	int
,	O
0x04	int
,	O
0x6d	int
,	O
0xd6	int
,	O
0xbf	int
,	O
0xc2	int
,	O
0xab	int
,	O
0x10	int
,	O
0x79	int
,	O
0x0f	int
,	O
0x66	int
,	O
0xdd	int
,	O
0xb4	int
,	O
0x31	int
,	O
0x58	int
,	O
0xe3	int
,	O
0x8a	int
,	O
0xfc	int
,	O
0x95	int
,	O
0x2e	int
,	O
0x47	int
,	O
0x4d	int
,	O
0x24	int
,	O
0x9f	int
,	O
0xf6	int
,	O
0x80	int
,	O
0xe9	int
,	O
0x52	int
,	O
0x3b	int
,	O
0xbe	int
,	O
0xd7	int
,	O
0x6c	int
,	O
0x05	int
,	O
0x73	int
,	O
0x1a	int
,	O
0xa1	int
,	O
0xc8	int
,	O
0x5b	int
,	O
0x32	int
,	O
0x89	int
,	O
0xe0	int
,	O
0x96	int
,	O
0xff	int
,	O
0x44	int
,	O
0x2d	int
,	O
0xa8	int
,	O
0xc1	int
,	O
0x7a	int
,	O
0x13	int
,	O
0x65	int
,	O
0x0c	int
,	O
0xb7	int
,	O
0xde	int
,	O
0xd4	int
,	O
0xbd	int
,	O
0x06	int
,	O
0x6f	int
,	O
0x19	int
,	O
0x70	int
,	O
0xcb	int
,	O
0xa2	int
,	O
0x27	int
,	O
0x4e	int
,	O
0xf5	int
,	O
0x9c	int
,	O
0xea	int
,	O
0x83	int
,	O
0x38	int
,	O
0x51	int
,	O
0x2c	int
,	O
0x45	int
,	O
0xfe	int
,	O
0x97	int
,	O
0xe1	int
,	O
0x88	int
,	O
0x33	int
,	O
0x5a	int
,	O
0xdf	int
,	O
0xb6	int
,	O
0x0d	int
,	O
0x64	int
,	O
0x12	int
,	O
0x7b	int
,	O
0xc0	int
,	O
0xa9	int
,	O
0xa3	int
,	O
0xca	int
,	O
0x71	int
,	O
0x18	int
,	O
0x6e	int
,	O
0x07	int
,	O
0xbc	int
,	O
0xd5	int
,	O
0x50	int
,	O
0x39	int
,	O
0x82	int
,	O
0xeb	int
,	O
0x9d	int
,	O
0xf4	int
,	O
0x4f	int
,	O
0x26	int
,	O
}	O
;	O
const	O
unsigned	O
char	O
f256_logarithm	array
[	O
]	O
=	O
{	O
0x00	int
,	O
0x00	int
,	O
0x01	int
,	O
0x10	int
,	O
0x02	int
,	O
0x20	int
,	O
0x11	int
,	O
0xcc	int
,	O
0x03	int
,	O
0xdc	int
,	O
0x21	int
,	O
0xd7	int
,	O
0x12	int
,	O
0x7d	int
,	O
0xcd	int
,	O
0x30	int
,	O
0x04	int
,	O
0x40	int
,	O
0xdd	int
,	O
0x77	int
,	O
0x22	int
,	O
0x99	int
,	O
0xd8	int
,	O
0x8d	int
,	O
0x13	int
,	O
0x91	int
,	O
0x7e	int
,	O
0xec	int
,	O
0xce	int
,	O
0xe7	int
,	O
0x31	int
,	O
0x19	int
,	O
0x05	int
,	O
0x29	int
,	O
0x41	int
,	O
0x4a	int
,	O
0xde	int
,	O
0xb6	int
,	O
0x78	int
,	O
0xf7	int
,	O
0x23	int
,	O
0x26	int
,	O
0x9a	int
,	O
0xa1	int
,	O
0xd9	int
,	O
0xfc	int
,	O
0x8e	int
,	O
0x3d	int
,	O
0x14	int
,	O
0xa4	int
,	O
0x92	int
,	O
0x50	int
,	O
0x7f	int
,	O
0x87	int
,	O
0xed	int
,	O
0x6b	int
,	O
0xcf	int
,	O
0x9d	int
,	O
0xe8	int
,	O
0xd3	int
,	O
0x32	int
,	O
0x62	int
,	O
0x1a	int
,	O
0xa9	int
,	O
0x06	int
,	O
0xb9	int
,	O
0x2a	int
,	O
0x58	int
,	O
0x42	int
,	O
0xaf	int
,	O
0x4b	int
,	O
0x72	int
,	O
0xdf	int
,	O
0xe1	int
,	O
0xb7	int
,	O
0xad	int
,	O
0x79	int
,	O
0xe3	int
,	O
0xf8	int
,	O
0x5e	int
,	O
0x24	int
,	O
0xfa	int
,	O
0x27	int
,	O
0xb4	int
,	O
0x9b	int
,	O
0x60	int
,	O
0xa2	int
,	O
0x85	int
,	O
0xda	int
,	O
0x7b	int
,	O
0xfd	int
,	O
0x1e	int
,	O
0x8f	int
,	O
0xe5	int
,	O
0x3e	int
,	O
0x97	int
,	O
0x15	int
,	O
0x2c	int
,	O
0xa5	int
,	O
0x39	int
,	O
0x93	int
,	O
0x5a	int
,	O
0x51	int
,	O
0xc2	int
,	O
0x80	int
,	O
0x08	int
,	O
0x88	int
,	O
0x66	int
,	O
0xee	int
,	O
0xbb	int
,	O
0x6c	int
,	O
0xc6	int
,	O
0xd0	int
,	O
0x4d	int
,	O
0x9e	int
,	O
0x47	int
,	O
0xe9	int
,	O
0x74	int
,	O
0xd4	int
,	O
0x0d	int
,	O
0x33	int
,	O
0x44	int
,	O
0x63	int
,	O
0x36	int
,	O
0x1b	int
,	O
0xb1	int
,	O
0xaa	int
,	O
0x55	int
,	O
0x07	int
,	O
0x65	int
,	O
0xba	int
,	O
0xc5	int
,	O
0x2b	int
,	O
0x38	int
,	O
0x59	int
,	O
0xc1	int
,	O
0x43	int
,	O
0x35	int
,	O
0xb0	int
,	O
0x54	int
,	O
0x4c	int
,	O
0x46	int
,	O
0x73	int
,	O
0x0c	int
,	O
0xe0	int
,	O
0xac	int
,	O
0xe2	int
,	O
0x5d	int
,	O
0xb8	int
,	O
0x57	int
,	O
0xae	int
,	O
0x71	int
,	O
0x7a	int
,	O
0x1d	int
,	O
0xe4	int
,	O
0x96	int
,	O
0xf9	int
,	O
0xb3	int
,	O
0x5f	int
,	O
0x84	int
,	O
0x25	int
,	O
0xa0	int
,	O
0xfb	int
,	O
0x3c	int
,	O
0x28	int
,	O
0x49	int
,	O
0xb5	int
,	O
0xf6	int
,	O
0x9c	int
,	O
0xd2	int
,	O
0x61	int
,	O
0xa8	int
,	O
0xa3	int
,	O
0x4f	int
,	O
0x86	int
,	O
0x6a	int
,	O
0xdb	int
,	O
0xd6	int
,	O
0x7c	int
,	O
0x2f	int
,	O
0xfe	int
,	O
0x0f	int
,	O
0x1f	int
,	O
0xcb	int
,	O
0x90	int
,	O
0xeb	int
,	O
0xe6	int
,	O
0x18	int
,	O
0x3f	int
,	O
0x76	int
,	O
0x98	int
,	O
0x8c	int
,	O
0x16	int
,	O
0x8a	int
,	O
0x2d	int
,	O
0xc9	int
,	O
0xa6	int
,	O
0x68	int
,	O
0x3a	int
,	O
0xf4	int
,	O
0x94	int
,	O
0x82	int
,	O
0x5b	int
,	O
0x6f	int
,	O
0x52	int
,	O
0x0a	int
,	O
0xc3	int
,	O
0xbf	int
,	O
0x81	int
,	O
0x6e	int
,	O
0x09	int
,	O
0xbe	int
,	O
0x89	int
,	O
0xc8	int
,	O
0x67	int
,	O
0xf3	int
,	O
0xef	int
,	O
0xf0	int
,	O
0xbc	int
,	O
0xf1	int
,	O
0x6d	int
,	O
0xbd	int
,	O
0xc7	int
,	O
0xf2	int
,	O
0xd1	int
,	O
0xa7	int
,	O
0x4e	int
,	O
0x69	int
,	O
0x9f	int
,	O
0x3b	int
,	O
0x48	int
,	O
0xf5	int
,	O
0xea	int
,	O
0x17	int
,	O
0x75	int
,	O
0x8b	int
,	O
0xd5	int
,	O
0x2e	int
,	O
0x0e	int
,	O
0xca	int
,	O
0x34	int
,	O
0x53	int
,	O
0x45	int
,	O
0x0b	int
,	O
0x64	int
,	O
0xc4	int
,	O
0x37	int
,	O
0xc0	int
,	O
0x1c	int
,	O
0x95	int
,	O
0xb2	int
,	O
0x83	int
,	O
0xab	int
,	O
0x5c	int
,	O
0x56	int
,	O
0x70	int
}	O
;	O
static	O
const	O
unsigned	O
char	O
rsgen	array
[	O
]	O
=	O
{	O
0x6a	int
,	O
0xe3	int
,	O
0x63	int
,	O
0x1f	int
,	O
0xa1	int
,	O
0x24	int
,	O
0x9e	int
,	O
0x44	int
,	O
0x13	int
,	O
0x1e	int
,	O
0x2f	int
,	O
0xfc	int
,	O
0xfd	int
,	O
0xce	int
,	O
0xa9	int
,	O
0xdb	int
,	O
0x01	int
,	O
}	O
;	O
static	O
unsigned	O
char	O
f256_multiply	function
(	O
unsigned	O
char	O
a	char
,	O
unsigned	O
char	O
b	char
)	O
{	O
unsigned	O
int	O
prod	int
=	O
0	int
;	O
unsigned	O
int	O
A	int
=	O
a	char
;	O
unsigned	O
int	O
B	int
=	O
b	char
;	O
while	O
(	O
B	int
!=	O
0	int
)	O
{	O
if	O
(	O
B	int
&	O
1	int
)	O
prod	int
^=	O
A	int
;	O
B	int
>>=	O
1	int
;	O
A	int
<<=	O
1	int
;	O
}	O
prod	int
^=	O
f256_residue	array
[	O
prod	int
>>	O
8	int
]	O
;	O
return	O
prod	int
&	O
0xff	int
;	O
}	O
void	O
rs_encode_block	function
(	O
unsigned	O
char	O
*	O
parity	pointer
,	O
unsigned	O
char	O
*	O
src	pointer
,	O
int	O
count	int
)	O
{	O
int	O
i	int
,	O
j	int
;	O
unsigned	O
char	O
leader	char
,	O
coeff	char
;	O
memset	function
(	O
parity	pointer
,	O
0	int
,	O
16	int
)	O
;	O
i	int
=	O
count	int
;	O
while	O
(	O
i	int
--	O
)	O
{	O
leader	char
=	O
parity	pointer
[	O
15	int
]	O
;	O
for	O
(	O
j	int
=	O
15	int
;	O
j	int
>	O
0	int
;	O
j	int
--	O
)	O
parity	pointer
[	O
j	int
]	O
=	O
parity	pointer
[	O
j	int
-	O
1	int
]	O
^	O
f256_multiply	function
(	O
leader	char
,	O
rsgen	array
[	O
j	int
]	O
)	O
;	O
parity	pointer
[	O
0	int
]	O
=	O
src	pointer
[	O
i	int
]	O
^	O
f256_multiply	function
(	O
leader	char
,	O
rsgen	array
[	O
0	int
]	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
16	int
;	O
i	int
>	O
0	int
;	O
i	int
--	O
)	O
{	O
leader	char
=	O
parity	pointer
[	O
15	int
]	O
;	O
for	O
(	O
j	int
=	O
15	int
;	O
j	int
>	O
0	int
;	O
j	int
--	O
)	O
parity	pointer
[	O
j	int
]	O
=	O
parity	pointer
[	O
j	int
-	O
1	int
]	O
^	O
f256_multiply	function
(	O
leader	char
,	O
rsgen	array
[	O
j	int
]	O
)	O
;	O
parity	pointer
[	O
0	int
]	O
=	O
f256_multiply	function
(	O
leader	char
,	O
rsgen	array
[	O
0	int
]	O
)	O
;	O
}	O
}	O
int	O
rs_decode_block	function
(	O
unsigned	O
char	O
*	O
blk	pointer
,	O
int	O
fix	int
)	O
{	O
int	O
i	int
,	O
j	int
;	O
unsigned	O
char	O
leader	char
;	O
unsigned	O
char	O
*	O
synbuf	pointer
,	O
*	O
sigma	pointer
,	O
*	O
omega	pointer
;	O
int	O
errflag	int
=	O
0	int
;	O
synbuf	pointer
=	O
malloc	function
(	O
POLY_LENGTH	int
)	O
;	O
memset	function
(	O
synbuf	pointer
,	O
0	int
,	O
16	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
16	int
;	O
j	int
++	O
)	O
{	O
synbuf	pointer
[	O
j	int
]	O
=	O
evaluate	function
(	O
blk	pointer
,	O
255	int
,	O
f256_power	array
[	O
j	int
+	O
1	int
]	O
)	O
;	O
if	O
(	O
synbuf	pointer
[	O
j	int
]	O
!=	O
0	int
)	O
errflag	int
=	O
1	int
;	O
}	O
if	O
(	O
!	O
errflag	int
)	O
{	O
debug	O
(	O
"No error in Reed-Solomon block\n"	pointer
)	O
;	O
free	function
(	O
synbuf	pointer
)	O
;	O
return	O
0	int
;	O
}	O
debug	O
(	O
"Errors detected in Reed-Solomon block\n"	pointer
)	O
;	O
dump_syndrome	function
(	O
synbuf	pointer
)	O
;	O
if	O
(	O
!	O
fix	int
)	O
{	O
free	function
(	O
synbuf	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
sigma	pointer
=	O
malloc	function
(	O
POLY_LENGTH	int
)	O
;	O
memset	function
(	O
sigma	pointer
,	O
0	int
,	O
POLY_LENGTH	int
)	O
;	O
omega	pointer
=	O
malloc	function
(	O
POLY_LENGTH	int
)	O
;	O
memset	function
(	O
omega	pointer
,	O
0	int
,	O
POLY_LENGTH	int
)	O
;	O
solve_key_equation	function
(	O
synbuf	pointer
,	O
sigma	pointer
,	O
omega	pointer
)	O
;	O
i	int
=	O
fix_errors	function
(	O
blk	pointer
,	O
sigma	pointer
,	O
omega	pointer
)	O
;	O
free	function
(	O
sigma	pointer
)	O
;	O
free	function
(	O
omega	pointer
)	O
;	O
free	function
(	O
synbuf	pointer
)	O
;	O
if	O
(	O
i	int
<	O
0	int
)	O
debug	O
(	O
"Errors in Reed-Solomon block are not recoverable\n"	pointer
)	O
;	O
else	O
debug	O
(	O
"Fixed errors in Reed-Solomon block: %d\n"	pointer
,	O
i	int
)	O
;	O
return	O
i	int
;	O
}	O
static	O
int	O
degree	function
(	O
Poly	pointer
poly	pointer
)	O
{	O
int	O
i	int
;	O
i	int
=	O
POLY_LENGTH	int
-	O
1	int
;	O
while	O
(	O
i	int
--	O
)	O
if	O
(	O
poly	pointer
[	O
i	int
]	O
!=	O
0	int
)	O
break	O
;	O
return	O
i	int
;	O
}	O
static	O
void	O
rowop	function
(	O
PolyMatrix	pointer
matrix	pointer
,	O
int	O
dst	int
,	O
int	O
src	pointer
)	O
{	O
int	O
dstd	int
,	O
srcd	int
;	O
int	O
limit	int
;	O
int	O
power	int
;	O
unsigned	O
char	O
coeff	char
;	O
int	O
i	int
,	O
j	int
,	O
k	int
,	O
l	int
;	O
dstd	int
=	O
degree	function
(	O
matrix	pointer
[	O
dst	int
]	O
[	O
2	int
]	O
)	O
;	O
srcd	int
=	O
degree	function
(	O
matrix	pointer
[	O
src	pointer
]	O
[	O
2	int
]	O
)	O
;	O
power	int
=	O
dstd	int
-	O
srcd	int
;	O
coeff	char
=	O
f256_inverse	array
[	O
matrix	pointer
[	O
src	pointer
]	O
[	O
2	int
]	O
[	O
srcd	int
]	O
]	O
;	O
coeff	char
=	O
f256_multiply	function
(	O
coeff	char
,	O
matrix	pointer
[	O
dst	int
]	O
[	O
2	int
]	O
[	O
dstd	int
]	O
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
3	int
;	O
j	int
++	O
)	O
{	O
limit	int
=	O
17	int
-	O
power	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
limit	int
;	O
i	int
++	O
)	O
{	O
matrix	pointer
[	O
dst	int
]	O
[	O
j	int
]	O
[	O
i	int
+	O
power	int
]	O
^=	O
f256_multiply	function
(	O
coeff	char
,	O
matrix	pointer
[	O
src	pointer
]	O
[	O
j	int
]	O
[	O
i	int
]	O
)	O
;	O
}	O
}	O
}	O
static	O
PolyMatrix	pointer
initialize_matrix	function
(	O
unsigned	O
char	O
*	O
s	pointer
)	O
{	O
int	O
deg	int
;	O
PolyMatrix	pointer
matrix	pointer
;	O
int	O
i	int
,	O
j	int
;	O
matrix	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
PolyRow	pointer
)	O
*	O
2	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
2	int
;	O
i	int
++	O
)	O
{	O
matrix	pointer
[	O
i	int
]	O
=	O
malloc	function
(	O
sizeof	O
(	O
Poly	pointer
)	O
*	O
3	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
3	int
;	O
j	int
++	O
)	O
{	O
matrix	pointer
[	O
i	int
]	O
[	O
j	int
]	O
=	O
malloc	function
(	O
POLY_LENGTH	int
)	O
;	O
memset	function
(	O
matrix	pointer
[	O
i	int
]	O
[	O
j	int
]	O
,	O
0	int
,	O
POLY_LENGTH	int
)	O
;	O
}	O
}	O
matrix	pointer
[	O
0	int
]	O
[	O
0	int
]	O
[	O
0	int
]	O
=	O
1	int
;	O
memcpy	function
(	O
matrix	pointer
[	O
0	int
]	O
[	O
2	int
]	O
,	O
s	pointer
,	O
16	int
)	O
;	O
matrix	pointer
[	O
1	int
]	O
[	O
1	int
]	O
[	O
0	int
]	O
=	O
1	int
;	O
matrix	pointer
[	O
1	int
]	O
[	O
2	int
]	O
[	O
16	int
]	O
=	O
1	int
;	O
return	O
matrix	pointer
;	O
}	O
static	O
void	O
free_matrix	function
(	O
PolyMatrix	pointer
matrix	pointer
)	O
{	O
int	O
i	int
,	O
j	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
2	int
;	O
i	int
++	O
)	O
{	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
2	int
;	O
j	int
++	O
)	O
{	O
free	function
(	O
matrix	pointer
[	O
i	int
]	O
[	O
j	int
]	O
)	O
;	O
}	O
free	function
(	O
matrix	pointer
[	O
i	int
]	O
)	O
;	O
}	O
}	O
static	O
unsigned	O
char	O
evaluate	function
(	O
Poly	pointer
poly	pointer
,	O
int	O
deg	int
,	O
unsigned	O
char	O
x	char
)	O
{	O
unsigned	O
char	O
y	char
;	O
y	char
=	O
poly	pointer
[	O
deg	int
]	O
;	O
while	O
(	O
deg	int
>=	O
0	int
)	O
{	O
y	char
=	O
f256_multiply	function
(	O
x	char
,	O
y	char
)	O
^	O
poly	pointer
[	O
deg	int
]	O
;	O
deg	int
--	O
;	O
}	O
return	O
y	char
;	O
}	O
static	O
void	O
solve_key_equation	function
(	O
unsigned	O
char	O
*	O
s	pointer
,	O
unsigned	O
char	O
*	O
sigma	pointer
,	O
unsigned	O
char	O
*	O
omega	pointer
)	O
{	O
int	O
fixed_row	int
;	O
PolyMatrix	pointer
matrix	pointer
;	O
unsigned	O
char	O
leader0	char
,	O
leader1	char
;	O
int	O
x	char
,	O
i	int
;	O
matrix	pointer
=	O
initialize_matrix	function
(	O
s	pointer
)	O
;	O
fixed_row	int
=	O
0	int
;	O
while	O
(	O
degree	function
(	O
matrix	pointer
[	O
fixed_row	int
]	O
[	O
0	int
]	O
)	O
>	O
8	int
||	O
degree	function
(	O
matrix	pointer
[	O
fixed_row	int
]	O
[	O
2	int
]	O
)	O
>	O
7	int
)	O
{	O
if	O
(	O
degree	function
(	O
matrix	pointer
[	O
0	int
]	O
[	O
2	int
]	O
)	O
<	O
degree	function
(	O
matrix	pointer
[	O
1	int
]	O
[	O
2	int
]	O
)	O
)	O
{	O
fixed_row	int
=	O
0	int
;	O
rowop	function
(	O
matrix	pointer
,	O
1	int
,	O
0	int
)	O
;	O
}	O
else	O
{	O
fixed_row	int
=	O
1	int
;	O
rowop	function
(	O
matrix	pointer
,	O
0	int
,	O
1	int
)	O
;	O
}	O
}	O
memcpy	function
(	O
sigma	pointer
,	O
matrix	pointer
[	O
fixed_row	int
]	O
[	O
0	int
]	O
,	O
POLY_LENGTH	int
)	O
;	O
memcpy	function
(	O
omega	pointer
,	O
matrix	pointer
[	O
fixed_row	int
]	O
[	O
2	int
]	O
,	O
POLY_LENGTH	int
)	O
;	O
free_matrix	function
(	O
matrix	pointer
)	O
;	O
}	O
static	O
int	O
fix_errors	function
(	O
unsigned	O
char	O
*	O
blk	pointer
,	O
unsigned	O
char	O
*	O
sigma	pointer
,	O
unsigned	O
char	O
*	O
omega	pointer
)	O
{	O
int	O
i	int
,	O
j	int
,	O
x	char
,	O
d	int
;	O
int	O
nerr	int
;	O
unsigned	O
char	O
errorval	char
;	O
unsigned	O
char	O
roots	array
[	O
8	int
]	O
;	O
unsigned	O
char	O
chaff	char
;	O
nerr	int
=	O
0	int
;	O
for	O
(	O
x	char
=	O
0	int
;	O
x	char
<	O
256	int
;	O
x	char
++	O
)	O
{	O
if	O
(	O
evaluate	function
(	O
sigma	pointer
,	O
8	int
,	O
x	char
)	O
==	O
0	int
)	O
roots	array
[	O
nerr	int
++	O
]	O
=	O
x	char
;	O
}	O
d	int
=	O
degree	function
(	O
sigma	pointer
)	O
;	O
if	O
(	O
nerr	int
!=	O
d	int
)	O
return	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
8	int
;	O
i	int
++	O
)	O
{	O
sigma	pointer
[	O
2	int
*	O
i	int
]	O
=	O
sigma	pointer
[	O
2	int
*	O
i	int
+	O
1	int
]	O
;	O
sigma	pointer
[	O
2	int
*	O
i	int
+	O
1	int
]	O
=	O
0	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nerr	int
;	O
i	int
++	O
)	O
{	O
int	O
pos	int
;	O
unsigned	O
char	O
sigmaval	char
=	O
evaluate	function
(	O
sigma	pointer
,	O
16	int
,	O
roots	array
[	O
i	int
]	O
)	O
;	O
unsigned	O
char	O
omegaval	char
=	O
evaluate	function
(	O
omega	pointer
,	O
16	int
,	O
roots	array
[	O
i	int
]	O
)	O
;	O
chaff	char
=	O
f256_inverse	array
[	O
sigmaval	char
]	O
;	O
errorval	char
=	O
f256_multiply	function
(	O
chaff	char
,	O
omegaval	char
)	O
;	O
pos	int
=	O
f256_logarithm	array
[	O
f256_inverse	array
[	O
roots	array
[	O
i	int
]	O
]	O
]	O
;	O
blk	pointer
[	O
pos	int
]	O
^=	O
errorval	char
;	O
}	O
return	O
nerr	int
;	O
}	O
static	O
void	O
dump_syndrome	function
(	O
unsigned	O
char	O
*	O
s	pointer
)	O
{	O
int	O
i	int
;	O
debug	O
(	O
"Syndrome: "	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
16	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
i	int
)	O
fputc	function
(	O
'-'	O
,	O
stderr	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%02x"	pointer
,	O
s	pointer
[	O
i	int
]	O
)	O
;	O
}	O
fputc	function
(	O
'\n'	O
,	O
stderr	pointer
)	O
;	O
}	O
