static	O
int	O
opts	int
=	O
0	int
;	O
static	O
int	O
usage	function
(	O
void	O
)	O
{	O
printf	function
(	O
"\nUsage: dwgbmp [-v[0-9]] DWGFILE [BMPFILE]\n"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
static	O
int	O
opt_version	function
(	O
void	O
)	O
{	O
printf	function
(	O
"dwgbmp %s\n"	pointer
,	O
PACKAGE_VERSION	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
help	function
(	O
void	O
)	O
{	O
printf	function
(	O
"\nUsage: dwgbmp [OPTION]... DWGFILE [BMPFILE]\n"	pointer
)	O
;	O
printf	function
(	O
"Extract the DWG thumbnail image as BMP.\n"	pointer
)	O
;	O
printf	function
(	O
"Default BMPFILE: DWGFILE with .bmp extension.\n"	pointer
"\n"	pointer
)	O
;	O
printf	function
(	O
"  -v[0-9], --verbose [0-9]  verbosity\n"	pointer
)	O
;	O
printf	function
(	O
"           --help           display this help and exit\n"	pointer
)	O
;	O
printf	function
(	O
"           --version        output version information and exit\n"	pointer
"\n"	pointer
)	O
;	O
printf	function
(	O
"GNU LibreDWG online manual: "	pointer
"<https://www.gnu.org/software/libredwg/>\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
bmp_free_dwg	function
(	O
Dwg_Data	struct
*	O
dwg	pointer
)	O
{	O
if	O
(	O
(	O
dwg	pointer
->	O
header	struct
.	O
version	short
&&	O
dwg	pointer
->	O
num_objects	int
<	O
1000	int
)	O
)	O
dwg_free	function
(	O
dwg	pointer
)	O
;	O
}	O
static	O
int	O
get_bmp	function
(	O
char	O
*	O
dwgfile	pointer
,	O
char	O
*	O
bmpfile	pointer
)	O
{	O
unsigned	O
char	O
*	O
data	pointer
;	O
int	O
error	int
;	O
BITCODE_RL	int
size	char
;	O
size_t	long
retval	long
;	O
FILE	struct
*	O
fh	pointer
;	O
Dwg_Data	struct
dwg	pointer
;	O
struct	O
_BITMAP_HEADER	struct
{	O
char	O
magic	array
[	O
2	int
]	O
;	O
BITCODE_RL	int
file_size	int
;	O
BITCODE_RL	int
reserved	int
;	O
BITCODE_RL	int
offset	double
;	O
}	O
bmp_h	struct
;	O
memset	function
(	O
&	O
dwg	pointer
,	O
0	int
,	O
sizeof	O
(	O
Dwg_Data	struct
)	O
)	O
;	O
dwg	pointer
.	O
opts	int
=	O
opts	int
;	O
error	int
=	O
dwg_read_file	function
(	O
dwgfile	pointer
,	O
&	O
dwg	pointer
)	O
;	O
if	O
(	O
error	int
>=	O
DWG_ERR_CRITICAL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Unable to read file %s. ERROR 0x%x\n"	pointer
,	O
dwgfile	pointer
,	O
error	int
)	O
;	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
return	O
error	int
;	O
}	O
data	pointer
=	O
dwg_bmp	function
(	O
&	O
dwg	pointer
,	O
&	O
size	char
)	O
;	O
if	O
(	O
!	O
data	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"No thumbnail bmp image in %s\n"	pointer
,	O
dwgfile	pointer
)	O
;	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
size	char
<	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Empty thumbnail data in %s\n"	pointer
,	O
dwgfile	pointer
)	O
;	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
return	O
-	O
3	int
;	O
}	O
fh	pointer
=	O
fopen	function
(	O
bmpfile	pointer
,	O
"w"	pointer
)	O
;	O
if	O
(	O
!	O
fh	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Unable to write BMP file '%s'\n"	pointer
,	O
bmpfile	pointer
)	O
;	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
return	O
-	O
4	int
;	O
}	O
bmp_h	struct
.	O
magic	array
[	O
0	int
]	O
=	O
'B'	O
;	O
bmp_h	struct
.	O
magic	array
[	O
1	int
]	O
=	O
'M'	O
;	O
bmp_h	struct
.	O
file_size	int
=	O
14	int
+	O
size	char
;	O
bmp_h	struct
.	O
reserved	int
=	O
0	int
;	O
bmp_h	struct
.	O
offset	double
=	O
14	int
+	O
40	int
+	O
4	int
*	O
256	int
;	O
retval	long
=	O
fwrite	function
(	O
&	O
bmp_h	struct
.	O
magic	array
[	O
0	int
]	O
,	O
sizeof	O
(	O
char	O
)	O
,	O
2	int
,	O
fh	pointer
)	O
;	O
if	O
(	O
!	O
retval	long
)	O
{	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
perror	function
(	O
"writing BMP magic"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
retval	long
=	O
fwrite	function
(	O
&	O
bmp_h	struct
.	O
file_size	int
,	O
4	int
,	O
3	int
,	O
fh	pointer
)	O
;	O
if	O
(	O
!	O
retval	long
)	O
{	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
perror	function
(	O
"writing BMP file_size"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
retval	long
=	O
fwrite	function
(	O
data	pointer
,	O
sizeof	O
(	O
char	O
)	O
,	O
size	char
,	O
fh	pointer
)	O
;	O
if	O
(	O
!	O
retval	long
)	O
{	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
perror	function
(	O
"writing BMP header"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
fclose	function
(	O
fh	pointer
)	O
;	O
printf	function
(	O
"Success. Written thumbnail image to '%s'\n"	pointer
,	O
bmpfile	pointer
)	O
;	O
bmp_free_dwg	function
(	O
&	O
dwg	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
i	int
=	O
1	int
,	O
error	int
;	O
char	O
*	O
dwgfile	pointer
,	O
*	O
bmpfile	pointer
;	O
int	O
c	int
;	O
int	O
option_index	int
=	O
0	int
;	O
static	O
struct	O
option	struct
long_options	array
[	O
]	O
=	O
{	O
{	O
"verbose"	pointer
,	O
1	int
,	O
&	O
opts	int
,	O
1	int
}	O
,	O
{	O
"help"	pointer
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
{	O
"version"	pointer
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
if	O
(	O
argc	int
<	O
2	int
)	O
return	O
usage	function
(	O
)	O
;	O
while	O
(	O
(	O
c	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	array
,	O
":v::h"	pointer
,	O
long_options	array
,	O
&	O
option_index	int
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
if	O
(	O
c	int
==	O
-	O
1	int
)	O
break	O
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
':'	O
:	O
if	O
(	O
optarg	pointer
&&	O
!	O
strcmp	function
(	O
optarg	pointer
,	O
"v"	pointer
)	O
)	O
{	O
opts	int
=	O
1	int
;	O
break	O
;	O
}	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: option '-%c' requires an argument\n"	pointer
,	O
argv	array
[	O
0	int
]	O
,	O
optopt	int
)	O
;	O
break	O
;	O
case	O
0	int
:	O
if	O
(	O
!	O
strcmp	function
(	O
long_options	array
[	O
option_index	int
]	O
.	O
name	pointer
,	O
"verbose"	pointer
)	O
)	O
{	O
if	O
(	O
opts	int
<	O
0	int
||	O
opts	int
>	O
9	int
)	O
return	O
usage	function
(	O
)	O
;	O
break	O
;	O
}	O
if	O
(	O
!	O
strcmp	function
(	O
long_options	array
[	O
option_index	int
]	O
.	O
name	pointer
,	O
"version"	pointer
)	O
)	O
return	O
opt_version	function
(	O
)	O
;	O
if	O
(	O
!	O
strcmp	function
(	O
long_options	array
[	O
option_index	int
]	O
.	O
name	pointer
,	O
"help"	pointer
)	O
)	O
return	O
help	function
(	O
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
i	int
=	O
(	O
optind	int
>	O
0	int
&&	O
optind	int
<	O
argc	int
)	O
?	O
optind	int
-	O
1	int
:	O
1	int
;	O
if	O
(	O
!	O
memcmp	function
(	O
argv	array
[	O
i	int
]	O
,	O
"-v"	pointer
,	O
2	int
)	O
)	O
{	O
opts	int
=	O
argv	array
[	O
i	int
]	O
[	O
2	int
]	O
?	O
argv	array
[	O
i	int
]	O
[	O
2	int
]	O
-	O
'0'	O
:	O
1	int
;	O
}	O
if	O
(	O
opts	int
<	O
0	int
||	O
opts	int
>	O
9	int
)	O
return	O
usage	function
(	O
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
return	O
help	function
(	O
)	O
;	O
case	O
'?'	O
:	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: invalid option '-%c' ignored\n"	pointer
,	O
argv	array
[	O
0	int
]	O
,	O
optopt	int
)	O
;	O
break	O
;	O
default	O
:	O
return	O
usage	function
(	O
)	O
;	O
}	O
}	O
i	int
=	O
optind	int
;	O
if	O
(	O
i	int
>=	O
argc	int
)	O
return	O
usage	function
(	O
)	O
;	O
dwgfile	pointer
=	O
argv	array
[	O
i	int
]	O
;	O
if	O
(	O
i	int
==	O
argc	int
-	O
2	int
)	O
bmpfile	pointer
=	O
argv	array
[	O
i	int
+	O
1	int
]	O
;	O
else	O
bmpfile	pointer
=	O
suffix	function
(	O
dwgfile	pointer
,	O
"bmp"	pointer
)	O
;	O
error	int
=	O
get_bmp	function
(	O
dwgfile	pointer
,	O
bmpfile	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
argc	int
-	O
2	int
)	O
free	function
(	O
bmpfile	pointer
)	O
;	O
return	O
error	int
;	O
}	O
