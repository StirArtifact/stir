char	O
*	O
mu_tilde_expansion	function
(	O
const	O
char	O
*	O
ref	*
,	O
int	O
delim	int
,	O
const	O
char	O
*	O
homedir	*
)	O
{	O
char	O
*	O
base	*
=	O
strdup	function
(	O
ref	*
)	O
;	O
char	O
*	O
home	*
=	O
NULL	O
;	O
char	O
*	O
proto	*
=	O
NULL	O
;	O
size_t	long
proto_len	long
=	O
0	int
;	O
char	O
*	O
p	*
;	O
if	O
(	O
!	O
base	*
)	O
return	O
NULL	O
;	O
for	O
(	O
p	*
=	O
base	*
;	O
*	O
p	*
&&	O
mu_isascii	O
(	O
*	O
p	*
)	O
&&	O
mu_isalnum	function
(	O
*	O
p	*
)	O
;	O
p	*
++	O
)	O
;	O
if	O
(	O
*	O
p	*
==	O
':'	O
)	O
{	O
p	*
++	O
;	O
proto_len	*
=	O
p	*
-	O
base	*
;	O
proto	*
=	O
malloc	function
(	O
proto_len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
proto	*
)	O
return	O
NULL	O
;	O
memcpy	function
(	O
proto	*
,	O
base	*
,	O
proto_len	int
)	O
;	O
proto	*
[	O
proto_len	int
]	O
=	O
0	int
;	O
if	O
(	O
*	O
p	*
==	O
delim	*
)	O
p	*
++	O
;	O
if	O
(	O
*	O
p	*
==	O
delim	*
)	O
p	*
++	O
;	O
}	O
else	O
p	*
=	O
base	*
;	O
if	O
(	O
*	O
p	*
==	O
'~'	O
)	O
{	O
p	*
++	O
;	O
if	O
(	O
*	O
p	*
==	O
delim	*
||	O
*	O
p	*
==	O
'\0'	O
)	O
{	O
char	O
*	O
s	*
;	O
if	O
(	O
!	O
homedir	*
)	O
{	O
home	*
=	O
mu_get_homedir	function
(	O
)	O
;	O
if	O
(	O
!	O
home	*
)	O
return	O
base	*
;	O
homedir	*
=	O
home	*
;	O
}	O
s	*
=	O
calloc	function
(	O
proto_len	*
+	O
strlen	function
(	O
homedir	*
)	O
+	O
strlen	function
(	O
p	*
)	O
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
proto_len	*
)	O
strcpy	function
(	O
s	*
,	O
proto	*
)	O
;	O
else	O
s	*
[	O
0	int
]	O
=	O
0	int
;	O
strcat	function
(	O
s	*
,	O
homedir	*
)	O
;	O
strcat	function
(	O
s	*
,	O
p	*
)	O
;	O
free	function
(	O
base	*
)	O
;	O
base	*
=	O
s	*
;	O
}	O
else	O
{	O
struct	O
mu_auth_data	struct
*	O
auth	*
;	O
char	O
*	O
s	*
=	O
p	*
;	O
char	O
*	O
name	*
;	O
while	O
(	O
*	O
s	*
&&	O
*	O
s	*
!=	O
delim	*
)	O
s	*
++	O
;	O
name	*
=	O
calloc	function
(	O
s	*
-	O
p	*
+	O
1	int
,	O
1	int
)	O
;	O
memcpy	function
(	O
name	*
,	O
p	*
,	O
s	*
-	O
p	*
)	O
;	O
name	*
[	O
s	*
-	O
p	*
]	O
=	O
'\0'	O
;	O
auth	*
=	O
mu_get_auth_by_name	function
(	O
name	*
)	O
;	O
free	function
(	O
name	*
)	O
;	O
if	O
(	O
auth	*
)	O
{	O
char	O
*	O
buf	*
=	O
calloc	function
(	O
proto_len	*
+	O
strlen	function
(	O
auth	*
->	O
dir	*
)	O
+	O
strlen	function
(	O
s	*
)	O
+	O
1	int
,	O
1	int
)	O
;	O
if	O
(	O
proto_len	*
)	O
strcpy	function
(	O
buf	*
,	O
proto	*
)	O
;	O
else	O
buf	*
[	O
0	int
]	O
=	O
0	int
;	O
strcat	function
(	O
buf	*
,	O
auth	*
->	O
dir	*
)	O
;	O
strcat	function
(	O
buf	*
,	O
s	*
)	O
;	O
free	function
(	O
base	*
)	O
;	O
base	*
=	O
buf	*
;	O
mu_auth_data_free	function
(	O
auth	*
)	O
;	O
}	O
}	O
}	O
if	O
(	O
home	*
)	O
free	function
(	O
home	*
)	O
;	O
return	O
base	*
;	O
}	O