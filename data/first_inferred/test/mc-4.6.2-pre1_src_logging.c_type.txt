static	O
gboolean	int
is_logging_enabled	function
(	O
void	O
)	O
{	O
static	O
gboolean	int
logging_initialized	int
=	O
FALSE	O
;	O
static	O
gboolean	int
logging_enabled	int
=	O
FALSE	int
;	O
char	O
*	O
mc_ini	*
;	O
if	O
(	O
!	O
logging_initialized	*
)	O
{	O
mc_ini	*
=	O
g_strdup_printf	function
(	O
"%s/%s"	*
,	O
home_dir	*
,	O
PROFILE_NAME	*
)	O
;	O
logging_enabled	*
=	O
get_int	function
(	O
mc_ini	*
,	O
"development.enable_logging"	*
,	O
FALSE	O
)	O
;	O
g_free	function
(	O
mc_ini	*
)	O
;	O
logging_initialized	int
=	O
TRUE	O
;	O
}	O
return	O
logging_enabled	int
;	O
}	O
void	O
mc_log	function
(	O
const	O
char	O
*	O
fmt	*
,	O
...	O
)	O
{	O
va_list	array
args	array
;	O
FILE	struct
*	O
f	*
;	O
char	O
*	O
logfilename	*
;	O
if	O
(	O
is_logging_enabled	function
(	O
)	O
)	O
{	O
va_start	O
(	O
args	array
,	O
fmt	*
)	O
;	O
logfilename	*
=	O
g_strdup_printf	function
(	O
"%s/.mc/log"	*
,	O
home_dir	*
)	O
;	O
if	O
(	O
(	O
f	*
=	O
fopen	function
(	O
logfilename	*
,	O
"a"	*
)	O
)	O
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
vfprintf	function
(	O
f	*
,	O
fmt	*
,	O
args	array
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
f	*
)	O
;	O
}	O
g_free	function
(	O
logfilename	*
)	O
;	O
}	O
}	O