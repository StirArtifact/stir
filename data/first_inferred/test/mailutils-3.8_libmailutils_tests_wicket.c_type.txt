const	O
char	O
*	O
name	pointer
;	O
mu_stream_t	pointer
stream	pointer
;	O
void	O
match_string	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
int	O
rc	int
;	O
mu_url_t	pointer
u	pointer
,	O
url	pointer
;	O
struct	O
mu_locus_point	struct
loc	struct
;	O
if	O
(	O
(	O
rc	int
=	O
mu_url_create	function
(	O
&	O
u	pointer
,	O
str	pointer
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"mu_url_create %s ERROR: [%d] %s"	pointer
,	O
str	pointer
,	O
rc	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
return	O
;	O
}	O
MU_ASSERT	O
(	O
mu_stream_seek	function
(	O
stream	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
)	O
;	O
loc	pointer
.	O
mu_file	pointer
=	O
(	O
char	O
*	O
)	O
name	pointer
;	O
loc	pointer
.	O
mu_line	int
=	O
0	int
;	O
loc	pointer
.	O
mu_col	int
=	O
0	int
;	O
rc	int
=	O
mu_wicket_stream_match_url	function
(	O
stream	pointer
,	O
&	O
loc	pointer
,	O
u	pointer
,	O
MU_URL_PARSE_ALL	O
,	O
&	O
url	pointer
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
0	int
:	O
printf	function
(	O
"%s matches %s at %s:%d\n"	pointer
,	O
mu_url_to_string	function
(	O
u	pointer
)	O
,	O
mu_url_to_string	function
(	O
url	pointer
)	O
,	O
loc	struct
.	O
mu_file	pointer
,	O
loc	pointer
.	O
mu_line	int
)	O
;	O
mu_url_destroy	function
(	O
&	O
url	pointer
)	O
;	O
break	O
;	O
case	O
MU_ERR_NOENT	O
:	O
printf	function
(	O
"no matches for %s\n"	pointer
,	O
mu_url_to_string	function
(	O
u	pointer
)	O
)	O
;	O
break	O
;	O
default	O
:	O
mu_error	function
(	O
"mu_wicket_stream_match_url: %s"	pointer
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
mu_url_destroy	function
(	O
&	O
u	pointer
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
if	O
(	O
argc	int
<	O
2	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"usage: %s filename [url [url...]]\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
name	pointer
=	O
argv	pointer
[	O
1	int
]	O
;	O
MU_ASSERT	O
(	O
mu_file_stream_create	function
(	O
&	O
stream	pointer
,	O
name	pointer
,	O
MU_STREAM_READ	int
)	O
)	O
;	O
if	O
(	O
argc	int
>	O
2	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
2	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
match_string	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
}	O
else	O
{	O
mu_stream_t	pointer
in	pointer
;	O
char	O
*	O
buf	pointer
=	O
NULL	O
;	O
size_t	long
size	long
=	O
0	int
,	O
n	pointer
;	O
int	O
rc	int
;	O
MU_ASSERT	O
(	O
mu_stdio_stream_create	function
(	O
&	O
in	pointer
,	O
MU_STDIN_FD	int
,	O
0	int
)	O
)	O
;	O
while	O
(	O
(	O
rc	int
=	O
mu_stream_getline	function
(	O
in	pointer
,	O
&	O
buf	pointer
,	O
&	O
size	long
,	O
&	O
n	pointer
)	O
)	O
==	O
0	int
&&	O
n	pointer
>	O
0	int
)	O
match_string	function
(	O
mu_str_stripws	function
(	O
buf	pointer
)	O
)	O
;	O
free	function
(	O
buf	pointer
)	O
;	O
mu_stream_destroy	function
(	O
&	O
in	pointer
)	O
;	O
}	O
mu_stream_destroy	function
(	O
&	O
stream	pointer
)	O
;	O
return	O
0	int
;	O
}	O