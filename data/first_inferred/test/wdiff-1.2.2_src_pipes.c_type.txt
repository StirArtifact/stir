static	O
int	O
openpipe	function
(	O
int	O
dir	int
,	O
char	O
*	O
progname	*
,	O
va_list	array
ap	*
)	O
{	O
int	O
fds	*
[	O
2	int
]	O
;	O
char	O
*	O
args	array
[	O
100	int
]	O
;	O
int	O
argno	int
=	O
0	int
;	O
args	array
[	O
argno	int
++	O
]	O
=	O
progname	*
;	O
while	O
(	O
(	O
args	array
[	O
argno	int
++	O
]	O
=	O
va_arg	O
(	O
ap	*
,	O
char	O
*	O
)	O
)	O
!=	O
NULL	O
)	O
;	O
if	O
(	O
pipe	function
(	O
fds	*
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
switch	O
(	O
fork	function
(	O
)	O
)	O
{	O
case	O
0	int
:	O
close	*
(	O
fds	*
[	O
1	int
-	O
dir	int
]	O
)	O
;	O
if	O
(	O
dup2	function
(	O
fds	*
[	O
dir	int
]	O
,	O
dir	*
)	O
==	O
-	O
1	int
)	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"error redirecting stream"	*
)	O
)	O
;	O
_exit	function
(	O
2	int
)	O
;	O
}	O
execvp	function
(	O
args	array
[	O
0	int
]	O
,	O
args	array
)	O
;	O
error	function
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"failed to execute %s"	*
)	O
,	O
progname	*
)	O
;	O
_exit	function
(	O
2	int
)	O
;	O
case	O
-	O
1	int
:	O
return	O
0	int
;	O
default	O
:	O
close	function
(	O
fds	*
[	O
dir	int
]	O
)	O
;	O
return	O
fds	*
[	O
1	int
-	O
dir	int
]	O
;	O
}	O
}	O
FILE	struct
*	O
readpipe	function
(	O
char	O
*	O
progname	*
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
int	O
fd	int
;	O
va_start	O
(	O
ap	array
,	O
progname	*
)	O
;	O
fd	int
=	O
openpipe	function
(	O
1	int
,	O
progname	*
,	O
ap	*
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
fdopen	function
(	O
fd	int
,	O
"r"	*
)	O
;	O
}	O
FILE	struct
*	O
writepipe	function
(	O
char	O
*	O
progname	*
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
int	O
fd	int
;	O
va_start	O
(	O
ap	array
,	O
progname	*
)	O
;	O
fd	int
=	O
openpipe	function
(	O
0	int
,	O
progname	*
,	O
ap	*
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
fdopen	function
(	O
fd	int
,	O
"w"	*
)	O
;	O
}	O