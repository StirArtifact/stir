static	O
const	O
int	O
fig_horizontal_alignment_style	array
[	O
PL_NUM_HORIZ_JUST_TYPES	int
]	O
=	O
{	O
FIG_ALIGN_LEFT	int
,	O
FIG_ALIGN_CENTER	int
,	O
FIG_ALIGN_RIGHT	int
}	O
;	O
double	O
_pl_f_paint_text_string	function
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	*
)	O
const	O
unsigned	O
char	O
*	O
s	*
,	O
int	O
h_just	int
,	O
int	O
v_just	int
)	O
{	O
int	O
len	int
,	O
master_font_index	int
;	O
unsigned	O
char	O
*	O
ptr	*
,	O
*	O
t	*
;	O
double	O
theta	double
,	O
costheta	int
,	O
sintheta	int
;	O
double	O
label_width	double
,	O
label_ascent	int
;	O
double	O
initial_x	double
,	O
initial_y	int
;	O
double	O
horizontal_x	double
,	O
horizontal_y	int
,	O
vertical_x	double
,	O
vertical_y	int
;	O
double	O
horizontal_fig_length	double
,	O
vertical_fig_length	int
;	O
double	O
horizontal_fig_x	double
,	O
vertical_fig_x	int
;	O
double	O
horizontal_fig_y	double
,	O
vertical_fig_y	int
;	O
double	O
angle_device	double
;	O
if	O
(	O
_plotter	*
->	O
drawstate	*
->	O
font_type	int
!=	O
PL_F_POSTSCRIPT	int
)	O
return	O
0.0	int
;	O
if	O
(	O
v_just	int
!=	O
PL_JUST_BASE	int
)	O
return	O
0.0	int
;	O
if	O
(	O
*	O
s	*
==	O
(	O
unsigned	O
char	O
)	O
'\0'	O
)	O
return	O
0.0	int
;	O
if	O
(	O
_plotter	*
->	O
drawstate	*
->	O
fig_font_point_size	int
==	O
0	int
)	O
return	O
0.0	int
;	O
theta	double
=	O
M_PI	int
*	O
_plotter	*
->	O
drawstate	*
->	O
text_rotation	double
/	O
180.0	int
;	O
sintheta	int
=	O
sin	function
(	O
theta	double
)	O
;	O
costheta	double
=	O
cos	function
(	O
theta	double
)	O
;	O
master_font_index	int
=	O
(	O
_pl_g_ps_typeface_info	array
[	O
_plotter	*
->	O
drawstate	*
->	O
typeface_index	int
]	O
.	O
fonts	int
)	O
[	O
_plotter	*
->	O
drawstate	*
->	O
font_index	int
]	O
;	O
label_width	int
=	O
_plotter	*
->	O
get_text_width	*
(	O
R___	O
(	O
_plotter	*
)	O
s	*
)	O
;	O
label_ascent	double
=	O
_plotter	*
->	O
drawstate	*
->	O
true_font_size	double
*	O
(	O
_pl_g_ps_font_info	array
[	O
master_font_index	int
]	O
)	O
.	O
font_ascent	double
/	O
1000.0	int
;	O
horizontal_x	double
=	O
costheta	struct
*	O
label_width	*
;	O
horizontal_y	double
=	O
sintheta	struct
*	O
label_width	*
;	O
vertical_x	double
=	O
-	O
sintheta	double
*	O
label_ascent	double
;	O
vertical_y	int
=	O
costheta	double
*	O
label_ascent	*
;	O
horizontal_fig_x	double
=	O
XDV	O
(	O
horizontal_x	int
,	O
horizontal_y	int
)	O
;	O
horizontal_fig_y	double
=	O
YDV	O
(	O
horizontal_x	int
,	O
horizontal_y	int
)	O
;	O
horizontal_fig_length	double
=	O
sqrt	function
(	O
horizontal_fig_x	struct
*	O
horizontal_fig_x	double
+	O
horizontal_fig_y	struct
*	O
horizontal_fig_y	*
)	O
;	O
angle_device	double
=	O
-	O
_xatan2	function
(	O
horizontal_fig_y	int
,	O
horizontal_fig_x	int
)	O
;	O
if	O
(	O
angle_device	double
==	O
0.0	int
)	O
angle_device	double
=	O
0.0	int
;	O
if	O
(	O
angle_device	double
!=	O
0.0	int
&&	O
strcmp	function
(	O
(	O
const	O
char	O
*	O
)	O
s	*
,	O
" "	*
)	O
==	O
0	int
)	O
return	O
_plotter	*
->	O
get_text_width	*
(	O
R___	O
(	O
_plotter	*
)	O
s	*
)	O
;	O
vertical_fig_x	double
=	O
XDV	O
(	O
vertical_x	int
,	O
vertical_y	int
)	O
;	O
vertical_fig_y	double
=	O
YDV	O
(	O
vertical_x	int
,	O
vertical_y	int
)	O
;	O
vertical_fig_length	double
=	O
sqrt	function
(	O
vertical_fig_x	O
*	O
vertical_fig_x	double
+	O
vertical_fig_y	struct
*	O
vertical_fig_y	*
)	O
;	O
initial_x	double
=	O
XD	O
(	O
(	O
_plotter	*
->	O
drawstate	*
->	O
pos	double
)	O
.	O
x	double
,	O
(	O
_plotter	*
->	O
drawstate	*
->	O
pos	double
)	O
.	O
y	double
)	O
;	O
initial_y	double
=	O
YD	O
(	O
(	O
_plotter	*
->	O
drawstate	*
->	O
pos	double
)	O
.	O
x	double
,	O
(	O
_plotter	*
->	O
drawstate	*
->	O
pos	double
)	O
.	O
y	double
)	O
;	O
_pl_f_set_pen_color	function
(	O
S___	O
(	O
_plotter	*
)	O
)	O
;	O
len	int
=	O
strlen	function
(	O
(	O
char	O
*	O
)	O
s	*
)	O
;	O
ptr	*
=	O
(	O
unsigned	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
(	O
4	int
*	O
len	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
)	O
)	O
;	O
t	*
=	O
ptr	*
;	O
while	O
(	O
*	O
s	*
)	O
{	O
switch	O
(	O
*	O
s	*
)	O
{	O
case	O
'\\'	O
:	O
*	O
ptr	*
++	O
=	O
(	O
unsigned	O
char	O
)	O
'\\'	O
;	O
*	O
ptr	*
++	O
=	O
*	O
s	*
++	O
;	O
break	O
;	O
default	O
:	O
if	O
GOOD_PRINTABLE_ASCII	function
(	O
*	O
s	*
)	O
*	O
ptr	*
++	O
=	O
*	O
s	*
++	O
;	O
else	O
{	O
sprintf	function
(	O
(	O
char	O
*	O
)	O
ptr	*
,	O
"\\%03o"	*
,	O
(	O
unsigned	O
int	O
)	O
*	O
s	*
)	O
;	O
ptr	*
+=	O
4	int
;	O
s	*
++	O
;	O
}	O
break	O
;	O
}	O
}	O
*	O
ptr	*
=	O
(	O
unsigned	O
char	O
)	O
'\0'	O
;	O
if	O
(	O
_plotter	*
->	O
fig_drawing_depth	int
>	O
0	int
)	O
(	O
_plotter	*
->	O
fig_drawing_depth	int
)	O
--	O
;	O
sprintf	function
(	O
_plotter	*
->	O
data	*
->	O
page	*
->	O
point	*
,	O
"#TEXT\n%d %d %d %d %d %d %.3f %.3f %d %.3f %.3f %d %d %s\\001\n"	*
,	O
4	int
,	O
fig_horizontal_alignment_style	array
[	O
h_just	int
]	O
,	O
_plotter	*
->	O
drawstate	*
->	O
fig_fgcolor	int
,	O
_plotter	*
->	O
fig_drawing_depth	int
,	O
0	int
,	O
_pl_g_ps_font_info	array
[	O
master_font_index	int
]	O
.	O
fig_id	*
,	O
(	O
double	O
)	O
_plotter	*
->	O
drawstate	*
->	O
fig_font_point_size	int
,	O
angle_device	int
,	O
FONT_TYPE_PS	int
,	O
vertical_fig_length	int
,	O
horizontal_fig_length	int
,	O
IROUND	O
(	O
initial_x	int
)	O
,	O
IROUND	O
(	O
initial_y	int
)	O
,	O
t	double
)	O
;	O
free	function
(	O
t	int
)	O
;	O
_update_buffer	function
(	O
_plotter	*
->	O
data	*
->	O
page	*
)	O
;	O
return	O
label_width	*
;	O
}	O