struct	O
hashtab	struct
*	O
dev_table	pointer
=	O
NULL	O
;	O
struct	O
dev_data	struct
{	O
char	O
*	O
name	pointer
;	O
}	O
;	O
static	O
void	O
setup_pts_devices	function
(	O
)	O
{	O
struct	O
utsname	struct
uts	pointer
;	O
struct	O
dev_data	struct
dd	pointer
;	O
int	O
i	int
;	O
struct	O
pts_params	struct
*	O
pts_ent	pointer
,	O
pts_table	array
[	O
]	O
=	O
{	O
{	O
"Linux"	pointer
,	O
136	int
,	O
2048	int
,	O
256	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
if	O
(	O
uname	function
(	O
&	O
uts	struct
)	O
)	O
{	O
return	O
;	O
}	O
for	O
(	O
pts_ent	int
=	O
&	O
(	O
pts_table	array
[	O
0	int
]	O
)	O
;	O
pts_ent	pointer
!=	O
NULL	O
;	O
++	O
pts_ent	int
)	O
{	O
if	O
(	O
!	O
strcmp	function
(	O
uts	struct
.	O
sysname	pointer
,	O
pts_ent	pointer
->	O
utsname	pointer
)	O
)	O
break	O
;	O
}	O
if	O
(	O
pts_ent	pointer
==	O
NULL	O
)	O
return	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
pts_ent	pointer
->	O
max	int
;	O
++	O
i	int
)	O
{	O
long	O
dev_num	long
;	O
struct	O
hashtab_elem	struct
*	O
he	pointer
;	O
int	O
major	int
,	O
minor	int
;	O
major	int
=	O
pts_ent	pointer
->	O
base	pointer
+	O
(	O
i	long
/	O
pts_ent	pointer
->	O
mod	int
)	O
;	O
minor	int
=	O
i	int
%	O
pts_ent	pointer
->	O
mod	int
;	O
dev_num	int
=	O
(	O
(	O
major	int
<<	O
8	int
)	O
+	O
minor	int
)	O
;	O
dd	struct
.	O
name	pointer
=	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
(	O
strlen	function
(	O
"pts/xxxx"	pointer
)	O
+	O
1	int
)	O
)	O
;	O
sprintf	function
(	O
dd	pointer
.	O
name	pointer
,	O
"pts/%d"	pointer
,	O
i	long
)	O
;	O
he	pointer
=	O
hashtab_create	function
(	O
dev_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
dev_num	pointer
,	O
sizeof	O
(	O
dev_num	pointer
)	O
)	O
;	O
hashtab_set_value	function
(	O
he	pointer
,	O
&	O
dd	pointer
,	O
sizeof	O
(	O
dd	pointer
)	O
)	O
;	O
}	O
}	O
static	O
void	O
setup_devices	function
(	O
char	O
*	O
dirname	pointer
)	O
{	O
DIR	struct
*	O
dirp	pointer
;	O
struct	O
dirent	struct
*	O
dp	pointer
;	O
struct	O
stat	struct
sp	pointer
;	O
extern	O
int	O
debugging_enabled	int
;	O
if	O
(	O
debugging_enabled	int
)	O
(	O
void	O
)	O
fprintf	function
(	O
stddebug	O
,	O
"device     devnum\n-----------------\n"	pointer
)	O
;	O
if	O
(	O
(	O
dirp	pointer
=	O
opendir	function
(	O
dirname	pointer
)	O
)	O
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
!	O
strcmp	function
(	O
dirname	pointer
,	O
"/dev/pts"	pointer
)	O
)	O
{	O
closedir	function
(	O
dirp	pointer
)	O
;	O
setup_pts_devices	function
(	O
)	O
;	O
return	O
;	O
}	O
for	O
(	O
dp	pointer
=	O
readdir	function
(	O
dirp	pointer
)	O
;	O
dp	pointer
!=	O
NULL	O
;	O
dp	pointer
=	O
readdir	function
(	O
dirp	pointer
)	O
)	O
{	O
char	O
*	O
fullname	pointer
=	O
(	O
char	O
*	O
)	O
alloca	function
(	O
(	O
strlen	function
(	O
dirname	pointer
)	O
+	O
NAMLEN	function
(	O
dp	pointer
)	O
+	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
)	O
)	O
;	O
(	O
void	O
)	O
sprintf	function
(	O
fullname	pointer
,	O
"%s/%s"	pointer
,	O
dirname	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
;	O
if	O
(	O
stat	struct
(	O
fullname	pointer
,	O
&	O
sp	pointer
)	O
)	O
continue	O
;	O
if	O
(	O
(	O
sp	struct
.	O
st_mode	int
&	O
S_IFMT	O
)	O
!=	O
S_IFCHR	O
)	O
continue	O
;	O
if	O
(	O
debugging_enabled	int
)	O
fprintf	function
(	O
stddebug	O
,	O
"%-8.8d %s\n"	pointer
,	O
(	O
int	O
)	O
sp	struct
.	O
st_rdev	long
,	O
dp	pointer
->	O
d_name	array
)	O
;	O
{	O
struct	O
hashtab_elem	struct
*	O
he	pointer
;	O
struct	O
dev_data	struct
dd	pointer
;	O
long	O
dev_num	long
;	O
dev_num	pointer
=	O
sp	pointer
.	O
st_rdev	pointer
;	O
dd	struct
.	O
name	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
(	O
NAMLEN	function
(	O
dp	pointer
)	O
+	O
1	int
)	O
)	O
;	O
(	O
void	O
)	O
strcpy	function
(	O
dd	pointer
.	O
name	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
;	O
he	pointer
=	O
hashtab_create	function
(	O
dev_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
dev_num	O
,	O
sizeof	O
(	O
dev_num	pointer
)	O
)	O
;	O
hashtab_set_value	function
(	O
he	pointer
,	O
&	O
dd	pointer
,	O
sizeof	O
(	O
dd	pointer
)	O
)	O
;	O
}	O
}	O
(	O
void	O
)	O
closedir	function
(	O
dirp	pointer
)	O
;	O
}	O
char	O
*	O
dev_gnu_name	function
(	O
long	O
dev_num	long
)	O
{	O
struct	O
hashtab_elem	struct
*	O
he	pointer
;	O
static	O
char	O
devstr	array
[	O
20	int
]	O
;	O
if	O
(	O
dev_num	int
==	O
NULLDEV	pointer
)	O
return	O
"__"	pointer
;	O
if	O
(	O
dev_table	pointer
==	O
NULL	O
)	O
{	O
dev_table	pointer
=	O
hashtab_init	function
(	O
sizeof	O
(	O
long	O
)	O
)	O
;	O
setup_devices	function
(	O
"/dev"	pointer
)	O
;	O
setup_devices	function
(	O
"/dev/pty"	pointer
)	O
;	O
setup_devices	function
(	O
"/dev/ptym"	pointer
)	O
;	O
setup_devices	function
(	O
"/dev/pts"	pointer
)	O
;	O
}	O
he	pointer
=	O
hashtab_find	function
(	O
dev_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
dev_num	O
,	O
(	O
unsigned	O
int	O
)	O
sizeof	O
(	O
dev_num	struct
)	O
)	O
;	O
if	O
(	O
he	pointer
!=	O
NULL	O
)	O
{	O
struct	O
dev_data	struct
*	O
dd	pointer
=	O
hashtab_get_value	function
(	O
he	pointer
)	O
;	O
return	O
dd	pointer
->	O
name	pointer
;	O
}	O
sprintf	function
(	O
devstr	pointer
,	O
"[%d,%d]"	pointer
,	O
(	O
int	O
)	O
(	O
(	O
dev_num	int
&	O
0xFF00	int
)	O
>>	O
8	int
)	O
,	O
(	O
int	O
)	O
(	O
dev_num	int
&	O
0x00FF	int
)	O
)	O
;	O
return	O
devstr	int
;	O
}	O