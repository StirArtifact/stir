static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: xa_db.c,v 1.3 2000/06/28 16:47:03 loic Exp $"	*
;	O
static	O
int	O
__xa_close	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__xa_cursor	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBC	struct
*	O
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__xa_del	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBT	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__xa_get	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBT	struct
*	O
,	O
DBT	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__xa_put	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBT	struct
*	O
,	O
DBT	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
typedef	O
struct	O
__xa_methods	struct
{	O
int	O
(	O
*	O
close	*
)	O
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
int	O
(	O
*	O
cursor	*
)	O
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBC	struct
*	O
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
int	O
(	O
*	O
del	*
)	O
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBT	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
int	O
(	O
*	O
get	*
)	O
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBT	struct
*	O
,	O
DBT	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
int	O
(	O
*	O
put	*
)	O
__P	O
(	O
(	O
DB	struct
*	O
,	O
DB_TXN	struct
*	O
,	O
DBT	struct
*	O
,	O
DBT	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
}	O
XA_METHODS	*
;	O
int	O
CDB___db_xa_create	function
(	O
dbp	*
)	O
DB	struct
*	O
dbp	*
;	O
{	O
XA_METHODS	struct
*	O
xam	*
;	O
int	O
ret	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_calloc	function
(	O
dbp	*
->	O
dbenv	*
,	O
1	int
,	O
sizeof	O
(	O
XA_METHODS	*
)	O
,	O
&	O
xam	*
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
dbp	*
->	O
xa_internal	*
=	O
xam	*
;	O
xam	*
->	O
close	*
=	O
dbp	*
->	O
close	*
;	O
xam	*
->	O
cursor	double
=	O
dbp	*
->	O
cursor	*
;	O
xam	*
->	O
del	int
=	O
dbp	*
->	O
del	*
;	O
xam	*
->	O
get	*
=	O
dbp	*
->	O
get	*
;	O
xam	*
->	O
put	int
=	O
dbp	*
->	O
put	int
;	O
dbp	*
->	O
close	*
=	O
__xa_close	int
;	O
dbp	*
->	O
cursor	*
=	O
__xa_cursor	int
;	O
dbp	*
->	O
del	*
=	O
__xa_del	*
;	O
dbp	*
->	O
get	*
=	O
__xa_get	int
;	O
dbp	*
->	O
put	int
=	O
__xa_put	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__xa_cursor	function
(	O
dbp	*
,	O
txn	*
,	O
dbcp	*
,	O
flags	int
)	O
DB	struct
*	O
dbp	*
;	O
DB_TXN	struct
*	O
txn	*
;	O
DBC	struct
*	O
*	O
dbcp	*
;	O
u_int32_t	int
flags	int
;	O
{	O
DB_TXN	struct
*	O
t	*
;	O
t	*
=	O
txn	*
!=	O
NULL	O
&&	O
txn	*
==	O
dbp	*
->	O
open_txn	*
?	O
txn	*
:	O
dbp	*
->	O
dbenv	*
->	O
xa_txn	*
;	O
if	O
(	O
t	*
->	O
txnid	int
==	O
TXN_INVALID	int
)	O
t	*
=	O
NULL	O
;	O
return	O
(	O
(	O
(	O
XA_METHODS	struct
*	O
)	O
dbp	*
->	O
xa_internal	*
)	O
->	O
cursor	*
(	O
dbp	*
,	O
t	*
,	O
dbcp	*
,	O
flags	int
)	O
)	O
;	O
}	O
static	O
int	O
__xa_del	function
(	O
dbp	*
,	O
txn	*
,	O
key	*
,	O
flags	int
)	O
DB	struct
*	O
dbp	*
;	O
DB_TXN	struct
*	O
txn	*
;	O
DBT	struct
*	O
key	*
;	O
u_int32_t	int
flags	int
;	O
{	O
DB_TXN	struct
*	O
t	*
;	O
t	*
=	O
txn	*
!=	O
NULL	O
&&	O
txn	*
==	O
dbp	*
->	O
open_txn	*
?	O
txn	*
:	O
dbp	*
->	O
dbenv	*
->	O
xa_txn	*
;	O
if	O
(	O
t	*
->	O
txnid	int
==	O
TXN_INVALID	int
)	O
t	*
=	O
NULL	O
;	O
return	O
(	O
(	O
(	O
XA_METHODS	struct
*	O
)	O
dbp	*
->	O
xa_internal	*
)	O
->	O
del	*
(	O
dbp	*
,	O
t	*
,	O
key	*
,	O
flags	int
)	O
)	O
;	O
}	O
static	O
int	O
__xa_close	function
(	O
dbp	*
,	O
flags	int
)	O
DB	struct
*	O
dbp	*
;	O
u_int32_t	int
flags	int
;	O
{	O
int	O
(	O
*	O
real_close	*
)	O
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
real_close	*
=	O
(	O
(	O
XA_METHODS	struct
*	O
)	O
dbp	*
->	O
xa_internal	*
)	O
->	O
close	*
;	O
CDB___os_free	function
(	O
dbp	*
->	O
xa_internal	*
,	O
sizeof	O
(	O
XA_METHODS	*
)	O
)	O
;	O
dbp	*
->	O
xa_internal	*
=	O
NULL	O
;	O
return	O
(	O
real_close	function
(	O
dbp	*
,	O
flags	int
)	O
)	O
;	O
}	O
static	O
int	O
__xa_get	function
(	O
dbp	*
,	O
txn	*
,	O
key	*
,	O
data	*
,	O
flags	int
)	O
DB	struct
*	O
dbp	*
;	O
DB_TXN	struct
*	O
txn	*
;	O
DBT	struct
*	O
key	*
,	O
*	O
data	*
;	O
u_int32_t	int
flags	int
;	O
{	O
DB_TXN	struct
*	O
t	*
;	O
t	*
=	O
txn	*
!=	O
NULL	O
&&	O
txn	*
==	O
dbp	*
->	O
open_txn	*
?	O
txn	*
:	O
dbp	*
->	O
dbenv	*
->	O
xa_txn	*
;	O
if	O
(	O
t	*
->	O
txnid	int
==	O
TXN_INVALID	int
)	O
t	*
=	O
NULL	O
;	O
return	O
(	O
(	O
(	O
XA_METHODS	struct
*	O
)	O
dbp	*
->	O
xa_internal	*
)	O
->	O
get	*
(	O
dbp	*
,	O
t	int
,	O
key	*
,	O
data	*
,	O
flags	int
)	O
)	O
;	O
}	O
static	O
int	O
__xa_put	function
(	O
dbp	*
,	O
txn	*
,	O
key	*
,	O
data	*
,	O
flags	int
)	O
DB	struct
*	O
dbp	*
;	O
DB_TXN	struct
*	O
txn	*
;	O
DBT	struct
*	O
key	*
,	O
*	O
data	*
;	O
u_int32_t	int
flags	int
;	O
{	O
DB_TXN	struct
*	O
t	*
;	O
t	*
=	O
txn	*
!=	O
NULL	O
&&	O
txn	*
==	O
dbp	*
->	O
open_txn	*
?	O
txn	*
:	O
dbp	*
->	O
dbenv	*
->	O
xa_txn	*
;	O
if	O
(	O
t	*
->	O
txnid	int
==	O
TXN_INVALID	int
)	O
t	*
=	O
NULL	O
;	O
return	O
(	O
(	O
(	O
XA_METHODS	struct
*	O
)	O
dbp	*
->	O
xa_internal	*
)	O
->	O
put	function
(	O
dbp	*
,	O
t	*
,	O
key	*
,	O
data	*
,	O
flags	int
)	O
)	O
;	O
}	O