static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: hash_method.c,v 1.3 2000/06/28 16:47:01 loic Exp $"	*
;	O
static	O
int	O
__ham_set_h_ffactor	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__ham_set_h_hash	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
(	O
*	O
)	O
(	O
const	O
void	O
*	O
,	O
u_int32_t	int
)	O
)	O
)	O
;	O
static	O
int	O
__ham_set_h_nelem	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
int	O
CDB___ham_db_create	function
(	O
dbp	*
)	O
DB	struct
*	O
dbp	*
;	O
{	O
HASH	struct
*	O
hashp	*
;	O
int	O
ret	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_malloc	function
(	O
dbp	*
->	O
dbenv	*
,	O
sizeof	O
(	O
HASH	*
)	O
,	O
NULL	O
,	O
&	O
dbp	*
->	O
h_internal	*
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
hashp	*
=	O
dbp	*
->	O
h_internal	*
;	O
hashp	*
->	O
h_nelem	int
=	O
0	int
;	O
hashp	*
->	O
h_ffactor	int
=	O
0	int
;	O
hashp	*
->	O
h_hash	*
=	O
NULL	O
;	O
dbp	*
->	O
set_h_ffactor	*
=	O
__ham_set_h_ffactor	*
;	O
dbp	*
->	O
set_h_hash	*
=	O
__ham_set_h_hash	*
;	O
dbp	*
->	O
set_h_nelem	*
=	O
__ham_set_h_nelem	*
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___ham_db_close	function
(	O
dbp	*
)	O
DB	struct
*	O
dbp	*
;	O
{	O
if	O
(	O
dbp	*
->	O
h_internal	*
==	O
NULL	O
)	O
return	O
(	O
0	int
)	O
;	O
CDB___os_free	function
(	O
dbp	*
->	O
h_internal	*
,	O
sizeof	O
(	O
HASH	*
)	O
)	O
;	O
dbp	*
->	O
h_internal	*
=	O
NULL	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ham_set_h_ffactor	function
(	O
dbp	*
,	O
h_ffactor	int
)	O
DB	struct
*	O
dbp	*
;	O
u_int32_t	int
h_ffactor	int
;	O
{	O
HASH	struct
*	O
hashp	*
;	O
DB_ILLEGAL_AFTER_OPEN	function
(	O
dbp	*
,	O
"set_h_ffactor"	*
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	*
,	O
DB_OK_HASH	*
)	O
;	O
hashp	*
=	O
dbp	*
->	O
h_internal	*
;	O
hashp	*
->	O
h_ffactor	int
=	O
h_ffactor	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ham_set_h_hash	function
(	O
dbp	*
,	O
func	*
)	O
DB	struct
*	O
dbp	*
;	O
u_int32_t	int
(	O
*	O
func	*
)	O
__P	O
(	O
(	O
const	O
void	O
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
{	O
HASH	struct
*	O
hashp	*
;	O
DB_ILLEGAL_AFTER_OPEN	function
(	O
dbp	*
,	O
"set_h_hash"	*
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	*
,	O
DB_OK_HASH	*
)	O
;	O
hashp	*
=	O
dbp	*
->	O
h_internal	*
;	O
hashp	*
->	O
h_hash	*
=	O
func	*
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ham_set_h_nelem	function
(	O
dbp	*
,	O
h_nelem	int
)	O
DB	struct
*	O
dbp	*
;	O
u_int32_t	int
h_nelem	int
;	O
{	O
HASH	struct
*	O
hashp	*
;	O
DB_ILLEGAL_AFTER_OPEN	function
(	O
dbp	*
,	O
"set_h_nelem"	*
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	*
,	O
DB_OK_HASH	*
)	O
;	O
hashp	*
=	O
dbp	*
->	O
h_internal	*
;	O
hashp	*
->	O
h_nelem	int
=	O
h_nelem	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O