static	O
void	O
__gmpz_cfdiv_q_2exp	function
(	O
REGPARM_3_1	O
(	O
mpz_ptr	*
,	O
mpz_srcptr	*
,	O
mp_bitcnt_t	long
,	O
int	O
)	O
)	O
REGPARM_ATTR	O
(	O
1	int
)	O
;	O
REGPARM_ATTR	O
(	O
1	int
)	O
static	O
void	O
cfdiv_q_2exp	O
(	O
mpz_ptr	*
w	*
,	O
mpz_srcptr	*
u	array
,	O
mp_bitcnt_t	long
cnt	int
,	O
int	O
dir	int
)	O
{	O
mp_size_t	long
wsize	long
,	O
usize	*
,	O
abs_usize	int
,	O
limb_cnt	long
,	O
i	long
;	O
mp_srcptr	*
up	*
;	O
mp_ptr	*
wp	*
;	O
mp_limb_t	long
round	function
,	O
rmask	long
;	O
usize	*
=	O
SIZ	O
(	O
u	array
)	O
;	O
abs_usize	long
=	O
ABS	O
(	O
usize	*
)	O
;	O
limb_cnt	long
=	O
cnt	long
/	O
GMP_NUMB_BITS	O
;	O
wsize	long
=	O
abs_usize	long
-	O
limb_cnt	long
;	O
if	O
(	O
wsize	long
<=	O
0	int
)	O
{	O
PTR	O
(	O
w	*
)	O
[	O
0	int
]	O
=	O
1	int
;	O
SIZ	O
(	O
w	*
)	O
=	O
(	O
usize	*
==	O
0	int
||	O
(	O
usize	*
^	O
dir	long
)	O
<	O
0	int
?	O
0	int
:	O
dir	long
)	O
;	O
return	O
;	O
}	O
MPZ_REALLOC	O
(	O
w	*
,	O
wsize	long
+	O
1	int
)	O
;	O
up	*
=	O
PTR	O
(	O
u	array
)	O
;	O
round	function
=	O
0	int
;	O
rmask	long
=	O
(	O
(	O
usize	*
^	O
dir	int
)	O
>=	O
0	int
?	O
MP_LIMB_T_MAX	O
:	O
0	int
)	O
;	O
if	O
(	O
rmask	long
!=	O
0	int
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
limb_cnt	long
&&	O
round	function
==	O
0	int
;	O
i	long
++	O
)	O
round	function
=	O
up	*
[	O
i	long
]	O
;	O
wp	*
=	O
PTR	O
(	O
w	*
)	O
;	O
cnt	long
%=	O
GMP_NUMB_BITS	O
;	O
if	O
(	O
cnt	int
!=	O
0	int
)	O
{	O
round	function
|=	O
rmask	int
&	O
mpn_rshift	O
(	O
wp	*
,	O
up	*
+	O
limb_cnt	long
,	O
wsize	long
,	O
cnt	int
)	O
;	O
wsize	long
-=	O
(	O
wp	*
[	O
wsize	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
}	O
else	O
MPN_COPY_INCR	O
(	O
wp	*
,	O
up	*
+	O
limb_cnt	long
,	O
wsize	long
)	O
;	O
if	O
(	O
round	function
!=	O
0	int
)	O
{	O
if	O
(	O
wsize	long
!=	O
0	int
)	O
{	O
mp_limb_t	long
cy	long
;	O
cy	long
=	O
mpn_add_1	O
(	O
wp	*
,	O
wp	*
,	O
wsize	long
,	O
CNST_LIMB	O
(	O
1	int
)	O
)	O
;	O
wp	*
[	O
wsize	int
]	O
=	O
cy	long
;	O
wsize	long
+=	O
cy	long
;	O
}	O
else	O
{	O
wp	*
[	O
0	int
]	O
=	O
1	int
;	O
wsize	long
=	O
1	int
;	O
}	O
}	O
SIZ	O
(	O
w	*
)	O
=	O
(	O
usize	*
>=	O
0	int
?	O
wsize	int
:	O
-	O
wsize	long
)	O
;	O
}	O
void	O
mpz_cdiv_q_2exp	O
(	O
mpz_ptr	*
w	*
,	O
mpz_srcptr	*
u	array
,	O
mp_bitcnt_t	long
cnt	long
)	O
{	O
cfdiv_q_2exp	function
(	O
w	*
,	O
u	*
,	O
cnt	int
,	O
1	int
)	O
;	O
}	O
void	O
mpz_fdiv_q_2exp	O
(	O
mpz_ptr	*
w	*
,	O
mpz_srcptr	*
u	array
,	O
mp_bitcnt_t	long
cnt	long
)	O
{	O
cfdiv_q_2exp	function
(	O
w	*
,	O
u	*
,	O
cnt	int
,	O
-	O
1	int
)	O
;	O
}	O