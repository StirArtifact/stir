int	O
mpz_set_str	O
(	O
mpz_ptr	*
x	*
,	O
const	O
char	O
*	O
str	*
,	O
int	O
base	int
)	O
{	O
size_t	long
str_size	long
;	O
char	O
*	O
s	*
,	O
*	O
begs	*
;	O
size_t	long
i	long
;	O
mp_size_t	long
xsize	long
;	O
int	O
c	int
;	O
int	O
negative	int
;	O
const	O
unsigned	O
char	O
*	O
digit_value	*
;	O
TMP_DECL	O
;	O
digit_value	*
=	O
digit_value_tab	int
;	O
if	O
(	O
base	int
>	O
36	int
)	O
{	O
digit_value	int
+=	O
224	int
;	O
if	O
(	O
base	int
>	O
62	int
)	O
return	O
-	O
1	int
;	O
}	O
do	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
while	O
(	O
isspace	function
(	O
c	int
)	O
)	O
;	O
negative	int
=	O
0	int
;	O
if	O
(	O
c	int
==	O
'-'	O
)	O
{	O
negative	int
=	O
1	int
;	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
}	O
if	O
(	O
digit_value	array
[	O
c	int
]	O
>=	O
(	O
base	int
==	O
0	int
?	O
10	int
:	O
base	int
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
base	int
==	O
0	int
)	O
{	O
base	int
=	O
10	int
;	O
if	O
(	O
c	int
==	O
'0'	O
)	O
{	O
base	int
=	O
8	int
;	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
if	O
(	O
c	int
==	O
'x'	O
||	O
c	int
==	O
'X'	O
)	O
{	O
base	int
=	O
16	int
;	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
}	O
else	O
if	O
(	O
c	int
==	O
'b'	O
||	O
c	int
==	O
'B'	O
)	O
{	O
base	int
=	O
2	int
;	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
}	O
}	O
}	O
while	O
(	O
c	int
==	O
'0'	O
||	O
isspace	function
(	O
c	int
)	O
)	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
if	O
(	O
c	int
==	O
0	int
)	O
{	O
SIZ	O
(	O
x	*
)	O
=	O
0	int
;	O
return	O
0	int
;	O
}	O
TMP_MARK	O
;	O
str_size	int
=	O
strlen	function
(	O
str	*
-	O
1	int
)	O
;	O
s	*
=	O
begs	*
=	O
(	O
char	O
*	O
)	O
TMP_ALLOC	O
(	O
str_size	int
+	O
1	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
str_size	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
!	O
isspace	function
(	O
c	int
)	O
)	O
{	O
int	O
dig	int
=	O
digit_value	array
[	O
c	int
]	O
;	O
if	O
(	O
dig	int
>=	O
base	int
)	O
{	O
TMP_FREE	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
s	*
++	O
=	O
dig	int
;	O
}	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*
++	O
;	O
}	O
str_size	int
=	O
s	*
-	O
begs	int
;	O
LIMBS_PER_DIGIT_IN_BASE	function
(	O
xsize	long
,	O
str_size	int
,	O
base	*
)	O
;	O
MPZ_REALLOC	O
(	O
x	*
,	O
xsize	long
)	O
;	O
xsize	long
=	O
mpn_set_str	function
(	O
PTR	O
(	O
x	*
)	O
,	O
(	O
unsigned	O
char	O
*	O
)	O
begs	*
,	O
str_size	int
,	O
base	int
)	O
;	O
SIZ	O
(	O
x	*
)	O
=	O
negative	int
?	O
-	O
xsize	long
:	O
xsize	long
;	O
TMP_FREE	O
;	O
return	O
0	int
;	O
}	O