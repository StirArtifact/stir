static	O
void	O
xstrtol_error	function
(	O
enum	O
strtol_error	enum
err	enum
,	O
int	O
opt_idx	int
,	O
char	O
c	char
,	O
struct	O
option	struct
const	O
*	O
long_options	*
,	O
char	O
const	O
*	O
arg	*
,	O
int	O
exit_status	int
)	O
{	O
char	O
const	O
*	O
hyphens	*
=	O
"--"	*
;	O
char	O
const	O
*	O
msgid	*
;	O
char	O
const	O
*	O
option	struct
;	O
char	O
option_buffer	array
[	O
2	int
]	O
;	O
switch	O
(	O
err	enum
)	O
{	O
default	O
:	O
abort	function
(	O
)	O
;	O
case	O
LONGINT_INVALID	int
:	O
msgid	*
=	O
N_	O
(	O
"invalid %s%s argument '%s'"	*
)	O
;	O
break	O
;	O
case	O
LONGINT_INVALID_SUFFIX_CHAR	int
:	O
case	O
LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW	int
:	O
msgid	*
=	O
N_	O
(	O
"invalid suffix in %s%s argument '%s'"	*
)	O
;	O
break	O
;	O
case	O
LONGINT_OVERFLOW	int
:	O
msgid	*
=	O
N_	O
(	O
"%s%s argument '%s' too large"	*
)	O
;	O
break	O
;	O
}	O
if	O
(	O
opt_idx	int
<	O
0	int
)	O
{	O
hyphens	*
-=	O
opt_idx	int
;	O
option_buffer	array
[	O
0	int
]	O
=	O
c	char
;	O
option_buffer	array
[	O
1	int
]	O
=	O
'\0'	O
;	O
option	struct
=	O
option_buffer	array
;	O
}	O
else	O
option	struct
=	O
long_options	*
[	O
opt_idx	int
]	O
.	O
name	*
;	O
error	function
(	O
exit_status	int
,	O
0	int
,	O
gettext	function
(	O
msgid	*
)	O
,	O
hyphens	*
,	O
option	struct
,	O
arg	*
)	O
;	O
}	O
void	O
xstrtol_fatal	function
(	O
enum	O
strtol_error	enum
err	enum
,	O
int	O
opt_idx	int
,	O
char	O
c	char
,	O
struct	O
option	struct
const	O
*	O
long_options	*
,	O
char	O
const	O
*	O
arg	*
)	O
{	O
xstrtol_error	function
(	O
err	enum
,	O
opt_idx	int
,	O
c	char
,	O
long_options	*
,	O
arg	*
,	O
exit_failure	int
)	O
;	O
abort	function
(	O
)	O
;	O
}	O