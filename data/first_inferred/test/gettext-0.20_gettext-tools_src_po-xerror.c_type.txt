static	O
void	O
xerror	function
(	O
int	O
severity	int
,	O
const	O
char	O
*	O
prefix_tail	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	long
lineno	long
,	O
size_t	long
column	int
,	O
int	O
multiline_p	int
,	O
const	O
char	O
*	O
message_text	pointer
)	O
{	O
if	O
(	O
multiline_p	pointer
)	O
{	O
bool	bool
old_error_with_progname	bool
=	O
error_with_progname	O
;	O
char	O
*	O
prefix	pointer
;	O
if	O
(	O
filename	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
lineno	int
!=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
{	O
if	O
(	O
column	int
!=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
prefix	pointer
=	O
xasprintf	function
(	O
"%s:%ld:%ld: %s"	pointer
,	O
filename	pointer
,	O
(	O
long	O
)	O
lineno	int
,	O
(	O
long	O
)	O
column	pointer
,	O
prefix_tail	pointer
)	O
;	O
else	O
prefix	pointer
=	O
xasprintf	function
(	O
"%s:%ld: %s"	pointer
,	O
filename	pointer
,	O
(	O
long	O
)	O
lineno	int
,	O
prefix_tail	pointer
)	O
;	O
}	O
else	O
prefix	pointer
=	O
xasprintf	function
(	O
"%s: %s"	pointer
,	O
filename	pointer
,	O
prefix_tail	pointer
)	O
;	O
error_with_progname	O
=	O
false	int
;	O
}	O
else	O
prefix	pointer
=	O
xasprintf	function
(	O
"%s: %s"	pointer
,	O
program_name	pointer
,	O
prefix_tail	pointer
)	O
;	O
if	O
(	O
severity	int
>=	O
PO_SEVERITY_ERROR	int
)	O
po_multiline_error	function
(	O
prefix	pointer
,	O
xstrdup	function
(	O
message_text	pointer
)	O
)	O
;	O
else	O
po_multiline_warning	function
(	O
prefix	pointer
,	O
xstrdup	function
(	O
message_text	pointer
)	O
)	O
;	O
error_with_progname	O
=	O
old_error_with_progname	int
;	O
if	O
(	O
severity	int
==	O
PO_SEVERITY_FATAL_ERROR	int
)	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
else	O
{	O
int	O
exit_status	int
=	O
(	O
severity	int
==	O
PO_SEVERITY_FATAL_ERROR	int
?	O
EXIT_FAILURE	int
:	O
0	int
)	O
;	O
if	O
(	O
filename	pointer
!=	O
NULL	O
)	O
{	O
error_with_progname	O
=	O
false	int
;	O
if	O
(	O
lineno	int
!=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
{	O
if	O
(	O
column	int
!=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
po_error	function
(	O
exit_status	int
,	O
0	int
,	O
"%s:%ld:%ld: %s%s"	pointer
,	O
filename	pointer
,	O
(	O
long	O
)	O
lineno	int
,	O
(	O
long	O
)	O
column	O
,	O
prefix_tail	pointer
,	O
message_text	int
)	O
;	O
else	O
po_error_at_line	function
(	O
exit_status	int
,	O
0	int
,	O
filename	pointer
,	O
lineno	int
,	O
"%s%s"	pointer
,	O
prefix_tail	pointer
,	O
message_text	pointer
)	O
;	O
}	O
else	O
po_error	function
(	O
exit_status	int
,	O
0	int
,	O
"%s: %s%s"	pointer
,	O
filename	pointer
,	O
prefix_tail	pointer
,	O
message_text	pointer
)	O
;	O
error_with_progname	O
=	O
true	int
;	O
}	O
else	O
po_error	function
(	O
exit_status	int
,	O
0	int
,	O
"%s%s"	pointer
,	O
prefix_tail	pointer
,	O
message_text	pointer
)	O
;	O
if	O
(	O
severity	int
<	O
PO_SEVERITY_ERROR	int
)	O
--	O
error_message_count	int
;	O
}	O
}	O
void	O
textmode_xerror	function
(	O
int	O
severity	int
,	O
const	O
struct	O
message_ty	struct
*	O
message	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	long
lineno	long
,	O
size_t	long
column	int
,	O
int	O
multiline_p	int
,	O
const	O
char	O
*	O
message_text	pointer
)	O
{	O
const	O
char	O
*	O
prefix_tail	pointer
=	O
(	O
severity	int
==	O
PO_SEVERITY_WARNING	int
?	O
_	O
(	O
"warning: "	pointer
)	O
:	O
""	pointer
)	O
;	O
if	O
(	O
message	pointer
!=	O
NULL	O
&&	O
(	O
filename	pointer
==	O
NULL	O
||	O
lineno	int
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
)	O
{	O
filename	pointer
=	O
message	pointer
->	O
pos	struct
.	O
file_name	pointer
;	O
lineno	int
=	O
message	pointer
->	O
pos	struct
.	O
line_number	long
;	O
column	long
=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
;	O
}	O
xerror	function
(	O
severity	int
,	O
prefix_tail	pointer
,	O
filename	pointer
,	O
lineno	int
,	O
column	pointer
,	O
multiline_p	pointer
,	O
message_text	pointer
)	O
;	O
}	O
void	O
textmode_xerror2	function
(	O
int	O
severity	int
,	O
const	O
struct	O
message_ty	struct
*	O
message1	pointer
,	O
const	O
char	O
*	O
filename1	pointer
,	O
size_t	long
lineno1	long
,	O
size_t	long
column1	int
,	O
int	O
multiline_p1	int
,	O
const	O
char	O
*	O
message_text1	pointer
,	O
const	O
struct	O
message_ty	struct
*	O
message2	pointer
,	O
const	O
char	O
*	O
filename2	pointer
,	O
size_t	long
lineno2	long
,	O
size_t	long
column2	int
,	O
int	O
multiline_p2	int
,	O
const	O
char	O
*	O
message_text2	pointer
)	O
{	O
int	O
severity1	int
=	O
(	O
severity	int
==	O
PO_SEVERITY_FATAL_ERROR	int
?	O
PO_SEVERITY_ERROR	int
:	O
severity	int
)	O
;	O
const	O
char	O
*	O
prefix_tail	pointer
=	O
(	O
severity	int
==	O
PO_SEVERITY_WARNING	int
?	O
_	O
(	O
"warning: "	pointer
)	O
:	O
""	pointer
)	O
;	O
if	O
(	O
message1	pointer
!=	O
NULL	O
&&	O
(	O
filename1	pointer
==	O
NULL	O
||	O
lineno1	int
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
)	O
{	O
filename1	int
=	O
message1	pointer
->	O
pos	struct
.	O
file_name	pointer
;	O
lineno1	long
=	O
message1	pointer
->	O
pos	struct
.	O
line_number	long
;	O
column1	long
=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
;	O
}	O
if	O
(	O
message2	pointer
!=	O
NULL	O
&&	O
(	O
filename2	pointer
==	O
NULL	O
||	O
lineno2	int
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
)	O
{	O
filename2	int
=	O
message2	pointer
->	O
pos	struct
.	O
file_name	pointer
;	O
lineno2	long
=	O
message2	pointer
->	O
pos	struct
.	O
line_number	long
;	O
column2	long
=	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
;	O
}	O
if	O
(	O
multiline_p1	pointer
)	O
xerror	function
(	O
severity1	pointer
,	O
prefix_tail	pointer
,	O
filename1	pointer
,	O
lineno1	pointer
,	O
column1	pointer
,	O
multiline_p1	pointer
,	O
message_text1	pointer
)	O
;	O
else	O
{	O
char	O
*	O
message_text1_extended	pointer
=	O
xasprintf	function
(	O
"%s..."	pointer
,	O
message_text1	pointer
)	O
;	O
xerror	function
(	O
severity1	pointer
,	O
prefix_tail	pointer
,	O
filename1	pointer
,	O
lineno1	pointer
,	O
column1	pointer
,	O
multiline_p1	pointer
,	O
message_text1_extended	pointer
)	O
;	O
free	function
(	O
message_text1_extended	pointer
)	O
;	O
}	O
{	O
char	O
*	O
message_text2_extended	pointer
=	O
xasprintf	function
(	O
"...%s"	pointer
,	O
message_text2	pointer
)	O
;	O
xerror	function
(	O
severity	int
,	O
prefix_tail	pointer
,	O
filename2	pointer
,	O
lineno2	pointer
,	O
column2	pointer
,	O
multiline_p2	pointer
,	O
message_text2_extended	pointer
)	O
;	O
free	function
(	O
message_text2_extended	pointer
)	O
;	O
}	O
if	O
(	O
severity	int
>=	O
PO_SEVERITY_ERROR	int
)	O
--	O
error_message_count	int
;	O
}	O
void	O
(	O
*	O
po_xerror	pointer
)	O
(	O
int	O
severity	int
,	O
const	O
struct	O
message_ty	struct
*	O
message	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	long
lineno	int
,	O
size_t	long
column	int
,	O
int	O
multiline_p	int
,	O
const	O
char	O
*	O
message_text	pointer
)	O
=	O
textmode_xerror	pointer
;	O
void	O
(	O
*	O
po_xerror2	pointer
)	O
(	O
int	O
severity	int
,	O
const	O
struct	O
message_ty	struct
*	O
message1	pointer
,	O
const	O
char	O
*	O
filename1	pointer
,	O
size_t	long
lineno1	long
,	O
size_t	long
column1	int
,	O
int	O
multiline_p1	int
,	O
const	O
char	O
*	O
message_text1	pointer
,	O
const	O
struct	O
message_ty	struct
*	O
message2	pointer
,	O
const	O
char	O
*	O
filename2	pointer
,	O
size_t	long
lineno2	long
,	O
size_t	long
column2	int
,	O
int	O
multiline_p2	int
,	O
const	O
char	O
*	O
message_text2	pointer
)	O
=	O
textmode_xerror2	pointer
;	O