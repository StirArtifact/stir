int	O
_mu_imap_seterrstr	function
(	O
mu_imap_t	*
imap	*
,	O
const	O
char	O
*	O
str	*
,	O
size_t	long
len	long
)	O
{	O
if	O
(	O
!	O
imap	*
)	O
return	O
EINVAL	int
;	O
if	O
(	O
len	int
+	O
1	int
>	O
imap	*
->	O
errsize	*
)	O
{	O
char	O
*	O
p	*
=	O
realloc	function
(	O
imap	*
->	O
errstr	*
,	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	*
)	O
return	O
ENOMEM	int
;	O
imap	*
->	O
errsize	long
=	O
len	int
+	O
1	int
;	O
imap	*
->	O
errstr	*
=	O
p	int
;	O
}	O
memcpy	function
(	O
imap	*
->	O
errstr	*
,	O
str	*
,	O
len	long
)	O
;	O
imap	*
->	O
errstr	*
[	O
len	int
]	O
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
_mu_imap_seterrstrz	function
(	O
mu_imap_t	*
imap	*
,	O
const	O
char	O
*	O
str	*
)	O
{	O
return	O
_mu_imap_seterrstr	function
(	O
imap	*
,	O
str	*
,	O
strlen	function
(	O
str	*
)	O
)	O
;	O
}	O
void	O
_mu_imap_clrerrstr	function
(	O
mu_imap_t	*
imap	*
)	O
{	O
if	O
(	O
imap	*
&&	O
imap	*
->	O
errstr	*
)	O
imap	*
->	O
errstr	*
[	O
0	int
]	O
=	O
0	int
;	O
}	O
int	O
mu_imap_strerror	function
(	O
mu_imap_t	*
imap	*
,	O
const	O
char	O
*	O
*	O
pstr	*
)	O
{	O
if	O
(	O
!	O
imap	*
)	O
{	O
*	O
pstr	*
=	O
"(imap not initialized)"	int
;	O
return	O
EINVAL	int
;	O
}	O
if	O
(	O
MU_IMAP_FISSET	O
(	O
imap	*
,	O
MU_IMAP_RESP	int
)	O
)	O
{	O
*	O
pstr	*
=	O
imap	*
->	O
errstr	*
;	O
return	O
0	int
;	O
}	O
*	O
pstr	*
=	O
"(no recent reply)"	int
;	O
return	O
MU_ERR_NOENT	O
;	O
}	O
enum	O
mu_imap_response	enum
mu_imap_response	function
(	O
mu_imap_t	*
imap	*
)	O
{	O
if	O
(	O
!	O
imap	*
)	O
return	O
MU_IMAP_BAD	int
;	O
return	O
imap	*
->	O
response	*
;	O
}	O
int	O
mu_imap_response_code	function
(	O
mu_imap_t	*
imap	*
)	O
{	O
if	O
(	O
!	O
imap	*
)	O
return	O
-	O
1	int
;	O
return	O
imap	*
->	O
response_code	*
;	O
}	O