void	O
store_enc_init	function
(	O
struct	O
store_enc	struct
*	O
enc	*
,	O
mach_port_t	O
*	O
ports	*
,	O
mach_msg_type_number_t	O
num_ports	int
,	O
int	O
*	O
ints	*
,	O
mach_msg_type_number_t	O
num_ints	int
,	O
off_t	long
*	O
offsets	*
,	O
mach_msg_type_number_t	O
num_offsets	int
,	O
char	O
*	O
data	*
,	O
mach_msg_type_number_t	O
data_len	int
)	O
{	O
memset	function
(	O
enc	*
,	O
0	int
,	O
sizeof	O
(	O
*	O
enc	*
)	O
)	O
;	O
enc	*
->	O
ports	*
=	O
enc	*
->	O
init_ports	*
=	O
ports	*
;	O
enc	*
->	O
num_ports	int
=	O
num_ports	int
;	O
enc	*
->	O
ints	*
=	O
enc	*
->	O
init_ints	*
=	O
ints	*
;	O
enc	*
->	O
num_ints	int
=	O
num_ints	int
;	O
enc	*
->	O
offsets	*
=	O
enc	*
->	O
init_offsets	*
=	O
offsets	*
;	O
enc	*
->	O
num_offsets	int
=	O
num_offsets	int
;	O
enc	*
->	O
data	*
=	O
enc	*
->	O
init_data	*
=	O
data	*
;	O
enc	*
->	O
data_len	int
=	O
data_len	int
;	O
}	O
void	O
store_enc_dealloc	function
(	O
struct	O
store_enc	struct
*	O
enc	*
)	O
{	O
if	O
(	O
enc	*
->	O
ports	*
&&	O
enc	*
->	O
num_ports	int
>	O
0	int
)	O
{	O
while	O
(	O
enc	*
->	O
cur_port	long
<	O
enc	*
->	O
num_ports	int
)	O
{	O
mach_port_t	O
port	int
=	O
enc	*
->	O
ports	*
[	O
enc	*
->	O
cur_port	long
++	O
]	O
;	O
if	O
(	O
port	int
!=	O
MACH_PORT_NULL	O
)	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
port	O
)	O
;	O
}	O
if	O
(	O
enc	*
->	O
ports	*
!=	O
enc	*
->	O
init_ports	*
)	O
munmap	function
(	O
(	O
caddr_t	*
)	O
enc	*
->	O
ports	*
,	O
enc	*
->	O
num_ports	int
*	O
sizeof	O
(	O
*	O
enc	*
->	O
ports	*
)	O
)	O
;	O
}	O
if	O
(	O
enc	*
->	O
ints	*
&&	O
enc	*
->	O
num_ints	int
>	O
0	int
&&	O
enc	*
->	O
ints	*
!=	O
enc	*
->	O
init_ints	*
)	O
munmap	function
(	O
(	O
caddr_t	*
)	O
enc	*
->	O
ints	*
,	O
enc	*
->	O
num_ints	int
*	O
sizeof	O
(	O
*	O
enc	*
->	O
ints	*
)	O
)	O
;	O
if	O
(	O
enc	*
->	O
offsets	*
&&	O
enc	*
->	O
num_offsets	int
>	O
0	int
&&	O
enc	*
->	O
offsets	*
!=	O
enc	*
->	O
init_offsets	*
)	O
munmap	function
(	O
(	O
caddr_t	*
)	O
enc	*
->	O
offsets	*
,	O
enc	*
->	O
num_offsets	int
*	O
sizeof	O
(	O
*	O
enc	*
->	O
offsets	*
)	O
)	O
;	O
if	O
(	O
enc	*
->	O
data	*
&&	O
enc	*
->	O
data_len	int
>	O
0	int
&&	O
enc	*
->	O
data	*
!=	O
enc	*
->	O
init_data	*
)	O
munmap	function
(	O
enc	*
->	O
data	*
,	O
enc	*
->	O
data_len	long
)	O
;	O
memset	function
(	O
enc	*
,	O
0	int
,	O
sizeof	O
(	O
*	O
enc	*
)	O
)	O
;	O
}	O
void	O
store_enc_return	function
(	O
struct	O
store_enc	struct
*	O
enc	*
,	O
mach_port_t	O
*	O
*	O
ports	*
,	O
mach_msg_type_number_t	O
*	O
num_ports	int
,	O
int	O
*	O
*	O
ints	*
,	O
mach_msg_type_number_t	O
*	O
num_ints	int
,	O
off_t	long
*	O
*	O
offsets	*
,	O
mach_msg_type_number_t	O
*	O
num_offsets	int
,	O
char	O
*	O
*	O
data	*
,	O
mach_msg_type_number_t	O
*	O
data_len	int
)	O
{	O
*	O
ports	*
=	O
enc	*
->	O
ports	*
;	O
*	O
num_ports	int
=	O
enc	*
->	O
num_ports	int
;	O
*	O
ints	*
=	O
enc	*
->	O
ints	*
;	O
*	O
num_ints	int
=	O
enc	*
->	O
num_ints	int
;	O
*	O
offsets	*
=	O
enc	*
->	O
offsets	*
;	O
*	O
num_offsets	int
=	O
enc	*
->	O
num_offsets	int
;	O
*	O
data	*
=	O
enc	*
->	O
data	*
;	O
*	O
data_len	int
=	O
enc	*
->	O
data_len	int
;	O
}	O