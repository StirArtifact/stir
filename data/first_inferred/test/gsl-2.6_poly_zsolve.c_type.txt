int	O
gsl_poly_complex_solve	function
(	O
const	O
double	O
*	O
a	*
,	O
size_t	long
n	long
,	O
gsl_poly_complex_workspace	struct
*	O
w	*
,	O
gsl_complex_packed_ptr	double
z	double
)	O
{	O
int	O
status	int
;	O
double	O
*	O
m	*
;	O
if	O
(	O
n	int
==	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"number of terms must be a positive integer"	*
,	O
GSL_EINVAL	int
)	O
;	O
}	O
if	O
(	O
n	int
==	O
1	int
)	O
{	O
GSL_ERROR	O
(	O
"cannot solve for only one term"	*
,	O
GSL_EINVAL	int
)	O
;	O
}	O
if	O
(	O
a	*
[	O
n	int
-	O
1	int
]	O
==	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"leading term of polynomial must be non-zero"	*
,	O
GSL_EINVAL	int
)	O
;	O
}	O
if	O
(	O
w	*
->	O
nc	int
!=	O
n	int
-	O
1	int
)	O
{	O
GSL_ERROR	O
(	O
"size of workspace does not match polynomial"	*
,	O
GSL_EINVAL	int
)	O
;	O
}	O
m	*
=	O
w	*
->	O
matrix	*
;	O
set_companion_matrix	function
(	O
a	int
,	O
n	int
-	O
1	int
,	O
m	*
)	O
;	O
balance_companion_matrix	function
(	O
m	*
,	O
n	int
-	O
1	int
)	O
;	O
status	int
=	O
qr_companion	function
(	O
m	*
,	O
n	int
-	O
1	int
,	O
z	double
)	O
;	O
if	O
(	O
status	int
)	O
{	O
GSL_ERROR	O
(	O
"root solving qr method failed to converge"	*
,	O
GSL_EFAILED	int
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O