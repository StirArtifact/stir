STRINGTYPE	O
*	O
df_get_next_record	function
(	O
stream	*
,	O
buffer	*
,	O
bufferpos	*
,	O
buffersiz	*
,	O
record_delimiter	*
,	O
record_length	bool
)	O
FILE	struct
*	O
stream	*
;	O
unsigned	O
char	O
*	O
*	O
buffer	*
;	O
size_t	long
*	O
bufferpos	*
;	O
size_t	long
*	O
buffersiz	*
;	O
STRINGTYPE	O
*	O
record_delimiter	*
;	O
size_t	long
record_length	long
;	O
{	O
STRINGTYPE	O
buffer_desc	struct
;	O
int	O
need_more_data	int
;	O
int	O
next_record_pos	int
;	O
int	O
return_code	int
;	O
STRINGTYPE	O
*	O
return_string	*
;	O
buffer_desc	struct
.	O
string	*
=	O
*	O
buffer	*
+	O
*	O
bufferpos	*
;	O
buffer_desc	struct
.	O
length	long
=	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
;	O
need_more_data	long
=	O
0	int
;	O
if	O
(	O
*	O
buffersiz	*
==	O
0	int
)	O
need_more_data	long
=	O
1	int
;	O
else	O
if	O
(	O
record_length	long
!=	O
0	int
)	O
{	O
if	O
(	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
<	O
record_length	long
)	O
need_more_data	int
=	O
1	int
;	O
}	O
else	O
{	O
next_record_pos	int
=	O
dstrstr	function
(	O
&	O
buffer_desc	struct
,	O
record_delimiter	*
)	O
;	O
if	O
(	O
next_record_pos	int
==	O
0	int
)	O
need_more_data	int
=	O
1	int
;	O
}	O
while	O
(	O
need_more_data	*
&&	O
!	O
feof	function
(	O
stream	*
)	O
)	O
{	O
if	O
(	O
*	O
bufferpos	*
==	O
0	int
)	O
{	O
if	O
(	O
*	O
buffer	*
==	O
NULL	O
)	O
*	O
buffer	*
=	O
malloc	function
(	O
DF_BUFFER_INCREMENT	int
)	O
;	O
else	O
*	O
buffer	*
=	O
realloc	function
(	O
*	O
buffer	*
,	O
*	O
buffersiz	*
+	O
DF_BUFFER_INCREMENT	int
)	O
;	O
if	O
(	O
*	O
buffer	*
==	O
NULL	O
)	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*
)	O
)	O
;	O
return_code	int
=	O
fread	function
(	O
*	O
buffer	*
+	O
*	O
buffersiz	*
,	O
1	int
,	O
DF_BUFFER_INCREMENT	int
,	O
stream	*
)	O
;	O
if	O
(	O
return_code	int
<	O
DF_BUFFER_INCREMENT	int
&&	O
ferror	function
(	O
stream	*
)	O
)	O
FATAL_PERROR	O
(	O
_	O
(	O
"File"	*
)	O
)	O
;	O
*	O
buffersiz	*
+=	O
return_code	int
;	O
}	O
else	O
{	O
memmove	function
(	O
*	O
buffer	*
,	O
*	O
buffer	*
+	O
*	O
bufferpos	*
,	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
)	O
;	O
*	O
bufferpos	*
=	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
;	O
return_code	int
=	O
fread	function
(	O
*	O
buffer	*
+	O
*	O
bufferpos	*
,	O
1	int
,	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
,	O
stream	*
)	O
;	O
if	O
(	O
return_code	int
<	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
&&	O
ferror	function
(	O
stream	*
)	O
)	O
FATAL_PERROR	O
(	O
_	O
(	O
"File"	*
)	O
)	O
;	O
if	O
(	O
return_code	int
<	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
)	O
*	O
buffersiz	*
=	O
*	O
bufferpos	*
+	O
return_code	int
;	O
*	O
bufferpos	*
=	O
0	int
;	O
}	O
buffer_desc	struct
.	O
string	*
=	O
*	O
buffer	*
+	O
*	O
bufferpos	*
;	O
buffer_desc	struct
.	O
length	long
=	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
;	O
need_more_data	long
=	O
0	int
;	O
if	O
(	O
record_length	bool
!=	O
0	int
)	O
{	O
if	O
(	O
*	O
buffersiz	*
-	O
*	O
bufferpos	*
<	O
record_length	long
)	O
need_more_data	int
=	O
1	int
;	O
}	O
else	O
{	O
next_record_pos	int
=	O
dstrstr	function
(	O
&	O
buffer_desc	struct
,	O
record_delimiter	*
)	O
;	O
if	O
(	O
next_record_pos	int
==	O
0	int
)	O
need_more_data	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
*	O
bufferpos	*
<	O
*	O
buffersiz	*
)	O
{	O
if	O
(	O
record_length	long
!=	O
0	int
)	O
{	O
return_string	*
=	O
dstrsubstr	function
(	O
&	O
buffer_desc	struct
,	O
1	int
,	O
0	int
,	O
MIN	O
(	O
record_length	long
,	O
buffer_desc	struct
.	O
length	long
)	O
,	O
DStr_not_own	int
)	O
;	O
*	O
bufferpos	*
+=	O
return_string	*
->	O
length	long
;	O
}	O
else	O
{	O
if	O
(	O
next_record_pos	int
==	O
0	int
)	O
next_record_pos	int
=	O
buffer_desc	struct
.	O
length	long
+	O
1	int
;	O
return_string	*
=	O
dstrsubstr	function
(	O
&	O
buffer_desc	struct
,	O
1	int
,	O
next_record_pos	int
-	O
1	int
,	O
0	int
,	O
DStr_not_own	int
)	O
;	O
*	O
bufferpos	*
=	O
*	O
bufferpos	*
+	O
next_record_pos	int
-	O
1	int
+	O
record_delimiter	*
->	O
length	long
;	O
}	O
if	O
(	O
return_string	*
==	O
NULL	O
)	O
{	O
FATAL_ERROR	O
(	O
_	O
(	O
"unable to allocate memory"	*
)	O
)	O
;	O
}	O
return	O
return_string	*
;	O
}	O
return	O
NULL	O
;	O
}	O