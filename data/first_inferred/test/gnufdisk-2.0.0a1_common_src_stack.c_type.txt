struct	O
gnufdisk_stack	struct
{	O
void	O
*	O
data	*
;	O
int	O
size	int
;	O
int	O
index	function
;	O
}	O
;	O
struct	O
gnufdisk_stack	struct
*	O
gnufdisk_stack_new	function
(	O
void	O
)	O
{	O
struct	O
gnufdisk_stack	struct
*	O
ret	*
;	O
int	O
err	int
;	O
if	O
(	O
(	O
ret	*
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
gnufdisk_stack	struct
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
err	int
=	O
ENOMEM	int
;	O
goto	O
lb_out	O
;	O
}	O
memset	function
(	O
ret	*
,	O
0	int
,	O
sizeof	O
(	O
struct	O
gnufdisk_stack	struct
)	O
)	O
;	O
lb_out	O
:	O
errno	O
=	O
err	int
;	O
return	O
ret	int
;	O
}	O
int	O
gnufdisk_stack_delete	function
(	O
struct	O
gnufdisk_stack	struct
*	O
_s	*
)	O
{	O
int	O
ret	int
;	O
int	O
err	int
;	O
if	O
(	O
gnufdisk_check_memory	function
(	O
_s	*
,	O
sizeof	O
(	O
struct	O
gnufdisk_stack	struct
)	O
,	O
0	int
)	O
!=	O
0	int
)	O
{	O
err	int
=	O
errno	O
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
if	O
(	O
_s	*
->	O
data	*
)	O
{	O
if	O
(	O
gnufdisk_check_memory	function
(	O
_s	*
->	O
data	*
,	O
_s	*
->	O
size	long
,	O
0	int
)	O
!=	O
0	int
)	O
{	O
err	int
=	O
errno	O
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
free	function
(	O
_s	*
->	O
data	*
)	O
;	O
_s	*
->	O
data	*
=	O
NULL	O
;	O
}	O
free	function
(	O
_s	*
)	O
;	O
err	int
=	O
0	int
;	O
ret	int
=	O
0	int
;	O
lb_out	O
:	O
errno	O
=	O
err	int
;	O
return	O
ret	int
;	O
}	O
int	O
gnufdisk_stack_push	function
(	O
struct	O
gnufdisk_stack	struct
*	O
_s	*
,	O
void	O
*	O
_data	*
,	O
size_t	long
_size	long
)	O
{	O
int	O
ret	int
;	O
int	O
err	int
;	O
if	O
(	O
gnufdisk_check_memory	function
(	O
_s	*
,	O
sizeof	O
(	O
struct	O
gnufdisk_stack	struct
)	O
,	O
0	int
)	O
!=	O
0	int
)	O
{	O
err	int
=	O
errno	O
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
else	O
if	O
(	O
gnufdisk_check_memory	function
(	O
_data	*
,	O
_size	*
,	O
1	int
)	O
!=	O
0	int
)	O
{	O
err	int
=	O
EFAULT	int
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
if	O
(	O
_size	long
>	O
_s	*
->	O
size	long
-	O
_s	*
->	O
index	function
)	O
{	O
void	O
*	O
data	*
;	O
int	O
size	int
;	O
size	int
=	O
_s	*
->	O
size	long
+	O
32	int
;	O
if	O
(	O
(	O
data	*
=	O
malloc	function
(	O
size	long
)	O
)	O
==	O
NULL	O
)	O
{	O
err	int
=	O
ENOMEM	int
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
if	O
(	O
_s	*
->	O
data	*
)	O
{	O
memcpy	function
(	O
data	*
,	O
_s	*
->	O
data	*
,	O
_s	*
->	O
index	function
)	O
;	O
free	function
(	O
_s	*
->	O
data	*
)	O
;	O
}	O
_s	*
->	O
data	*
=	O
data	*
;	O
_s	*
->	O
size	long
=	O
size	long
;	O
return	O
gnufdisk_stack_push	function
(	O
_s	*
,	O
_data	*
,	O
_size	*
)	O
;	O
}	O
memcpy	function
(	O
_s	*
->	O
data	*
+	O
_s	*
->	O
index	function
,	O
_data	*
,	O
_size	long
)	O
;	O
_s	*
->	O
index	function
+=	O
_size	*
;	O
err	int
=	O
0	int
;	O
ret	int
=	O
0	int
;	O
lb_out	O
:	O
errno	O
=	O
err	int
;	O
return	O
ret	int
;	O
}	O
int	O
gnufdisk_stack_pop	function
(	O
struct	O
gnufdisk_stack	struct
*	O
_s	*
,	O
void	O
*	O
_dest	*
,	O
size_t	long
_size	long
)	O
{	O
int	O
ret	int
;	O
int	O
err	int
;	O
if	O
(	O
gnufdisk_check_memory	function
(	O
_s	*
,	O
sizeof	O
(	O
struct	O
gnufdisk_stack	struct
)	O
,	O
0	int
)	O
!=	O
0	int
||	O
(	O
_s	*
->	O
data	*
&&	O
gnufdisk_check_memory	function
(	O
_s	*
->	O
data	*
,	O
_s	*
->	O
size	long
,	O
0	int
)	O
!=	O
0	int
)	O
||	O
gnufdisk_check_memory	function
(	O
_dest	*
,	O
_size	*
,	O
0	int
)	O
!=	O
0	int
)	O
{	O
err	O
=	O
errno	O
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
else	O
if	O
(	O
_size	*
>	O
_s	*
->	O
index	function
)	O
{	O
err	int
=	O
ENOBUFS	int
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
memcpy	function
(	O
_dest	*
,	O
_s	*
->	O
data	*
+	O
(	O
_s	*
->	O
index	function
-	O
_size	*
)	O
,	O
_size	*
)	O
;	O
_s	*
->	O
index	function
-=	O
_size	*
;	O
ret	int
=	O
0	int
;	O
err	int
=	O
0	int
;	O
lb_out	O
:	O
errno	O
=	O
err	int
;	O
return	O
ret	int
;	O
}	O