void	O
mpz_lcm	O
(	O
mpz_ptr	*
r	*
,	O
mpz_srcptr	*
u	array
,	O
mpz_srcptr	*
v	*
)	O
{	O
mpz_t	array
g	array
;	O
mp_size_t	long
usize	*
,	O
vsize	long
;	O
TMP_DECL	O
;	O
usize	*
=	O
SIZ	O
(	O
u	array
)	O
;	O
vsize	long
=	O
SIZ	O
(	O
v	*
)	O
;	O
if	O
(	O
usize	*
==	O
0	int
||	O
vsize	long
==	O
0	int
)	O
{	O
SIZ	O
(	O
r	*
)	O
=	O
0	int
;	O
return	O
;	O
}	O
usize	*
=	O
ABS	O
(	O
usize	*
)	O
;	O
vsize	long
=	O
ABS	O
(	O
vsize	long
)	O
;	O
if	O
(	O
vsize	long
==	O
1	int
||	O
usize	*
==	O
1	int
)	O
{	O
mp_limb_t	long
vl	long
,	O
gl	long
,	O
c	long
;	O
mp_srcptr	*
up	*
;	O
mp_ptr	*
rp	*
;	O
if	O
(	O
usize	*
==	O
1	int
)	O
{	O
usize	*
=	O
vsize	long
;	O
MPZ_SRCPTR_SWAP	O
(	O
u	array
,	O
v	*
)	O
;	O
}	O
MPZ_REALLOC	O
(	O
r	*
,	O
usize	*
+	O
1	int
)	O
;	O
up	*
=	O
PTR	O
(	O
u	array
)	O
;	O
vl	long
=	O
PTR	O
(	O
v	*
)	O
[	O
0	int
]	O
;	O
gl	long
=	O
mpn_gcd_1	O
(	O
up	*
,	O
usize	*
,	O
vl	long
)	O
;	O
vl	long
/=	O
gl	long
;	O
rp	*
=	O
PTR	O
(	O
r	*
)	O
;	O
c	long
=	O
mpn_mul_1	O
(	O
rp	*
,	O
up	*
,	O
usize	*
,	O
vl	long
)	O
;	O
rp	*
[	O
usize	*
]	O
=	O
c	long
;	O
usize	*
+=	O
(	O
c	long
!=	O
0	int
)	O
;	O
SIZ	O
(	O
r	*
)	O
=	O
usize	*
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
MPZ_TMP_INIT	O
(	O
g	*
,	O
usize	*
)	O
;	O
mpz_gcd	O
(	O
g	*
,	O
u	array
,	O
v	*
)	O
;	O
mpz_divexact	O
(	O
g	*
,	O
u	array
,	O
g	long
)	O
;	O
mpz_mul	O
(	O
r	*
,	O
g	*
,	O
v	*
)	O
;	O
SIZ	O
(	O
r	*
)	O
=	O
ABS	O
(	O
SIZ	O
(	O
r	*
)	O
)	O
;	O
TMP_FREE	O
;	O
}	O