enum	O
{	O
HAVE_GNU_CALLOC	int
=	O
1	int
}	O
;	O
void	O
*	O
xmalloc	function
(	O
size_t	long
n	long
)	O
{	O
void	O
*	O
p	*
=	O
malloc	function
(	O
n	long
)	O
;	O
if	O
(	O
!	O
p	*
&&	O
n	long
!=	O
0	int
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
p	*
;	O
}	O
void	O
*	O
xrealloc	function
(	O
void	O
*	O
p	*
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
n	long
&&	O
p	*
)	O
{	O
free	function
(	O
p	*
)	O
;	O
return	O
NULL	O
;	O
}	O
p	*
=	O
realloc	function
(	O
p	*
,	O
n	long
)	O
;	O
if	O
(	O
!	O
p	*
&&	O
n	long
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
p	*
;	O
}	O
void	O
*	O
x2realloc	function
(	O
void	O
*	O
p	*
,	O
size_t	long
*	O
pn	*
)	O
{	O
return	O
x2nrealloc	function
(	O
p	*
,	O
pn	*
,	O
1	int
)	O
;	O
}	O
void	O
*	O
xzalloc	function
(	O
size_t	long
s	long
)	O
{	O
return	O
memset	function
(	O
xmalloc	function
(	O
s	long
)	O
,	O
0	int
,	O
s	long
)	O
;	O
}	O
void	O
*	O
xcalloc	function
(	O
size_t	long
n	long
,	O
size_t	long
s	long
)	O
{	O
void	O
*	O
p	*
;	O
if	O
(	O
(	O
!	O
HAVE_GNU_CALLOC	int
&&	O
xalloc_oversized	O
(	O
n	long
,	O
s	long
)	O
)	O
||	O
(	O
!	O
(	O
p	*
=	O
calloc	function
(	O
n	long
,	O
s	long
)	O
)	O
&&	O
(	O
HAVE_GNU_CALLOC	int
||	O
n	long
!=	O
0	int
)	O
)	O
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
p	*
;	O
}	O
void	O
*	O
xmemdup	function
(	O
void	O
const	O
*	O
p	*
,	O
size_t	long
s	long
)	O
{	O
return	O
memcpy	function
(	O
xmalloc	function
(	O
s	long
)	O
,	O
p	*
,	O
s	long
)	O
;	O
}	O
char	O
*	O
xstrdup	function
(	O
char	O
const	O
*	O
string	*
)	O
{	O
return	O
xmemdup	function
(	O
string	*
,	O
strlen	function
(	O
string	*
)	O
+	O
1	int
)	O
;	O
}	O