int	O
mu_message_get_body	function
(	O
mu_message_t	*
msg	*
,	O
mu_body_t	*
*	O
pbody	*
)	O
{	O
if	O
(	O
msg	*
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pbody	*
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
msg	*
->	O
body	*
==	O
NULL	O
)	O
{	O
mu_body_t	*
body	*
;	O
int	O
status	int
=	O
mu_body_create	function
(	O
&	O
body	*
,	O
msg	*
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
if	O
(	O
msg	*
->	O
rawstream	*
)	O
{	O
mu_stream_t	*
stream	*
;	O
int	O
flags	int
=	O
0	int
;	O
mu_stream_get_flags	function
(	O
msg	*
->	O
rawstream	*
,	O
&	O
flags	int
)	O
;	O
status	int
=	O
mu_streamref_create_abridged	function
(	O
&	O
stream	*
,	O
msg	*
->	O
rawstream	*
,	O
msg	*
->	O
orig_header_size	long
,	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_body_destroy	function
(	O
&	O
body	*
,	O
msg	*
)	O
;	O
return	O
status	int
;	O
}	O
mu_body_set_stream	function
(	O
body	*
,	O
stream	*
,	O
msg	*
)	O
;	O
}	O
msg	*
->	O
body	*
=	O
body	*
;	O
}	O
*	O
pbody	*
=	O
msg	*
->	O
body	*
;	O
return	O
0	int
;	O
}	O
int	O
mu_message_set_body	function
(	O
mu_message_t	*
msg	*
,	O
mu_body_t	*
body	*
,	O
void	O
*	O
owner	*
)	O
{	O
if	O
(	O
msg	*
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
msg	*
->	O
owner	*
!=	O
owner	*
)	O
return	O
EACCES	int
;	O
if	O
(	O
msg	*
->	O
body	*
)	O
mu_body_destroy	function
(	O
&	O
msg	*
->	O
body	*
,	O
msg	*
)	O
;	O
msg	*
->	O
body	*
=	O
body	*
;	O
msg	*
->	O
flags	int
|=	O
MESSAGE_MODIFIED	int
;	O
return	O
0	int
;	O
}	O