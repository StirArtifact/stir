void	O
sha3_384_init	function
(	O
struct	O
sha3_384_ctx	struct
*	O
ctx	pointer
)	O
{	O
memset	function
(	O
ctx	pointer
,	O
0	int
,	O
offsetof	O
(	O
struct	O
sha3_384_ctx	struct
,	O
block	array
)	O
)	O
;	O
}	O
void	O
sha3_384_update	function
(	O
struct	O
sha3_384_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	pointer
)	O
{	O
ctx	pointer
->	O
index	function
=	O
_sha3_update	O
(	O
&	O
ctx	pointer
->	O
state	pointer
,	O
SHA3_384_BLOCK_SIZE	int
,	O
ctx	pointer
->	O
block	array
,	O
ctx	pointer
->	O
index	function
,	O
length	long
,	O
data	pointer
)	O
;	O
}	O
void	O
sha3_384_digest	O
(	O
struct	O
sha3_384_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	pointer
)	O
{	O
_sha3_pad	O
(	O
&	O
ctx	pointer
->	O
state	pointer
,	O
SHA3_384_BLOCK_SIZE	int
,	O
ctx	pointer
->	O
block	array
,	O
ctx	pointer
->	O
index	function
)	O
;	O
_nettle_write_le64	function
(	O
length	long
,	O
digest	pointer
,	O
ctx	pointer
->	O
state	pointer
.	O
a	array
)	O
;	O
sha3_384_init	O
(	O
ctx	pointer
)	O
;	O
}	O