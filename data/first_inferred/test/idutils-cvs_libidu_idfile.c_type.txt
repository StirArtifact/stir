int	O
io_size	function
(	O
FILE	struct
*	O
,	O
void	O
*	O
,	O
unsigned	O
int	O
size	int
,	O
int	O
)	O
;	O
char	O
const	O
*	O
locate_id_file_name	function
(	O
char	O
const	O
*	O
arg	*
)	O
{	O
static	O
char	O
file_name_buffer	array
[	O
BUFSIZ	int
]	O
;	O
char	O
*	O
buf	*
=	O
file_name_buffer	array
;	O
char	O
*	O
id_path	*
=	O
0	int
;	O
struct	O
stat	struct
rootb	struct
;	O
struct	O
stat	struct
statb	struct
;	O
if	O
(	O
arg	*
==	O
0	int
)	O
{	O
id_path	*
=	O
getenv	function
(	O
"IDPATH"	*
)	O
;	O
if	O
(	O
id_path	*
)	O
{	O
id_path	*
=	O
strdup	function
(	O
id_path	*
)	O
;	O
arg	*
=	O
strsep	function
(	O
&	O
id_path	O
,	O
":"	*
)	O
;	O
}	O
}	O
if	O
(	O
arg	int
==	O
0	int
)	O
arg	*
=	O
DEFAULT_ID_FILE_NAME	int
;	O
if	O
(	O
arg	*
[	O
0	int
]	O
==	O
'/'	O
)	O
return	O
arg	*
;	O
if	O
(	O
stat	struct
(	O
arg	*
,	O
&	O
statb	struct
)	O
==	O
0	int
)	O
return	O
arg	*
;	O
if	O
(	O
stat	O
(	O
"/"	*
,	O
&	O
rootb	struct
)	O
!=	O
0	int
)	O
return	O
NULL	O
;	O
do	O
{	O
strcpy	function
(	O
buf	*
,	O
"../"	*
)	O
;	O
buf	*
+=	O
3	int
;	O
strcpy	function
(	O
buf	*
,	O
arg	*
)	O
;	O
if	O
(	O
stat	struct
(	O
file_name_buffer	array
,	O
&	O
statb	struct
)	O
==	O
0	int
)	O
return	O
file_name_buffer	array
;	O
*	O
buf	*
=	O
'\0'	O
;	O
if	O
(	O
stat	struct
(	O
file_name_buffer	array
,	O
&	O
statb	struct
)	O
!=	O
0	int
)	O
return	O
NULL	O
;	O
}	O
while	O
(	O
statb	struct
.	O
st_ino	long
!=	O
rootb	struct
.	O
st_ino	long
||	O
statb	struct
.	O
st_dev	long
!=	O
rootb	struct
.	O
st_dev	long
)	O
;	O
return	O
NULL	O
;	O
}	O
int	O
sizeof_idhead	function
(	O
)	O
{	O
return	O
io_idhead	function
(	O
0	int
,	O
io_size	*
,	O
0	int
)	O
;	O
}	O
int	O
io_size	function
(	O
FILE	struct
*	O
ignore_FILE	*
,	O
void	O
*	O
ignore_addr	*
,	O
unsigned	O
int	O
size	int
,	O
int	O
io_type	int
)	O
{	O
if	O
(	O
io_type	int
==	O
IO_TYPE_STR	int
)	O
error	function
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"can't determine the io_size of a string!"	*
)	O
)	O
;	O
return	O
size	int
;	O
}	O
int	O
io_idhead	function
(	O
FILE	struct
*	O
fp	*
,	O
io_func_t	*
iof	*
,	O
struct	O
idhead	struct
*	O
idhp	*
)	O
{	O
unsigned	O
int	O
size	int
=	O
0	int
;	O
unsigned	O
char	O
pad	int
=	O
0	int
;	O
if	O
(	O
fp	*
)	O
fseek	function
(	O
fp	*
,	O
0L	int
,	O
0	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
idhp	*
->	O
idh_magic	int
,	O
2	int
,	O
IO_TYPE_FIX	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
pad	*
,	O
1	int
,	O
IO_TYPE_FIX	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_version	O
,	O
1	int
,	O
IO_TYPE_FIX	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_flags	O
,	O
2	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_file_links	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_files	int
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_tokens	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_buf_size	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_vec_size	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_tokens_offset	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_flinks_offset	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_end_offset	O
,	O
4	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_max_link	char
,	O
2	int
,	O
IO_TYPE_INT	int
)	O
;	O
size	int
+=	O
iof	function
(	O
fp	*
,	O
&	O
idhp	*
->	O
idh_max_path	O
,	O
2	int
,	O
IO_TYPE_INT	int
)	O
;	O
return	O
size	int
;	O
}	O