struct	O
_mu_secret	struct
{	O
unsigned	O
int	O
refcnt	int
;	O
size_t	long
length	long
;	O
unsigned	O
char	O
*	O
obptr	pointer
;	O
unsigned	O
char	O
*	O
clptr	pointer
;	O
unsigned	O
int	O
clref	int
;	O
}	O
;	O
static	O
unsigned	O
char	O
xchar	array
;	O
static	O
void	O
obfuscate	function
(	O
const	O
unsigned	O
char	O
*	O
input	pointer
,	O
unsigned	O
char	O
*	O
output	pointer
,	O
size_t	long
len	long
)	O
{	O
if	O
(	O
!	O
xchar	pointer
)	O
xchar	array
=	O
random	function
(	O
)	O
%	O
255	int
;	O
while	O
(	O
len	long
--	O
)	O
*	O
output	pointer
++	O
=	O
*	O
input	pointer
++	O
^	O
xchar	pointer
;	O
}	O
int	O
mu_secret_create	function
(	O
mu_secret_t	pointer
*	O
psec	pointer
,	O
const	O
char	O
*	O
value	pointer
,	O
size_t	long
len	long
)	O
{	O
mu_secret_t	pointer
sec	pointer
;	O
sec	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
sec	array
[	O
0	int
]	O
)	O
+	O
2	int
*	O
(	O
len	long
+	O
1	int
)	O
)	O
;	O
if	O
(	O
!	O
sec	pointer
)	O
return	O
ENOMEM	int
;	O
sec	pointer
->	O
obptr	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
sec	long
+	O
1	int
)	O
;	O
sec	pointer
->	O
clptr	long
=	O
sec	pointer
->	O
obptr	long
+	O
len	long
+	O
1	int
;	O
obfuscate	function
(	O
(	O
unsigned	O
char	O
*	O
)	O
value	pointer
,	O
sec	pointer
->	O
obptr	pointer
,	O
len	long
)	O
;	O
sec	pointer
->	O
length	long
=	O
len	int
;	O
*	O
psec	pointer
=	O
sec	pointer
;	O
mu_secret_ref	function
(	O
sec	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_secret_dup	function
(	O
mu_secret_t	pointer
sec	pointer
,	O
mu_secret_t	pointer
*	O
newsec	pointer
)	O
{	O
const	O
char	O
*	O
pass	pointer
=	O
mu_secret_password	function
(	O
sec	pointer
)	O
;	O
int	O
rc	int
=	O
mu_secret_create	function
(	O
newsec	pointer
,	O
pass	int
,	O
strlen	function
(	O
pass	pointer
)	O
)	O
;	O
mu_secret_password_unref	function
(	O
sec	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
void	O
mu_secret_ref	function
(	O
mu_secret_t	pointer
sec	pointer
)	O
{	O
if	O
(	O
sec	pointer
)	O
sec	pointer
->	O
refcnt	int
++	O
;	O
}	O
int	O
mu_secret_unref	function
(	O
mu_secret_t	pointer
sec	pointer
)	O
{	O
if	O
(	O
sec	pointer
)	O
{	O
if	O
(	O
sec	pointer
->	O
refcnt	int
)	O
sec	pointer
->	O
refcnt	int
--	O
;	O
if	O
(	O
sec	pointer
->	O
refcnt	int
==	O
0	int
)	O
{	O
memset	function
(	O
sec	pointer
->	O
clptr	int
,	O
0	int
,	O
sec	pointer
->	O
length	long
)	O
;	O
memset	function
(	O
sec	pointer
->	O
obptr	int
,	O
0	int
,	O
sec	pointer
->	O
length	long
)	O
;	O
free	function
(	O
sec	pointer
)	O
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_EXISTS	O
;	O
}	O
return	O
EINVAL	int
;	O
}	O
void	O
mu_secret_destroy	function
(	O
mu_secret_t	pointer
*	O
psec	pointer
)	O
{	O
if	O
(	O
psec	pointer
&&	O
*	O
psec	pointer
&&	O
mu_secret_unref	function
(	O
*	O
psec	pointer
)	O
==	O
0	int
)	O
*	O
psec	pointer
=	O
NULL	O
;	O
}	O
const	O
char	O
*	O
mu_secret_password	function
(	O
mu_secret_t	pointer
sec	pointer
)	O
{	O
if	O
(	O
!	O
sec	pointer
)	O
return	O
0	int
;	O
if	O
(	O
sec	pointer
->	O
clref	int
++	O
==	O
0	int
)	O
obfuscate	function
(	O
sec	pointer
->	O
obptr	pointer
,	O
sec	pointer
->	O
clptr	pointer
,	O
sec	pointer
->	O
length	long
)	O
;	O
return	O
(	O
const	O
char	O
*	O
)	O
sec	pointer
->	O
clptr	pointer
;	O
}	O
size_t	long
mu_secret_length	function
(	O
mu_secret_t	pointer
sec	pointer
)	O
{	O
if	O
(	O
!	O
sec	pointer
)	O
return	O
0	int
;	O
return	O
sec	pointer
->	O
length	long
;	O
}	O
void	O
mu_secret_password_unref	function
(	O
mu_secret_t	pointer
sec	pointer
)	O
{	O
if	O
(	O
--	O
sec	pointer
->	O
clref	int
==	O
0	int
)	O
memset	function
(	O
sec	pointer
->	O
clptr	pointer
,	O
0	int
,	O
sec	pointer
->	O
length	long
)	O
;	O
}	O