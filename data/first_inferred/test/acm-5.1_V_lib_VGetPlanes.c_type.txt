VPolygon	struct
*	O
VGetPlanes	function
(	O
VPolygon	struct
*	O
poly	pointer
)	O
{	O
VPoint	struct
tmp	pointer
[	O
64	int
]	O
,	O
*	O
p	pointer
;	O
int	O
i	int
,	O
lasti	int
;	O
lasti	int
=	O
poly	pointer
->	O
numVtces	short
-	O
1	int
;	O
p	pointer
=	O
poly	pointer
->	O
vertex	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
poly	pointer
->	O
numVtces	short
;	O
++	O
i	int
)	O
{	O
tmp	pointer
[	O
i	int
]	O
.	O
x	double
=	O
p	pointer
->	O
y	double
*	O
poly	pointer
->	O
vertex	pointer
[	O
lasti	int
]	O
.	O
z	double
-	O
p	pointer
->	O
z	double
*	O
poly	pointer
->	O
vertex	pointer
[	O
lasti	int
]	O
.	O
y	double
;	O
tmp	pointer
[	O
i	int
]	O
.	O
y	double
=	O
p	pointer
->	O
z	double
*	O
poly	pointer
->	O
vertex	pointer
[	O
lasti	int
]	O
.	O
x	double
-	O
p	pointer
->	O
x	double
*	O
poly	pointer
->	O
vertex	pointer
[	O
lasti	int
]	O
.	O
z	double
;	O
tmp	pointer
[	O
i	int
]	O
.	O
z	double
=	O
p	pointer
->	O
x	double
*	O
poly	pointer
->	O
vertex	pointer
[	O
lasti	int
]	O
.	O
y	double
-	O
p	pointer
->	O
y	double
*	O
poly	pointer
->	O
vertex	pointer
[	O
lasti	int
]	O
.	O
x	double
;	O
lasti	int
=	O
i	int
;	O
p	pointer
++	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
poly	pointer
->	O
numVtces	short
;	O
++	O
i	int
)	O
poly	pointer
->	O
vertex	pointer
[	O
i	int
]	O
=	O
tmp	array
[	O
i	int
]	O
;	O
return	O
poly	pointer
;	O
}	O