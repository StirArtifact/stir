bool	bool
hard_locale	function
(	O
int	O
category	int
)	O
{	O
bool	bool
hard	bool
=	O
true	int
;	O
char	O
const	O
*	O
p	*
=	O
setlocale	function
(	O
category	int
,	O
NULL	O
)	O
;	O
if	O
(	O
p	*
)	O
{	O
if	O
(	O
2	int
<=	O
GLIBC_VERSION	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
p	*
,	O
"C"	*
)	O
==	O
0	int
||	O
strcmp	function
(	O
p	*
,	O
"POSIX"	*
)	O
==	O
0	int
)	O
hard	bool
=	O
false	int
;	O
}	O
else	O
{	O
char	O
*	O
locale	*
=	O
strdup	function
(	O
p	*
)	O
;	O
if	O
(	O
locale	*
)	O
{	O
if	O
(	O
(	O
(	O
p	*
=	O
setlocale	function
(	O
category	int
,	O
"C"	*
)	O
)	O
&&	O
strcmp	function
(	O
p	*
,	O
locale	*
)	O
==	O
0	int
)	O
||	O
(	O
(	O
p	*
=	O
setlocale	function
(	O
category	int
,	O
"POSIX"	*
)	O
)	O
&&	O
strcmp	function
(	O
p	*
,	O
locale	*
)	O
==	O
0	int
)	O
)	O
hard	bool
=	O
false	int
;	O
setlocale	function
(	O
category	int
,	O
locale	*
)	O
;	O
free	function
(	O
locale	*
)	O
;	O
}	O
}	O
}	O
return	O
hard	bool
;	O
}	O