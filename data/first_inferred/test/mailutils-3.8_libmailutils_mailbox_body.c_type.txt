static	O
int	O
body_get_stream	function
(	O
mu_body_t	pointer
body	pointer
,	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
int	O
ref	pointer
)	O
;	O
struct	O
_mu_body_stream	struct
{	O
struct	O
_mu_stream	struct
stream	pointer
;	O
mu_body_t	pointer
body	pointer
;	O
}	O
;	O
static	O
int	O
init_tmp_stream	function
(	O
mu_body_t	pointer
body	pointer
)	O
{	O
int	O
rc	int
;	O
mu_off_t	long
off	long
;	O
rc	int
=	O
mu_stream_seek	function
(	O
body	pointer
->	O
rawstream	pointer
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
off	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
body	pointer
->	O
rawstream	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_stream_copy	function
(	O
body	pointer
->	O
fstream	pointer
,	O
body	pointer
->	O
rawstream	pointer
,	O
0	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_seek	function
(	O
body	pointer
->	O
rawstream	pointer
,	O
off	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
return	O
mu_stream_seek	function
(	O
body	pointer
->	O
fstream	pointer
,	O
off	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
}	O
static	O
int	O
body_stream_transport	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
int	O
mode	int
,	O
mu_stream_t	pointer
*	O
pstr	pointer
)	O
{	O
struct	O
_mu_body_stream	struct
*	O
str	pointer
=	O
(	O
struct	O
_mu_body_stream	struct
*	O
)	O
stream	pointer
;	O
mu_body_t	pointer
body	pointer
=	O
str	pointer
->	O
body	pointer
;	O
if	O
(	O
!	O
body	pointer
->	O
rawstream	pointer
&&	O
body	pointer
->	O
_get_stream	pointer
)	O
{	O
int	O
status	int
=	O
body	pointer
->	O
_get_stream	pointer
(	O
body	pointer
,	O
&	O
body	pointer
->	O
rawstream	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
if	O
(	O
mode	int
==	O
BODY_RDWR	int
||	O
!	O
body	pointer
->	O
rawstream	pointer
)	O
{	O
if	O
(	O
!	O
body	pointer
->	O
fstream	pointer
)	O
{	O
int	O
rc	int
;	O
rc	int
=	O
mu_temp_file_stream_create	function
(	O
&	O
body	pointer
->	O
fstream	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_set_buffer	function
(	O
body	pointer
->	O
fstream	pointer
,	O
mu_buffer_full	int
,	O
0	int
)	O
;	O
if	O
(	O
body	pointer
->	O
rawstream	pointer
)	O
{	O
rc	int
=	O
init_tmp_stream	function
(	O
body	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_stream_destroy	function
(	O
&	O
body	pointer
->	O
fstream	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
}	O
}	O
body	pointer
->	O
flags	int
|=	O
BODY_MODIFIED	int
;	O
}	O
*	O
pstr	pointer
=	O
body	pointer
->	O
fstream	pointer
?	O
body	pointer
->	O
fstream	pointer
:	O
body	pointer
->	O
rawstream	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
bstr_close	function
(	O
struct	O
_mu_stream	struct
*	O
stream	pointer
)	O
{	O
return	O
0	int
;	O
}	O
void	O
bstr_done	function
(	O
struct	O
_mu_stream	struct
*	O
stream	pointer
)	O
{	O
}	O
static	O
int	O
bstr_seek	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
mu_off_t	long
off	long
,	O
mu_off_t	long
*	O
presult	pointer
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_seek	function
(	O
transport	pointer
,	O
off	long
,	O
MU_SEEK_SET	int
,	O
presult	pointer
)	O
;	O
}	O
static	O
int	O
bstr_ioctl	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
int	O
code	int
,	O
int	O
opcode	int
,	O
void	O
*	O
ptr	pointer
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_ioctl	function
(	O
transport	pointer
,	O
code	int
,	O
opcode	int
,	O
ptr	pointer
)	O
;	O
}	O
static	O
int	O
bstr_read	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	pointer
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_read	function
(	O
transport	pointer
,	O
buf	pointer
,	O
size	long
,	O
pret	pointer
)	O
;	O
}	O
static	O
int	O
bstr_write	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	pointer
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDWR	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_write	function
(	O
transport	pointer
,	O
buf	pointer
,	O
size	long
,	O
pret	pointer
)	O
;	O
}	O
static	O
int	O
bstr_truncate	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
mu_off_t	long
n	long
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDWR	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_truncate	function
(	O
transport	pointer
,	O
n	long
)	O
;	O
}	O
static	O
int	O
bstr_size	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
mu_off_t	long
*	O
size	long
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_size	function
(	O
transport	pointer
,	O
size	long
)	O
;	O
}	O
static	O
int	O
bstr_flush	function
(	O
mu_stream_t	pointer
stream	pointer
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_flush	function
(	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
bstr_get_lines	function
(	O
mu_body_t	pointer
body	pointer
,	O
size_t	long
*	O
plines	pointer
)	O
{	O
mu_stream_t	pointer
stream	pointer
,	O
transport	pointer
;	O
int	O
status	int
;	O
size_t	long
lines	long
=	O
0	int
;	O
mu_off_t	long
off	long
;	O
status	int
=	O
body_get_stream	function
(	O
body	pointer
,	O
&	O
stream	pointer
,	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
body_stream_transport	function
(	O
body	pointer
->	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_flush	function
(	O
transport	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_seek	function
(	O
transport	pointer
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	O
off	long
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
char	O
buf	pointer
[	O
128	int
]	O
;	O
size_t	long
n	long
=	O
0	int
;	O
status	int
=	O
mu_stream_seek	function
(	O
transport	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
while	O
(	O
(	O
status	int
=	O
mu_stream_readline	function
(	O
transport	pointer
,	O
buf	pointer
,	O
sizeof	O
buf	pointer
,	O
&	O
n	long
)	O
)	O
==	O
0	int
&&	O
n	long
>	O
0	int
)	O
{	O
if	O
(	O
buf	pointer
[	O
n	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
lines	long
++	O
;	O
}	O
mu_stream_seek	function
(	O
transport	pointer
,	O
off	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
plines	pointer
)	O
*	O
plines	pointer
=	O
lines	long
;	O
return	O
status	int
;	O
}	O
static	O
int	O
bstr_get_size0	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
size_t	long
*	O
psize	pointer
)	O
{	O
mu_off_t	long
off	long
=	O
0	int
;	O
int	O
status	int
=	O
mu_stream_size	function
(	O
stream	pointer
,	O
&	O
off	long
)	O
;	O
if	O
(	O
psize	pointer
)	O
*	O
psize	pointer
=	O
off	long
;	O
return	O
status	int
;	O
}	O
static	O
int	O
bstr_get_size	function
(	O
mu_body_t	pointer
body	pointer
,	O
size_t	long
*	O
psize	pointer
)	O
{	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
body_stream_transport	function
(	O
body	pointer
->	O
stream	pointer
,	O
BODY_RDONLY	int
,	O
&	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
bstr_get_size0	function
(	O
transport	pointer
,	O
psize	pointer
)	O
;	O
}	O
static	O
int	O
body_stream_create	function
(	O
mu_body_t	pointer
body	pointer
)	O
{	O
struct	O
_mu_body_stream	struct
*	O
str	pointer
=	O
(	O
struct	O
_mu_body_stream	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
str	pointer
)	O
,	O
MU_STREAM_RDWR	O
|	O
MU_STREAM_SEEK	int
|	O
_MU_STR_OPEN	int
)	O
;	O
if	O
(	O
!	O
str	pointer
)	O
return	O
ENOMEM	int
;	O
str	pointer
->	O
stream	pointer
.	O
ctl	pointer
=	O
bstr_ioctl	function
;	O
str	pointer
->	O
stream	pointer
.	O
read	pointer
=	O
bstr_read	function
;	O
str	pointer
->	O
stream	pointer
.	O
write	pointer
=	O
bstr_write	function
;	O
str	pointer
->	O
stream	pointer
.	O
truncate	function
=	O
bstr_truncate	function
;	O
str	pointer
->	O
stream	pointer
.	O
size	long
=	O
bstr_size	function
;	O
str	pointer
->	O
stream	pointer
.	O
seek	pointer
=	O
bstr_seek	function
;	O
str	pointer
->	O
stream	pointer
.	O
flush	pointer
=	O
bstr_flush	function
;	O
str	pointer
->	O
stream	pointer
.	O
close	pointer
=	O
bstr_close	function
;	O
str	pointer
->	O
stream	pointer
.	O
done	pointer
=	O
bstr_done	function
;	O
str	pointer
->	O
body	pointer
=	O
body	pointer
;	O
body	pointer
->	O
stream	pointer
=	O
(	O
mu_stream_t	pointer
)	O
str	pointer
;	O
body	pointer
->	O
_lines	pointer
=	O
bstr_get_lines	function
;	O
body	pointer
->	O
_size	pointer
=	O
bstr_get_size	function
;	O
body	pointer
->	O
stream	pointer
=	O
(	O
mu_stream_t	pointer
)	O
str	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
body_get_stream	function
(	O
mu_body_t	pointer
body	pointer
,	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
int	O
ref	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pstream	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
body	pointer
->	O
stream	pointer
==	O
NULL	O
)	O
{	O
int	O
status	int
=	O
body_stream_create	function
(	O
body	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
if	O
(	O
!	O
ref	pointer
)	O
{	O
*	O
pstream	pointer
=	O
body	pointer
->	O
stream	pointer
;	O
return	O
0	int
;	O
}	O
return	O
mu_streamref_create	function
(	O
pstream	pointer
,	O
body	pointer
->	O
stream	pointer
)	O
;	O
}	O
int	O
mu_body_get_stream	function
(	O
mu_body_t	pointer
body	pointer
,	O
mu_stream_t	pointer
*	O
pstream	pointer
)	O
{	O
return	O
body_get_stream	function
(	O
body	pointer
,	O
pstream	pointer
,	O
0	int
)	O
;	O
}	O
int	O
mu_body_get_streamref	function
(	O
mu_body_t	pointer
body	pointer
,	O
mu_stream_t	pointer
*	O
pstream	pointer
)	O
{	O
return	O
body_get_stream	function
(	O
body	pointer
,	O
pstream	pointer
,	O
1	int
)	O
;	O
}	O
int	O
mu_body_set_stream	function
(	O
mu_body_t	pointer
body	pointer
,	O
mu_stream_t	pointer
stream	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
body	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
mu_stream_destroy	function
(	O
&	O
body	pointer
->	O
stream	pointer
)	O
;	O
mu_stream_destroy	function
(	O
&	O
body	pointer
->	O
rawstream	pointer
)	O
;	O
body	pointer
->	O
rawstream	pointer
=	O
stream	pointer
;	O
body	pointer
->	O
flags	int
|=	O
BODY_MODIFIED	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_body_set_get_stream	function
(	O
mu_body_t	pointer
body	pointer
,	O
int	O
(	O
*	O
_getstr	pointer
)	O
(	O
mu_body_t	pointer
,	O
mu_stream_t	pointer
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
body	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
body	pointer
->	O
_get_stream	pointer
=	O
_getstr	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_body_set_lines	function
(	O
mu_body_t	pointer
body	pointer
,	O
int	O
(	O
*	O
_lines	pointer
)	O
(	O
mu_body_t	pointer
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
body	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
body	pointer
->	O
_lines	pointer
=	O
_lines	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_body_lines	function
(	O
mu_body_t	pointer
body	pointer
,	O
size_t	long
*	O
plines	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
body	pointer
->	O
_lines	pointer
)	O
return	O
body	pointer
->	O
_lines	pointer
(	O
body	pointer
,	O
plines	pointer
)	O
;	O
return	O
bstr_get_lines	function
(	O
body	pointer
,	O
plines	pointer
)	O
;	O
}	O
int	O
mu_body_size	function
(	O
mu_body_t	pointer
body	pointer
,	O
size_t	long
*	O
psize	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
body	pointer
->	O
_size	pointer
)	O
return	O
body	pointer
->	O
_size	pointer
(	O
body	pointer
,	O
psize	pointer
)	O
;	O
if	O
(	O
body	pointer
->	O
stream	pointer
)	O
return	O
bstr_get_size0	function
(	O
body	pointer
->	O
stream	pointer
,	O
psize	pointer
)	O
;	O
if	O
(	O
psize	pointer
)	O
*	O
psize	pointer
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_body_set_size	function
(	O
mu_body_t	pointer
body	pointer
,	O
int	O
(	O
*	O
_size	pointer
)	O
(	O
mu_body_t	pointer
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
body	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
body	pointer
->	O
_size	pointer
=	O
_size	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_body_create	function
(	O
mu_body_t	pointer
*	O
pbody	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
mu_body_t	pointer
body	pointer
;	O
if	O
(	O
pbody	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
owner	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
body	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
body	pointer
)	O
)	O
;	O
if	O
(	O
body	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
body	pointer
->	O
owner	pointer
=	O
owner	pointer
;	O
*	O
pbody	pointer
=	O
body	pointer
;	O
return	O
0	int
;	O
}	O
void	O
mu_body_destroy	function
(	O
mu_body_t	pointer
*	O
pbody	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
pbody	pointer
&&	O
*	O
pbody	pointer
)	O
{	O
mu_body_t	pointer
body	pointer
=	O
*	O
pbody	pointer
;	O
if	O
(	O
body	pointer
->	O
owner	pointer
==	O
owner	pointer
)	O
{	O
mu_stream_destroy	function
(	O
&	O
body	pointer
->	O
rawstream	pointer
)	O
;	O
mu_stream_destroy	function
(	O
&	O
body	pointer
->	O
stream	pointer
)	O
;	O
free	function
(	O
body	pointer
)	O
;	O
}	O
*	O
pbody	pointer
=	O
NULL	O
;	O
}	O
}	O
void	O
*	O
mu_body_get_owner	function
(	O
mu_body_t	pointer
body	pointer
)	O
{	O
return	O
(	O
body	pointer
)	O
?	O
body	pointer
->	O
owner	pointer
:	O
NULL	O
;	O
}	O
int	O
mu_body_is_modified	function
(	O
mu_body_t	pointer
body	pointer
)	O
{	O
return	O
(	O
body	pointer
)	O
?	O
(	O
body	pointer
->	O
flags	int
&	O
BODY_MODIFIED	int
)	O
:	O
0	int
;	O
}	O
int	O
mu_body_clear_modified	function
(	O
mu_body_t	pointer
body	pointer
)	O
{	O
if	O
(	O
body	pointer
)	O
body	pointer
->	O
flags	int
&=	O
~	O
BODY_MODIFIED	int
;	O
return	O
0	int
;	O
}	O
