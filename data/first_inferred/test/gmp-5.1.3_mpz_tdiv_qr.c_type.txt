void	O
mpz_tdiv_qr	O
(	O
mpz_ptr	*
quot	long
,	O
mpz_ptr	*
rem	long
,	O
mpz_srcptr	*
num	*
,	O
mpz_srcptr	*
den	*
)	O
{	O
mp_size_t	long
ql	long
;	O
mp_size_t	long
ns	long
,	O
ds	long
,	O
nl	long
,	O
dl	long
;	O
mp_ptr	*
np	*
,	O
dp	*
,	O
qp	*
,	O
rp	*
;	O
TMP_DECL	O
;	O
ns	long
=	O
SIZ	O
(	O
num	*
)	O
;	O
ds	long
=	O
SIZ	O
(	O
den	*
)	O
;	O
nl	long
=	O
ABS	O
(	O
ns	long
)	O
;	O
dl	long
=	O
ABS	O
(	O
ds	long
)	O
;	O
ql	long
=	O
nl	long
-	O
dl	long
+	O
1	int
;	O
if	O
(	O
UNLIKELY	O
(	O
dl	long
==	O
0	int
)	O
)	O
DIVIDE_BY_ZERO	O
;	O
rp	*
=	O
MPZ_REALLOC	O
(	O
rem	long
,	O
dl	long
)	O
;	O
if	O
(	O
ql	long
<=	O
0	int
)	O
{	O
if	O
(	O
num	*
!=	O
rem	long
)	O
{	O
np	*
=	O
PTR	O
(	O
num	*
)	O
;	O
MPN_COPY	O
(	O
rp	*
,	O
np	*
,	O
nl	long
)	O
;	O
SIZ	O
(	O
rem	long
)	O
=	O
SIZ	O
(	O
num	*
)	O
;	O
}	O
SIZ	O
(	O
quot	long
)	O
=	O
0	int
;	O
return	O
;	O
}	O
qp	*
=	O
MPZ_REALLOC	O
(	O
quot	long
,	O
ql	long
)	O
;	O
TMP_MARK	O
;	O
np	*
=	O
PTR	O
(	O
num	*
)	O
;	O
dp	*
=	O
PTR	O
(	O
den	*
)	O
;	O
if	O
(	O
dp	*
==	O
rp	*
||	O
dp	*
==	O
qp	*
)	O
{	O
mp_ptr	*
tp	*
;	O
tp	*
=	O
TMP_ALLOC_LIMBS	O
(	O
dl	long
)	O
;	O
MPN_COPY	O
(	O
tp	*
,	O
dp	*
,	O
dl	long
)	O
;	O
dp	*
=	O
tp	*
;	O
}	O
if	O
(	O
np	*
==	O
rp	*
||	O
np	*
==	O
qp	*
)	O
{	O
mp_ptr	*
tp	*
;	O
tp	*
=	O
TMP_ALLOC_LIMBS	O
(	O
nl	long
)	O
;	O
MPN_COPY	O
(	O
tp	*
,	O
np	*
,	O
nl	long
)	O
;	O
np	*
=	O
tp	*
;	O
}	O
mpn_tdiv_qr	O
(	O
qp	*
,	O
rp	*
,	O
0L	int
,	O
np	*
,	O
nl	long
,	O
dp	*
,	O
dl	long
)	O
;	O
ql	long
-=	O
qp	*
[	O
ql	long
-	O
1	int
]	O
==	O
0	int
;	O
MPN_NORMALIZE	O
(	O
rp	*
,	O
dl	long
)	O
;	O
SIZ	O
(	O
quot	long
)	O
=	O
(	O
ns	long
^	O
ds	long
)	O
>=	O
0	int
?	O
ql	long
:	O
-	O
ql	long
;	O
SIZ	O
(	O
rem	long
)	O
=	O
ns	long
>=	O
0	int
?	O
dl	long
:	O
-	O
dl	long
;	O
TMP_FREE	O
;	O
}	O