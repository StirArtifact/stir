static	O
void	O
mpz_divexact_by3	O
(	O
mpz_ptr	*
q	*
,	O
mpz_srcptr	*
a	*
)	O
{	O
mp_size_t	long
size	long
=	O
SIZ	O
(	O
a	*
)	O
;	O
mp_size_t	long
abs_size	long
=	O
ABS	O
(	O
size	long
)	O
;	O
mp_ptr	*
qp	*
;	O
qp	*
=	O
MPZ_REALLOC	O
(	O
q	*
,	O
abs_size	long
)	O
;	O
mpn_bdiv_dbm1	O
(	O
qp	*
,	O
PTR	O
(	O
a	int
)	O
,	O
abs_size	long
,	O
GMP_NUMB_MASK	O
/	O
3	int
)	O
;	O
abs_size	long
-=	O
(	O
qp	*
[	O
abs_size	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
SIZ	O
(	O
q	*
)	O
=	O
(	O
size	long
>	O
0	int
?	O
abs_size	long
:	O
-	O
abs_size	long
)	O
;	O
}	O
static	O
void	O
mpz_divexact_by5	O
(	O
mpz_ptr	*
q	*
,	O
mpz_srcptr	*
a	*
)	O
{	O
mp_size_t	long
size	long
=	O
SIZ	O
(	O
a	*
)	O
;	O
mp_size_t	long
abs_size	long
=	O
ABS	O
(	O
size	long
)	O
;	O
mp_ptr	*
qp	*
;	O
qp	*
=	O
MPZ_REALLOC	O
(	O
q	*
,	O
abs_size	long
)	O
;	O
mpn_bdiv_dbm1	O
(	O
qp	*
,	O
PTR	O
(	O
a	int
)	O
,	O
abs_size	long
,	O
GMP_NUMB_MASK	O
/	O
5	int
)	O
;	O
abs_size	long
-=	O
(	O
qp	*
[	O
abs_size	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
SIZ	O
(	O
q	*
)	O
=	O
(	O
size	long
>	O
0	int
?	O
abs_size	long
:	O
-	O
abs_size	long
)	O
;	O
}	O
static	O
void	O
mpz_divexact_limb	O
(	O
mpz_ptr	*
q	*
,	O
mpz_srcptr	*
a	int
,	O
mp_limb_t	long
d	long
)	O
{	O
mp_size_t	long
size	long
=	O
SIZ	O
(	O
a	*
)	O
;	O
mp_size_t	long
abs_size	long
=	O
ABS	O
(	O
size	long
)	O
;	O
mp_ptr	*
qp	*
;	O
qp	*
=	O
MPZ_REALLOC	O
(	O
q	*
,	O
abs_size	long
)	O
;	O
mpn_divexact_1	O
(	O
qp	*
,	O
PTR	O
(	O
a	int
)	O
,	O
abs_size	long
,	O
d	long
)	O
;	O
abs_size	long
-=	O
(	O
qp	*
[	O
abs_size	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
SIZ	O
(	O
q	*
)	O
=	O
(	O
size	long
>	O
0	int
?	O
abs_size	long
:	O
-	O
abs_size	long
)	O
;	O
}	O
void	O
mpz_divexact_gcd	O
(	O
mpz_ptr	*
q	*
,	O
mpz_srcptr	*
a	*
,	O
mpz_srcptr	*
d	*
)	O
{	O
ASSERT	O
(	O
mpz_sgn	function
(	O
d	long
)	O
>	O
0	int
)	O
;	O
if	O
(	O
SIZ	O
(	O
a	*
)	O
==	O
0	int
)	O
{	O
SIZ	O
(	O
q	*
)	O
=	O
0	int
;	O
return	O
;	O
}	O
if	O
(	O
SIZ	O
(	O
d	long
)	O
==	O
1	int
)	O
{	O
mp_limb_t	long
dl	long
=	O
PTR	O
(	O
d	*
)	O
[	O
0	int
]	O
;	O
int	O
twos	int
;	O
if	O
(	O
(	O
dl	long
&	O
1	int
)	O
==	O
0	int
)	O
{	O
count_trailing_zeros	O
(	O
twos	int
,	O
dl	long
)	O
;	O
dl	long
>>=	O
twos	int
;	O
mpz_tdiv_q_2exp	O
(	O
q	int
,	O
a	int
,	O
twos	int
)	O
;	O
a	int
=	O
q	int
;	O
}	O
if	O
(	O
dl	long
==	O
1	int
)	O
{	O
if	O
(	O
q	int
!=	O
a	*
)	O
mpz_set	O
(	O
q	*
,	O
a	*
)	O
;	O
return	O
;	O
}	O
if	O
(	O
dl	long
==	O
3	int
)	O
{	O
mpz_divexact_by3	function
(	O
q	*
,	O
a	*
)	O
;	O
return	O
;	O
}	O
if	O
(	O
dl	long
==	O
5	int
)	O
{	O
mpz_divexact_by5	function
(	O
q	*
,	O
a	*
)	O
;	O
return	O
;	O
}	O
mpz_divexact_limb	function
(	O
q	*
,	O
a	int
,	O
dl	long
)	O
;	O
return	O
;	O
}	O
mpz_divexact	O
(	O
q	*
,	O
a	*
,	O
d	*
)	O
;	O
}	O