int	O
mu_message_create	function
(	O
mu_message_t	*
*	O
pmsg	*
,	O
void	O
*	O
owner	*
)	O
{	O
mu_message_t	*
msg	*
;	O
int	O
status	int
;	O
if	O
(	O
pmsg	*
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
msg	*
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
msg	*
)	O
)	O
;	O
if	O
(	O
msg	*
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
status	int
=	O
mu_monitor_create	function
(	O
&	O
msg	*
->	O
monitor	*
,	O
0	int
,	O
msg	*
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
free	function
(	O
msg	*
)	O
;	O
return	O
status	int
;	O
}	O
msg	*
->	O
owner	*
=	O
owner	*
;	O
msg	*
->	O
ref_count	int
=	O
1	int
;	O
*	O
pmsg	*
=	O
msg	*
;	O
return	O
0	int
;	O
}	O
void	O
*	O
mu_message_get_owner	function
(	O
mu_message_t	*
msg	*
)	O
{	O
return	O
(	O
msg	*
==	O
NULL	O
)	O
?	O
NULL	O
:	O
msg	*
->	O
owner	*
;	O
}	O