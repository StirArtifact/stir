gsl_sf_mathieu_workspace	struct
*	O
gsl_sf_mathieu_alloc	function
(	O
const	O
size_t	long
nn	long
,	O
const	O
double	O
qq	double
)	O
{	O
gsl_sf_mathieu_workspace	struct
*	O
workspace	*
;	O
unsigned	O
int	O
even_order	int
=	O
nn	long
/	O
2	int
+	O
1	int
,	O
odd_order	long
=	O
(	O
nn	long
+	O
1	int
)	O
/	O
2	int
,	O
extra_values	int
;	O
extra_values	double
=	O
(	O
int	O
)	O
(	O
2.1	struct
*	O
pow	function
(	O
fabs	function
(	O
qq	double
)	O
,	O
0.37	*
)	O
)	O
+	O
9	int
;	O
extra_values	long
+=	O
20	int
;	O
if	O
(	O
nn	long
+	O
1	int
==	O
0	int
)	O
{	O
GSL_ERROR_NULL	O
(	O
"matrix dimension must be positive integer"	*
,	O
GSL_EINVAL	int
)	O
;	O
}	O
workspace	*
=	O
(	O
gsl_sf_mathieu_workspace	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_sf_mathieu_workspace	struct
)	O
)	O
;	O
if	O
(	O
workspace	*
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for workspace"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
even_order	double
+=	O
extra_values	double
;	O
odd_order	double
+=	O
extra_values	double
;	O
workspace	*
->	O
size	long
=	O
nn	long
;	O
workspace	*
->	O
even_order	long
=	O
even_order	long
;	O
workspace	*
->	O
odd_order	long
=	O
odd_order	long
;	O
workspace	*
->	O
extra_values	long
=	O
extra_values	long
;	O
workspace	*
->	O
aa	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
nn	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
aa	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"Error allocating memory for characteristic a values"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
bb	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
nn	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
bb	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"Error allocating memory for characteristic b values"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
dd	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
even_order	int
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
dd	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for diagonal"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
ee	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
even_order	int
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
ee	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for diagonal"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
tt	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
3	int
*	O
even_order	double
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
tt	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for diagonal"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
e2	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
even_order	int
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
e2	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
tt	*
)	O
;	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for diagonal"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
zz	*
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
even_order	double
*	O
even_order	double
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
workspace	*
->	O
zz	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
e2	*
)	O
;	O
free	function
(	O
workspace	*
->	O
tt	*
)	O
;	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for diagonal"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
eval	*
=	O
gsl_vector_alloc	function
(	O
even_order	int
)	O
;	O
if	O
(	O
workspace	*
->	O
eval	*
==	O
NULL	O
)	O
{	O
free	function
(	O
workspace	*
->	O
zz	*
)	O
;	O
free	function
(	O
workspace	*
->	O
e2	*
)	O
;	O
free	function
(	O
workspace	*
->	O
tt	*
)	O
;	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for eval"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
evec	*
=	O
gsl_matrix_alloc	function
(	O
even_order	int
,	O
even_order	int
)	O
;	O
if	O
(	O
workspace	*
->	O
evec	*
==	O
NULL	O
)	O
{	O
gsl_vector_free	function
(	O
workspace	*
->	O
eval	*
)	O
;	O
free	function
(	O
workspace	*
->	O
zz	*
)	O
;	O
free	function
(	O
workspace	*
->	O
e2	*
)	O
;	O
free	function
(	O
workspace	*
->	O
tt	*
)	O
;	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for evec"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
workspace	*
->	O
wmat	*
=	O
gsl_eigen_symmv_alloc	function
(	O
even_order	*
)	O
;	O
if	O
(	O
workspace	*
->	O
wmat	*
==	O
NULL	O
)	O
{	O
gsl_matrix_free	function
(	O
workspace	*
->	O
evec	*
)	O
;	O
gsl_vector_free	function
(	O
workspace	*
->	O
eval	*
)	O
;	O
free	function
(	O
workspace	*
->	O
zz	*
)	O
;	O
free	function
(	O
workspace	*
->	O
e2	*
)	O
;	O
free	function
(	O
workspace	*
->	O
tt	*
)	O
;	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for wmat"	*
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
return	O
workspace	*
;	O
}	O
void	O
gsl_sf_mathieu_free	function
(	O
gsl_sf_mathieu_workspace	struct
*	O
workspace	*
)	O
{	O
RETURN_IF_NULL	O
(	O
workspace	*
)	O
;	O
gsl_vector_free	function
(	O
workspace	*
->	O
eval	*
)	O
;	O
gsl_matrix_free	function
(	O
workspace	*
->	O
evec	*
)	O
;	O
gsl_eigen_symmv_free	function
(	O
workspace	*
->	O
wmat	*
)	O
;	O
free	function
(	O
workspace	*
->	O
aa	array
)	O
;	O
free	function
(	O
workspace	*
->	O
bb	int
)	O
;	O
free	function
(	O
workspace	*
->	O
dd	*
)	O
;	O
free	function
(	O
workspace	*
->	O
ee	*
)	O
;	O
free	function
(	O
workspace	*
->	O
tt	*
)	O
;	O
free	function
(	O
workspace	*
->	O
e2	*
)	O
;	O
free	function
(	O
workspace	*
->	O
zz	*
)	O
;	O
free	function
(	O
workspace	*
)	O
;	O
}	O