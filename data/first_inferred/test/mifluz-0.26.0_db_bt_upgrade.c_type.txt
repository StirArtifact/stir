static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: bt_upgrade.c,v 1.4 2014/04/17 20:27:25 sebdiaz Exp $"	*
;	O
int	O
CDB___bam_30_btreemeta	function
(	O
dbp	*
,	O
real_name	*
,	O
buf	*
)	O
DB	struct
*	O
dbp	*
;	O
char	O
*	O
real_name	*
;	O
u_int8_t	char
*	O
buf	*
;	O
{	O
BTMETA30	struct
*	O
newmeta	*
;	O
BTMETA2X	struct
*	O
oldmeta	*
;	O
DB_ENV	struct
*	O
dbenv	*
;	O
int	O
ret	int
;	O
dbenv	*
=	O
dbp	*
->	O
dbenv	*
;	O
newmeta	*
=	O
(	O
BTMETA30	struct
*	O
)	O
buf	*
;	O
oldmeta	*
=	O
(	O
BTMETA2X	struct
*	O
)	O
buf	*
;	O
newmeta	*
->	O
re_pad	int
=	O
oldmeta	*
->	O
re_pad	int
;	O
newmeta	*
->	O
re_len	int
=	O
oldmeta	*
->	O
re_len	int
;	O
newmeta	*
->	O
minkey	int
=	O
oldmeta	*
->	O
minkey	int
;	O
newmeta	*
->	O
maxkey	int
=	O
oldmeta	*
->	O
maxkey	int
;	O
newmeta	*
->	O
dbmeta	struct
.	O
free	function
=	O
oldmeta	*
->	O
free	function
;	O
newmeta	*
->	O
dbmeta	struct
.	O
flags	int
=	O
oldmeta	*
->	O
flags	int
;	O
newmeta	*
->	O
dbmeta	struct
.	O
type	int
=	O
P_BTREEMETA	int
;	O
newmeta	*
->	O
dbmeta	struct
.	O
version	int
=	O
7	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_fileid	function
(	O
dbenv	*
,	O
real_name	*
,	O
1	int
,	O
buf	*
+	O
36	int
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
newmeta	*
->	O
root	*
=	O
1	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___bam_31_btreemeta	function
(	O
dbp	*
,	O
real_name	*
,	O
flags	int
,	O
fhp	*
,	O
h	*
,	O
dirtyp	int
)	O
DB	struct
*	O
dbp	*
;	O
char	O
*	O
real_name	*
;	O
u_int32_t	int
flags	int
;	O
DB_FH	struct
*	O
fhp	*
;	O
PAGE	struct
*	O
h	*
;	O
int	O
*	O
dirtyp	*
;	O
{	O
if	O
(	O
dbp	*
==	O
NULL	O
)	O
dbp	*
=	O
NULL	O
;	O
if	O
(	O
real_name	*
==	O
NULL	O
)	O
real_name	*
=	O
NULL	O
;	O
if	O
(	O
fhp	*
==	O
NULL	O
)	O
fhp	*
=	O
NULL	O
;	O
BTMETA31	struct
*	O
newmeta	*
;	O
BTMETA30	struct
*	O
oldmeta	*
;	O
COMPQUIET	O
(	O
dbp	*
,	O
NULL	O
)	O
;	O
COMPQUIET	O
(	O
real_name	*
,	O
NULL	O
)	O
;	O
COMPQUIET	O
(	O
fhp	*
,	O
NULL	O
)	O
;	O
newmeta	*
=	O
(	O
BTMETA31	struct
*	O
)	O
h	*
;	O
oldmeta	*
=	O
(	O
BTMETA30	struct
*	O
)	O
h	*
;	O
newmeta	*
->	O
root	*
=	O
oldmeta	*
->	O
root	*
;	O
newmeta	*
->	O
re_pad	int
=	O
oldmeta	*
->	O
re_pad	int
;	O
newmeta	*
->	O
re_len	int
=	O
oldmeta	*
->	O
re_len	int
;	O
newmeta	*
->	O
minkey	int
=	O
oldmeta	*
->	O
minkey	int
;	O
newmeta	*
->	O
maxkey	*
=	O
oldmeta	*
->	O
maxkey	*
;	O
memmove	function
(	O
newmeta	*
->	O
dbmeta	struct
.	O
uid	int
,	O
oldmeta	*
->	O
dbmeta	struct
.	O
uid	int
,	O
sizeof	O
(	O
oldmeta	*
->	O
dbmeta	struct
.	O
uid	int
)	O
)	O
;	O
newmeta	*
->	O
dbmeta	struct
.	O
flags	int
=	O
oldmeta	*
->	O
dbmeta	struct
.	O
flags	int
;	O
newmeta	*
->	O
dbmeta	struct
.	O
record_count	int
=	O
0	int
;	O
newmeta	*
->	O
dbmeta	struct
.	O
key_count	int
=	O
0	int
;	O
ZERO_LSN	O
(	O
newmeta	*
->	O
dbmeta	struct
.	O
alloc_lsn	int
)	O
;	O
newmeta	*
->	O
dbmeta	struct
.	O
version	int
=	O
8	int
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_DUPSORT	int
)	O
)	O
F_SET	O
(	O
&	O
newmeta	*
->	O
dbmeta	char
,	O
BTM_DUPSORT	*
)	O
;	O
*	O
dirtyp	*
=	O
1	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___bam_31_lbtree	function
(	O
dbp	*
,	O
real_name	*
,	O
flags	int
,	O
fhp	*
,	O
h	*
,	O
dirtyp	int
)	O
DB	struct
*	O
dbp	*
;	O
char	O
*	O
real_name	*
;	O
u_int32_t	int
flags	int
;	O
DB_FH	struct
*	O
fhp	*
;	O
PAGE	struct
*	O
h	*
;	O
int	O
*	O
dirtyp	*
;	O
{	O
BKEYDATA	struct
*	O
bk	*
;	O
db_pgno_t	int
pgno	int
;	O
db_indx_t	short
indx	short
;	O
int	O
ret	int
;	O
ret	int
=	O
0	int
;	O
for	O
(	O
indx	double
=	O
O_INDX	int
;	O
indx	short
<	O
NUM_ENT	O
(	O
h	int
)	O
;	O
indx	double
+=	O
P_INDX	int
)	O
{	O
bk	*
=	O
GET_BKEYDATA	O
(	O
h	*
,	O
indx	short
)	O
;	O
if	O
(	O
B_TYPE	O
(	O
bk	*
->	O
type	enum
)	O
==	O
B_DUPLICATE	int
)	O
{	O
pgno	int
=	O
GET_BOVERFLOW	O
(	O
h	int
,	O
indx	double
)	O
->	O
pgno	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_31_offdup	function
(	O
dbp	*
,	O
real_name	*
,	O
fhp	*
,	O
LF_ISSET	O
(	O
DB_DUPSORT	int
)	O
?	O
1	int
:	O
0	int
,	O
&	O
pgno	int
)	O
)	O
!=	O
0	int
)	O
break	O
;	O
if	O
(	O
pgno	int
!=	O
GET_BOVERFLOW	O
(	O
h	int
,	O
indx	double
)	O
->	O
pgno	int
)	O
{	O
*	O
dirtyp	*
=	O
1	int
;	O
GET_BOVERFLOW	O
(	O
h	*
,	O
indx	short
)	O
->	O
pgno	int
=	O
pgno	int
;	O
}	O
}	O
}	O
return	O
(	O
ret	int
)	O
;	O
}	O