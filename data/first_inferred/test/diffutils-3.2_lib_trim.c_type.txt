char	O
*	O
trim2	function
(	O
const	O
char	O
*	O
s	O
,	O
int	O
how	int
)	O
{	O
char	O
*	O
d	*
;	O
d	*
=	O
strdup	function
(	O
s	long
)	O
;	O
if	O
(	O
!	O
d	*
)	O
xalloc_die	function
(	O
)	O
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
{	O
mbi_iterator_t	struct
i	struct
;	O
if	O
(	O
how	int
!=	O
TRIM_TRAILING	int
)	O
{	O
mbi_init	O
(	O
i	struct
,	O
d	*
,	O
strlen	function
(	O
d	*
)	O
)	O
;	O
for	O
(	O
;	O
mbi_avail	O
(	O
i	struct
)	O
&&	O
mb_isspace	O
(	O
mbi_cur	O
(	O
i	struct
)	O
)	O
;	O
mbi_advance	O
(	O
i	struct
)	O
)	O
;	O
memmove	function
(	O
d	*
,	O
mbi_cur_ptr	O
(	O
i	struct
)	O
,	O
strlen	function
(	O
mbi_cur_ptr	O
(	O
i	struct
)	O
)	O
+	O
1	int
)	O
;	O
}	O
if	O
(	O
how	int
!=	O
TRIM_LEADING	int
)	O
{	O
unsigned	O
int	O
state	*
=	O
0	int
;	O
char	O
*	O
r	*
IF_LINT	O
(	O
=	O
NULL	O
)	O
;	O
mbi_init	O
(	O
i	struct
,	O
d	*
,	O
strlen	function
(	O
d	*
)	O
)	O
;	O
for	O
(	O
;	O
mbi_avail	O
(	O
i	struct
)	O
;	O
mbi_advance	O
(	O
i	struct
)	O
)	O
{	O
if	O
(	O
state	*
==	O
0	int
&&	O
mb_isspace	O
(	O
mbi_cur	O
(	O
i	struct
)	O
)	O
)	O
continue	O
;	O
if	O
(	O
state	*
==	O
0	int
&&	O
!	O
mb_isspace	O
(	O
mbi_cur	O
(	O
i	struct
)	O
)	O
)	O
{	O
state	*
=	O
1	int
;	O
continue	O
;	O
}	O
if	O
(	O
state	*
==	O
1	int
&&	O
!	O
mb_isspace	O
(	O
mbi_cur	O
(	O
i	struct
)	O
)	O
)	O
continue	O
;	O
if	O
(	O
state	*
==	O
1	int
&&	O
mb_isspace	O
(	O
mbi_cur	O
(	O
i	struct
)	O
)	O
)	O
{	O
state	*
=	O
2	int
;	O
r	*
=	O
(	O
char	O
*	O
)	O
mbi_cur_ptr	O
(	O
i	struct
)	O
;	O
}	O
else	O
if	O
(	O
state	*
==	O
2	int
&&	O
mb_isspace	O
(	O
mbi_cur	O
(	O
i	struct
)	O
)	O
)	O
{	O
}	O
else	O
{	O
state	*
=	O
1	int
;	O
}	O
}	O
if	O
(	O
state	*
==	O
2	int
)	O
*	O
r	*
=	O
'\0'	O
;	O
}	O
}	O
else	O
{	O
char	O
*	O
p	*
;	O
if	O
(	O
how	int
!=	O
TRIM_TRAILING	int
)	O
{	O
for	O
(	O
p	*
=	O
d	*
;	O
*	O
p	*
&&	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
p	*
)	O
;	O
p	*
++	O
)	O
;	O
memmove	function
(	O
d	*
,	O
p	*
,	O
strlen	function
(	O
p	*
)	O
+	O
1	int
)	O
;	O
}	O
if	O
(	O
how	int
!=	O
TRIM_LEADING	int
)	O
{	O
for	O
(	O
p	*
=	O
d	*
+	O
strlen	function
(	O
d	*
)	O
-	O
1	int
;	O
p	*
>=	O
d	*
&&	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
p	*
)	O
;	O
p	*
--	O
)	O
*	O
p	*
=	O
'\0'	O
;	O
}	O
}	O
return	O
d	*
;	O
}	O