const	O
char	O
_uuconf_cmdlin_rcsid	array
[	O
]	O
=	O
"$Id: cmdlin.c,v 1.7 2002/03/05 19:10:42 ian Rel $"	*
;	O
int	O
uuconf_cmd_line	function
(	O
pglobal	*
,	O
zline	*
,	O
qtab	*
,	O
pinfo	*
,	O
pfiunknown	*
,	O
iflags	int
,	O
pblock	*
)	O
pointer	*
pglobal	*
;	O
char	O
*	O
zline	*
;	O
const	O
struct	O
uuconf_cmdtab	struct
*	O
qtab	*
;	O
pointer	*
pinfo	*
;	O
int	O
(	O
*	O
pfiunknown	*
)	O
P	O
(	O
(	O
pointer	*
,	O
int	O
,	O
char	O
*	O
*	O
,	O
pointer	*
,	O
pointer	*
)	O
)	O
;	O
int	O
iflags	int
;	O
pointer	*
pblock	*
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	*
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	*
;	O
char	O
*	O
z	*
;	O
int	O
cargs	int
;	O
char	O
*	O
azargs	array
[	O
CSTACK	int
]	O
;	O
char	O
*	O
*	O
pzargs	*
;	O
int	O
iret	int
;	O
if	O
(	O
(	O
iflags	int
&	O
UUCONF_CMDTABFLAG_NOCOMMENTS	int
)	O
==	O
0	int
)	O
{	O
z	*
=	O
zline	*
;	O
while	O
(	O
(	O
z	*
=	O
strchr	function
(	O
z	*
,	O
'#'	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
z	*
==	O
zline	*
||	O
*	O
(	O
z	*
-	O
1	int
)	O
!=	O
'\\'	O
)	O
{	O
*	O
z	*
=	O
'\0'	O
;	O
break	O
;	O
}	O
while	O
(	O
(	O
*	O
(	O
z	*
-	O
1	int
)	O
=	O
*	O
z	*
)	O
!=	O
'\0'	O
)	O
++	O
z	*
;	O
}	O
}	O
z	*
=	O
zline	*
;	O
cargs	int
=	O
0	int
;	O
pzargs	*
=	O
azargs	array
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
*	O
z	*
!=	O
'\0'	O
&&	O
isspace	function
(	O
BUCHAR	O
(	O
*	O
z	*
)	O
)	O
)	O
++	O
z	*
;	O
if	O
(	O
*	O
z	*
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
cargs	int
>=	O
CSTACK	int
)	O
{	O
char	O
*	O
*	O
pzsplit	*
;	O
size_t	long
csplit	*
;	O
int	O
cmore	int
;	O
pzsplit	*
=	O
NULL	O
;	O
csplit	*
=	O
0	int
;	O
cmore	int
=	O
_uuconf_istrsplit	function
(	O
z	*
,	O
'\0'	O
,	O
&	O
pzsplit	*
,	O
&	O
csplit	*
)	O
;	O
if	O
(	O
cmore	int
<	O
0	int
)	O
{	O
qglobal	*
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
pzargs	*
=	O
(	O
char	O
*	O
*	O
)	O
malloc	function
(	O
(	O
cmore	*
+	O
CSTACK	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
pzargs	*
==	O
NULL	O
)	O
{	O
qglobal	*
->	O
ierrno	int
=	O
errno	O
;	O
free	function
(	O
(	O
pointer	*
)	O
pzsplit	*
)	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	*
)	O
pzargs	*
,	O
(	O
pointer	*
)	O
azargs	array
,	O
CSTACK	struct
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
memcpy	function
(	O
(	O
pointer	*
)	O
(	O
pzargs	*
+	O
CSTACK	*
)	O
,	O
(	O
pointer	*
)	O
pzsplit	*
,	O
cmore	struct
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
cargs	O
=	O
cmore	*
+	O
CSTACK	int
;	O
free	function
(	O
(	O
pointer	*
)	O
pzsplit	*
)	O
;	O
break	O
;	O
}	O
azargs	array
[	O
cargs	int
]	O
=	O
z	*
;	O
++	O
cargs	int
;	O
while	O
(	O
*	O
z	*
!=	O
'\0'	O
&&	O
!	O
isspace	function
(	O
BUCHAR	O
(	O
*	O
z	*
)	O
)	O
)	O
z	*
++	O
;	O
if	O
(	O
*	O
z	*
==	O
'\0'	O
)	O
break	O
;	O
*	O
z	*
++	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
cargs	int
<=	O
0	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
iret	int
=	O
uuconf_cmd_args	function
(	O
pglobal	*
,	O
cargs	int
,	O
pzargs	*
,	O
qtab	*
,	O
pinfo	*
,	O
pfiunknown	*
,	O
iflags	int
,	O
pblock	*
)	O
;	O
if	O
(	O
pzargs	*
!=	O
azargs	int
)	O
free	function
(	O
(	O
pointer	*
)	O
pzargs	*
)	O
;	O
return	O
iret	int
;	O
}	O