struct	O
port_bucket	O
*	O
cons_port_bucket	*
;	O
struct	O
port_class	O
*	O
cons_port_class	*
;	O
error_t	O
cons_init	function
(	O
void	O
)	O
{	O
error_t	int
err	O
;	O
cons_t	*
cons	O
;	O
cons_notify_t	O
dir_notify_port	int
;	O
mach_port_t	O
dir_notify	int
;	O
cons_port_bucket	*
=	O
ports_create_bucket	function
(	O
)	O
;	O
if	O
(	O
!	O
cons_port_bucket	int
)	O
return	O
errno	O
;	O
cons_port_class	int
=	O
ports_create_class	function
(	O
cons_vcons_destroy	*
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
cons_port_class	*
)	O
return	O
errno	O
;	O
cons	int
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
cons	*
)	O
)	O
;	O
if	O
(	O
!	O
cons	int
)	O
return	O
errno	O
;	O
pthread_mutex_init	function
(	O
&	O
cons	int
->	O
lock	O
,	O
NULL	O
)	O
;	O
cons	*
->	O
vcons_list	struct
=	O
NULL	O
;	O
cons	*
->	O
vcons_last	*
=	O
NULL	O
;	O
cons	int
->	O
dir	*
=	O
opendir	function
(	O
cons_file	*
)	O
;	O
cons	*
->	O
slack	*
=	O
_cons_slack	int
;	O
if	O
(	O
!	O
cons	int
->	O
dir	*
)	O
{	O
free	function
(	O
cons	*
)	O
;	O
return	O
errno	O
;	O
}	O
cons	*
->	O
dirport	int
=	O
getdport	function
(	O
dirfd	function
(	O
cons	int
->	O
dir	*
)	O
)	O
;	O
if	O
(	O
cons	int
->	O
dirport	int
==	O
MACH_PORT_NULL	O
)	O
{	O
closedir	function
(	O
cons	int
->	O
dir	*
)	O
;	O
free	function
(	O
cons	int
)	O
;	O
return	O
errno	O
;	O
}	O
err	int
=	O
ports_create_port	function
(	O
cons_port_class	*
,	O
cons_port_bucket	*
,	O
sizeof	O
(	O
*	O
dir_notify_port	*
)	O
,	O
&	O
dir_notify_port	O
)	O
;	O
if	O
(	O
err	int
)	O
{	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
cons	O
->	O
dirport	O
)	O
;	O
closedir	function
(	O
cons	O
->	O
dir	O
)	O
;	O
free	function
(	O
cons	O
)	O
;	O
return	O
err	O
;	O
}	O
dir_notify_port	*
->	O
cons	int
=	O
cons	int
;	O
dir_notify	int
=	O
ports_get_right	function
(	O
dir_notify_port	int
)	O
;	O
err	int
=	O
dir_notice_changes	function
(	O
cons	int
->	O
dirport	*
,	O
dir_notify	O
,	O
MACH_MSG_TYPE_MAKE_SEND	O
)	O
;	O
if	O
(	O
err	int
)	O
{	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
cons	int
->	O
dirport	O
)	O
;	O
closedir	function
(	O
cons	O
->	O
dir	O
)	O
;	O
free	function
(	O
cons	O
)	O
;	O
return	O
err	int
;	O
}	O
return	O
0	int
;	O
}	O