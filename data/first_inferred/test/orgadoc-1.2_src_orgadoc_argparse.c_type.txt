static	O
struct	O
option	struct
const	O
long_options	array
[	O
]	O
=	O
{	O
{	O
"help"	*
,	O
0	int
,	O
0	int
,	O
opt_help	int
}	O
,	O
{	O
"version"	*
,	O
0	int
,	O
0	int
,	O
opt_version	int
}	O
,	O
{	O
"html"	*
,	O
0	int
,	O
0	int
,	O
opt_generate_html	int
}	O
,	O
{	O
"bibtex"	*
,	O
0	int
,	O
0	int
,	O
opt_generate_bibtex	int
}	O
,	O
{	O
"latex"	*
,	O
0	int
,	O
0	int
,	O
opt_generate_latex	int
}	O
,	O
{	O
"json"	*
,	O
0	int
,	O
0	int
,	O
opt_generate_json	int
}	O
,	O
{	O
"text"	*
,	O
0	int
,	O
0	int
,	O
opt_generate_text	int
}	O
,	O
{	O
"search"	*
,	O
0	int
,	O
0	int
,	O
opt_search_file	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
const	O
char	O
short_options	array
[	O
]	O
=	O
"hvtbljps"	*
;	O
void	O
parse_args	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*
)	O
{	O
int	O
c	int
;	O
char	O
*	O
readme	*
=	O
argv	*
[	O
2	int
]	O
;	O
char	O
*	O
file	*
=	O
argv	*
[	O
2	int
]	O
;	O
while	O
(	O
(	O
c	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	array
,	O
short_options	*
,	O
long_options	array
,	O
NULL	O
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
switch	O
(	O
c	int
)	O
{	O
case	O
opt_help	int
:	O
help	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
break	O
;	O
case	O
opt_version	int
:	O
version	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
break	O
;	O
case	O
opt_generate_html	int
:	O
html	int
=	O
1	int
;	O
orgadoc_html_start_tags	function
(	O
)	O
;	O
orgadoc_xml_parser	function
(	O
readme	*
)	O
;	O
orgadoc_html_end_tags	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
opt_generate_bibtex	int
:	O
bibtex	int
=	O
1	int
;	O
orgadoc_bibtex_start_tags	function
(	O
)	O
;	O
orgadoc_xml_parser	function
(	O
readme	*
)	O
;	O
orgadoc_bibtex_end_tags	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
opt_generate_latex	int
:	O
latex	int
=	O
1	int
;	O
orgadoc_latex_start_tags	function
(	O
)	O
;	O
orgadoc_xml_parser	function
(	O
readme	*
)	O
;	O
orgadoc_latex_end_tags	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
opt_generate_json	int
:	O
json	int
=	O
1	int
;	O
orgadoc_json_start_tags	function
(	O
)	O
;	O
orgadoc_xml_parser	function
(	O
readme	*
)	O
;	O
orgadoc_json_end_tags	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
opt_generate_text	int
:	O
text	*
=	O
1	int
;	O
orgadoc_text_start_tags	function
(	O
)	O
;	O
orgadoc_xml_parser	function
(	O
readme	*
)	O
;	O
orgadoc_text_end_tags	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
opt_search_file	int
:	O
orgadoc_search	function
(	O
file	*
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
default	O
:	O
help	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
}	O