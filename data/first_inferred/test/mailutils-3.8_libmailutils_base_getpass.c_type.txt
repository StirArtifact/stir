int	O
mu_getpass	function
(	O
mu_stream_t	*
in	*
,	O
mu_stream_t	*
out	*
,	O
const	O
char	O
*	O
prompt	*
,	O
char	O
*	O
*	O
passptr	*
)	O
{	O
int	O
status	int
;	O
int	O
echo_state	int
=	O
0	int
;	O
size_t	long
size	long
=	O
0	int
;	O
char	O
*	O
buf	*
=	O
NULL	O
;	O
status	int
=	O
mu_stream_write	function
(	O
out	*
,	O
prompt	*
,	O
strlen	function
(	O
prompt	*
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_stream_flush	function
(	O
out	*
)	O
;	O
status	int
=	O
mu_stream_ioctl	function
(	O
in	*
,	O
MU_IOCTL_ECHO	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
echo_state	struct
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
echo_state	int
=	O
1	int
;	O
status	int
=	O
mu_stream_getline	function
(	O
in	*
,	O
&	O
buf	*
,	O
&	O
size	long
,	O
NULL	O
)	O
;	O
if	O
(	O
echo_state	*
)	O
{	O
mu_stream_ioctl	function
(	O
in	*
,	O
MU_IOCTL_ECHO	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
echo_state	struct
)	O
;	O
mu_stream_write	function
(	O
out	*
,	O
"\n"	*
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_rtrim_cset	function
(	O
buf	*
,	O
"\n"	*
)	O
;	O
*	O
passptr	*
=	O
buf	*
;	O
}	O
return	O
0	int
;	O
}	O