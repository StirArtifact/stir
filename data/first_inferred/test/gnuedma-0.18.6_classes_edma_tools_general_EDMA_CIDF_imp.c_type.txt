ESint32	int
EDMAPROC	O
EDMA_CIDFParseU32	function
(	O
OBJID	int
obj	int
,	O
CLASSID	long
idc	int
)	O
{	O
CIF_CLASS	struct
*	O
the_class	pointer
;	O
EChar	char
fn	pointer
[	O
2048	int
]	O
;	O
EChar	char
namespace	array
[	O
1024	int
]	O
;	O
EPChar	pointer
path	pointer
;	O
EChar	char
aux	array
[	O
1024	int
]	O
,	O
sig	pointer
[	O
1024	int
]	O
,	O
*	O
asig	pointer
;	O
ESint32	int
i	int
,	O
j	int
,	O
repo_type	int
;	O
path	pointer
=	O
edma_get_class_repo_dir	function
(	O
idc	int
)	O
;	O
edma_get_class_name	function
(	O
idc	int
,	O
aux	array
)	O
;	O
if	O
(	O
(	O
repo_type	int
=	O
edma_get_class_repo_type	function
(	O
idc	int
)	O
)	O
==	O
0	int
)	O
{	O
edma_get_class_namespace	function
(	O
idc	int
,	O
namespace	pointer
)	O
;	O
sprintf	function
(	O
fn	pointer
,	O
"%s/share/edma/idf/%s/%s.cidf"	pointer
,	O
path	pointer
,	O
namespace	pointer
,	O
aux	pointer
)	O
;	O
}	O
else	O
{	O
char	O
*	O
rn	pointer
=	O
edma_get_class_repo_name	function
(	O
idc	long
)	O
;	O
edma_get_class_namespace	function
(	O
idc	long
,	O
namespace	pointer
)	O
;	O
sprintf	function
(	O
fn	pointer
,	O
"%s/%s/idf/%s/%s.cidf"	pointer
,	O
path	pointer
,	O
rn	long
,	O
namespace	pointer
,	O
aux	pointer
)	O
;	O
}	O
edma_printf_obj	function
(	O
obj	pointer
,	O
"Parsing Class %d:'%s': Repo: %d. Parser Object: %d"	pointer
,	O
idc	int
,	O
aux	pointer
,	O
repo_type	pointer
,	O
obj	pointer
)	O
;	O
edma_printf_obj	function
(	O
obj	pointer
,	O
"Using IDF file : %s"	pointer
,	O
fn	pointer
)	O
;	O
the_class	pointer
=	O
cidf_parse	function
(	O
fn	pointer
)	O
;	O
edma_idf_set_def	function
(	O
idc	int
,	O
the_class	pointer
->	O
n_prop	pointer
,	O
the_class	pointer
->	O
n_met	pointer
,	O
0	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
the_class	pointer
->	O
n_prop	int
;	O
i	int
++	O
)	O
{	O
edma_idf_set_prop	function
(	O
idc	int
,	O
i	int
,	O
the_class	pointer
->	O
prop	pointer
[	O
i	int
]	O
->	O
name	pointer
,	O
the_class	pointer
->	O
prop	pointer
[	O
i	int
]	O
->	O
type	int
,	O
the_class	pointer
->	O
prop	pointer
[	O
i	int
]	O
->	O
access	int
,	O
0	int
,	O
NULL	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
the_class	pointer
->	O
n_met	int
;	O
i	int
++	O
)	O
{	O
memset	function
(	O
sig	int
,	O
0	int
,	O
1024	int
)	O
;	O
asig	pointer
=	O
sig	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
n_param	int
;	O
j	int
++	O
)	O
{	O
EUint32	long
type_id	long
;	O
EChar	char
type_sig	array
[	O
256	int
]	O
;	O
type_id	int
=	O
edma_get_type_id	function
(	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
param	pointer
[	O
j	int
]	O
->	O
type	pointer
)	O
;	O
memset	function
(	O
type_sig	pointer
,	O
0	int
,	O
256	int
)	O
;	O
edma_get_type_sig	function
(	O
type_id	pointer
,	O
type_sig	pointer
)	O
;	O
asig	int
+=	O
sprintf	function
(	O
asig	pointer
,	O
"%s"	pointer
,	O
type_sig	pointer
)	O
;	O
}	O
{	O
EUint32	long
type_id	long
;	O
EChar	char
type_sig	array
[	O
256	int
]	O
;	O
type_id	int
=	O
edma_get_type_id	function
(	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
rtype	pointer
)	O
;	O
memset	function
(	O
type_sig	pointer
,	O
0	int
,	O
256	int
)	O
;	O
edma_get_type_sig	function
(	O
type_id	pointer
,	O
type_sig	pointer
)	O
;	O
asig	int
+=	O
sprintf	function
(	O
asig	pointer
,	O
"r%s"	pointer
,	O
type_sig	pointer
)	O
;	O
}	O
printf	function
(	O
"Generated signature is: '%s'\n"	pointer
,	O
sig	int
)	O
;	O
if	O
(	O
!	O
repo_type	pointer
)	O
edma_idf_set_met	function
(	O
idc	int
,	O
i	int
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
name	pointer
,	O
sig	int
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
flags	array
[	O
1	int
]	O
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
flags	array
[	O
0	int
]	O
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
flags	array
[	O
2	int
]	O
)	O
;	O
else	O
edma_idf_set_met	function
(	O
idc	long
,	O
i	long
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
name	pointer
,	O
""	pointer
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
flags	array
[	O
1	int
]	O
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
flags	array
[	O
0	int
]	O
,	O
the_class	pointer
->	O
met	array
[	O
i	int
]	O
->	O
flags	array
[	O
2	int
]	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
the_class	pointer
->	O
n_sc	int
;	O
i	int
++	O
)	O
{	O
edma_add_local_class_superclass_by_name	function
(	O
idc	long
,	O
the_class	pointer
->	O
sc	pointer
[	O
i	int
]	O
->	O
name	pointer
,	O
the_class	pointer
->	O
sc	pointer
[	O
i	int
]	O
->	O
ap	pointer
,	O
the_class	pointer
->	O
sc	pointer
[	O
i	int
]	O
->	O
ap1	O
)	O
;	O
}	O
edma_printf_obj	function
(	O
obj	int
,	O
"Registering class %d:%s:%s"	pointer
,	O
idc	int
,	O
the_class	pointer
->	O
name	pointer
,	O
aux	int
)	O
;	O
if	O
(	O
repo_type	int
)	O
edma_idf_set_class_id1	function
(	O
idc	int
)	O
;	O
else	O
edma_idf_set_class_id	function
(	O
idc	long
)	O
;	O
cidf_free_data	function
(	O
the_class	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMA_CIDF_class_factory	function
(	O
)	O
{	O
CLASSID	int
cid	int
;	O
cid	int
=	O
edma_idf_get_free_class_id	function
(	O
EDMA_LOCAL_CLASS	int
)	O
;	O
edma_idf_set_class_name	function
(	O
cid	int
,	O
"EDMA_CIDF"	pointer
)	O
;	O
edma_idf_set_class_namespace	function
(	O
cid	int
,	O
""	pointer
)	O
;	O
edma_idf_set_class_version	function
(	O
cid	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	function
(	O
cid	int
,	O
"Parse"	pointer
,	O
"U32"	pointer
,	O
(	O
PPROC	pointer
)	O
EDMA_CIDFParseU32	function
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_idf_set_class_id	function
(	O
cid	int
)	O
;	O
return	O
0	int
;	O
}	O