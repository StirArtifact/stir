int	O
mu_string_unfold	function
(	O
char	O
*	O
text	*
,	O
size_t	long
*	O
plen	*
)	O
{	O
char	O
*	O
p	*
,	O
*	O
q	*
;	O
enum	O
uf_state	enum
{	O
uf_init	int
,	O
uf_nl	int
,	O
uf_fold	int
}	O
state	*
=	O
uf_init	int
;	O
if	O
(	O
!	O
text	*
)	O
return	O
EINVAL	int
;	O
for	O
(	O
p	*
=	O
q	*
=	O
text	*
;	O
*	O
q	*
;	O
q	*
++	O
)	O
{	O
switch	O
(	O
state	*
)	O
{	O
case	O
uf_init	int
:	O
if	O
(	O
*	O
q	*
==	O
'\n'	O
)	O
state	*
=	O
uf_nl	int
;	O
else	O
*	O
p	*
++	O
=	O
*	O
q	*
;	O
break	O
;	O
case	O
uf_nl	int
:	O
if	O
(	O
ISSPACE	O
(	O
*	O
q	*
)	O
)	O
state	*
=	O
uf_fold	int
;	O
else	O
{	O
state	*
=	O
uf_init	int
;	O
*	O
p	*
++	O
=	O
*	O
q	*
;	O
}	O
break	O
;	O
case	O
uf_fold	int
:	O
if	O
(	O
!	O
ISSPACE	O
(	O
*	O
q	*
)	O
)	O
{	O
*	O
p	*
++	O
=	O
' '	O
;	O
*	O
p	*
++	O
=	O
*	O
q	*
;	O
state	*
=	O
uf_init	int
;	O
}	O
break	O
;	O
}	O
}	O
*	O
p	*
++	O
=	O
0	int
;	O
if	O
(	O
plen	long
)	O
*	O
plen	*
=	O
p	*
-	O
text	*
;	O
return	O
0	int
;	O
}	O