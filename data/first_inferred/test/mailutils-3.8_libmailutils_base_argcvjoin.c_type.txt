int	O
mu_argcv_join	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
char	O
*	O
delim	pointer
,	O
enum	O
mu_argcv_escape	enum
esc	enum
,	O
char	O
*	O
*	O
pstring	pointer
)	O
{	O
size_t	long
i	long
,	O
j	int
,	O
len	int
;	O
char	O
*	O
buffer	pointer
;	O
size_t	long
delimlen	long
=	O
strlen	function
(	O
delim	pointer
)	O
;	O
int	O
quote_hex	int
=	O
0	int
;	O
if	O
(	O
pstring	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
buffer	pointer
=	O
malloc	function
(	O
1	int
)	O
;	O
if	O
(	O
buffer	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
*	O
buffer	pointer
=	O
'\0'	O
;	O
for	O
(	O
len	long
=	O
i	long
=	O
j	long
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
int	O
quote	int
;	O
int	O
toklen	int
;	O
switch	O
(	O
esc	int
)	O
{	O
case	O
mu_argcv_escape_no	int
:	O
toklen	int
=	O
strlen	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
quote	int
=	O
0	int
;	O
break	O
;	O
case	O
mu_argcv_escape_c	int
:	O
toklen	pointer
=	O
mu_wordsplit_c_quoted_length	function
(	O
argv	pointer
[	O
i	int
]	O
,	O
quote_hex	pointer
,	O
&	O
quote	char
)	O
;	O
break	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
len	int
+=	O
toklen	int
+	O
delimlen	int
;	O
if	O
(	O
quote	pointer
)	O
len	long
+=	O
2	int
;	O
buffer	pointer
=	O
realloc	function
(	O
buffer	pointer
,	O
len	int
+	O
1	int
)	O
;	O
if	O
(	O
buffer	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
memcpy	function
(	O
buffer	pointer
+	O
j	int
,	O
delim	int
,	O
delimlen	int
)	O
;	O
j	int
+=	O
delimlen	int
;	O
}	O
if	O
(	O
quote	pointer
)	O
buffer	pointer
[	O
j	int
++	O
]	O
=	O
'"'	O
;	O
switch	O
(	O
esc	int
)	O
{	O
case	O
mu_argcv_escape_no	int
:	O
memcpy	function
(	O
buffer	pointer
+	O
j	int
,	O
argv	pointer
[	O
i	int
]	O
,	O
toklen	pointer
)	O
;	O
break	O
;	O
case	O
mu_argcv_escape_c	int
:	O
mu_wordsplit_c_quote_copy	function
(	O
buffer	pointer
+	O
j	int
,	O
argv	pointer
[	O
i	int
]	O
,	O
quote_hex	pointer
)	O
;	O
break	O
;	O
}	O
j	int
+=	O
toklen	int
;	O
if	O
(	O
quote	pointer
)	O
buffer	pointer
[	O
j	int
++	O
]	O
=	O
'"'	O
;	O
}	O
buffer	pointer
[	O
j	int
]	O
=	O
0	int
;	O
*	O
pstring	pointer
=	O
buffer	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_argcv_string	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
char	O
*	O
*	O
pstring	pointer
)	O
{	O
return	O
mu_argcv_join	function
(	O
argc	int
,	O
argv	pointer
,	O
" "	pointer
,	O
mu_argcv_escape_c	pointer
,	O
pstring	pointer
)	O
;	O
}	O