typedef	O
void	O
(	O
*	O
sig_t	pointer
)	O
(	O
int	O
)	O
;	O
static	O
void	O
connect_timed_out	function
(	O
void	O
)	O
;	O
byte	char
*	O
hostname_or_ip_to_address	function
(	O
char	O
*	O
hostname_specifier	pointer
)	O
;	O
int	O
tcp_fast_connections	int
=	O
0	int
;	O
static	O
int	O
connection_timeout_counter	int
=	O
TCP_TIME_OUT	int
;	O
static	O
int	O
allow_time_outs	int
=	O
TCP_ALLOW_TIMEOUTS	int
;	O
typedef	O
void	O
SIGFUN	function
(	O
int	O
sig	int
)	O
;	O
int	O
tcp_to_host	function
(	O
char	O
*	O
host	pointer
,	O
char	O
*	O
service	pointer
)	O
{	O
struct	O
sockaddr_in	struct
name	pointer
;	O
byte	char
*	O
address	pointer
;	O
int	O
connection	pointer
;	O
address	long
=	O
hostname_or_ip_to_address	function
(	O
host	pointer
)	O
;	O
if	O
(	O
!	O
address	long
)	O
return	O
(	O
-	O
1	int
)	O
;	O
memset	function
(	O
&	O
name	pointer
,	O
0	int
,	O
sizeof	O
(	O
name	pointer
)	O
)	O
;	O
name	pointer
.	O
sin_family	short
=	O
AF_INET	O
;	O
memcpy	function
(	O
&	O
name	pointer
.	O
sin_addr	struct
.	O
s_addr	int
,	O
address	array
,	O
4	int
)	O
;	O
if	O
(	O
isdigit	function
(	O
*	O
service	pointer
)	O
)	O
name	pointer
.	O
sin_port	enum
=	O
htons	function
(	O
atoi	function
(	O
service	pointer
)	O
)	O
;	O
else	O
{	O
struct	O
servent	struct
*	O
server	int
;	O
server	int
=	O
getservbyname	function
(	O
service	pointer
,	O
"tcp"	pointer
)	O
;	O
if	O
(	O
!	O
server	int
)	O
return	O
(	O
-	O
1	int
)	O
;	O
name	pointer
.	O
sin_port	enum
=	O
server	pointer
->	O
s_port	int
;	O
}	O
connection	pointer
=	O
socket	function
(	O
PF_INET	int
,	O
SOCK_STREAM	int
,	O
IP	int
)	O
;	O
if	O
(	O
connection	int
<	O
0	int
)	O
return	O
(	O
-	O
1	int
)	O
;	O
{	O
int	O
error	int
;	O
if	O
(	O
allow_time_outs	int
)	O
{	O
signal	function
(	O
SIGALRM	int
,	O
(	O
sig_t	O
)	O
connect_timed_out	function
)	O
;	O
alarm	function
(	O
connection_timeout_counter	int
)	O
;	O
error	function
=	O
connect	function
(	O
connection	pointer
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
name	pointer
,	O
sizeof	O
(	O
name	pointer
)	O
)	O
;	O
alarm	function
(	O
0	int
)	O
;	O
signal	function
(	O
SIGALRM	int
,	O
(	O
SIGFUN	struct
*	O
)	O
NULL	O
)	O
;	O
}	O
else	O
error	pointer
=	O
connect	function
(	O
connection	pointer
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
name	pointer
,	O
sizeof	O
(	O
name	pointer
)	O
)	O
;	O
if	O
(	O
error	int
<	O
0	int
)	O
{	O
close	pointer
(	O
connection	pointer
)	O
;	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
}	O
return	O
(	O
connection	pointer
)	O
;	O
}	O
static	O
void	O
connect_timed_out	function
(	O
void	O
)	O
{	O
alarm	function
(	O
0	int
)	O
;	O
}	O
static	O
byte	char
address_buffer	array
[	O
8	int
]	O
;	O
byte	char
*	O
hostname_or_ip_to_address	function
(	O
char	O
*	O
hostname_specifier	pointer
)	O
{	O
struct	O
hostent	struct
*	O
entry	pointer
;	O
{	O
register	O
int	O
i	int
,	O
dots	int
=	O
0	int
,	O
invalid	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
hostname_specifier	pointer
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
hostname_specifier	pointer
[	O
i	int
]	O
==	O
'.'	O
)	O
dots	int
++	O
;	O
else	O
if	O
(	O
!	O
isdigit	function
(	O
hostname_specifier	pointer
[	O
i	int
]	O
)	O
)	O
{	O
invalid	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
dots	int
==	O
3	int
&&	O
!	O
invalid	int
)	O
{	O
int	O
offset	int
=	O
0	int
;	O
i	int
=	O
0	int
;	O
while	O
(	O
hostname_specifier	array
[	O
i	int
]	O
)	O
{	O
int	O
number	int
=	O
0	int
;	O
while	O
(	O
(	O
hostname_specifier	array
[	O
i	int
]	O
!=	O
'\0'	O
)	O
&&	O
(	O
hostname_specifier	array
[	O
i	int
]	O
!=	O
'.'	O
)	O
)	O
number	int
=	O
(	O
number	int
*	O
10	int
)	O
+	O
hostname_specifier	array
[	O
i	int
++	O
]	O
-	O
'0'	O
;	O
address_buffer	array
[	O
offset	int
++	O
]	O
=	O
number	int
;	O
if	O
(	O
hostname_specifier	array
[	O
i	int
]	O
)	O
i	int
++	O
;	O
}	O
return	O
(	O
address_buffer	int
)	O
;	O
}	O
}	O
entry	pointer
=	O
gethostbyname	function
(	O
hostname_specifier	pointer
)	O
;	O
if	O
(	O
entry	int
)	O
{	O
memcpy	function
(	O
address_buffer	pointer
,	O
entry	pointer
->	O
h_addr	O
,	O
4	int
)	O
;	O
return	O
(	O
address_buffer	pointer
)	O
;	O
}	O
else	O
return	O
(	O
(	O
byte	char
*	O
)	O
NULL	O
)	O
;	O
}	O