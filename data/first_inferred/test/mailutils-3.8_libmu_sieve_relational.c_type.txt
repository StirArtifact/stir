DCL	function
(	O
eq	int
,	O
==	O
)	O
DCL	function
(	O
ne	*
,	O
!=	O
)	O
DCL	function
(	O
gt	*
,	O
>	O
)	O
DCL	function
(	O
ge	*
,	O
>=	O
)	O
DCL	function
(	O
lt	*
,	O
<	O
)	O
DCL	function
(	O
le	*
,	O
<=	O
)	O
static	O
struct	O
reltest_tab	O
{	O
char	O
*	O
name	*
;	O
mu_sieve_relcmp_t	enum
test	enum
;	O
mu_sieve_relcmpn_t	*
stest	*
;	O
}	O
testtab	array
[	O
]	O
=	O
{	O
DEF	function
(	O
eq	int
)	O
,	O
DEF	function
(	O
ne	*
)	O
,	O
DEF	function
(	O
gt	int
)	O
,	O
DEF	function
(	O
ge	*
)	O
,	O
DEF	function
(	O
lt	*
)	O
,	O
DEF	function
(	O
le	*
)	O
}	O
;	O
static	O
struct	O
reltest_tab	struct
*	O
_relcmp_lookup	function
(	O
const	O
char	O
*	O
str	*
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sizeof	O
(	O
testtab	array
)	O
/	O
sizeof	O
(	O
testtab	array
[	O
0	int
]	O
)	O
;	O
i	int
++	O
)	O
if	O
(	O
strcmp	function
(	O
testtab	array
[	O
i	int
]	O
.	O
name	*
,	O
str	*
)	O
==	O
0	int
)	O
return	O
&	O
testtab	array
[	O
i	int
]	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_sieve_str_to_relcmp	function
(	O
const	O
char	O
*	O
str	*
,	O
mu_sieve_relcmp_t	struct
*	O
test	enum
,	O
mu_sieve_relcmpn_t	struct
*	O
stest	*
)	O
{	O
struct	O
reltest_tab	struct
*	O
t	*
=	O
_relcmp_lookup	function
(	O
str	*
)	O
;	O
if	O
(	O
t	*
)	O
{	O
if	O
(	O
test	enum
)	O
*	O
test	enum
=	O
t	*
->	O
test	char
;	O
if	O
(	O
stest	*
)	O
*	O
stest	*
=	O
t	*
->	O
stest	int
;	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
mu_sieve_relcmp_t	O
mu_sieve_get_relcmp	function
(	O
mu_sieve_machine_t	*
mach	*
)	O
{	O
char	O
*	O
str	*
;	O
mu_sieve_relcmp_t	struct
test	*
=	O
NULL	O
;	O
if	O
(	O
mu_sieve_get_tag	function
(	O
mach	*
,	O
"value"	*
,	O
SVT_STRING	int
,	O
&	O
str	*
)	O
==	O
0	int
)	O
return	O
op_ne	*
;	O
mu_sieve_str_to_relcmp	function
(	O
str	*
,	O
&	O
test	char
,	O
NULL	O
)	O
;	O
return	O
test	int
;	O
}	O
int	O
mu_sieve_require_relational	function
(	O
mu_sieve_machine_t	*
mach	*
,	O
const	O
char	O
*	O
name	*
)	O
{	O
return	O
0	int
;	O
}	O