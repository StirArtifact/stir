typedef	O
struct	O
{	O
double	O
*	O
k	pointer
;	O
double	O
*	O
y0	function
;	O
double	O
*	O
y0_orig	pointer
;	O
double	O
*	O
y_onestep	pointer
;	O
}	O
gear1_state_t	struct
;	O
static	O
void	O
*	O
gear1_alloc	function
(	O
size_t	long
dim	long
)	O
{	O
gear1_state_t	struct
*	O
state	pointer
=	O
(	O
gear1_state_t	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gear1_state_t	struct
)	O
)	O
;	O
if	O
(	O
state	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for gear1_state"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	pointer
->	O
k	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
dim	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	pointer
->	O
k	pointer
==	O
0	int
)	O
{	O
free	function
(	O
state	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for k"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	pointer
->	O
y0	function
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
dim	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	pointer
->	O
y0	function
==	O
0	int
)	O
{	O
free	function
(	O
state	pointer
->	O
k	pointer
)	O
;	O
free	function
(	O
state	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for y0"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	pointer
->	O
y0_orig	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
dim	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	pointer
->	O
y0_orig	pointer
==	O
0	int
)	O
{	O
free	function
(	O
state	pointer
->	O
y0	function
)	O
;	O
free	function
(	O
state	pointer
->	O
k	pointer
)	O
;	O
free	function
(	O
state	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for y0_orig"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	pointer
->	O
y_onestep	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
dim	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
state	pointer
->	O
y_onestep	pointer
==	O
0	int
)	O
{	O
free	function
(	O
state	pointer
->	O
y0_orig	pointer
)	O
;	O
free	function
(	O
state	pointer
->	O
y0	function
)	O
;	O
free	function
(	O
state	pointer
->	O
k	pointer
)	O
;	O
free	function
(	O
state	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for y_onestep"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
return	O
state	pointer
;	O
}	O
static	O
int	O
gear1_step	function
(	O
double	O
*	O
y	double
,	O
gear1_state_t	struct
*	O
state	pointer
,	O
const	O
double	O
h	double
,	O
const	O
double	O
t	double
,	O
const	O
size_t	long
dim	long
,	O
const	O
gsl_odeiv_system	struct
*	O
sys	pointer
)	O
{	O
const	O
int	O
iter_steps	int
=	O
3	int
;	O
int	O
nu	int
;	O
size_t	long
i	long
;	O
double	O
*	O
y0	function
=	O
state	pointer
->	O
y0	function
;	O
double	O
*	O
k	pointer
=	O
state	pointer
->	O
k	int
;	O
for	O
(	O
nu	int
=	O
0	int
;	O
nu	int
<	O
iter_steps	int
;	O
nu	int
++	O
)	O
{	O
int	O
s	pointer
=	O
GSL_ODEIV_FN_EVAL	O
(	O
sys	pointer
,	O
t	double
+	O
h	double
,	O
y	double
,	O
k	int
)	O
;	O
if	O
(	O
s	pointer
!=	O
GSL_SUCCESS	int
)	O
{	O
return	O
s	pointer
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
dim	long
;	O
i	long
++	O
)	O
{	O
y	double
[	O
i	long
]	O
=	O
y0	function
[	O
i	long
]	O
+	O
h	double
*	O
k	pointer
[	O
i	long
]	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
gear1_apply	function
(	O
void	O
*	O
vstate	pointer
,	O
size_t	long
dim	long
,	O
double	O
t	double
,	O
double	O
h	double
,	O
double	O
y	array
[	O
]	O
,	O
double	O
yerr	array
[	O
]	O
,	O
const	O
double	O
dydt_in	array
[	O
]	O
,	O
double	O
dydt_out	array
[	O
]	O
,	O
const	O
gsl_odeiv_system	struct
*	O
sys	pointer
)	O
{	O
gear1_state_t	struct
*	O
state	pointer
=	O
(	O
gear1_state_t	struct
*	O
)	O
vstate	pointer
;	O
size_t	long
i	long
;	O
double	O
*	O
y0	function
=	O
state	pointer
->	O
y0	function
;	O
double	O
*	O
y0_orig	pointer
=	O
state	pointer
->	O
y0_orig	pointer
;	O
double	O
*	O
y_onestep	pointer
=	O
state	pointer
->	O
y_onestep	pointer
;	O
DBL_MEMCPY	O
(	O
y0	function
,	O
y	double
,	O
dim	long
)	O
;	O
DBL_MEMCPY	O
(	O
y0_orig	pointer
,	O
y	double
,	O
dim	long
)	O
;	O
DBL_MEMCPY	O
(	O
y_onestep	pointer
,	O
y	double
,	O
dim	long
)	O
;	O
{	O
int	O
s	pointer
=	O
gear1_step	function
(	O
y_onestep	pointer
,	O
state	pointer
,	O
h	double
,	O
t	double
,	O
dim	long
,	O
sys	pointer
)	O
;	O
if	O
(	O
s	pointer
!=	O
GSL_SUCCESS	int
)	O
{	O
return	O
s	pointer
;	O
}	O
}	O
{	O
int	O
s	pointer
=	O
gear1_step	function
(	O
y	double
,	O
state	pointer
,	O
h	double
/	O
2.0	int
,	O
t	double
,	O
dim	long
,	O
sys	pointer
)	O
;	O
if	O
(	O
s	pointer
!=	O
GSL_SUCCESS	int
)	O
{	O
DBL_MEMCPY	O
(	O
y	double
,	O
y0_orig	pointer
,	O
dim	long
)	O
;	O
return	O
s	pointer
;	O
}	O
}	O
DBL_MEMCPY	O
(	O
y0	function
,	O
y	double
,	O
dim	long
)	O
;	O
{	O
int	O
s	pointer
=	O
gear1_step	function
(	O
y	double
,	O
state	pointer
,	O
h	double
/	O
2.0	int
,	O
t	double
+	O
h	double
/	O
2.0	int
,	O
dim	long
,	O
sys	pointer
)	O
;	O
if	O
(	O
s	pointer
!=	O
GSL_SUCCESS	int
)	O
{	O
DBL_MEMCPY	O
(	O
y	double
,	O
y0_orig	pointer
,	O
dim	long
)	O
;	O
return	O
s	pointer
;	O
}	O
}	O
if	O
(	O
dydt_out	array
!=	O
NULL	O
)	O
{	O
int	O
s	pointer
=	O
GSL_ODEIV_FN_EVAL	O
(	O
sys	pointer
,	O
t	double
+	O
h	double
,	O
y	double
,	O
dydt_out	array
)	O
;	O
if	O
(	O
s	pointer
!=	O
GSL_SUCCESS	int
)	O
{	O
DBL_MEMCPY	O
(	O
y	double
,	O
y0_orig	pointer
,	O
dim	long
)	O
;	O
return	O
s	pointer
;	O
}	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
dim	long
;	O
i	long
++	O
)	O
{	O
yerr	array
[	O
i	long
]	O
=	O
4.0	int
*	O
(	O
y	double
[	O
i	long
]	O
-	O
y_onestep	pointer
[	O
i	long
]	O
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
gear1_reset	function
(	O
void	O
*	O
vstate	pointer
,	O
size_t	long
dim	long
)	O
{	O
gear1_state_t	struct
*	O
state	pointer
=	O
(	O
gear1_state_t	struct
*	O
)	O
vstate	pointer
;	O
DBL_ZERO_MEMSET	O
(	O
state	pointer
->	O
y_onestep	pointer
,	O
dim	long
)	O
;	O
DBL_ZERO_MEMSET	O
(	O
state	pointer
->	O
y0_orig	pointer
,	O
dim	long
)	O
;	O
DBL_ZERO_MEMSET	O
(	O
state	pointer
->	O
y0	function
,	O
dim	long
)	O
;	O
DBL_ZERO_MEMSET	O
(	O
state	pointer
->	O
k	pointer
,	O
dim	long
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
unsigned	O
int	O
gear1_order	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
gear1_state_t	struct
*	O
state	pointer
=	O
(	O
gear1_state_t	struct
*	O
)	O
vstate	pointer
;	O
state	pointer
=	O
0	int
;	O
return	O
1	int
;	O
}	O
static	O
void	O
gear1_free	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
gear1_state_t	struct
*	O
state	pointer
=	O
(	O
gear1_state_t	struct
*	O
)	O
vstate	pointer
;	O
free	function
(	O
state	pointer
->	O
y_onestep	pointer
)	O
;	O
free	function
(	O
state	pointer
->	O
y0_orig	pointer
)	O
;	O
free	function
(	O
state	pointer
->	O
y0	function
)	O
;	O
free	function
(	O
state	pointer
->	O
k	pointer
)	O
;	O
free	function
(	O
state	pointer
)	O
;	O
}	O
static	O
const	O
gsl_odeiv_step_type	struct
gear1_type	struct
=	O
{	O
"gear1"	pointer
,	O
0	int
,	O
1	int
,	O
&	O
gear1_alloc	function
,	O
&	O
gear1_apply	function
,	O
&	O
gear1_reset	function
,	O
&	O
gear1_order	function
,	O
&	O
gear1_free	function
}	O
;	O
const	O
gsl_odeiv_step_type	struct
*	O
gsl_odeiv_step_gear1	pointer
=	O
&	O
gear1_type	struct
;	O