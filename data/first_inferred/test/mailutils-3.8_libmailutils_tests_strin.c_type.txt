int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
i	int
,	O
rc	int
;	O
int	O
echo_state	int
=	O
0	int
;	O
size_t	long
n	int
;	O
char	O
buf	pointer
[	O
80	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
arg	pointer
=	O
argv	pointer
[	O
i	int
]	O
;	O
if	O
(	O
arg	pointer
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"-noecho"	pointer
)	O
==	O
0	int
)	O
{	O
MU_ASSERT	O
(	O
mu_stream_ioctl	function
(	O
mu_strin	pointer
,	O
MU_IOCTL_ECHO	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
echo_state	pointer
)	O
)	O
;	O
echo_state	int
=	O
1	int
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"usage: %s [-noecho]\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
}	O
}	O
while	O
(	O
(	O
rc	int
=	O
mu_stream_read	function
(	O
mu_strin	pointer
,	O
buf	pointer
,	O
sizeof	O
(	O
buf	pointer
)	O
,	O
&	O
n	int
)	O
==	O
0	int
)	O
&&	O
n	int
>	O
0	int
)	O
fwrite	function
(	O
buf	pointer
,	O
1	int
,	O
n	int
,	O
stdout	pointer
)	O
;	O
if	O
(	O
echo_state	int
)	O
MU_ASSERT	O
(	O
mu_stream_ioctl	function
(	O
mu_strin	pointer
,	O
MU_IOCTL_ECHO	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
echo_state	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O