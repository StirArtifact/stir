char	O
*	O
_mu_severity_str	array
[	O
]	O
=	O
{	O
N_	O
(	O
"debug"	pointer
)	O
,	O
N_	O
(	O
"info"	pointer
)	O
,	O
N_	O
(	O
"notice"	pointer
)	O
,	O
N_	O
(	O
"warning"	pointer
)	O
,	O
N_	O
(	O
"error"	pointer
)	O
,	O
N_	O
(	O
"crit"	pointer
)	O
,	O
N_	O
(	O
"alert"	pointer
)	O
,	O
N_	O
(	O
"emerg"	pointer
)	O
,	O
}	O
;	O
int	O
_mu_severity_num	int
=	O
MU_ARRAY_SIZE	O
(	O
_mu_severity_str	array
)	O
;	O
int	O
mu_severity_from_string	function
(	O
const	O
char	O
*	O
str	pointer
,	O
unsigned	O
*	O
pn	pointer
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_mu_severity_num	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
mu_c_strcasecmp	function
(	O
_mu_severity_str	array
[	O
i	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
{	O
*	O
pn	pointer
=	O
i	int
;	O
return	O
0	int
;	O
}	O
}	O
return	O
MU_ERR_NOENT	O
;	O
}	O
int	O
mu_severity_to_string	function
(	O
unsigned	O
n	long
,	O
const	O
char	O
*	O
*	O
pstr	pointer
)	O
{	O
if	O
(	O
n	long
>=	O
_mu_severity_num	int
)	O
return	O
MU_ERR_NOENT	O
;	O
*	O
pstr	pointer
=	O
_mu_severity_str	array
[	O
n	long
]	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
lr_set_line	function
(	O
struct	O
mu_locus_range	struct
*	O
loc	pointer
,	O
unsigned	O
val	int
,	O
int	O
end	long
)	O
{	O
if	O
(	O
end	long
)	O
loc	pointer
->	O
end	long
.	O
mu_line	int
=	O
val	int
;	O
else	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
=	O
val	int
;	O
}	O
static	O
void	O
lr_set_col	function
(	O
struct	O
mu_locus_range	struct
*	O
loc	pointer
,	O
unsigned	O
val	int
,	O
int	O
end	long
)	O
{	O
if	O
(	O
end	long
)	O
loc	pointer
->	O
end	long
.	O
mu_col	int
=	O
val	int
;	O
else	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
=	O
val	int
;	O
}	O
static	O
int	O
lr_set_file	function
(	O
struct	O
mu_locus_range	struct
*	O
loc	pointer
,	O
char	O
const	O
*	O
fname	pointer
,	O
unsigned	O
len	int
,	O
int	O
end	long
)	O
{	O
char	O
const	O
*	O
refname	pointer
;	O
struct	O
mu_locus_point	struct
*	O
pt	pointer
=	O
end	long
?	O
&	O
loc	pointer
->	O
end	long
:	O
&	O
loc	pointer
->	O
beg	struct
;	O
int	O
rc	int
;	O
if	O
(	O
fname	pointer
==	O
NULL	O
)	O
{	O
refname	pointer
=	O
NULL	O
;	O
rc	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
len	int
==	O
0	int
)	O
rc	int
=	O
mu_ident_ref	function
(	O
fname	pointer
,	O
&	O
refname	pointer
)	O
;	O
else	O
{	O
char	O
*	O
name	pointer
;	O
name	pointer
=	O
malloc	function
(	O
len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
name	pointer
)	O
return	O
errno	O
;	O
memcpy	function
(	O
name	pointer
,	O
fname	pointer
,	O
len	int
)	O
;	O
name	pointer
[	O
len	int
]	O
=	O
0	int
;	O
rc	int
=	O
mu_ident_ref	function
(	O
name	pointer
,	O
&	O
refname	pointer
)	O
;	O
free	function
(	O
name	pointer
)	O
;	O
}	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_ident_deref	function
(	O
pt	pointer
->	O
mu_file	pointer
)	O
;	O
pt	pointer
->	O
mu_file	pointer
=	O
refname	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_log_write	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pnwrite	pointer
)	O
{	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
str	pointer
;	O
unsigned	O
severity	int
=	O
sp	pointer
->	O
severity	int
;	O
int	O
logmode	int
=	O
sp	pointer
->	O
logmode	int
;	O
struct	O
mu_locus_range	struct
loc	pointer
;	O
int	O
fmm	int
=	O
0	int
;	O
unsigned	O
flen	int
=	O
0	int
;	O
int	O
save_locus	int
=	O
0	int
;	O
int	O
rc	int
;	O
int	O
escape_error	int
=	O
0	int
;	O
loc	pointer
=	O
sp	pointer
->	O
locrange	struct
;	O
mu_ident_ref	function
(	O
loc	pointer
.	O
beg	struct
.	O
mu_file	pointer
,	O
&	O
loc	pointer
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
mu_ident_ref	function
(	O
loc	pointer
.	O
end	long
.	O
mu_file	pointer
,	O
&	O
loc	pointer
.	O
end	long
.	O
mu_file	pointer
)	O
;	O
*	O
pnwrite	pointer
=	O
size	long
;	O
while	O
(	O
!	O
escape_error	int
&&	O
*	O
buf	pointer
==	O
'\033'	O
)	O
{	O
int	O
code	int
;	O
unsigned	O
n	long
;	O
NEXT	O
;	O
code	int
=	O
*	O
buf	pointer
;	O
NEXT	O
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
'S'	O
:	O
save_locus	int
=	O
1	int
;	O
break	O
;	O
case	O
's'	O
:	O
if	O
(	O
*	O
buf	pointer
==	O
'<'	O
)	O
READNUM	O
(	O
severity	int
)	O
;	O
else	O
if	O
(	O
mu_isdigit	O
(	O
*	O
buf	pointer
)	O
)	O
{	O
severity	int
=	O
*	O
buf	pointer
-	O
'0'	O
;	O
NEXT	O
;	O
}	O
else	O
return	O
EINVAL	int
;	O
break	O
;	O
case	O
'O'	O
:	O
READNUM	O
(	O
n	long
)	O
;	O
logmode	int
|=	O
n	long
;	O
break	O
;	O
case	O
'X'	O
:	O
READNUM	O
(	O
n	long
)	O
;	O
logmode	int
&=	O
~	O
n	long
;	O
break	O
;	O
case	O
'l'	O
:	O
READNUM	O
(	O
n	long
)	O
;	O
lr_set_line	function
(	O
&	O
loc	pointer
,	O
n	long
,	O
FMM_VAL	O
(	O
fmm	int
,	O
FMM_LINE	int
)	O
)	O
;	O
FMM_CYCLE	O
(	O
fmm	int
,	O
FMM_LINE	int
)	O
;	O
logmode	int
|=	O
MU_LOGMODE_LOCUS	int
;	O
break	O
;	O
case	O
'c'	O
:	O
READNUM	O
(	O
n	long
)	O
;	O
lr_set_col	function
(	O
&	O
loc	pointer
,	O
n	long
,	O
FMM_VAL	O
(	O
fmm	int
,	O
FMM_COL	int
)	O
)	O
;	O
FMM_CYCLE	O
(	O
fmm	int
,	O
FMM_COL	int
)	O
;	O
logmode	int
|=	O
MU_LOGMODE_LOCUS	int
;	O
break	O
;	O
case	O
'f'	O
:	O
READNUM	O
(	O
flen	int
)	O
;	O
lr_set_file	function
(	O
&	O
loc	pointer
,	O
buf	pointer
,	O
flen	int
,	O
FMM_VAL	O
(	O
fmm	int
,	O
FMM_FILE	int
)	O
)	O
;	O
FMM_CYCLE	O
(	O
fmm	int
,	O
FMM_FILE	int
)	O
;	O
buf	pointer
+=	O
flen	int
;	O
size	long
-=	O
flen	int
;	O
logmode	int
|=	O
MU_LOGMODE_LOCUS	int
;	O
break	O
;	O
default	O
:	O
buf	pointer
-=	O
2	int
;	O
size	long
+=	O
2	int
;	O
escape_error	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
severity	int
>=	O
_mu_severity_num	int
)	O
severity	int
=	O
MU_LOG_EMERG	int
;	O
if	O
(	O
save_locus	int
)	O
mu_locus_range_copy	function
(	O
&	O
sp	pointer
->	O
locrange	struct
,	O
&	O
loc	pointer
)	O
;	O
if	O
(	O
severity	int
<	O
sp	pointer
->	O
threshold	int
)	O
rc	int
=	O
0	int
;	O
else	O
{	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
transport	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_SEVERITY	int
,	O
&	O
severity	int
)	O
;	O
if	O
(	O
(	O
logmode	int
&	O
MU_LOGMODE_LOCUS	int
)	O
&&	O
loc	pointer
.	O
beg	struct
.	O
mu_file	pointer
)	O
{	O
mu_stream_print_locus_range	function
(	O
sp	pointer
->	O
transport	pointer
,	O
&	O
loc	pointer
)	O
;	O
mu_stream_write	function
(	O
sp	pointer
->	O
transport	pointer
,	O
": "	pointer
,	O
2	int
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
(	O
logmode	int
&	O
MU_LOGMODE_SEVERITY	int
)	O
&&	O
!	O
(	O
sp	pointer
->	O
sevmask	int
&	O
MU_DEBUG_LEVEL_MASK	O
(	O
severity	int
)	O
)	O
)	O
{	O
char	O
*	O
s	pointer
=	O
gettext	function
(	O
_mu_severity_str	array
[	O
severity	int
]	O
)	O
;	O
rc	int
=	O
mu_stream_write	function
(	O
sp	pointer
->	O
transport	pointer
,	O
s	pointer
,	O
strlen	function
(	O
s	pointer
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_write	function
(	O
sp	pointer
->	O
transport	pointer
,	O
": "	pointer
,	O
2	int
,	O
NULL	O
)	O
;	O
}	O
rc	int
=	O
mu_stream_write	function
(	O
sp	pointer
->	O
transport	pointer
,	O
buf	pointer
,	O
size	long
,	O
NULL	O
)	O
;	O
}	O
mu_ident_deref	function
(	O
loc	pointer
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
mu_ident_deref	function
(	O
loc	pointer
.	O
end	long
.	O
mu_file	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_log_flush	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_flush	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
void	O
_log_done	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
str	pointer
;	O
mu_locus_range_deinit	function
(	O
&	O
sp	pointer
->	O
locrange	struct
)	O
;	O
mu_stream_destroy	function
(	O
&	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_log_close	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_close	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_log_setbuf_hook	function
(	O
mu_stream_t	pointer
str	pointer
,	O
enum	O
mu_buffer_type	enum
type	int
,	O
size_t	long
size	long
)	O
{	O
if	O
(	O
type	int
!=	O
mu_buffer_line	int
)	O
return	O
EACCES	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_log_ctl	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
int	O
code	int
,	O
int	O
opcode	int
,	O
void	O
*	O
arg	pointer
)	O
{	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
str	pointer
;	O
int	O
status	int
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
MU_IOCTL_TRANSPORT	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
mu_transport_t	pointer
*	O
ptrans	pointer
=	O
arg	pointer
;	O
switch	O
(	O
opcode	int
)	O
{	O
case	O
MU_IOCTL_OP_GET	int
:	O
ptrans	pointer
[	O
0	int
]	O
=	O
(	O
mu_transport_t	pointer
)	O
sp	pointer
->	O
transport	pointer
;	O
ptrans	pointer
[	O
1	int
]	O
=	O
NULL	O
;	O
break	O
;	O
case	O
MU_IOCTL_OP_SET	int
:	O
ptrans	pointer
=	O
arg	pointer
;	O
if	O
(	O
ptrans	pointer
[	O
0	int
]	O
)	O
sp	pointer
->	O
transport	pointer
=	O
(	O
mu_stream_t	pointer
)	O
ptrans	pointer
[	O
0	int
]	O
;	O
break	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
}	O
break	O
;	O
case	O
MU_IOCTL_SUBSTREAM	int
:	O
if	O
(	O
sp	pointer
->	O
transport	pointer
&&	O
(	O
(	O
status	int
=	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
transport	pointer
,	O
code	int
,	O
opcode	int
,	O
arg	pointer
)	O
)	O
==	O
0	int
||	O
status	int
!=	O
ENOSYS	int
)	O
)	O
return	O
status	int
;	O
case	O
MU_IOCTL_TOPSTREAM	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
mu_stream_t	pointer
*	O
pstr	pointer
=	O
arg	pointer
;	O
switch	O
(	O
opcode	int
)	O
{	O
case	O
MU_IOCTL_OP_GET	int
:	O
pstr	pointer
[	O
0	int
]	O
=	O
sp	pointer
->	O
transport	pointer
;	O
mu_stream_ref	function
(	O
pstr	pointer
[	O
0	int
]	O
)	O
;	O
pstr	pointer
[	O
1	int
]	O
=	O
NULL	O
;	O
break	O
;	O
case	O
MU_IOCTL_OP_SET	int
:	O
mu_stream_unref	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
sp	pointer
->	O
transport	pointer
=	O
pstr	pointer
[	O
0	int
]	O
;	O
mu_stream_ref	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
break	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
}	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM	int
:	O
switch	O
(	O
opcode	int
)	O
{	O
case	O
MU_IOCTL_LOGSTREAM_GET_SEVERITY	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
=	O
sp	pointer
->	O
severity	int
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SET_SEVERITY	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
>=	O
_mu_severity_num	int
)	O
return	O
EINVAL	int
;	O
sp	pointer
->	O
severity	int
=	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_GET_MODE	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
*	O
(	O
int	O
*	O
)	O
arg	pointer
=	O
sp	pointer
->	O
logmode	int
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SET_MODE	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
sp	pointer
->	O
logmode	int
=	O
*	O
(	O
int	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	int
:	O
{	O
struct	O
mu_locus_range	struct
*	O
lr	pointer
=	O
arg	pointer
;	O
if	O
(	O
!	O
arg	pointer
)	O
{	O
mu_ident_deref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
mu_ident_deref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
)	O
;	O
memset	function
(	O
&	O
sp	pointer
->	O
locrange	struct
,	O
0	int
,	O
sizeof	O
sp	pointer
->	O
locrange	struct
)	O
;	O
}	O
else	O
{	O
char	O
const	O
*	O
begname	pointer
,	O
*	O
endname	pointer
;	O
status	int
=	O
mu_ident_ref	function
(	O
lr	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
&	O
begname	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_ident_ref	function
(	O
lr	pointer
->	O
end	long
.	O
mu_file	pointer
,	O
&	O
endname	pointer
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_ident_deref	function
(	O
begname	pointer
)	O
;	O
return	O
status	int
;	O
}	O
mu_ident_deref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
=	O
begname	pointer
;	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_line	int
=	O
lr	pointer
->	O
beg	struct
.	O
mu_line	int
;	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_col	int
=	O
lr	pointer
->	O
beg	struct
.	O
mu_col	int
;	O
mu_ident_deref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
)	O
;	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
=	O
endname	pointer
;	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_line	int
=	O
lr	pointer
->	O
end	long
.	O
mu_line	int
;	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_col	int
=	O
lr	pointer
->	O
end	long
.	O
mu_col	int
;	O
}	O
}	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_GET_LOCUS_RANGE	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
struct	O
mu_locus_range	struct
*	O
lr	pointer
=	O
arg	pointer
;	O
char	O
const	O
*	O
begname	pointer
,	O
*	O
endname	pointer
;	O
status	int
=	O
mu_ident_ref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
,	O
&	O
begname	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_ident_ref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
,	O
&	O
endname	pointer
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_ident_deref	function
(	O
begname	pointer
)	O
;	O
return	O
status	int
;	O
}	O
lr	pointer
->	O
beg	struct
.	O
mu_file	pointer
=	O
begname	pointer
;	O
lr	pointer
->	O
beg	struct
.	O
mu_line	int
=	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_line	int
;	O
lr	pointer
->	O
beg	struct
.	O
mu_col	int
=	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_col	int
;	O
lr	pointer
->	O
end	long
.	O
mu_file	pointer
=	O
endname	pointer
;	O
lr	pointer
->	O
end	long
.	O
mu_line	int
=	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_line	int
;	O
lr	pointer
->	O
end	long
.	O
mu_col	int
=	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_col	int
;	O
}	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_GET_LOCUS_DEPRECATED	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
struct	O
mu_locus_DEPRECATED	struct
*	O
ploc	pointer
=	O
arg	pointer
;	O
if	O
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
)	O
{	O
ploc	pointer
->	O
mu_file	pointer
=	O
strdup	function
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
if	O
(	O
!	O
ploc	pointer
->	O
mu_file	pointer
)	O
return	O
ENOMEM	int
;	O
}	O
else	O
ploc	pointer
->	O
mu_file	pointer
=	O
NULL	O
;	O
ploc	pointer
->	O
mu_line	int
=	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_line	int
;	O
ploc	pointer
->	O
mu_col	int
=	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_col	int
;	O
}	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_DEPRECATED	int
:	O
{	O
struct	O
mu_locus_DEPRECATED	struct
*	O
ploc	pointer
=	O
arg	pointer
;	O
mu_ident_deref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
)	O
;	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
=	O
NULL	O
;	O
if	O
(	O
arg	pointer
)	O
{	O
status	int
=	O
lr_set_file	function
(	O
&	O
sp	pointer
->	O
locrange	struct
,	O
ploc	pointer
->	O
mu_file	pointer
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
lr_set_line	function
(	O
&	O
sp	pointer
->	O
locrange	struct
,	O
ploc	pointer
->	O
mu_line	int
,	O
0	int
)	O
;	O
lr_set_col	function
(	O
&	O
sp	pointer
->	O
locrange	struct
,	O
ploc	pointer
->	O
mu_col	int
,	O
0	int
)	O
;	O
}	O
else	O
{	O
mu_ident_deref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
=	O
NULL	O
;	O
}	O
break	O
;	O
}	O
case	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_LINE	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_line	int
=	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_COL	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_col	int
=	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_ADVANCE_LOCUS_LINE	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_line	int
++	O
;	O
else	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_line	int
+=	O
*	O
(	O
int	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_ADVANCE_LOCUS_COL	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_col	int
++	O
;	O
else	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_col	int
+=	O
*	O
(	O
int	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SUPPRESS_SEVERITY	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
sp	pointer
->	O
threshold	int
=	O
MU_LOG_DEBUG	int
;	O
else	O
if	O
(	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
>=	O
_mu_severity_num	int
)	O
return	O
MU_ERR_NOENT	O
;	O
sp	pointer
->	O
threshold	int
=	O
*	O
(	O
unsigned	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SUPPRESS_SEVERITY_NAME	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
sp	pointer
->	O
threshold	int
=	O
MU_LOG_DEBUG	int
;	O
else	O
return	O
mu_severity_from_string	function
(	O
(	O
const	O
char	O
*	O
)	O
arg	pointer
,	O
&	O
sp	pointer
->	O
threshold	int
)	O
;	O
case	O
MU_IOCTL_LOGSTREAM_GET_SEVERITY_MASK	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
*	O
(	O
int	O
*	O
)	O
arg	pointer
=	O
sp	pointer
->	O
sevmask	int
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_SET_SEVERITY_MASK	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
sp	pointer
->	O
sevmask	int
=	O
*	O
(	O
int	O
*	O
)	O
arg	pointer
;	O
break	O
;	O
case	O
MU_IOCTL_LOGSTREAM_CLONE	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
mu_stream_t	pointer
str	pointer
;	O
struct	O
_mu_log_stream	struct
*	O
newp	pointer
;	O
int	O
rc	int
=	O
mu_log_stream_create	function
(	O
&	O
str	pointer
,	O
sp	pointer
->	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
newp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
str	pointer
;	O
newp	pointer
->	O
severity	int
=	O
sp	pointer
->	O
severity	int
;	O
newp	pointer
->	O
threshold	int
=	O
sp	pointer
->	O
threshold	int
;	O
newp	pointer
->	O
logmode	int
=	O
sp	pointer
->	O
logmode	int
;	O
newp	pointer
->	O
sevmask	int
=	O
sp	pointer
->	O
sevmask	int
;	O
newp	pointer
->	O
locrange	struct
=	O
sp	pointer
->	O
locrange	struct
;	O
mu_ident_ref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
,	O
&	O
sp	pointer
->	O
locrange	struct
.	O
beg	struct
.	O
mu_file	pointer
)	O
;	O
mu_ident_ref	function
(	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
,	O
&	O
sp	pointer
->	O
locrange	struct
.	O
end	long
.	O
mu_file	pointer
)	O
;	O
*	O
(	O
mu_stream_t	pointer
*	O
)	O
arg	pointer
=	O
str	pointer
;	O
}	O
break	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
break	O
;	O
default	O
:	O
return	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
transport	pointer
,	O
code	int
,	O
opcode	int
,	O
arg	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
void	O
_mu_log_stream_setup	function
(	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
,	O
mu_stream_t	pointer
transport	pointer
)	O
{	O
mu_stream_t	pointer
stream	pointer
;	O
sp	pointer
->	O
base	struct
.	O
write	pointer
=	O
_log_write	function
;	O
sp	pointer
->	O
base	struct
.	O
flush	pointer
=	O
_log_flush	function
;	O
sp	pointer
->	O
base	struct
.	O
close	pointer
=	O
_log_close	function
;	O
sp	pointer
->	O
base	struct
.	O
done	pointer
=	O
_log_done	function
;	O
sp	pointer
->	O
base	struct
.	O
setbuf_hook	pointer
=	O
_log_setbuf_hook	function
;	O
sp	pointer
->	O
base	struct
.	O
ctl	pointer
=	O
_log_ctl	function
;	O
sp	pointer
->	O
transport	pointer
=	O
transport	pointer
;	O
mu_stream_ref	function
(	O
transport	pointer
)	O
;	O
sp	pointer
->	O
severity	int
=	O
MU_LOG_ERROR	int
;	O
sp	pointer
->	O
logmode	int
=	O
0	int
;	O
stream	pointer
=	O
(	O
mu_stream_t	pointer
)	O
sp	pointer
;	O
mu_stream_set_buffer	function
(	O
stream	pointer
,	O
mu_buffer_line	int
,	O
0	int
)	O
;	O
}	O
int	O
mu_log_stream_create	function
(	O
mu_stream_t	pointer
*	O
pstr	pointer
,	O
mu_stream_t	pointer
transport	pointer
)	O
{	O
struct	O
_mu_log_stream	struct
*	O
sp	pointer
;	O
sp	pointer
=	O
(	O
struct	O
_mu_log_stream	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
sp	pointer
)	O
,	O
MU_STREAM_WRITE	int
)	O
;	O
if	O
(	O
!	O
sp	pointer
)	O
return	O
ENOMEM	int
;	O
_mu_log_stream_setup	function
(	O
sp	pointer
,	O
transport	pointer
)	O
;	O
*	O
pstr	pointer
=	O
(	O
mu_stream_t	pointer
)	O
sp	pointer
;	O
return	O
0	int
;	O
}	O
static	O
char	O
wiki_url	array
[	O
]	O
=	O
"http://mailutils.org/wiki/Source_location_API#Deprecated_interface"	pointer
;	O
int	O
mu_ioctl_logstream_get_locus_deprecated	function
(	O
void	O
)	O
{	O
static	O
int	O
warned	int
;	O
if	O
(	O
!	O
warned	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"the program uses MU_IOCTL_LOGSTREAM_GET_LOCUS, which is deprecated"	pointer
)	O
)	O
;	O
mu_error	function
(	O
_	O
(	O
"please see %s, for detailed guidelines"	pointer
)	O
,	O
wiki_url	array
)	O
;	O
warned	int
=	O
1	int
;	O
}	O
return	O
MU_IOCTL_LOGSTREAM_GET_LOCUS_DEPRECATED	int
;	O
}	O
int	O
mu_ioctl_logstream_set_locus_deprecated	function
(	O
void	O
)	O
{	O
static	O
int	O
warned	int
;	O
if	O
(	O
!	O
warned	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"program uses MU_IOCTL_LOGSTREAM_SET_LOCUS, which is deprecated"	pointer
)	O
)	O
;	O
mu_error	function
(	O
_	O
(	O
"please see %s, for detailed guidelines"	pointer
)	O
,	O
wiki_url	array
)	O
;	O
warned	int
=	O
1	int
;	O
}	O
return	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_DEPRECATED	int
;	O
}	O