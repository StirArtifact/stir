struct	O
dircat_node	struct
{	O
int	O
num_dirs	int
;	O
struct	O
node	*
*	O
dirs	array
[	O
0	int
]	O
;	O
}	O
;	O
static	O
error_t	int
dircat_get_contents	function
(	O
void	O
*	O
hook	*
,	O
char	O
*	O
*	O
contents	*
,	O
ssize_t	long
*	O
contents_len	*
)	O
{	O
struct	O
dircat_node	struct
*	O
dcn	*
=	O
hook	*
;	O
int	O
i	int
,	O
sz	long
,	O
pos	int
;	O
error_t	int
err	O
;	O
pos	int
=	O
0	int
;	O
*	O
contents	*
=	O
malloc	function
(	O
sz	long
=	O
512	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dcn	*
->	O
num_dirs	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
subcon	*
;	O
ssize_t	long
sublen	int
;	O
procfs_refresh	function
(	O
dcn	*
->	O
dirs	array
[	O
i	int
]	O
)	O
;	O
err	int
=	O
procfs_get_contents	function
(	O
dcn	*
->	O
dirs	array
[	O
i	int
]	O
,	O
&	O
subcon	O
,	O
&	O
sublen	*
)	O
;	O
if	O
(	O
err	O
)	O
{	O
free	function
(	O
*	O
contents	*
)	O
;	O
*	O
contents	*
=	O
NULL	O
;	O
return	O
err	O
;	O
}	O
while	O
(	O
pos	int
+	O
sublen	O
>	O
sz	long
)	O
*	O
contents	*
=	O
realloc	function
(	O
*	O
contents	*
,	O
sz	long
*=	O
2	int
)	O
;	O
memcpy	function
(	O
*	O
contents	*
+	O
pos	long
,	O
subcon	*
,	O
sublen	*
)	O
;	O
pos	long
+=	O
sublen	O
;	O
}	O
*	O
contents_len	*
=	O
pos	int
;	O
return	O
0	int
;	O
}	O
static	O
error_t	int
dircat_lookup	function
(	O
void	O
*	O
hook	*
,	O
const	O
char	O
*	O
name	*
,	O
struct	O
node	O
*	O
*	O
np	*
)	O
{	O
struct	O
dircat_node	struct
*	O
dcn	*
=	O
hook	*
;	O
error_t	O
err	O
;	O
int	O
i	int
;	O
err	O
=	O
ENOENT	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
err	*
&&	O
i	int
<	O
dcn	*
->	O
num_dirs	int
;	O
i	int
++	O
)	O
err	int
=	O
procfs_lookup	function
(	O
dcn	*
->	O
dirs	array
[	O
i	int
]	O
,	O
name	*
,	O
np	*
)	O
;	O
return	O
err	O
;	O
}	O
static	O
void	O
dircat_release_dirs	function
(	O
struct	O
node	struct
*	O
const	O
*	O
dirs	*
,	O
int	O
num_dirs	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
num_dirs	int
;	O
i	int
++	O
)	O
if	O
(	O
dirs	array
[	O
i	int
]	O
)	O
netfs_nrele	function
(	O
dirs	array
[	O
i	int
]	O
)	O
;	O
}	O
static	O
void	O
dircat_cleanup	function
(	O
void	O
*	O
hook	*
)	O
{	O
struct	O
dircat_node	struct
*	O
dcn	*
=	O
hook	*
;	O
dircat_release_dirs	function
(	O
dcn	*
->	O
dirs	*
,	O
dcn	*
->	O
num_dirs	*
)	O
;	O
free	function
(	O
dcn	*
)	O
;	O
}	O
struct	O
node	*
*	O
dircat_make_node	function
(	O
struct	O
node	O
*	O
const	O
*	O
dirs	*
,	O
int	O
num_dirs	int
)	O
{	O
static	O
struct	O
procfs_node_ops	O
ops	*
=	O
{	O
.	O
get_contents	O
=	O
dircat_get_contents	O
,	O
.	O
cleanup_contents	O
=	O
procfs_cleanup_contents_with_free	function
,	O
.	O
lookup	*
=	O
dircat_lookup	O
,	O
.	O
cleanup	*
=	O
dircat_cleanup	*
,	O
}	O
;	O
struct	O
dircat_node	struct
*	O
dcn	*
;	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
num_dirs	int
;	O
i	int
++	O
)	O
if	O
(	O
!	O
dirs	array
[	O
i	int
]	O
)	O
goto	O
fail	O
;	O
dcn	*
=	O
malloc	function
(	O
sizeof	O
*	O
dcn	*
+	O
num_dirs	int
*	O
sizeof	O
dcn	*
->	O
dirs	array
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
dcn	*
)	O
goto	O
fail	O
;	O
dcn	*
->	O
num_dirs	int
=	O
num_dirs	int
;	O
memcpy	function
(	O
dcn	*
->	O
dirs	*
,	O
dirs	*
,	O
num_dirs	char
*	O
sizeof	O
dcn	*
->	O
dirs	array
[	O
0	int
]	O
)	O
;	O
return	O
procfs_make_node	function
(	O
&	O
ops	*
,	O
dcn	O
)	O
;	O
fail	O
:	O
dircat_release_dirs	function
(	O
dirs	O
,	O
num_dirs	*
)	O
;	O
return	O
NULL	O
;	O
}	O