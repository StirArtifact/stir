static	O
inline	O
unsigned	O
long	O
int	O
ranmar_get	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
double	O
ranmar_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
void	O
ranmar_set	function
(	O
void	O
*	O
state	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
;	O
static	O
const	O
unsigned	O
long	O
int	O
two24	long
=	O
16777216	int
;	O
typedef	O
struct	O
{	O
unsigned	O
int	O
i	int
;	O
unsigned	O
int	O
j	int
;	O
long	O
int	O
carry	long
;	O
unsigned	O
long	O
int	O
u	array
[	O
97	int
]	O
;	O
}	O
ranmar_state_t	struct
;	O
static	O
inline	O
unsigned	O
long	O
int	O
ranmar_get	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
ranmar_state_t	struct
*	O
state	pointer
=	O
(	O
ranmar_state_t	struct
*	O
)	O
vstate	pointer
;	O
unsigned	O
int	O
i	int
=	O
state	pointer
->	O
i	int
;	O
unsigned	O
int	O
j	int
=	O
state	pointer
->	O
j	int
;	O
long	O
int	O
carry	long
=	O
state	pointer
->	O
carry	long
;	O
long	O
int	O
delta	long
=	O
state	pointer
->	O
u	array
[	O
i	int
]	O
-	O
state	pointer
->	O
u	array
[	O
j	int
]	O
;	O
if	O
(	O
delta	long
<	O
0	int
)	O
delta	long
+=	O
two24	long
;	O
state	pointer
->	O
u	array
[	O
i	int
]	O
=	O
delta	long
;	O
if	O
(	O
i	long
==	O
0	int
)	O
{	O
i	int
=	O
96	int
;	O
}	O
else	O
{	O
i	long
--	O
;	O
}	O
state	pointer
->	O
i	int
=	O
i	int
;	O
if	O
(	O
j	int
==	O
0	int
)	O
{	O
j	long
=	O
96	int
;	O
}	O
else	O
{	O
j	long
--	O
;	O
}	O
state	pointer
->	O
j	int
=	O
j	int
;	O
carry	long
+=	O
-	O
7654321	int
;	O
if	O
(	O
carry	int
<	O
0	int
)	O
carry	long
+=	O
two24	long
-	O
3	int
;	O
state	pointer
->	O
carry	int
=	O
carry	long
;	O
delta	long
+=	O
-	O
carry	int
;	O
if	O
(	O
delta	int
<	O
0	int
)	O
delta	long
+=	O
two24	long
;	O
return	O
delta	int
;	O
}	O
static	O
double	O
ranmar_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
return	O
ranmar_get	function
(	O
vstate	pointer
)	O
/	O
16777216.0	int
;	O
}	O
static	O
void	O
ranmar_set	function
(	O
void	O
*	O
vstate	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
{	O
ranmar_state_t	struct
*	O
state	pointer
=	O
(	O
ranmar_state_t	struct
*	O
)	O
vstate	pointer
;	O
unsigned	O
long	O
int	O
ij	long
=	O
s	long
/	O
30082	int
;	O
unsigned	O
long	O
int	O
kl	long
=	O
s	long
%	O
30082	int
;	O
int	O
i	long
=	O
(	O
ij	long
/	O
177	int
)	O
%	O
177	int
+	O
2	int
;	O
int	O
j	long
=	O
(	O
ij	long
%	O
177	int
)	O
+	O
2	int
;	O
int	O
k	int
=	O
(	O
kl	long
/	O
169	int
)	O
%	O
178	int
+	O
1	int
;	O
int	O
l	long
=	O
(	O
kl	long
%	O
169	int
)	O
;	O
int	O
a	long
,	O
b	int
;	O
for	O
(	O
a	long
=	O
0	int
;	O
a	int
<	O
97	int
;	O
a	long
++	O
)	O
{	O
unsigned	O
long	O
int	O
sum	long
=	O
0	int
;	O
unsigned	O
long	O
int	O
t	long
=	O
two24	long
;	O
for	O
(	O
b	long
=	O
0	int
;	O
b	int
<	O
24	int
;	O
b	int
++	O
)	O
{	O
unsigned	O
long	O
int	O
m	long
=	O
(	O
(	O
(	O
i	long
*	O
j	long
)	O
%	O
179	int
)	O
*	O
k	long
)	O
%	O
179	int
;	O
i	long
=	O
j	long
;	O
j	long
=	O
k	long
;	O
k	long
=	O
m	long
;	O
l	long
=	O
(	O
53	int
*	O
l	long
+	O
1	int
)	O
%	O
169	int
;	O
t	long
>>=	O
1	int
;	O
if	O
(	O
(	O
l	long
*	O
m	int
)	O
%	O
64	int
>=	O
32	int
)	O
sum	long
+=	O
t	int
;	O
}	O
state	pointer
->	O
u	array
[	O
a	int
]	O
=	O
sum	long
;	O
}	O
state	pointer
->	O
i	int
=	O
96	int
;	O
state	pointer
->	O
j	long
=	O
32	int
;	O
state	pointer
->	O
carry	long
=	O
362436	int
;	O
}	O
static	O
const	O
gsl_rng_type	struct
ranmar_type	struct
=	O
{	O
"ranmar"	pointer
,	O
0x00ffffffUL	int
,	O
0	int
,	O
sizeof	O
(	O
ranmar_state_t	struct
)	O
,	O
&	O
ranmar_set	function
,	O
&	O
ranmar_get	function
,	O
&	O
ranmar_get_double	function
}	O
;	O
const	O
gsl_rng_type	struct
*	O
gsl_rng_ranmar	pointer
=	O
&	O
ranmar_type	struct
;	O