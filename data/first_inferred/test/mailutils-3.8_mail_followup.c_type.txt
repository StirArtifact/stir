int	O
mail_followup	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*
)	O
{	O
mu_message_t	*
msg	*
;	O
mu_header_t	*
hdr	*
;	O
char	O
*	O
str	*
;	O
msgset_t	struct
*	O
msglist	*
,	O
*	O
mp	*
;	O
compose_env_t	*
env	*
;	O
int	O
status	int
;	O
size_t	long
n	long
;	O
compose_init	function
(	O
&	O
env	*
)	O
;	O
if	O
(	O
msgset_parse	function
(	O
argc	int
,	O
argv	*
,	O
MSG_NODELETED	int
,	O
&	O
msglist	*
)	O
)	O
return	O
1	int
;	O
n	long
=	O
get_cursor	function
(	O
)	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"No applicable message"	*
)	O
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
util_get_message	function
(	O
mbox	*
,	O
n	long
,	O
&	O
msg	*
)	O
)	O
{	O
msgset_free	function
(	O
msglist	*
)	O
;	O
return	O
1	int
;	O
}	O
mu_message_get_header	function
(	O
msg	*
,	O
&	O
hdr	*
)	O
;	O
if	O
(	O
mu_header_aget_value	O
(	O
hdr	*
,	O
MU_HEADER_SUBJECT	*
,	O
&	O
str	*
)	O
==	O
0	int
)	O
{	O
char	O
*	O
p	*
=	O
NULL	O
;	O
if	O
(	O
mu_unre_subject	function
(	O
str	*
,	O
NULL	O
)	O
)	O
util_strcat	function
(	O
&	O
p	*
,	O
util_reply_prefix	function
(	O
)	O
)	O
;	O
util_strcat	function
(	O
&	O
p	*
,	O
str	*
)	O
;	O
free	function
(	O
str	*
)	O
;	O
compose_header_set	function
(	O
&	O
env	*
,	O
MU_HEADER_SUBJECT	*
,	O
p	*
,	O
COMPOSE_REPLACE	*
)	O
;	O
free	function
(	O
p	*
)	O
;	O
}	O
compose_header_set	function
(	O
&	O
env	*
,	O
MU_HEADER_TO	*
,	O
util_get_sender	function
(	O
get_cursor	function
(	O
)	O
,	O
0	int
)	O
,	O
COMPOSE_SINGLE_LINE	*
)	O
;	O
for	O
(	O
mp	*
=	O
msglist	*
;	O
mp	*
;	O
mp	*
=	O
mp	*
->	O
next	*
)	O
compose_header_set	function
(	O
&	O
env	*
,	O
MU_HEADER_TO	*
,	O
util_get_sender	function
(	O
mp	*
->	O
msg_part	*
[	O
0	int
]	O
,	O
0	int
)	O
,	O
COMPOSE_SINGLE_LINE	*
)	O
;	O
msgset_free	function
(	O
msglist	*
)	O
;	O
mu_printf	function
(	O
"To: %s\n"	*
,	O
compose_header_get	function
(	O
&	O
env	*
,	O
MU_HEADER_TO	*
,	O
""	*
)	O
)	O
;	O
mu_printf	function
(	O
"Subject: %s\n\n"	*
,	O
compose_header_get	function
(	O
&	O
env	*
,	O
MU_HEADER_SUBJECT	*
,	O
""	*
)	O
)	O
;	O
status	int
=	O
mail_send0	function
(	O
&	O
env	*
,	O
mu_isupper	function
(	O
argv	*
[	O
0	int
]	O
[	O
0	int
]	O
)	O
)	O
;	O
compose_destroy	function
(	O
&	O
env	*
)	O
;	O
return	O
status	int
;	O
}	O