static	O
char	O
alphabet	array
[	O
]	O
=	O
"0123456789-"	pointer
;	O
static	O
char	O
*	O
codeset	array
[	O
]	O
=	O
{	O
"111121"	pointer
,	O
"211121"	pointer
,	O
"121121"	pointer
,	O
"221111"	pointer
,	O
"112121"	pointer
,	O
"212111"	pointer
,	O
"122111"	pointer
,	O
"111221"	pointer
,	O
"211211"	pointer
,	O
"211111"	pointer
,	O
"112111"	pointer
,	O
"112211"	pointer
}	O
;	O
int	O
Barcode_11_verify	function
(	O
unsigned	O
char	O
*	O
text	pointer
)	O
{	O
int	O
i	int
;	O
char	O
*	O
chr	pointer
=	O
NULL	O
;	O
if	O
(	O
text	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
text	pointer
[	O
i	int
]	O
;	O
i	int
++	O
)	O
if	O
(	O
(	O
chr	pointer
=	O
strchr	function
(	O
alphabet	array
,	O
text	pointer
[	O
i	int
]	O
)	O
)	O
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
Barcode_11_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
{	O
static	O
char	O
*	O
text	pointer
;	O
static	O
char	O
*	O
partial	pointer
;	O
static	O
char	O
*	O
textinfo	pointer
;	O
char	O
*	O
c	pointer
=	O
NULL	O
,	O
*	O
textptr	pointer
=	O
NULL	O
;	O
int	O
i	int
,	O
code	int
,	O
textpos	int
,	O
len	int
=	O
0	int
;	O
int	O
weight	int
=	O
0	int
;	O
int	O
c_checksum	int
=	O
0	int
,	O
k_checksum	int
=	O
0	int
;	O
if	O
(	O
bc	pointer
->	O
partial	pointer
)	O
free	function
(	O
bc	pointer
->	O
partial	pointer
)	O
;	O
if	O
(	O
bc	pointer
->	O
textinfo	pointer
)	O
free	function
(	O
bc	pointer
->	O
textinfo	pointer
)	O
;	O
bc	pointer
->	O
partial	pointer
=	O
bc	pointer
->	O
textinfo	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
bc	pointer
->	O
encoding	pointer
==	O
NULL	O
)	O
)	O
bc	pointer
->	O
encoding	pointer
=	O
strdup	function
(	O
"code 11"	pointer
)	O
;	O
if	O
(	O
(	O
text	pointer
=	O
bc	pointer
->	O
ascii	pointer
)	O
==	O
NULL	O
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
len	int
=	O
strlen	function
(	O
text	pointer
)	O
)	O
==	O
0	int
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
partial	pointer
=	O
(	O
char	O
*	O
)	O
calloc	function
(	O
1	int
,	O
(	O
len	int
>=	O
10	int
)	O
?	O
(	O
(	O
len	int
+	O
4	int
)	O
*	O
7	int
)	O
+	O
1	int
:	O
(	O
(	O
len	int
+	O
3	int
)	O
*	O
7	int
)	O
+	O
1	int
)	O
)	O
==	O
NULL	O
)	O
{	O
bc	pointer
->	O
error	int
=	O
errno	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
textinfo	pointer
=	O
(	O
char	O
*	O
)	O
calloc	function
(	O
1	int
,	O
10	int
*	O
(	O
len	int
+	O
2	int
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
bc	pointer
->	O
error	int
=	O
errno	O
;	O
free	function
(	O
partial	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
strcpy	function
(	O
partial	pointer
,	O
"0"	pointer
)	O
;	O
strcat	function
(	O
partial	pointer
,	O
codeset	array
[	O
START_STOP	int
]	O
)	O
;	O
textptr	pointer
=	O
textinfo	pointer
;	O
textpos	int
=	O
7	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
text	pointer
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
c	pointer
=	O
strchr	function
(	O
alphabet	array
,	O
text	pointer
[	O
i	int
]	O
)	O
)	O
==	O
NULL	O
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
free	function
(	O
partial	pointer
)	O
;	O
free	function
(	O
textinfo	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
code	int
=	O
c	pointer
-	O
alphabet	array
;	O
strcat	function
(	O
partial	pointer
,	O
codeset	array
[	O
code	int
]	O
)	O
;	O
sprintf	function
(	O
textptr	pointer
,	O
"%i:7:%c "	pointer
,	O
textpos	int
,	O
text	pointer
[	O
i	int
]	O
)	O
;	O
textpos	int
+=	O
7	int
;	O
textptr	pointer
+=	O
strlen	function
(	O
textptr	pointer
)	O
;	O
}	O
if	O
(	O
(	O
bc	pointer
->	O
flags	int
&	O
BARCODE_NO_CHECKSUM	int
)	O
==	O
0	int
)	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
len	int
;	O
i	int
++	O
)	O
{	O
weight	int
=	O
(	O
(	O
i	int
-	O
1	int
)	O
%	O
10	int
)	O
+	O
1	int
;	O
if	O
(	O
text	pointer
[	O
len	int
-	O
i	int
]	O
==	O
HYPHEN	int
)	O
c_checksum	int
+=	O
(	O
10	int
*	O
weight	int
)	O
;	O
else	O
c_checksum	int
+=	O
(	O
(	O
text	pointer
[	O
len	int
-	O
i	int
]	O
-	O
48	int
)	O
*	O
weight	int
)	O
;	O
}	O
strcat	function
(	O
partial	pointer
,	O
codeset	array
[	O
c_checksum	int
%	O
11	int
]	O
)	O
;	O
if	O
(	O
len	int
>=	O
10	int
)	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<=	O
len	int
;	O
i	int
++	O
)	O
{	O
weight	int
=	O
(	O
(	O
i	int
-	O
1	int
)	O
%	O
9	int
)	O
+	O
(	O
i	int
<	O
9	int
?	O
2	int
:	O
1	int
)	O
;	O
if	O
(	O
text	pointer
[	O
len	int
-	O
i	int
]	O
==	O
HYPHEN	int
)	O
k_checksum	int
+=	O
(	O
10	int
*	O
weight	int
)	O
;	O
else	O
k_checksum	int
+=	O
(	O
(	O
text	pointer
[	O
len	int
-	O
i	int
]	O
-	O
48	int
)	O
*	O
weight	int
)	O
;	O
}	O
k_checksum	int
+=	O
(	O
c_checksum	int
%	O
11	int
)	O
;	O
strcat	function
(	O
partial	pointer
,	O
codeset	array
[	O
k_checksum	int
%	O
9	int
]	O
)	O
;	O
}	O
}	O
strcat	function
(	O
partial	pointer
,	O
codeset	array
[	O
START_STOP	int
]	O
)	O
;	O
bc	pointer
->	O
partial	pointer
=	O
partial	pointer
;	O
bc	pointer
->	O
textinfo	pointer
=	O
textinfo	pointer
;	O
return	O
0	int
;	O
}	O