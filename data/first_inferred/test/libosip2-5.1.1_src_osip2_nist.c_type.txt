int	O
__osip_nist_init	function
(	O
osip_nist_t	struct
*	O
*	O
nist	*
,	O
osip_t	struct
*	O
osip	struct
,	O
osip_message_t	struct
*	O
invite	*
)	O
{	O
int	O
i	int
;	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"allocating NIST context\n"	*
)	O
)	O
;	O
*	O
nist	*
=	O
(	O
osip_nist_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_nist_t	*
)	O
)	O
;	O
if	O
(	O
*	O
nist	*
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	function
(	O
*	O
nist	*
,	O
0	int
,	O
sizeof	O
(	O
osip_nist_t	*
)	O
)	O
;	O
{	O
osip_via_t	struct
*	O
via	*
;	O
char	O
*	O
proto	*
;	O
i	int
=	O
osip_message_get_via	function
(	O
invite	*
,	O
0	int
,	O
&	O
via	*
)	O
;	O
if	O
(	O
i	int
<	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
nist	*
)	O
;	O
*	O
nist	*
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
proto	*
=	O
via_get_protocol	function
(	O
via	*
)	O
;	O
if	O
(	O
proto	*
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
nist	*
)	O
;	O
*	O
nist	*
=	O
NULL	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
osip_strcasecmp	function
(	O
proto	*
,	O
"TCP"	*
)	O
!=	O
0	int
&&	O
osip_strcasecmp	function
(	O
proto	*
,	O
"TLS"	*
)	O
!=	O
0	int
&&	O
osip_strcasecmp	function
(	O
proto	*
,	O
"SCTP"	*
)	O
!=	O
0	int
)	O
{	O
(	O
*	O
nist	*
)	O
->	O
timer_j_length	int
=	O
64	int
*	O
DEFAULT_T1	int
;	O
(	O
*	O
nist	*
)	O
->	O
timer_j_start	struct
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
else	O
{	O
(	O
*	O
nist	*
)	O
->	O
timer_j_length	int
=	O
0	int
;	O
(	O
*	O
nist	*
)	O
->	O
timer_j_start	struct
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_nist_free	function
(	O
osip_nist_t	struct
*	O
nist	*
)	O
{	O
if	O
(	O
nist	*
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"free nist resource\n"	*
)	O
)	O
;	O
osip_free	O
(	O
nist	*
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_event_t	struct
*	O
__osip_nist_need_timer_j_event	function
(	O
osip_nist_t	struct
*	O
nist	*
,	O
state_t	enum
state	*
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	function
(	O
nist	*
,	O
&	O
nist	*
->	O
timer_j_start	struct
,	O
state	*
==	O
NIST_COMPLETED	int
,	O
transactionid	int
,	O
TIMEOUT_J	int
)	O
;	O
}	O