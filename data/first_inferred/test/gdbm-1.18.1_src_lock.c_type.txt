void	O
_gdbm_unlock_file	function
(	O
GDBM_FILE	pointer
dbf	pointer
)	O
{	O
struct	O
flock	struct
fl	struct
;	O
switch	O
(	O
dbf	pointer
->	O
lock_type	int
)	O
{	O
case	O
LOCKING_FLOCK	int
:	O
flock	O
(	O
dbf	pointer
->	O
desc	int
,	O
LOCK_UN	int
)	O
;	O
break	O
;	O
case	O
LOCKING_LOCKF	int
:	O
lockf	function
(	O
dbf	pointer
->	O
desc	int
,	O
F_ULOCK	int
,	O
(	O
off_t	long
)	O
0L	int
)	O
;	O
break	O
;	O
case	O
LOCKING_FCNTL	int
:	O
fl	struct
.	O
l_type	int
=	O
F_UNLCK	int
;	O
fl	struct
.	O
l_whence	int
=	O
SEEK_SET	int
;	O
fl	struct
.	O
l_start	long
=	O
fl	struct
.	O
l_len	long
=	O
(	O
off_t	long
)	O
0L	int
;	O
fcntl	function
(	O
dbf	pointer
->	O
desc	int
,	O
F_SETLK	int
,	O
&	O
fl	double
)	O
;	O
break	O
;	O
case	O
LOCKING_NONE	int
:	O
break	O
;	O
}	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_NONE	int
;	O
}	O
int	O
_gdbm_lock_file	function
(	O
GDBM_FILE	pointer
dbf	pointer
)	O
{	O
struct	O
flock	struct
fl	struct
;	O
int	O
lock_val	int
=	O
-	O
1	int
;	O
if	O
(	O
dbf	pointer
->	O
read_write	int
==	O
GDBM_READER	int
)	O
lock_val	int
=	O
flock	O
(	O
dbf	pointer
->	O
desc	int
,	O
LOCK_SH	int
+	O
LOCK_NB	int
)	O
;	O
else	O
lock_val	int
=	O
flock	O
(	O
dbf	pointer
->	O
desc	int
,	O
LOCK_EX	int
+	O
LOCK_NB	int
)	O
;	O
if	O
(	O
(	O
lock_val	int
==	O
-	O
1	int
)	O
&&	O
(	O
errno	O
==	O
EWOULDBLOCK	O
)	O
)	O
{	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_NONE	int
;	O
return	O
lock_val	int
;	O
}	O
else	O
if	O
(	O
lock_val	int
!=	O
-	O
1	int
)	O
{	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_FLOCK	int
;	O
return	O
lock_val	int
;	O
}	O
lock_val	int
=	O
lockf	function
(	O
dbf	pointer
->	O
desc	int
,	O
F_LOCK	int
,	O
(	O
off_t	long
)	O
0L	int
)	O
;	O
if	O
(	O
(	O
lock_val	int
==	O
-	O
1	int
)	O
&&	O
(	O
errno	O
==	O
EDEADLK	int
)	O
)	O
{	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_NONE	int
;	O
return	O
lock_val	int
;	O
}	O
else	O
if	O
(	O
lock_val	int
!=	O
-	O
1	int
)	O
{	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_LOCKF	int
;	O
return	O
lock_val	int
;	O
}	O
if	O
(	O
dbf	pointer
->	O
read_write	int
==	O
GDBM_READER	int
)	O
fl	struct
.	O
l_type	int
=	O
F_RDLCK	int
;	O
else	O
fl	struct
.	O
l_type	int
=	O
F_WRLCK	int
;	O
fl	struct
.	O
l_whence	int
=	O
SEEK_SET	int
;	O
fl	struct
.	O
l_start	int
=	O
fl	struct
.	O
l_len	long
=	O
(	O
off_t	long
)	O
0L	int
;	O
lock_val	int
=	O
fcntl	function
(	O
dbf	pointer
->	O
desc	int
,	O
F_SETLK	int
,	O
&	O
fl	int
)	O
;	O
if	O
(	O
lock_val	int
!=	O
-	O
1	int
)	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_FCNTL	int
;	O
if	O
(	O
lock_val	int
==	O
-	O
1	int
)	O
dbf	pointer
->	O
lock_type	int
=	O
LOCKING_NONE	int
;	O
return	O
lock_val	int
;	O
}	O