int	O
mu_nntp_body	function
(	O
mu_nntp_t	*
nntp	*
,	O
unsigned	O
long	O
number	*
,	O
unsigned	O
long	O
*	O
pnum	*
,	O
char	O
*	O
*	O
mid	*
,	O
mu_stream_t	*
*	O
pstream	*
)	O
{	O
int	O
status	int
;	O
char	O
*	O
message_id	*
=	O
NULL	O
;	O
if	O
(	O
number	*
!=	O
0	int
)	O
{	O
message_id	*
=	O
malloc	function
(	O
128	int
)	O
;	O
if	O
(	O
message_id	*
==	O
NULL	O
)	O
{	O
return	O
ENOMEM	int
;	O
}	O
snprintf	function
(	O
message_id	*
,	O
127	int
,	O
"%lu"	*
,	O
number	*
)	O
;	O
}	O
status	int
=	O
mu_nntp_body_id	function
(	O
nntp	*
,	O
message_id	*
,	O
pnum	*
,	O
mid	*
,	O
pstream	*
)	O
;	O
if	O
(	O
message_id	*
)	O
{	O
free	function
(	O
message_id	*
)	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_nntp_body_id	function
(	O
mu_nntp_t	*
nntp	*
,	O
const	O
char	O
*	O
message_id	*
,	O
unsigned	O
long	O
*	O
pnum	*
,	O
char	O
*	O
*	O
mid	*
,	O
mu_stream_t	*
*	O
pstream	*
)	O
{	O
int	O
status	*
;	O
if	O
(	O
nntp	*
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pstream	*
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
switch	O
(	O
nntp	*
->	O
state	*
)	O
{	O
case	O
MU_NNTP_NO_STATE	int
:	O
if	O
(	O
message_id	*
==	O
0	int
||	O
*	O
message_id	*
==	O
'\0'	O
)	O
{	O
status	*
=	O
mu_nntp_writeline	function
(	O
nntp	*
,	O
"BODY\r\n"	*
)	O
;	O
}	O
else	O
{	O
status	*
=	O
mu_nntp_writeline	function
(	O
nntp	*
,	O
"BODY %s\r\n"	*
,	O
message_id	*
)	O
;	O
}	O
MU_NNTP_CHECK_ERROR	O
(	O
nntp	*
,	O
status	*
)	O
;	O
mu_nntp_debug_cmd	function
(	O
nntp	*
)	O
;	O
nntp	*
->	O
state	*
=	O
MU_NNTP_BODY	int
;	O
case	O
MU_NNTP_BODY	int
:	O
status	*
=	O
mu_nntp_send	function
(	O
nntp	*
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	*
,	O
status	*
)	O
;	O
nntp	*
->	O
acknowledge	int
=	O
0	int
;	O
nntp	*
->	O
state	*
=	O
MU_NNTP_BODY_ACK	int
;	O
case	O
MU_NNTP_BODY_ACK	int
:	O
status	*
=	O
mu_nntp_response	function
(	O
nntp	*
,	O
NULL	O
,	O
0	int
,	O
NULL	O
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	*
,	O
status	*
)	O
;	O
mu_nntp_debug_ack	function
(	O
nntp	*
)	O
;	O
MU_NNTP_CHECK_CODE	O
(	O
nntp	*
,	O
MU_NNTP_RESP_CODE_BODY_FOLLOW	function
)	O
;	O
status	*
=	O
mu_nntp_parse_article	function
(	O
nntp	*
,	O
MU_NNTP_RESP_CODE_BODY_FOLLOW	function
,	O
pnum	*
,	O
mid	*
)	O
;	O
MU_NNTP_CHECK_ERROR	O
(	O
nntp	*
,	O
status	*
)	O
;	O
nntp	*
->	O
state	*
=	O
MU_NNTP_BODY_RX	int
;	O
case	O
MU_NNTP_BODY_RX	int
:	O
status	*
=	O
mu_nntp_stream_create	function
(	O
nntp	*
,	O
pstream	*
)	O
;	O
MU_NNTP_CHECK_ERROR	O
(	O
nntp	*
,	O
status	*
)	O
;	O
break	O
;	O
case	O
MU_NNTP_ERROR	int
:	O
status	*
=	O
ECANCELED	int
;	O
break	O
;	O
default	O
:	O
status	int
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	int
;	O
}	O