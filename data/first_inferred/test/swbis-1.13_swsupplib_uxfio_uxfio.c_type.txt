static	O
unsigned	O
char	O
uxg_status_table	array
[	O
UXFIO_MAX_OPEN	int
]	O
;	O
static	O
int	O
uxg_desc_table	array
[	O
UXFIO_MAX_OPEN	int
]	O
;	O
static	O
UXFIO	struct
*	O
uxg_file_table	array
[	O
UXFIO_MAX_OPEN	int
]	O
;	O
static	O
int	O
uxg_did_init	int
=	O
0	int
;	O
static	O
int	O
uxg_nullfd	int
=	O
0	int
;	O
static	O
int	O
table_mon	function
(	O
int	O
cmd	int
,	O
int	O
*	O
uxfio_fildes	int
,	O
UXFIO	struct
*	O
*	O
uxfio_addr	pointer
)	O
;	O
static	O
int	O
internal_uxfio_open	function
(	O
UXFIO	struct
*	O
*	O
uxfio_aa	pointer
)	O
;	O
static	O
int	O
internal_uxfio_close	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
bufferstate	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
*	O
left	pointer
,	O
Xint	O
*	O
right	pointer
,	O
Xint	O
*	O
unused	pointer
)	O
;	O
static	O
int	O
fix_buffer	function
(	O
int	O
uxfiofd	int
,	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
totalbytes	long
,	O
char	O
*	O
p	pointer
,	O
Xint	O
new_bytes	long
)	O
;	O
static	O
int	O
fix_dynamic_buffer	function
(	O
int	O
uxfiofd	int
,	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
totalbytes	long
,	O
char	O
*	O
p	pointer
,	O
Xint	O
totalnewbytes	long
)	O
;	O
static	O
ssize_t	long
uxfio_common_read	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
int	O
uxfio_fildes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
,	O
int	O
pollingread	int
)	O
;	O
static	O
void	O
*	O
uxfio__memmove	function
(	O
void	O
*	O
dest	pointer
,	O
Xint	O
dest_offset	long
,	O
void	O
*	O
src	pointer
,	O
Xint	O
src_offset	long
,	O
Xint	O
amount	long
,	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
void	O
*	O
uxfio__memcpy	function
(	O
void	O
*	O
dest	pointer
,	O
Xint	O
dest_offset	long
,	O
void	O
*	O
src	pointer
,	O
Xint	O
src_offset	long
,	O
Xint	O
amount	long
,	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
uxfio__delete_buffer_file	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
uxfio__init_buffer_file	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
void	O
*	O
buf	pointer
,	O
int	O
len	long
)	O
;	O
static	O
void	O
*	O
do_file_buffer_move	function
(	O
void	O
*	O
dest	pointer
,	O
Xint	O
dest_offset	long
,	O
void	O
*	O
src	pointer
,	O
Xint	O
src_offset	long
,	O
Xint	O
amount	long
,	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
uxfio__read_bytes	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
amount	long
)	O
;	O
static	O
Xint	O
enforce_veof	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
nbyte	long
,	O
int	O
*	O
einval	pointer
)	O
;	O
static	O
Xint	O
enforce_set_position	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
nbyte	long
,	O
int	O
*	O
einval	pointer
)	O
;	O
static	O
void	O
uxfio__change_state	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
int	O
u	int
)	O
;	O
static	O
void	O
copy_stat_members	function
(	O
struct	O
stat	struct
*	O
buf	pointer
,	O
struct	O
stat	struct
*	O
statbuf	pointer
)	O
;	O
static	O
int	O
uxfio__get_state	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
uxfio__unlink_tmpfile	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
uxfio__close	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
closeit	int
)	O
;	O
char	O
*	O
uxfio_dump_string_from_object	function
(	O
UXFIO	struct
*	O
object	pointer
)	O
;	O
int	O
uxfio_decr_use_count	function
(	O
int	O
fd	int
)	O
;	O
static	O
int	O
do_buffered_flush	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
;	O
static	O
int	O
zero_fill	function
(	O
int	O
fd	int
,	O
int	O
amount	long
)	O
{	O
int	O
ret	int
;	O
int	O
rem	long
;	O
size_t	long
am	long
;	O
char	O
buf	pointer
[	O
512	int
]	O
;	O
memset	function
(	O
buf	pointer
,	O
'\0'	O
,	O
sizeof	O
(	O
buf	pointer
)	O
)	O
;	O
rem	long
=	O
amount	long
;	O
while	O
(	O
rem	long
>	O
0	int
)	O
{	O
if	O
(	O
rem	long
>	O
(	O
int	O
)	O
sizeof	O
(	O
buf	pointer
)	O
)	O
am	long
=	O
sizeof	O
(	O
buf	pointer
)	O
;	O
else	O
am	long
=	O
(	O
size_t	long
)	O
rem	long
;	O
ret	int
=	O
uxfio_write	function
(	O
fd	int
,	O
(	O
void	O
*	O
)	O
buf	pointer
,	O
am	long
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
rem	long
-=	O
ret	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
Xint	O
virtual_eof_active	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
return	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
||	O
uxfio	pointer
->	O
v_endM	long
>=	O
0	int
||	O
0	int
)	O
;	O
}	O
static	O
Xint	O
virtual_file_active	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
return	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
||	O
uxfio	pointer
->	O
offset_eof_savedM	long
>=	O
0	int
||	O
0	int
)	O
;	O
}	O
static	O
int	O
active_virtual_file_offset	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
if	O
(	O
virtual_file_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
return	O
uxfio	pointer
->	O
offset_bofM	long
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
}	O
static	O
int	O
bufferstate	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
*	O
left	pointer
,	O
Xint	O
*	O
right	pointer
,	O
Xint	O
*	O
unused	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
(	O
off_t	long
)	O
0	int
,	O
SEEK_CUR	int
)	O
!=	O
uxfio	pointer
->	O
posM	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: buffer file position.\n"	pointer
)	O
;	O
}	O
}	O
*	O
left	pointer
=	O
uxfio	pointer
->	O
posM	long
;	O
*	O
right	pointer
=	O
uxfio	pointer
->	O
endM	long
-	O
uxfio	pointer
->	O
posM	long
;	O
*	O
unused	pointer
=	O
uxfio	pointer
->	O
lenM	long
-	O
uxfio	pointer
->	O
endM	long
;	O
UXFIO_E_DEBUG3	O
(	O
"left=%d right=%d"	pointer
,	O
(	O
int	O
)	O
(	O
*	O
left	pointer
)	O
,	O
(	O
int	O
)	O
(	O
*	O
right	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
alloc_file	function
(	O
int	O
i	int
)	O
{	O
if	O
(	O
uxg_file_table	array
[	O
i	int
]	O
==	O
NULL	O
)	O
{	O
uxg_file_table	array
[	O
i	int
]	O
=	O
(	O
UXFIO	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
UXFIO	struct
)	O
)	O
;	O
}	O
}	O
static	O
int	O
table_find	function
(	O
int	O
uxfio_fildes	int
,	O
UXFIO	struct
*	O
*	O
uxfio_addr	pointer
,	O
int	O
v	int
)	O
{	O
static	O
int	O
last_used_fd_index	int
;	O
int	O
i	int
;	O
if	O
(	O
uxg_desc_table	array
[	O
last_used_fd_index	int
]	O
==	O
uxfio_fildes	int
)	O
{	O
if	O
(	O
last_used_fd_index	int
<	O
UXFIO_MAX_OPEN	int
&&	O
uxg_status_table	array
[	O
last_used_fd_index	int
]	O
>	O
0	int
)	O
{	O
alloc_file	function
(	O
last_used_fd_index	int
)	O
;	O
*	O
uxfio_addr	pointer
=	O
(	O
void	O
*	O
)	O
(	O
uxg_file_table	array
[	O
last_used_fd_index	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
}	O
if	O
(	O
uxfio_fildes	int
>=	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
<	O
UXFIO_MAX_OPEN	int
+	O
UXFIO_FD_MIN	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
UXFIO_MAX_OPEN	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
uxg_desc_table	array
[	O
i	int
]	O
==	O
uxfio_fildes	int
)	O
{	O
break	O
;	O
}	O
}	O
if	O
(	O
i	int
<	O
UXFIO_MAX_OPEN	int
&&	O
uxg_status_table	array
[	O
i	int
]	O
>	O
0	int
)	O
{	O
alloc_file	function
(	O
i	int
)	O
;	O
*	O
uxfio_addr	pointer
=	O
(	O
void	O
*	O
)	O
(	O
uxg_file_table	array
[	O
i	int
]	O
)	O
;	O
last_used_fd_index	int
=	O
i	int
;	O
return	O
0	int
;	O
}	O
}	O
*	O
uxfio_addr	pointer
=	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
if	O
(	O
uxfio_fildes	int
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
v	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: descriptor %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
static	O
int	O
table_mon	function
(	O
int	O
cmd	int
,	O
int	O
*	O
uxfio_fildes	int
,	O
UXFIO	struct
*	O
*	O
uxfio_addr	pointer
)	O
{	O
int	O
p_index	int
,	O
index	function
=	O
0	int
,	O
i	int
;	O
p_index	int
=	O
*	O
uxfio_fildes	int
;	O
if	O
(	O
cmd	int
==	O
UXFIO_FIND	int
)	O
{	O
return	O
table_find	function
(	O
p_index	int
,	O
uxfio_addr	pointer
,	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_REMOVE	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
UXFIO_MAX_OPEN	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
uxg_desc_table	array
[	O
i	int
]	O
==	O
p_index	int
)	O
{	O
index	function
=	O
i	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
i	int
<	O
UXFIO_MAX_OPEN	int
&&	O
uxg_status_table	array
[	O
index	function
]	O
>	O
0	int
)	O
{	O
uxg_status_table	array
[	O
index	function
]	O
=	O
0	int
;	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_ADD	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
UXFIO_MAX_OPEN	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
uxg_status_table	array
[	O
i	int
]	O
==	O
0	int
)	O
{	O
uxg_status_table	array
[	O
i	int
]	O
=	O
1	int
;	O
uxg_desc_table	array
[	O
i	int
]	O
=	O
UXFIO_FD_MIN	int
+	O
i	int
;	O
alloc_file	function
(	O
i	int
)	O
;	O
*	O
uxfio_addr	pointer
=	O
(	O
void	O
*	O
)	O
(	O
uxg_file_table	array
[	O
i	int
]	O
)	O
;	O
*	O
uxfio_fildes	int
=	O
UXFIO_FD_MIN	int
+	O
i	int
;	O
return	O
0	int
;	O
}	O
}	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: too many open files, UXFIO_MAX_OPEN=%d\n"	pointer
,	O
UXFIO_MAX_OPEN	int
)	O
;	O
*	O
uxfio_addr	pointer
=	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_INIT	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
UXFIO_MAX_OPEN	int
;	O
i	int
++	O
)	O
{	O
uxg_file_table	array
[	O
i	int
]	O
=	O
(	O
UXFIO	struct
*	O
)	O
NULL	O
;	O
}	O
uxg_did_init	int
=	O
1	int
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_QUERY_NOPEN	int
)	O
{	O
int	O
nopen	int
;	O
nopen	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
UXFIO_MAX_OPEN	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
uxg_status_table	array
[	O
i	int
]	O
!=	O
0	int
)	O
{	O
nopen	int
++	O
;	O
}	O
}	O
return	O
nopen	int
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: invalid table command.\n"	pointer
)	O
;	O
return	O
-	O
2	int
;	O
}	O
}	O
static	O
int	O
internal_uxfio_open	function
(	O
UXFIO	struct
*	O
*	O
uxfio_aa	pointer
)	O
{	O
int	O
uxfio_fd	int
;	O
UXFIO	struct
*	O
uxfio	pointer
;	O
if	O
(	O
!	O
uxg_did_init	int
)	O
table_mon	function
(	O
UXFIO_INIT	int
,	O
&	O
uxfio_fd	int
,	O
uxfio_aa	pointer
)	O
;	O
if	O
(	O
table_mon	function
(	O
UXFIO_ADD	int
,	O
&	O
uxfio_fd	int
,	O
uxfio_aa	pointer
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
uxfio	pointer
=	O
*	O
uxfio_aa	pointer
;	O
uxfio	pointer
->	O
uxfio_fildesM	int
=	O
uxfio_fd	int
;	O
uxfio	pointer
->	O
buffertypeM	int
=	O
UXFIO_BUFTYPE_MEM	int
;	O
uxfio	pointer
->	O
posM	long
=	O
0	int
;	O
uxfio	pointer
->	O
lenM	long
=	O
UXFIO_LEN	int
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
uxfio	pointer
->	O
endM	long
=	O
0	int
;	O
uxfio	pointer
->	O
errorM	int
=	O
0	int
;	O
uxfio	pointer
->	O
buffer_activeM	int
=	O
1	int
;	O
uxfio	pointer
->	O
buffdM	int
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
offset_eofM	long
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
offset_bofM	long
=	O
0	int
;	O
uxfio	pointer
->	O
offset_eof_savedM	long
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
bytesreadM	long
=	O
0	int
;	O
uxfio	pointer
->	O
current_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
auto_arm_delayM	int
=	O
0	int
;	O
uxfio	pointer
->	O
use_countM	int
=	O
1	int
;	O
uxfio	pointer
->	O
auto_disableM	int
=	O
0	int
;	O
uxfio	pointer
->	O
write_insertM	int
=	O
0	int
;	O
uxfio	pointer
->	O
buffilenameM	array
[	O
0	int
]	O
=	O
'\0'	O
;	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
=	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
uxfio	pointer
->	O
v_endM	long
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
statbufM	pointer
=	O
NULL	O
;	O
uxfio	pointer
->	O
did_dupe_fdM	int
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
lock_buf_fatalM	int
=	O
0	int
;	O
uxfio	pointer
->	O
output_block_sizeM	int
=	O
0	int
;	O
uxfio	pointer
->	O
output_buffer_cM	long
=	O
0	int
;	O
uxfio	pointer
->	O
output_bufferM	pointer
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
UXFIO_E_DEBUG3	O
(	O
"malloc %d %d"	pointer
,	O
uxfio_fd	int
,	O
UXFIO_LEN	int
)	O
;	O
if	O
(	O
(	O
uxfio	pointer
->	O
bufM	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
UXFIO_LEN	int
+	O
1	int
)	O
)	O
==	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
table_mon	function
(	O
UXFIO_REMOVE	int
,	O
&	O
uxfio_fd	int
,	O
&	O
uxfio	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
uxfio__change_state	function
(	O
uxfio	pointer
,	O
0	int
)	O
;	O
return	O
uxfio_fd	int
;	O
}	O
static	O
int	O
uxfio__get_state	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
vir_fsyncM	pointer
==	O
uxfio_fsync	function
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
static	O
void	O
uxfio__change_state	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
int	O
u	int
)	O
{	O
if	O
(	O
u	int
)	O
{	O
uxfio	pointer
->	O
vir_fsyncM	pointer
=	O
uxfio_fsync	function
;	O
uxfio	pointer
->	O
vir_readM	pointer
=	O
uxfio_read	function
;	O
uxfio	pointer
->	O
vir_tread_readM	pointer
=	O
uxfio_sfread	function
;	O
uxfio	pointer
->	O
vir_writeM	pointer
=	O
uxfio_write	function
;	O
uxfio	pointer
->	O
vir_closeM	pointer
=	O
uxfio_close	function
;	O
uxfio	pointer
->	O
vir_lseekM	pointer
=	O
uxfio_lseek	function
;	O
uxfio	pointer
->	O
vir_ftruncateM	pointer
=	O
uxfio_ftruncate	function
;	O
}	O
else	O
{	O
uxfio	pointer
->	O
vir_fsyncM	pointer
=	O
fsync	function
;	O
uxfio	pointer
->	O
vir_readM	pointer
=	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
filedes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbytes	long
)	O
)	O
(	O
uxfio_unix_safe_read	function
)	O
;	O
uxfio	pointer
->	O
vir_tread_readM	pointer
=	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
filedes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbytes	long
)	O
)	O
(	O
uxfio_unix_safe_atomic_read	function
)	O
;	O
uxfio	pointer
->	O
vir_writeM	pointer
=	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
filedes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbytes	long
)	O
)	O
(	O
uxfio_unix_safe_write	function
)	O
;	O
uxfio	pointer
->	O
vir_closeM	pointer
=	O
close	pointer
;	O
uxfio	pointer
->	O
vir_lseekM	pointer
=	O
lseek	function
;	O
uxfio	pointer
->	O
vir_ftruncateM	pointer
=	O
ftruncate	function
;	O
}	O
}	O
static	O
int	O
fix_buffer	function
(	O
int	O
uxfiofd	int
,	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
totalbytes	long
,	O
char	O
*	O
p	pointer
,	O
Xint	O
totalnewbytes	long
)	O
{	O
Xint	O
n	long
,	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
,	O
ret	int
;	O
UXFIO_E_DEBUG2	O
(	O
"ENTERING %d"	pointer
,	O
uxfiofd	int
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"BUFTYPE_FILE"	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
posM	long
+	O
totalnewbytes	long
>	O
uxfio	pointer
->	O
lenM	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
totalnewbytes	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in totalbewbytes"	pointer
)	O
;	O
n	long
=	O
(	O
Xint	O
)	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
(	O
off_t	long
)	O
0	int
,	O
SEEK_END	int
)	O
;	O
if	O
(	O
n	long
!=	O
uxfio	pointer
->	O
endM	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: fix_buffer uxfio->endM invalid value.\n"	pointer
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
n	long
=	O
(	O
size_t	long
)	O
uxfio_unix_atomic_write	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
p	pointer
+	O
(	O
int	O
)	O
totalbytes	long
-	O
totalnewbytes	long
,	O
totalnewbytes	long
)	O
;	O
if	O
(	O
n	long
<	O
0	int
)	O
{	O
perror	function
(	O
"exiting in uxfio fix_buffer"	pointer
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
exit	function
(	O
errno	O
)	O
;	O
}	O
uxfio	pointer
->	O
posM	long
+=	O
totalbytes	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
totalbytes	long
;	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"in totalbewbytes else"	pointer
)	O
;	O
uxfio	pointer
->	O
posM	long
+=	O
totalbytes	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
totalbytes	long
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
}	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"not BUFTYPE_FILE"	pointer
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"in totalbewbytes else"	pointer
)	O
;	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
if	O
(	O
totalnewbytes	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"entire buffer gets replaced"	pointer
)	O
;	O
if	O
(	O
totalbytes	long
>=	O
uxfio	pointer
->	O
lenM	long
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
ret	int
=	O
fix_dynamic_buffer	function
(	O
uxfiofd	int
,	O
uxfio	pointer
,	O
totalbytes	long
,	O
p	pointer
,	O
totalnewbytes	long
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
uxfio__memcpy	function
(	O
uxfio	pointer
->	O
bufM	pointer
,	O
0	int
,	O
p	pointer
,	O
totalbytes	long
-	O
uxfio	pointer
->	O
lenM	long
,	O
uxfio	pointer
->	O
lenM	long
,	O
uxfio	pointer
)	O
;	O
uxfio	pointer
->	O
posM	long
=	O
uxfio	pointer
->	O
lenM	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
uxfio	pointer
->	O
lenM	long
;	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
lenM	long
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
}	O
else	O
if	O
(	O
totalbytes	long
>	O
right	pointer
+	O
unused	pointer
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"totalbytes > right + unused"	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"BUFTYPE_DYNAMIC_MEM"	pointer
)	O
;	O
ret	int
=	O
fix_dynamic_buffer	function
(	O
uxfiofd	int
,	O
uxfio	pointer
,	O
totalbytes	long
,	O
p	pointer
,	O
totalnewbytes	long
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
uxfio__memmove	function
(	O
uxfio	pointer
->	O
bufM	pointer
,	O
0	int
,	O
uxfio	pointer
->	O
bufM	pointer
,	O
totalbytes	long
-	O
unused	pointer
-	O
right	pointer
,	O
uxfio	pointer
->	O
lenM	long
-	O
totalbytes	long
+	O
right	pointer
,	O
uxfio	pointer
)	O
;	O
uxfio	pointer
->	O
posM	long
=	O
uxfio	pointer
->	O
lenM	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
uxfio	pointer
->	O
lenM	long
;	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
uxfio__memcpy	function
(	O
uxfio	pointer
->	O
bufM	pointer
,	O
(	O
uxfio	pointer
->	O
lenM	long
-	O
totalbytes	long
)	O
,	O
p	pointer
,	O
0	int
,	O
totalbytes	long
,	O
uxfio	pointer
)	O
;	O
}	O
else	O
if	O
(	O
totalbytes	long
>	O
right	pointer
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"totalbytes > right"	pointer
)	O
;	O
uxfio__memcpy	function
(	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
posM	long
,	O
p	pointer
,	O
0	int
,	O
totalbytes	long
,	O
uxfio	pointer
)	O
;	O
uxfio	pointer
->	O
posM	long
=	O
uxfio	pointer
->	O
posM	long
+	O
totalbytes	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
totalbytes	long
;	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: 10005.3 \n"	pointer
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
uxfio	pointer
->	O
posM	long
+=	O
totalbytes	long
;	O
}	O
}	O
UXFIO_E_DEBUG2	O
(	O
"LEAVING %d"	pointer
,	O
uxfiofd	int
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
fix_dynamic_buffer	function
(	O
int	O
uxfiofd	int
,	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
totalbytes	long
,	O
char	O
*	O
p	pointer
,	O
Xint	O
totalnewbytes	long
)	O
{	O
Xint	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
;	O
char	O
*	O
newbuf	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"ENTERING %d"	pointer
,	O
uxfiofd	int
)	O
;	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
if	O
(	O
totalnewbytes	long
>	O
0	int
)	O
{	O
UXFIO_E_DEBUG3	O
(	O
"realloc %d %d"	pointer
,	O
uxfiofd	int
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
lenM	long
+	O
totalnewbytes	long
+	O
UXFIO_ALLOC_AHEAD	int
+	O
1	int
)	O
)	O
;	O
newbuf	pointer
=	O
(	O
char	O
*	O
)	O
SWBIS_REALLOC	O
(	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
lenM	long
+	O
totalnewbytes	long
+	O
UXFIO_ALLOC_AHEAD	int
+	O
1	int
,	O
uxfio	pointer
->	O
lenM	long
)	O
;	O
if	O
(	O
!	O
newbuf	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: fatal: out of memory at line %d\n"	pointer
,	O
__LINE__	O
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
}	O
memcpy	function
(	O
newbuf	pointer
+	O
uxfio	pointer
->	O
posM	long
,	O
p	pointer
,	O
totalbytes	long
)	O
;	O
uxfio	pointer
->	O
lenM	long
+=	O
(	O
totalnewbytes	long
+	O
UXFIO_ALLOC_AHEAD	int
)	O
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: fix_dynamic_buffer.\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
uxfio	pointer
->	O
posM	long
+=	O
totalbytes	long
;	O
if	O
(	O
uxfio	pointer
->	O
posM	long
>	O
uxfio	pointer
->	O
endM	long
)	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
memset	function
(	O
newbuf	pointer
+	O
uxfio	pointer
->	O
endM	long
,	O
(	O
int	O
)	O
'\0'	O
,	O
uxfio	pointer
->	O
lenM	long
+	O
1	int
-	O
uxfio	pointer
->	O
endM	long
)	O
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
if	O
(	O
newbuf	pointer
!=	O
uxfio	pointer
->	O
bufM	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
lock_buf_fatalM	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: Realloc moved pointer, fatal according to current configuration.\n"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: Fatal.. exiting with status 38.\n"	pointer
)	O
;	O
exit	function
(	O
38	int
)	O
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"ADDR CHANGE current bufM = %p"	pointer
,	O
uxfio	pointer
->	O
bufM	pointer
)	O
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"current bufM = %p"	pointer
,	O
uxfio	pointer
->	O
bufM	pointer
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"newbuf       = %p"	pointer
,	O
newbuf	pointer
)	O
;	O
uxfio	pointer
->	O
bufM	pointer
=	O
newbuf	pointer
;	O
UXFIO_E_DEBUG3	O
(	O
"posM = %d   endM = %d"	pointer
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
,	O
(	O
int	O
)	O
uxfio	pointer
->	O
endM	long
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"LEAVING %d"	pointer
,	O
uxfiofd	int
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
uxfio__read_bytes	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
amount	long
)	O
{	O
char	O
buf	pointer
[	O
4096	int
]	O
;	O
int	O
n	long
,	O
bite	int
,	O
haveread	int
=	O
0	int
;	O
while	O
(	O
amount	long
)	O
{	O
bite	int
=	O
(	O
amount	long
>	O
(	O
int	O
)	O
sizeof	O
(	O
buf	pointer
)	O
)	O
?	O
(	O
int	O
)	O
sizeof	O
(	O
buf	pointer
)	O
:	O
amount	long
;	O
if	O
(	O
(	O
n	long
=	O
uxfio_read	function
(	O
uxfio_fildes	int
,	O
buf	pointer
,	O
bite	int
)	O
)	O
<	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
haveread	int
+=	O
n	long
;	O
amount	long
-=	O
n	long
;	O
}	O
return	O
haveread	int
;	O
}	O
static	O
int	O
internal_uxfio_close	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
use_countM	int
>	O
1	int
)	O
{	O
uxfio	pointer
->	O
use_countM	int
--	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
bufM	pointer
)	O
swbis_free	O
(	O
uxfio	pointer
->	O
bufM	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
statbufM	pointer
)	O
{	O
swbis_free	O
(	O
uxfio	pointer
->	O
statbufM	pointer
)	O
;	O
uxfio	pointer
->	O
statbufM	pointer
=	O
NULL	O
;	O
}	O
uxfio__delete_buffer_file	function
(	O
uxfio	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
)	O
swbis_free	O
(	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
)	O
;	O
return	O
uxfio	pointer
->	O
uxfdM	int
;	O
}	O
static	O
int	O
uxfio__close	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
closeit	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
fd	int
;	O
int	O
ret	int
=	O
0	int
;	O
if	O
(	O
uxfio_fildes	int
==	O
uxg_nullfd	int
)	O
return	O
0	int
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"unix filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
return	O
close	pointer
(	O
uxfio_fildes	int
)	O
;	O
}	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
did_dupe_fdM	int
>=	O
0	int
)	O
{	O
uxfio_decr_use_count	function
(	O
uxfio	pointer
->	O
did_dupe_fdM	int
)	O
;	O
}	O
fd	int
=	O
internal_uxfio_close	function
(	O
uxfio	pointer
)	O
;	O
if	O
(	O
fd	int
<	O
0	int
&&	O
fd	int
!=	O
UXFIO_NULL_FD	O
)	O
{	O
UXFIO_E_DEBUG3	O
(	O
"file still in use: filedes=%d use_count=%d"	pointer
,	O
uxfio_fildes	int
,	O
uxfio	pointer
->	O
use_countM	int
)	O
;	O
if	O
(	O
closeit	int
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG2	O
(	O
"filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
fd	int
>=	O
0	int
)	O
{	O
if	O
(	O
closeit	int
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
ret	int
=	O
do_buffered_flush	function
(	O
uxfio	pointer
)	O
;	O
ret	int
=	O
(	O
*	O
(	O
uxfio	pointer
->	O
vir_closeM	pointer
)	O
)	O
(	O
fd	int
)	O
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG2	O
(	O
"filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
ret	int
=	O
fd	int
;	O
}	O
table_mon	function
(	O
UXFIO_REMOVE	int
,	O
&	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
else	O
{	O
table_mon	function
(	O
UXFIO_REMOVE	int
,	O
&	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
)	O
;	O
return	O
0	int
;	O
}	O
}	O
static	O
ssize_t	long
uxfio_common_read	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
int	O
uxfio_fildes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte_	long
,	O
int	O
pollingread	int
)	O
{	O
char	O
*	O
p	pointer
;	O
int	O
nbyte	long
=	O
(	O
int	O
)	O
nbyte_	long
;	O
int	O
n	long
;	O
int	O
einval	pointer
=	O
0	int
;	O
Xint	O
bufcount	long
;	O
Xint	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
,	O
oldpos	long
;	O
ssize_t	long
(	O
*	O
foo_read	pointer
)	O
(	O
int	O
filedes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbytes	long
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"ENTERING fildes = %d  nbyte=%d"	pointer
,	O
uxfio_fildes	int
,	O
(	O
int	O
)	O
nbyte	long
)	O
;	O
p	pointer
=	O
(	O
char	O
*	O
)	O
buf	pointer
;	O
if	O
(	O
uxfio	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: uxfio_common_read: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
uxfio_fildes	int
=	O
uxfio	pointer
->	O
uxfio_fildesM	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
||	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
||	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
||	O
uxfio	pointer
->	O
v_endM	long
>=	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"running enforce_veof"	pointer
)	O
;	O
nbyte	long
=	O
enforce_veof	function
(	O
uxfio	pointer
,	O
nbyte	long
,	O
&	O
einval	pointer
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"enforce_veof  nbyte(now) = %d"	pointer
,	O
nbyte	long
)	O
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"einval = %d"	pointer
,	O
einval	pointer
)	O
;	O
if	O
(	O
nbyte	long
<=	O
0	int
&&	O
einval	pointer
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"FOUND VEOF"	pointer
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"nbyte = %d einval = %d"	pointer
,	O
nbyte	long
,	O
einval	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"reseting eof"	pointer
)	O
;	O
uxfio	pointer
->	O
offset_eofM	long
=	O
-	O
(	O
uxfio	pointer
->	O
offset_eofM	long
)	O
;	O
uxfio	pointer
->	O
current_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
0	int
;	O
}	O
if	O
(	O
nbyte	long
<=	O
0	int
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"LEAVING fildes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
return	O
0	int
;	O
}	O
}	O
if	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
==	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"buffer_active is zero"	pointer
)	O
;	O
if	O
(	O
(	O
pollingread	int
&&	O
(	O
uxfio	pointer
->	O
uxfd_can_seekM	int
==	O
0	int
||	O
uxfio__get_state	function
(	O
uxfio	pointer
)	O
)	O
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"fildes=%d foo_read is tread."	pointer
,	O
uxfio_fildes	int
)	O
;	O
foo_read	pointer
=	O
uxfio	pointer
->	O
vir_tread_readM	pointer
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG2	O
(	O
"fildes=%d foo_read is read."	pointer
,	O
uxfio_fildes	int
)	O
;	O
foo_read	pointer
=	O
uxfio	pointer
->	O
vir_readM	pointer
;	O
}	O
UXFIO_E_DEBUG3	O
(	O
"fildes=%d uxfd=%d "	pointer
,	O
uxfio_fildes	int
,	O
uxfio	pointer
->	O
uxfdM	int
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"fildes=%d nbyte=%d "	pointer
,	O
uxfio_fildes	int
,	O
nbyte	long
)	O
;	O
n	long
=	O
(	O
*	O
foo_read	pointer
)	O
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
if	O
(	O
n	long
<	O
0	int
)	O
{	O
UXFIO_E_DEBUG3	O
(	O
"LEAVING fildes=%d ret = %d"	pointer
,	O
uxfio_fildes	int
,	O
n	long
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: read failed at line %d uxfio_fildes=[%d] uxfd=[%d] return value=[%d]\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
,	O
uxfio	pointer
->	O
uxfdM	int
,	O
n	long
)	O
;	O
if	O
(	O
foo_read	pointer
==	O
uxfio_unix_safe_read	function
)	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio_common_read: fd=%d  %s\n"	pointer
,	O
uxfio	pointer
->	O
uxfdM	int
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
n	long
;	O
}	O
uxfio	pointer
->	O
bytesreadM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
UXFIO_E_DEBUG3	O
(	O
"LEAVING fildes=%d ret = %d"	pointer
,	O
uxfio_fildes	int
,	O
n	long
)	O
;	O
return	O
n	long
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"posM = %d"	pointer
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
)	O
;	O
oldpos	long
=	O
uxfio	pointer
->	O
posM	long
;	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
posM	long
<	O
uxfio	pointer
->	O
endM	long
)	O
{	O
bufcount	long
=	O
nbyte	long
>=	O
right	pointer
?	O
right	pointer
:	O
nbyte	long
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
n	long
=	O
uxfio_unix_atomic_read	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
(	O
void	O
*	O
)	O
(	O
p	pointer
)	O
,	O
bufcount	long
)	O
;	O
if	O
(	O
n	long
!=	O
bufcount	long
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: file buffer read error\n"	pointer
)	O
;	O
if	O
(	O
n	long
>	O
0	int
)	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
-	O
n	long
,	O
SEEK_CUR	int
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"LEAVING fildes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
uxfio__memcpy	function
(	O
(	O
void	O
*	O
)	O
p	pointer
,	O
0	int
,	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
posM	long
,	O
bufcount	long
,	O
uxfio	pointer
)	O
;	O
}	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
bufcount	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
bufcount	long
;	O
if	O
(	O
bufcount	long
<	O
nbyte	long
)	O
{	O
if	O
(	O
pollingread	int
&&	O
(	O
uxfio	pointer
->	O
uxfd_can_seekM	int
==	O
0	int
||	O
uxfio__get_state	function
(	O
uxfio	pointer
)	O
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"fildes=%d foo_read is tread."	pointer
,	O
uxfio_fildes	int
)	O
;	O
foo_read	pointer
=	O
uxfio	pointer
->	O
vir_tread_readM	pointer
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG2	O
(	O
"fildes=%d foo_read is read."	pointer
,	O
uxfio_fildes	int
)	O
;	O
foo_read	pointer
=	O
uxfio	pointer
->	O
vir_readM	pointer
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
uxfdM	int
!=	O
UXFIO_NULL_FD	O
)	O
n	long
=	O
(	O
*	O
foo_read	pointer
)	O
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
(	O
void	O
*	O
)	O
(	O
p	pointer
+	O
bufcount	long
)	O
,	O
nbyte	long
-	O
bufcount	long
)	O
;	O
else	O
n	long
=	O
0	int
;	O
if	O
(	O
n	long
<	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: read failed line=%d\n"	pointer
,	O
__LINE__	O
)	O
;	O
return	O
n	long
;	O
}	O
uxfio	pointer
->	O
bytesreadM	long
+=	O
n	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
n	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
n	long
;	O
if	O
(	O
fix_buffer	function
(	O
uxfio_fildes	int
,	O
uxfio	pointer
,	O
bufcount	long
+	O
n	long
,	O
p	pointer
,	O
n	long
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: 10004.0 \n"	pointer
)	O
;	O
}	O
return	O
bufcount	long
+	O
n	long
;	O
}	O
else	O
{	O
if	O
(	O
fix_buffer	function
(	O
uxfio_fildes	int
,	O
uxfio	pointer
,	O
bufcount	long
,	O
p	pointer
,	O
0	int
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: 10004.1 \n"	pointer
)	O
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"LEAVING fildes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
return	O
bufcount	long
;	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
pollingread	int
&&	O
uxfio	pointer
->	O
uxfd_can_seekM	int
==	O
0	int
)	O
||	O
uxfio__get_state	function
(	O
uxfio	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"fildes=%d foo_read is tread."	pointer
,	O
uxfio_fildes	int
)	O
;	O
foo_read	pointer
=	O
uxfio	pointer
->	O
vir_tread_readM	pointer
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG2	O
(	O
"fildes=%d foo_read is read."	pointer
,	O
uxfio_fildes	int
)	O
;	O
foo_read	pointer
=	O
uxfio	pointer
->	O
vir_readM	pointer
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
uxfdM	int
!=	O
UXFIO_NULL_FD	O
)	O
n	long
=	O
(	O
*	O
foo_read	pointer
)	O
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
(	O
void	O
*	O
)	O
(	O
p	pointer
)	O
,	O
nbyte	long
)	O
;	O
else	O
n	long
=	O
0	int
;	O
if	O
(	O
n	long
<	O
0	int
)	O
{	O
return	O
n	long
;	O
}	O
uxfio	pointer
->	O
bytesreadM	long
+=	O
n	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
n	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
n	long
;	O
if	O
(	O
fix_buffer	function
(	O
uxfio_fildes	int
,	O
uxfio	pointer
,	O
n	long
,	O
p	pointer
,	O
n	long
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: 10004.2 \n"	pointer
)	O
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
auto_disableM	int
)	O
{	O
uxfio	pointer
->	O
auto_disableM	int
=	O
0	int
;	O
if	O
(	O
uxfio_fcntl	function
(	O
uxfio_fildes	int
,	O
UXFIO_F_SET_BUFACTIVE	O
,	O
UXFIO_OFF	int
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: auto_disable error\n"	pointer
)	O
;	O
}	O
}	O
UXFIO_E_DEBUG3	O
(	O
"LEAVING fildes=%d ret=%d"	pointer
,	O
uxfio_fildes	int
,	O
n	long
)	O
;	O
return	O
n	long
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"error %d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"LEAVING ret=%d"	pointer
,	O
UXFIO_RET_EFAIL	O
)	O
;	O
return	O
UXFIO_RET_EFAIL	O
;	O
}	O
static	O
ssize_t	long
uxfio_common_safe_read	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
int	O
nbyte	long
)	O
{	O
int	O
n	long
=	O
0	int
,	O
nret	int
=	O
1	int
;	O
char	O
*	O
p	pointer
=	O
(	O
char	O
*	O
)	O
(	O
buf	pointer
)	O
;	O
while	O
(	O
n	long
<	O
nbyte	long
&&	O
nret	int
)	O
{	O
nret	int
=	O
uxfio_common_read	function
(	O
uxfio	pointer
,	O
fd	int
,	O
p	pointer
+	O
n	long
,	O
nbyte	long
-	O
n	long
,	O
0	int
)	O
;	O
if	O
(	O
nret	int
<	O
0	int
)	O
return	O
nret	int
;	O
n	long
+=	O
nret	int
;	O
}	O
return	O
n	long
;	O
}	O
static	O
Xint	O
enforce_veof	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
nbyte	long
,	O
int	O
*	O
einval	pointer
)	O
{	O
Xint	O
remaining	long
=	O
0	int
;	O
if	O
(	O
einval	pointer
)	O
*	O
einval	pointer
=	O
0	int
;	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"virtual eof active"	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
)	O
{	O
remaining	long
=	O
uxfio	pointer
->	O
offset_eofM	long
-	O
uxfio	pointer
->	O
virtual_offsetM	long
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
v_endM	long
>=	O
0	int
)	O
{	O
remaining	long
=	O
uxfio	pointer
->	O
v_endM	long
-	O
uxfio	pointer
->	O
current_offsetM	long
;	O
}	O
}	O
else	O
{	O
uxfio	pointer
->	O
offset_eof_savedM	long
=	O
-	O
1	int
;	O
return	O
nbyte	long
;	O
}	O
if	O
(	O
remaining	long
<=	O
nbyte	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"setting einval"	pointer
)	O
;	O
*	O
einval	pointer
=	O
1	int
;	O
UXFIO_E_DEBUG2	O
(	O
"enforcing veof %d\n"	pointer
,	O
(	O
int	O
)	O
remaining	long
)	O
;	O
return	O
remaining	long
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG2	O
(	O
"no end found. returning %d"	pointer
,	O
(	O
int	O
)	O
nbyte	long
)	O
;	O
return	O
nbyte	long
;	O
}	O
}	O
static	O
Xint	O
enforce_set_position	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
Xint	O
offset	long
,	O
int	O
*	O
einval	pointer
)	O
{	O
Xint	O
passed	long
;	O
passed	long
=	O
uxfio	pointer
->	O
bytesreadM	long
;	O
*	O
einval	pointer
=	O
0	int
;	O
UXFIO_E_DEBUG2	O
(	O
"offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"passed = %d"	pointer
,	O
(	O
int	O
)	O
passed	long
)	O
;	O
if	O
(	O
offset	long
>=	O
0	int
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"returning offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
return	O
offset	long
;	O
}	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
if	O
(	O
offset	long
<	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
!	O
passed	long
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
""	pointer
)	O
;	O
passed	long
=	O
uxfio	pointer
->	O
offset_eofM	long
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
v_endM	long
>=	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
""	pointer
)	O
;	O
passed	long
=	O
uxfio	pointer
->	O
v_endM	long
;	O
}	O
else	O
{	O
passed	long
=	O
0	int
;	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio warning: internal exception enforce_set_position()\n"	pointer
)	O
;	O
}	O
}	O
if	O
(	O
-	O
offset	long
>	O
passed	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
""	pointer
)	O
;	O
*	O
einval	pointer
=	O
1	int
;	O
UXFIO_E_DEBUG	O
(	O
"returning 0"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
}	O
}	O
UXFIO_E_DEBUG2	O
(	O
"returning %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
return	O
offset	long
;	O
}	O
static	O
int	O
uxfio__delete_buffer_file	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffdM	int
<	O
0	int
||	O
!	O
(	O
*	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
close	pointer
(	O
uxfio	pointer
->	O
buffdM	int
)	O
;	O
uxfio__unlink_tmpfile	function
(	O
uxfio	pointer
)	O
;	O
uxfio	pointer
->	O
buffdM	int
=	O
-	O
1	int
;	O
(	O
*	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
=	O
'\0'	O
;	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
}	O
static	O
int	O
uxfio__init_buffer_file	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
void	O
*	O
buf	pointer
,	O
int	O
len	long
)	O
{	O
int	O
fd	int
,	O
ret	int
;	O
char	O
*	O
dirtmp	pointer
;	O
char	O
*	O
rootdir	pointer
;	O
static	O
char	O
default_rootdir	array
[	O
]	O
=	O
UXFIO_TMPFILE_ROOTDIR	pointer
;	O
UXFIO_E_DEBUG	O
(	O
"ENTERING"	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
buffdM	int
>	O
0	int
&&	O
(	O
*	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"already have tmpfile"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
(	O
uxfio	pointer
->	O
buffdM	int
<	O
0	int
&&	O
(	O
*	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
)	O
||	O
(	O
uxfio	pointer
->	O
buffdM	int
>	O
0	int
&&	O
!	O
(	O
*	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
)	O
)	O
{	O
UXFIO_E_FAIL	O
(	O
"invalid condition"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
)	O
{	O
rootdir	pointer
=	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
;	O
}	O
else	O
{	O
rootdir	pointer
=	O
default_rootdir	array
;	O
}	O
dirtmp	pointer
=	O
malloc	function
(	O
strlen	function
(	O
rootdir	pointer
)	O
+	O
strlen	function
(	O
UXFIO_TMPFILE_PFX	pointer
)	O
+	O
7	int
)	O
;	O
if	O
(	O
!	O
dirtmp	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: line %d: out of memory.\n"	pointer
,	O
__LINE__	O
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
}	O
strcpy	function
(	O
dirtmp	pointer
,	O
rootdir	pointer
)	O
;	O
strcat	function
(	O
dirtmp	pointer
,	O
UXFIO_TMPFILE_PFX	pointer
)	O
;	O
strcat	function
(	O
dirtmp	pointer
,	O
"XXXXXX"	pointer
)	O
;	O
if	O
(	O
strlen	function
(	O
dirtmp	pointer
)	O
-	O
1	int
>	O
sizeof	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
{	O
swbis_free	O
(	O
dirtmp	pointer
)	O
;	O
uxfio	pointer
->	O
buffdM	int
=	O
-	O
1	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"temp file name too long.\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
strncpy	function
(	O
uxfio	pointer
->	O
buffilenameM	array
,	O
dirtmp	pointer
,	O
sizeof	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
;	O
uxfio	pointer
->	O
buffilenameM	array
[	O
sizeof	O
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
swbis_free	O
(	O
dirtmp	pointer
)	O
;	O
}	O
fd	int
=	O
mkstemp	function
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
;	O
SWBISERROR3	O
(	O
"Informative Message:"	pointer
,	O
"%p Making tmpfile: [%s]"	pointer
,	O
(	O
void	O
*	O
)	O
uxfio	pointer
,	O
uxfio	pointer
->	O
buffilenameM	array
)	O
;	O
if	O
(	O
fd	int
<	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"mkstemp failed: %s\n"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
exit	function
(	O
errno	O
)	O
;	O
}	O
uxfio	pointer
->	O
buffdM	int
=	O
fd	int
;	O
uxfio	pointer
->	O
lenM	long
=	O
UXFIO_FLEN	int
;	O
uxfio	pointer
->	O
startM	long
=	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
=	O
0	int
;	O
if	O
(	O
buf	pointer
&&	O
(	O
len	long
>	O
0	int
)	O
)	O
{	O
UXFIO_E_DEBUG3	O
(	O
"fd=%d len=%d"	pointer
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
buffdM	int
)	O
,	O
(	O
int	O
)	O
len	long
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
uxfio_unix_atomic_write	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
buf	pointer
,	O
len	long
)	O
)	O
!=	O
len	long
)	O
{	O
close	pointer
(	O
uxfio	pointer
->	O
buffdM	int
)	O
;	O
if	O
(	O
uxfio__unlink_tmpfile	function
(	O
uxfio	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error: error unlinking file %s\n"	pointer
,	O
uxfio	pointer
->	O
buffilenameM	array
)	O
;	O
}	O
UXFIO_E_FAIL2	O
(	O
"fatal, write failed on [%s]"	pointer
,	O
uxfio	pointer
->	O
buffilenameM	array
)	O
;	O
exit	function
(	O
errno	O
)	O
;	O
}	O
else	O
{	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
uxfio	pointer
->	O
endM	long
=	O
len	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
posM	long
=	O
0	int
;	O
if	O
(	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
uxfio	pointer
->	O
posM	long
,	O
SEEK_SET	int
)	O
<	O
0	int
)	O
{	O
UXFIO_E_FAIL2	O
(	O
"%s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"uxfio->endM=%d"	pointer
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
endM	long
)	O
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
*	O
uxfio__memcpy	function
(	O
void	O
*	O
dest	pointer
,	O
Xint	O
dest_offset	long
,	O
void	O
*	O
src	pointer
,	O
Xint	O
src_offset	long
,	O
Xint	O
amount	long
,	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
return	O
do_file_buffer_move	function
(	O
dest	pointer
,	O
dest_offset	long
,	O
src	pointer
,	O
src_offset	long
,	O
amount	long
,	O
uxfio	pointer
)	O
;	O
}	O
else	O
{	O
return	O
memcpy	function
(	O
(	O
void	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
dest	pointer
+	O
dest_offset	long
)	O
,	O
(	O
void	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
src	pointer
+	O
src_offset	long
)	O
,	O
(	O
size_t	long
)	O
amount	long
)	O
;	O
}	O
}	O
static	O
void	O
*	O
uxfio__memmove	function
(	O
void	O
*	O
dest	pointer
,	O
Xint	O
dest_offset	long
,	O
void	O
*	O
src	pointer
,	O
Xint	O
src_offset	long
,	O
Xint	O
amount	long
,	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
return	O
do_file_buffer_move	function
(	O
dest	pointer
,	O
dest_offset	long
,	O
src	pointer
,	O
src_offset	long
,	O
amount	long
,	O
uxfio	pointer
)	O
;	O
}	O
else	O
{	O
return	O
memmove	function
(	O
(	O
void	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
dest	pointer
+	O
dest_offset	long
)	O
,	O
(	O
void	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
src	pointer
+	O
src_offset	long
)	O
,	O
(	O
size_t	long
)	O
amount	long
)	O
;	O
}	O
}	O
static	O
void	O
*	O
do_file_buffer_move	function
(	O
void	O
*	O
dest	pointer
,	O
Xint	O
dest_offset	long
,	O
void	O
*	O
src	pointer
,	O
Xint	O
src_offset	long
,	O
Xint	O
amount	long
,	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
static	O
void	O
copy_stat_members	function
(	O
struct	O
stat	struct
*	O
buf	pointer
,	O
struct	O
stat	struct
*	O
statbuf	pointer
)	O
{	O
buf	pointer
->	O
st_mode	int
=	O
statbuf	pointer
->	O
st_mode	int
;	O
buf	pointer
->	O
st_ino	long
=	O
statbuf	pointer
->	O
st_ino	long
;	O
buf	pointer
->	O
st_dev	long
=	O
statbuf	pointer
->	O
st_dev	long
;	O
buf	pointer
->	O
st_rdev	long
=	O
statbuf	pointer
->	O
st_rdev	long
;	O
buf	pointer
->	O
st_nlink	long
=	O
statbuf	pointer
->	O
st_nlink	long
;	O
buf	pointer
->	O
st_uid	int
=	O
statbuf	pointer
->	O
st_uid	int
;	O
buf	pointer
->	O
st_gid	int
=	O
statbuf	pointer
->	O
st_gid	int
;	O
buf	pointer
->	O
st_size	long
=	O
statbuf	pointer
->	O
st_size	long
;	O
buf	pointer
->	O
st_atime	O
=	O
statbuf	pointer
->	O
st_atime	O
;	O
buf	pointer
->	O
st_mtime	O
=	O
statbuf	pointer
->	O
st_mtime	O
;	O
buf	pointer
->	O
st_ctime	O
=	O
statbuf	pointer
->	O
st_ctime	O
;	O
buf	pointer
->	O
st_blksize	long
=	O
statbuf	pointer
->	O
st_blksize	long
;	O
buf	pointer
->	O
st_blocks	long
=	O
statbuf	pointer
->	O
st_blocks	long
;	O
}	O
static	O
int	O
uxfio__unlink_tmpfile	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
int	O
ret	int
=	O
0	int
;	O
SWBISERROR3	O
(	O
"Informative Message:"	pointer
,	O
"%p unlink tmpfile: [%s]"	pointer
,	O
(	O
void	O
*	O
)	O
uxfio	pointer
,	O
uxfio	pointer
->	O
buffilenameM	array
)	O
;	O
if	O
(	O
unlink	function
(	O
uxfio	pointer
->	O
buffilenameM	array
)	O
)	O
{	O
ret	int
=	O
-	O
1	int
;	O
if	O
(	O
errno	O
!=	O
ENOENT	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error: error unlinking file %s: %s\n"	pointer
,	O
uxfio	pointer
->	O
buffilenameM	array
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
}	O
}	O
return	O
ret	int
;	O
}	O
static	O
int	O
uxfio_internal_ftruncate	function
(	O
int	O
uxfio_fildes	int
,	O
off_t	long
nbyte	long
)	O
{	O
int	O
ret	int
;	O
UXFIO	struct
*	O
uxfio	pointer
;	O
intmax_t	long
amount	long
;	O
off_t	long
pos	long
;	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]:  file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
statbufM	pointer
&&	O
uxfio	pointer
->	O
v_endM	long
>	O
0	int
)	O
{	O
if	O
(	O
nbyte	long
>	O
uxfio	pointer
->	O
v_endM	long
)	O
{	O
uxfio	pointer
->	O
v_endM	long
=	O
(	O
Xint	O
)	O
nbyte	long
;	O
uxfio	pointer
->	O
statbufM	pointer
->	O
st_size	long
=	O
nbyte	long
;	O
if	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>	O
nbyte	long
)	O
{	O
uxfio	pointer
->	O
offset_eofM	long
=	O
(	O
int	O
)	O
nbyte	long
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
bytesreadM	long
>	O
nbyte	long
)	O
{	O
uxfio	pointer
->	O
bytesreadM	long
=	O
(	O
int	O
)	O
nbyte	long
;	O
uxfio	pointer
->	O
current_offsetM	long
=	O
(	O
int	O
)	O
nbyte	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
(	O
int	O
)	O
nbyte	long
;	O
}	O
}	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
posM	long
>=	O
uxfio	pointer
->	O
endM	long
)	O
{	O
return	O
ftruncate	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
(	O
off_t	long
)	O
(	O
0	int
)	O
)	O
;	O
}	O
else	O
{	O
return	O
-	O
2	int
;	O
}	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
Xint	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
;	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
pos	long
=	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
0	int
,	O
SEEK_CUR	int
)	O
;	O
if	O
(	O
pos	long
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
nbyte	long
>	O
uxfio	pointer
->	O
endM	long
)	O
{	O
char	O
buf	pointer
[	O
512	int
]	O
;	O
if	O
(	O
pos	long
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
0	int
,	O
SEEK_END	int
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
memset	function
(	O
buf	pointer
,	O
'\0'	O
,	O
sizeof	O
(	O
buf	pointer
)	O
)	O
;	O
amount	long
=	O
(	O
intmax_t	long
)	O
(	O
nbyte	long
-	O
uxfio	pointer
->	O
endM	long
)	O
;	O
ret	int
=	O
zero_fill	function
(	O
uxfio_fildes	int
,	O
(	O
off_t	long
)	O
amount	long
)	O
;	O
if	O
(	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
pos	long
,	O
SEEK_SET	int
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
amount	long
=	O
(	O
intmax_t	long
)	O
(	O
uxfio	pointer
->	O
endM	long
-	O
nbyte	long
)	O
;	O
if	O
(	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
(	O
off_t	long
)	O
nbyte	long
,	O
SEEK_SET	int
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
ret	int
=	O
zero_fill	function
(	O
uxfio_fildes	int
,	O
(	O
off_t	long
)	O
amount	long
)	O
;	O
if	O
(	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
pos	long
,	O
SEEK_SET	int
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
nbyte	long
>	O
uxfio	pointer
->	O
posM	long
)	O
{	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
(	O
off_t	long
)	O
nbyte	long
,	O
SEEK_SET	int
)	O
;	O
}	O
uxfio	pointer
->	O
endM	long
=	O
nbyte	long
;	O
}	O
return	O
ret	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
static	O
int	O
do_buffered_write2	function
(	O
UXFIO	struct
*	O
uxfio	pointer
,	O
void	O
*	O
userbuf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
int	O
write_ret	int
;	O
char	O
*	O
buf	pointer
;	O
int	O
bs	int
;	O
size_t	long
initial_remains	long
;	O
char	O
*	O
userp	pointer
;	O
char	O
*	O
bufp	pointer
;	O
int	O
remains	int
;	O
int	O
user_remains	int
;	O
int	O
udid	int
;	O
char	O
*	O
sub_p	pointer
;	O
int	O
sub_remains	int
;	O
int	O
sub_write_ret	int
;	O
buf	pointer
=	O
uxfio	pointer
->	O
output_bufferM	pointer
;	O
bs	int
=	O
uxfio	pointer
->	O
output_block_sizeM	int
;	O
initial_remains	long
=	O
(	O
size_t	long
)	O
(	O
uxfio	pointer
->	O
output_buffer_cM	long
)	O
;	O
userp	pointer
=	O
userbuf	pointer
;	O
bufp	pointer
=	O
buf	pointer
+	O
initial_remains	long
;	O
remains	int
=	O
initial_remains	long
+	O
(	O
int	O
)	O
nbyte	long
;	O
user_remains	int
=	O
(	O
int	O
)	O
nbyte	long
;	O
while	O
(	O
remains	int
>=	O
bs	int
)	O
{	O
udid	int
=	O
bs	int
-	O
initial_remains	long
;	O
memmove	function
(	O
bufp	pointer
,	O
userp	pointer
,	O
udid	int
)	O
;	O
sub_p	pointer
=	O
buf	pointer
;	O
sub_remains	int
=	O
bs	int
;	O
write_ret	int
=	O
0	int
;	O
while	O
(	O
sub_remains	int
>	O
0	int
)	O
{	O
sub_write_ret	int
=	O
uxfio_write	function
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
(	O
void	O
*	O
)	O
sub_p	pointer
,	O
sub_remains	int
)	O
;	O
if	O
(	O
sub_write_ret	int
<	O
0	int
)	O
{	O
write_ret	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
else	O
if	O
(	O
sub_write_ret	int
==	O
0	int
)	O
{	O
write_ret	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
else	O
{	O
write_ret	int
+=	O
sub_write_ret	int
;	O
sub_remains	int
-=	O
sub_write_ret	int
;	O
sub_p	pointer
+=	O
sub_write_ret	int
;	O
}	O
}	O
if	O
(	O
write_ret	int
<	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
write_ret	int
!=	O
bs	int
)	O
{	O
uxfio	pointer
->	O
output_buffer_cM	long
=	O
bs	int
;	O
return	O
-	O
1	int
;	O
}	O
remains	int
-=	O
write_ret	int
;	O
user_remains	int
-=	O
udid	int
;	O
userp	pointer
+=	O
udid	int
;	O
bufp	pointer
=	O
buf	pointer
;	O
initial_remains	long
=	O
0	int
;	O
}	O
memcpy	function
(	O
bufp	pointer
,	O
userp	pointer
,	O
user_remains	int
)	O
;	O
uxfio	pointer
->	O
output_buffer_cM	long
=	O
remains	int
;	O
return	O
(	O
int	O
)	O
nbyte	long
;	O
}	O
int	O
do_buffered_flush	function
(	O
UXFIO	struct
*	O
uxfio	pointer
)	O
{	O
int	O
remains	int
;	O
int	O
write_ret	int
;	O
int	O
save_bs	int
;	O
if	O
(	O
uxfio	pointer
->	O
output_block_sizeM	int
==	O
0	int
||	O
uxfio	pointer
->	O
output_buffer_cM	long
==	O
0	int
)	O
return	O
0	int
;	O
save_bs	int
=	O
uxfio	pointer
->	O
output_block_sizeM	int
;	O
remains	int
=	O
uxfio	pointer
->	O
output_buffer_cM	long
;	O
uxfio	pointer
->	O
output_buffer_cM	long
=	O
0	int
;	O
uxfio	pointer
->	O
output_block_sizeM	int
=	O
remains	int
;	O
if	O
(	O
remains	int
>	O
save_bs	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: internal flush error: do_buffered_flush2: line=%d\n"	pointer
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
write_ret	int
=	O
do_buffered_write2	function
(	O
uxfio	pointer
,	O
(	O
void	O
*	O
)	O
(	O
uxfio	pointer
->	O
output_bufferM	pointer
)	O
,	O
(	O
size_t	long
)	O
remains	int
)	O
;	O
if	O
(	O
write_ret	int
!=	O
(	O
int	O
)	O
remains	int
)	O
{	O
uxfio	pointer
->	O
output_block_sizeM	int
=	O
save_bs	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: flush error: do_buffered_flush2: line=%d\n"	pointer
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
output_buffer_cM	long
>	O
0	int
)	O
{	O
uxfio	pointer
->	O
output_block_sizeM	int
=	O
save_bs	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: flush error: do_buffered_flush2: line=%d\n"	pointer
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
uxfio	pointer
->	O
output_block_sizeM	int
=	O
save_bs	int
;	O
return	O
0	int
;	O
}	O
void	O
uxfio_show_all_open_fd	function
(	O
FILE	struct
*	O
f	pointer
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
i	int
;	O
int	O
n	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
UXFIO_FD_MIN	int
;	O
i	int
<	O
(	O
UXFIO_MAX_OPEN	int
+	O
UXFIO_FD_MIN	int
)	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
table_find	function
(	O
i	int
,	O
&	O
uxfio	pointer
,	O
0	int
)	O
)	O
{	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
f	pointer
,	O
"%d %d\n"	pointer
,	O
n	long
++	O
,	O
i	int
)	O
;	O
}	O
}	O
}	O
int	O
uxfio_uxfio_get_nopen	function
(	O
void	O
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
n	long
;	O
int	O
i	int
;	O
i	int
=	O
-	O
1	int
;	O
n	long
=	O
table_mon	function
(	O
UXFIO_QUERY_NOPEN	int
,	O
&	O
i	int
,	O
&	O
uxfio	pointer
)	O
;	O
return	O
n	long
;	O
}	O
ssize_t	long
uxfio_unix_safe_read	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
if	O
(	O
fd	int
<	O
UXFIO_FD_MIN	int
&&	O
fd	int
>=	O
0	int
)	O
{	O
return	O
safeio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
read	pointer
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
else	O
{	O
return	O
safeio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
uxfio_read	function
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
}	O
ssize_t	long
uxfio_unix_safe_write	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
int	O
nbyte	long
)	O
{	O
return	O
safeio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
write	pointer
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
ssize_t	long
uxfio_unix_atomic_read	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
return	O
atomicio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
read	pointer
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
ssize_t	long
uxfio_unix_atomic_write	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
if	O
(	O
fd	int
<	O
UXFIO_FD_MIN	int
&&	O
fd	int
>=	O
0	int
)	O
return	O
atomicio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
write	pointer
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
else	O
return	O
atomicio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
uxfio_write	function
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
ssize_t	long
uxfio_unix_safe_atomic_read	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
return	O
atomicio	function
(	O
(	O
ssize_t	long
(	O
*	O
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
)	O
read	pointer
,	O
fd	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
UXFIO	struct
*	O
uxfio_debug_get_object_address	function
(	O
int	O
uxfiofd	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
table_find	function
(	O
uxfiofd	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]:  file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfiofd	int
)	O
;	O
return	O
(	O
UXFIO	struct
*	O
)	O
NULL	O
;	O
}	O
return	O
uxfio	pointer
;	O
}	O
void	O
*	O
uxfio_get_object_address	function
(	O
int	O
uxfiofd	int
)	O
{	O
return	O
uxfio_debug_get_object_address	function
(	O
uxfiofd	int
)	O
;	O
}	O
int	O
uxfio_devnull_close	function
(	O
int	O
fd	int
)	O
{	O
return	O
0	int
;	O
}	O
int	O
uxfio_devnull_open	function
(	O
char	O
*	O
path	pointer
,	O
int	O
oflag	int
,	O
mode_t	int
mode	int
)	O
{	O
if	O
(	O
uxg_nullfd	int
==	O
0	int
)	O
uxg_nullfd	int
=	O
open	function
(	O
"/dev/null"	pointer
,	O
O_RDWR	int
,	O
0	int
)	O
;	O
if	O
(	O
uxg_nullfd	int
<	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"fatal error: can't open /dev/null: %s\n"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
uxg_nullfd	int
;	O
}	O
int	O
uxfio_open	function
(	O
char	O
*	O
path	pointer
,	O
int	O
oflag	int
,	O
mode_t	int
mode	int
)	O
{	O
int	O
uxfio_fd	int
,	O
u_fd	int
;	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG	O
(	O
""	pointer
)	O
;	O
uxfio_fd	int
=	O
internal_uxfio_open	function
(	O
&	O
uxfio	pointer
)	O
;	O
if	O
(	O
uxfio_fd	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
path	pointer
)	O
{	O
if	O
(	O
strlen	function
(	O
path	pointer
)	O
)	O
{	O
if	O
(	O
(	O
u_fd	int
=	O
open	function
(	O
path	pointer
,	O
oflag	int
,	O
mode	int
)	O
)	O
<	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"open ( %s ) : %s\n"	pointer
,	O
path	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
u_fd	int
=	O
UXFIO_NULL_FD	O
;	O
}	O
uxfio__change_state	function
(	O
uxfio	pointer
,	O
0	int
)	O
;	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
1	int
;	O
}	O
else	O
{	O
u_fd	int
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
buffer_activeM	int
=	O
0	int
;	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
0	int
;	O
}	O
uxfio	pointer
->	O
uxfdM	int
=	O
u_fd	int
;	O
return	O
uxfio_fd	int
;	O
}	O
int	O
uxfio_opendup	function
(	O
int	O
uxfd	int
,	O
int	O
buffertype	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
uxfio_fd	int
,	O
r	int
;	O
int	O
bufon	int
=	O
UXFIO_ON	int
;	O
UXFIO_E_DEBUG3	O
(	O
"uxfd=%d  buffertype=%d"	pointer
,	O
uxfd	int
,	O
buffertype	int
)	O
;	O
uxfio_fd	int
=	O
uxfio_open	function
(	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
,	O
O_RDONLY	int
,	O
0	int
)	O
;	O
if	O
(	O
uxfio_fd	int
<	O
0	int
)	O
return	O
uxfio_fd	int
;	O
if	O
(	O
(	O
r	int
=	O
uxfio_fcntl	function
(	O
uxfio_fd	int
,	O
UXFIO_F_ATTACH_FD	O
,	O
uxfd	int
)	O
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
table_find	function
(	O
uxfio_fd	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
uxfio	pointer
->	O
did_dupe_fdM	int
=	O
uxfd	int
;	O
if	O
(	O
uxfd	int
>=	O
UXFIO_FD_MIN	int
)	O
{	O
UXFIO	struct
*	O
uxfd_uxfio	pointer
=	O
NULL	O
;	O
uxfd_uxfio	pointer
=	O
uxfio_get_object_address	function
(	O
uxfd	int
)	O
;	O
uxfio_incr_use_count	function
(	O
uxfd	int
)	O
;	O
if	O
(	O
uxfio_lseek	function
(	O
uxfd	int
,	O
0L	int
,	O
SEEK_CUR	int
)	O
==	O
0	int
||	O
(	O
uxfd_uxfio	pointer
&&	O
(	O
uxfd_uxfio	pointer
->	O
uxfd_can_seekM	int
||	O
(	O
uxfd_uxfio	pointer
->	O
buffer_activeM	int
&&	O
(	O
uxfd_uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
||	O
uxfd_uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
||	O
0	int
)	O
)	O
)	O
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"uxfio->uxfd_can_seekM setting to 1"	pointer
)	O
;	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
1	int
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"uxfio->uxfd_can_seekM setting to 0"	pointer
)	O
;	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
0	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
lseek	function
(	O
uxfd	int
,	O
0L	int
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
&&	O
(	O
errno	O
==	O
ESPIPE	int
)	O
)	O
{	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
0	int
;	O
}	O
else	O
{	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
buffertype	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
(	O
r	int
=	O
uxfio_fcntl	function
(	O
uxfio_fd	int
,	O
UXFIO_F_SET_BUFTYPE	O
,	O
UXFIO_BUFTYPE_FILE	int
)	O
)	O
<	O
0	int
)	O
{	O
uxfio_close	function
(	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
buffertype	int
==	O
UXFIO_BUFTYPE_MEM	int
)	O
{	O
if	O
(	O
(	O
r	int
=	O
uxfio_fcntl	function
(	O
uxfio_fd	int
,	O
UXFIO_F_SET_BUFTYPE	O
,	O
UXFIO_BUFTYPE_MEM	int
)	O
)	O
<	O
0	int
)	O
{	O
uxfio_close	function
(	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
buffertype	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
if	O
(	O
(	O
r	int
=	O
uxfio_fcntl	function
(	O
uxfio_fd	int
,	O
UXFIO_F_SET_BUFTYPE	O
,	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
)	O
<	O
0	int
)	O
{	O
uxfio_close	function
(	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
bufon	int
=	O
UXFIO_OFF	int
;	O
}	O
if	O
(	O
(	O
r	int
=	O
uxfio_fcntl	function
(	O
uxfio_fd	int
,	O
UXFIO_F_SET_BUFACTIVE	O
,	O
bufon	int
)	O
)	O
<	O
0	int
)	O
{	O
uxfio_close	function
(	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
uxfio_fd	int
;	O
}	O
o__inline__	O
int	O
uxfio_close	function
(	O
int	O
uxfio_fildes	int
)	O
{	O
int	O
ret	int
;	O
ret	int
=	O
uxfio__close	function
(	O
uxfio_fildes	int
,	O
1	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
int	O
uxfio_free	function
(	O
int	O
uxfio_fildes	int
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
uxfio_fcntl	function
(	O
uxfio_fildes	int
,	O
UXFIO_F_SET_BUFACTIVE	O
,	O
0	int
)	O
<	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"error in uxfio_free\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
uxfio__close	function
(	O
uxfio_fildes	int
,	O
0	int
)	O
;	O
}	O
int	O
uxfio_decr_use_count	function
(	O
int	O
fd	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
fd	int
)	O
;	O
if	O
(	O
fd	int
<	O
UXFIO_FD_MIN	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
table_find	function
(	O
fd	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
--	O
(	O
uxfio	pointer
->	O
use_countM	int
)	O
;	O
}	O
int	O
uxfio_incr_use_count	function
(	O
int	O
fd	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
fd	int
)	O
;	O
if	O
(	O
table_find	function
(	O
fd	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
++	O
(	O
uxfio	pointer
->	O
use_countM	int
)	O
;	O
}	O
int	O
uxfio_espipe	function
(	O
int	O
uxfio_fildes	int
)	O
{	O
int	O
ret	int
;	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
)	O
{	O
if	O
(	O
lseek	function
(	O
uxfio_fildes	int
,	O
0L	int
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
{	O
return	O
(	O
errno	O
==	O
0	int
)	O
?	O
-	O
1	int
:	O
errno	O
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
}	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
ret	int
=	O
uxfio	pointer
->	O
uxfd_can_seekM	int
?	O
0	int
:	O
ESPIPE	int
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
ret	int
=	O
uxfio_fcntl	function
(	O
uxfio_fildes	int
,	O
UXFIO_F_GET_CANSEEK	O
,	O
0	int
)	O
;	O
if	O
(	O
ret	int
)	O
ret	int
=	O
0	int
;	O
else	O
ret	int
=	O
ESPIPE	int
;	O
}	O
UXFIO_E_DEBUG2	O
(	O
"return value = %d"	pointer
,	O
ret	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
uxfio_getfd	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
*	O
use_next	pointer
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
)	O
{	O
return	O
uxfio_fildes	int
;	O
}	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
use_next	pointer
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
(	O
uxfio	pointer
->	O
posM	long
<	O
uxfio	pointer
->	O
endM	long
)	O
)	O
{	O
*	O
use_next	pointer
=	O
0	int
;	O
}	O
else	O
{	O
*	O
use_next	pointer
=	O
1	int
;	O
}	O
}	O
return	O
uxfio	pointer
->	O
uxfdM	int
;	O
}	O
int	O
uxfio_ftruncate	function
(	O
int	O
uxfio_fildes	int
,	O
off_t	long
nbyte	long
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
return	O
ftruncate	function
(	O
uxfio_fildes	int
,	O
nbyte	long
)	O
;	O
}	O
else	O
if	O
(	O
uxfio_fildes	int
>=	O
UXFIO_FD_MIN	int
)	O
{	O
return	O
uxfio_internal_ftruncate	function
(	O
uxfio_fildes	int
,	O
nbyte	long
)	O
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
ssize_t	long
uxfio_read	function
(	O
int	O
uxfio_fildes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
int	O
ret	int
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
ret	int
=	O
uxfio_unix_safe_read	function
(	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio_read fd=%d : %s\n"	pointer
,	O
uxfio_fildes	int
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
ret	int
;	O
}	O
else	O
if	O
(	O
uxfio_fildes	int
>=	O
UXFIO_FD_MIN	int
)	O
{	O
return	O
uxfio_common_read	function
(	O
NULL	O
,	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
,	O
0	int
)	O
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
ssize_t	long
uxfio_sfa_read	function
(	O
int	O
uxfio_fildes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
)	O
return	O
uxfio_unix_atomic_read	function
(	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
else	O
return	O
uxfio_common_safe_read	function
(	O
NULL	O
,	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
ssize_t	long
uxfio_sfread	function
(	O
int	O
uxfio_fildes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
)	O
return	O
uxfio_unix_safe_read	function
(	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
else	O
return	O
uxfio_common_safe_read	function
(	O
NULL	O
,	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
ssize_t	long
uxfio_write	function
(	O
int	O
uxfio_fildes	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
nbyte	long
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
n	long
;	O
int	O
einval	pointer
;	O
Xint	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
;	O
Xint	O
endoffset	long
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
==	O
UXFIO_NULL_FD	O
)	O
{	O
return	O
(	O
ssize_t	long
)	O
nbyte	long
;	O
}	O
else	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
return	O
(	O
size_t	long
)	O
uxfio_unix_safe_write	function
(	O
uxfio_fildes	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
else	O
{	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]:  file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
endoffset	long
=	O
uxfio	pointer
->	O
bytesreadM	long
+	O
nbyte	long
;	O
if	O
(	O
enforce_veof	function
(	O
uxfio	pointer
,	O
endoffset	long
,	O
&	O
einval	pointer
)	O
!=	O
endoffset	long
)	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
uxfio	pointer
->	O
write_insertM	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
!=	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio warning: file insert only supported for"	pointer
" UXFIO_BUFTYPE_DYNAMIC_MEM buffer.\n"	pointer
)	O
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
==	O
0	int
&&	O
uxfio	pointer
->	O
output_block_sizeM	int
==	O
0	int
)	O
{	O
return	O
(	O
size_t	long
)	O
(	O
*	O
(	O
uxfio	pointer
->	O
vir_writeM	pointer
)	O
)	O
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
output_block_sizeM	int
>	O
0	int
&&	O
uxfio	pointer
->	O
buffer_activeM	int
==	O
0	int
)	O
{	O
n	long
=	O
do_buffered_write2	function
(	O
uxfio	pointer
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
return	O
n	long
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
&&	O
uxfio	pointer
->	O
uxfd_can_seekM	int
==	O
1	int
)	O
{	O
nbyte	long
=	O
(	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
+	O
nbyte	long
)	O
>	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
endM	long
)	O
)	O
?	O
(	O
size_t	long
)	O
(	O
uxfio	pointer
->	O
endM	long
-	O
uxfio	pointer
->	O
posM	long
)	O
:	O
nbyte	long
;	O
n	long
=	O
uxfio_unix_safe_write	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
if	O
(	O
n	long
<	O
0	int
)	O
{	O
perror	function
(	O
"exiting in uxfio_write"	pointer
)	O
;	O
exit	function
(	O
errno	O
)	O
;	O
}	O
else	O
{	O
(	O
uxfio	pointer
->	O
posM	long
)	O
+=	O
(	O
Xint	O
)	O
n	long
;	O
(	O
uxfio	pointer
->	O
bytesreadM	long
)	O
+=	O
(	O
Xint	O
)	O
n	long
;	O
(	O
uxfio	pointer
->	O
current_offsetM	long
)	O
+=	O
(	O
Xint	O
)	O
n	long
;	O
(	O
uxfio	pointer
->	O
virtual_offsetM	long
)	O
+=	O
(	O
Xint	O
)	O
n	long
;	O
return	O
n	long
;	O
}	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
if	O
(	O
(	O
int	O
)	O
nbyte	long
>	O
right	pointer
+	O
unused	pointer
)	O
{	O
if	O
(	O
fix_dynamic_buffer	function
(	O
uxfio_fildes	int
,	O
uxfio	pointer
,	O
nbyte	long
,	O
buf	pointer
,	O
nbyte	long
-	O
right	pointer
-	O
unused	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: error returned by fix_dynamic_buffer.\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
nbyte	long
;	O
}	O
else	O
{	O
if	O
(	O
uxfio	pointer
->	O
write_insertM	int
)	O
{	O
memmove	function
(	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
posM	long
+	O
nbyte	long
,	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
posM	long
,	O
right	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
posM	long
+	O
(	O
int	O
)	O
nbyte	long
+	O
right	pointer
>	O
uxfio	pointer
->	O
endM	long
)	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
+	O
nbyte	long
;	O
}	O
memcpy	function
(	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
posM	long
,	O
buf	pointer
,	O
nbyte	long
)	O
;	O
uxfio	pointer
->	O
posM	long
+=	O
nbyte	long
;	O
(	O
uxfio	pointer
->	O
bytesreadM	long
)	O
+=	O
nbyte	long
;	O
(	O
uxfio	pointer
->	O
current_offsetM	long
)	O
+=	O
nbyte	long
;	O
(	O
uxfio	pointer
->	O
virtual_offsetM	long
)	O
+=	O
nbyte	long
;	O
if	O
(	O
uxfio	pointer
->	O
posM	long
>	O
uxfio	pointer
->	O
endM	long
)	O
{	O
uxfio	pointer
->	O
endM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
}	O
return	O
nbyte	long
;	O
}	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
off_t	long
uxfio_lseek	function
(	O
int	O
uxfio_fildes	int
,	O
off_t	long
poffset	long
,	O
int	O
pwhence	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
n	long
;	O
Xint	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
;	O
int	O
einval	pointer
;	O
off_t	long
retval	long
=	O
-	O
1	int
;	O
off_t	long
offset	long
=	O
0	int
;	O
int	O
do_virtual_set	int
=	O
0	int
;	O
int	O
whence	int
;	O
UXFIO_E_DEBUG3	O
(	O
"ENTER FUNCTION  fd=%d offset=%d"	pointer
,	O
uxfio_fildes	int
,	O
(	O
int	O
)	O
poffset	long
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"%d pwhence=%d"	pointer
,	O
uxfio_fildes	int
,	O
pwhence	int
)	O
;	O
whence	int
=	O
pwhence	int
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
if	O
(	O
whence	int
==	O
UXFIO_SEEK_VCUR	int
)	O
{	O
whence	int
=	O
SEEK_CUR	int
;	O
}	O
return	O
lseek	function
(	O
uxfio_fildes	int
,	O
poffset	long
,	O
whence	int
)	O
;	O
}	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
UXFIO_E_DEBUG3	O
(	O
"%d posM=%d"	pointer
,	O
uxfio_fildes	int
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
)	O
;	O
if	O
(	O
whence	int
==	O
SEEK_CUR	int
||	O
whence	int
==	O
UXFIO_SEEK_VCUR	int
)	O
{	O
offset	long
=	O
(	O
off_t	long
)	O
(	O
poffset	long
)	O
;	O
}	O
else	O
if	O
(	O
whence	int
==	O
SEEK_SET	int
||	O
whence	int
==	O
UXFIO_SEEK_VSET	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in SEEK_SET"	pointer
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"poffset = %d  posM = %d"	pointer
,	O
(	O
int	O
)	O
poffset	long
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
)	O
;	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
==	O
0	int
&&	O
uxfio	pointer
->	O
offset_eof_savedM	long
>=	O
0	int
&&	O
pwhence	int
==	O
UXFIO_SEEK_VSET	int
&&	O
1	int
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
posM	long
-	O
uxfio	pointer
->	O
offset_eof_savedM	long
==	O
uxfio	pointer
->	O
offset_bofM	long
&&	O
uxfio	pointer
->	O
offset_eof_savedM	long
>=	O
0	int
&&	O
1	int
)	O
{	O
uxfio	pointer
->	O
posM	long
=	O
uxfio	pointer
->	O
offset_bofM	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
offset_eofM	long
=	O
uxfio	pointer
->	O
offset_eof_savedM	long
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio:  unsupported case: %d\n"	pointer
,	O
__LINE__	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
&&	O
uxfio	pointer
->	O
offset_eof_savedM	long
>	O
0	int
&&	O
pwhence	int
==	O
UXFIO_SEEK_VSET	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in SEEK_SET VSAVED virtual eof."	pointer
)	O
;	O
whence	int
=	O
SEEK_CUR	int
;	O
offset	long
=	O
(	O
off_t	long
)	O
(	O
poffset	long
)	O
;	O
offset	long
-=	O
uxfio	pointer
->	O
offset_eof_savedM	long
;	O
uxfio	pointer
->	O
offset_eofM	long
=	O
uxfio	pointer
->	O
offset_eof_savedM	long
;	O
do_virtual_set	int
=	O
1	int
;	O
UXFIO_E_DEBUG2	O
(	O
"now offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
}	O
else	O
if	O
(	O
!	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
uxfio	pointer
->	O
uxfd_can_seekM	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in SEEK_SET virtual eof active."	pointer
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"offset = %d bytesread = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
bytesreadM	long
)	O
)	O
;	O
whence	int
=	O
SEEK_CUR	int
;	O
offset	long
=	O
poffset	long
-	O
uxfio	pointer
->	O
bytesreadM	long
;	O
UXFIO_E_DEBUG2	O
(	O
"now offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
offset	long
=	O
enforce_set_position	function
(	O
uxfio	pointer
,	O
offset	long
,	O
&	O
einval	pointer
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"in SEEK_SET now offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
if	O
(	O
einval	pointer
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal exception 100a.\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
if	O
(	O
pwhence	int
==	O
UXFIO_SEEK_VSET	int
)	O
{	O
if	O
(	O
poffset	long
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
poffset	long
>	O
uxfio	pointer
->	O
offset_eofM	long
&&	O
poffset	long
>	O
uxfio	pointer
->	O
v_endM	long
)	O
return	O
-	O
1	int
;	O
offset	long
=	O
uxfio	pointer
->	O
offset_bofM	long
+	O
poffset	long
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio:  unsupported case: %d\n"	pointer
,	O
__LINE__	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
whence	int
=	O
SEEK_CUR	int
;	O
offset	long
=	O
(	O
off_t	long
)	O
(	O
poffset	long
-	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
}	O
else	O
if	O
(	O
whence	int
==	O
SEEK_END	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in SEEK_END"	pointer
)	O
;	O
offset	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
endM	long
-	O
uxfio	pointer
->	O
posM	long
+	O
poffset	long
)	O
;	O
whence	int
=	O
SEEK_CUR	int
;	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
int	O
r_i	int
;	O
int	O
r_offset	int
;	O
UXFIO_E_DEBUG	O
(	O
"in SEEK_END virtual eof active."	pointer
)	O
;	O
r_i	int
=	O
(	O
uxfio	pointer
->	O
offset_eofM	long
>=	O
0	int
)	O
?	O
uxfio	pointer
->	O
offset_eofM	long
:	O
uxfio	pointer
->	O
v_endM	long
;	O
offset	long
=	O
(	O
off_t	long
)	O
(	O
r_i	int
-	O
uxfio	pointer
->	O
bytesreadM	long
+	O
offset	long
)	O
;	O
r_offset	int
=	O
offset	long
;	O
offset	long
=	O
enforce_veof	function
(	O
uxfio	pointer
,	O
r_offset	int
,	O
&	O
einval	pointer
)	O
;	O
if	O
(	O
offset	long
<	O
0	int
||	O
(	O
einval	pointer
&&	O
(	O
r_offset	int
-	O
offset	long
)	O
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal exception: negative offset 100b.\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
!	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
uxfio	pointer
->	O
uxfd_can_seekM	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in SEEK_END error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal exception: broken case: 100c.\n"	pointer
)	O
;	O
}	O
}	O
UXFIO_E_DEBUG2	O
(	O
"offset is now %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
if	O
(	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
==	O
0	int
&&	O
uxfio	pointer
->	O
offset_eof_savedM	long
<	O
0	int
&&	O
uxfio	pointer
->	O
uxfd_can_seekM	int
&&	O
1	int
)	O
||	O
(	O
0	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"no active buffer and uxfd_can_seekM is true."	pointer
)	O
;	O
uxfio	pointer
->	O
bytesreadM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
offset	long
;	O
whence	int
=	O
SEEK_CUR	int
;	O
UXFIO_E_DEBUG3	O
(	O
"uxfio_lseek of uxfdM=%d whence=%d"	pointer
,	O
uxfio	pointer
->	O
uxfdM	int
,	O
whence	int
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"         offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
retval	long
=	O
(	O
*	O
(	O
uxfio	pointer
->	O
vir_lseekM	pointer
)	O
)	O
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
offset	long
,	O
whence	int
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"vir_lseekM returned %d"	pointer
,	O
(	O
int	O
)	O
retval	long
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_lseek returning %d"	pointer
,	O
(	O
int	O
)	O
retval	long
)	O
;	O
return	O
retval	long
;	O
}	O
else	O
if	O
(	O
(	O
0	int
&&	O
!	O
uxfio	pointer
->	O
uxfd_can_seekM	int
&&	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
)	O
||	O
(	O
0	int
)	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"dynamic mem is in use. offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
if	O
(	O
offset	long
>	O
uxfio	pointer
->	O
posM	long
)	O
{	O
int	O
xxn	int
;	O
UXFIO_E_DEBUG2	O
(	O
"reading ahead %d bytes"	pointer
,	O
(	O
int	O
)	O
(	O
offset	long
-	O
uxfio	pointer
->	O
posM	long
)	O
)	O
;	O
xxn	int
=	O
uxfio__read_bytes	function
(	O
uxfio_fildes	int
,	O
offset	long
-	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
else	O
{	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
posM	long
+=	O
offset	long
;	O
}	O
retval	long
=	O
uxfio	pointer
->	O
current_offsetM	long
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_lseek returning %d"	pointer
,	O
(	O
int	O
)	O
retval	long
)	O
;	O
return	O
retval	long
;	O
}	O
else	O
{	O
;	O
UXFIO_E_DEBUG	O
(	O
"NOT IN SHORT SPECIAL."	pointer
)	O
;	O
}	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
if	O
(	O
offset	long
)	O
{	O
whence	int
=	O
SEEK_CUR	int
;	O
}	O
UXFIO_E_DEBUG3	O
(	O
"uxfio_lseek bufferstate  left=%d right=%d"	pointer
,	O
(	O
int	O
)	O
left	pointer
,	O
(	O
int	O
)	O
right	pointer
)	O
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_lseek offset = %d"	pointer
,	O
(	O
int	O
)	O
offset	long
)	O
;	O
if	O
(	O
offset	long
<	O
0	int
&&	O
(	O
(	O
(	O
-	O
1	int
)	O
*	O
offset	long
)	O
<=	O
left	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"ELSE LADDER."	pointer
)	O
;	O
uxfio	pointer
->	O
posM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
offset	long
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
offset	long
,	O
whence	int
)	O
!=	O
uxfio	pointer
->	O
posM	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
else	O
if	O
(	O
offset	long
>	O
0	int
&&	O
(	O
offset	long
<=	O
right	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"ELSE LADDER."	pointer
)	O
;	O
if	O
(	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
switch	O
(	O
pwhence	int
)	O
{	O
case	O
SEEK_SET	int
:	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio_lseek: new lseek error in uxfio_lseek (20070714): %d\n"	pointer
,	O
__LINE__	O
)	O
;	O
return	O
-	O
1	int
;	O
break	O
;	O
case	O
UXFIO_SEEK_VSET	int
:	O
uxfio	pointer
->	O
posM	long
=	O
(	O
uxfio	pointer
->	O
offset_bofM	long
+	O
poffset	long
)	O
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
poffset	long
;	O
retval	long
=	O
0	int
;	O
;	O
break	O
;	O
case	O
SEEK_CUR	int
:	O
uxfio	pointer
->	O
posM	long
+=	O
(	O
Xint	O
)	O
poffset	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
(	O
Xint	O
)	O
poffset	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
(	O
Xint	O
)	O
poffset	long
;	O
retval	long
=	O
uxfio	pointer
->	O
posM	long
;	O
break	O
;	O
default	O
:	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio_lseek: error: unhandled case: pwhence=%d\n"	pointer
,	O
pwhence	int
)	O
;	O
break	O
;	O
}	O
}	O
else	O
{	O
uxfio	pointer
->	O
posM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
offset	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
offset	long
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
offset	long
,	O
whence	int
)	O
!=	O
uxfio	pointer
->	O
posM	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
}	O
else	O
if	O
(	O
offset	long
>	O
0	int
&&	O
(	O
offset	long
>	O
right	pointer
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"ELSE LADDER."	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
v_endM	long
>=	O
0	int
)	O
{	O
n	long
=	O
uxfio	pointer
->	O
v_endM	long
;	O
uxfio	pointer
->	O
posM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
;	O
return	O
retval	long
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
!=	O
UXFIO_BUFTYPE_FILE	int
&&	O
(	O
!	O
uxfio	pointer
->	O
buffer_activeM	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
n	long
=	O
uxfio__read_bytes	function
(	O
uxfio_fildes	int
,	O
offset	long
)	O
)	O
!=	O
offset	long
)	O
{	O
uxfio	pointer
->	O
posM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
uxfio	pointer
->	O
current_offsetM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
uxfio	pointer
->	O
virtual_offsetM	long
+=	O
(	O
Xint	O
)	O
n	long
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
posM	long
!=	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
0	int
,	O
SEEK_CUR	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: buffer file position error 50001.0 \n"	pointer
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
else	O
if	O
(	O
offset	long
==	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"ELSE LADDER."	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
whence	int
=	O
SEEK_CUR	int
;	O
if	O
(	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
offset	long
,	O
whence	int
)	O
!=	O
uxfio	pointer
->	O
posM	long
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: buffer file position error 50001.1 \n"	pointer
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
else	O
if	O
(	O
whence	int
==	O
UXFIO_SEEK_VSET	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_MEM	int
)	O
{	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
virtual_offsetM	long
)	O
;	O
}	O
else	O
if	O
(	O
whence	int
==	O
UXFIO_SEEK_VCUR	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_MEM	int
)	O
{	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
current_offsetM	long
)	O
;	O
}	O
else	O
if	O
(	O
whence	int
==	O
UXFIO_SEEK_VCUR	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
-	O
uxfio	pointer
->	O
offset_bofM	long
)	O
;	O
}	O
else	O
if	O
(	O
whence	int
==	O
UXFIO_SEEK_VSET	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
&&	O
virtual_eof_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
retval	long
=	O
uxfio	pointer
->	O
offset_bofM	long
;	O
uxfio	pointer
->	O
posM	long
=	O
(	O
Xint	O
)	O
(	O
uxfio	pointer
->	O
offset_bofM	long
)	O
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
}	O
else	O
{	O
retval	long
=	O
(	O
off_t	long
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
;	O
}	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
UXFIO_RET_EFAIL	O
;	O
}	O
if	O
(	O
do_virtual_set	int
)	O
{	O
retval	long
-=	O
active_virtual_file_offset	function
(	O
uxfio	pointer
)	O
;	O
}	O
UXFIO_E_DEBUG3	O
(	O
"retval = %d virtual bof = %d"	pointer
,	O
(	O
int	O
)	O
retval	long
,	O
active_virtual_file_offset	function
(	O
uxfio	pointer
)	O
)	O
;	O
UXFIO_E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
retval	long
;	O
}	O
int	O
uxfio_fsync	function
(	O
int	O
uxfio_fildes	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
i	int
=	O
0	int
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
return	O
fsync	function
(	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
output_block_sizeM	int
>	O
0	int
)	O
{	O
i	int
=	O
do_buffered_flush	function
(	O
uxfio	pointer
)	O
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
uxfd_can_seekM	int
)	O
{	O
i	int
=	O
(	O
*	O
(	O
uxfio	pointer
->	O
vir_fsyncM	pointer
)	O
)	O
(	O
uxfio	pointer
->	O
uxfdM	int
)	O
;	O
}	O
else	O
if	O
(	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
&&	O
(	O
uxfio	pointer
->	O
buffdM	int
>=	O
0	int
)	O
)	O
{	O
i	int
=	O
(	O
*	O
(	O
uxfio	pointer
->	O
vir_fsyncM	pointer
)	O
)	O
(	O
uxfio	pointer
->	O
buffdM	int
)	O
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
i	int
;	O
}	O
int	O
uxfio_ioctl	function
(	O
int	O
uxfio_fd	int
,	O
int	O
request	int
,	O
void	O
*	O
arg	pointer
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fd	int
)	O
;	O
if	O
(	O
table_find	function
(	O
uxfio_fd	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
request	int
==	O
UXFIO_IOCTL_SET_STATBUF	O
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
statbufM	pointer
)	O
swbis_free	O
(	O
uxfio	pointer
->	O
statbufM	pointer
)	O
;	O
uxfio	pointer
->	O
statbufM	pointer
=	O
(	O
struct	O
stat	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
stat	struct
)	O
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
statbufM	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: line %d: out of memory.\n"	pointer
,	O
__LINE__	O
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
}	O
copy_stat_members	function
(	O
uxfio	pointer
->	O
statbufM	pointer
,	O
(	O
struct	O
stat	struct
*	O
)	O
(	O
arg	pointer
)	O
)	O
;	O
uxfio	pointer
->	O
v_endM	long
=	O
(	O
Xint	O
)	O
(	O
uxfio	pointer
->	O
statbufM	pointer
->	O
st_size	long
)	O
;	O
}	O
else	O
if	O
(	O
request	int
==	O
UXFIO_IOCTL_SET_IMEMBUF	O
)	O
{	O
uxfio	pointer
->	O
bufM	pointer
=	O
arg	pointer
;	O
}	O
else	O
if	O
(	O
request	int
==	O
UXFIO_IOCTL_GET_STATBUF	O
)	O
{	O
*	O
(	O
(	O
struct	O
stat	struct
*	O
*	O
)	O
(	O
arg	pointer
)	O
)	O
=	O
uxfio	pointer
->	O
statbufM	pointer
;	O
}	O
else	O
if	O
(	O
request	int
==	O
UXFIO_IOCTL_SET_TMPFILE_ROOTDIR	O
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
)	O
swbis_free	O
(	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
)	O
;	O
uxfio	pointer
->	O
tmpfile_rootdirM	pointer
=	O
strdup	function
(	O
(	O
char	O
*	O
)	O
arg	pointer
)	O
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
uxfio_fstat	function
(	O
int	O
uxfio_fd	int
,	O
struct	O
stat	struct
*	O
buf	pointer
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fd	int
)	O
;	O
if	O
(	O
table_find	function
(	O
uxfio_fd	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fd	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
statbufM	pointer
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
copy_stat_members	function
(	O
buf	pointer
,	O
uxfio	pointer
->	O
statbufM	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
uxfio_fcntl	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
cmd	int
,	O
int	O
value	int
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
int	O
ret	int
=	O
0	int
;	O
Xint	O
left	pointer
,	O
right	pointer
,	O
unused	pointer
;	O
char	O
*	O
buf	pointer
;	O
UXFIO_E_DEBUG2	O
(	O
"uxfio_filedes=%d"	pointer
,	O
uxfio_fildes	int
)	O
;	O
if	O
(	O
uxfio_fildes	int
<	O
UXFIO_FD_MIN	int
&&	O
uxfio_fildes	int
>=	O
0	int
)	O
{	O
return	O
fcntl	function
(	O
uxfio_fildes	int
,	O
cmd	int
,	O
value	int
)	O
;	O
}	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_BUFFER_LENGTH	O
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
if	O
(	O
value	int
>	O
uxfio	pointer
->	O
endM	long
)	O
{	O
uxfio	pointer
->	O
lenM	long
=	O
value	int
;	O
}	O
}	O
else	O
{	O
bufferstate	function
(	O
uxfio	pointer
,	O
&	O
left	pointer
,	O
&	O
right	pointer
,	O
&	O
unused	pointer
)	O
;	O
if	O
(	O
value	int
<	O
right	pointer
||	O
value	int
<=	O
0	int
)	O
return	O
-	O
1	int
;	O
UXFIO_E_DEBUG3	O
(	O
"uxfio_filedes=%d malloc amount=%d"	pointer
,	O
uxfio_fildes	int
,	O
value	int
)	O
;	O
if	O
(	O
(	O
buf	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
value	int
+	O
1	int
)	O
)	O
==	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
value	int
>=	O
(	O
right	pointer
+	O
left	pointer
)	O
)	O
{	O
uxfio__memcpy	function
(	O
buf	pointer
,	O
0	int
,	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
startM	long
,	O
left	pointer
+	O
right	pointer
,	O
uxfio	pointer
)	O
;	O
uxfio	pointer
->	O
lenM	long
=	O
value	int
;	O
}	O
else	O
if	O
(	O
value	int
>=	O
right	pointer
)	O
{	O
uxfio__memcpy	function
(	O
buf	pointer
,	O
0	int
,	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
posM	long
-	O
value	int
+	O
right	pointer
,	O
value	int
,	O
uxfio	pointer
)	O
;	O
uxfio	pointer
->	O
lenM	long
=	O
value	int
;	O
uxfio	pointer
->	O
startM	long
=	O
0	int
;	O
uxfio	pointer
->	O
posM	long
=	O
value	int
-	O
right	pointer
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
value	int
-	O
right	pointer
;	O
uxfio	pointer
->	O
endM	long
=	O
value	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
swbis_free	O
(	O
uxfio	pointer
->	O
bufM	pointer
)	O
;	O
uxfio	pointer
->	O
bufM	pointer
=	O
buf	pointer
;	O
}	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_LTRUNC	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_CANSEEK	O
)	O
{	O
uxfio	pointer
->	O
uxfd_can_seekM	int
=	O
value	int
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_GET_BUFFER_LENGTH	O
)	O
{	O
return	O
uxfio	pointer
->	O
lenM	long
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_GET_VBOF	O
)	O
{	O
if	O
(	O
virtual_file_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
return	O
uxfio	pointer
->	O
offset_bofM	long
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_GET_CANSEEK	O
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
uxfio	pointer
->	O
buffertypeM	int
!=	O
UXFIO_BUFTYPE_NOBUF	int
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_MEM	int
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
lenM	long
>=	O
512	int
)	O
return	O
uxfio	pointer
->	O
lenM	long
;	O
}	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_GET_BUFTYPE	O
)	O
{	O
return	O
uxfio	pointer
->	O
buffertypeM	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_BUFACTIVE	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE start"	pointer
)	O
;	O
ret	int
=	O
0	int
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_NOBUF	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE nobuf"	pointer
)	O
;	O
value	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE =file"	pointer
)	O
;	O
if	O
(	O
!	O
value	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE =file:off"	pointer
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
(	O
uxfio	pointer
->	O
posM	long
<	O
uxfio	pointer
->	O
endM	long
)	O
)	O
return	O
-	O
1	int
;	O
UXFIO_E_DEBUG3	O
(	O
"state:  pos=%d end=%d"	pointer
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
endM	long
)	O
)	O
;	O
ret	int
=	O
uxfio__delete_buffer_file	function
(	O
uxfio	pointer
)	O
;	O
}	O
else	O
if	O
(	O
value	int
&&	O
uxfio	pointer
->	O
buffer_activeM	int
==	O
0	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE on"	pointer
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"state:  pos=%d end=%d"	pointer
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
posM	long
)	O
,	O
(	O
int	O
)	O
(	O
uxfio	pointer
->	O
endM	long
)	O
)	O
;	O
ret	int
=	O
uxfio__init_buffer_file	function
(	O
uxfio	pointer
,	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
,	O
0	int
)	O
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"in default else case in SET_BUFACTIVE"	pointer
)	O
;	O
}	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE !=file"	pointer
)	O
;	O
if	O
(	O
value	int
==	O
0	int
&&	O
uxfio	pointer
->	O
buffer_activeM	int
&&	O
(	O
uxfio	pointer
->	O
posM	long
<	O
uxfio	pointer
->	O
endM	long
)	O
)	O
ret	int
=	O
-	O
1	int
;	O
}	O
uxfio	pointer
->	O
buffer_activeM	int
=	O
value	int
?	O
1	int
:	O
0	int
;	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFACTIVE end"	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_BUFTYPE	O
)	O
{	O
UXFIO_E_DEBUG2	O
(	O
"in UXFIO_SET_BUFTYPE start value=%d"	pointer
,	O
value	int
)	O
;	O
if	O
(	O
value	int
<	O
0	int
||	O
value	int
>	O
4	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
value	int
!=	O
uxfio	pointer
->	O
buffertypeM	int
)	O
{	O
if	O
(	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
&&	O
value	int
!=	O
UXFIO_BUFTYPE_FILE	int
&&	O
uxfio	pointer
->	O
buffer_activeM	int
)	O
{	O
Xint	O
aa	long
;	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFTYPE mem"	pointer
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"state:  pos=%d end=%d"	pointer
,	O
uxfio	pointer
->	O
posM	long
,	O
uxfio	pointer
->	O
endM	long
)	O
;	O
if	O
(	O
uxfio	pointer
->	O
bufM	pointer
)	O
{	O
swbis_free	O
(	O
uxfio	pointer
->	O
bufM	pointer
)	O
;	O
uxfio	pointer
->	O
bufM	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
!=	O
UXFIO_BUFTYPE_NOBUF	int
)	O
{	O
aa	long
=	O
uxfio	pointer
->	O
endM	long
+	O
2	int
;	O
if	O
(	O
(	O
uxfio	pointer
->	O
bufM	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
aa	long
)	O
)	O
==	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio: line %d: out of memory.\n"	pointer
,	O
__LINE__	O
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
uxfio	pointer
->	O
lenM	long
=	O
uxfio	pointer
->	O
endM	long
+	O
1	int
;	O
lseek	function
(	O
uxfio	pointer
->	O
buffdM	int
,	O
0	int
,	O
SEEK_SET	int
)	O
;	O
aa	long
=	O
read	pointer
(	O
uxfio	pointer
->	O
buffdM	int
,	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
endM	long
)	O
;	O
memset	function
(	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
endM	long
,	O
(	O
int	O
)	O
'\0'	O
,	O
2	int
)	O
;	O
}	O
ret	int
=	O
uxfio__delete_buffer_file	function
(	O
uxfio	pointer
)	O
;	O
}	O
else	O
if	O
(	O
(	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_MEM	int
)	O
||	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
)	O
&&	O
(	O
value	int
==	O
UXFIO_BUFTYPE_FILE	int
)	O
&&	O
uxfio	pointer
->	O
buffer_activeM	int
)	O
{	O
if	O
(	O
!	O
value	int
||	O
value	int
>=	O
UXFIO_BUFTYPE_FILE	int
)	O
uxfio	pointer
->	O
buffertypeM	int
=	O
UXFIO_BUFTYPE_FILE	int
;	O
else	O
uxfio	pointer
->	O
buffertypeM	int
=	O
UXFIO_BUFTYPE_MEM	int
;	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFTYPE file"	pointer
)	O
;	O
UXFIO_E_DEBUG3	O
(	O
"state:  pos=%d end=%d"	pointer
,	O
uxfio	pointer
->	O
posM	long
,	O
uxfio	pointer
->	O
endM	long
)	O
;	O
ret	int
=	O
uxfio__init_buffer_file	function
(	O
uxfio	pointer
,	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
endM	long
)	O
;	O
}	O
else	O
if	O
(	O
value	int
==	O
UXFIO_BUFTYPE_NOBUF	int
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"in UXFIO_SET_BUFTYPE nobuf"	pointer
)	O
;	O
if	O
(	O
uxfio_fcntl	function
(	O
uxfio_fildes	int
,	O
UXFIO_F_SET_BUFACTIVE	O
,	O
UXFIO_OFF	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio internal error: 002.33\n"	pointer
)	O
;	O
}	O
ret	int
=	O
0	int
;	O
}	O
else	O
{	O
UXFIO_E_DEBUG	O
(	O
" default else in set buftype"	pointer
)	O
;	O
}	O
uxfio	pointer
->	O
buffertypeM	int
=	O
value	int
;	O
}	O
else	O
{	O
ret	int
=	O
0	int
;	O
}	O
return	O
ret	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_ATTACH_FD	O
)	O
{	O
uxfio	pointer
->	O
uxfdM	int
=	O
value	int
;	O
uxfio__change_state	function
(	O
uxfio	pointer
,	O
(	O
value	int
>=	O
UXFIO_FD_MIN	int
)	O
)	O
;	O
return	O
uxfio_fildes	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_GET_VEOF	O
)	O
{	O
if	O
(	O
virtual_file_active	function
(	O
uxfio	pointer
)	O
)	O
{	O
return	O
uxfio	pointer
->	O
offset_eof_savedM	long
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_VEOF	O
)	O
{	O
UXFIO_E_DEBUG3	O
(	O
"fd=%d  set VEOF value = %d"	pointer
,	O
uxfio_fildes	int
,	O
value	int
)	O
;	O
if	O
(	O
value	int
<	O
0	int
)	O
{	O
uxfio	pointer
->	O
current_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
offset_eofM	long
=	O
-	O
1	int
;	O
uxfio	pointer
->	O
offset_bofM	long
=	O
0	int
;	O
uxfio	pointer
->	O
offset_eof_savedM	long
=	O
-	O
1	int
;	O
}	O
else	O
{	O
uxfio	pointer
->	O
current_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
virtual_offsetM	long
=	O
0	int
;	O
uxfio	pointer
->	O
offset_eofM	long
=	O
value	int
;	O
uxfio	pointer
->	O
offset_bofM	long
=	O
uxfio	pointer
->	O
posM	long
;	O
uxfio	pointer
->	O
offset_eof_savedM	long
=	O
value	int
;	O
}	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_ARM_AUTO_DISABLE	O
)	O
{	O
uxfio	pointer
->	O
auto_disableM	int
=	O
value	int
?	O
1	int
:	O
0	int
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_WRITE_INSERT	O
)	O
{	O
uxfio	pointer
->	O
write_insertM	int
=	O
value	int
?	O
1	int
:	O
0	int
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_LOCK_MEM_FATAL	O
)	O
{	O
uxfio	pointer
->	O
lock_buf_fatalM	int
=	O
value	int
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_DO_MEM_REALLOC	O
)	O
{	O
if	O
(	O
value	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
void	O
*	O
newbuf	pointer
;	O
newbuf	pointer
=	O
SWBIS_REALLOC	O
(	O
uxfio	pointer
->	O
bufM	pointer
,	O
uxfio	pointer
->	O
lenM	long
+	O
value	int
+	O
UXFIO_ALLOC_AHEAD	int
+	O
1	int
,	O
uxfio	pointer
->	O
lenM	long
)	O
;	O
if	O
(	O
!	O
newbuf	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"out of memory\n"	pointer
)	O
;	O
exit	function
(	O
4	int
)	O
;	O
}	O
uxfio	pointer
->	O
bufM	pointer
=	O
newbuf	pointer
;	O
uxfio	pointer
->	O
lenM	long
+=	O
(	O
value	int
+	O
UXFIO_ALLOC_AHEAD	int
)	O
;	O
memset	function
(	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
endM	long
,	O
(	O
int	O
)	O
'\0'	O
,	O
uxfio	pointer
->	O
lenM	long
+	O
1	int
-	O
uxfio	pointer
->	O
endM	long
)	O
;	O
}	O
else	O
{	O
return	O
-	O
2	int
;	O
}	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
cmd	int
==	O
UXFIO_F_SET_OUTPUT_BLOCK_SIZE	O
)	O
{	O
if	O
(	O
value	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
uxfio	pointer
->	O
output_block_sizeM	int
=	O
value	int
;	O
if	O
(	O
uxfio	pointer
->	O
output_bufferM	pointer
)	O
free	function
(	O
uxfio	pointer
->	O
output_bufferM	pointer
)	O
;	O
uxfio	pointer
->	O
output_bufferM	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
value	int
+	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
uxfio	pointer
->	O
uxfdM	int
!=	O
UXFIO_NULL_FD	O
)	O
{	O
if	O
(	O
uxfio	pointer
->	O
uxfdM	int
<	O
UXFIO_FD_MIN	int
)	O
{	O
return	O
fcntl	function
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
cmd	int
,	O
value	int
)	O
;	O
}	O
else	O
{	O
return	O
uxfio_fcntl	function
(	O
uxfio	pointer
->	O
uxfdM	int
,	O
cmd	int
,	O
value	int
)	O
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
char	O
*	O
uxfio_get_fd_mem	function
(	O
int	O
uxfio_fildes	int
,	O
int	O
*	O
data_len	pointer
)	O
{	O
char	O
*	O
s	pointer
;	O
int	O
ret	int
;	O
int	O
end	int
;	O
ret	int
=	O
uxfio_get_dynamic_buffer	function
(	O
uxfio_fildes	int
,	O
&	O
s	pointer
,	O
&	O
end	int
,	O
data_len	pointer
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
return	O
NULL	O
;	O
return	O
s	pointer
;	O
}	O
int	O
uxfio_get_dynamic_buffer	function
(	O
int	O
uxfio_fildes	int
,	O
char	O
*	O
*	O
buffer_ptr	pointer
,	O
int	O
*	O
buffer_end	pointer
,	O
int	O
*	O
buffer_len	pointer
)	O
{	O
UXFIO	struct
*	O
uxfio	pointer
;	O
off_t	long
curpos	long
;	O
if	O
(	O
table_find	function
(	O
uxfio_fildes	int
,	O
&	O
uxfio	pointer
,	O
1	int
)	O
)	O
{	O
UXFIO_E_DEBUG	O
(	O
"error"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"uxfio error [%d]: file desc %d not found.\n"	pointer
,	O
__LINE__	O
,	O
uxfio_fildes	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
uxfio	pointer
->	O
buffertypeM	int
==	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
{	O
*	O
(	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
lenM	long
)	O
=	O
'\0'	O
;	O
*	O
(	O
uxfio	pointer
->	O
bufM	pointer
+	O
uxfio	pointer
->	O
endM	long
)	O
=	O
'\0'	O
;	O
if	O
(	O
buffer_ptr	pointer
)	O
(	O
*	O
buffer_ptr	pointer
)	O
=	O
uxfio	pointer
->	O
bufM	pointer
;	O
if	O
(	O
buffer_len	pointer
)	O
{	O
curpos	long
=	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
0	int
,	O
SEEK_CUR	int
)	O
;	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
(	O
*	O
buffer_len	pointer
)	O
=	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
0	int
,	O
SEEK_CUR	int
)	O
;	O
uxfio_lseek	function
(	O
uxfio_fildes	int
,	O
curpos	long
,	O
SEEK_SET	int
)	O
;	O
}	O
if	O
(	O
buffer_end	pointer
)	O
(	O
*	O
buffer_end	pointer
)	O
=	O
uxfio	pointer
->	O
endM	long
;	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
