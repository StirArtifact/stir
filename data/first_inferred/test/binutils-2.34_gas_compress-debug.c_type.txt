struct	O
z_stream_s	struct
*	O
compress_init	function
(	O
void	O
)	O
{	O
static	O
struct	O
z_stream_s	struct
strm	*
;	O
strm	struct
.	O
zalloc	*
=	O
NULL	O
;	O
strm	struct
.	O
zfree	*
=	O
NULL	O
;	O
strm	struct
.	O
opaque	*
=	O
NULL	O
;	O
deflateInit	O
(	O
&	O
strm	struct
,	O
Z_DEFAULT_COMPRESSION	O
)	O
;	O
return	O
&	O
strm	*
;	O
}	O
int	O
compress_data	function
(	O
struct	O
z_stream_s	struct
*	O
strm	*
,	O
const	O
char	O
*	O
*	O
next_in	*
,	O
int	O
*	O
avail_in	int
,	O
char	O
*	O
*	O
next_out	*
,	O
int	O
*	O
avail_out	int
)	O
{	O
int	O
out_size	int
=	O
0	int
;	O
int	O
x	int
;	O
strm	*
->	O
next_in	*
=	O
(	O
Bytef	char
*	O
)	O
(	O
*	O
next_in	*
)	O
;	O
strm	*
->	O
avail_in	int
=	O
*	O
avail_in	int
;	O
strm	*
->	O
next_out	*
=	O
(	O
Bytef	char
*	O
)	O
(	O
*	O
next_out	*
)	O
;	O
strm	*
->	O
avail_out	int
=	O
*	O
avail_out	int
;	O
x	int
=	O
deflate	function
(	O
strm	*
,	O
Z_NO_FLUSH	int
)	O
;	O
if	O
(	O
x	int
!=	O
Z_OK	int
)	O
return	O
-	O
1	int
;	O
out_size	int
=	O
*	O
avail_out	int
-	O
strm	*
->	O
avail_out	int
;	O
*	O
next_in	*
=	O
(	O
char	O
*	O
)	O
(	O
strm	*
->	O
next_in	*
)	O
;	O
*	O
avail_in	int
=	O
strm	*
->	O
avail_in	int
;	O
*	O
next_out	*
=	O
(	O
char	O
*	O
)	O
(	O
strm	*
->	O
next_out	*
)	O
;	O
*	O
avail_out	int
=	O
strm	*
->	O
avail_out	int
;	O
return	O
out_size	int
;	O
}	O
int	O
compress_finish	function
(	O
struct	O
z_stream_s	struct
*	O
strm	*
,	O
char	O
*	O
*	O
next_out	*
,	O
int	O
*	O
avail_out	int
,	O
int	O
*	O
out_size	*
)	O
{	O
int	O
x	int
;	O
strm	*
->	O
avail_in	int
=	O
0	int
;	O
strm	*
->	O
next_out	*
=	O
(	O
Bytef	char
*	O
)	O
(	O
*	O
next_out	*
)	O
;	O
strm	*
->	O
avail_out	int
=	O
*	O
avail_out	int
;	O
x	int
=	O
deflate	function
(	O
strm	*
,	O
Z_FINISH	int
)	O
;	O
*	O
out_size	*
=	O
*	O
avail_out	int
-	O
strm	*
->	O
avail_out	int
;	O
*	O
next_out	*
=	O
(	O
char	O
*	O
)	O
(	O
strm	*
->	O
next_out	*
)	O
;	O
*	O
avail_out	int
=	O
strm	*
->	O
avail_out	int
;	O
if	O
(	O
x	int
==	O
Z_STREAM_END	int
)	O
{	O
deflateEnd	function
(	O
strm	*
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
strm	*
->	O
avail_out	int
!=	O
0	int
)	O
return	O
-	O
1	int
;	O
return	O
1	int
;	O
}	O