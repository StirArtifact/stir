const	O
char	O
conn_rcsid	array
[	O
]	O
=	O
"$Id: conn.c,v 1.18 2002/03/05 19:10:41 ian Rel $"	pointer
;	O
boolean	int
fconn_init	function
(	O
qport	pointer
,	O
qconn	pointer
,	O
ttype	enum
)	O
struct	O
uuconf_port	struct
*	O
qport	pointer
;	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
enum	O
uuconf_porttype	enum
ttype	enum
;	O
{	O
qconn	pointer
->	O
qport	pointer
=	O
qport	pointer
;	O
switch	O
(	O
qport	pointer
==	O
NULL	O
?	O
ttype	enum
:	O
qport	pointer
->	O
uuconf_ttype	enum
)	O
{	O
case	O
UUCONF_PORTTYPE_STDIN	int
:	O
return	O
fsysdep_stdin_init	function
(	O
qconn	pointer
)	O
;	O
case	O
UUCONF_PORTTYPE_MODEM	int
:	O
return	O
fsysdep_modem_init	function
(	O
qconn	pointer
)	O
;	O
case	O
UUCONF_PORTTYPE_DIRECT	int
:	O
return	O
fsysdep_direct_init	function
(	O
qconn	pointer
)	O
;	O
case	O
UUCONF_PORTTYPE_TCP	int
:	O
return	O
fsysdep_tcp_init	function
(	O
qconn	pointer
)	O
;	O
case	O
UUCONF_PORTTYPE_PIPE	int
:	O
return	O
fsysdep_pipe_init	function
(	O
qconn	pointer
)	O
;	O
default	O
:	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Unknown or unsupported port type"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
void	O
uconn_free	function
(	O
qconn	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
{	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pufree	pointer
)	O
(	O
qconn	pointer
)	O
;	O
}	O
boolean	int
fconn_lock	function
(	O
qconn	pointer
,	O
fin	int
,	O
fuser	int
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
boolean	int
fin	int
;	O
boolean	int
fuser	int
;	O
{	O
boolean	int
(	O
*	O
pflock	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
,	O
boolean	int
,	O
boolean	int
)	O
)	O
;	O
pflock	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pflock	pointer
;	O
if	O
(	O
pflock	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
return	O
(	O
*	O
pflock	pointer
)	O
(	O
qconn	pointer
,	O
fin	int
,	O
fuser	int
)	O
;	O
}	O
boolean	int
fconn_unlock	function
(	O
qconn	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
{	O
boolean	int
(	O
*	O
pfunlock	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
)	O
)	O
;	O
pfunlock	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfunlock	pointer
;	O
if	O
(	O
pfunlock	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
return	O
(	O
*	O
pfunlock	pointer
)	O
(	O
qconn	pointer
)	O
;	O
}	O
boolean	int
fconn_open	function
(	O
qconn	pointer
,	O
ibaud	long
,	O
ihighbaud	long
,	O
fwait	int
,	O
fuser	int
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
long	O
ibaud	long
;	O
long	O
ihighbaud	long
;	O
boolean	int
fwait	int
;	O
boolean	int
fuser	int
;	O
{	O
boolean	int
fret	int
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_PORT	O
)	O
)	O
{	O
char	O
abspeed	array
[	O
20	int
]	O
;	O
if	O
(	O
ibaud	long
==	O
(	O
long	O
)	O
0	int
)	O
strcpy	function
(	O
abspeed	array
,	O
"default speed"	pointer
)	O
;	O
else	O
sprintf	function
(	O
abspeed	array
,	O
"speed %ld"	pointer
,	O
ibaud	long
)	O
;	O
if	O
(	O
qconn	pointer
->	O
qport	pointer
==	O
NULL	O
)	O
ulog	function
(	O
LOG_DEBUG	int
,	O
"fconn_open: Opening stdin port (%s)"	pointer
,	O
abspeed	array
)	O
;	O
else	O
if	O
(	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_zname	pointer
==	O
NULL	O
)	O
ulog	function
(	O
LOG_DEBUG	int
,	O
"fconn_open: Opening unnamed port (%s)"	pointer
,	O
abspeed	array
)	O
;	O
else	O
ulog	function
(	O
LOG_DEBUG	int
,	O
"fconn_open: Opening port %s (%s)"	pointer
,	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_zname	pointer
,	O
abspeed	array
)	O
;	O
}	O
if	O
(	O
ihighbaud	long
!=	O
0	int
&&	O
qconn	pointer
->	O
qport	pointer
!=	O
NULL	O
)	O
{	O
struct	O
uuconf_port	struct
*	O
qport	pointer
;	O
qport	pointer
=	O
qconn	pointer
->	O
qport	pointer
;	O
ibaud	long
=	O
ihighbaud	long
;	O
if	O
(	O
qport	pointer
->	O
uuconf_ttype	enum
==	O
UUCONF_PORTTYPE_MODEM	int
)	O
{	O
if	O
(	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ilowbaud	long
!=	O
0	int
)	O
{	O
if	O
(	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ihighbaud	long
<	O
ibaud	long
)	O
ibaud	long
=	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ihighbaud	long
;	O
}	O
else	O
if	O
(	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
!=	O
0	int
)	O
ibaud	long
=	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
;	O
}	O
else	O
if	O
(	O
qport	pointer
->	O
uuconf_ttype	enum
==	O
UUCONF_PORTTYPE_DIRECT	int
)	O
{	O
if	O
(	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_ibaud	long
!=	O
0	int
)	O
ibaud	long
=	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_ibaud	long
;	O
}	O
}	O
if	O
(	O
qconn	pointer
->	O
qport	pointer
==	O
NULL	O
)	O
ulog_device	function
(	O
"stdin"	pointer
)	O
;	O
else	O
ulog_device	function
(	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_zname	pointer
)	O
;	O
fret	int
=	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfopen	pointer
)	O
(	O
qconn	pointer
,	O
ibaud	long
,	O
fwait	int
,	O
fuser	int
)	O
;	O
if	O
(	O
!	O
fret	int
)	O
ulog_device	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fconn_close	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
qdialer	pointer
,	O
fsuccess	int
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
pointer	pointer
puuconf	pointer
;	O
struct	O
uuconf_dialer	struct
*	O
qdialer	pointer
;	O
boolean	int
fsuccess	int
;	O
{	O
boolean	int
fret	int
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PORT	O
,	O
"fconn_close: Closing connection"	pointer
)	O
;	O
fLog_sighup	int
=	O
FALSE	O
;	O
fret	int
=	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfclose	pointer
)	O
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
qdialer	pointer
,	O
fsuccess	int
)	O
;	O
afSignal	array
[	O
INDEXSIG_SIGHUP	O
]	O
=	O
FALSE	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
fLog_sighup	int
=	O
TRUE	O
;	O
ulog_device	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fconn_dial	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
qsys	pointer
,	O
zphone	pointer
,	O
qdialer	pointer
,	O
ptdialerfound	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
pointer	pointer
puuconf	pointer
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zphone	pointer
;	O
struct	O
uuconf_dialer	struct
*	O
qdialer	pointer
;	O
enum	O
tdialerfound	enum
*	O
ptdialerfound	pointer
;	O
{	O
struct	O
uuconf_dialer	struct
sdialer	struct
;	O
enum	O
tdialerfound	enum
tfound	enum
;	O
boolean	int
(	O
*	O
pfdial	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
,	O
pointer	pointer
,	O
const	O
struct	O
uuconf_system	struct
*	O
,	O
const	O
char	O
*	O
,	O
struct	O
uuconf_dialer	struct
*	O
,	O
enum	O
tdialerfound	enum
*	O
)	O
)	O
;	O
if	O
(	O
qdialer	pointer
==	O
NULL	O
)	O
qdialer	pointer
=	O
&	O
sdialer	struct
;	O
if	O
(	O
ptdialerfound	pointer
==	O
NULL	O
)	O
ptdialerfound	pointer
=	O
&	O
tfound	enum
;	O
qdialer	pointer
->	O
uuconf_zname	pointer
=	O
NULL	O
;	O
*	O
ptdialerfound	pointer
=	O
DIALERFOUND_FALSE	int
;	O
pfdial	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfdial	pointer
;	O
if	O
(	O
pfdial	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
return	O
(	O
*	O
pfdial	pointer
)	O
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
qsys	pointer
,	O
zphone	pointer
,	O
qdialer	pointer
,	O
ptdialerfound	pointer
)	O
;	O
}	O
boolean	int
fconn_read	function
(	O
qconn	pointer
,	O
zbuf	pointer
,	O
pclen	pointer
,	O
cmin	long
,	O
ctimeout	int
,	O
freport	int
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
char	O
*	O
zbuf	pointer
;	O
size_t	long
*	O
pclen	pointer
;	O
size_t	long
cmin	long
;	O
int	O
ctimeout	int
;	O
boolean	int
freport	int
;	O
{	O
boolean	int
fret	int
;	O
fret	int
=	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfread	pointer
)	O
(	O
qconn	pointer
,	O
zbuf	pointer
,	O
pclen	pointer
,	O
cmin	long
,	O
ctimeout	int
,	O
freport	int
)	O
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_INCOMING	O
)	O
)	O
udebug_buffer	function
(	O
"fconn_read: Read"	pointer
,	O
zbuf	pointer
,	O
*	O
pclen	pointer
)	O
;	O
else	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_PORT	O
)	O
)	O
ulog	function
(	O
LOG_DEBUG	int
,	O
"fconn_read: Read %lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
*	O
pclen	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fconn_write	function
(	O
qconn	pointer
,	O
zbuf	pointer
,	O
clen	long
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
const	O
char	O
*	O
zbuf	pointer
;	O
size_t	long
clen	long
;	O
{	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_OUTGOING	O
)	O
)	O
udebug_buffer	function
(	O
"fconn_write: Writing"	pointer
,	O
zbuf	pointer
,	O
clen	long
)	O
;	O
else	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_PORT	O
)	O
)	O
ulog	function
(	O
LOG_DEBUG	int
,	O
"fconn_write: Writing %lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
clen	long
)	O
;	O
return	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfwrite	pointer
)	O
(	O
qconn	pointer
,	O
zbuf	pointer
,	O
clen	long
)	O
;	O
}	O
boolean	int
fconn_io	function
(	O
qconn	pointer
,	O
zwrite	pointer
,	O
pcwrite	pointer
,	O
zread	pointer
,	O
pcread	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
const	O
char	O
*	O
zwrite	pointer
;	O
size_t	long
*	O
pcwrite	pointer
;	O
char	O
*	O
zread	pointer
;	O
size_t	long
*	O
pcread	pointer
;	O
{	O
boolean	int
fret	int
;	O
size_t	long
cwrite	long
=	O
*	O
pcwrite	pointer
;	O
size_t	long
cread	long
=	O
*	O
pcread	pointer
;	O
if	O
(	O
cread	long
==	O
0	int
||	O
cwrite	long
==	O
0	int
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"fconn_io: cread %lu; cwrite %lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
cread	long
,	O
(	O
unsigned	O
long	O
)	O
cwrite	long
)	O
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_OUTGOING	O
)	O
)	O
udebug_buffer	function
(	O
"fconn_io: Writing"	pointer
,	O
zwrite	pointer
,	O
cwrite	long
)	O
;	O
fret	int
=	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfio	pointer
)	O
(	O
qconn	pointer
,	O
zwrite	pointer
,	O
pcwrite	pointer
,	O
zread	pointer
,	O
pcread	pointer
)	O
;	O
DEBUG_MESSAGE4	O
(	O
DEBUG_PORT	O
,	O
"fconn_io: Wrote %lu of %lu, read %lu of %lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
*	O
pcwrite	pointer
,	O
(	O
unsigned	O
long	O
)	O
cwrite	long
,	O
(	O
unsigned	O
long	O
)	O
*	O
pcread	pointer
,	O
(	O
unsigned	O
long	O
)	O
cread	long
)	O
;	O
if	O
(	O
*	O
pcread	pointer
>	O
0	int
&&	O
FDEBUGGING	O
(	O
DEBUG_INCOMING	O
)	O
)	O
udebug_buffer	function
(	O
"fconn_io: Read"	pointer
,	O
zread	pointer
,	O
*	O
pcread	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fconn_break	function
(	O
qconn	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
{	O
boolean	int
(	O
*	O
pfbreak	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
)	O
)	O
;	O
pfbreak	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfbreak	pointer
;	O
if	O
(	O
pfbreak	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_PORT	O
,	O
"fconn_break: Sending break character"	pointer
)	O
;	O
return	O
(	O
*	O
pfbreak	pointer
)	O
(	O
qconn	pointer
)	O
;	O
}	O
boolean	int
fconn_set	function
(	O
qconn	pointer
,	O
tparity	enum
,	O
tstrip	enum
,	O
txonxoff	enum
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
enum	O
tparitysetting	enum
tparity	enum
;	O
enum	O
tstripsetting	enum
tstrip	enum
;	O
enum	O
txonxoffsetting	enum
txonxoff	enum
;	O
{	O
boolean	int
(	O
*	O
pfset	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
,	O
enum	O
tparitysetting	enum
,	O
enum	O
tstripsetting	enum
,	O
enum	O
txonxoffsetting	enum
)	O
)	O
;	O
pfset	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfset	pointer
;	O
if	O
(	O
pfset	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
DEBUG_MESSAGE3	O
(	O
DEBUG_PORT	O
,	O
"fconn_set: Changing setting to %d, %d, %d"	pointer
,	O
(	O
int	O
)	O
tparity	enum
,	O
(	O
int	O
)	O
tstrip	enum
,	O
(	O
int	O
)	O
txonxoff	enum
)	O
;	O
return	O
(	O
*	O
pfset	pointer
)	O
(	O
qconn	pointer
,	O
tparity	enum
,	O
tstrip	enum
,	O
txonxoff	enum
)	O
;	O
}	O
boolean	int
fconn_carrier	function
(	O
qconn	pointer
,	O
fcarrier	int
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
boolean	int
fcarrier	int
;	O
{	O
boolean	int
(	O
*	O
pfcarrier	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
,	O
boolean	int
)	O
)	O
;	O
pfcarrier	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfcarrier	pointer
;	O
if	O
(	O
pfcarrier	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
return	O
(	O
*	O
pfcarrier	pointer
)	O
(	O
qconn	pointer
,	O
fcarrier	int
)	O
;	O
}	O
boolean	int
fconn_run_chat	function
(	O
qconn	pointer
,	O
pzprog	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
char	O
*	O
*	O
pzprog	pointer
;	O
{	O
return	O
(	O
*	O
qconn	pointer
->	O
qcmds	pointer
->	O
pfchat	pointer
)	O
(	O
qconn	pointer
,	O
pzprog	pointer
)	O
;	O
}	O
long	O
iconn_baud	function
(	O
qconn	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
{	O
long	O
(	O
*	O
pibaud	pointer
)	O
P	O
(	O
(	O
struct	O
sconnection	struct
*	O
)	O
)	O
;	O
pibaud	pointer
=	O
qconn	pointer
->	O
qcmds	pointer
->	O
pibaud	pointer
;	O
if	O
(	O
pibaud	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
(	O
*	O
pibaud	pointer
)	O
(	O
qconn	pointer
)	O
;	O
}	O
boolean	int
fconn_dial_sequence	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
pzdialer	pointer
,	O
qsys	pointer
,	O
zphone	pointer
,	O
qdialer	pointer
,	O
ptdialerfound	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
pointer	pointer
puuconf	pointer
;	O
char	O
*	O
*	O
pzdialer	pointer
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zphone	pointer
;	O
struct	O
uuconf_dialer	struct
*	O
qdialer	pointer
;	O
enum	O
tdialerfound	enum
*	O
ptdialerfound	pointer
;	O
{	O
const	O
char	O
*	O
zname	pointer
;	O
boolean	int
ffirst	int
,	O
ffreefirst	int
;	O
if	O
(	O
qconn	pointer
->	O
qport	pointer
==	O
NULL	O
)	O
zname	pointer
=	O
NULL	O
;	O
else	O
zname	pointer
=	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_zname	pointer
;	O
ffirst	int
=	O
TRUE	O
;	O
ffreefirst	int
=	O
FALSE	O
;	O
while	O
(	O
*	O
pzdialer	pointer
!=	O
NULL	O
)	O
{	O
struct	O
uuconf_dialer	struct
*	O
q	pointer
;	O
struct	O
uuconf_dialer	struct
s	struct
;	O
const	O
char	O
*	O
ztoken	pointer
;	O
boolean	int
ftranslate	int
;	O
if	O
(	O
!	O
ffirst	int
)	O
q	pointer
=	O
&	O
s	struct
;	O
else	O
q	pointer
=	O
qdialer	pointer
;	O
if	O
(	O
!	O
ffirst	int
||	O
*	O
ptdialerfound	pointer
==	O
DIALERFOUND_FALSE	int
)	O
{	O
int	O
iuuconf	int
;	O
iuuconf	int
=	O
uuconf_dialer_info	function
(	O
puuconf	pointer
,	O
*	O
pzdialer	pointer
,	O
q	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: Dialer not found"	pointer
,	O
*	O
pzdialer	pointer
)	O
;	O
if	O
(	O
ffreefirst	int
)	O
(	O
void	O
)	O
uuconf_dialer_free	function
(	O
puuconf	pointer
,	O
qdialer	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
if	O
(	O
ffreefirst	int
)	O
(	O
void	O
)	O
uuconf_dialer_free	function
(	O
puuconf	pointer
,	O
qdialer	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
ffirst	int
)	O
{	O
*	O
ptdialerfound	pointer
=	O
DIALERFOUND_FREE	int
;	O
ffreefirst	int
=	O
TRUE	O
;	O
}	O
}	O
++	O
pzdialer	pointer
;	O
ztoken	pointer
=	O
*	O
pzdialer	pointer
;	O
ftranslate	int
=	O
FALSE	O
;	O
if	O
(	O
ztoken	pointer
==	O
NULL	O
||	O
strcmp	function
(	O
ztoken	pointer
,	O
"\\D"	pointer
)	O
==	O
0	int
)	O
ztoken	pointer
=	O
zphone	pointer
;	O
else	O
if	O
(	O
strcmp	function
(	O
ztoken	pointer
,	O
"\\T"	pointer
)	O
==	O
0	int
)	O
{	O
ztoken	pointer
=	O
zphone	pointer
;	O
ftranslate	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
!	O
fchat	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
,	O
qsys	pointer
,	O
q	pointer
,	O
ztoken	pointer
,	O
ftranslate	int
,	O
zname	pointer
,	O
iconn_baud	function
(	O
qconn	pointer
)	O
)	O
)	O
{	O
if	O
(	O
q	pointer
==	O
&	O
s	struct
)	O
(	O
void	O
)	O
uuconf_dialer_free	function
(	O
puuconf	pointer
,	O
q	pointer
)	O
;	O
if	O
(	O
ffreefirst	int
)	O
(	O
void	O
)	O
uuconf_dialer_free	function
(	O
puuconf	pointer
,	O
qdialer	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
ffirst	int
)	O
ffirst	int
=	O
FALSE	O
;	O
else	O
(	O
void	O
)	O
uuconf_dialer_free	function
(	O
puuconf	pointer
,	O
q	pointer
)	O
;	O
if	O
(	O
*	O
pzdialer	pointer
!=	O
NULL	O
)	O
++	O
pzdialer	pointer
;	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fmodem_dial	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
qsys	pointer
,	O
zphone	pointer
,	O
qdialer	pointer
,	O
ptdialerfound	pointer
)	O
struct	O
sconnection	struct
*	O
qconn	pointer
;	O
pointer	pointer
puuconf	pointer
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zphone	pointer
;	O
struct	O
uuconf_dialer	struct
*	O
qdialer	pointer
;	O
enum	O
tdialerfound	enum
*	O
ptdialerfound	pointer
;	O
{	O
char	O
*	O
*	O
pzdialer	pointer
;	O
*	O
ptdialerfound	pointer
=	O
DIALERFOUND_FALSE	int
;	O
pzdialer	pointer
=	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_pzdialer	pointer
;	O
if	O
(	O
pzdialer	pointer
!=	O
NULL	O
&&	O
*	O
pzdialer	pointer
!=	O
NULL	O
)	O
{	O
int	O
iuuconf	int
;	O
boolean	int
fret	int
;	O
iuuconf	int
=	O
uuconf_dialer_info	function
(	O
puuconf	pointer
,	O
*	O
pzdialer	pointer
,	O
qdialer	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: Dialer not found"	pointer
,	O
*	O
pzdialer	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
*	O
ptdialerfound	pointer
=	O
DIALERFOUND_FREE	int
;	O
fret	int
=	O
(	O
fsysdep_modem_begin_dial	function
(	O
qconn	pointer
,	O
qdialer	pointer
)	O
&&	O
fconn_dial_sequence	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
pzdialer	pointer
,	O
qsys	pointer
,	O
zphone	pointer
,	O
qdialer	pointer
,	O
ptdialerfound	pointer
)	O
&&	O
fsysdep_modem_end_dial	function
(	O
qconn	pointer
,	O
qdialer	pointer
)	O
)	O
;	O
if	O
(	O
!	O
fret	int
)	O
(	O
void	O
)	O
uuconf_dialer_free	function
(	O
puuconf	pointer
,	O
qdialer	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
else	O
if	O
(	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_qdialer	pointer
!=	O
NULL	O
)	O
{	O
struct	O
uuconf_dialer	struct
*	O
q	pointer
;	O
const	O
char	O
*	O
zname	pointer
;	O
q	pointer
=	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_qdialer	pointer
;	O
*	O
qdialer	pointer
=	O
*	O
q	pointer
;	O
*	O
ptdialerfound	pointer
=	O
DIALERFOUND_TRUE	int
;	O
if	O
(	O
qconn	pointer
->	O
qport	pointer
==	O
NULL	O
)	O
zname	pointer
=	O
NULL	O
;	O
else	O
zname	pointer
=	O
qconn	pointer
->	O
qport	pointer
->	O
uuconf_zname	pointer
;	O
return	O
(	O
fsysdep_modem_begin_dial	function
(	O
qconn	pointer
,	O
q	pointer
)	O
&&	O
fchat	function
(	O
qconn	pointer
,	O
puuconf	pointer
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
,	O
qsys	pointer
,	O
q	pointer
,	O
zphone	pointer
,	O
FALSE	O
,	O
zname	pointer
,	O
iconn_baud	function
(	O
qconn	pointer
)	O
)	O
&&	O
fsysdep_modem_end_dial	function
(	O
qconn	pointer
,	O
q	pointer
)	O
)	O
;	O
}	O
else	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"No dialer information"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O