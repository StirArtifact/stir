int	O
ZEXPORT	O
compress2	function
(	O
dest	*
,	O
destLen	*
,	O
source	*
,	O
sourceLen	long
,	O
level	int
)	O
Bytef	char
*	O
dest	*
;	O
uLongf	long
*	O
destLen	*
;	O
const	O
Bytef	char
*	O
source	*
;	O
uLong	long
sourceLen	long
;	O
int	O
level	int
;	O
{	O
z_stream	struct
stream	struct
;	O
int	O
err	int
;	O
const	O
uInt	int
max	int
=	O
(	O
uInt	int
)	O
-	O
1	int
;	O
uLong	long
left	int
;	O
left	long
=	O
*	O
destLen	*
;	O
*	O
destLen	*
=	O
0	int
;	O
stream	struct
.	O
zalloc	*
=	O
(	O
alloc_func	*
)	O
0	int
;	O
stream	struct
.	O
zfree	*
=	O
(	O
free_func	*
)	O
0	int
;	O
stream	struct
.	O
opaque	*
=	O
(	O
voidpf	*
)	O
0	int
;	O
err	int
=	O
deflateInit	O
(	O
&	O
stream	struct
,	O
level	int
)	O
;	O
if	O
(	O
err	int
!=	O
Z_OK	int
)	O
return	O
err	int
;	O
stream	struct
.	O
next_out	*
=	O
dest	*
;	O
stream	struct
.	O
avail_out	int
=	O
0	int
;	O
stream	struct
.	O
next_in	*
=	O
(	O
z_const	O
Bytef	char
*	O
)	O
source	*
;	O
stream	struct
.	O
avail_in	int
=	O
0	int
;	O
do	O
{	O
if	O
(	O
stream	struct
.	O
avail_out	int
==	O
0	int
)	O
{	O
stream	struct
.	O
avail_out	int
=	O
left	long
>	O
(	O
uLong	long
)	O
max	int
?	O
max	int
:	O
(	O
uInt	int
)	O
left	long
;	O
left	long
-=	O
stream	struct
.	O
avail_out	int
;	O
}	O
if	O
(	O
stream	struct
.	O
avail_in	int
==	O
0	int
)	O
{	O
stream	struct
.	O
avail_in	int
=	O
sourceLen	long
>	O
(	O
uLong	long
)	O
max	int
?	O
max	int
:	O
(	O
uInt	int
)	O
sourceLen	long
;	O
sourceLen	long
-=	O
stream	struct
.	O
avail_in	int
;	O
}	O
err	int
=	O
deflate	function
(	O
&	O
stream	struct
,	O
sourceLen	long
?	O
Z_NO_FLUSH	int
:	O
Z_FINISH	int
)	O
;	O
}	O
while	O
(	O
err	int
==	O
Z_OK	int
)	O
;	O
*	O
destLen	*
=	O
stream	struct
.	O
total_out	long
;	O
deflateEnd	function
(	O
&	O
stream	struct
)	O
;	O
return	O
err	int
==	O
Z_STREAM_END	int
?	O
Z_OK	int
:	O
err	int
;	O
}	O
int	O
ZEXPORT	O
compress	function
(	O
dest	*
,	O
destLen	*
,	O
source	*
,	O
sourceLen	long
)	O
Bytef	char
*	O
dest	*
;	O
uLongf	long
*	O
destLen	*
;	O
const	O
Bytef	char
*	O
source	*
;	O
uLong	long
sourceLen	long
;	O
{	O
return	O
compress2	function
(	O
dest	*
,	O
destLen	*
,	O
source	*
,	O
sourceLen	long
,	O
Z_DEFAULT_COMPRESSION	O
)	O
;	O
}	O
uLong	long
ZEXPORT	O
compressBound	function
(	O
sourceLen	long
)	O
uLong	long
sourceLen	long
;	O
{	O
return	O
sourceLen	long
+	O
(	O
sourceLen	long
>>	O
12	int
)	O
+	O
(	O
sourceLen	long
>>	O
14	int
)	O
+	O
(	O
sourceLen	long
>>	O
25	int
)	O
+	O
13	int
;	O
}	O