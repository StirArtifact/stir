int	O
mu_message_get_uidl	function
(	O
mu_message_t	*
msg	*
,	O
char	O
*	O
buffer	*
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pwriten	*
)	O
{	O
mu_header_t	*
header	*
=	O
NULL	O
;	O
size_t	long
n	long
=	O
0	int
;	O
int	O
status	int
;	O
if	O
(	O
msg	*
==	O
NULL	O
||	O
buffer	*
==	O
NULL	O
||	O
buflen	long
==	O
0	int
)	O
return	O
EINVAL	int
;	O
buffer	*
[	O
0	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
msg	*
->	O
_get_uidl	*
)	O
{	O
status	int
=	O
msg	*
->	O
_get_uidl	*
(	O
msg	*
,	O
buffer	*
,	O
buflen	long
,	O
pwriten	*
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
return	O
status	int
;	O
}	O
mu_message_get_header	function
(	O
msg	*
,	O
&	O
header	*
)	O
;	O
status	int
=	O
mu_header_get_value_unfold	function
(	O
header	*
,	O
"X-UIDL"	*
,	O
buffer	*
,	O
buflen	long
,	O
&	O
n	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
||	O
n	int
==	O
0	int
)	O
{	O
size_t	long
uid	int
=	O
0	int
;	O
struct	O
mu_md5_ctx	struct
md5context	struct
;	O
mu_stream_t	*
stream	*
=	O
NULL	O
;	O
char	O
buf	*
[	O
1024	int
]	O
;	O
unsigned	O
char	O
md5digest	array
[	O
16	int
]	O
;	O
char	O
*	O
tmp	*
;	O
n	long
=	O
0	int
;	O
mu_message_get_uid	function
(	O
msg	*
,	O
&	O
uid	int
)	O
;	O
mu_message_get_streamref	function
(	O
msg	*
,	O
&	O
stream	*
)	O
;	O
mu_md5_init_ctx	function
(	O
&	O
md5context	struct
)	O
;	O
status	int
=	O
mu_stream_seek	function
(	O
stream	*
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
while	O
(	O
mu_stream_read	function
(	O
stream	*
,	O
buf	*
,	O
sizeof	O
(	O
buf	*
)	O
,	O
&	O
n	long
)	O
==	O
0	int
&&	O
n	int
>	O
0	int
)	O
mu_md5_process_bytes	function
(	O
buf	*
,	O
n	long
,	O
&	O
md5context	struct
)	O
;	O
mu_md5_finish_ctx	function
(	O
&	O
md5context	struct
,	O
md5digest	int
)	O
;	O
tmp	*
=	O
buf	*
;	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
16	int
;	O
n	int
++	O
,	O
tmp	*
+=	O
2	int
)	O
sprintf	function
(	O
tmp	*
,	O
"%02x"	*
,	O
md5digest	array
[	O
n	int
]	O
)	O
;	O
*	O
tmp	*
=	O
'\0'	O
;	O
snprintf	function
(	O
buf	*
+	O
32	int
,	O
70	int
,	O
".%lu.%lu"	*
,	O
(	O
unsigned	O
long	O
)	O
time	O
(	O
NULL	O
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
)	O
;	O
mu_header_set_value	function
(	O
header	*
,	O
"X-UIDL"	*
,	O
buf	array
,	O
1	int
)	O
;	O
buflen	long
--	O
;	O
strncpy	function
(	O
buffer	array
,	O
buf	*
,	O
buflen	long
)	O
[	O
buflen	int
]	O
=	O
'\0'	O
;	O
}	O
mu_stream_destroy	function
(	O
&	O
stream	*
)	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_message_set_uidl	function
(	O
mu_message_t	*
msg	*
,	O
int	O
(	O
*	O
_get_uidl	*
)	O
(	O
mu_message_t	*
,	O
char	O
*	O
,	O
size_t	long
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
owner	*
)	O
{	O
if	O
(	O
msg	*
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
msg	*
->	O
owner	*
!=	O
owner	*
)	O
return	O
EACCES	int
;	O
msg	*
->	O
_get_uidl	*
=	O
_get_uidl	*
;	O
return	O
0	int
;	O
}	O