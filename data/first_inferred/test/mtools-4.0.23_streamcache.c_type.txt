static	O
int	O
is_initialized	int
=	O
0	int
;	O
static	O
Stream_t	struct
*	O
fss	array
[	O
256	int
]	O
;	O
static	O
void	O
finish_sc	function
(	O
void	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
256	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
fss	array
[	O
i	int
]	O
&&	O
fss	array
[	O
i	int
]	O
->	O
refs	int
!=	O
1	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"Streamcache allocation problem:%c %d\n"	pointer
,	O
i	int
,	O
fss	array
[	O
i	int
]	O
->	O
refs	int
)	O
;	O
FREE	O
(	O
&	O
(	O
fss	array
[	O
i	int
]	O
)	O
)	O
;	O
}	O
}	O
static	O
void	O
init_streamcache	function
(	O
void	O
)	O
{	O
int	O
i	int
;	O
if	O
(	O
is_initialized	int
)	O
return	O
;	O
is_initialized	int
=	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
256	int
;	O
i	int
++	O
)	O
fss	array
[	O
i	int
]	O
=	O
0	int
;	O
atexit	function
(	O
finish_sc	int
)	O
;	O
}	O
Stream_t	struct
*	O
open_root_dir	function
(	O
unsigned	O
char	O
drive	char
,	O
int	O
flags	int
,	O
int	O
*	O
isRop	pointer
)	O
{	O
Stream_t	struct
*	O
Fs	pointer
;	O
init_streamcache	function
(	O
)	O
;	O
drive	char
=	O
toupper	function
(	O
drive	char
)	O
;	O
if	O
(	O
fss	pointer
[	O
drive	int
]	O
)	O
Fs	pointer
=	O
fss	pointer
[	O
drive	int
]	O
;	O
else	O
{	O
Fs	pointer
=	O
fs_init	function
(	O
drive	char
,	O
flags	int
,	O
isRop	int
)	O
;	O
if	O
(	O
!	O
Fs	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Cannot initialize '%c:'\n"	pointer
,	O
drive	char
)	O
;	O
return	O
NULL	O
;	O
}	O
fss	array
[	O
drive	int
]	O
=	O
Fs	pointer
;	O
}	O
return	O
OpenRoot	function
(	O
Fs	pointer
)	O
;	O
}	O