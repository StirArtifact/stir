static	O
struct	O
parser_tab	struct
{	O
const	O
char	O
*	O
name	*
;	O
grecs_parser_t	*
parser	*
;	O
}	O
parser_tab	struct
[	O
]	O
=	O
{	O
{	O
"GRECS"	*
,	O
grecs_grecs_parser	function
}	O
,	O
{	O
"PATH"	*
,	O
grecs_path_parser	function
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
int	O
grecs_enumerate_parsers	function
(	O
int	O
(	O
*	O
fun	*
)	O
(	O
const	O
char	O
*	O
,	O
grecs_parser_t	*
,	O
void	O
*	O
)	O
,	O
void	O
*	O
data	*
)	O
{	O
struct	O
parser_tab	struct
*	O
pt	*
;	O
int	O
rc	int
=	O
0	int
;	O
for	O
(	O
pt	*
=	O
parser_tab	struct
;	O
rc	int
==	O
0	int
&&	O
pt	*
->	O
name	*
;	O
pt	*
++	O
)	O
rc	int
=	O
fun	*
(	O
pt	*
->	O
name	*
,	O
pt	*
->	O
parser	*
,	O
data	*
)	O
;	O
return	O
rc	int
;	O
}	O
grecs_parser_t	*
grecs_get_parser_by_type	function
(	O
const	O
char	O
*	O
type	int
)	O
{	O
struct	O
parser_tab	struct
*	O
pt	*
;	O
for	O
(	O
pt	*
=	O
parser_tab	struct
;	O
pt	*
->	O
name	*
;	O
pt	*
++	O
)	O
{	O
if	O
(	O
strcasecmp	function
(	O
pt	*
->	O
name	*
,	O
type	int
)	O
==	O
0	int
)	O
return	O
pt	*
->	O
parser	*
;	O
}	O
return	O
NULL	O
;	O
}	O