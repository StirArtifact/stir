static	O
bool	bool
rec_writer_putc	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
char	O
c	int
)	O
;	O
static	O
bool	bool
rec_writer_puts	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
;	O
struct	O
rec_writer_s	struct
{	O
FILE	struct
*	O
file_out	pointer
;	O
rec_buf_t	pointer
buf_out	pointer
;	O
bool	bool
eof	bool
;	O
int	O
line	int
;	O
bool	bool
collapse_p	bool
;	O
bool	bool
skip_comments_p	bool
;	O
enum	O
rec_writer_mode_e	enum
mode	enum
;	O
}	O
;	O
static	O
void	O
rec_writer_new_common	function
(	O
rec_writer_t	pointer
writer	pointer
)	O
{	O
writer	pointer
->	O
file_out	pointer
=	O
NULL	O
;	O
writer	pointer
->	O
buf_out	pointer
=	O
NULL	O
;	O
writer	pointer
->	O
line	int
=	O
1	int
;	O
writer	pointer
->	O
eof	bool
=	O
false	int
;	O
writer	pointer
->	O
collapse_p	bool
=	O
false	int
;	O
writer	pointer
->	O
skip_comments_p	bool
=	O
false	int
;	O
writer	pointer
->	O
mode	enum
=	O
REC_WRITER_NORMAL	int
;	O
}	O
rec_writer_t	pointer
rec_writer_new	function
(	O
FILE	struct
*	O
file_out	pointer
)	O
{	O
rec_writer_t	pointer
new	pointer
;	O
new	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
rec_writer_s	struct
)	O
)	O
;	O
if	O
(	O
new	pointer
)	O
{	O
rec_writer_new_common	function
(	O
new	pointer
)	O
;	O
new	pointer
->	O
file_out	pointer
=	O
file_out	pointer
;	O
}	O
return	O
new	pointer
;	O
}	O
rec_writer_t	pointer
rec_writer_new_str	function
(	O
char	O
*	O
*	O
str	pointer
,	O
size_t	long
*	O
str_size	pointer
)	O
{	O
rec_writer_t	pointer
new	pointer
;	O
new	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
rec_writer_s	struct
)	O
)	O
;	O
if	O
(	O
new	pointer
)	O
{	O
rec_writer_new_common	function
(	O
new	pointer
)	O
;	O
new	pointer
->	O
buf_out	pointer
=	O
rec_buf_new	function
(	O
str	pointer
,	O
str_size	pointer
)	O
;	O
}	O
return	O
new	pointer
;	O
}	O
void	O
rec_writer_destroy	function
(	O
rec_writer_t	pointer
writer	pointer
)	O
{	O
if	O
(	O
writer	pointer
)	O
{	O
if	O
(	O
writer	pointer
->	O
file_out	pointer
)	O
{	O
fflush	function
(	O
writer	pointer
->	O
file_out	pointer
)	O
;	O
}	O
if	O
(	O
writer	pointer
->	O
buf_out	pointer
)	O
{	O
rec_buf_close	function
(	O
writer	pointer
->	O
buf_out	pointer
)	O
;	O
}	O
free	function
(	O
writer	pointer
)	O
;	O
}	O
}	O
bool	bool
rec_write_comment	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
rec_comment_t	pointer
comment	pointer
)	O
{	O
char	O
*	O
line	int
;	O
char	O
*	O
str	pointer
;	O
char	O
*	O
orig_str	pointer
;	O
size_t	long
i	long
;	O
if	O
(	O
writer	pointer
->	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"(comment "	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
str	pointer
=	O
rec_comment_text	function
(	O
comment	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
strlen	function
(	O
str	pointer
)	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
str	pointer
[	O
i	long
]	O
==	O
'\n'	O
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"\\n"	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
str	pointer
[	O
i	long
]	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"\")"	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
bool	bool
first	bool
=	O
true	int
;	O
str	pointer
=	O
strdup	function
(	O
rec_comment_text	function
(	O
comment	pointer
)	O
)	O
;	O
orig_str	pointer
=	O
str	pointer
;	O
line	int
=	O
strsep	function
(	O
&	O
str	pointer
,	O
"\n"	pointer
)	O
;	O
do	O
{	O
if	O
(	O
!	O
first	bool
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'#'	O
)	O
||	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
line	int
)	O
)	O
{	O
return	O
false	int
;	O
}	O
first	bool
=	O
false	int
;	O
}	O
while	O
(	O
(	O
line	int
=	O
strsep	function
(	O
&	O
str	pointer
,	O
"\n"	pointer
)	O
)	O
)	O
;	O
free	function
(	O
orig_str	pointer
)	O
;	O
}	O
return	O
true	int
;	O
}	O
bool	bool
rec_write_field	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
rec_field_t	pointer
field	pointer
)	O
{	O
size_t	long
pos	long
;	O
const	O
char	O
*	O
fname	pointer
;	O
const	O
char	O
*	O
fvalue	pointer
;	O
enum	O
rec_writer_mode_e	enum
mode	enum
=	O
writer	pointer
->	O
mode	enum
;	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"(field "	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
rec_field_char_location_str	function
(	O
field	pointer
)	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
' '	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
(	O
mode	enum
!=	O
REC_WRITER_VALUES	int
)	O
&&	O
(	O
mode	enum
!=	O
REC_WRITER_VALUES_ROW	int
)	O
)	O
{	O
fname	pointer
=	O
rec_field_name	function
(	O
field	pointer
)	O
;	O
if	O
(	O
!	O
rec_write_field_name	function
(	O
writer	pointer
,	O
fname	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
' '	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
fvalue	pointer
=	O
rec_field_value	function
(	O
field	pointer
)	O
;	O
if	O
(	O
(	O
strlen	function
(	O
fvalue	pointer
)	O
>	O
0	int
)	O
&&	O
(	O
mode	enum
==	O
REC_WRITER_NORMAL	int
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
' '	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
for	O
(	O
pos	long
=	O
0	int
;	O
pos	long
<	O
strlen	function
(	O
fvalue	pointer
)	O
;	O
pos	long
++	O
)	O
{	O
if	O
(	O
fvalue	pointer
[	O
pos	long
]	O
==	O
'\n'	O
)	O
{	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"\\n"	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
if	O
(	O
mode	enum
==	O
REC_WRITER_NORMAL	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"\n+ "	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
else	O
if	O
(	O
(	O
(	O
fvalue	pointer
[	O
pos	long
]	O
==	O
'"'	O
)	O
||	O
(	O
fvalue	pointer
[	O
pos	long
]	O
==	O
'\\'	O
)	O
)	O
&&	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
)	O
{	O
if	O
(	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\\'	O
)	O
)	O
||	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
fvalue	pointer
[	O
pos	long
]	O
)	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
fvalue	pointer
[	O
pos	long
]	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
}	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
")"	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
return	O
true	int
;	O
}	O
bool	bool
rec_write_field_name	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
{	O
enum	O
rec_writer_mode_e	enum
mode	enum
=	O
writer	pointer
->	O
mode	enum
;	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
field_name	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'"'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
':'	O
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
return	O
true	int
;	O
}	O
bool	bool
rec_write_record	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
rec_record_t	pointer
record	pointer
)	O
{	O
bool	bool
ret	bool
;	O
rec_mset_iterator_t	struct
iter	struct
;	O
rec_mset_elem_t	pointer
elem	pointer
;	O
char	O
*	O
data	pointer
;	O
size_t	long
num_field	long
,	O
num_elem	long
,	O
num_fields	long
,	O
num_elems	long
;	O
enum	O
rec_writer_mode_e	enum
mode	enum
=	O
writer	pointer
->	O
mode	enum
;	O
ret	bool
=	O
true	int
;	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"(record "	pointer
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
rec_record_char_location_str	function
(	O
record	pointer
)	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
" (\n"	pointer
)	O
)	O
return	O
false	int
;	O
}	O
num_elems	long
=	O
rec_record_num_elems	function
(	O
record	pointer
)	O
;	O
num_fields	long
=	O
rec_record_num_fields	function
(	O
record	pointer
)	O
;	O
num_field	long
=	O
0	int
;	O
num_elem	long
=	O
0	int
;	O
iter	struct
=	O
rec_mset_iterator	function
(	O
rec_record_mset	function
(	O
record	pointer
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	function
(	O
&	O
iter	struct
,	O
MSET_ANY	int
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
data	pointer
,	O
&	O
elem	pointer
)	O
)	O
{	O
if	O
(	O
rec_mset_elem_type	function
(	O
elem	pointer
)	O
==	O
MSET_FIELD	int
)	O
{	O
rec_field_t	pointer
field	pointer
=	O
(	O
rec_field_t	pointer
)	O
data	pointer
;	O
if	O
(	O
!	O
rec_write_field	function
(	O
writer	pointer
,	O
field	pointer
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
if	O
(	O
(	O
mode	enum
==	O
REC_WRITER_VALUES_ROW	int
)	O
&&	O
(	O
num_field	long
!=	O
(	O
num_fields	long
-	O
1	int
)	O
)	O
)	O
{	O
if	O
(	O
mode	enum
==	O
REC_WRITER_VALUES_ROW	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
' '	O
)	O
)	O
return	O
false	int
;	O
}	O
}	O
else	O
if	O
(	O
(	O
writer	pointer
->	O
skip_comments_p	bool
&&	O
(	O
num_field	long
!=	O
(	O
num_fields	long
-	O
1	int
)	O
)	O
)	O
||	O
(	O
!	O
writer	pointer
->	O
skip_comments_p	bool
&&	O
(	O
num_elem	long
!=	O
(	O
num_elems	long
-	O
1	int
)	O
)	O
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
return	O
false	int
;	O
}	O
num_field	long
++	O
;	O
}	O
else	O
if	O
(	O
!	O
writer	pointer
->	O
skip_comments_p	bool
)	O
{	O
rec_comment_t	pointer
comment	pointer
=	O
(	O
rec_comment_t	pointer
)	O
data	pointer
;	O
if	O
(	O
(	O
mode	enum
!=	O
REC_WRITER_VALUES	int
)	O
&&	O
(	O
mode	enum
!=	O
REC_WRITER_VALUES_ROW	int
)	O
)	O
{	O
if	O
(	O
!	O
rec_write_comment	function
(	O
writer	pointer
,	O
comment	pointer
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
if	O
(	O
num_elem	long
!=	O
(	O
num_elems	long
-	O
1	int
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
return	O
false	int
;	O
}	O
}	O
}	O
num_elem	long
++	O
;	O
}	O
rec_mset_iterator_free	function
(	O
&	O
iter	struct
)	O
;	O
if	O
(	O
mode	enum
==	O
REC_WRITER_SEXP	int
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"))"	pointer
)	O
)	O
{	O
return	O
false	int
;	O
}	O
}	O
return	O
ret	bool
;	O
}	O
bool	bool
rec_write_rset	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
rec_rset_t	pointer
rset	pointer
)	O
{	O
bool	bool
ret	bool
;	O
rec_record_t	pointer
descriptor	pointer
;	O
bool	bool
wrote_descriptor	bool
;	O
size_t	long
position	long
;	O
size_t	long
descriptor_pos	long
;	O
rec_mset_iterator_t	struct
iter	struct
;	O
rec_mset_elem_t	pointer
elem	pointer
;	O
void	O
*	O
data	pointer
;	O
enum	O
rec_writer_mode_e	enum
mode	enum
=	O
writer	pointer
->	O
mode	enum
;	O
ret	bool
=	O
true	int
;	O
wrote_descriptor	bool
=	O
false	int
;	O
position	long
=	O
0	int
;	O
descriptor_pos	long
=	O
rec_rset_descriptor_pos	function
(	O
rset	pointer
)	O
;	O
descriptor	pointer
=	O
rec_rset_descriptor	function
(	O
rset	pointer
)	O
;	O
if	O
(	O
(	O
rec_rset_num_elems	function
(	O
rset	pointer
)	O
==	O
0	int
)	O
&&	O
descriptor	pointer
)	O
{	O
rec_write_record	function
(	O
writer	pointer
,	O
rec_rset_descriptor	function
(	O
rset	pointer
)	O
)	O
;	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
;	O
return	O
true	int
;	O
}	O
iter	struct
=	O
rec_mset_iterator	function
(	O
rec_rset_mset	function
(	O
rset	pointer
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	function
(	O
&	O
iter	struct
,	O
MSET_ANY	int
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
data	pointer
,	O
&	O
elem	pointer
)	O
)	O
{	O
if	O
(	O
position	long
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
if	O
(	O
position	long
==	O
descriptor_pos	long
)	O
{	O
if	O
(	O
descriptor	pointer
&&	O
(	O
!	O
(	O
wrote_descriptor	bool
=	O
rec_write_record	function
(	O
writer	pointer
,	O
rec_rset_descriptor	function
(	O
rset	pointer
)	O
)	O
)	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
else	O
{	O
if	O
(	O
wrote_descriptor	bool
)	O
{	O
if	O
(	O
!	O
rec_writer_puts	function
(	O
writer	pointer
,	O
"\n\n"	pointer
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
rec_mset_elem_type	function
(	O
elem	pointer
)	O
==	O
MSET_RECORD	int
)	O
{	O
ret	bool
=	O
rec_write_record	function
(	O
writer	pointer
,	O
(	O
rec_record_t	pointer
)	O
data	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
writer	pointer
->	O
skip_comments_p	bool
)	O
{	O
ret	bool
=	O
rec_write_comment	function
(	O
writer	pointer
,	O
(	O
rec_comment_t	pointer
)	O
data	pointer
)	O
;	O
}	O
if	O
(	O
!	O
writer	pointer
->	O
collapse_p	bool
||	O
(	O
position	long
==	O
(	O
rec_rset_num_elems	function
(	O
rset	pointer
)	O
-	O
1	int
)	O
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
if	O
(	O
!	O
ret	bool
)	O
{	O
break	O
;	O
}	O
position	long
++	O
;	O
}	O
rec_mset_iterator_free	function
(	O
&	O
iter	struct
)	O
;	O
if	O
(	O
!	O
wrote_descriptor	bool
&&	O
(	O
descriptor_pos	long
>=	O
rec_rset_num_elems	function
(	O
rset	pointer
)	O
)	O
&&	O
rec_rset_descriptor	function
(	O
rset	pointer
)	O
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_write_record	function
(	O
writer	pointer
,	O
rec_rset_descriptor	function
(	O
rset	pointer
)	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
}	O
}	O
return	O
ret	bool
;	O
}	O
bool	bool
rec_write_db	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
rec_db_t	pointer
db	pointer
)	O
{	O
bool	bool
ret	bool
;	O
int	O
i	long
;	O
ret	bool
=	O
true	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rec_db_size	function
(	O
db	pointer
)	O
;	O
i	long
++	O
)	O
{	O
rec_rset_t	pointer
rset	pointer
=	O
rec_db_get_rset	function
(	O
db	pointer
,	O
i	long
)	O
;	O
if	O
(	O
i	long
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
rec_writer_putc	function
(	O
writer	pointer
,	O
'\n'	O
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
rec_write_rset	function
(	O
writer	pointer
,	O
rset	pointer
)	O
)	O
{	O
ret	bool
=	O
false	int
;	O
break	O
;	O
}	O
}	O
return	O
ret	bool
;	O
}	O
char	O
*	O
rec_write_field_str	function
(	O
rec_field_t	pointer
field	pointer
,	O
rec_writer_mode_t	enum
mode	enum
)	O
{	O
rec_writer_t	pointer
writer	pointer
;	O
char	O
*	O
result	pointer
;	O
size_t	long
result_size	long
;	O
result	pointer
=	O
NULL	O
;	O
writer	pointer
=	O
rec_writer_new_str	function
(	O
&	O
result	pointer
,	O
&	O
result_size	long
)	O
;	O
if	O
(	O
writer	pointer
)	O
{	O
rec_writer_set_mode	function
(	O
writer	pointer
,	O
mode	enum
)	O
;	O
rec_write_field	function
(	O
writer	pointer
,	O
field	pointer
)	O
;	O
rec_writer_destroy	function
(	O
writer	pointer
)	O
;	O
}	O
return	O
result	pointer
;	O
}	O
char	O
*	O
rec_write_field_name_str	function
(	O
const	O
char	O
*	O
field_name	pointer
,	O
rec_writer_mode_t	enum
mode	enum
)	O
{	O
rec_writer_t	pointer
writer	pointer
;	O
char	O
*	O
result	pointer
;	O
size_t	long
result_size	long
;	O
result	pointer
=	O
NULL	O
;	O
writer	pointer
=	O
rec_writer_new_str	function
(	O
&	O
result	pointer
,	O
&	O
result_size	long
)	O
;	O
if	O
(	O
writer	pointer
)	O
{	O
rec_writer_set_mode	function
(	O
writer	pointer
,	O
mode	enum
)	O
;	O
rec_write_field_name	function
(	O
writer	pointer
,	O
field_name	pointer
)	O
;	O
rec_writer_destroy	function
(	O
writer	pointer
)	O
;	O
}	O
return	O
result	pointer
;	O
}	O
char	O
*	O
rec_write_comment_str	function
(	O
rec_comment_t	pointer
comment	pointer
,	O
rec_writer_mode_t	enum
mode	enum
)	O
{	O
rec_writer_t	pointer
writer	pointer
;	O
char	O
*	O
result	pointer
;	O
size_t	long
result_size	long
;	O
result	pointer
=	O
NULL	O
;	O
writer	pointer
=	O
rec_writer_new_str	function
(	O
&	O
result	pointer
,	O
&	O
result_size	long
)	O
;	O
if	O
(	O
writer	pointer
)	O
{	O
rec_writer_set_mode	function
(	O
writer	pointer
,	O
mode	enum
)	O
;	O
rec_write_comment	function
(	O
writer	pointer
,	O
comment	pointer
)	O
;	O
rec_writer_destroy	function
(	O
writer	pointer
)	O
;	O
}	O
return	O
result	pointer
;	O
}	O
bool	bool
rec_write_string	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
const	O
char	O
*	O
str	pointer
)	O
{	O
return	O
rec_writer_puts	function
(	O
writer	pointer
,	O
str	pointer
)	O
;	O
}	O
void	O
rec_writer_set_collapse	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
bool	bool
value	pointer
)	O
{	O
writer	pointer
->	O
collapse_p	bool
=	O
value	pointer
;	O
}	O
void	O
rec_writer_set_skip_comments	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
bool	bool
value	pointer
)	O
{	O
writer	pointer
->	O
skip_comments_p	bool
=	O
value	pointer
;	O
}	O
void	O
rec_writer_set_mode	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
enum	O
rec_writer_mode_e	enum
mode	enum
)	O
{	O
writer	pointer
->	O
mode	enum
=	O
mode	enum
;	O
}	O
static	O
bool	bool
rec_writer_putc	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
char	O
c	int
)	O
{	O
bool	bool
ret	bool
;	O
ret	bool
=	O
false	int
;	O
if	O
(	O
writer	pointer
->	O
file_out	pointer
)	O
{	O
ret	bool
=	O
(	O
fputc	function
(	O
c	int
,	O
writer	pointer
->	O
file_out	pointer
)	O
!=	O
EOF	O
)	O
;	O
}	O
if	O
(	O
writer	pointer
->	O
buf_out	pointer
)	O
{	O
ret	bool
=	O
(	O
rec_buf_putc	function
(	O
c	int
,	O
writer	pointer
->	O
buf_out	pointer
)	O
!=	O
EOF	O
)	O
;	O
}	O
return	O
ret	bool
;	O
}	O
static	O
bool	bool
rec_writer_puts	function
(	O
rec_writer_t	pointer
writer	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
bool	bool
ret	bool
;	O
ret	bool
=	O
false	int
;	O
if	O
(	O
writer	pointer
->	O
file_out	pointer
)	O
{	O
ret	bool
=	O
(	O
fputs	function
(	O
s	pointer
,	O
writer	pointer
->	O
file_out	pointer
)	O
!=	O
EOF	O
)	O
;	O
}	O
if	O
(	O
writer	pointer
->	O
buf_out	pointer
)	O
{	O
ret	bool
=	O
(	O
rec_buf_puts	function
(	O
s	pointer
,	O
writer	pointer
->	O
buf_out	pointer
)	O
!=	O
EOF	O
)	O
;	O
}	O
return	O
ret	bool
;	O
}	O