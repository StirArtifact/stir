static	O
void	O
usage	function
(	O
const	O
char	O
*	O
arg	struct
,	O
FILE	struct
*	O
fp	*
,	O
int	O
code	int
)	O
{	O
fprintf	function
(	O
fp	*
,	O
"usage: %s [-h] [-locus] [-delim=char] [-reduce] file\n"	*
,	O
arg	struct
)	O
;	O
exit	function
(	O
code	int
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*
)	O
{	O
char	O
*	O
progname	*
=	O
argv	*
[	O
0	int
]	O
;	O
char	O
*	O
file	*
=	O
NULL	O
;	O
struct	O
grecs_node	struct
*	O
tree	*
,	O
*	O
node	*
;	O
int	O
flags	int
=	O
GRECS_NODE_FLAG_QUOTE	int
|	O
GRECS_NODE_FLAG_PATH	int
;	O
int	O
reduce	int
=	O
0	int
;	O
while	O
(	O
--	O
argc	int
)	O
{	O
char	O
*	O
arg	struct
=	O
*	O
++	O
argv	*
;	O
if	O
(	O
strcmp	function
(	O
arg	struct
,	O
"-locus"	*
)	O
==	O
0	int
)	O
flags	int
|=	O
GRECS_NODE_FLAG_LOCUS	int
;	O
else	O
if	O
(	O
strncmp	function
(	O
arg	struct
,	O
"-delim="	*
,	O
7	int
)	O
==	O
0	int
)	O
flags	int
|=	O
arg	struct
[	O
7	int
]	O
;	O
else	O
if	O
(	O
strcmp	function
(	O
arg	struct
,	O
"-reduce"	*
)	O
==	O
0	int
)	O
reduce	int
=	O
1	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
arg	struct
,	O
"-h"	*
)	O
==	O
0	int
)	O
usage	function
(	O
progname	*
,	O
stdout	*
,	O
0	int
)	O
;	O
else	O
if	O
(	O
arg	struct
[	O
0	int
]	O
==	O
'-'	O
)	O
usage	function
(	O
progname	*
,	O
stderr	*
,	O
1	int
)	O
;	O
else	O
file	*
=	O
arg	struct
;	O
}	O
if	O
(	O
!	O
file	*
||	O
argc	int
)	O
usage	function
(	O
progname	*
,	O
stderr	*
,	O
1	int
)	O
;	O
tree	*
=	O
grecs_parse	function
(	O
file	*
)	O
;	O
if	O
(	O
!	O
tree	*
)	O
exit	function
(	O
1	int
)	O
;	O
if	O
(	O
reduce	int
)	O
grecs_tree_reduce	function
(	O
tree	*
,	O
NULL	O
,	O
0	int
)	O
;	O
for	O
(	O
node	*
=	O
grecs_tree_first_node	function
(	O
tree	*
)	O
;	O
node	*
;	O
node	*
=	O
grecs_next_node	function
(	O
node	*
)	O
)	O
{	O
grecs_print_node	function
(	O
node	*
,	O
flags	int
,	O
stdout	*
)	O
;	O
fputc	function
(	O
'\n'	O
,	O
stdout	*
)	O
;	O
}	O
grecs_tree_free	function
(	O
tree	*
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O