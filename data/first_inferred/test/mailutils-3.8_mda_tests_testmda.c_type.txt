static	O
void	O
set_stderr	function
(	O
struct	O
mu_parseopt	struct
*	O
po	*
,	O
struct	O
mu_option	struct
*	O
opt	*
,	O
char	O
const	O
*	O
arg	*
)	O
{	O
mu_log_syslog	int
=	O
0	int
;	O
}	O
static	O
struct	O
mu_option	struct
mda_options	array
[	O
]	O
=	O
{	O
MU_OPTION_GROUP	function
(	O
N_	O
(	O
"General options"	*
)	O
)	O
,	O
{	O
"stderr"	*
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"log to standard error"	*
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
set_stderr	*
}	O
,	O
MU_OPTION_END	O
}	O
,	O
*	O
options	array
[	O
]	O
=	O
{	O
mda_options	*
,	O
NULL	O
}	O
;	O
static	O
char	O
*	O
capa	*
[	O
]	O
=	O
{	O
"auth"	*
,	O
"debug"	*
,	O
"logging"	*
,	O
"mailbox"	*
,	O
"locking"	*
,	O
"mailer"	*
,	O
"sieve"	*
,	O
"deliver"	*
,	O
"forward"	*
,	O
"quota"	*
,	O
"script"	*
,	O
NULL	O
}	O
;	O
static	O
int	O
cb_stderr	function
(	O
void	O
*	O
data	*
,	O
mu_config_value_t	struct
*	O
val	*
)	O
{	O
int	O
res	int
;	O
if	O
(	O
mu_cfg_assert_value_type	function
(	O
val	int
,	O
MU_CFG_STRING	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
mu_str_to_c	function
(	O
val	int
->	O
v	union
.	O
string	*
,	O
mu_c_bool	int
,	O
&	O
res	int
,	O
NULL	O
)	O
)	O
mu_error	function
(	O
_	O
(	O
"not a boolean"	*
)	O
)	O
;	O
else	O
mu_log_syslog	int
=	O
!	O
res	*
;	O
return	O
0	int
;	O
}	O
struct	O
mu_cfg_param	struct
mda_cfg_param	array
[	O
]	O
=	O
{	O
{	O
"stderr"	*
,	O
mu_cfg_callback	int
,	O
NULL	O
,	O
0	int
,	O
cb_stderr	*
,	O
N_	O
(	O
"Log to stderr instead of syslog."	*
)	O
,	O
N_	O
(	O
"arg: bool"	*
)	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
struct	O
mu_cli_setup	struct
cli	struct
=	O
{	O
options	array
,	O
mda_cfg_param	*
,	O
N_	O
(	O
"mda -- the GNU local mail delivery agent."	*
)	O
,	O
N_	O
(	O
"[recipient...]"	*
)	O
,	O
}	O
;	O
static	O
void	O
version_hook	function
(	O
struct	O
mu_parseopt	struct
*	O
po	*
,	O
mu_stream_t	*
stream	*
)	O
{	O
mu_version_hook	function
(	O
po	*
,	O
stream	*
)	O
;	O
mu_stream_printf	function
(	O
stream	*
,	O
"%s\n"	*
,	O
_	O
(	O
"THIS BINARY IS COMPILED ONLY FOR TESTING MAILUTILS."	*
"  DON'T USE IT IN PRODUCTION!"	*
)	O
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*
)	O
{	O
struct	O
mu_parseopt	struct
pohint	*
;	O
struct	O
mu_cfg_parse_hints	struct
cfhint	struct
;	O
umask	function
(	O
0077	int
)	O
;	O
MU_APP_INIT_NLS	O
(	O
)	O
;	O
mu_locker_set_default_flags	function
(	O
MU_LOCKER_PID	int
|	O
MU_LOCKER_RETRY	int
,	O
mu_locker_assign	int
)	O
;	O
mu_locker_set_default_retry_timeout	function
(	O
1	int
)	O
;	O
mu_locker_set_default_retry_count	function
(	O
300	int
)	O
;	O
MU_AUTH_REGISTER_ALL_MODULES	O
(	O
)	O
;	O
mu_register_all_formats	O
(	O
)	O
;	O
mu_registrar_record	function
(	O
mu_smtp_record	int
)	O
;	O
mda_filter_cfg_init	function
(	O
)	O
;	O
mu_log_syslog	int
=	O
1	int
;	O
mu_log_print_severity	int
=	O
1	int
;	O
mda_cli_capa_init	function
(	O
)	O
;	O
pohint	struct
.	O
po_flags	int
=	O
0	int
;	O
pohint	struct
.	O
po_package_name	*
=	O
PACKAGE_NAME	*
;	O
pohint	struct
.	O
po_flags	int
|=	O
MU_PARSEOPT_PACKAGE_NAME	int
;	O
pohint	struct
.	O
po_package_url	int
=	O
PACKAGE_URL	int
;	O
pohint	struct
.	O
po_flags	int
|=	O
MU_PARSEOPT_PACKAGE_URL	int
;	O
pohint	struct
.	O
po_bug_address	*
=	O
PACKAGE_BUGREPORT	*
;	O
pohint	struct
.	O
po_flags	int
|=	O
MU_PARSEOPT_BUG_ADDRESS	int
;	O
pohint	struct
.	O
po_extra_info	int
=	O
mu_general_help_text	int
;	O
pohint	struct
.	O
po_flags	int
|=	O
MU_PARSEOPT_EXTRA_INFO	int
;	O
pohint	struct
.	O
po_version_hook	int
=	O
version_hook	int
;	O
pohint	struct
.	O
po_flags	int
|=	O
MU_PARSEOPT_VERSION_HOOK	int
;	O
pohint	struct
.	O
po_negation	int
=	O
"no-"	int
;	O
pohint	struct
.	O
po_flags	int
|=	O
MU_PARSEOPT_NEGATION	int
;	O
cfhint	struct
.	O
site_file	int
=	O
TESTSUITE_CONFIG_FILE	int
;	O
mu_log_syslog	int
=	O
0	int
;	O
cfhint	struct
.	O
flags	int
=	O
MU_CFHINT_SITE_FILE	int
|	O
MU_CFHINT_NO_CONFIG_OVERRIDE	int
;	O
mu_cli_ext	function
(	O
argc	int
,	O
argv	*
,	O
&	O
cli	struct
,	O
&	O
pohint	struct
,	O
&	O
cfhint	O
,	O
capa	*
,	O
NULL	O
,	O
&	O
argc	int
,	O
&	O
argv	*
)	O
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"recipients not given"	*
)	O
)	O
;	O
return	O
EX_USAGE	int
;	O
}	O
mu_stdstream_strerr_setup	function
(	O
mu_log_syslog	int
?	O
MU_STRERR_SYSLOG	int
:	O
MU_STRERR_STDERR	*
)	O
;	O
return	O
mda_run_delivery	function
(	O
mda_deliver_to_user	*
,	O
argc	int
,	O
argv	*
)	O
;	O
}	O