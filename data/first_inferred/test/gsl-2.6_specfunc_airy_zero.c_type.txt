static	O
const	O
double	O
zero_Ai	array
[	O
]	O
=	O
{	O
0	int
,	O
-	O
2.3381074104597670385	int
,	O
-	O
4.087949444130970617	int
,	O
-	O
5.520559828095551059	int
,	O
-	O
6.786708090071758999	int
,	O
-	O
7.944133587120853123	int
,	O
-	O
9.022650853340980380	int
,	O
-	O
10.04017434155808593	int
,	O
-	O
11.00852430373326289	int
,	O
-	O
11.93601556323626252	int
,	O
-	O
12.82877675286575720	int
,	O
-	O
13.69148903521071793	int
,	O
-	O
14.52782995177533498	int
,	O
-	O
15.34075513597799686	int
,	O
-	O
16.13268515694577144	int
,	O
-	O
16.90563399742994263	int
,	O
-	O
17.661300105697057509	int
,	O
-	O
18.401132599207115416	int
,	O
-	O
19.126380474246952144	int
,	O
-	O
19.838129891721499701	int
,	O
-	O
20.537332907677566360	int
,	O
-	O
21.224829943642096955	int
,	O
-	O
21.901367595585130707	int
,	O
-	O
22.567612917496502831	int
,	O
-	O
23.224165001121681061	int
,	O
-	O
23.871564455535918567	int
,	O
-	O
24.510301236589677490	int
,	O
-	O
25.140821166148963748	int
,	O
-	O
25.763531400982756459	int
,	O
-	O
26.378805052137232374	int
,	O
-	O
26.986985111606367686	int
,	O
-	O
27.588387809882444812	int
,	O
-	O
28.183305502632644923	int
,	O
-	O
28.772009165237435382	int
,	O
-	O
29.354750558766287963	int
,	O
-	O
29.931764119086555913	int
,	O
-	O
30.503268611418505287	int
,	O
-	O
31.069468585183755604	int
,	O
-	O
31.63055565801265934	int
,	O
-	O
32.18670965295205069	int
,	O
-	O
32.73809960900026913	int
,	O
-	O
33.28488468190140188	int
,	O
-	O
33.82721494950865194	int
,	O
-	O
34.36523213386365906	int
,	O
-	O
34.89907025034531210	int
,	O
-	O
35.42885619274788846	int
,	O
-	O
35.95471026189862926	int
,	O
-	O
36.47674664437480896	int
,	O
-	O
36.99507384699450161	int
,	O
-	O
37.50979509200501613	int
,	O
-	O
38.02100867725525443	int
,	O
-	O
38.52880830509424882	int
,	O
-	O
39.03328338327251391	int
,	O
-	O
39.53451930072301805	int
,	O
-	O
40.03259768075417603	int
,	O
-	O
40.52759661388971821	int
,	O
-	O
41.01959087233248966	int
,	O
-	O
41.50865210780525018	int
,	O
-	O
41.99484903432643004	int
,	O
-	O
42.47824759730839188	int
,	O
-	O
42.95891113021656009	int
,	O
-	O
43.43690049989685412	int
,	O
-	O
43.91227424156370168	int
,	O
-	O
44.38508868433939023	int
,	O
-	O
44.85539806814583243	int
,	O
-	O
45.32325465267043011	int
,	O
-	O
45.78870881905730086	int
,	O
-	O
46.25180916491254629	int
,	O
-	O
46.71260259315651633	int
,	O
-	O
47.17113439520631705	int
,	O
-	O
47.62744832892739292	int
,	O
-	O
48.08158669175325711	int
,	O
-	O
48.53359038933679845	int
,	O
-	O
48.98349900006458366	int
,	O
-	O
49.43135083573678341	int
,	O
-	O
49.87718299868941729	int
,	O
-	O
50.32103143561221860	int
,	O
-	O
50.76293098829428522	int
,	O
-	O
51.20291544151056412	int
,	O
-	O
51.64101756824489758	int
,	O
-	O
52.07726917242964943	int
,	O
-	O
52.51170112936766183	int
,	O
-	O
52.94434342398931824	int
,	O
-	O
53.37522518708567514	int
,	O
-	O
53.80437472964785717	int
,	O
-	O
54.23181957543308298	int
,	O
-	O
54.65758649186871111	int
,	O
-	O
55.08170151939748312	int
,	O
-	O
55.50418999935962251	int
,	O
-	O
55.92507660050055598	int
,	O
-	O
56.34438534418670066	int
,	O
-	O
56.76213962840595327	int
,	O
-	O
57.17836225062417808	int
,	O
-	O
57.59307542956407782	int
,	O
-	O
58.00630082596830627	int
,	O
-	O
58.41805956240450934	int
,	O
-	O
58.82837224216613231	int
,	O
-	O
59.23725896731927534	int
,	O
-	O
59.64473935594259360	int
,	O
-	O
60.05083255860419805	int
,	O
-	O
60.45555727411669871	int
}	O
;	O
static	O
const	O
size_t	long
size_zero_Ai	long
=	O
sizeof	O
(	O
zero_Ai	array
)	O
/	O
sizeof	O
(	O
double	O
)	O
;	O
static	O
const	O
double	O
zero_Bi	array
[	O
]	O
=	O
{	O
0	int
,	O
-	O
1.173713222709127925	int
,	O
-	O
3.271093302836352716	int
,	O
-	O
4.830737841662015933	int
,	O
-	O
6.169852128310251260	int
,	O
-	O
7.376762079367763714	int
,	O
-	O
8.491948846509388013	int
,	O
-	O
9.538194379346238887	int
,	O
-	O
10.52991350670535792	int
,	O
-	O
11.47695355127877944	int
,	O
-	O
12.38641713858273875	int
,	O
-	O
13.26363952294180555	int
,	O
-	O
14.11275680906865779	int
,	O
-	O
14.93705741215416404	int
,	O
-	O
15.739210351190482771	int
,	O
-	O
16.521419550634379054	int
,	O
-	O
17.285531624581242533	int
,	O
-	O
18.033113287225001572	int
,	O
-	O
18.765508284480081041	int
,	O
-	O
19.483880132989234014	int
,	O
-	O
20.189244785396202420	int
,	O
-	O
20.882495994193175768	int
,	O
-	O
21.564425284712977653	int
,	O
-	O
22.235737881803385167	int
,	O
-	O
22.897065554219793474	int
,	O
-	O
23.548977079642448269	int
,	O
-	O
24.191986850649000086	int
,	O
-	O
24.826562012152892172	int
,	O
-	O
25.453128427085131994	int
,	O
-	O
26.072075698466804494	int
,	O
-	O
26.683761425120990449	int
,	O
-	O
27.288514830076298204	int
,	O
-	O
27.886639871735962459	int
,	O
-	O
28.478417925678661737	int
,	O
-	O
29.064110107777650305	int
,	O
-	O
29.643959295918396591	int
,	O
-	O
30.218191897047274645	int
,	O
-	O
30.787019397921766297	int
,	O
-	O
31.350639731255585371	int
,	O
-	O
31.90923848358456965	int
,	O
-	O
32.46298996683685318	int
,	O
-	O
33.01205817205683814	int
,	O
-	O
33.55659762084006113	int
,	O
-	O
34.09675412765602851	int
,	O
-	O
34.63266548426775468	int
,	O
-	O
35.16446207582101720	int
,	O
-	O
35.69226743681080479	int
,	O
-	O
36.21619875398748222	int
,	O
-	O
36.73636732230120657	int
,	O
-	O
37.25287895916828697	int
,	O
-	O
37.76583438165180116	int
,	O
-	O
38.27532955056003997	int
,	O
-	O
38.78145598496327279	int
,	O
-	O
39.28430105019802461	int
,	O
-	O
39.78394822205711298	int
,	O
-	O
40.28047732954369150	int
,	O
-	O
40.77396477829068148	int
,	O
-	O
41.26448375650675678	int
,	O
-	O
41.75210442510106287	int
,	O
-	O
42.23689409345656643	int
,	O
-	O
42.71891738216253539	int
,	O
-	O
43.19823637387693118	int
,	O
-	O
43.67491075336673948	int
,	O
-	O
44.14899793766617113	int
,	O
-	O
44.62055319719727274	int
,	O
-	O
45.08962976861312825	int
,	O
-	O
45.55627896004907928	int
,	O
-	O
46.02055024940102076	int
,	O
-	O
46.48249137619078661	int
,	O
-	O
46.94214842752602207	int
,	O
-	O
47.39956591861496210	int
,	O
-	O
47.85478686825452176	int
,	O
-	O
48.30785286967246692	int
,	O
-	O
48.75880415707066192	int
,	O
-	O
49.20767966818603897	int
,	O
-	O
49.65451710315861501	int
,	O
-	O
50.09935297997125482	int
,	O
-	O
50.54222268670364757	int
,	O
-	O
50.98316053082286586	int
,	O
-	O
51.42219978571468262	int
,	O
-	O
51.85937273464332870	int
,	O
-	O
52.29471071231240525	int
,	O
-	O
52.72824414418606069	int
,	O
-	O
53.16000258371716397	int
,	O
-	O
53.59001474761792882	int
,	O
-	O
54.01830854929815828	int
,	O
-	O
54.44491113058688729	int
,	O
-	O
54.86984889184461534	int
,	O
-	O
55.29314752056546491	int
,	O
-	O
55.71483201856140365	int
,	O
-	O
56.13492672781406761	int
,	O
-	O
56.55345535507366411	int
,	O
-	O
56.97044099527886475	int
,	O
-	O
57.38590615386647834	int
,	O
-	O
57.79987276803497897	int
,	O
-	O
58.21236222702161974	int
,	O
-	O
58.62339539144885603	int
,	O
-	O
59.03299261179210306	int
,	O
-	O
59.44117374601743460	int
,	O
-	O
59.84795817643466996	int
,	O
-	O
60.25336482580837088	int
}	O
;	O
static	O
const	O
size_t	long
size_zero_Bi	long
=	O
sizeof	O
(	O
zero_Bi	array
)	O
/	O
sizeof	O
(	O
double	O
)	O
;	O
static	O
const	O
double	O
zero_Aip	array
[	O
]	O
=	O
{	O
0	int
,	O
-	O
1.018792971647471089	int
,	O
-	O
3.248197582179836738	int
,	O
-	O
4.820099211178735639	int
,	O
-	O
6.163307355639486822	int
,	O
-	O
7.372177255047770177	int
,	O
-	O
8.488486734019722133	int
,	O
-	O
9.535449052433547471	int
,	O
-	O
10.52766039695740728	int
,	O
-	O
11.47505663348024529	int
,	O
-	O
12.384788371845747325	int
,	O
-	O
13.262218961665210382	int
,	O
-	O
14.111501970462995282	int
,	O
-	O
14.935937196720517467	int
,	O
-	O
15.738201373692538303	int
,	O
-	O
16.520503825433793542	int
,	O
-	O
17.284695050216437357	int
,	O
-	O
18.032344622504393395	int
,	O
-	O
18.764798437665954740	int
,	O
-	O
19.483221656567231178	int
,	O
-	O
20.188631509463373154	int
,	O
-	O
20.881922755516737701	int
,	O
-	O
21.563887723198974958	int
,	O
-	O
22.235232285348913331	int
,	O
-	O
22.896588738874619001	int
,	O
-	O
23.548526295928801574	int
,	O
-	O
24.191559709526353841	int
,	O
-	O
24.826156425921155001	int
,	O
-	O
25.452742561777649948	int
,	O
-	O
26.071707935173912515	int
,	O
-	O
26.683410328322449767	int
,	O
-	O
27.288179121523985029	int
,	O
-	O
27.886318408768461192	int
,	O
-	O
28.478109683102278108	int
,	O
-	O
29.063814162638199090	int
,	O
-	O
29.643674814632015921	int
,	O
-	O
30.217918124468574603	int
,	O
-	O
30.786755648012502519	int
,	O
-	O
31.350385379083034671	int
,	O
-	O
31.90899295843046320	int
,	O
-	O
32.46275274623847982	int
,	O
-	O
33.01182877663428709	int
,	O
-	O
33.55637560978942190	int
,	O
-	O
34.09653909480913771	int
,	O
-	O
34.63245705463586589	int
,	O
-	O
35.16425990255340758	int
,	O
-	O
35.69207119851046870	int
,	O
-	O
36.21600815233519918	int
,	O
-	O
36.73618207994680321	int
,	O
-	O
37.25269881785414827	int
,	O
-	O
37.76565910053887108	int
,	O
-	O
38.27515890473087933	int
,	O
-	O
38.78128976408036876	int
,	O
-	O
39.28413905729859644	int
,	O
-	O
39.78379027246823278	int
,	O
-	O
40.28032324990371935	int
,	O
-	O
40.77381440566486637	int
,	O
-	O
41.26433693758643383	int
,	O
-	O
41.75196101547722703	int
,	O
-	O
42.23675395695976012	int
,	O
-	O
42.71878039026198233	int
,	O
-	O
43.19810240513270670	int
,	O
-	O
43.67477969292950869	int
,	O
-	O
44.14886967681966886	int
,	O
-	O
44.62042763293925724	int
,	O
-	O
45.08950680327102630	int
,	O
-	O
45.55615850092696446	int
,	O
-	O
46.02043220845493728	int
,	O
-	O
46.48237566972975615	int
,	O
-	O
46.94203497593635633	int
,	O
-	O
47.39945464610575493	int
,	O
-	O
47.85467770262241617	int
,	O
-	O
48.30774574208398774	int
,	O
-	O
48.75869900186057804	int
,	O
-	O
49.20757642267037247	int
,	O
-	O
49.65441570746105074	int
,	O
-	O
50.09925337686182515	int
,	O
-	O
50.54212482144867502	int
,	O
-	O
50.98306435104524282	int
,	O
-	O
51.42210524126365311	int
,	O
-	O
51.85927977747301469	int
,	O
-	O
52.29461929636838876	int
,	O
-	O
52.72815422529939506	int
,	O
-	O
53.15991411950524351	int
,	O
-	O
53.58992769739169611	int
,	O
-	O
54.01822287397517367	int
,	O
-	O
54.44482679260982599	int
,	O
-	O
54.86976585510479430	int
,	O
-	O
55.29306575033103518	int
,	O
-	O
55.71475148140987392	int
,	O
-	O
56.13484739156885235	int
,	O
-	O
56.55337718874437424	int
,	O
-	O
56.97036396900508167	int
,	O
-	O
57.38583023886477265	int
,	O
-	O
57.79979793654895377	int
,	O
-	O
58.21228845227477578	int
,	O
-	O
58.62332264760009139	int
,	O
-	O
59.03292087389367419	int
,	O
-	O
59.44110298997521892	int
,	O
-	O
59.84788837897058171	int
,	O
-	O
60.25329596442479317	int
}	O
;	O
static	O
const	O
size_t	long
size_zero_Aip	long
=	O
sizeof	O
(	O
zero_Aip	array
)	O
/	O
sizeof	O
(	O
double	O
)	O
;	O
static	O
const	O
double	O
zero_Bip	array
[	O
]	O
=	O
{	O
0	int
,	O
-	O
2.294439682614123247	int
,	O
-	O
4.073155089071828216	int
,	O
-	O
5.512395729663599496	int
,	O
-	O
6.781294445990305390	int
,	O
-	O
7.940178689168578927	int
,	O
-	O
9.019583358794239067	int
,	O
-	O
10.037696334908545802	int
,	O
-	O
11.006462667712289940	int
,	O
-	O
11.934261645014844663	int
,	O
-	O
12.827258309177217640	int
,	O
-	O
13.690155826835049101	int
,	O
-	O
14.526645763485711410	int
,	O
-	O
15.339693082242404109	int
,	O
-	O
16.131724782385900578	int
,	O
-	O
16.904759411889649958	int
,	O
-	O
17.660498743114976102	int
,	O
-	O
18.400394367181703280	int
,	O
-	O
19.125697156412638066	int
,	O
-	O
19.837494718415910503	int
,	O
-	O
20.536740241453273980	int
,	O
-	O
21.224275044889266569	int
,	O
-	O
21.900846445139208281	int
,	O
-	O
22.567122080497200470	int
,	O
-	O
23.223701521208962116	int
,	O
-	O
23.871125771677973595	int
,	O
-	O
24.509885117016242729	int
,	O
-	O
25.140425655367878908	int
,	O
-	O
25.763154776913454319	int
,	O
-	O
26.378445791146615697	int
,	O
-	O
26.986641859775034987	int
,	O
-	O
27.588059359225600573	int
,	O
-	O
28.182990771292975456	int
,	O
-	O
28.771707180886056250	int
,	O
-	O
29.354460444612957224	int
,	O
-	O
29.931485082026055160	int
,	O
-	O
30.502999931936645516	int
,	O
-	O
31.069209608721234058	int
,	O
-	O
31.63030578754333679	int
,	O
-	O
32.18646834257807369	int
,	O
-	O
32.73786635840274752	int
,	O
-	O
33.28465903151424981	int
,	O
-	O
33.82699647630635587	int
,	O
-	O
34.36502044767239631	int
,	O
-	O
34.89886499060196419	int
,	O
-	O
35.42865702564380962	int
,	O
-	O
35.95451687785511190	int
,	O
-	O
36.47655875580547918	int
,	O
-	O
36.99489118631672770	int
,	O
-	O
37.50961740986809593	int
,	O
-	O
38.02083574095788210	int
}	O
;	O
static	O
const	O
size_t	long
size_zero_Bip	long
=	O
sizeof	O
(	O
zero_Bip	array
)	O
/	O
sizeof	O
(	O
double	O
)	O
;	O
static	O
double	O
zero_f	function
(	O
double	O
z	double
)	O
{	O
const	O
double	O
pre	double
=	O
pow	function
(	O
z	double
,	O
2.0	int
/	O
3.0	int
)	O
;	O
const	O
double	O
zi2	double
=	O
1.0	int
/	O
(	O
z	double
*	O
z	double
)	O
;	O
const	O
double	O
zi4	double
=	O
zi2	double
*	O
zi2	double
;	O
const	O
double	O
t1	double
=	O
5.0	int
/	O
48.0	int
*	O
zi2	double
;	O
const	O
double	O
t2	double
=	O
-	O
5.0	int
/	O
36.0	int
*	O
zi4	double
;	O
const	O
double	O
t3	double
=	O
77125.0	int
/	O
82944.0	int
*	O
zi4	double
*	O
zi2	double
;	O
const	O
double	O
t4	double
=	O
-	O
108056875.0	int
/	O
6967296.0	int
*	O
zi4	double
*	O
zi4	double
;	O
return	O
pre	double
*	O
(	O
1.0	int
+	O
t1	double
+	O
t2	double
+	O
t3	double
+	O
t4	double
)	O
;	O
}	O
static	O
double	O
zero_g	function
(	O
double	O
z	double
)	O
{	O
const	O
double	O
pre	double
=	O
pow	function
(	O
z	double
,	O
2.0	int
/	O
3.0	int
)	O
;	O
const	O
double	O
zi2	double
=	O
1.0	int
/	O
(	O
z	double
*	O
z	double
)	O
;	O
const	O
double	O
zi4	double
=	O
zi2	double
*	O
zi2	double
;	O
const	O
double	O
t1	double
=	O
-	O
7.0	int
/	O
48.0	int
*	O
zi2	double
;	O
const	O
double	O
t2	double
=	O
35.0	int
/	O
288.0	int
*	O
zi4	double
;	O
const	O
double	O
t3	double
=	O
-	O
181223.0	int
/	O
207360.0	int
*	O
zi4	double
*	O
zi2	double
;	O
const	O
double	O
t4	double
=	O
18683371.0	int
/	O
1244160.0	int
*	O
zi4	double
*	O
zi4	double
;	O
return	O
pre	double
*	O
(	O
1.0	int
+	O
t1	double
+	O
t2	double
+	O
t3	double
+	O
t4	double
)	O
;	O
}	O
int	O
gsl_sf_airy_zero_Ai_e	function
(	O
unsigned	O
int	O
s	int
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
if	O
(	O
s	int
<	O
1	int
)	O
{	O
DOMAIN_ERROR_MSG	O
(	O
"s is less than 1"	pointer
,	O
result	pointer
)	O
;	O
}	O
else	O
if	O
(	O
s	int
<	O
size_zero_Ai	long
)	O
{	O
result	pointer
->	O
val	double
=	O
zero_Ai	array
[	O
s	int
]	O
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
z	double
=	O
3.0	int
*	O
M_PI	int
/	O
8.0	int
*	O
(	O
4.0	int
*	O
s	int
-	O
1.0	int
)	O
;	O
const	O
double	O
f	pointer
=	O
zero_f	function
(	O
z	double
)	O
;	O
result	pointer
->	O
val	double
=	O
-	O
f	pointer
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
int	O
gsl_sf_airy_zero_Bi_e	function
(	O
unsigned	O
int	O
s	int
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
if	O
(	O
s	int
<	O
1	int
)	O
{	O
DOMAIN_ERROR_MSG	O
(	O
"s is less than 1"	pointer
,	O
result	pointer
)	O
;	O
}	O
else	O
if	O
(	O
s	int
<	O
size_zero_Bi	long
)	O
{	O
result	pointer
->	O
val	double
=	O
zero_Bi	array
[	O
s	int
]	O
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
z	double
=	O
3.0	int
*	O
M_PI	int
/	O
8.0	int
*	O
(	O
4.0	int
*	O
s	int
-	O
3.0	int
)	O
;	O
const	O
double	O
f	pointer
=	O
zero_f	function
(	O
z	double
)	O
;	O
result	pointer
->	O
val	double
=	O
-	O
f	pointer
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
int	O
gsl_sf_airy_zero_Ai_deriv_e	function
(	O
unsigned	O
int	O
s	int
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
if	O
(	O
s	int
<	O
1	int
)	O
{	O
DOMAIN_ERROR_MSG	O
(	O
"s is less than 1"	pointer
,	O
result	pointer
)	O
;	O
}	O
else	O
if	O
(	O
s	int
<	O
size_zero_Aip	long
)	O
{	O
result	pointer
->	O
val	double
=	O
zero_Aip	array
[	O
s	int
]	O
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
z	double
=	O
3.0	int
*	O
M_PI	int
/	O
8.0	int
*	O
(	O
4.0	int
*	O
s	int
-	O
3.0	int
)	O
;	O
const	O
double	O
g	double
=	O
zero_g	function
(	O
z	double
)	O
;	O
result	pointer
->	O
val	double
=	O
-	O
g	double
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
int	O
gsl_sf_airy_zero_Bi_deriv_e	function
(	O
unsigned	O
int	O
s	int
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
if	O
(	O
s	int
<	O
1	int
)	O
{	O
DOMAIN_ERROR_MSG	O
(	O
"s is less than 1"	pointer
,	O
result	pointer
)	O
;	O
}	O
else	O
if	O
(	O
s	int
<	O
size_zero_Bip	long
)	O
{	O
result	pointer
->	O
val	double
=	O
zero_Bip	array
[	O
s	int
]	O
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
z	double
=	O
3.0	int
*	O
M_PI	int
/	O
8.0	int
*	O
(	O
4.0	int
*	O
s	int
-	O
1.0	int
)	O
;	O
const	O
double	O
g	double
=	O
zero_g	function
(	O
z	double
)	O
;	O
result	pointer
->	O
val	double
=	O
-	O
g	double
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
double	O
gsl_sf_airy_zero_Ai	function
(	O
unsigned	O
int	O
s	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_airy_zero_Ai_e	function
(	O
s	int
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
double	O
gsl_sf_airy_zero_Bi	function
(	O
unsigned	O
int	O
s	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_airy_zero_Bi_e	function
(	O
s	int
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
double	O
gsl_sf_airy_zero_Ai_deriv	function
(	O
unsigned	O
int	O
s	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_airy_zero_Ai_deriv_e	function
(	O
s	int
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
double	O
gsl_sf_airy_zero_Bi_deriv	function
(	O
unsigned	O
int	O
s	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_airy_zero_Bi_deriv_e	function
(	O
s	int
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O