static	O
void	O
print_bytes	function
(	O
unsigned	O
char	O
*	O
b	*
,	O
size_t	long
l	long
)	O
{	O
for	O
(	O
;	O
l	long
;	O
l	long
--	O
,	O
b	int
++	O
)	O
printf	function
(	O
" %02x"	*
,	O
*	O
b	*
)	O
;	O
printf	function
(	O
"\n"	*
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
mu_set_program_name	function
(	O
argv	*
[	O
0	int
]	O
)	O
;	O
if	O
(	O
argc	long
<	O
2	int
)	O
{	O
mu_error	function
(	O
"usage: %s [-sS] CIDR [CIDR...]"	*
,	O
argv	*
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
while	O
(	O
--	O
argc	long
)	O
{	O
char	O
*	O
arg	*
=	O
*	O
++	O
argv	*
;	O
struct	O
mu_cidr	struct
cidr	*
;	O
int	O
rc	int
;	O
char	O
*	O
str	*
;	O
if	O
(	O
strcmp	function
(	O
arg	*
,	O
"-s"	*
)	O
==	O
0	int
)	O
{	O
flags	int
|=	O
MU_CIDR_FMT_SIMPLIFY	int
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
arg	*
,	O
"-S"	*
)	O
==	O
0	int
)	O
{	O
flags	int
&=	O
~	O
MU_CIDR_FMT_SIMPLIFY	int
;	O
continue	O
;	O
}	O
rc	int
=	O
mu_cidr_from_string	function
(	O
&	O
cidr	*
,	O
arg	*
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	function
(	O
"%s: %s"	*
,	O
arg	*
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
continue	O
;	O
}	O
printf	function
(	O
"%s:\n"	*
,	O
arg	*
)	O
;	O
printf	function
(	O
"family = %d\n"	*
,	O
cidr	*
.	O
family	int
)	O
;	O
printf	function
(	O
"len = %d\n"	*
,	O
cidr	*
.	O
len	long
)	O
;	O
printf	function
(	O
"address ="	*
)	O
;	O
print_bytes	function
(	O
cidr	*
.	O
address	array
,	O
cidr	*
.	O
len	int
)	O
;	O
printf	function
(	O
"netmask ="	*
)	O
;	O
print_bytes	function
(	O
cidr	*
.	O
netmask	array
,	O
cidr	*
.	O
len	int
)	O
;	O
rc	int
=	O
mu_cidr_format	function
(	O
&	O
cidr	*
,	O
flags	int
,	O
&	O
str	*
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	function
(	O
"cannot covert to string: %s"	*
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
return	O
2	int
;	O
}	O
printf	function
(	O
"string = %s\n"	*
,	O
str	*
)	O
;	O
free	function
(	O
str	*
)	O
;	O
}	O
return	O
0	int
;	O
}	O