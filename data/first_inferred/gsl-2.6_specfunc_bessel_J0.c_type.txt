static	O
double	O
bj0_data	array
[	O
13	int
]	O
=	O
{	O
0.100254161968939137	int
,	O
-	O
0.665223007764405132	int
,	O
0.248983703498281314	int
,	O
-	O
0.0332527231700357697	int
,	O
0.0023114179304694015	int
,	O
-	O
0.0000991127741995080	int
,	O
0.0000028916708643998	int
,	O
-	O
0.0000000612108586630	int
,	O
0.0000000009838650793	int
,	O
-	O
0.0000000000124235515	int
,	O
0.0000000000001265433	int
,	O
-	O
0.0000000000000010619	int
,	O
0.0000000000000000074	int
,	O
}	O
;	O
static	O
cheb_series	struct
bj0_cs	struct
=	O
{	O
bj0_data	array
,	O
12	int
,	O
-	O
1	int
,	O
1	int
,	O
9	int
}	O
;	O
int	O
gsl_sf_bessel_J0_e	function
(	O
const	O
double	O
x	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
double	O
y	double
=	O
fabs	function
(	O
x	double
)	O
;	O
if	O
(	O
y	double
<	O
2.0	int
*	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
result	pointer
->	O
val	double
=	O
1.0	int
;	O
result	pointer
->	O
err	double
=	O
y	double
*	O
y	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
y	double
<=	O
4.0	int
)	O
{	O
return	O
cheb_eval_e	function
(	O
&	O
bj0_cs	struct
,	O
0.125	int
*	O
y	double
*	O
y	double
-	O
1.0	int
,	O
result	pointer
)	O
;	O
}	O
else	O
{	O
const	O
double	O
z	double
=	O
32.0	int
/	O
(	O
y	double
*	O
y	double
)	O
-	O
1.0	int
;	O
gsl_sf_result	struct
ca	struct
;	O
gsl_sf_result	struct
ct	struct
;	O
gsl_sf_result	struct
cp	struct
;	O
const	O
int	O
stat_ca	int
=	O
cheb_eval_e	function
(	O
&	O
_gsl_sf_bessel_amp_phase_bm0_cs	struct
,	O
z	double
,	O
&	O
ca	struct
)	O
;	O
const	O
int	O
stat_ct	int
=	O
cheb_eval_e	function
(	O
&	O
_gsl_sf_bessel_amp_phase_bth0_cs	struct
,	O
z	double
,	O
&	O
ct	struct
)	O
;	O
const	O
int	O
stat_cp	int
=	O
gsl_sf_bessel_cos_pi4_e	function
(	O
y	double
,	O
ct	struct
.	O
val	double
/	O
y	double
,	O
&	O
cp	struct
)	O
;	O
const	O
double	O
sqrty	double
=	O
sqrt	function
(	O
y	double
)	O
;	O
const	O
double	O
ampl	double
=	O
(	O
0.75	int
+	O
ca	struct
.	O
val	double
)	O
/	O
sqrty	double
;	O
result	pointer
->	O
val	double
=	O
ampl	double
*	O
cp	struct
.	O
val	double
;	O
result	pointer
->	O
err	double
=	O
fabs	function
(	O
cp	struct
.	O
val	double
)	O
*	O
ca	struct
.	O
err	double
/	O
sqrty	double
+	O
fabs	function
(	O
ampl	double
)	O
*	O
cp	struct
.	O
err	double
;	O
result	pointer
->	O
err	double
+=	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_ERROR_SELECT_3	O
(	O
stat_ca	int
,	O
stat_ct	int
,	O
stat_cp	int
)	O
;	O
}	O
}	O
double	O
gsl_sf_bessel_J0	function
(	O
const	O
double	O
x	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_bessel_J0_e	function
(	O
x	double
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
