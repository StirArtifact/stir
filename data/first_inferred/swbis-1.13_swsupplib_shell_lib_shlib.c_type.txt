int	O
uncompress_func	function
(	O
STROB	struct
*	O
plain_text	pointer
,	O
struct	O
shell_lib_function	struct
*	O
f	pointer
)	O
{	O
char	O
*	O
s	pointer
;	O
int	O
ret	pointer
;	O
lzo_uint	int
in_len	int
;	O
lzo_uint	int
out_len	int
;	O
lzo_uint	int
new_out_len	int
;	O
lzo_byte	O
*	O
inbuf	pointer
;	O
lzo_byte	O
*	O
outbuf	pointer
;	O
in_len	int
=	O
atoi	function
(	O
f	pointer
->	O
controlM	pointer
)	O
;	O
s	pointer
=	O
strchr	function
(	O
f	pointer
->	O
controlM	pointer
,	O
':'	O
)	O
;	O
if	O
(	O
s	pointer
)	O
{	O
s	pointer
++	O
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
out_len	int
=	O
atoi	function
(	O
s	pointer
)	O
;	O
strob_set_length	function
(	O
plain_text	pointer
,	O
(	O
int	O
)	O
(	O
out_len	int
)	O
+	O
100	int
)	O
;	O
inbuf	pointer
=	O
(	O
lzo_byte	O
*	O
)	O
(	O
f	pointer
->	O
textM	pointer
)	O
;	O
outbuf	pointer
=	O
(	O
lzo_byte	O
*	O
)	O
strob_str	function
(	O
plain_text	pointer
)	O
;	O
ret	pointer
=	O
lzo1x_decompress	function
(	O
inbuf	pointer
,	O
(	O
lzo_uint	int
)	O
(	O
in_len	int
)	O
,	O
outbuf	pointer
,	O
&	O
new_out_len	int
,	O
NULL	O
)	O
;	O
if	O
(	O
ret	pointer
==	O
LZO_E_OK	int
&&	O
new_out_len	int
==	O
out_len	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"decompression failed for %s  %d %d\n"	pointer
,	O
f	pointer
->	O
nameM	pointer
,	O
new_out_len	int
,	O
out_len	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
int	O
unescape_text	function
(	O
char	O
*	O
text	pointer
,	O
STROB	struct
*	O
buf	pointer
,	O
int	O
len	int
)	O
{	O
char	O
*	O
s	pointer
;	O
char	O
*	O
end	pointer
;	O
int	O
m	int
;	O
s	pointer
=	O
text	pointer
;	O
strob_strcpy	function
(	O
buf	pointer
,	O
""	pointer
)	O
;	O
while	O
(	O
*	O
s	pointer
)	O
{	O
if	O
(	O
strncmp	function
(	O
s	pointer
,	O
"\\x"	pointer
,	O
2	int
)	O
==	O
0	int
)	O
{	O
s	pointer
+=	O
2	int
;	O
m	int
=	O
(	O
int	O
)	O
strtol	function
(	O
s	pointer
,	O
&	O
end	pointer
,	O
16	int
)	O
;	O
s	pointer
+=	O
2	int
;	O
if	O
(	O
end	pointer
!=	O
s	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"unescape_text: error, loc=2\n"	pointer
)	O
;	O
return	O
-	O
2	int
;	O
}	O
strob_chr	function
(	O
buf	pointer
,	O
m	int
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"unescape_text: error, loc=1\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
decode_text	function
(	O
struct	O
shell_lib_function	struct
*	O
f	pointer
,	O
STROB	struct
*	O
buf	pointer
)	O
{	O
int	O
ret	pointer
;	O
int	O
len	int
;	O
ret	pointer
=	O
0	int
;	O
if	O
(	O
f	pointer
->	O
functionM	pointer
!=	O
NULL	O
)	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
strstr	function
(	O
f	pointer
->	O
controlM	pointer
,	O
"COMPRESSION=1"	pointer
)	O
)	O
{	O
ret	pointer
=	O
uncompress_func	function
(	O
buf	pointer
,	O
f	pointer
)	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
f	pointer
->	O
textM	pointer
)	O
==	O
'\\'	O
)	O
{	O
len	int
=	O
atoi	function
(	O
f	pointer
->	O
controlM	pointer
)	O
;	O
ret	pointer
=	O
unescape_text	function
(	O
f	pointer
->	O
textM	pointer
,	O
buf	pointer
,	O
len	int
)	O
;	O
}	O
else	O
{	O
strob_strcpy	function
(	O
buf	pointer
,	O
f	pointer
->	O
textM	pointer
)	O
;	O
}	O
if	O
(	O
f	pointer
->	O
functionM	pointer
==	O
NULL	O
)	O
{	O
f	pointer
->	O
functionM	pointer
=	O
strdup	function
(	O
strob_str	function
(	O
buf	pointer
)	O
)	O
;	O
}	O
return	O
ret	pointer
;	O
}	O
struct	O
shell_lib_function	struct
*	O
shlib_get_function_array	function
(	O
void	O
)	O
{	O
return	O
shell_lib_function_pallet	array
;	O
}	O
struct	O
shell_lib_function	struct
*	O
shlib_get_function_struct	function
(	O
char	O
*	O
function_name	pointer
)	O
{	O
struct	O
shell_lib_function	struct
*	O
f	pointer
;	O
f	pointer
=	O
shlib_get_function_array	function
(	O
)	O
;	O
while	O
(	O
f	pointer
->	O
textM	pointer
)	O
{	O
if	O
(	O
strcmp	function
(	O
f	pointer
->	O
nameM	pointer
,	O
function_name	pointer
)	O
==	O
0	int
)	O
{	O
return	O
f	pointer
;	O
}	O
f	pointer
++	O
;	O
}	O
return	O
(	O
struct	O
shell_lib_function	struct
*	O
)	O
NULL	O
;	O
}	O
char	O
*	O
shlib_get_function_text	function
(	O
struct	O
shell_lib_function	struct
*	O
f	pointer
,	O
STROB	struct
*	O
buf	pointer
)	O
{	O
int	O
ret	pointer
;	O
ret	pointer
=	O
decode_text	function
(	O
f	pointer
,	O
buf	pointer
)	O
;	O
if	O
(	O
ret	pointer
)	O
return	O
NULL	O
;	O
return	O
f	pointer
->	O
functionM	pointer
;	O
}	O
char	O
*	O
shlib_get_function_text_by_name	function
(	O
char	O
*	O
function_name	pointer
,	O
STROB	struct
*	O
buf	pointer
,	O
int	O
*	O
pret	pointer
)	O
{	O
int	O
ret	pointer
;	O
struct	O
shell_lib_function	struct
*	O
f	pointer
;	O
f	pointer
=	O
shlib_get_function_struct	function
(	O
function_name	pointer
)	O
;	O
if	O
(	O
f	pointer
==	O
NULL	O
)	O
{	O
ret	pointer
=	O
-	O
1	int
;	O
goto	O
out	O
;	O
}	O
ret	pointer
=	O
decode_text	function
(	O
f	pointer
,	O
buf	pointer
)	O
;	O
if	O
(	O
ret	pointer
)	O
{	O
ret	pointer
=	O
-	O
1	int
;	O
goto	O
err_out	O
;	O
}	O
else	O
{	O
ret	pointer
=	O
0	int
;	O
goto	O
out	O
;	O
}	O
err_out	O
:	O
strob_strcpy	function
(	O
buf	pointer
,	O
""	pointer
)	O
;	O
out	O
:	O
if	O
(	O
pret	pointer
)	O
*	O
pret	pointer
=	O
ret	pointer
;	O
if	O
(	O
ret	pointer
)	O
{	O
return	O
NULL	O
;	O
}	O
else	O
{	O
return	O
f	pointer
->	O
functionM	pointer
;	O
}	O
}	O
