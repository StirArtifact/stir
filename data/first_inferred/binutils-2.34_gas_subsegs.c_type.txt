frchainS	struct
*	O
frchain_now	pointer
;	O
static	O
struct	O
obstack	struct
frchains	struct
;	O
static	O
fragS	struct
dummy_frag	struct
;	O
void	O
subsegs_begin	function
(	O
void	O
)	O
{	O
obstack_begin	O
(	O
&	O
frchains	struct
,	O
chunksize	int
)	O
;	O
obstack_alignment_mask	O
(	O
&	O
frchains	struct
)	O
=	O
__alignof__	O
(	O
frchainS	struct
)	O
-	O
1	int
;	O
frchain_now	pointer
=	O
NULL	O
;	O
frag_now	pointer
=	O
&	O
dummy_frag	struct
;	O
}	O
void	O
subseg_change	function
(	O
segT	pointer
seg	pointer
,	O
int	O
subseg	int
)	O
{	O
segment_info_type	struct
*	O
seginfo	pointer
=	O
seg_info	O
(	O
seg	pointer
)	O
;	O
now_seg	pointer
=	O
seg	pointer
;	O
now_subseg	int
=	O
subseg	int
;	O
if	O
(	O
!	O
seginfo	pointer
)	O
{	O
seginfo	pointer
=	O
XCNEW	O
(	O
segment_info_type	struct
)	O
;	O
seginfo	pointer
->	O
bfd_section	struct
=	O
seg	pointer
;	O
bfd_set_section_userdata	function
(	O
seg	pointer
,	O
seginfo	pointer
)	O
;	O
}	O
}	O
static	O
void	O
subseg_set_rest	function
(	O
segT	pointer
seg	pointer
,	O
subsegT	int
subseg	int
)	O
{	O
frchainS	struct
*	O
frcP	pointer
;	O
frchainS	struct
*	O
*	O
lastPP	pointer
;	O
frchainS	struct
*	O
newP	pointer
;	O
segment_info_type	struct
*	O
seginfo	pointer
;	O
mri_common_symbol	pointer
=	O
NULL	O
;	O
if	O
(	O
frag_now	pointer
&&	O
frchain_now	pointer
)	O
frchain_now	pointer
->	O
frch_frag_now	pointer
=	O
frag_now	pointer
;	O
gas_assert	O
(	O
frchain_now	pointer
==	O
0	int
||	O
frchain_now	pointer
->	O
frch_last	pointer
==	O
frag_now	pointer
)	O
;	O
subseg_change	function
(	O
seg	pointer
,	O
(	O
int	O
)	O
subseg	int
)	O
;	O
seginfo	pointer
=	O
seg_info	O
(	O
seg	pointer
)	O
;	O
for	O
(	O
frcP	pointer
=	O
*	O
(	O
lastPP	pointer
=	O
&	O
seginfo	pointer
->	O
frchainP	pointer
)	O
;	O
frcP	pointer
!=	O
NULL	O
;	O
frcP	pointer
=	O
*	O
(	O
lastPP	pointer
=	O
&	O
frcP	pointer
->	O
frch_next	pointer
)	O
)	O
if	O
(	O
frcP	pointer
->	O
frch_subseg	int
>=	O
subseg	int
)	O
break	O
;	O
if	O
(	O
frcP	pointer
==	O
NULL	O
||	O
frcP	pointer
->	O
frch_subseg	int
!=	O
subseg	int
)	O
{	O
newP	pointer
=	O
(	O
frchainS	struct
*	O
)	O
obstack_alloc	O
(	O
&	O
frchains	struct
,	O
sizeof	O
(	O
frchainS	struct
)	O
)	O
;	O
newP	pointer
->	O
frch_subseg	int
=	O
subseg	int
;	O
newP	pointer
->	O
fix_root	pointer
=	O
NULL	O
;	O
newP	pointer
->	O
fix_tail	pointer
=	O
NULL	O
;	O
obstack_begin	O
(	O
&	O
newP	pointer
->	O
frch_obstack	struct
,	O
chunksize	int
)	O
;	O
obstack_alignment_mask	O
(	O
&	O
newP	pointer
->	O
frch_obstack	struct
)	O
=	O
__alignof__	O
(	O
fragS	struct
)	O
-	O
1	int
;	O
newP	pointer
->	O
frch_frag_now	pointer
=	O
frag_alloc	function
(	O
&	O
newP	pointer
->	O
frch_obstack	struct
)	O
;	O
newP	pointer
->	O
frch_frag_now	pointer
->	O
fr_type	enum
=	O
rs_fill	int
;	O
newP	pointer
->	O
frch_cfi_data	pointer
=	O
NULL	O
;	O
newP	pointer
->	O
frch_root	pointer
=	O
newP	pointer
->	O
frch_last	pointer
=	O
newP	pointer
->	O
frch_frag_now	pointer
;	O
*	O
lastPP	pointer
=	O
newP	pointer
;	O
newP	pointer
->	O
frch_next	pointer
=	O
frcP	pointer
;	O
frcP	pointer
=	O
newP	pointer
;	O
}	O
frchain_now	pointer
=	O
frcP	pointer
;	O
frag_now	pointer
=	O
frcP	pointer
->	O
frch_frag_now	pointer
;	O
gas_assert	O
(	O
frchain_now	pointer
->	O
frch_last	pointer
==	O
frag_now	pointer
)	O
;	O
}	O
segT	pointer
subseg_get	function
(	O
const	O
char	O
*	O
segname	pointer
,	O
int	O
force_new	int
)	O
{	O
segT	pointer
secptr	pointer
;	O
segment_info_type	struct
*	O
seginfo	pointer
;	O
const	O
char	O
*	O
now_seg_name	pointer
=	O
now_seg	pointer
?	O
bfd_section_name	function
(	O
now_seg	pointer
)	O
:	O
0	int
;	O
if	O
(	O
!	O
force_new	int
&&	O
now_seg_name	pointer
&&	O
(	O
now_seg_name	pointer
==	O
segname	pointer
||	O
!	O
strcmp	function
(	O
now_seg_name	pointer
,	O
segname	pointer
)	O
)	O
)	O
return	O
now_seg	pointer
;	O
if	O
(	O
!	O
force_new	int
)	O
secptr	pointer
=	O
bfd_make_section_old_way	function
(	O
stdoutput	pointer
,	O
segname	pointer
)	O
;	O
else	O
secptr	pointer
=	O
bfd_make_section_anyway	function
(	O
stdoutput	pointer
,	O
segname	pointer
)	O
;	O
seginfo	pointer
=	O
seg_info	O
(	O
secptr	pointer
)	O
;	O
if	O
(	O
!	O
seginfo	pointer
)	O
{	O
secptr	pointer
->	O
output_section	pointer
=	O
secptr	pointer
;	O
seginfo	pointer
=	O
XCNEW	O
(	O
segment_info_type	struct
)	O
;	O
seginfo	pointer
->	O
bfd_section	struct
=	O
secptr	pointer
;	O
bfd_set_section_userdata	function
(	O
secptr	pointer
,	O
seginfo	pointer
)	O
;	O
}	O
return	O
secptr	pointer
;	O
}	O
segT	pointer
subseg_new	function
(	O
const	O
char	O
*	O
segname	pointer
,	O
subsegT	int
subseg	int
)	O
{	O
segT	pointer
secptr	pointer
;	O
secptr	pointer
=	O
subseg_get	function
(	O
segname	pointer
,	O
0	int
)	O
;	O
subseg_set_rest	function
(	O
secptr	pointer
,	O
subseg	int
)	O
;	O
return	O
secptr	pointer
;	O
}	O
segT	pointer
subseg_force_new	function
(	O
const	O
char	O
*	O
segname	pointer
,	O
subsegT	int
subseg	int
)	O
{	O
segT	pointer
secptr	pointer
;	O
secptr	pointer
=	O
subseg_get	function
(	O
segname	pointer
,	O
1	int
)	O
;	O
subseg_set_rest	function
(	O
secptr	pointer
,	O
subseg	int
)	O
;	O
return	O
secptr	pointer
;	O
}	O
void	O
subseg_set	function
(	O
segT	pointer
secptr	pointer
,	O
subsegT	int
subseg	int
)	O
{	O
if	O
(	O
!	O
(	O
secptr	pointer
==	O
now_seg	pointer
&&	O
subseg	int
==	O
now_subseg	int
)	O
)	O
subseg_set_rest	function
(	O
secptr	pointer
,	O
subseg	int
)	O
;	O
mri_common_symbol	pointer
=	O
NULL	O
;	O
}	O
symbolS	struct
*	O
section_symbol	function
(	O
segT	pointer
sec	pointer
)	O
{	O
segment_info_type	struct
*	O
seginfo	pointer
=	O
seg_info	O
(	O
sec	pointer
)	O
;	O
symbolS	struct
*	O
s	pointer
;	O
if	O
(	O
seginfo	pointer
==	O
0	int
)	O
abort	function
(	O
)	O
;	O
if	O
(	O
seginfo	pointer
->	O
sym	pointer
)	O
return	O
seginfo	pointer
->	O
sym	pointer
;	O
if	O
(	O
!	O
EMIT_SECTION_SYMBOLS	int
||	O
symbol_table_frozen	int
)	O
{	O
s	pointer
=	O
symbol_create	function
(	O
sec	pointer
->	O
symbol	pointer
->	O
name	pointer
,	O
sec	pointer
,	O
0	int
,	O
&	O
zero_address_frag	struct
)	O
;	O
}	O
else	O
{	O
segT	pointer
seg	pointer
;	O
s	pointer
=	O
symbol_find	function
(	O
sec	pointer
->	O
symbol	pointer
->	O
name	pointer
)	O
;	O
if	O
(	O
s	pointer
==	O
NULL	O
||	O
(	O
(	O
seg	pointer
=	O
S_GET_SEGMENT	function
(	O
s	pointer
)	O
)	O
!=	O
sec	pointer
&&	O
seg	pointer
!=	O
undefined_section	O
)	O
)	O
s	pointer
=	O
symbol_new	function
(	O
sec	pointer
->	O
symbol	pointer
->	O
name	pointer
,	O
sec	pointer
,	O
0	int
,	O
&	O
zero_address_frag	struct
)	O
;	O
else	O
if	O
(	O
seg	pointer
==	O
undefined_section	O
)	O
{	O
S_SET_SEGMENT	function
(	O
s	pointer
,	O
sec	pointer
)	O
;	O
symbol_set_frag	function
(	O
s	pointer
,	O
&	O
zero_address_frag	struct
)	O
;	O
}	O
}	O
S_CLEAR_EXTERNAL	function
(	O
s	pointer
)	O
;	O
if	O
(	O
obj_sec_sym_ok_for_reloc	O
(	O
sec	pointer
)	O
)	O
symbol_set_bfdsym	function
(	O
s	pointer
,	O
sec	pointer
->	O
symbol	pointer
)	O
;	O
else	O
symbol_get_bfdsym	function
(	O
s	pointer
)	O
->	O
flags	int
|=	O
BSF_SECTION_SYM	O
;	O
seginfo	pointer
->	O
sym	pointer
=	O
s	pointer
;	O
return	O
s	pointer
;	O
}	O
int	O
subseg_text_p	function
(	O
segT	pointer
sec	pointer
)	O
{	O
return	O
(	O
bfd_section_flags	function
(	O
sec	pointer
)	O
&	O
SEC_CODE	int
)	O
!=	O
0	int
;	O
}	O
int	O
seg_not_empty_p	function
(	O
segT	pointer
sec	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
segment_info_type	struct
*	O
seginfo	pointer
=	O
seg_info	O
(	O
sec	pointer
)	O
;	O
frchainS	struct
*	O
chain	pointer
;	O
fragS	struct
*	O
frag	struct
;	O
if	O
(	O
!	O
seginfo	pointer
)	O
return	O
0	int
;	O
for	O
(	O
chain	pointer
=	O
seginfo	pointer
->	O
frchainP	pointer
;	O
chain	pointer
;	O
chain	pointer
=	O
chain	pointer
->	O
frch_next	pointer
)	O
{	O
for	O
(	O
frag	struct
=	O
chain	pointer
->	O
frch_root	pointer
;	O
frag	struct
;	O
frag	struct
=	O
frag	struct
->	O
fr_next	pointer
)	O
if	O
(	O
frag	struct
->	O
fr_fix	long
)	O
return	O
1	int
;	O
if	O
(	O
obstack_next_free	O
(	O
&	O
chain	pointer
->	O
frch_obstack	struct
)	O
!=	O
chain	pointer
->	O
frch_last	pointer
->	O
fr_literal	array
)	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
subsegs_print_statistics	function
(	O
FILE	struct
*	O
file	pointer
)	O
{	O
frchainS	struct
*	O
frchp	pointer
;	O
asection	struct
*	O
s	pointer
;	O
if	O
(	O
stdoutput	pointer
==	O
NULL	O
)	O
return	O
;	O
fprintf	function
(	O
file	pointer
,	O
"frag chains:\n"	pointer
)	O
;	O
for	O
(	O
s	pointer
=	O
stdoutput	pointer
->	O
sections	pointer
;	O
s	pointer
;	O
s	pointer
=	O
s	pointer
->	O
next	pointer
)	O
{	O
segment_info_type	struct
*	O
seginfo	pointer
;	O
if	O
(	O
segment_name	O
(	O
s	pointer
)	O
[	O
0	int
]	O
==	O
'*'	O
)	O
continue	O
;	O
seginfo	pointer
=	O
seg_info	O
(	O
s	pointer
)	O
;	O
if	O
(	O
!	O
seginfo	pointer
)	O
continue	O
;	O
for	O
(	O
frchp	pointer
=	O
seginfo	pointer
->	O
frchainP	pointer
;	O
frchp	pointer
;	O
frchp	pointer
=	O
frchp	pointer
->	O
frch_next	pointer
)	O
{	O
int	O
count	int
=	O
0	int
;	O
fragS	struct
*	O
fragp	pointer
;	O
for	O
(	O
fragp	pointer
=	O
frchp	pointer
->	O
frch_root	pointer
;	O
fragp	pointer
;	O
fragp	pointer
=	O
fragp	pointer
->	O
fr_next	pointer
)	O
count	int
++	O
;	O
fprintf	function
(	O
file	pointer
,	O
"\n"	pointer
)	O
;	O
fprintf	function
(	O
file	pointer
,	O
"\t%p %-10s\t%10d frags\n"	pointer
,	O
(	O
void	O
*	O
)	O
frchp	pointer
,	O
segment_name	O
(	O
s	pointer
)	O
,	O
count	int
)	O
;	O
}	O
}	O
}	O
