static	O
int	O
forward_jac	function
(	O
const	O
double	O
h	double
,	O
const	O
gsl_vector	struct
*	O
x	double
,	O
const	O
gsl_vector	struct
*	O
wts	pointer
,	O
gsl_multifit_nlinear_fdf	struct
*	O
fdf	pointer
,	O
const	O
gsl_vector	struct
*	O
f	pointer
,	O
gsl_matrix	struct
*	O
J	pointer
)	O
;	O
static	O
int	O
center_jac	function
(	O
const	O
double	O
h	double
,	O
const	O
gsl_vector	struct
*	O
x	double
,	O
const	O
gsl_vector	struct
*	O
wts	pointer
,	O
gsl_multifit_nlinear_fdf	struct
*	O
fdf	pointer
,	O
gsl_matrix	struct
*	O
J	pointer
,	O
gsl_vector	struct
*	O
work	pointer
)	O
;	O
static	O
int	O
forward_jac	function
(	O
const	O
double	O
h	double
,	O
const	O
gsl_vector	struct
*	O
x	double
,	O
const	O
gsl_vector	struct
*	O
wts	pointer
,	O
gsl_multifit_nlinear_fdf	struct
*	O
fdf	pointer
,	O
const	O
gsl_vector	struct
*	O
f	pointer
,	O
gsl_matrix	struct
*	O
J	pointer
)	O
{	O
int	O
status	int
=	O
0	int
;	O
size_t	long
i	long
,	O
j	long
;	O
double	O
delta	double
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
fdf	pointer
->	O
p	int
;	O
++	O
j	long
)	O
{	O
double	O
xj	double
=	O
gsl_vector_get	function
(	O
x	double
,	O
j	long
)	O
;	O
gsl_vector_view	struct
v	pointer
=	O
gsl_matrix_column	function
(	O
J	pointer
,	O
j	long
)	O
;	O
delta	double
=	O
h	double
*	O
fabs	function
(	O
xj	double
)	O
;	O
if	O
(	O
delta	double
==	O
0.0	int
)	O
delta	double
=	O
h	double
;	O
gsl_vector_set	function
(	O
(	O
gsl_vector	struct
*	O
)	O
x	double
,	O
j	long
,	O
xj	double
+	O
delta	double
)	O
;	O
status	int
+=	O
gsl_multifit_nlinear_eval_f	function
(	O
fdf	pointer
,	O
x	double
,	O
wts	pointer
,	O
&	O
v	pointer
.	O
vector	struct
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
gsl_vector_set	function
(	O
(	O
gsl_vector	struct
*	O
)	O
x	double
,	O
j	long
,	O
xj	double
)	O
;	O
delta	double
=	O
1.0	int
/	O
delta	double
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
fdf	pointer
->	O
n	int
;	O
++	O
i	long
)	O
{	O
double	O
fnext	double
=	O
gsl_vector_get	function
(	O
&	O
v	pointer
.	O
vector	struct
,	O
i	long
)	O
;	O
double	O
fi	double
=	O
gsl_vector_get	function
(	O
f	pointer
,	O
i	long
)	O
;	O
gsl_matrix_set	function
(	O
J	pointer
,	O
i	long
,	O
j	long
,	O
(	O
fnext	double
-	O
fi	double
)	O
*	O
delta	double
)	O
;	O
}	O
}	O
return	O
status	int
;	O
}	O
static	O
int	O
center_jac	function
(	O
const	O
double	O
h	double
,	O
const	O
gsl_vector	struct
*	O
x	double
,	O
const	O
gsl_vector	struct
*	O
wts	pointer
,	O
gsl_multifit_nlinear_fdf	struct
*	O
fdf	pointer
,	O
gsl_matrix	struct
*	O
J	pointer
,	O
gsl_vector	struct
*	O
work	pointer
)	O
{	O
int	O
status	int
=	O
0	int
;	O
size_t	long
i	long
,	O
j	long
;	O
double	O
delta	double
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
fdf	pointer
->	O
p	int
;	O
++	O
j	long
)	O
{	O
double	O
xj	double
=	O
gsl_vector_get	function
(	O
x	double
,	O
j	long
)	O
;	O
gsl_vector_view	struct
v	pointer
=	O
gsl_matrix_column	function
(	O
J	pointer
,	O
j	long
)	O
;	O
delta	double
=	O
h	double
*	O
fabs	function
(	O
xj	double
)	O
;	O
if	O
(	O
delta	double
==	O
0.0	int
)	O
delta	double
=	O
h	double
;	O
gsl_vector_set	function
(	O
(	O
gsl_vector	struct
*	O
)	O
x	double
,	O
j	long
,	O
xj	double
+	O
0.5	int
*	O
delta	double
)	O
;	O
status	int
+=	O
gsl_multifit_nlinear_eval_f	function
(	O
fdf	pointer
,	O
x	double
,	O
wts	pointer
,	O
&	O
v	pointer
.	O
vector	struct
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
gsl_vector_set	function
(	O
(	O
gsl_vector	struct
*	O
)	O
x	double
,	O
j	long
,	O
xj	double
-	O
0.5	int
*	O
delta	double
)	O
;	O
status	int
+=	O
gsl_multifit_nlinear_eval_f	function
(	O
fdf	pointer
,	O
x	double
,	O
wts	pointer
,	O
work	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
gsl_vector_set	function
(	O
(	O
gsl_vector	struct
*	O
)	O
x	double
,	O
j	long
,	O
xj	double
)	O
;	O
delta	double
=	O
1.0	int
/	O
delta	double
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
fdf	pointer
->	O
n	int
;	O
++	O
i	long
)	O
{	O
double	O
fnext	double
=	O
gsl_vector_get	function
(	O
&	O
v	pointer
.	O
vector	struct
,	O
i	long
)	O
;	O
double	O
fprev	double
=	O
gsl_vector_get	function
(	O
work	pointer
,	O
i	long
)	O
;	O
gsl_matrix_set	function
(	O
J	pointer
,	O
i	long
,	O
j	long
,	O
(	O
fnext	double
-	O
fprev	double
)	O
*	O
delta	double
)	O
;	O
}	O
}	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_nlinear_df	function
(	O
const	O
double	O
h	double
,	O
const	O
gsl_multifit_nlinear_fdtype	enum
fdtype	enum
,	O
const	O
gsl_vector	struct
*	O
x	double
,	O
const	O
gsl_vector	struct
*	O
wts	pointer
,	O
gsl_multifit_nlinear_fdf	struct
*	O
fdf	pointer
,	O
const	O
gsl_vector	struct
*	O
f	pointer
,	O
gsl_matrix	struct
*	O
J	pointer
,	O
gsl_vector	struct
*	O
work	pointer
)	O
{	O
int	O
status	int
;	O
if	O
(	O
fdtype	enum
==	O
GSL_MULTIFIT_NLINEAR_FWDIFF	int
)	O
{	O
status	int
=	O
forward_jac	function
(	O
h	double
,	O
x	double
,	O
wts	pointer
,	O
fdf	pointer
,	O
f	pointer
,	O
J	pointer
)	O
;	O
}	O
else	O
if	O
(	O
fdtype	enum
==	O
GSL_MULTIFIT_NLINEAR_CTRDIFF	int
)	O
{	O
status	int
=	O
center_jac	function
(	O
h	double
,	O
x	double
,	O
wts	pointer
,	O
fdf	pointer
,	O
J	pointer
,	O
work	pointer
)	O
;	O
}	O
else	O
{	O
GSL_ERROR	O
(	O
"invalid specified fdtype"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
return	O
status	int
;	O
}	O
