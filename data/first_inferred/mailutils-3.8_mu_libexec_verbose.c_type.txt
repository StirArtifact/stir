int	O
shell_verbose_flags	int
;	O
static	O
int	O
string_to_xlev	function
(	O
const	O
char	O
*	O
name	pointer
,	O
int	O
*	O
pv	pointer
)	O
{	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
"secure"	pointer
)	O
==	O
0	int
)	O
*	O
pv	pointer
=	O
MU_XSCRIPT_SECURE	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
"payload"	pointer
)	O
==	O
0	int
)	O
*	O
pv	pointer
=	O
MU_XSCRIPT_PAYLOAD	int
;	O
else	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
change_verbose_mask	function
(	O
int	O
set	pointer
,	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
{	O
int	O
lev	int
;	O
if	O
(	O
string_to_xlev	function
(	O
argv	pointer
[	O
i	long
]	O
,	O
&	O
lev	int
)	O
)	O
{	O
mu_error	function
(	O
"unknown level: %s"	pointer
,	O
argv	pointer
[	O
i	long
]	O
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
set	pointer
)	O
SET_VERBOSE_MASK	O
(	O
lev	int
)	O
;	O
else	O
CLR_VERBOSE_MASK	O
(	O
lev	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
shell_verbose	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
void	O
(	O
*	O
set_verbose	pointer
)	O
(	O
void	O
)	O
,	O
void	O
(	O
*	O
set_mask	pointer
)	O
(	O
void	O
)	O
)	O
{	O
if	O
(	O
argc	long
==	O
1	int
)	O
{	O
if	O
(	O
QRY_VERBOSE	O
(	O
)	O
)	O
{	O
mu_printf	function
(	O
"verbose is on"	pointer
)	O
;	O
if	O
(	O
HAS_VERBOSE_MASK	O
(	O
)	O
)	O
{	O
char	O
*	O
delim	pointer
=	O
" ("	pointer
;	O
if	O
(	O
QRY_VERBOSE_MASK	O
(	O
MU_XSCRIPT_SECURE	int
)	O
)	O
{	O
mu_printf	function
(	O
"%ssecure"	pointer
,	O
delim	pointer
)	O
;	O
delim	pointer
=	O
", "	pointer
;	O
}	O
if	O
(	O
QRY_VERBOSE_MASK	O
(	O
MU_XSCRIPT_PAYLOAD	int
)	O
)	O
mu_printf	function
(	O
"%spayload"	pointer
,	O
delim	pointer
)	O
;	O
mu_printf	function
(	O
")"	pointer
)	O
;	O
}	O
mu_printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
else	O
mu_printf	function
(	O
"verbose is off\n"	pointer
)	O
;	O
}	O
else	O
{	O
int	O
bv	int
;	O
if	O
(	O
get_bool	function
(	O
argv	pointer
[	O
1	int
]	O
,	O
&	O
bv	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
bv	int
)	O
SET_VERBOSE	O
(	O
)	O
;	O
else	O
CLR_VERBOSE	O
(	O
)	O
;	O
if	O
(	O
argc	long
>	O
2	int
)	O
change_verbose_mask	function
(	O
shell_verbose_flags	int
,	O
argc	long
-	O
2	int
,	O
argv	pointer
+	O
2	int
)	O
;	O
set_verbose	pointer
(	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
argv	pointer
[	O
1	int
]	O
,	O
"mask"	pointer
)	O
==	O
0	int
)	O
change_verbose_mask	function
(	O
1	int
,	O
argc	long
-	O
2	int
,	O
argv	pointer
+	O
2	int
)	O
;	O
else	O
if	O
(	O
strcmp	function
(	O
argv	pointer
[	O
1	int
]	O
,	O
"unmask"	pointer
)	O
==	O
0	int
)	O
change_verbose_mask	function
(	O
0	int
,	O
argc	long
-	O
2	int
,	O
argv	pointer
+	O
2	int
)	O
;	O
else	O
mu_error	function
(	O
"unknown subcommand"	pointer
)	O
;	O
set_mask	pointer
(	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
