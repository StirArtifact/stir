int	O
VWriteObject	function
(	O
FILE	struct
*	O
f	struct
,	O
VObject	struct
*	O
obj	pointer
)	O
{	O
int	O
i	int
,	O
j	int
,	O
k	int
,	O
points	int
;	O
VPolygon	struct
*	O
*	O
q	pointer
;	O
VPoint	struct
*	O
p	pointer
;	O
points	int
=	O
0	int
;	O
q	pointer
=	O
obj	pointer
->	O
polygon	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
obj	pointer
->	O
numPolys	int
;	O
++	O
i	int
)	O
{	O
points	int
+=	O
q	pointer
[	O
i	int
]	O
->	O
numVtces	short
;	O
}	O
fprintf	function
(	O
f	struct
,	O
"%s\n%d %d\n"	pointer
,	O
obj	pointer
->	O
name	pointer
,	O
points	int
,	O
obj	pointer
->	O
numPolys	int
)	O
;	O
k	int
=	O
1	int
;	O
q	pointer
=	O
obj	pointer
->	O
polygon	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
obj	pointer
->	O
numPolys	int
;	O
++	O
i	int
)	O
{	O
for	O
(	O
(	O
j	int
=	O
0	int
,	O
p	pointer
=	O
q	pointer
[	O
i	int
]	O
->	O
vertex	pointer
)	O
;	O
j	int
<	O
q	pointer
[	O
i	int
]	O
->	O
numVtces	short
;	O
(	O
++	O
p	pointer
,	O
++	O
j	int
)	O
)	O
{	O
fprintf	function
(	O
f	struct
,	O
"%d %g %g %g\n"	pointer
,	O
k	int
,	O
p	pointer
->	O
x	double
,	O
p	pointer
->	O
y	double
,	O
p	pointer
->	O
z	double
)	O
;	O
++	O
k	int
;	O
}	O
}	O
k	int
=	O
1	int
;	O
q	pointer
=	O
obj	pointer
->	O
polygon	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
obj	pointer
->	O
numPolys	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
q	pointer
[	O
i	int
]	O
->	O
backColor	pointer
)	O
{	O
fprintf	function
(	O
f	struct
,	O
"(%s %s) %d"	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
color	pointer
->	O
color_name	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
backColor	pointer
->	O
color_name	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
numVtces	short
)	O
;	O
;	O
}	O
else	O
if	O
(	O
q	pointer
[	O
i	int
]	O
->	O
flags	short
&	O
PolyClipBackface	int
)	O
{	O
fprintf	function
(	O
f	struct
,	O
"(%s clip) %d"	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
color	pointer
->	O
color_name	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
numVtces	short
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
f	struct
,	O
"%s %d"	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
color	pointer
->	O
color_name	pointer
,	O
q	pointer
[	O
i	int
]	O
->	O
numVtces	short
)	O
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
q	pointer
[	O
i	int
]	O
->	O
numVtces	short
;	O
++	O
j	int
)	O
fprintf	function
(	O
f	struct
,	O
" %d"	pointer
,	O
k	int
++	O
)	O
;	O
fprintf	function
(	O
f	struct
,	O
"\n"	pointer
)	O
;	O
}	O
return	O
ferror	function
(	O
f	struct
)	O
?	O
-	O
1	int
:	O
0	int
;	O
}	O
