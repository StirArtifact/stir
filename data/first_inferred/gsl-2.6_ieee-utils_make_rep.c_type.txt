static	O
void	O
sprint_nybble	function
(	O
int	O
i	int
,	O
char	O
*	O
s	pointer
)	O
;	O
static	O
void	O
sprint_byte	function
(	O
int	O
i	int
,	O
char	O
*	O
s	pointer
)	O
;	O
static	O
int	O
determine_ieee_type	function
(	O
int	O
non_zero	int
,	O
int	O
exponent	int
,	O
int	O
max_exponent	int
)	O
;	O
void	O
gsl_ieee_float_to_rep	function
(	O
const	O
float	O
*	O
x	pointer
,	O
gsl_ieee_float_rep	struct
*	O
r	pointer
)	O
{	O
int	O
e	int
,	O
non_zero	int
;	O
union	O
{	O
float	O
f	float
;	O
struct	O
{	O
unsigned	O
char	O
byte	array
[	O
4	int
]	O
;	O
}	O
ieee	struct
;	O
}	O
u	union
;	O
u	union
.	O
f	float
=	O
*	O
x	pointer
;	O
if	O
(	O
little_endian_p	function
(	O
)	O
)	O
make_float_bigendian	function
(	O
&	O
(	O
u	union
.	O
f	float
)	O
)	O
;	O
if	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
3	int
]	O
>>	O
7	int
)	O
{	O
r	pointer
->	O
sign	int
=	O
1	int
;	O
}	O
else	O
{	O
r	pointer
->	O
sign	int
=	O
0	int
;	O
}	O
e	int
=	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
3	int
]	O
&	O
0x7f	int
)	O
<<	O
1	int
|	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
2	int
]	O
&	O
0x80	int
)	O
>>	O
7	int
;	O
r	pointer
->	O
exponent	int
=	O
e	int
-	O
127	int
;	O
sprint_byte	function
(	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
2	int
]	O
&	O
0x7f	int
)	O
<<	O
1	int
,	O
r	pointer
->	O
mantissa	array
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
1	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
7	int
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
0	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
15	int
)	O
;	O
r	pointer
->	O
mantissa	array
[	O
23	int
]	O
=	O
'\0'	O
;	O
non_zero	int
=	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
0	int
]	O
||	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
1	int
]	O
||	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
2	int
]	O
&	O
0x7f	int
)	O
;	O
r	pointer
->	O
type	int
=	O
determine_ieee_type	function
(	O
non_zero	int
,	O
e	int
,	O
255	int
)	O
;	O
}	O
void	O
gsl_ieee_double_to_rep	function
(	O
const	O
double	O
*	O
x	pointer
,	O
gsl_ieee_double_rep	struct
*	O
r	pointer
)	O
{	O
int	O
e	int
,	O
non_zero	int
;	O
union	O
{	O
double	O
d	double
;	O
struct	O
{	O
unsigned	O
char	O
byte	array
[	O
8	int
]	O
;	O
}	O
ieee	struct
;	O
}	O
u	union
;	O
u	union
.	O
d	double
=	O
*	O
x	pointer
;	O
if	O
(	O
little_endian_p	function
(	O
)	O
)	O
make_double_bigendian	function
(	O
&	O
(	O
u	union
.	O
d	double
)	O
)	O
;	O
if	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
7	int
]	O
>>	O
7	int
)	O
{	O
r	pointer
->	O
sign	int
=	O
1	int
;	O
}	O
else	O
{	O
r	pointer
->	O
sign	int
=	O
0	int
;	O
}	O
e	int
=	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
7	int
]	O
&	O
0x7f	int
)	O
<<	O
4	int
^	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
6	int
]	O
&	O
0xf0	int
)	O
>>	O
4	int
;	O
r	pointer
->	O
exponent	int
=	O
e	int
-	O
1023	int
;	O
sprint_nybble	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
6	int
]	O
,	O
r	pointer
->	O
mantissa	array
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
5	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
4	int
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
4	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
12	int
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
3	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
20	int
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
2	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
28	int
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
1	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
36	int
)	O
;	O
sprint_byte	function
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
0	int
]	O
,	O
r	pointer
->	O
mantissa	array
+	O
44	int
)	O
;	O
r	pointer
->	O
mantissa	array
[	O
52	int
]	O
=	O
'\0'	O
;	O
non_zero	int
=	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
0	int
]	O
||	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
1	int
]	O
||	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
2	int
]	O
||	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
3	int
]	O
||	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
4	int
]	O
||	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
5	int
]	O
||	O
(	O
u	union
.	O
ieee	struct
.	O
byte	array
[	O
6	int
]	O
&	O
0x0f	int
)	O
)	O
;	O
r	pointer
->	O
type	int
=	O
determine_ieee_type	function
(	O
non_zero	int
,	O
e	int
,	O
2047	int
)	O
;	O
}	O
static	O
char	O
nybble	array
[	O
16	int
]	O
[	O
5	int
]	O
=	O
{	O
"0000"	pointer
,	O
"0001"	pointer
,	O
"0010"	pointer
,	O
"0011"	pointer
,	O
"0100"	pointer
,	O
"0101"	pointer
,	O
"0110"	pointer
,	O
"0111"	pointer
,	O
"1000"	pointer
,	O
"1001"	pointer
,	O
"1010"	pointer
,	O
"1011"	pointer
,	O
"1100"	pointer
,	O
"1101"	pointer
,	O
"1110"	pointer
,	O
"1111"	pointer
}	O
;	O
static	O
void	O
sprint_nybble	function
(	O
int	O
i	int
,	O
char	O
*	O
s	pointer
)	O
{	O
char	O
*	O
c	array
;	O
c	array
=	O
nybble	array
[	O
i	int
&	O
0x0f	int
]	O
;	O
*	O
s	pointer
=	O
c	array
[	O
0	int
]	O
;	O
*	O
(	O
s	pointer
+	O
1	int
)	O
=	O
c	array
[	O
1	int
]	O
;	O
*	O
(	O
s	pointer
+	O
2	int
)	O
=	O
c	array
[	O
2	int
]	O
;	O
*	O
(	O
s	pointer
+	O
3	int
)	O
=	O
c	array
[	O
3	int
]	O
;	O
}	O
static	O
void	O
sprint_byte	function
(	O
int	O
i	int
,	O
char	O
*	O
s	pointer
)	O
{	O
char	O
*	O
c	array
;	O
c	array
=	O
nybble	array
[	O
(	O
i	int
&	O
0xf0	int
)	O
>>	O
4	int
]	O
;	O
*	O
s	pointer
=	O
c	array
[	O
0	int
]	O
;	O
*	O
(	O
s	pointer
+	O
1	int
)	O
=	O
c	array
[	O
1	int
]	O
;	O
*	O
(	O
s	pointer
+	O
2	int
)	O
=	O
c	array
[	O
2	int
]	O
;	O
*	O
(	O
s	pointer
+	O
3	int
)	O
=	O
c	array
[	O
3	int
]	O
;	O
c	array
=	O
nybble	array
[	O
i	int
&	O
0x0f	int
]	O
;	O
*	O
(	O
s	pointer
+	O
4	int
)	O
=	O
c	array
[	O
0	int
]	O
;	O
*	O
(	O
s	pointer
+	O
5	int
)	O
=	O
c	array
[	O
1	int
]	O
;	O
*	O
(	O
s	pointer
+	O
6	int
)	O
=	O
c	array
[	O
2	int
]	O
;	O
*	O
(	O
s	pointer
+	O
7	int
)	O
=	O
c	array
[	O
3	int
]	O
;	O
}	O
static	O
int	O
determine_ieee_type	function
(	O
int	O
non_zero	int
,	O
int	O
exponent	int
,	O
int	O
max_exponent	int
)	O
{	O
if	O
(	O
exponent	int
==	O
max_exponent	int
)	O
{	O
if	O
(	O
non_zero	int
)	O
{	O
return	O
GSL_IEEE_TYPE_NAN	int
;	O
}	O
else	O
{	O
return	O
GSL_IEEE_TYPE_INF	int
;	O
}	O
}	O
else	O
if	O
(	O
exponent	int
==	O
0	int
)	O
{	O
if	O
(	O
non_zero	int
)	O
{	O
return	O
GSL_IEEE_TYPE_DENORMAL	int
;	O
}	O
else	O
{	O
return	O
GSL_IEEE_TYPE_ZERO	int
;	O
}	O
}	O
else	O
{	O
return	O
GSL_IEEE_TYPE_NORMAL	int
;	O
}	O
}	O
