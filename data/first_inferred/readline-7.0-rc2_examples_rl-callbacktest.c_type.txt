extern	O
int	O
errno	O
;	O
static	O
void	O
cb_linehandler	function
(	O
char	O
*	O
)	O
;	O
static	O
void	O
signandler	function
(	O
int	O
)	O
;	O
int	O
running	int
,	O
sigwinch_received	int
;	O
const	O
char	O
*	O
prompt	pointer
=	O
"rltest$ "	pointer
;	O
static	O
void	O
sighandler	function
(	O
int	O
sig	int
)	O
{	O
sigwinch_received	int
=	O
1	int
;	O
}	O
static	O
void	O
cb_linehandler	function
(	O
char	O
*	O
line	pointer
)	O
{	O
if	O
(	O
line	pointer
==	O
NULL	O
||	O
strcmp	function
(	O
line	pointer
,	O
"exit"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
line	pointer
==	O
0	int
)	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
"exit\n"	pointer
)	O
;	O
rl_callback_handler_remove	function
(	O
)	O
;	O
running	int
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
*	O
line	pointer
)	O
add_history	function
(	O
line	pointer
)	O
;	O
printf	function
(	O
"input line: %s\n"	pointer
,	O
line	pointer
)	O
;	O
free	function
(	O
line	pointer
)	O
;	O
}	O
}	O
int	O
main	function
(	O
int	O
c	int
,	O
char	O
*	O
*	O
v	pointer
)	O
{	O
fd_set	struct
fds	struct
;	O
int	O
r	int
;	O
setlocale	function
(	O
LC_ALL	O
,	O
""	pointer
)	O
;	O
signal	function
(	O
SIGWINCH	int
,	O
sighandler	function
)	O
;	O
rl_callback_handler_install	function
(	O
prompt	pointer
,	O
cb_linehandler	function
)	O
;	O
running	int
=	O
1	int
;	O
while	O
(	O
running	int
)	O
{	O
FD_ZERO	O
(	O
&	O
fds	struct
)	O
;	O
FD_SET	O
(	O
fileno	function
(	O
rl_instream	pointer
)	O
,	O
&	O
fds	struct
)	O
;	O
r	int
=	O
select	function
(	O
FD_SETSIZE	O
,	O
&	O
fds	struct
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
r	int
<	O
0	int
&&	O
errno	O
!=	O
EINTR	int
)	O
{	O
perror	function
(	O
"rltest: select"	pointer
)	O
;	O
rl_callback_handler_remove	function
(	O
)	O
;	O
break	O
;	O
}	O
if	O
(	O
sigwinch_received	int
)	O
{	O
rl_resize_terminal	function
(	O
)	O
;	O
sigwinch_received	int
=	O
0	int
;	O
}	O
if	O
(	O
r	int
<	O
0	int
)	O
continue	O
;	O
if	O
(	O
FD_ISSET	O
(	O
fileno	function
(	O
rl_instream	pointer
)	O
,	O
&	O
fds	struct
)	O
)	O
rl_callback_read_char	function
(	O
)	O
;	O
}	O
printf	function
(	O
"rltest: Event loop has exited\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
