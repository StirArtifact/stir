int	O
gsl_histogram_memcpy	function
(	O
gsl_histogram	struct
*	O
dest	pointer
,	O
const	O
gsl_histogram	struct
*	O
src	pointer
)	O
{	O
size_t	long
n	long
=	O
src	pointer
->	O
n	long
;	O
size_t	long
i	pointer
;	O
if	O
(	O
dest	pointer
->	O
n	long
!=	O
src	pointer
->	O
n	long
)	O
{	O
GSL_ERROR	O
(	O
"histograms have different sizes, cannot copy"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<=	O
n	long
;	O
i	pointer
++	O
)	O
{	O
dest	pointer
->	O
range	pointer
[	O
i	pointer
]	O
=	O
src	pointer
->	O
range	pointer
[	O
i	pointer
]	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
dest	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
=	O
src	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
gsl_histogram	struct
*	O
gsl_histogram_clone	function
(	O
const	O
gsl_histogram	struct
*	O
src	pointer
)	O
{	O
size_t	long
n	long
=	O
src	pointer
->	O
n	long
;	O
size_t	long
i	pointer
;	O
gsl_histogram	struct
*	O
h	pointer
;	O
h	pointer
=	O
gsl_histogram_calloc_range	function
(	O
n	long
,	O
src	pointer
->	O
range	pointer
)	O
;	O
if	O
(	O
h	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram struct"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
h	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
=	O
src	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
;	O
}	O
return	O
h	pointer
;	O
}	O
