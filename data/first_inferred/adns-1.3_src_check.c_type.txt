void	O
adns_checkconsistency	function
(	O
adns_state	pointer
ads	pointer
,	O
adns_query	pointer
qu	pointer
)	O
{	O
adns__consistency	function
(	O
ads	pointer
,	O
qu	pointer
,	O
cc_user	int
)	O
;	O
}	O
static	O
void	O
checkc_query_alloc	function
(	O
adns_state	pointer
ads	pointer
,	O
adns_query	pointer
qu	pointer
)	O
{	O
allocnode	struct
*	O
an	pointer
;	O
DLIST_CHECK	O
(	O
qu	pointer
->	O
allocations	struct
,	O
an	pointer
,	O
,	O
{	O
}	O
)	O
;	O
}	O
static	O
void	O
checkc_query	function
(	O
adns_state	pointer
ads	pointer
,	O
adns_query	pointer
qu	pointer
)	O
{	O
adns_query	pointer
child	pointer
;	O
assert	O
(	O
qu	pointer
->	O
udpnextserver	int
<	O
ads	pointer
->	O
nservers	int
)	O
;	O
assert	O
(	O
!	O
(	O
qu	pointer
->	O
udpsent	long
&	O
(	O
~	O
0UL	int
<<	O
ads	pointer
->	O
nservers	int
)	O
)	O
)	O
;	O
assert	O
(	O
qu	pointer
->	O
search_pos	int
<=	O
ads	pointer
->	O
nsearchlist	int
)	O
;	O
if	O
(	O
qu	pointer
->	O
parent	pointer
)	O
DLIST_ASSERTON	O
(	O
qu	pointer
,	O
child	pointer
,	O
qu	pointer
->	O
parent	pointer
->	O
children	struct
,	O
siblings	struct
.	O
)	O
;	O
}	O
static	O
void	O
checkc_notcpbuf	function
(	O
adns_state	pointer
ads	pointer
)	O
{	O
assert	O
(	O
!	O
ads	pointer
->	O
tcpsend	struct
.	O
used	int
)	O
;	O
assert	O
(	O
!	O
ads	pointer
->	O
tcprecv	struct
.	O
used	int
)	O
;	O
assert	O
(	O
!	O
ads	pointer
->	O
tcprecv_skip	int
)	O
;	O
}	O
static	O
void	O
checkc_global	function
(	O
adns_state	pointer
ads	pointer
)	O
{	O
int	O
i	int
;	O
assert	O
(	O
ads	pointer
->	O
udpsocket	int
>=	O
0	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ads	pointer
->	O
nsortlist	int
;	O
i	int
++	O
)	O
assert	O
(	O
!	O
(	O
ads	pointer
->	O
sortlist	struct
[	O
i	int
]	O
.	O
base	struct
.	O
s_addr	int
&	O
~	O
ads	pointer
->	O
sortlist	struct
[	O
i	int
]	O
.	O
mask	struct
.	O
s_addr	int
)	O
)	O
;	O
assert	O
(	O
ads	pointer
->	O
tcpserver	int
>=	O
0	int
&&	O
ads	pointer
->	O
tcpserver	int
<	O
ads	pointer
->	O
nservers	int
)	O
;	O
switch	O
(	O
ads	pointer
->	O
tcpstate	enum
)	O
{	O
case	O
server_connecting	int
:	O
assert	O
(	O
ads	pointer
->	O
tcpsocket	int
>=	O
0	int
)	O
;	O
checkc_notcpbuf	function
(	O
ads	pointer
)	O
;	O
break	O
;	O
case	O
server_disconnected	int
:	O
case	O
server_broken	int
:	O
assert	O
(	O
ads	pointer
->	O
tcpsocket	int
==	O
-	O
1	int
)	O
;	O
checkc_notcpbuf	function
(	O
ads	pointer
)	O
;	O
break	O
;	O
case	O
server_ok	int
:	O
assert	O
(	O
ads	pointer
->	O
tcpsocket	int
>=	O
0	int
)	O
;	O
assert	O
(	O
ads	pointer
->	O
tcprecv_skip	int
<=	O
ads	pointer
->	O
tcprecv	struct
.	O
used	int
)	O
;	O
break	O
;	O
default	O
:	O
assert	O
(	O
!	O
"ads->tcpstate value"	pointer
)	O
;	O
}	O
assert	O
(	O
ads	pointer
->	O
searchlist	pointer
||	O
!	O
ads	pointer
->	O
nsearchlist	int
)	O
;	O
}	O
static	O
void	O
checkc_queue_udpw	function
(	O
adns_state	pointer
ads	pointer
)	O
{	O
adns_query	pointer
qu	pointer
;	O
DLIST_CHECK	O
(	O
ads	pointer
->	O
udpw	struct
,	O
qu	pointer
,	O
,	O
{	O
assert	O
(	O
qu	pointer
->	O
state	pointer
==	O
query_tosend	int
)	O
;	O
assert	O
(	O
qu	pointer
->	O
retries	int
<=	O
UDPMAXRETRIES	int
)	O
;	O
assert	O
(	O
qu	pointer
->	O
udpsent	long
)	O
;	O
assert	O
(	O
!	O
qu	pointer
->	O
children	struct
.	O
head	pointer
&&	O
!	O
qu	pointer
->	O
children	struct
.	O
tail	pointer
)	O
;	O
checkc_query	function
(	O
ads	pointer
,	O
qu	pointer
)	O
;	O
checkc_query_alloc	function
(	O
ads	pointer
,	O
qu	pointer
)	O
;	O
}	O
)	O
;	O
}	O
static	O
void	O
checkc_queue_tcpw	function
(	O
adns_state	pointer
ads	pointer
)	O
{	O
adns_query	pointer
qu	pointer
;	O
DLIST_CHECK	O
(	O
ads	pointer
->	O
tcpw	struct
,	O
qu	pointer
,	O
,	O
{	O
assert	O
(	O
qu	pointer
->	O
state	pointer
==	O
query_tcpw	int
)	O
;	O
assert	O
(	O
!	O
qu	pointer
->	O
children	struct
.	O
head	pointer
&&	O
!	O
qu	pointer
->	O
children	struct
.	O
tail	pointer
)	O
;	O
assert	O
(	O
qu	pointer
->	O
retries	int
<=	O
ads	pointer
->	O
nservers	int
+	O
1	int
)	O
;	O
checkc_query	function
(	O
ads	pointer
,	O
qu	pointer
)	O
;	O
checkc_query_alloc	function
(	O
ads	pointer
,	O
qu	pointer
)	O
;	O
}	O
)	O
;	O
}	O
static	O
void	O
checkc_queue_childw	function
(	O
adns_state	pointer
ads	pointer
)	O
{	O
adns_query	pointer
parent	pointer
,	O
child	pointer
;	O
DLIST_CHECK	O
(	O
ads	pointer
->	O
childw	struct
,	O
parent	pointer
,	O
,	O
{	O
assert	O
(	O
parent	pointer
->	O
state	pointer
==	O
query_childw	int
)	O
;	O
assert	O
(	O
parent	pointer
->	O
children	struct
.	O
head	pointer
)	O
;	O
DLIST_CHECK	O
(	O
parent	pointer
->	O
children	struct
,	O
child	pointer
,	O
siblings	struct
.	O
,	O
{	O
assert	O
(	O
child	pointer
->	O
parent	pointer
==	O
parent	pointer
)	O
;	O
assert	O
(	O
child	pointer
->	O
state	pointer
!=	O
query_done	int
)	O
;	O
}	O
)	O
;	O
checkc_query	function
(	O
ads	pointer
,	O
parent	pointer
)	O
;	O
checkc_query_alloc	function
(	O
ads	pointer
,	O
parent	pointer
)	O
;	O
}	O
)	O
;	O
}	O
static	O
void	O
checkc_queue_output	function
(	O
adns_state	pointer
ads	pointer
)	O
{	O
adns_query	pointer
qu	pointer
;	O
DLIST_CHECK	O
(	O
ads	pointer
->	O
output	struct
,	O
qu	pointer
,	O
,	O
{	O
assert	O
(	O
qu	pointer
->	O
state	pointer
==	O
query_done	int
)	O
;	O
assert	O
(	O
!	O
qu	pointer
->	O
children	struct
.	O
head	pointer
&&	O
!	O
qu	pointer
->	O
children	struct
.	O
tail	pointer
)	O
;	O
assert	O
(	O
!	O
qu	pointer
->	O
parent	pointer
)	O
;	O
assert	O
(	O
!	O
qu	pointer
->	O
allocations	struct
.	O
head	pointer
&&	O
!	O
qu	pointer
->	O
allocations	struct
.	O
tail	pointer
)	O
;	O
checkc_query	function
(	O
ads	pointer
,	O
qu	pointer
)	O
;	O
}	O
)	O
;	O
}	O
void	O
adns__consistency	function
(	O
adns_state	pointer
ads	pointer
,	O
adns_query	pointer
qu	pointer
,	O
consistency_checks	enum
cc	enum
)	O
{	O
adns_query	pointer
search	pointer
;	O
switch	O
(	O
cc	enum
)	O
{	O
case	O
cc_user	int
:	O
break	O
;	O
case	O
cc_entex	int
:	O
if	O
(	O
!	O
(	O
ads	pointer
->	O
iflags	enum
&	O
adns_if_checkc_entex	int
)	O
)	O
return	O
;	O
break	O
;	O
case	O
cc_freq	int
:	O
if	O
(	O
(	O
ads	pointer
->	O
iflags	enum
&	O
adns_if_checkc_freq	int
)	O
!=	O
adns_if_checkc_freq	int
)	O
return	O
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
checkc_global	function
(	O
ads	pointer
)	O
;	O
checkc_queue_udpw	function
(	O
ads	pointer
)	O
;	O
checkc_queue_tcpw	function
(	O
ads	pointer
)	O
;	O
checkc_queue_childw	function
(	O
ads	pointer
)	O
;	O
checkc_queue_output	function
(	O
ads	pointer
)	O
;	O
if	O
(	O
qu	pointer
)	O
{	O
switch	O
(	O
qu	pointer
->	O
state	pointer
)	O
{	O
case	O
query_tosend	int
:	O
DLIST_ASSERTON	O
(	O
qu	pointer
,	O
search	pointer
,	O
ads	pointer
->	O
udpw	struct
,	O
)	O
;	O
break	O
;	O
case	O
query_tcpw	int
:	O
DLIST_ASSERTON	O
(	O
qu	pointer
,	O
search	pointer
,	O
ads	pointer
->	O
tcpw	struct
,	O
)	O
;	O
break	O
;	O
case	O
query_childw	int
:	O
DLIST_ASSERTON	O
(	O
qu	pointer
,	O
search	pointer
,	O
ads	pointer
->	O
childw	struct
,	O
)	O
;	O
break	O
;	O
case	O
query_done	int
:	O
DLIST_ASSERTON	O
(	O
qu	pointer
,	O
search	pointer
,	O
ads	pointer
->	O
output	struct
,	O
)	O
;	O
break	O
;	O
default	O
:	O
assert	O
(	O
!	O
"specific query state"	pointer
)	O
;	O
}	O
}	O
}	O
