static	O
CHAR_T	char
*	O
memcpy_lowcase	function
(	O
CHAR_T	char
*	O
dest	pointer
,	O
const	O
CHAR_T	char
*	O
src	pointer
,	O
size_t	long
len	long
LOCALE_PARAM_PROTO	O
)	O
{	O
while	O
(	O
len	long
--	O
>	O
0	int
)	O
dest	pointer
[	O
len	long
]	O
=	O
TOLOWER	O
(	O
(	O
UCHAR_T	O
)	O
src	pointer
[	O
len	long
]	O
,	O
loc	O
)	O
;	O
return	O
dest	pointer
;	O
}	O
static	O
CHAR_T	char
*	O
memcpy_uppcase	function
(	O
CHAR_T	char
*	O
dest	pointer
,	O
const	O
CHAR_T	char
*	O
src	pointer
,	O
size_t	long
len	long
LOCALE_PARAM_PROTO	O
)	O
{	O
while	O
(	O
len	long
--	O
>	O
0	int
)	O
dest	pointer
[	O
len	long
]	O
=	O
TOUPPER	O
(	O
(	O
UCHAR_T	O
)	O
src	pointer
[	O
len	long
]	O
,	O
loc	O
)	O
;	O
return	O
dest	pointer
;	O
}	O
__inline__	O
static	O
int	O
iso_week_days	function
(	O
int	O
yday	int
,	O
int	O
wday	int
)	O
{	O
int	O
big_enough_multiple_of_7	int
=	O
(	O
-	O
YDAY_MINIMUM	O
/	O
7	int
+	O
2	int
)	O
*	O
7	int
;	O
return	O
(	O
yday	int
-	O
(	O
yday	int
-	O
wday	int
+	O
ISO_WEEK1_WDAY	int
+	O
big_enough_multiple_of_7	int
)	O
%	O
7	int
+	O
ISO_WEEK1_WDAY	int
-	O
ISO_WEEK_START_WDAY	int
)	O
;	O
}	O
static	O
size_t	long
strftime_case_	function
(	O
bool	bool
upcase	bool
,	O
STREAM_OR_CHAR_T	O
*	O
s	pointer
,	O
STRFTIME_ARG	O
(	O
size_t	long
maxsize	long
)	O
const	O
CHAR_T	char
*	O
format	pointer
,	O
const	O
struct	O
tm	struct
*	O
tp	pointer
extra_args_spec	O
LOCALE_PARAM_PROTO	O
)	O
{	O
int	O
hour12	int
=	O
tp	pointer
->	O
tm_hour	int
;	O
const	O
char	O
*	O
zone	pointer
;	O
size_t	long
i	long
=	O
0	int
;	O
STREAM_OR_CHAR_T	O
*	O
p	pointer
=	O
s	pointer
;	O
const	O
CHAR_T	char
*	O
f	pointer
;	O
struct	O
tm	struct
copy	struct
=	O
*	O
tp	pointer
;	O
tp	pointer
=	O
&	O
copy	struct
;	O
zone	pointer
=	O
NULL	O
;	O
zone	pointer
=	O
(	O
const	O
char	O
*	O
)	O
tp	pointer
->	O
tm_zone	pointer
;	O
if	O
(	O
hour12	int
>	O
12	int
)	O
hour12	int
-=	O
12	int
;	O
else	O
if	O
(	O
hour12	int
==	O
0	int
)	O
hour12	int
=	O
12	int
;	O
for	O
(	O
f	pointer
=	O
format	pointer
;	O
*	O
f	pointer
!=	O
'\0'	O
;	O
++	O
f	pointer
)	O
{	O
int	O
pad	int
=	O
0	int
;	O
int	O
modifier	int
;	O
int	O
digits	int
=	O
0	int
;	O
int	O
number_value	int
;	O
unsigned	O
int	O
u_number_value	int
;	O
bool	bool
negative_number	bool
;	O
bool	bool
always_output_a_sign	bool
;	O
int	O
tz_colon_mask	int
;	O
const	O
CHAR_T	char
*	O
subfmt	pointer
;	O
CHAR_T	char
sign_char	char
;	O
CHAR_T	char
*	O
bufp	pointer
;	O
CHAR_T	char
buf	array
[	O
1	int
+	O
2	int
+	O
(	O
sizeof	O
(	O
int	O
)	O
<	O
sizeof	O
(	O
time_t	long
)	O
?	O
INT_STRLEN_BOUND	O
(	O
time_t	long
)	O
:	O
INT_STRLEN_BOUND	O
(	O
int	O
)	O
)	O
]	O
;	O
int	O
width	int
=	O
-	O
1	int
;	O
bool	bool
to_lowcase	bool
=	O
false	int
;	O
bool	bool
to_uppcase	bool
=	O
upcase	bool
;	O
size_t	long
colons	long
;	O
bool	bool
change_case	bool
=	O
false	int
;	O
int	O
format_char	int
;	O
if	O
(	O
*	O
f	pointer
!=	O
L_	O
(	O
'%'	O
)	O
)	O
{	O
add1	O
(	O
*	O
f	pointer
)	O
;	O
continue	O
;	O
}	O
while	O
(	O
1	int
)	O
{	O
switch	O
(	O
*	O
++	O
f	pointer
)	O
{	O
case	O
L_	O
(	O
'_'	O
)	O
:	O
case	O
L_	O
(	O
'-'	O
)	O
:	O
case	O
L_	O
(	O
'0'	O
)	O
:	O
pad	int
=	O
*	O
f	pointer
;	O
continue	O
;	O
case	O
L_	O
(	O
'^'	O
)	O
:	O
to_uppcase	bool
=	O
true	int
;	O
continue	O
;	O
case	O
L_	O
(	O
'#'	O
)	O
:	O
change_case	bool
=	O
true	int
;	O
continue	O
;	O
default	O
:	O
break	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
ISDIGIT	O
(	O
*	O
f	pointer
)	O
)	O
{	O
width	int
=	O
0	int
;	O
do	O
{	O
if	O
(	O
width	int
>	O
INT_MAX	O
/	O
10	int
||	O
(	O
width	int
==	O
INT_MAX	O
/	O
10	int
&&	O
*	O
f	pointer
-	O
L_	O
(	O
'0'	O
)	O
>	O
INT_MAX	O
%	O
10	int
)	O
)	O
width	int
=	O
INT_MAX	O
;	O
else	O
{	O
width	int
*=	O
10	int
;	O
width	int
+=	O
*	O
f	pointer
-	O
L_	O
(	O
'0'	O
)	O
;	O
}	O
++	O
f	pointer
;	O
}	O
while	O
(	O
ISDIGIT	O
(	O
*	O
f	pointer
)	O
)	O
;	O
}	O
switch	O
(	O
*	O
f	pointer
)	O
{	O
case	O
L_	O
(	O
'E'	O
)	O
:	O
case	O
L_	O
(	O
'O'	O
)	O
:	O
modifier	int
=	O
*	O
f	pointer
++	O
;	O
break	O
;	O
default	O
:	O
modifier	int
=	O
0	int
;	O
break	O
;	O
}	O
format_char	int
=	O
*	O
f	pointer
;	O
switch	O
(	O
format_char	int
)	O
{	O
case	O
L_	O
(	O
'%'	O
)	O
:	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
add1	O
(	O
*	O
f	pointer
)	O
;	O
break	O
;	O
case	O
L_	O
(	O
'a'	O
)	O
:	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
if	O
(	O
change_case	bool
)	O
{	O
to_uppcase	bool
=	O
true	int
;	O
to_lowcase	bool
=	O
false	int
;	O
}	O
goto	O
underlying_strftime	O
;	O
case	O
'A'	O
:	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
if	O
(	O
change_case	bool
)	O
{	O
to_uppcase	bool
=	O
true	int
;	O
to_lowcase	bool
=	O
false	int
;	O
}	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'b'	O
)	O
:	O
case	O
L_	O
(	O
'h'	O
)	O
:	O
if	O
(	O
change_case	bool
)	O
{	O
to_uppcase	bool
=	O
true	int
;	O
to_lowcase	bool
=	O
false	int
;	O
}	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'B'	O
)	O
:	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
if	O
(	O
change_case	bool
)	O
{	O
to_uppcase	bool
=	O
true	int
;	O
to_lowcase	bool
=	O
false	int
;	O
}	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'c'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'O'	O
)	O
)	O
goto	O
bad_format	O
;	O
goto	O
underlying_strftime	O
;	O
subformat	O
:	O
{	O
size_t	long
len	long
=	O
strftime_case_	function
(	O
to_uppcase	bool
,	O
NULL	O
,	O
STRFTIME_ARG	O
(	O
(	O
size_t	long
)	O
-	O
1	int
)	O
subfmt	pointer
,	O
tp	pointer
extra_args	O
LOCALE_ARG	O
)	O
;	O
add	O
(	O
len	long
,	O
strftime_case_	function
(	O
to_uppcase	bool
,	O
p	pointer
,	O
STRFTIME_ARG	O
(	O
maxsize	long
-	O
i	long
)	O
subfmt	pointer
,	O
tp	pointer
extra_args	O
LOCALE_ARG	O
)	O
)	O
;	O
}	O
break	O
;	O
underlying_strftime	O
:	O
{	O
char	O
ufmt	array
[	O
5	int
]	O
;	O
char	O
*	O
u	pointer
=	O
ufmt	array
;	O
char	O
ubuf	array
[	O
1024	int
]	O
;	O
size_t	long
len	long
;	O
*	O
u	pointer
++	O
=	O
' '	O
;	O
*	O
u	pointer
++	O
=	O
'%'	O
;	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
*	O
u	pointer
++	O
=	O
modifier	int
;	O
*	O
u	pointer
++	O
=	O
format_char	int
;	O
*	O
u	pointer
=	O
'\0'	O
;	O
len	long
=	O
strftime	function
(	O
ubuf	array
,	O
sizeof	O
ubuf	array
,	O
ufmt	array
,	O
tp	pointer
)	O
;	O
if	O
(	O
len	long
!=	O
0	int
)	O
cpy	O
(	O
len	long
-	O
1	int
,	O
ubuf	array
+	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
L_	O
(	O
'C'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'O'	O
)	O
)	O
goto	O
bad_format	O
;	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
{	O
goto	O
underlying_strftime	O
;	O
}	O
{	O
int	O
century	int
=	O
tp	pointer
->	O
tm_year	int
/	O
100	int
+	O
TM_YEAR_BASE	int
/	O
100	int
;	O
century	int
-=	O
tp	pointer
->	O
tm_year	int
%	O
100	int
<	O
0	int
&&	O
0	int
<	O
century	int
;	O
DO_SIGNED_NUMBER	O
(	O
2	int
,	O
tp	pointer
->	O
tm_year	int
<	O
-	O
TM_YEAR_BASE	int
,	O
century	int
)	O
;	O
}	O
case	O
L_	O
(	O
'x'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'O'	O
)	O
)	O
goto	O
bad_format	O
;	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'D'	O
)	O
:	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
subfmt	pointer
=	O
L_	O
(	O
"%m/%d/%y"	pointer
)	O
;	O
goto	O
subformat	O
;	O
case	O
L_	O
(	O
'd'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
tp	pointer
->	O
tm_mday	int
)	O
;	O
case	O
L_	O
(	O
'e'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER_SPACEPAD	O
(	O
2	int
,	O
tp	pointer
->	O
tm_mday	int
)	O
;	O
do_tz_offset	O
:	O
always_output_a_sign	bool
=	O
true	int
;	O
goto	O
do_number_body	O
;	O
do_number_spacepad	O
:	O
if	O
(	O
pad	int
!=	O
L_	O
(	O
'0'	O
)	O
&&	O
pad	int
!=	O
L_	O
(	O
'-'	O
)	O
)	O
pad	int
=	O
L_	O
(	O
'_'	O
)	O
;	O
do_number	O
:	O
negative_number	bool
=	O
number_value	int
<	O
0	int
;	O
u_number_value	int
=	O
number_value	int
;	O
do_signed_number	O
:	O
always_output_a_sign	bool
=	O
false	int
;	O
tz_colon_mask	int
=	O
0	int
;	O
do_number_body	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'O'	O
)	O
&&	O
!	O
negative_number	bool
)	O
{	O
goto	O
underlying_strftime	O
;	O
}	O
bufp	pointer
=	O
buf	array
+	O
sizeof	O
(	O
buf	array
)	O
/	O
sizeof	O
(	O
buf	array
[	O
0	int
]	O
)	O
;	O
if	O
(	O
negative_number	bool
)	O
u_number_value	int
=	O
-	O
u_number_value	int
;	O
do	O
{	O
if	O
(	O
tz_colon_mask	int
&	O
1	int
)	O
*	O
--	O
bufp	pointer
=	O
':'	O
;	O
tz_colon_mask	int
>>=	O
1	int
;	O
*	O
--	O
bufp	pointer
=	O
u_number_value	int
%	O
10	int
+	O
L_	O
(	O
'0'	O
)	O
;	O
u_number_value	int
/=	O
10	int
;	O
}	O
while	O
(	O
u_number_value	int
!=	O
0	int
||	O
tz_colon_mask	int
!=	O
0	int
)	O
;	O
do_number_sign_and_padding	O
:	O
if	O
(	O
digits	int
<	O
width	int
)	O
digits	int
=	O
width	int
;	O
sign_char	char
=	O
(	O
negative_number	bool
?	O
L_	O
(	O
'-'	O
)	O
:	O
always_output_a_sign	bool
?	O
L_	O
(	O
'+'	O
)	O
:	O
0	int
)	O
;	O
if	O
(	O
pad	int
==	O
L_	O
(	O
'-'	O
)	O
)	O
{	O
if	O
(	O
sign_char	char
)	O
add1	O
(	O
sign_char	char
)	O
;	O
}	O
else	O
{	O
int	O
padding	int
=	O
digits	int
-	O
(	O
buf	array
+	O
(	O
sizeof	O
(	O
buf	array
)	O
/	O
sizeof	O
(	O
buf	array
[	O
0	int
]	O
)	O
)	O
-	O
bufp	pointer
)	O
-	O
!	O
!	O
sign_char	char
;	O
if	O
(	O
padding	int
>	O
0	int
)	O
{	O
if	O
(	O
pad	int
==	O
L_	O
(	O
'_'	O
)	O
)	O
{	O
if	O
(	O
(	O
size_t	long
)	O
padding	int
>=	O
maxsize	long
-	O
i	long
)	O
return	O
0	int
;	O
if	O
(	O
p	pointer
)	O
memset_space	O
(	O
p	pointer
,	O
padding	int
)	O
;	O
i	long
+=	O
padding	int
;	O
width	int
=	O
width	int
>	O
padding	int
?	O
width	int
-	O
padding	int
:	O
0	int
;	O
if	O
(	O
sign_char	char
)	O
add1	O
(	O
sign_char	char
)	O
;	O
}	O
else	O
{	O
if	O
(	O
(	O
size_t	long
)	O
digits	int
>=	O
maxsize	long
-	O
i	long
)	O
return	O
0	int
;	O
if	O
(	O
sign_char	char
)	O
add1	O
(	O
sign_char	char
)	O
;	O
if	O
(	O
p	pointer
)	O
memset_zero	O
(	O
p	pointer
,	O
padding	int
)	O
;	O
i	long
+=	O
padding	int
;	O
width	int
=	O
0	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
sign_char	char
)	O
add1	O
(	O
sign_char	char
)	O
;	O
}	O
}	O
cpy	O
(	O
buf	array
+	O
sizeof	O
(	O
buf	array
)	O
/	O
sizeof	O
(	O
buf	array
[	O
0	int
]	O
)	O
-	O
bufp	pointer
,	O
bufp	pointer
)	O
;	O
break	O
;	O
case	O
L_	O
(	O
'F'	O
)	O
:	O
if	O
(	O
modifier	int
!=	O
0	int
)	O
goto	O
bad_format	O
;	O
subfmt	pointer
=	O
L_	O
(	O
"%Y-%m-%d"	pointer
)	O
;	O
goto	O
subformat	O
;	O
case	O
L_	O
(	O
'H'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
tp	pointer
->	O
tm_hour	int
)	O
;	O
case	O
L_	O
(	O
'I'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
hour12	int
)	O
;	O
case	O
L_	O
(	O
'k'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER_SPACEPAD	O
(	O
2	int
,	O
tp	pointer
->	O
tm_hour	int
)	O
;	O
case	O
L_	O
(	O
'l'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER_SPACEPAD	O
(	O
2	int
,	O
hour12	int
)	O
;	O
case	O
L_	O
(	O
'j'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_SIGNED_NUMBER	O
(	O
3	int
,	O
tp	pointer
->	O
tm_yday	int
<	O
-	O
1	int
,	O
tp	pointer
->	O
tm_yday	int
+	O
1U	int
)	O
;	O
case	O
L_	O
(	O
'M'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
tp	pointer
->	O
tm_min	int
)	O
;	O
case	O
L_	O
(	O
'm'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_SIGNED_NUMBER	O
(	O
2	int
,	O
tp	pointer
->	O
tm_mon	int
<	O
-	O
1	int
,	O
tp	pointer
->	O
tm_mon	int
+	O
1U	int
)	O
;	O
case	O
L_	O
(	O
'N'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
number_value	int
=	O
ns	int
;	O
if	O
(	O
width	int
==	O
-	O
1	int
)	O
width	int
=	O
9	int
;	O
else	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
width	int
;	O
j	int
<	O
9	int
;	O
j	int
++	O
)	O
number_value	int
/=	O
10	int
;	O
}	O
DO_NUMBER	O
(	O
width	int
,	O
number_value	int
)	O
;	O
case	O
L_	O
(	O
'n'	O
)	O
:	O
add1	O
(	O
L_	O
(	O
'\n'	O
)	O
)	O
;	O
break	O
;	O
case	O
L_	O
(	O
'P'	O
)	O
:	O
to_lowcase	bool
=	O
true	int
;	O
format_char	int
=	O
L_	O
(	O
'p'	O
)	O
;	O
case	O
L_	O
(	O
'p'	O
)	O
:	O
if	O
(	O
change_case	bool
)	O
{	O
to_uppcase	bool
=	O
false	int
;	O
to_lowcase	bool
=	O
true	int
;	O
}	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'R'	O
)	O
:	O
subfmt	pointer
=	O
L_	O
(	O
"%H:%M"	pointer
)	O
;	O
goto	O
subformat	O
;	O
case	O
L_	O
(	O
'r'	O
)	O
:	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'S'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
tp	pointer
->	O
tm_sec	int
)	O
;	O
case	O
L_	O
(	O
's'	O
)	O
:	O
{	O
struct	O
tm	struct
ltm	struct
;	O
time_t	long
t	long
;	O
ltm	struct
=	O
*	O
tp	pointer
;	O
t	long
=	O
mktime	function
(	O
&	O
ltm	struct
)	O
;	O
bufp	pointer
=	O
buf	array
+	O
sizeof	O
(	O
buf	array
)	O
/	O
sizeof	O
(	O
buf	array
[	O
0	int
]	O
)	O
;	O
negative_number	bool
=	O
t	long
<	O
0	int
;	O
do	O
{	O
int	O
d	int
=	O
t	long
%	O
10	int
;	O
t	long
/=	O
10	int
;	O
*	O
--	O
bufp	pointer
=	O
(	O
negative_number	bool
?	O
-	O
d	int
:	O
d	int
)	O
+	O
L_	O
(	O
'0'	O
)	O
;	O
}	O
while	O
(	O
t	long
!=	O
0	int
)	O
;	O
digits	int
=	O
1	int
;	O
always_output_a_sign	bool
=	O
false	int
;	O
goto	O
do_number_sign_and_padding	O
;	O
}	O
case	O
L_	O
(	O
'X'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'O'	O
)	O
)	O
goto	O
bad_format	O
;	O
goto	O
underlying_strftime	O
;	O
case	O
L_	O
(	O
'T'	O
)	O
:	O
subfmt	pointer
=	O
L_	O
(	O
"%H:%M:%S"	pointer
)	O
;	O
goto	O
subformat	O
;	O
case	O
L_	O
(	O
't'	O
)	O
:	O
add1	O
(	O
L_	O
(	O
'\t'	O
)	O
)	O
;	O
break	O
;	O
case	O
L_	O
(	O
'u'	O
)	O
:	O
DO_NUMBER	O
(	O
1	int
,	O
(	O
tp	pointer
->	O
tm_wday	int
-	O
1	int
+	O
7	int
)	O
%	O
7	int
+	O
1	int
)	O
;	O
case	O
L_	O
(	O
'U'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
(	O
tp	pointer
->	O
tm_yday	int
-	O
tp	pointer
->	O
tm_wday	int
+	O
7	int
)	O
/	O
7	int
)	O
;	O
case	O
L_	O
(	O
'V'	O
)	O
:	O
case	O
L_	O
(	O
'g'	O
)	O
:	O
case	O
L_	O
(	O
'G'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
{	O
int	O
year	int
=	O
(	O
tp	pointer
->	O
tm_year	int
+	O
(	O
tp	pointer
->	O
tm_year	int
<	O
0	int
?	O
TM_YEAR_BASE	int
%	O
400	int
:	O
TM_YEAR_BASE	int
%	O
400	int
-	O
400	int
)	O
)	O
;	O
int	O
year_adjust	int
=	O
0	int
;	O
int	O
days	int
=	O
iso_week_days	function
(	O
tp	pointer
->	O
tm_yday	int
,	O
tp	pointer
->	O
tm_wday	int
)	O
;	O
if	O
(	O
days	int
<	O
0	int
)	O
{	O
year_adjust	int
=	O
-	O
1	int
;	O
days	int
=	O
iso_week_days	function
(	O
tp	pointer
->	O
tm_yday	int
+	O
(	O
365	int
+	O
__isleap	O
(	O
year	int
-	O
1	int
)	O
)	O
,	O
tp	pointer
->	O
tm_wday	int
)	O
;	O
}	O
else	O
{	O
int	O
d	int
=	O
iso_week_days	function
(	O
tp	pointer
->	O
tm_yday	int
-	O
(	O
365	int
+	O
__isleap	O
(	O
year	int
)	O
)	O
,	O
tp	pointer
->	O
tm_wday	int
)	O
;	O
if	O
(	O
0	int
<=	O
d	int
)	O
{	O
year_adjust	int
=	O
1	int
;	O
days	int
=	O
d	int
;	O
}	O
}	O
switch	O
(	O
*	O
f	pointer
)	O
{	O
case	O
L_	O
(	O
'g'	O
)	O
:	O
{	O
int	O
yy	int
=	O
(	O
tp	pointer
->	O
tm_year	int
%	O
100	int
+	O
year_adjust	int
)	O
%	O
100	int
;	O
DO_NUMBER	O
(	O
2	int
,	O
(	O
0	int
<=	O
yy	int
?	O
yy	int
:	O
tp	pointer
->	O
tm_year	int
<	O
-	O
TM_YEAR_BASE	int
-	O
year_adjust	int
?	O
-	O
yy	int
:	O
yy	int
+	O
100	int
)	O
)	O
;	O
}	O
case	O
L_	O
(	O
'G'	O
)	O
:	O
DO_SIGNED_NUMBER	O
(	O
4	int
,	O
tp	pointer
->	O
tm_year	int
<	O
-	O
TM_YEAR_BASE	int
-	O
year_adjust	int
,	O
(	O
tp	pointer
->	O
tm_year	int
+	O
(	O
unsigned	O
int	O
)	O
TM_YEAR_BASE	int
+	O
year_adjust	int
)	O
)	O
;	O
default	O
:	O
DO_NUMBER	O
(	O
2	int
,	O
days	int
/	O
7	int
+	O
1	int
)	O
;	O
}	O
}	O
case	O
L_	O
(	O
'W'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
2	int
,	O
(	O
tp	pointer
->	O
tm_yday	int
-	O
(	O
tp	pointer
->	O
tm_wday	int
-	O
1	int
+	O
7	int
)	O
%	O
7	int
+	O
7	int
)	O
/	O
7	int
)	O
;	O
case	O
L_	O
(	O
'w'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_NUMBER	O
(	O
1	int
,	O
tp	pointer
->	O
tm_wday	int
)	O
;	O
case	O
L_	O
(	O
'Y'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
'E'	O
)	O
{	O
goto	O
underlying_strftime	O
;	O
}	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'O'	O
)	O
)	O
goto	O
bad_format	O
;	O
DO_SIGNED_NUMBER	O
(	O
4	int
,	O
tp	pointer
->	O
tm_year	int
<	O
-	O
TM_YEAR_BASE	int
,	O
tp	pointer
->	O
tm_year	int
+	O
(	O
unsigned	O
int	O
)	O
TM_YEAR_BASE	int
)	O
;	O
case	O
L_	O
(	O
'y'	O
)	O
:	O
if	O
(	O
modifier	int
==	O
L_	O
(	O
'E'	O
)	O
)	O
{	O
goto	O
underlying_strftime	O
;	O
}	O
{	O
int	O
yy	int
=	O
tp	pointer
->	O
tm_year	int
%	O
100	int
;	O
if	O
(	O
yy	int
<	O
0	int
)	O
yy	int
=	O
tp	pointer
->	O
tm_year	int
<	O
-	O
TM_YEAR_BASE	int
?	O
-	O
yy	int
:	O
yy	int
+	O
100	int
;	O
DO_NUMBER	O
(	O
2	int
,	O
yy	int
)	O
;	O
}	O
case	O
L_	O
(	O
'Z'	O
)	O
:	O
if	O
(	O
change_case	bool
)	O
{	O
to_uppcase	bool
=	O
false	int
;	O
to_lowcase	bool
=	O
true	int
;	O
}	O
if	O
(	O
!	O
zone	pointer
)	O
zone	pointer
=	O
""	pointer
;	O
cpy	O
(	O
strlen	function
(	O
zone	pointer
)	O
,	O
zone	pointer
)	O
;	O
break	O
;	O
case	O
L_	O
(	O
':'	O
)	O
:	O
for	O
(	O
colons	long
=	O
1	int
;	O
f	pointer
[	O
colons	long
]	O
==	O
L_	O
(	O
':'	O
)	O
;	O
colons	long
++	O
)	O
continue	O
;	O
if	O
(	O
f	pointer
[	O
colons	long
]	O
!=	O
L_	O
(	O
'z'	O
)	O
)	O
goto	O
bad_format	O
;	O
f	pointer
+=	O
colons	long
;	O
goto	O
do_z_conversion	O
;	O
case	O
L_	O
(	O
'z'	O
)	O
:	O
colons	long
=	O
0	int
;	O
do_z_conversion	O
:	O
if	O
(	O
tp	pointer
->	O
tm_isdst	int
<	O
0	int
)	O
break	O
;	O
{	O
int	O
diff	int
;	O
int	O
hour_diff	int
;	O
int	O
min_diff	int
;	O
int	O
sec_diff	int
;	O
diff	int
=	O
tp	pointer
->	O
tm_gmtoff	long
;	O
hour_diff	int
=	O
diff	int
/	O
60	int
/	O
60	int
;	O
min_diff	int
=	O
diff	int
/	O
60	int
%	O
60	int
;	O
sec_diff	int
=	O
diff	int
%	O
60	int
;	O
switch	O
(	O
colons	long
)	O
{	O
case	O
0	int
:	O
DO_TZ_OFFSET	O
(	O
5	int
,	O
diff	int
<	O
0	int
,	O
0	int
,	O
hour_diff	int
*	O
100	int
+	O
min_diff	int
)	O
;	O
case	O
1	int
:	O
tz_hh_mm	O
:	O
DO_TZ_OFFSET	O
(	O
6	int
,	O
diff	int
<	O
0	int
,	O
04	int
,	O
hour_diff	int
*	O
100	int
+	O
min_diff	int
)	O
;	O
case	O
2	int
:	O
tz_hh_mm_ss	O
:	O
DO_TZ_OFFSET	O
(	O
9	int
,	O
diff	int
<	O
0	int
,	O
024	int
,	O
hour_diff	int
*	O
10000	int
+	O
min_diff	int
*	O
100	int
+	O
sec_diff	int
)	O
;	O
case	O
3	int
:	O
if	O
(	O
sec_diff	int
!=	O
0	int
)	O
goto	O
tz_hh_mm_ss	O
;	O
if	O
(	O
min_diff	int
!=	O
0	int
)	O
goto	O
tz_hh_mm	O
;	O
DO_TZ_OFFSET	O
(	O
3	int
,	O
diff	int
<	O
0	int
,	O
0	int
,	O
hour_diff	int
)	O
;	O
default	O
:	O
goto	O
bad_format	O
;	O
}	O
}	O
case	O
L_	O
(	O
'\0'	O
)	O
:	O
--	O
f	pointer
;	O
default	O
:	O
bad_format	O
:	O
{	O
int	O
flen	int
;	O
for	O
(	O
flen	int
=	O
1	int
;	O
f	pointer
[	O
1	int
-	O
flen	int
]	O
!=	O
L_	O
(	O
'%'	O
)	O
;	O
flen	int
++	O
)	O
continue	O
;	O
cpy	O
(	O
flen	int
,	O
&	O
f	pointer
[	O
1	int
-	O
flen	int
]	O
)	O
;	O
}	O
break	O
;	O
}	O
}	O
if	O
(	O
p	pointer
&&	O
maxsize	long
!=	O
0	int
)	O
*	O
p	pointer
=	O
L_	O
(	O
'\0'	O
)	O
;	O
return	O
i	long
;	O
}	O
size_t	long
my_strftime	O
(	O
STREAM_OR_CHAR_T	O
*	O
s	pointer
,	O
STRFTIME_ARG	O
(	O
size_t	long
maxsize	long
)	O
const	O
CHAR_T	char
*	O
format	pointer
,	O
const	O
struct	O
tm	struct
*	O
tp	pointer
extra_args_spec	O
LOCALE_PARAM_PROTO	O
)	O
{	O
return	O
strftime_case_	function
(	O
false	int
,	O
s	pointer
,	O
STRFTIME_ARG	O
(	O
maxsize	long
)	O
format	pointer
,	O
tp	pointer
extra_args	O
LOCALE_ARG	O
)	O
;	O
}	O
