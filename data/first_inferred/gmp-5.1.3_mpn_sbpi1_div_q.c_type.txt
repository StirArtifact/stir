mp_limb_t	long
mpn_sbpi1_div_q	O
(	O
mp_ptr	pointer
qp	pointer
,	O
mp_ptr	pointer
np	pointer
,	O
mp_size_t	long
nn	long
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
dn	long
,	O
mp_limb_t	long
dinv	long
)	O
{	O
mp_limb_t	long
qh	long
;	O
mp_size_t	long
qn	long
,	O
i	long
;	O
mp_limb_t	long
n1	long
,	O
n0	long
;	O
mp_limb_t	long
d1	long
,	O
d0	long
;	O
mp_limb_t	long
cy	long
,	O
cy1	long
;	O
mp_limb_t	long
q	int
;	O
mp_limb_t	long
flag	long
;	O
mp_size_t	long
dn_orig	long
=	O
dn	long
;	O
mp_srcptr	pointer
dp_orig	pointer
=	O
dp	pointer
;	O
mp_ptr	pointer
np_orig	pointer
=	O
np	pointer
;	O
ASSERT	O
(	O
dn	long
>	O
2	int
)	O
;	O
ASSERT	O
(	O
nn	long
>=	O
dn	long
)	O
;	O
ASSERT	O
(	O
(	O
dp	pointer
[	O
dn	long
-	O
1	int
]	O
&	O
GMP_NUMB_HIGHBIT	O
)	O
!=	O
0	int
)	O
;	O
np	pointer
+=	O
nn	long
;	O
qn	long
=	O
nn	long
-	O
dn	long
;	O
if	O
(	O
qn	long
+	O
1	int
<	O
dn	long
)	O
{	O
dp	pointer
+=	O
dn	long
-	O
(	O
qn	long
+	O
1	int
)	O
;	O
dn	long
=	O
qn	long
+	O
1	int
;	O
}	O
qh	long
=	O
mpn_cmp	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
)	O
>=	O
0	int
;	O
if	O
(	O
qh	long
!=	O
0	int
)	O
mpn_sub_n	O
(	O
np	pointer
-	O
dn	long
,	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
)	O
;	O
qp	pointer
+=	O
qn	long
;	O
dn	long
-=	O
2	int
;	O
d1	long
=	O
dp	pointer
[	O
dn	long
+	O
1	int
]	O
;	O
d0	long
=	O
dp	pointer
[	O
dn	long
+	O
0	int
]	O
;	O
np	pointer
-=	O
2	int
;	O
n1	long
=	O
np	pointer
[	O
1	int
]	O
;	O
for	O
(	O
i	long
=	O
qn	long
-	O
(	O
dn	long
+	O
2	int
)	O
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
{	O
np	pointer
--	O
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
==	O
d1	long
)	O
&&	O
np	pointer
[	O
1	int
]	O
==	O
d0	long
)	O
{	O
q	int
=	O
GMP_NUMB_MASK	O
;	O
mpn_submul_1	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
2	int
,	O
q	int
)	O
;	O
n1	long
=	O
np	pointer
[	O
1	int
]	O
;	O
}	O
else	O
{	O
udiv_qr_3by2	O
(	O
q	int
,	O
n1	long
,	O
n0	long
,	O
n1	long
,	O
np	pointer
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
,	O
d1	long
,	O
d0	long
,	O
dinv	long
)	O
;	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
,	O
q	int
)	O
;	O
cy1	long
=	O
n0	long
<	O
cy	long
;	O
n0	long
=	O
(	O
n0	long
-	O
cy	long
)	O
&	O
GMP_NUMB_MASK	O
;	O
cy	long
=	O
n1	long
<	O
cy1	long
;	O
n1	long
-=	O
cy1	long
;	O
np	pointer
[	O
0	int
]	O
=	O
n0	long
;	O
if	O
(	O
UNLIKELY	O
(	O
cy	long
!=	O
0	int
)	O
)	O
{	O
n1	long
+=	O
d1	long
+	O
mpn_add_n	O
(	O
np	pointer
-	O
dn	long
,	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
1	int
)	O
;	O
q	int
--	O
;	O
}	O
}	O
*	O
--	O
qp	pointer
=	O
q	int
;	O
}	O
flag	long
=	O
~	O
CNST_LIMB	O
(	O
0	int
)	O
;	O
if	O
(	O
dn	long
>=	O
0	int
)	O
{	O
for	O
(	O
i	long
=	O
dn	long
;	O
i	long
>	O
0	int
;	O
i	long
--	O
)	O
{	O
np	pointer
--	O
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
>=	O
(	O
d1	long
&	O
flag	long
)	O
)	O
)	O
{	O
q	int
=	O
GMP_NUMB_MASK	O
;	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
2	int
,	O
q	int
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
!=	O
cy	long
)	O
)	O
{	O
if	O
(	O
n1	long
<	O
(	O
cy	long
&	O
flag	long
)	O
)	O
{	O
q	int
--	O
;	O
mpn_add_n	O
(	O
np	pointer
-	O
dn	long
,	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
2	int
)	O
;	O
}	O
else	O
flag	long
=	O
0	int
;	O
}	O
n1	long
=	O
np	pointer
[	O
1	int
]	O
;	O
}	O
else	O
{	O
udiv_qr_3by2	O
(	O
q	int
,	O
n1	long
,	O
n0	long
,	O
n1	long
,	O
np	pointer
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
,	O
d1	long
,	O
d0	long
,	O
dinv	long
)	O
;	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
,	O
q	int
)	O
;	O
cy1	long
=	O
n0	long
<	O
cy	long
;	O
n0	long
=	O
(	O
n0	long
-	O
cy	long
)	O
&	O
GMP_NUMB_MASK	O
;	O
cy	long
=	O
n1	long
<	O
cy1	long
;	O
n1	long
-=	O
cy1	long
;	O
np	pointer
[	O
0	int
]	O
=	O
n0	long
;	O
if	O
(	O
UNLIKELY	O
(	O
cy	long
!=	O
0	int
)	O
)	O
{	O
n1	long
+=	O
d1	long
+	O
mpn_add_n	O
(	O
np	pointer
-	O
dn	long
,	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
1	int
)	O
;	O
q	int
--	O
;	O
}	O
}	O
*	O
--	O
qp	pointer
=	O
q	int
;	O
dn	long
--	O
;	O
dp	pointer
++	O
;	O
}	O
np	pointer
--	O
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
>=	O
(	O
d1	long
&	O
flag	long
)	O
)	O
)	O
{	O
q	int
=	O
GMP_NUMB_MASK	O
;	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
,	O
dp	pointer
,	O
2	int
,	O
q	int
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
!=	O
cy	long
)	O
)	O
{	O
if	O
(	O
n1	long
<	O
(	O
cy	long
&	O
flag	long
)	O
)	O
{	O
q	int
--	O
;	O
add_ssaaaa	O
(	O
np	pointer
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
,	O
np	pointer
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
,	O
dp	pointer
[	O
1	int
]	O
,	O
dp	pointer
[	O
0	int
]	O
)	O
;	O
}	O
else	O
flag	long
=	O
0	int
;	O
}	O
n1	long
=	O
np	pointer
[	O
1	int
]	O
;	O
}	O
else	O
{	O
udiv_qr_3by2	O
(	O
q	int
,	O
n1	long
,	O
n0	long
,	O
n1	long
,	O
np	pointer
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
,	O
d1	long
,	O
d0	long
,	O
dinv	long
)	O
;	O
np	pointer
[	O
0	int
]	O
=	O
n0	long
;	O
np	pointer
[	O
1	int
]	O
=	O
n1	long
;	O
}	O
*	O
--	O
qp	pointer
=	O
q	int
;	O
}	O
ASSERT_ALWAYS	O
(	O
np	pointer
[	O
1	int
]	O
==	O
n1	long
)	O
;	O
np	pointer
+=	O
2	int
;	O
dn	long
=	O
dn_orig	long
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
<	O
(	O
dn	long
&	O
flag	long
)	O
)	O
)	O
{	O
mp_limb_t	long
q	int
,	O
x	long
;	O
x	long
=	O
n1	long
;	O
if	O
(	O
dn	long
>	O
2	int
)	O
{	O
mp_limb_t	long
y	long
;	O
dp	pointer
=	O
dp_orig	pointer
;	O
if	O
(	O
qn	long
+	O
1	int
<	O
dn	long
)	O
{	O
dp	pointer
+=	O
dn	long
-	O
(	O
qn	long
+	O
1	int
)	O
;	O
dn	long
=	O
qn	long
+	O
1	int
;	O
}	O
y	long
=	O
np	pointer
[	O
-	O
2	int
]	O
;	O
for	O
(	O
i	long
=	O
dn	long
-	O
3	int
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
{	O
q	int
=	O
qp	pointer
[	O
i	long
]	O
;	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
-	O
(	O
dn	long
-	O
i	long
)	O
,	O
dp	pointer
,	O
dn	long
-	O
i	long
-	O
2	int
,	O
q	int
)	O
;	O
if	O
(	O
y	long
<	O
cy	long
)	O
{	O
if	O
(	O
x	long
==	O
0	int
)	O
{	O
cy	long
=	O
mpn_sub_1	O
(	O
qp	pointer
,	O
qp	pointer
,	O
qn	long
,	O
1	int
)	O
;	O
ASSERT_ALWAYS	O
(	O
cy	long
==	O
0	int
)	O
;	O
return	O
qh	long
-	O
cy	long
;	O
}	O
x	long
--	O
;	O
}	O
y	long
-=	O
cy	long
;	O
}	O
np	pointer
[	O
-	O
2	int
]	O
=	O
y	long
;	O
}	O
dn	long
=	O
dn_orig	long
;	O
if	O
(	O
qn	long
+	O
1	int
<	O
dn	long
)	O
{	O
dp	pointer
=	O
dp_orig	pointer
;	O
np	pointer
=	O
np_orig	pointer
;	O
if	O
(	O
qh	long
!=	O
0	int
)	O
{	O
cy	long
=	O
mpn_sub_n	O
(	O
np	pointer
+	O
qn	long
,	O
np	pointer
+	O
qn	long
,	O
dp	pointer
,	O
dn	long
-	O
(	O
qn	long
+	O
1	int
)	O
)	O
;	O
if	O
(	O
cy	long
!=	O
0	int
)	O
{	O
if	O
(	O
x	long
==	O
0	int
)	O
{	O
if	O
(	O
qn	long
!=	O
0	int
)	O
cy	long
=	O
mpn_sub_1	O
(	O
qp	pointer
,	O
qp	pointer
,	O
qn	long
,	O
1	int
)	O
;	O
return	O
qh	long
-	O
cy	long
;	O
}	O
x	long
--	O
;	O
}	O
}	O
if	O
(	O
qn	long
==	O
0	int
)	O
return	O
qh	long
;	O
for	O
(	O
i	long
=	O
dn	long
-	O
qn	long
-	O
2	int
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
{	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
+	O
i	long
,	O
qp	pointer
,	O
qn	long
,	O
dp	pointer
[	O
i	long
]	O
)	O
;	O
cy	long
=	O
mpn_sub_1	O
(	O
np	pointer
+	O
qn	long
+	O
i	long
,	O
np	pointer
+	O
qn	long
+	O
i	long
,	O
dn	long
-	O
qn	long
-	O
i	long
-	O
1	int
,	O
cy	long
)	O
;	O
if	O
(	O
cy	long
!=	O
0	int
)	O
{	O
if	O
(	O
x	long
==	O
0	int
)	O
{	O
cy	long
=	O
mpn_sub_1	O
(	O
qp	pointer
,	O
qp	pointer
,	O
qn	long
,	O
1	int
)	O
;	O
return	O
qh	long
;	O
}	O
x	long
--	O
;	O
}	O
}	O
}	O
}	O
return	O
qh	long
;	O
}	O
