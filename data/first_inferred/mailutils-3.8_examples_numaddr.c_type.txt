;	O
struct	O
val_ctr	struct
{	O
mu_header_t	pointer
hdr	pointer
;	O
size_t	long
limit	long
;	O
size_t	long
count	long
;	O
}	O
;	O
static	O
int	O
_count_items	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
char	O
*	O
name	pointer
=	O
item	pointer
;	O
struct	O
val_ctr	struct
*	O
vp	pointer
=	O
data	pointer
;	O
char	O
*	O
val	pointer
;	O
mu_address_t	pointer
addr	int
;	O
size_t	long
count	long
=	O
0	int
;	O
if	O
(	O
mu_header_aget_value	O
(	O
vp	pointer
->	O
hdr	pointer
,	O
name	pointer
,	O
&	O
val	pointer
)	O
)	O
return	O
0	int
;	O
if	O
(	O
mu_address_create	function
(	O
&	O
addr	int
,	O
val	pointer
)	O
==	O
0	int
)	O
{	O
mu_address_get_count	function
(	O
addr	int
,	O
&	O
count	long
)	O
;	O
mu_address_destroy	function
(	O
&	O
addr	int
)	O
;	O
vp	pointer
->	O
count	long
+=	O
count	long
;	O
}	O
free	function
(	O
val	pointer
)	O
;	O
return	O
vp	pointer
->	O
count	long
>=	O
vp	pointer
->	O
limit	long
;	O
}	O
static	O
int	O
numaddr_test	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
)	O
{	O
mu_sieve_value_t	struct
*	O
h	pointer
;	O
struct	O
val_ctr	struct
vc	struct
;	O
int	O
rc	int
;	O
h	pointer
=	O
mu_sieve_get_arg_untyped	function
(	O
mach	pointer
,	O
0	int
)	O
;	O
mu_sieve_get_arg	function
(	O
mach	pointer
,	O
1	int
,	O
SVT_NUMBER	int
,	O
&	O
vc	struct
.	O
limit	long
)	O
;	O
mu_message_get_header	function
(	O
mu_sieve_get_message	function
(	O
mach	pointer
)	O
,	O
&	O
vc	struct
.	O
hdr	pointer
)	O
;	O
vc	struct
.	O
count	long
=	O
0	int
;	O
rc	int
=	O
mu_sieve_vlist_do	function
(	O
mach	pointer
,	O
h	pointer
,	O
_count_items	function
,	O
&	O
vc	struct
)	O
;	O
if	O
(	O
mu_sieve_get_tag	function
(	O
mach	pointer
,	O
"under"	pointer
,	O
SVT_VOID	int
,	O
NULL	O
)	O
)	O
rc	int
=	O
!	O
rc	int
;	O
return	O
rc	int
;	O
}	O
static	O
mu_sieve_data_type	enum
numaddr_req_args	array
[	O
]	O
=	O
{	O
SVT_STRING_LIST	int
,	O
SVT_NUMBER	int
,	O
SVT_VOID	int
}	O
;	O
static	O
mu_sieve_tag_def_t	struct
numaddr_tags	array
[	O
]	O
=	O
{	O
{	O
"over"	pointer
,	O
SVT_VOID	int
}	O
,	O
{	O
"under"	pointer
,	O
SVT_VOID	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
static	O
mu_sieve_tag_group_t	struct
numaddr_tag_groups	array
[	O
]	O
=	O
{	O
{	O
numaddr_tags	array
,	O
NULL	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
int	O
SIEVE_EXPORT	O
(	O
numaddr	O
,	O
init	O
)	O
(	O
mu_sieve_machine_t	pointer
mach	pointer
)	O
{	O
mu_sieve_register_test	function
(	O
mach	pointer
,	O
"numaddr"	pointer
,	O
numaddr_test	function
,	O
numaddr_req_args	array
,	O
numaddr_tag_groups	array
,	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
