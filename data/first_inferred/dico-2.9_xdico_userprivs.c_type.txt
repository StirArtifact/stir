int	O
switch_to_privs	function
(	O
uid_t	int
uid	int
,	O
gid_t	int
gid	int
,	O
dico_list_t	pointer
retain_groups	pointer
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
gid_t	int
*	O
emptygidset	pointer
;	O
size_t	long
size	long
=	O
1	int
,	O
j	long
=	O
1	int
;	O
dico_iterator_t	pointer
itr	pointer
;	O
void	O
*	O
gp	pointer
;	O
_dico_libi18n_init	function
(	O
)	O
;	O
if	O
(	O
uid	int
==	O
0	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
_	O
(	O
"Refusing to run as root"	pointer
)	O
)	O
;	O
return	O
1	int
;	O
}	O
size	long
=	O
dico_list_count	function
(	O
retain_groups	pointer
)	O
;	O
size	long
++	O
;	O
emptygidset	pointer
=	O
xcalloc	function
(	O
size	long
,	O
sizeof	O
emptygidset	pointer
[	O
0	int
]	O
)	O
;	O
emptygidset	pointer
[	O
0	int
]	O
=	O
gid	int
?	O
gid	int
:	O
getegid	function
(	O
)	O
;	O
itr	pointer
=	O
dico_list_iterator	function
(	O
retain_groups	pointer
)	O
;	O
for	O
(	O
gp	pointer
=	O
dico_iterator_first	function
(	O
itr	pointer
)	O
;	O
gp	pointer
;	O
gp	pointer
=	O
dico_iterator_next	function
(	O
itr	pointer
)	O
)	O
emptygidset	pointer
[	O
j	long
++	O
]	O
=	O
*	O
(	O
gid_t	int
*	O
)	O
gp	pointer
;	O
dico_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
if	O
(	O
geteuid	function
(	O
)	O
==	O
0	int
&&	O
setgroups	function
(	O
j	long
,	O
emptygidset	pointer
)	O
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"setgroups(1, %lu) failed"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
emptygidset	pointer
[	O
0	int
]	O
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
free	function
(	O
emptygidset	pointer
)	O
;	O
if	O
(	O
(	O
rc	int
=	O
setegid	function
(	O
gid	int
)	O
)	O
<	O
0	int
)	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"setegid(%lu) failed"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gid	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
gid	int
!=	O
0	int
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
setgid	function
(	O
gid	int
)	O
)	O
<	O
0	int
&&	O
getegid	function
(	O
)	O
!=	O
gid	int
)	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"setgid(%lu) failed"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gid	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
getegid	function
(	O
)	O
!=	O
gid	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"Cannot set effective gid to %lu"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gid	int
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
rc	int
==	O
0	int
&&	O
uid	int
!=	O
0	int
)	O
{	O
uid_t	int
euid	int
;	O
if	O
(	O
setuid	function
(	O
uid	int
)	O
||	O
geteuid	function
(	O
)	O
!=	O
uid	int
||	O
(	O
getuid	function
(	O
)	O
!=	O
uid	int
&&	O
(	O
geteuid	function
(	O
)	O
==	O
0	int
||	O
getuid	function
(	O
)	O
==	O
0	int
)	O
)	O
)	O
{	O
if	O
(	O
geteuid	function
(	O
)	O
!=	O
uid	int
)	O
{	O
if	O
(	O
setreuid	function
(	O
uid	int
,	O
-	O
1	int
)	O
<	O
0	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"setreuid(%lu,-1) failed"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
if	O
(	O
setuid	function
(	O
uid	int
)	O
<	O
0	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"second setuid(%lu) failed"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
}	O
else	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
_	O
(	O
"setuid(%lu) failed"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
}	O
euid	int
=	O
geteuid	function
(	O
)	O
;	O
if	O
(	O
uid	int
!=	O
0	int
&&	O
setuid	function
(	O
0	int
)	O
==	O
0	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
_	O
(	O
"seteuid(0) succeeded when it should not"	pointer
)	O
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
uid	int
!=	O
euid	int
&&	O
setuid	function
(	O
euid	int
)	O
==	O
0	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
_	O
(	O
"Cannot drop non-root setuid privileges"	pointer
)	O
)	O
;	O
rc	int
=	O
1	int
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
