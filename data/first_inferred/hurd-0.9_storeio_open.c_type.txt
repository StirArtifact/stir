error_t	O
open_create	function
(	O
struct	O
dev	pointer
*	O
dev	pointer
,	O
struct	O
open	pointer
*	O
*	O
open	pointer
)	O
{	O
*	O
open	pointer
=	O
malloc	O
(	O
sizeof	O
(	O
struct	O
open	pointer
)	O
)	O
;	O
if	O
(	O
*	O
open	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	O
;	O
(	O
*	O
open	pointer
)	O
->	O
dev	pointer
=	O
dev	pointer
;	O
(	O
*	O
open	pointer
)	O
->	O
offs	long
=	O
0	int
;	O
pthread_mutex_init	function
(	O
&	O
(	O
*	O
open	pointer
)	O
->	O
lock	O
,	O
NULL	O
)	O
;	O
return	O
0	int
;	O
}	O
void	O
open_free	function
(	O
struct	O
open	pointer
*	O
open	pointer
)	O
{	O
free	function
(	O
open	pointer
)	O
;	O
}	O
error_t	O
open_write	function
(	O
struct	O
open	pointer
*	O
open	pointer
,	O
off_t	long
offs	long
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
len	long
,	O
vm_size_t	O
*	O
amount	pointer
)	O
{	O
error_t	O
err	O
;	O
if	O
(	O
offs	long
<	O
0	int
)	O
{	O
pthread_mutex_lock	function
(	O
&	O
open	pointer
->	O
lock	O
)	O
;	O
err	O
=	O
dev_write	function
(	O
open	pointer
->	O
dev	pointer
,	O
open	pointer
->	O
offs	long
,	O
buf	pointer
,	O
len	long
,	O
amount	pointer
)	O
;	O
if	O
(	O
!	O
err	O
)	O
open	pointer
->	O
offs	long
+=	O
*	O
amount	pointer
;	O
pthread_mutex_unlock	function
(	O
&	O
open	pointer
->	O
lock	O
)	O
;	O
}	O
else	O
err	O
=	O
dev_write	function
(	O
open	pointer
->	O
dev	pointer
,	O
offs	long
,	O
buf	pointer
,	O
len	long
,	O
amount	pointer
)	O
;	O
return	O
err	O
;	O
}	O
error_t	O
open_read	function
(	O
struct	O
open	pointer
*	O
open	pointer
,	O
off_t	long
offs	long
,	O
size_t	long
amount	pointer
,	O
void	O
*	O
*	O
buf	pointer
,	O
vm_size_t	O
*	O
len	long
)	O
{	O
error_t	O
err	O
;	O
if	O
(	O
offs	long
<	O
0	int
)	O
{	O
pthread_mutex_lock	function
(	O
&	O
open	pointer
->	O
lock	O
)	O
;	O
err	O
=	O
dev_read	function
(	O
open	pointer
->	O
dev	pointer
,	O
open	pointer
->	O
offs	long
,	O
amount	pointer
,	O
buf	pointer
,	O
len	long
)	O
;	O
if	O
(	O
!	O
err	O
)	O
open	pointer
->	O
offs	long
+=	O
*	O
len	long
;	O
pthread_mutex_unlock	function
(	O
&	O
open	pointer
->	O
lock	O
)	O
;	O
}	O
else	O
err	O
=	O
dev_read	function
(	O
open	pointer
->	O
dev	pointer
,	O
offs	long
,	O
amount	pointer
,	O
buf	pointer
,	O
len	long
)	O
;	O
return	O
err	O
;	O
}	O
error_t	O
open_seek	function
(	O
struct	O
open	pointer
*	O
open	pointer
,	O
off_t	long
offs	long
,	O
int	O
whence	int
,	O
off_t	long
*	O
new_offs	pointer
)	O
{	O
error_t	O
err	O
=	O
0	int
;	O
pthread_mutex_lock	function
(	O
&	O
open	pointer
->	O
lock	O
)	O
;	O
switch	O
(	O
whence	int
)	O
{	O
case	O
SEEK_CUR	int
:	O
offs	long
+=	O
open	pointer
->	O
offs	long
;	O
goto	O
check	O
;	O
case	O
SEEK_END	int
:	O
offs	long
+=	O
open	pointer
->	O
dev	pointer
->	O
store	O
->	O
size	O
;	O
case	O
SEEK_SET	int
:	O
check	O
:	O
if	O
(	O
offs	long
>=	O
0	int
)	O
{	O
*	O
new_offs	pointer
=	O
open	pointer
->	O
offs	long
=	O
offs	long
;	O
break	O
;	O
}	O
default	O
:	O
err	O
=	O
EINVAL	O
;	O
}	O
pthread_mutex_unlock	function
(	O
&	O
open	pointer
->	O
lock	O
)	O
;	O
return	O
err	O
;	O
}	O
