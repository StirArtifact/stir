gsl_odeiv2_control	struct
*	O
gsl_odeiv2_control_alloc	function
(	O
const	O
gsl_odeiv2_control_type	struct
*	O
T	pointer
)	O
{	O
gsl_odeiv2_control	struct
*	O
c	pointer
=	O
(	O
gsl_odeiv2_control	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_odeiv2_control	struct
)	O
)	O
;	O
if	O
(	O
c	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for control struct"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
;	O
c	pointer
->	O
type	pointer
=	O
T	pointer
;	O
c	pointer
->	O
state	pointer
=	O
c	pointer
->	O
type	pointer
->	O
alloc	pointer
(	O
)	O
;	O
if	O
(	O
c	pointer
->	O
state	pointer
==	O
0	int
)	O
{	O
free	function
(	O
c	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for control state"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
;	O
return	O
c	pointer
;	O
}	O
int	O
gsl_odeiv2_control_init	function
(	O
gsl_odeiv2_control	struct
*	O
c	pointer
,	O
double	O
eps_abs	double
,	O
double	O
eps_rel	double
,	O
double	O
a_y	double
,	O
double	O
a_dydt	double
)	O
{	O
return	O
c	pointer
->	O
type	pointer
->	O
init	pointer
(	O
c	pointer
->	O
state	pointer
,	O
eps_abs	double
,	O
eps_rel	double
,	O
a_y	double
,	O
a_dydt	double
)	O
;	O
}	O
void	O
gsl_odeiv2_control_free	function
(	O
gsl_odeiv2_control	struct
*	O
c	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
c	pointer
)	O
;	O
c	pointer
->	O
type	pointer
->	O
free	function
(	O
c	pointer
->	O
state	pointer
)	O
;	O
free	function
(	O
c	pointer
)	O
;	O
}	O
const	O
char	O
*	O
gsl_odeiv2_control_name	function
(	O
const	O
gsl_odeiv2_control	struct
*	O
c	pointer
)	O
{	O
return	O
c	pointer
->	O
type	pointer
->	O
name	pointer
;	O
}	O
int	O
gsl_odeiv2_control_hadjust	function
(	O
gsl_odeiv2_control	struct
*	O
c	pointer
,	O
gsl_odeiv2_step	struct
*	O
s	pointer
,	O
const	O
double	O
y	double
[	O
]	O
,	O
const	O
double	O
yerr	array
[	O
]	O
,	O
const	O
double	O
dydt	array
[	O
]	O
,	O
double	O
*	O
h	double
)	O
{	O
return	O
c	pointer
->	O
type	pointer
->	O
hadjust	pointer
(	O
c	pointer
->	O
state	pointer
,	O
s	pointer
->	O
dimension	long
,	O
s	pointer
->	O
type	pointer
->	O
order	pointer
(	O
s	pointer
->	O
state	pointer
)	O
,	O
y	double
,	O
yerr	array
,	O
dydt	array
,	O
h	double
)	O
;	O
}	O
int	O
gsl_odeiv2_control_errlevel	function
(	O
gsl_odeiv2_control	struct
*	O
c	pointer
,	O
const	O
double	O
y	double
,	O
const	O
double	O
dydt	array
,	O
const	O
double	O
h	double
,	O
const	O
size_t	long
ind	long
,	O
double	O
*	O
errlev	pointer
)	O
{	O
return	O
c	pointer
->	O
type	pointer
->	O
errlevel	pointer
(	O
c	pointer
->	O
state	pointer
,	O
y	double
,	O
dydt	array
,	O
h	double
,	O
ind	long
,	O
errlev	pointer
)	O
;	O
}	O
int	O
gsl_odeiv2_control_set_driver	function
(	O
gsl_odeiv2_control	struct
*	O
c	pointer
,	O
const	O
gsl_odeiv2_driver	struct
*	O
d	pointer
)	O
{	O
if	O
(	O
d	pointer
!=	O
NULL	O
)	O
{	O
c	pointer
->	O
type	pointer
->	O
set_driver	pointer
(	O
c	pointer
->	O
state	pointer
,	O
d	pointer
)	O
;	O
}	O
else	O
{	O
GSL_ERROR_NULL	O
(	O
"driver pointer is null"	pointer
,	O
GSL_EFAULT	int
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
