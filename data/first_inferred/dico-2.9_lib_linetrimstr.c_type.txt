struct	O
_linetrimstr	struct
{	O
dico_stream_t	pointer
transport	pointer
;	O
int	O
noclose	int
;	O
size_t	long
maxlen	long
;	O
size_t	long
linelen	long
;	O
}	O
;	O
static	O
size_t	long
_linetrimstr_find_end	function
(	O
struct	O
_linetrimstr	struct
*	O
s	pointer
,	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
size_t	long
*	O
psize	pointer
)	O
{	O
struct	O
utf8_iterator	struct
itr	pointer
;	O
const	O
char	O
*	O
wordstart	pointer
=	O
buf	pointer
;	O
utf8_iter_init	function
(	O
&	O
itr	pointer
,	O
(	O
char	O
*	O
)	O
buf	pointer
,	O
size	long
)	O
;	O
while	O
(	O
!	O
utf8_iter_end_p	function
(	O
&	O
itr	pointer
)	O
)	O
{	O
for	O
(	O
;	O
!	O
utf8_iter_end_p	function
(	O
&	O
itr	pointer
)	O
&&	O
utf8_iter_isascii	O
(	O
itr	pointer
)	O
&&	O
ISWS	O
(	O
*	O
itr	pointer
.	O
curptr	pointer
)	O
;	O
utf8_iter_next	function
(	O
&	O
itr	pointer
)	O
)	O
{	O
if	O
(	O
*	O
itr	pointer
.	O
curptr	pointer
==	O
'\n'	O
)	O
s	pointer
->	O
linelen	long
=	O
0	int
;	O
else	O
if	O
(	O
++	O
s	pointer
->	O
linelen	long
>=	O
s	pointer
->	O
maxlen	long
)	O
{	O
*	O
psize	pointer
=	O
wordstart	pointer
>	O
buf	pointer
?	O
wordstart	pointer
-	O
buf	pointer
:	O
itr	pointer
.	O
curptr	pointer
-	O
buf	pointer
;	O
s	pointer
->	O
linelen	long
=	O
0	int
;	O
return	O
1	int
;	O
}	O
}	O
wordstart	pointer
=	O
itr	pointer
.	O
curptr	pointer
;	O
for	O
(	O
;	O
!	O
utf8_iter_end_p	function
(	O
&	O
itr	pointer
)	O
&&	O
!	O
(	O
utf8_iter_isascii	O
(	O
itr	pointer
)	O
&&	O
ISWS	O
(	O
*	O
itr	pointer
.	O
curptr	pointer
)	O
)	O
;	O
utf8_iter_next	function
(	O
&	O
itr	pointer
)	O
)	O
{	O
if	O
(	O
++	O
s	pointer
->	O
linelen	long
>=	O
s	pointer
->	O
maxlen	long
)	O
{	O
size_t	long
size	long
=	O
itr	pointer
.	O
string	pointer
==	O
wordstart	pointer
?	O
itr	pointer
.	O
curptr	pointer
-	O
buf	pointer
:	O
wordstart	pointer
-	O
itr	pointer
.	O
string	pointer
;	O
s	pointer
->	O
linelen	long
=	O
0	int
;	O
if	O
(	O
size	long
>	O
0	int
)	O
{	O
*	O
psize	pointer
=	O
size	long
;	O
return	O
1	int
;	O
}	O
}	O
}	O
}	O
*	O
psize	pointer
=	O
itr	pointer
.	O
curptr	pointer
-	O
buf	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_linetrimstr_write	function
(	O
void	O
*	O
data	pointer
,	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	pointer
)	O
{	O
struct	O
_linetrimstr	struct
*	O
s	pointer
=	O
data	pointer
;	O
size_t	long
len	int
;	O
int	O
nl	int
;	O
nl	int
=	O
_linetrimstr_find_end	function
(	O
s	pointer
,	O
buf	pointer
,	O
size	long
,	O
&	O
len	int
)	O
;	O
dico_stream_write	function
(	O
s	pointer
->	O
transport	pointer
,	O
buf	pointer
,	O
len	int
)	O
;	O
if	O
(	O
nl	int
)	O
dico_stream_write	function
(	O
s	pointer
->	O
transport	pointer
,	O
"\n"	pointer
,	O
1	int
)	O
;	O
*	O
pret	pointer
=	O
len	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_linetrimstr_destroy	function
(	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
_linetrimstr	struct
*	O
s	pointer
=	O
data	pointer
;	O
if	O
(	O
!	O
s	pointer
->	O
noclose	int
)	O
dico_stream_destroy	function
(	O
&	O
s	pointer
->	O
transport	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_linetrimstr_flush	function
(	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
_linetrimstr	struct
*	O
s	pointer
=	O
data	pointer
;	O
return	O
dico_stream_flush	function
(	O
s	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_linetrimstr_close	function
(	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
_linetrimstr	struct
*	O
s	pointer
=	O
data	pointer
;	O
if	O
(	O
s	pointer
->	O
noclose	int
)	O
return	O
0	int
;	O
return	O
dico_stream_close	function
(	O
s	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_linetrimstr_ioctl	function
(	O
void	O
*	O
data	pointer
,	O
int	O
code	int
,	O
void	O
*	O
call_data	pointer
)	O
{	O
struct	O
_linetrimstr	struct
*	O
s	pointer
=	O
data	pointer
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
DICO_IOCTL_GET_TRANSPORT	int
:	O
*	O
(	O
dico_stream_t	pointer
*	O
)	O
call_data	pointer
=	O
s	pointer
->	O
transport	pointer
;	O
break	O
;	O
case	O
DICO_IOCTL_SET_TRANSPORT	int
:	O
s	pointer
->	O
transport	pointer
=	O
call_data	pointer
;	O
break	O
;	O
case	O
DICO_IOCTL_BYTES_IN	int
:	O
*	O
(	O
off_t	long
*	O
)	O
call_data	pointer
=	O
dico_stream_bytes_in	function
(	O
s	pointer
->	O
transport	pointer
)	O
;	O
break	O
;	O
case	O
DICO_IOCTL_BYTES_OUT	int
:	O
*	O
(	O
off_t	long
*	O
)	O
call_data	pointer
=	O
dico_stream_bytes_out	function
(	O
s	pointer
->	O
transport	pointer
)	O
;	O
break	O
;	O
case	O
DICO_IOCTL_SET_LINELEN	int
:	O
s	pointer
->	O
maxlen	long
=	O
*	O
(	O
size_t	long
*	O
)	O
call_data	pointer
;	O
break	O
;	O
case	O
DICO_IOCTL_GET_LINELEN	int
:	O
*	O
(	O
size_t	long
*	O
)	O
call_data	pointer
=	O
s	pointer
->	O
maxlen	long
;	O
break	O
;	O
default	O
:	O
errno	O
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
dico_stream_t	pointer
dico_linetrim_stream	function
(	O
dico_stream_t	pointer
transport	pointer
,	O
size_t	long
maxlen	long
,	O
int	O
noclose	int
)	O
{	O
int	O
rc	int
;	O
struct	O
_linetrimstr	struct
*	O
s	pointer
;	O
dico_stream_t	pointer
str	pointer
;	O
s	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
s	pointer
)	O
)	O
;	O
if	O
(	O
!	O
s	pointer
)	O
return	O
NULL	O
;	O
memset	function
(	O
s	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
s	pointer
)	O
)	O
;	O
rc	int
=	O
dico_stream_create	function
(	O
&	O
str	pointer
,	O
DICO_STREAM_WRITE	int
,	O
s	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	function
(	O
s	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
s	pointer
->	O
transport	pointer
=	O
transport	pointer
;	O
s	pointer
->	O
maxlen	long
=	O
maxlen	long
;	O
s	pointer
->	O
noclose	int
=	O
noclose	int
;	O
dico_stream_set_write	function
(	O
str	pointer
,	O
_linetrimstr_write	function
)	O
;	O
dico_stream_set_flush	function
(	O
str	pointer
,	O
_linetrimstr_flush	function
)	O
;	O
dico_stream_set_close	function
(	O
str	pointer
,	O
_linetrimstr_close	function
)	O
;	O
dico_stream_set_destroy	function
(	O
str	pointer
,	O
_linetrimstr_destroy	function
)	O
;	O
dico_stream_set_ioctl	function
(	O
str	pointer
,	O
_linetrimstr_ioctl	function
)	O
;	O
dico_stream_set_buffer	function
(	O
str	pointer
,	O
dico_buffer_line	int
,	O
1024	int
)	O
;	O
return	O
str	pointer
;	O
}	O
