int	O
osip_content_length_init	function
(	O
osip_content_length_t	struct
*	O
*	O
cl	pointer
)	O
{	O
*	O
cl	pointer
=	O
(	O
osip_content_length_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_content_length_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
cl	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
(	O
*	O
cl	pointer
)	O
->	O
value	pointer
=	O
NULL	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_content_length	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
int	O
i	int
;	O
if	O
(	O
hvalue	pointer
==	O
NULL	O
||	O
hvalue	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	pointer
->	O
content_length	pointer
!=	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
i	int
=	O
osip_content_length_init	function
(	O
&	O
(	O
sip	pointer
->	O
content_length	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
sip	pointer
->	O
message_property	int
=	O
2	int
;	O
i	int
=	O
osip_content_length_parse	function
(	O
sip	pointer
->	O
content_length	pointer
,	O
hvalue	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_content_length_free	function
(	O
sip	pointer
->	O
content_length	pointer
)	O
;	O
sip	pointer
->	O
content_length	pointer
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_content_length_parse	function
(	O
osip_content_length_t	struct
*	O
content_length	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
size_t	long
len	long
;	O
if	O
(	O
hvalue	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
strlen	function
(	O
hvalue	pointer
)	O
;	O
if	O
(	O
len	long
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
content_length	pointer
->	O
value	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
content_length	pointer
->	O
value	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	function
(	O
content_length	pointer
->	O
value	pointer
,	O
hvalue	pointer
,	O
len	long
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_content_length_t	struct
*	O
osip_message_get_content_length	function
(	O
const	O
osip_message_t	struct
*	O
sip	pointer
)	O
{	O
return	O
sip	pointer
->	O
content_length	pointer
;	O
}	O
int	O
osip_content_length_to_str	function
(	O
const	O
osip_content_length_t	struct
*	O
cl	pointer
,	O
char	O
*	O
*	O
dest	pointer
)	O
{	O
if	O
(	O
cl	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
*	O
dest	pointer
=	O
osip_strdup	function
(	O
cl	pointer
->	O
value	pointer
)	O
;	O
if	O
(	O
*	O
dest	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_content_length_free	function
(	O
osip_content_length_t	struct
*	O
content_length	pointer
)	O
{	O
if	O
(	O
content_length	pointer
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
content_length	pointer
->	O
value	pointer
)	O
;	O
osip_free	O
(	O
content_length	pointer
)	O
;	O
}	O
int	O
osip_content_length_clone	function
(	O
const	O
osip_content_length_t	struct
*	O
ctl	pointer
,	O
osip_content_length_t	struct
*	O
*	O
dest	pointer
)	O
{	O
int	O
i	int
;	O
osip_content_length_t	struct
*	O
cl	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
ctl	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_content_length_init	function
(	O
&	O
cl	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
ctl	pointer
->	O
value	pointer
!=	O
NULL	O
)	O
{	O
cl	pointer
->	O
value	pointer
=	O
osip_strdup	function
(	O
ctl	pointer
->	O
value	pointer
)	O
;	O
if	O
(	O
cl	pointer
->	O
value	pointer
==	O
NULL	O
)	O
{	O
osip_content_length_free	function
(	O
cl	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
}	O
*	O
dest	pointer
=	O
cl	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
