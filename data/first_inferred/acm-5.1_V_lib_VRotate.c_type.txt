VMatrix	struct
*	O
VRotate	function
(	O
VMatrix	struct
*	O
Mt1	pointer
,	O
int	O
operation	short
,	O
double	O
angle	double
)	O
{	O
VMatrix	struct
m	array
,	O
s	double
;	O
VIdentMatrix	function
(	O
&	O
m	array
)	O
;	O
switch	O
(	O
operation	short
)	O
{	O
case	O
XRotation	int
:	O
m	array
.	O
m	array
[	O
1	int
]	O
[	O
1	int
]	O
=	O
m	array
.	O
m	array
[	O
2	int
]	O
[	O
2	int
]	O
=	O
cos	function
(	O
angle	double
)	O
;	O
m	array
.	O
m	array
[	O
2	int
]	O
[	O
1	int
]	O
=	O
sin	function
(	O
angle	double
)	O
;	O
m	array
.	O
m	array
[	O
1	int
]	O
[	O
2	int
]	O
=	O
-	O
m	array
.	O
m	array
[	O
2	int
]	O
[	O
1	int
]	O
;	O
break	O
;	O
case	O
YRotation	int
:	O
m	array
.	O
m	array
[	O
0	int
]	O
[	O
0	int
]	O
=	O
m	array
.	O
m	array
[	O
2	int
]	O
[	O
2	int
]	O
=	O
cos	function
(	O
angle	double
)	O
;	O
m	array
.	O
m	array
[	O
2	int
]	O
[	O
0	int
]	O
=	O
sin	function
(	O
angle	double
)	O
;	O
m	array
.	O
m	array
[	O
0	int
]	O
[	O
2	int
]	O
=	O
-	O
m	array
.	O
m	array
[	O
2	int
]	O
[	O
0	int
]	O
;	O
break	O
;	O
case	O
ZRotation	int
:	O
m	array
.	O
m	array
[	O
0	int
]	O
[	O
0	int
]	O
=	O
m	array
.	O
m	array
[	O
1	int
]	O
[	O
1	int
]	O
=	O
cos	function
(	O
angle	double
)	O
;	O
m	array
.	O
m	array
[	O
1	int
]	O
[	O
0	int
]	O
=	O
sin	function
(	O
angle	double
)	O
;	O
m	array
.	O
m	array
[	O
0	int
]	O
[	O
1	int
]	O
=	O
-	O
m	array
.	O
m	array
[	O
1	int
]	O
[	O
0	int
]	O
;	O
break	O
;	O
}	O
s	double
=	O
*	O
Mt1	pointer
;	O
VMatrixMult	function
(	O
&	O
s	double
,	O
&	O
m	array
,	O
Mt1	pointer
)	O
;	O
return	O
Mt1	pointer
;	O
}	O
VMatrix	struct
*	O
VTranslatePoint	function
(	O
VMatrix	struct
*	O
Mt	pointer
,	O
VPoint	struct
loc	pointer
)	O
{	O
Mt	pointer
->	O
m	array
[	O
0	int
]	O
[	O
3	int
]	O
+=	O
loc	pointer
.	O
x	double
;	O
Mt	pointer
->	O
m	array
[	O
1	int
]	O
[	O
3	int
]	O
+=	O
loc	pointer
.	O
y	double
;	O
Mt	pointer
->	O
m	array
[	O
2	int
]	O
[	O
3	int
]	O
+=	O
loc	pointer
.	O
z	double
;	O
return	O
Mt	pointer
;	O
}	O
VMatrix	struct
*	O
VTranslate	function
(	O
VMatrix	struct
*	O
Mt	pointer
,	O
double	O
x	double
,	O
double	O
y	double
,	O
double	O
z	double
)	O
{	O
Mt	pointer
->	O
m	array
[	O
0	int
]	O
[	O
3	int
]	O
+=	O
x	double
;	O
Mt	pointer
->	O
m	array
[	O
1	int
]	O
[	O
3	int
]	O
+=	O
y	double
;	O
Mt	pointer
->	O
m	array
[	O
2	int
]	O
[	O
3	int
]	O
+=	O
z	double
;	O
return	O
Mt	pointer
;	O
}	O
