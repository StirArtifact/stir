char	O
*	O
program_name	pointer
;	O
void	O
fatal	function
(	O
postmsg	pointer
)	O
char	O
*	O
postmsg	pointer
;	O
{	O
postmsg	pointer
=	O
NULL	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
int	O
find	function
(	O
name	pointer
,	O
path	pointer
)	O
char	O
*	O
name	pointer
;	O
char	O
*	O
path	pointer
;	O
{	O
int	O
found	int
=	O
0	int
;	O
char	O
*	O
pc	pointer
=	O
path	pointer
;	O
while	O
(	O
*	O
pc	pointer
!=	O
'\0'	O
&&	O
found	int
==	O
0	int
)	O
{	O
char	O
save	char
;	O
int	O
len	int
=	O
0	int
;	O
char	O
*	O
tmp	pointer
;	O
while	O
(	O
*	O
pc	pointer
!=	O
':'	O
&&	O
*	O
pc	pointer
!=	O
'\0'	O
)	O
{	O
len	int
++	O
;	O
pc	pointer
++	O
;	O
}	O
save	char
=	O
*	O
pc	pointer
;	O
*	O
pc	pointer
=	O
'\0'	O
;	O
tmp	pointer
=	O
xmalloc	function
(	O
strlen	function
(	O
pc	pointer
-	O
len	int
)	O
+	O
1	int
+	O
strlen	function
(	O
name	pointer
)	O
+	O
1	int
)	O
;	O
sprintf	function
(	O
tmp	pointer
,	O
"%s/%s"	pointer
,	O
pc	pointer
-	O
len	int
,	O
name	pointer
)	O
;	O
*	O
pc	pointer
=	O
save	char
;	O
if	O
(	O
*	O
pc	pointer
)	O
pc	pointer
++	O
;	O
found	int
=	O
(	O
access	function
(	O
tmp	pointer
,	O
1	int
)	O
==	O
0	int
)	O
;	O
xfree	function
(	O
tmp	pointer
)	O
;	O
}	O
return	O
found	int
;	O
}	O
int	O
main	function
(	O
argc	int
,	O
argv	array
)	O
int	O
argc	int
;	O
char	O
*	O
argv	array
[	O
]	O
;	O
{	O
program_name	pointer
=	O
argv	array
[	O
0	int
]	O
;	O
char	O
*	O
path	pointer
=	O
getenv	function
(	O
"PATH"	pointer
)	O
;	O
for	O
(	O
argc	int
--	O
,	O
argv	array
++	O
;	O
argc	int
;	O
argc	int
--	O
,	O
argv	array
++	O
)	O
if	O
(	O
find	function
(	O
*	O
argv	array
,	O
path	pointer
)	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
