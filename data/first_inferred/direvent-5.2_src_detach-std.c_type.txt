int	O
detach	function
(	O
void	O
(	O
*	O
init	pointer
)	O
(	O
)	O
)	O
{	O
struct	O
sigaction	struct
oldsa	struct
,	O
sa	pointer
;	O
pid_t	int
pid	int
;	O
int	O
ec	int
;	O
init	pointer
(	O
)	O
;	O
sigemptyset	function
(	O
&	O
sa	pointer
.	O
sa_mask	struct
)	O
;	O
sa	pointer
.	O
sa_handler	pointer
=	O
SIG_IGN	O
;	O
sa	pointer
.	O
sa_flags	int
=	O
0	int
;	O
if	O
(	O
sigaction	struct
(	O
SIGHUP	int
,	O
&	O
sa	pointer
,	O
&	O
oldsa	struct
)	O
)	O
return	O
-	O
1	int
;	O
switch	O
(	O
fork	function
(	O
)	O
)	O
{	O
case	O
-	O
1	int
:	O
return	O
-	O
1	int
;	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
_exit	function
(	O
0	int
)	O
;	O
}	O
pid	int
=	O
setsid	function
(	O
)	O
;	O
ec	int
=	O
errno	O
;	O
sigaction	struct
(	O
SIGHUP	int
,	O
&	O
oldsa	struct
,	O
NULL	O
)	O
;	O
if	O
(	O
pid	int
==	O
-	O
1	int
)	O
{	O
errno	O
=	O
ec	int
;	O
return	O
-	O
1	int
;	O
}	O
chdir	function
(	O
"/"	pointer
)	O
;	O
close	function
(	O
0	int
)	O
;	O
close	function
(	O
1	int
)	O
;	O
close	function
(	O
2	int
)	O
;	O
open	function
(	O
_PATH_DEVNULL	pointer
,	O
O_RDONLY	int
)	O
;	O
open	function
(	O
_PATH_DEVNULL	pointer
,	O
O_WRONLY	int
)	O
;	O
dup	function
(	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
