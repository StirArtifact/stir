char	O
*	O
unix_normalize	function
(	O
doscp_t	struct
*	O
cp	pointer
,	O
char	O
*	O
ans	pointer
,	O
dos_name_t	struct
*	O
dn	pointer
,	O
size_t	long
ans_size	long
)	O
{	O
char	O
buffer	array
[	O
13	int
]	O
;	O
wchar_t	int
wbuffer	array
[	O
13	int
]	O
;	O
char	O
*	O
a	pointer
;	O
int	O
j	int
;	O
for	O
(	O
a	pointer
=	O
buffer	array
,	O
j	int
=	O
0	int
;	O
(	O
j	int
<	O
8	int
)	O
&&	O
(	O
dn	pointer
->	O
base	int
[	O
j	int
]	O
>	O
' '	O
)	O
;	O
++	O
j	int
,	O
++	O
a	pointer
)	O
*	O
a	pointer
=	O
dn	pointer
->	O
base	int
[	O
j	int
]	O
;	O
if	O
(	O
dn	pointer
->	O
ext	array
[	O
0	int
]	O
>	O
' '	O
)	O
{	O
*	O
a	pointer
++	O
=	O
'.'	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
3	int
&&	O
dn	pointer
->	O
ext	array
[	O
j	int
]	O
>	O
' '	O
;	O
++	O
j	int
,	O
++	O
a	pointer
)	O
*	O
a	pointer
=	O
dn	pointer
->	O
ext	array
[	O
j	int
]	O
;	O
}	O
*	O
a	pointer
++	O
=	O
'\0'	O
;	O
dos_to_wchar	function
(	O
cp	pointer
,	O
buffer	array
,	O
wbuffer	array
,	O
13	int
)	O
;	O
wchar_to_native	function
(	O
wbuffer	array
,	O
ans	pointer
,	O
13	int
,	O
ans_size	long
)	O
;	O
return	O
ans	pointer
;	O
}	O
typedef	O
enum	O
Case_l	enum
{	O
NONE	int
,	O
UPPER	int
,	O
LOWER	int
}	O
Case_t	enum
;	O
static	O
void	O
TranslateToDos	function
(	O
doscp_t	struct
*	O
toDos	pointer
,	O
const	O
char	O
*	O
in	pointer
,	O
char	O
*	O
out	pointer
,	O
size_t	long
count	array
,	O
char	O
*	O
end	pointer
,	O
Case_t	enum
*	O
Case	char
,	O
int	O
*	O
mangled	pointer
)	O
{	O
wchar_t	int
buffer	array
[	O
12	int
]	O
;	O
wchar_t	int
*	O
s	pointer
=	O
buffer	array
;	O
size_t	long
t_idx	long
=	O
0	int
;	O
native_to_wchar	function
(	O
in	pointer
,	O
buffer	array
,	O
count	array
,	O
end	pointer
,	O
mangled	pointer
)	O
;	O
buffer	array
[	O
count	array
]	O
=	O
'\0'	O
;	O
*	O
Case	char
=	O
NONE	int
;	O
for	O
(	O
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
{	O
if	O
(	O
*	O
s	pointer
==	O
' '	O
||	O
*	O
s	pointer
==	O
'.'	O
)	O
{	O
*	O
mangled	pointer
|=	O
3	int
;	O
continue	O
;	O
}	O
if	O
(	O
iswcntrl	function
(	O
(	O
wint_t	int
)	O
*	O
s	pointer
)	O
)	O
{	O
*	O
mangled	pointer
|=	O
3	int
;	O
buffer	array
[	O
t_idx	long
]	O
=	O
'_'	O
;	O
}	O
else	O
if	O
(	O
iswlower	function
(	O
(	O
wint_t	int
)	O
*	O
s	pointer
)	O
)	O
{	O
buffer	array
[	O
t_idx	long
]	O
=	O
ch_towupper	function
(	O
*	O
s	pointer
)	O
;	O
if	O
(	O
*	O
Case	char
==	O
UPPER	int
&&	O
!	O
mtools_no_vfat	int
)	O
*	O
mangled	pointer
|=	O
1	int
;	O
else	O
*	O
Case	char
=	O
LOWER	int
;	O
}	O
else	O
if	O
(	O
iswupper	function
(	O
(	O
wint_t	int
)	O
*	O
s	pointer
)	O
)	O
{	O
buffer	array
[	O
t_idx	long
]	O
=	O
*	O
s	pointer
;	O
if	O
(	O
*	O
Case	char
==	O
LOWER	int
&&	O
!	O
mtools_no_vfat	int
)	O
*	O
mangled	pointer
|=	O
1	int
;	O
else	O
*	O
Case	char
=	O
UPPER	int
;	O
}	O
else	O
buffer	array
[	O
t_idx	long
]	O
=	O
*	O
s	pointer
;	O
t_idx	long
++	O
;	O
}	O
wchar_to_dos	function
(	O
toDos	pointer
,	O
buffer	array
,	O
out	pointer
,	O
t_idx	long
,	O
mangled	pointer
)	O
;	O
}	O
void	O
dos_name	function
(	O
doscp_t	struct
*	O
toDos	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
int	O
verbose	int
UNUSEDP	O
,	O
int	O
*	O
mangled	pointer
,	O
dos_name_t	struct
*	O
dn	pointer
)	O
{	O
char	O
*	O
s	pointer
,	O
*	O
ext	array
;	O
size_t	long
i	long
;	O
Case_t	enum
BaseCase	enum
,	O
ExtCase	enum
=	O
UPPER	int
;	O
*	O
mangled	pointer
=	O
0	int
;	O
if	O
(	O
name	pointer
[	O
0	int
]	O
&&	O
name	pointer
[	O
1	int
]	O
==	O
':'	O
)	O
name	pointer
=	O
&	O
name	pointer
[	O
2	int
]	O
;	O
name	pointer
=	O
(	O
char	O
*	O
)	O
_basename	function
(	O
name	pointer
)	O
;	O
if	O
(	O
(	O
s	pointer
=	O
strrchr	function
(	O
name	pointer
,	O
'\\'	O
)	O
)	O
)	O
name	pointer
=	O
s	pointer
+	O
1	int
;	O
memset	function
(	O
dn	pointer
,	O
' '	O
,	O
11	int
)	O
;	O
i	long
=	O
strspn	function
(	O
name	pointer
,	O
". "	pointer
)	O
;	O
if	O
(	O
i	long
)	O
{	O
name	pointer
+=	O
i	long
;	O
*	O
mangled	pointer
=	O
3	int
;	O
}	O
ext	array
=	O
strrchr	function
(	O
name	pointer
,	O
'.'	O
)	O
;	O
TranslateToDos	function
(	O
toDos	pointer
,	O
name	pointer
,	O
dn	pointer
->	O
base	int
,	O
8	int
,	O
ext	array
,	O
&	O
BaseCase	enum
,	O
mangled	pointer
)	O
;	O
if	O
(	O
ext	array
)	O
TranslateToDos	function
(	O
toDos	pointer
,	O
ext	array
+	O
1	int
,	O
dn	pointer
->	O
ext	array
,	O
3	int
,	O
0	int
,	O
&	O
ExtCase	enum
,	O
mangled	pointer
)	O
;	O
if	O
(	O
*	O
mangled	pointer
&	O
2	int
)	O
autorename_short	function
(	O
dn	pointer
,	O
0	int
)	O
;	O
if	O
(	O
!	O
*	O
mangled	pointer
)	O
{	O
if	O
(	O
BaseCase	enum
==	O
LOWER	int
)	O
*	O
mangled	pointer
|=	O
BASECASE	int
;	O
if	O
(	O
ExtCase	enum
==	O
LOWER	int
)	O
*	O
mangled	pointer
|=	O
EXTCASE	int
;	O
}	O
}	O
wchar_t	int
*	O
unix_name	function
(	O
doscp_t	struct
*	O
dosCp	pointer
,	O
const	O
char	O
*	O
base	int
,	O
const	O
char	O
*	O
ext	array
,	O
char	O
Case	char
,	O
wchar_t	int
*	O
ret	pointer
)	O
{	O
char	O
*	O
s	pointer
,	O
tname	array
[	O
9	int
]	O
,	O
text	array
[	O
4	int
]	O
,	O
ans	pointer
[	O
13	int
]	O
;	O
int	O
i	long
;	O
strncpy	function
(	O
tname	array
,	O
base	int
,	O
8	int
)	O
;	O
tname	array
[	O
8	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
(	O
s	pointer
=	O
strchr	function
(	O
tname	array
,	O
' '	O
)	O
)	O
)	O
*	O
s	pointer
=	O
'\0'	O
;	O
if	O
(	O
tname	array
[	O
0	int
]	O
==	O
'\x05'	O
)	O
tname	array
[	O
0	int
]	O
=	O
'\xE5'	O
;	O
if	O
(	O
!	O
(	O
Case	char
&	O
(	O
BASECASE	int
|	O
EXTCASE	int
)	O
)	O
&&	O
mtools_ignore_short_case	int
)	O
Case	char
|=	O
BASECASE	int
|	O
EXTCASE	int
;	O
if	O
(	O
Case	char
&	O
BASECASE	int
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
8	int
&&	O
tname	array
[	O
i	long
]	O
;	O
i	long
++	O
)	O
tname	array
[	O
i	long
]	O
=	O
ch_tolower	function
(	O
tname	array
[	O
i	long
]	O
)	O
;	O
strncpy	function
(	O
text	array
,	O
ext	array
,	O
3	int
)	O
;	O
text	array
[	O
3	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
(	O
s	pointer
=	O
strchr	function
(	O
text	array
,	O
' '	O
)	O
)	O
)	O
*	O
s	pointer
=	O
'\0'	O
;	O
if	O
(	O
Case	char
&	O
EXTCASE	int
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
3	int
&&	O
text	array
[	O
i	long
]	O
;	O
i	long
++	O
)	O
text	array
[	O
i	long
]	O
=	O
ch_tolower	function
(	O
text	array
[	O
i	long
]	O
)	O
;	O
if	O
(	O
*	O
text	array
)	O
{	O
strcpy	function
(	O
ans	pointer
,	O
tname	array
)	O
;	O
strcat	function
(	O
ans	pointer
,	O
"."	pointer
)	O
;	O
strcat	function
(	O
ans	pointer
,	O
text	array
)	O
;	O
}	O
else	O
strcpy	function
(	O
ans	pointer
,	O
tname	array
)	O
;	O
dos_to_wchar	function
(	O
dosCp	pointer
,	O
ans	pointer
,	O
ret	pointer
,	O
12	int
)	O
;	O
return	O
ret	pointer
;	O
}	O
int	O
unicode_write	function
(	O
wchar_t	int
*	O
in	pointer
,	O
struct	O
unicode_char	struct
*	O
out	pointer
,	O
int	O
num	int
,	O
int	O
*	O
end_p	pointer
)	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
num	int
;	O
++	O
j	int
)	O
{	O
if	O
(	O
*	O
end_p	pointer
)	O
out	pointer
->	O
uchar	char
=	O
out	pointer
->	O
lchar	char
=	O
0xff	int
;	O
else	O
{	O
out	pointer
->	O
uchar	char
=	O
(	O
*	O
in	pointer
&	O
0xffff	int
)	O
>>	O
8	int
;	O
out	pointer
->	O
lchar	char
=	O
*	O
in	pointer
&	O
0xff	int
;	O
if	O
(	O
!	O
*	O
in	pointer
)	O
{	O
*	O
end_p	pointer
=	O
VSE_LAST	int
;	O
}	O
}	O
++	O
out	pointer
;	O
++	O
in	pointer
;	O
}	O
return	O
num	int
;	O
}	O
