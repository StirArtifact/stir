error_t	function
ps_context_create	function
(	O
process_t	O
server	int
,	O
struct	O
ps_context	O
*	O
*	O
pc	pointer
)	O
{	O
*	O
pc	pointer
=	O
NEW	function
(	O
struct	O
ps_context	O
)	O
;	O
if	O
(	O
*	O
pc	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	O
;	O
(	O
*	O
pc	pointer
)	O
->	O
server	int
=	O
server	int
;	O
(	O
*	O
pc	pointer
)	O
->	O
user_hooks	O
=	O
0	int
;	O
hurd_ihash_init	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
procs	O
,	O
HURD_IHASH_NO_LOCP	O
)	O
;	O
hurd_ihash_init	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
ttys	O
,	O
HURD_IHASH_NO_LOCP	O
)	O
;	O
hurd_ihash_init	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
ttys_by_cttyid	O
,	O
HURD_IHASH_NO_LOCP	O
)	O
;	O
hurd_ihash_init	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
users	O
,	O
HURD_IHASH_NO_LOCP	O
)	O
;	O
hurd_ihash_set_cleanup	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
procs	O
,	O
(	O
hurd_ihash_cleanup_t	O
)	O
_proc_stat_free	O
,	O
NULL	O
)	O
;	O
hurd_ihash_set_cleanup	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
ttys	O
,	O
(	O
hurd_ihash_cleanup_t	O
)	O
ps_tty_free	O
,	O
NULL	O
)	O
;	O
hurd_ihash_set_cleanup	function
(	O
&	O
(	O
*	O
pc	pointer
)	O
->	O
users	O
,	O
(	O
hurd_ihash_cleanup_t	O
)	O
ps_user_free	O
,	O
NULL	O
)	O
;	O
return	O
0	int
;	O
}	O
void	O
ps_context_free	function
(	O
struct	O
ps_context	O
*	O
pc	pointer
)	O
{	O
hurd_ihash_destroy	function
(	O
&	O
pc	pointer
->	O
procs	O
)	O
;	O
hurd_ihash_destroy	function
(	O
&	O
pc	pointer
->	O
ttys	O
)	O
;	O
hurd_ihash_destroy	function
(	O
&	O
pc	pointer
->	O
ttys_by_cttyid	O
)	O
;	O
hurd_ihash_destroy	function
(	O
&	O
pc	pointer
->	O
users	O
)	O
;	O
free	function
(	O
pc	pointer
)	O
;	O
}	O
static	O
error_t	function
lookup	function
(	O
int	O
id	int
,	O
hurd_ihash_t	O
ht	int
,	O
error_t	function
(	O
*	O
create	pointer
)	O
(	O
int	O
id	int
,	O
void	O
*	O
*	O
)	O
,	O
void	O
*	O
*	O
value	pointer
)	O
{	O
*	O
value	pointer
=	O
hurd_ihash_find	function
(	O
ht	int
,	O
id	int
)	O
;	O
if	O
(	O
*	O
value	pointer
==	O
NULL	O
)	O
{	O
error_t	function
err	O
=	O
create	pointer
(	O
id	int
,	O
value	pointer
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
hurd_ihash_add	function
(	O
ht	int
,	O
id	int
,	O
*	O
value	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
error_t	function
ps_context_find_proc_stat	function
(	O
struct	O
ps_context	O
*	O
pc	pointer
,	O
pid_t	O
pid	int
,	O
struct	O
proc_stat	O
*	O
*	O
ps	pointer
)	O
{	O
error_t	function
create	pointer
(	O
int	O
pid	int
,	O
void	O
*	O
*	O
value	pointer
)	O
{	O
return	O
_proc_stat_create	O
(	O
pid	int
,	O
pc	pointer
,	O
(	O
struct	O
proc_stat	O
*	O
*	O
)	O
value	pointer
)	O
;	O
}	O
return	O
lookup	function
(	O
pid	int
,	O
&	O
pc	pointer
->	O
procs	O
,	O
create	pointer
,	O
(	O
void	O
*	O
*	O
)	O
ps	pointer
)	O
;	O
}	O
error_t	function
ps_context_find_tty	function
(	O
struct	O
ps_context	O
*	O
pc	pointer
,	O
mach_port_t	O
tty_port	int
,	O
struct	O
ps_tty	O
*	O
*	O
tty	pointer
)	O
{	O
return	O
lookup	function
(	O
tty_port	int
,	O
&	O
pc	pointer
->	O
ttys	O
,	O
(	O
error_t	function
(	O
*	O
)	O
(	O
int	O
id	int
,	O
void	O
*	O
*	O
result	O
)	O
)	O
ps_tty_create	O
,	O
(	O
void	O
*	O
*	O
)	O
tty	pointer
)	O
;	O
}	O
error_t	function
ps_context_find_tty_by_cttyid	function
(	O
struct	O
ps_context	O
*	O
pc	pointer
,	O
mach_port_t	O
cttyid_port	int
,	O
struct	O
ps_tty	O
*	O
*	O
tty	pointer
)	O
{	O
error_t	function
create	pointer
(	O
int	O
cttyid_port	int
,	O
void	O
*	O
*	O
value	pointer
)	O
{	O
if	O
(	O
cttyid_port	int
==	O
MACH_PORT_NULL	O
)	O
{	O
*	O
value	pointer
=	O
0	int
;	O
return	O
0	int
;	O
}	O
else	O
{	O
mach_port_t	O
tty_port	int
;	O
error_t	function
err	O
=	O
termctty_open_terminal	O
(	O
cttyid_port	int
,	O
0	int
,	O
&	O
tty_port	int
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
else	O
return	O
ps_context_find_tty	function
(	O
pc	pointer
,	O
tty_port	int
,	O
(	O
struct	O
ps_tty	O
*	O
*	O
)	O
value	pointer
)	O
;	O
}	O
}	O
return	O
lookup	function
(	O
cttyid_port	int
,	O
&	O
pc	pointer
->	O
ttys_by_cttyid	O
,	O
create	pointer
,	O
(	O
void	O
*	O
*	O
)	O
tty	pointer
)	O
;	O
}	O
error_t	function
ps_context_find_user	function
(	O
struct	O
ps_context	O
*	O
pc	pointer
,	O
uid_t	O
uid	int
,	O
struct	O
ps_user	O
*	O
*	O
u	pointer
)	O
{	O
return	O
lookup	function
(	O
uid	int
,	O
&	O
pc	pointer
->	O
users	O
,	O
(	O
error_t	function
(	O
*	O
)	O
(	O
int	O
id	int
,	O
void	O
*	O
*	O
result	O
)	O
)	O
ps_user_create	O
,	O
(	O
void	O
*	O
*	O
)	O
u	pointer
)	O
;	O
}	O
