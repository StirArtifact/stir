int	O
safe_atoi	function
(	O
const	O
char	O
*	O
s	enum
,	O
enum	O
quoting_style	enum
style	enum
)	O
{	O
long	O
lval	long
;	O
char	O
*	O
end	pointer
;	O
errno	O
=	O
0	int
;	O
lval	long
=	O
strtol	function
(	O
s	enum
,	O
&	O
end	pointer
,	O
10	int
)	O
;	O
if	O
(	O
(	O
LONG_MAX	O
==	O
lval	long
)	O
||	O
(	O
LONG_MIN	O
==	O
lval	long
)	O
)	O
{	O
if	O
(	O
errno	O
==	O
ERANGE	int
)	O
{	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"%s"	pointer
,	O
s	enum
)	O
;	O
}	O
else	O
{	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"%s"	pointer
,	O
s	enum
)	O
;	O
}	O
}	O
if	O
(	O
lval	long
>	O
INT_MAX	O
||	O
lval	long
<	O
INT_MIN	O
)	O
{	O
errno	O
=	O
ERANGE	int
;	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"%s"	pointer
,	O
s	enum
)	O
;	O
}	O
else	O
if	O
(	O
*	O
end	pointer
)	O
{	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"Unexpected suffix %s on %s"	pointer
)	O
,	O
quotearg_n_style	function
(	O
0	int
,	O
style	enum
,	O
end	pointer
)	O
,	O
quotearg_n_style	function
(	O
1	int
,	O
style	enum
,	O
s	enum
)	O
)	O
;	O
}	O
else	O
if	O
(	O
end	pointer
==	O
s	enum
)	O
{	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"Expected an integer: %s"	pointer
)	O
,	O
quotearg_n_style	function
(	O
0	int
,	O
style	enum
,	O
s	enum
)	O
)	O
;	O
}	O
return	O
(	O
int	O
)	O
lval	long
;	O
}	O
