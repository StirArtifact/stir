static	O
__osip_message_config_t	struct
pconfig	array
[	O
NUMBER_OF_HEADERS	int
]	O
;	O
static	O
__osip_message_config_commaseparated_t	struct
pconfig_commasep	array
[	O
NUMBER_OF_HEADERS_COMMASEPARATED	int
]	O
;	O
static	O
int	O
hdr_ref_table	array
[	O
HASH_TABLE_SIZE	int
]	O
;	O
int	O
parser_init	function
(	O
void	O
)	O
{	O
int	O
i	int
=	O
0	int
;	O
int	O
hname_length	int
=	O
sizeof	O
(	O
pconfig_commasep	array
[	O
0	int
]	O
.	O
hname	pointer
)	O
;	O
memset	function
(	O
pconfig_commasep	array
,	O
0	int
,	O
sizeof	O
(	O
pconfig_commasep	array
)	O
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Accept"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"a"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Accept-Encoding"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Accept-Language"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Alert-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Allow"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Authentication-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Call-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Contact"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"m"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Content-Encoding"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"e"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Content-Language"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Error-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"In-Reply-To"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Proxy-Require"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Record-Route"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Require"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Route"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Supported"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"k"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Unsupported"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Via"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"v"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Warning"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Media-Authorization"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Asserted-Identity"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Preferred-Identity"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Reason"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Path"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Security-Client"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Security-Server"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Security-Verify"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Service-Route"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Request-Disposition"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"d"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Accept-Contact"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"a"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Reject-Contact"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"j"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Resource-Priority"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Accept-Resource-Priority"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Early-Media"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Refused-URI-List"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Permission-Missing"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Trigger-Consent"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Asserted-Service"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Preferred-Service"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Recv-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Allow-Events"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"u"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Policy-ID"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Policy-Contact"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Feature-Caps"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"History-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"Accept"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Associated-URI"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Visited-Network-ID"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Access-Network-Info"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"P-Charging-Function-Addresses"	pointer
)	O
;	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
++	O
]	O
.	O
hname	pointer
,	O
hname_length	int
,	O
"%s"	pointer
,	O
"User-to-User"	pointer
)	O
;	O
i	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ACCEPT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_accept	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ACCEPT_ENCODING	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_accept_encoding	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ACCEPT_LANGUAGE	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_accept_language	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ALERT_INFO	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_alert_info	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ALLOW	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_allow	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
AUTHENTICATION_INFO	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_authentication_info	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
AUTHORIZATION	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_authorization	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTENT_TYPE_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_content_type	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CALL_ID	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_call_id	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CALL_INFO	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_call_info	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTACT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_contact	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTENT_ENCODING	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_content_encoding	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTENT_LENGTH	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_content_length	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTENT_TYPE	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_content_type	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CSEQ	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_cseq	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTENT_ENCODING_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_content_encoding	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ERROR_INFO	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_error_info	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
FROM_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_from	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
FROM	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_from	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CALL_ID_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_call_id	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTENT_LENGTH_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_content_length	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
CONTACT_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_contact	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
MIME_VERSION	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_mime_version	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
PROXY_AUTHENTICATE	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_proxy_authenticate	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
PROXY_AUTHENTICATION_INFO	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_proxy_authentication_info	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
PROXY_AUTHORIZATION	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_proxy_authorization	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
RECORD_ROUTE	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_record_route	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
ROUTE	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_route	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
TO_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_to	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
TO	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_to	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
VIA_SHORT	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_via	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
VIA	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
0	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_via	function
)	O
;	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
=	O
WWW_AUTHENTICATE	pointer
;	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
=	O
1	int
;	O
pconfig	array
[	O
i	int
++	O
]	O
.	O
setheader	pointer
=	O
(	O
&	O
osip_message_set_www_authenticate	function
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
HASH_TABLE_SIZE	int
;	O
i	int
++	O
)	O
{	O
hdr_ref_table	array
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUMBER_OF_HEADERS	int
;	O
i	int
++	O
)	O
{	O
unsigned	O
long	O
hash	long
;	O
hash	long
=	O
osip_hash	function
(	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
)	O
;	O
hash	long
=	O
hash	long
%	O
HASH_TABLE_SIZE	int
;	O
if	O
(	O
hdr_ref_table	array
[	O
hash	long
]	O
==	O
-	O
1	int
)	O
{	O
hdr_ref_table	array
[	O
hash	long
]	O
=	O
i	int
;	O
}	O
else	O
{	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"conflict with current hashtable size\n"	pointer
)	O
)	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
parser_add_comma_separated_header	function
(	O
const	O
char	O
*	O
hname	pointer
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUMBER_OF_HEADERS_COMMASEPARATED	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
pconfig_commasep	array
[	O
i	int
]	O
.	O
hname	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
{	O
snprintf	function
(	O
pconfig_commasep	array
[	O
i	int
]	O
.	O
hname	pointer
,	O
sizeof	O
(	O
pconfig_commasep	array
[	O
i	int
]	O
.	O
hname	pointer
)	O
,	O
"%s"	pointer
,	O
hname	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
}	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
int	O
__osip_message_is_header_comma_separated	function
(	O
const	O
char	O
*	O
hname	pointer
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NUMBER_OF_HEADERS_COMMASEPARATED	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
pconfig_commasep	array
[	O
i	int
]	O
.	O
hname	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
osip_strcasecmp	function
(	O
pconfig_commasep	array
[	O
i	int
]	O
.	O
hname	pointer
,	O
hname	pointer
)	O
==	O
0	int
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
int	O
__osip_message_is_known_header	function
(	O
const	O
char	O
*	O
hname	pointer
)	O
{	O
unsigned	O
long	O
hash	long
;	O
int	O
result	pointer
=	O
-	O
1	int
;	O
int	O
index	function
;	O
hash	long
=	O
osip_hash	function
(	O
hname	pointer
)	O
;	O
hash	long
=	O
hash	long
%	O
HASH_TABLE_SIZE	int
;	O
index	function
=	O
hdr_ref_table	array
[	O
hash	long
]	O
;	O
if	O
(	O
(	O
index	function
!=	O
-	O
1	int
)	O
&&	O
(	O
0	int
==	O
strcmp	function
(	O
pconfig	array
[	O
index	function
]	O
.	O
hname	pointer
,	O
hname	pointer
)	O
)	O
)	O
{	O
result	pointer
=	O
index	function
;	O
}	O
return	O
result	pointer
;	O
}	O
int	O
__osip_message_call_method	function
(	O
int	O
i	int
,	O
osip_message_t	struct
*	O
dest	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
int	O
err	int
;	O
err	int
=	O
pconfig	array
[	O
i	int
]	O
.	O
setheader	pointer
(	O
dest	pointer
,	O
hvalue	pointer
)	O
;	O
if	O
(	O
err	int
<	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Could not set header: %s: %s\n"	pointer
,	O
pconfig	array
[	O
i	int
]	O
.	O
hname	pointer
,	O
hvalue	pointer
)	O
)	O
;	O
}	O
if	O
(	O
pconfig	array
[	O
i	int
]	O
.	O
ignored_when_invalid	int
==	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
err	int
;	O
}	O
