static	O
int	O
seeded	int
;	O
static	O
char	O
statebuf	array
[	O
64	int
]	O
;	O
static	O
struct	O
random_data	struct
state	pointer
;	O
static	O
wget_thread_mutex	pointer
mutex	pointer
;	O
static	O
bool	bool
initialized	bool
;	O
static	O
void	O
__attribute__	O
(	O
(	O
constructor	O
)	O
)	O
_wget_random_init	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
initialized	bool
)	O
{	O
wget_thread_mutex_init	function
(	O
&	O
mutex	pointer
)	O
;	O
initialized	bool
=	O
1	int
;	O
}	O
}	O
static	O
void	O
__attribute__	O
(	O
(	O
destructor	pointer
)	O
)	O
_wget_random_exit	function
(	O
void	O
)	O
{	O
if	O
(	O
initialized	bool
)	O
{	O
wget_thread_mutex_destroy	function
(	O
&	O
mutex	pointer
)	O
;	O
initialized	bool
=	O
0	int
;	O
}	O
}	O
void	O
wget_random_init	function
(	O
void	O
)	O
{	O
_wget_random_init	function
(	O
)	O
;	O
}	O
void	O
wget_random_exit	function
(	O
void	O
)	O
{	O
_wget_random_exit	function
(	O
)	O
;	O
}	O
int	O
wget_random	function
(	O
void	O
)	O
{	O
int32_t	int
r	int
;	O
wget_thread_mutex_lock	function
(	O
mutex	pointer
)	O
;	O
if	O
(	O
!	O
seeded	int
)	O
{	O
initstate_r	function
(	O
(	O
unsigned	O
)	O
(	O
time	struct
(	O
NULL	O
)	O
^	O
getpid	function
(	O
)	O
)	O
,	O
statebuf	array
,	O
sizeof	O
(	O
statebuf	array
)	O
,	O
&	O
state	pointer
)	O
;	O
seeded	int
=	O
1	int
;	O
}	O
if	O
(	O
random_r	function
(	O
&	O
state	pointer
,	O
&	O
r	int
)	O
)	O
r	int
=	O
0	int
;	O
wget_thread_mutex_unlock	function
(	O
mutex	pointer
)	O
;	O
return	O
(	O
int	O
)	O
r	int
;	O
}	O
void	O
wget_srandom	function
(	O
unsigned	O
int	O
seed	int
)	O
{	O
wget_thread_mutex_lock	function
(	O
mutex	pointer
)	O
;	O
initstate_r	function
(	O
seed	int
,	O
statebuf	array
,	O
sizeof	O
(	O
statebuf	array
)	O
,	O
&	O
state	pointer
)	O
;	O
seeded	int
=	O
1	int
;	O
wget_thread_mutex_unlock	function
(	O
mutex	pointer
)	O
;	O
}	O
