static	O
void	O
configLine	function
(	O
poptContext	pointer
con	pointer
,	O
char	O
*	O
line	pointer
)	O
{	O
int	O
nameLength	int
=	O
strlen	function
(	O
con	pointer
->	O
appName	pointer
)	O
;	O
char	O
*	O
opt	pointer
;	O
struct	O
poptAlias	struct
alias	struct
;	O
char	O
*	O
entryType	pointer
;	O
char	O
*	O
longName	pointer
=	O
NULL	O
;	O
char	O
shortName	char
=	O
'\0'	O
;	O
if	O
(	O
strncmp	function
(	O
line	pointer
,	O
con	pointer
->	O
appName	pointer
,	O
nameLength	int
)	O
)	O
return	O
;	O
line	pointer
+=	O
nameLength	int
;	O
if	O
(	O
!	O
*	O
line	pointer
||	O
!	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
line	pointer
)	O
)	O
return	O
;	O
while	O
(	O
*	O
line	pointer
&&	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
line	pointer
)	O
)	O
line	pointer
++	O
;	O
entryType	pointer
=	O
line	pointer
;	O
while	O
(	O
!	O
*	O
line	pointer
||	O
!	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
line	pointer
)	O
)	O
line	pointer
++	O
;	O
*	O
line	pointer
++	O
=	O
'\0'	O
;	O
while	O
(	O
*	O
line	pointer
&&	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
line	pointer
)	O
)	O
line	pointer
++	O
;	O
if	O
(	O
!	O
*	O
line	pointer
)	O
return	O
;	O
opt	pointer
=	O
line	pointer
;	O
while	O
(	O
!	O
*	O
line	pointer
||	O
!	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
line	pointer
)	O
)	O
line	pointer
++	O
;	O
*	O
line	pointer
++	O
=	O
'\0'	O
;	O
while	O
(	O
*	O
line	pointer
&&	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
line	pointer
)	O
)	O
line	pointer
++	O
;	O
if	O
(	O
!	O
*	O
line	pointer
)	O
return	O
;	O
if	O
(	O
opt	pointer
[	O
0	int
]	O
==	O
'-'	O
&&	O
opt	pointer
[	O
1	int
]	O
==	O
'-'	O
)	O
longName	pointer
=	O
opt	pointer
+	O
2	int
;	O
else	O
if	O
(	O
opt	pointer
[	O
0	int
]	O
==	O
'-'	O
&&	O
!	O
opt	pointer
[	O
2	int
]	O
)	O
shortName	char
=	O
opt	pointer
[	O
1	int
]	O
;	O
if	O
(	O
!	O
strcmp	function
(	O
entryType	pointer
,	O
"alias"	pointer
)	O
)	O
{	O
if	O
(	O
poptParseArgvString	function
(	O
line	pointer
,	O
&	O
alias	struct
.	O
argc	int
,	O
&	O
alias	struct
.	O
argv	pointer
)	O
)	O
return	O
;	O
alias	struct
.	O
longName	pointer
=	O
longName	pointer
,	O
alias	struct
.	O
shortName	char
=	O
shortName	char
;	O
poptAddAlias	function
(	O
con	pointer
,	O
alias	struct
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
entryType	pointer
,	O
"exec"	pointer
)	O
)	O
{	O
con	pointer
->	O
execs	pointer
=	O
realloc	function
(	O
con	pointer
->	O
execs	pointer
,	O
sizeof	O
(	O
*	O
con	pointer
->	O
execs	pointer
)	O
*	O
(	O
con	pointer
->	O
numExecs	int
+	O
1	int
)	O
)	O
;	O
if	O
(	O
longName	pointer
)	O
con	pointer
->	O
execs	pointer
[	O
con	pointer
->	O
numExecs	int
]	O
.	O
longName	pointer
=	O
strdup	function
(	O
longName	pointer
)	O
;	O
else	O
con	pointer
->	O
execs	pointer
[	O
con	pointer
->	O
numExecs	int
]	O
.	O
longName	pointer
=	O
NULL	O
;	O
con	pointer
->	O
execs	pointer
[	O
con	pointer
->	O
numExecs	int
]	O
.	O
shortName	char
=	O
shortName	char
;	O
con	pointer
->	O
execs	pointer
[	O
con	pointer
->	O
numExecs	int
]	O
.	O
script	pointer
=	O
strdup	function
(	O
line	pointer
)	O
;	O
con	pointer
->	O
numExecs	int
++	O
;	O
}	O
}	O
int	O
poptReadConfigFile	function
(	O
poptContext	pointer
con	pointer
,	O
const	O
char	O
*	O
fn	pointer
)	O
{	O
char	O
*	O
file	pointer
,	O
*	O
chptr	pointer
,	O
*	O
end	pointer
;	O
char	O
*	O
buf	pointer
,	O
*	O
dst	pointer
;	O
int	O
fd	int
,	O
rc	int
;	O
int	O
fileLength	int
;	O
fd	int
=	O
open	function
(	O
fn	pointer
,	O
O_RDONLY	int
)	O
;	O
if	O
(	O
fd	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	int
)	O
return	O
0	int
;	O
else	O
return	O
POPT_ERROR_ERRNO	O
;	O
}	O
fileLength	int
=	O
lseek	function
(	O
fd	int
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
lseek	function
(	O
fd	int
,	O
0	int
,	O
0	int
)	O
;	O
file	pointer
=	O
alloca	function
(	O
fileLength	int
+	O
1	int
)	O
;	O
if	O
(	O
read	function
(	O
fd	int
,	O
file	pointer
,	O
fileLength	int
)	O
!=	O
fileLength	int
)	O
{	O
rc	int
=	O
errno	O
;	O
close	function
(	O
fd	int
)	O
;	O
errno	O
=	O
rc	int
;	O
return	O
POPT_ERROR_ERRNO	O
;	O
}	O
close	function
(	O
fd	int
)	O
;	O
dst	pointer
=	O
buf	pointer
=	O
alloca	function
(	O
fileLength	int
+	O
1	int
)	O
;	O
chptr	pointer
=	O
file	pointer
;	O
end	pointer
=	O
(	O
file	pointer
+	O
fileLength	int
)	O
;	O
while	O
(	O
chptr	pointer
<	O
end	pointer
)	O
{	O
switch	O
(	O
*	O
chptr	pointer
)	O
{	O
case	O
'\n'	O
:	O
*	O
dst	pointer
=	O
'\0'	O
;	O
dst	pointer
=	O
buf	pointer
;	O
while	O
(	O
*	O
dst	pointer
&&	O
isspace	function
(	O
(	O
unsigned	O
char	O
)	O
*	O
dst	pointer
)	O
)	O
dst	pointer
++	O
;	O
if	O
(	O
*	O
dst	pointer
&&	O
*	O
dst	pointer
!=	O
'#'	O
)	O
{	O
configLine	function
(	O
con	pointer
,	O
dst	pointer
)	O
;	O
}	O
chptr	pointer
++	O
;	O
break	O
;	O
case	O
'\\'	O
:	O
*	O
dst	pointer
++	O
=	O
*	O
chptr	pointer
++	O
;	O
if	O
(	O
chptr	pointer
<	O
end	pointer
)	O
{	O
if	O
(	O
*	O
chptr	pointer
==	O
'\n'	O
)	O
dst	pointer
--	O
,	O
chptr	pointer
++	O
;	O
else	O
*	O
dst	pointer
++	O
=	O
*	O
chptr	pointer
++	O
;	O
}	O
break	O
;	O
default	O
:	O
*	O
dst	pointer
++	O
=	O
*	O
chptr	pointer
++	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
poptReadDefaultConfig	function
(	O
poptContext	pointer
con	pointer
,	O
int	O
useEnv	int
)	O
{	O
char	O
*	O
fn	pointer
;	O
const	O
char	O
*	O
home	pointer
;	O
int	O
rc	int
;	O
(	O
void	O
)	O
useEnv	int
;	O
if	O
(	O
!	O
con	pointer
->	O
appName	pointer
)	O
return	O
0	int
;	O
rc	int
=	O
poptReadConfigFile	function
(	O
con	pointer
,	O
"/etc/popt"	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
getuid	function
(	O
)	O
!=	O
geteuid	function
(	O
)	O
)	O
return	O
0	int
;	O
if	O
(	O
(	O
home	pointer
=	O
getenv	function
(	O
"HOME"	pointer
)	O
)	O
)	O
{	O
fn	pointer
=	O
alloca	function
(	O
strlen	function
(	O
home	pointer
)	O
+	O
20	int
)	O
;	O
strcpy	function
(	O
fn	pointer
,	O
home	pointer
)	O
;	O
strcat	function
(	O
fn	pointer
,	O
"/.popt"	pointer
)	O
;	O
rc	int
=	O
poptReadConfigFile	function
(	O
con	pointer
,	O
fn	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
return	O
0	int
;	O
}	O
