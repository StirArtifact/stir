static	O
inline	O
unsigned	O
long	O
int	O
gfsr4_get	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
double	O
gfsr4_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
void	O
gfsr4_set	function
(	O
void	O
*	O
state	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
;	O
typedef	O
struct	O
{	O
int	O
nd	int
;	O
unsigned	O
long	O
ra	array
[	O
M	int
+	O
1	int
]	O
;	O
}	O
gfsr4_state_t	struct
;	O
static	O
inline	O
unsigned	O
long	O
gfsr4_get	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
gfsr4_state_t	struct
*	O
state	pointer
=	O
(	O
gfsr4_state_t	struct
*	O
)	O
vstate	pointer
;	O
state	pointer
->	O
nd	int
=	O
(	O
(	O
state	pointer
->	O
nd	int
)	O
+	O
1	int
)	O
&	O
M	int
;	O
return	O
state	pointer
->	O
ra	array
[	O
(	O
state	pointer
->	O
nd	int
)	O
]	O
=	O
state	pointer
->	O
ra	array
[	O
(	O
(	O
state	pointer
->	O
nd	int
)	O
+	O
(	O
M	int
+	O
1	int
-	O
A	int
)	O
)	O
&	O
M	int
]	O
^	O
state	pointer
->	O
ra	array
[	O
(	O
(	O
state	pointer
->	O
nd	int
)	O
+	O
(	O
M	int
+	O
1	int
-	O
B	int
)	O
)	O
&	O
M	int
]	O
^	O
state	pointer
->	O
ra	array
[	O
(	O
(	O
state	pointer
->	O
nd	int
)	O
+	O
(	O
M	int
+	O
1	int
-	O
C	int
)	O
)	O
&	O
M	int
]	O
^	O
state	pointer
->	O
ra	array
[	O
(	O
(	O
state	pointer
->	O
nd	int
)	O
+	O
(	O
M	int
+	O
1	int
-	O
D	int
)	O
)	O
&	O
M	int
]	O
;	O
}	O
static	O
double	O
gfsr4_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
return	O
gfsr4_get	function
(	O
vstate	pointer
)	O
/	O
4294967296.0	int
;	O
}	O
static	O
void	O
gfsr4_set	function
(	O
void	O
*	O
vstate	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
{	O
gfsr4_state_t	struct
*	O
state	pointer
=	O
(	O
gfsr4_state_t	struct
*	O
)	O
vstate	pointer
;	O
int	O
i	int
,	O
j	int
;	O
unsigned	O
long	O
int	O
msb	long
=	O
0x80000000UL	int
;	O
unsigned	O
long	O
int	O
mask	long
=	O
0xffffffffUL	int
;	O
if	O
(	O
s	long
==	O
0	int
)	O
s	long
=	O
4357	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
M	int
;	O
i	int
++	O
)	O
{	O
unsigned	O
long	O
t	long
=	O
0	int
;	O
unsigned	O
long	O
bit	long
=	O
msb	long
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
32	int
;	O
j	int
++	O
)	O
{	O
s	long
=	O
LCG	O
(	O
s	long
)	O
;	O
if	O
(	O
s	long
&	O
msb	long
)	O
t	long
|=	O
bit	long
;	O
bit	long
>>=	O
1	int
;	O
}	O
state	pointer
->	O
ra	array
[	O
i	int
]	O
=	O
t	long
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
32	int
;	O
++	O
i	int
)	O
{	O
int	O
k	long
=	O
7	int
+	O
i	int
*	O
3	int
;	O
state	pointer
->	O
ra	array
[	O
k	long
]	O
&=	O
mask	long
;	O
state	pointer
->	O
ra	array
[	O
k	long
]	O
|=	O
msb	long
;	O
mask	long
>>=	O
1	int
;	O
msb	long
>>=	O
1	int
;	O
}	O
state	pointer
->	O
nd	int
=	O
i	int
;	O
}	O
static	O
const	O
gsl_rng_type	struct
gfsr4_type	struct
=	O
{	O
"gfsr4"	pointer
,	O
0xffffffffUL	int
,	O
0	int
,	O
sizeof	O
(	O
gfsr4_state_t	struct
)	O
,	O
&	O
gfsr4_set	function
,	O
&	O
gfsr4_get	function
,	O
&	O
gfsr4_get_double	function
}	O
;	O
const	O
gsl_rng_type	struct
*	O
gsl_rng_gfsr4	pointer
=	O
&	O
gfsr4_type	struct
;	O
