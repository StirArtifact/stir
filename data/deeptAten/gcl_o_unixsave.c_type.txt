filecpy	O
(	O
to	O
,	O
from	O
,	O
n	int
)	O
FILE	O
*	O
to	O
,	O
*	O
from	O
;	O
register	O
int	O
n	int
;	O
{	O
char	O
buffer	O
[	O
BUFSIZ	O
]	O
;	O
for	O
(	O
;	O
;	O
)	O
if	O
(	O
n	int
>	O
BUFSIZ	O
)	O
{	O
fread	O
(	O
buffer	O
,	O
BUFSIZ	O
,	O
1	int
,	O
from	O
)	O
;	O
fwrite	function
(	O
buffer	O
,	O
BUFSIZ	O
,	O
1	int
,	O
to	O
)	O
;	O
n	int
-=	O
BUFSIZ	O
;	O
}	O
else	O
if	O
(	O
n	int
>	O
0	int
)	O
{	O
fread	O
(	O
buffer	O
,	O
1	int
,	O
n	int
,	O
from	O
)	O
;	O
fwrite	function
(	O
buffer	O
,	O
1	int
,	O
n	int
,	O
to	O
)	O
;	O
break	O
;	O
}	O
else	O
break	O
;	O
}	O
static	O
void	O
memory_save	function
(	O
original_file	pointer
,	O
save_file	pointer
)	O
char	O
*	O
original_file	pointer
,	O
*	O
save_file	pointer
;	O
{	O
MEM_SAVE_LOCALS	O
;	O
char	O
*	O
data_begin	pointer
,	O
*	O
data_end	pointer
;	O
int	O
original_data	int
;	O
FILE	O
*	O
original	O
,	O
*	O
save	O
;	O
register	O
int	O
n	int
;	O
register	O
char	O
*	O
p	pointer
;	O
extern	O
char	O
*	O
sbrk	function
(	O
)	O
;	O
original	O
=	O
freopen	function
(	O
original_file	pointer
,	O
"r"	pointer
,	O
stdin	O
)	O
;	O
if	O
(	O
stdin	O
!=	O
original	O
||	O
original	O
->	O
_file	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	O
,	O
"Can't open the original file.\n"	pointer
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
setbuf	function
(	O
original	O
,	O
stdin_buf	O
)	O
;	O
fclose	function
(	O
stdout	O
)	O
;	O
unlink	function
(	O
save_file	pointer
)	O
;	O
n	int
=	O
open	function
(	O
save_file	pointer
,	O
O_CREAT	O
|	O
O_WRONLY	O
,	O
0777	int
)	O
;	O
if	O
(	O
n	int
!=	O
1	int
||	O
(	O
save	O
=	O
fdopen	function
(	O
n	int
,	O
"w"	pointer
)	O
)	O
!=	O
stdout	O
)	O
{	O
fprintf	function
(	O
stderr	O
,	O
"Can't open the save file.\n"	pointer
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
setbuf	function
(	O
save	O
,	O
stdout_buf	O
)	O
;	O
READ_HEADER	O
;	O
FILECPY_HEADER	O
;	O
for	O
(	O
n	int
=	O
header	O
.	O
a_data	O
,	O
p	pointer
=	O
data_begin	pointer
;	O
;	O
n	int
-=	O
BUFSIZ	O
,	O
p	pointer
+=	O
BUFSIZ	O
)	O
if	O
(	O
n	int
>	O
BUFSIZ	O
)	O
fwrite	function
(	O
p	pointer
,	O
BUFSIZ	O
,	O
1	int
,	O
save	O
)	O
;	O
else	O
if	O
(	O
n	int
>	O
0	int
)	O
{	O
fwrite	function
(	O
p	pointer
,	O
1	int
,	O
n	int
,	O
save	O
)	O
;	O
break	O
;	O
}	O
else	O
break	O
;	O
fseek	function
(	O
original	O
,	O
original_data	int
,	O
1	int
)	O
;	O
COPY_TO_SAVE	O
;	O
fclose	function
(	O
original	O
)	O
;	O
fclose	function
(	O
save	O
)	O
;	O
}	O
extern	O
void	O
_cleanup	function
(	O
)	O
;	O
LFD	function
(	O
Lsave	int
)	O
(	O
)	O
{	O
char	O
filename	array
[	O
256	int
]	O
;	O
check_arg	function
(	O
1	int
)	O
;	O
check_type_or_pathname_string_symbol_stream	function
(	O
&	O
vs_base	O
[	O
0	int
]	O
)	O
;	O
coerce_to_filename	function
(	O
vs_base	O
[	O
0	int
]	O
,	O
filename	array
)	O
;	O
_cleanup	function
(	O
)	O
;	O
memory_save	function
(	O
kcl_self	O
,	O
filename	array
)	O
;	O
exit	O
(	O
0	int
)	O
;	O
}	O
void	O
gcl_init_unixsave	function
(	O
void	O
)	O
{	O
make_function	function
(	O
"SAVE"	pointer
,	O
Lsave	int
)	O
;	O
}	O
