static	O
OM_uint32	int
acquire_cred1	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
desired_name	pointer
,	O
OM_uint32	int
time_req	int
,	O
const	O
gss_OID_set	pointer
desired_mechs	pointer
,	O
gss_cred_usage_t	int
cred_usage	int
,	O
gss_cred_id_t	pointer
*	O
output_cred_handle	pointer
,	O
gss_OID_set	pointer
*	O
actual_mechs	pointer
,	O
OM_uint32	int
*	O
time_rec	pointer
)	O
{	O
gss_name_t	pointer
name	pointer
=	O
desired_name	pointer
;	O
_gss_krb5_cred_t	pointer
k5	pointer
=	O
(	O
*	O
output_cred_handle	pointer
)	O
->	O
krb5	O
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
desired_name	pointer
==	O
GSS_C_NO_NAME	O
)	O
{	O
gss_buffer_desc	struct
buf	struct
=	O
{	O
4	int
,	O
(	O
char	O
*	O
)	O
"host"	pointer
}	O
;	O
maj_stat	int
=	O
gss_import_name	function
(	O
minor_status	pointer
,	O
&	O
buf	struct
,	O
GSS_C_NT_HOSTBASED_SERVICE	pointer
,	O
&	O
name	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
maj_stat	int
=	O
gss_krb5_canonicalize_name	function
(	O
minor_status	pointer
,	O
name	pointer
,	O
GSS_KRB5	O
,	O
&	O
k5	pointer
->	O
peerptr	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
if	O
(	O
k5	pointer
->	O
peerptr	pointer
==	O
GSS_C_NO_NAME	O
)	O
{	O
maj_stat	int
=	O
gss_release_name	function
(	O
minor_status	pointer
,	O
&	O
name	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
return	O
GSS_S_BAD_NAME	O
;	O
}	O
if	O
(	O
shishi_init_server	function
(	O
&	O
k5	pointer
->	O
sh	pointer
)	O
!=	O
SHISHI_OK	O
)	O
return	O
GSS_S_FAILURE	O
;	O
{	O
char	O
*	O
p	pointer
;	O
p	pointer
=	O
malloc	function
(	O
k5	pointer
->	O
peerptr	pointer
->	O
length	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
memcpy	function
(	O
p	pointer
,	O
k5	pointer
->	O
peerptr	pointer
->	O
value	pointer
,	O
k5	pointer
->	O
peerptr	pointer
->	O
length	int
)	O
;	O
p	pointer
[	O
k5	pointer
->	O
peerptr	pointer
->	O
length	int
]	O
=	O
0	int
;	O
k5	pointer
->	O
key	pointer
=	O
shishi_hostkeys_for_serverrealm	function
(	O
k5	pointer
->	O
sh	pointer
,	O
p	pointer
,	O
NULL	O
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
}	O
if	O
(	O
!	O
k5	pointer
->	O
key	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
GSS_KRB5_S_KG_KEYTAB_NOMATCH	O
;	O
return	O
GSS_S_NO_CRED	O
;	O
}	O
if	O
(	O
time_rec	pointer
)	O
*	O
time_rec	pointer
=	O
GSS_C_INDEFINITE	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_krb5_acquire_cred	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
desired_name	pointer
,	O
OM_uint32	int
time_req	int
,	O
const	O
gss_OID_set	pointer
desired_mechs	pointer
,	O
gss_cred_usage_t	int
cred_usage	int
,	O
gss_cred_id_t	pointer
*	O
output_cred_handle	pointer
,	O
gss_OID_set	pointer
*	O
actual_mechs	pointer
,	O
OM_uint32	int
*	O
time_rec	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
gss_cred_id_t	pointer
p	pointer
=	O
*	O
output_cred_handle	pointer
;	O
p	pointer
->	O
krb5	O
=	O
calloc	function
(	O
sizeof	O
(	O
*	O
p	pointer
->	O
krb5	O
)	O
,	O
1	int
)	O
;	O
if	O
(	O
!	O
p	pointer
->	O
krb5	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
if	O
(	O
actual_mechs	pointer
)	O
{	O
maj_stat	int
=	O
gss_create_empty_oid_set	function
(	O
minor_status	pointer
,	O
actual_mechs	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
{	O
free	function
(	O
p	pointer
->	O
krb5	O
)	O
;	O
return	O
maj_stat	int
;	O
}	O
maj_stat	int
=	O
gss_add_oid_set_member	function
(	O
minor_status	pointer
,	O
GSS_KRB5	O
,	O
actual_mechs	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
{	O
free	function
(	O
p	pointer
->	O
krb5	O
)	O
;	O
return	O
maj_stat	int
;	O
}	O
}	O
maj_stat	int
=	O
acquire_cred1	function
(	O
minor_status	pointer
,	O
desired_name	pointer
,	O
time_req	int
,	O
desired_mechs	pointer
,	O
cred_usage	int
,	O
&	O
p	pointer
,	O
actual_mechs	pointer
,	O
time_rec	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
{	O
if	O
(	O
actual_mechs	pointer
)	O
gss_release_oid_set	function
(	O
NULL	O
,	O
actual_mechs	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
krb5	O
)	O
;	O
return	O
maj_stat	int
;	O
}	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
static	O
OM_uint32	int
inquire_cred	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_cred_id_t	pointer
cred_handle	pointer
,	O
gss_name_t	pointer
*	O
name	pointer
,	O
OM_uint32	int
*	O
lifetime	pointer
,	O
gss_cred_usage_t	int
*	O
cred_usage	int
,	O
gss_OID_set	pointer
*	O
mechanisms	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
cred_handle	pointer
==	O
GSS_C_NO_CREDENTIAL	O
)	O
return	O
GSS_S_NO_CRED	O
;	O
if	O
(	O
mechanisms	pointer
)	O
{	O
maj_stat	int
=	O
gss_create_empty_oid_set	function
(	O
minor_status	pointer
,	O
mechanisms	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
maj_stat	int
=	O
gss_add_oid_set_member	function
(	O
minor_status	pointer
,	O
GSS_KRB5	O
,	O
mechanisms	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
if	O
(	O
name	pointer
)	O
{	O
maj_stat	int
=	O
gss_duplicate_name	function
(	O
minor_status	pointer
,	O
cred_handle	pointer
->	O
krb5	O
->	O
peerptr	pointer
,	O
name	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
if	O
(	O
cred_usage	int
)	O
*	O
cred_usage	int
=	O
GSS_C_BOTH	int
;	O
if	O
(	O
lifetime	pointer
)	O
*	O
lifetime	pointer
=	O
GSS_C_INDEFINITE	int
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_krb5_inquire_cred	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_cred_id_t	pointer
cred_handle	pointer
,	O
gss_name_t	pointer
*	O
name	pointer
,	O
OM_uint32	int
*	O
lifetime	pointer
,	O
gss_cred_usage_t	int
*	O
cred_usage	int
,	O
gss_OID_set	pointer
*	O
mechanisms	pointer
)	O
{	O
return	O
inquire_cred	function
(	O
minor_status	pointer
,	O
cred_handle	pointer
,	O
name	pointer
,	O
lifetime	pointer
,	O
cred_usage	int
,	O
mechanisms	pointer
)	O
;	O
}	O
OM_uint32	int
gss_krb5_inquire_cred_by_mech	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_cred_id_t	pointer
cred_handle	pointer
,	O
const	O
gss_OID	pointer
mech_type	pointer
,	O
gss_name_t	pointer
*	O
name	pointer
,	O
OM_uint32	int
*	O
initiator_lifetime	pointer
,	O
OM_uint32	int
*	O
acceptor_lifetime	pointer
,	O
gss_cred_usage_t	int
*	O
cred_usage	int
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
maj_stat	int
=	O
inquire_cred	function
(	O
minor_status	pointer
,	O
cred_handle	pointer
,	O
name	pointer
,	O
initiator_lifetime	pointer
,	O
cred_usage	int
,	O
NULL	O
)	O
;	O
if	O
(	O
acceptor_lifetime	pointer
)	O
*	O
acceptor_lifetime	pointer
=	O
*	O
initiator_lifetime	pointer
;	O
return	O
maj_stat	int
;	O
}	O
OM_uint32	int
gss_krb5_release_cred	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
gss_cred_id_t	pointer
*	O
cred_handle	pointer
)	O
{	O
_gss_krb5_cred_t	pointer
k5	pointer
=	O
(	O
*	O
cred_handle	pointer
)	O
->	O
krb5	O
;	O
if	O
(	O
k5	pointer
->	O
peerptr	pointer
!=	O
GSS_C_NO_NAME	O
)	O
gss_release_name	function
(	O
NULL	O
,	O
&	O
k5	pointer
->	O
peerptr	pointer
)	O
;	O
shishi_key_done	function
(	O
k5	pointer
->	O
key	pointer
)	O
;	O
shishi_done	function
(	O
k5	pointer
->	O
sh	pointer
)	O
;	O
free	function
(	O
k5	pointer
)	O
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
