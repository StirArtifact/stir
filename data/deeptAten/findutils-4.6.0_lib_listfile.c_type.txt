static	O
bool	bool
print_name	function
(	O
register	O
const	O
char	O
*	O
p	pointer
,	O
FILE	struct
*	O
stream	pointer
,	O
int	O
literal_control_chars	int
)	O
;	O
static	O
int	O
inode_number_width	int
=	O
9	int
;	O
static	O
int	O
block_size_width	int
=	O
6	int
;	O
static	O
int	O
nlink_width	int
=	O
3	int
;	O
static	O
int	O
owner_width	int
=	O
8	int
;	O
static	O
int	O
group_width	int
=	O
8	int
;	O
static	O
int	O
major_device_number_width	int
=	O
3	int
;	O
static	O
int	O
minor_device_number_width	int
=	O
3	int
;	O
static	O
int	O
file_size_width	int
=	O
8	int
;	O
static	O
bool	bool
print_num	function
(	O
FILE	struct
*	O
stream	pointer
,	O
unsigned	O
long	O
num	long
,	O
int	O
*	O
width	pointer
)	O
{	O
const	O
int	O
chars_out	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"%*lu"	pointer
,	O
*	O
width	pointer
,	O
num	long
)	O
;	O
if	O
(	O
chars_out	int
>=	O
0	int
)	O
{	O
if	O
(	O
*	O
width	pointer
<	O
chars_out	int
)	O
*	O
width	pointer
=	O
chars_out	int
;	O
return	O
true	int
;	O
}	O
return	O
false	int
;	O
}	O
void	O
list_file	function
(	O
const	O
char	O
*	O
name	pointer
,	O
int	O
dir_fd	int
,	O
char	O
*	O
relname	pointer
,	O
const	O
struct	O
stat	struct
*	O
statp	pointer
,	O
time_t	long
current_time	long
,	O
int	O
output_block_size	int
,	O
int	O
literal_control_chars	int
,	O
FILE	struct
*	O
stream	pointer
)	O
{	O
char	O
modebuf	array
[	O
12	int
]	O
;	O
struct	O
tm	struct
const	O
*	O
when_local	pointer
;	O
char	O
const	O
*	O
user_name	pointer
;	O
char	O
const	O
*	O
group_name	pointer
;	O
char	O
hbuf	array
[	O
LONGEST_HUMAN_READABLE	O
+	O
1	int
]	O
;	O
bool	bool
output_good	bool
=	O
true	int
;	O
int	O
chars_out	int
;	O
int	O
failed_at	int
=	O
000	int
;	O
int	O
inode_field_width	int
;	O
strmode	function
(	O
statp	pointer
->	O
st_mode	int
,	O
modebuf	array
)	O
;	O
chars_out	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"%*s"	pointer
,	O
inode_number_width	int
,	O
human_readable	function
(	O
(	O
uintmax_t	long
)	O
statp	pointer
->	O
st_ino	long
,	O
hbuf	array
,	O
human_ceiling	int
,	O
1u	int
,	O
1u	int
)	O
)	O
;	O
if	O
(	O
chars_out	int
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
100	int
;	O
}	O
else	O
if	O
(	O
chars_out	int
>	O
inode_number_width	int
)	O
{	O
inode_number_width	int
=	O
chars_out	int
;	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
150	int
;	O
}	O
chars_out	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"%*s"	pointer
,	O
block_size_width	int
,	O
human_readable	function
(	O
(	O
uintmax_t	long
)	O
ST_NBLOCKS	O
(	O
*	O
statp	pointer
)	O
,	O
hbuf	array
,	O
human_ceiling	int
,	O
ST_NBLOCKSIZE	O
,	O
output_block_size	int
)	O
)	O
;	O
if	O
(	O
chars_out	int
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
200	int
;	O
}	O
else	O
{	O
if	O
(	O
chars_out	int
>	O
block_size_width	int
)	O
block_size_width	int
=	O
chars_out	int
;	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
250	int
;	O
}	O
if	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%s%3lu "	pointer
,	O
modebuf	array
,	O
(	O
unsigned	O
long	O
)	O
statp	pointer
->	O
st_nlink	long
)	O
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
300	int
;	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
250	int
;	O
}	O
user_name	pointer
=	O
getuser	function
(	O
statp	pointer
->	O
st_uid	int
)	O
;	O
if	O
(	O
user_name	pointer
)	O
{	O
int	O
len	int
=	O
mbswidth	O
(	O
user_name	pointer
,	O
0	int
)	O
;	O
if	O
(	O
len	int
>	O
owner_width	int
)	O
owner_width	int
=	O
len	int
;	O
output_good	bool
=	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%-*s "	pointer
,	O
owner_width	int
,	O
user_name	pointer
)	O
>=	O
0	int
)	O
;	O
if	O
(	O
!	O
output_good	bool
)	O
failed_at	int
=	O
400	int
;	O
}	O
else	O
{	O
chars_out	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"%-8lu "	pointer
,	O
(	O
unsigned	O
long	O
)	O
statp	pointer
->	O
st_uid	int
)	O
;	O
if	O
(	O
chars_out	int
>	O
owner_width	int
)	O
owner_width	int
=	O
chars_out	int
;	O
output_good	bool
=	O
(	O
chars_out	int
>	O
0	int
)	O
;	O
if	O
(	O
!	O
output_good	bool
)	O
failed_at	int
=	O
450	int
;	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
group_name	pointer
=	O
getgroup	function
(	O
statp	pointer
->	O
st_gid	int
)	O
;	O
if	O
(	O
group_name	pointer
)	O
{	O
int	O
len	int
=	O
mbswidth	O
(	O
group_name	pointer
,	O
0	int
)	O
;	O
if	O
(	O
len	int
>	O
group_width	int
)	O
group_width	int
=	O
len	int
;	O
output_good	bool
=	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%-*s "	pointer
,	O
group_width	int
,	O
group_name	pointer
)	O
>=	O
0	int
)	O
;	O
if	O
(	O
!	O
output_good	bool
)	O
failed_at	int
=	O
500	int
;	O
}	O
else	O
{	O
chars_out	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"%-*lu"	pointer
,	O
group_width	int
,	O
(	O
unsigned	O
long	O
)	O
statp	pointer
->	O
st_gid	int
)	O
;	O
if	O
(	O
chars_out	int
>	O
group_width	int
)	O
group_width	int
=	O
chars_out	int
;	O
output_good	bool
=	O
(	O
chars_out	int
>=	O
0	int
)	O
;	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
525	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
output_good	bool
)	O
failed_at	int
=	O
550	int
;	O
}	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
S_ISCHR	O
(	O
statp	pointer
->	O
st_mode	int
)	O
||	O
S_ISBLK	O
(	O
statp	pointer
->	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
!	O
print_num	function
(	O
stream	pointer
,	O
(	O
unsigned	O
long	O
)	O
major	O
(	O
statp	pointer
->	O
st_rdev	long
)	O
,	O
&	O
major_device_number_width	int
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
600	int
;	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
fprintf	function
(	O
stream	pointer
,	O
", "	pointer
)	O
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
625	int
;	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
!	O
print_num	function
(	O
stream	pointer
,	O
(	O
unsigned	O
long	O
)	O
minor	O
(	O
statp	pointer
->	O
st_rdev	long
)	O
,	O
&	O
minor_device_number_width	int
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
650	int
;	O
}	O
}	O
}	O
else	O
{	O
const	O
int	O
blocksize	int
=	O
output_block_size	int
<	O
0	int
?	O
output_block_size	int
:	O
1	int
;	O
chars_out	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"%*s"	pointer
,	O
file_size_width	int
,	O
human_readable	function
(	O
(	O
uintmax_t	long
)	O
statp	pointer
->	O
st_size	long
,	O
hbuf	array
,	O
human_ceiling	int
,	O
1	int
,	O
blocksize	int
)	O
)	O
;	O
if	O
(	O
chars_out	int
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
800	int
;	O
}	O
else	O
{	O
if	O
(	O
chars_out	int
>	O
file_size_width	int
)	O
{	O
file_size_width	int
=	O
chars_out	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
' '	O
,	O
stream	pointer
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
850	int
;	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
(	O
when_local	pointer
=	O
localtime	function
(	O
&	O
statp	pointer
->	O
st_mtime	O
)	O
)	O
)	O
{	O
char	O
init_bigbuf	array
[	O
256	int
]	O
;	O
char	O
*	O
buf	pointer
=	O
init_bigbuf	array
;	O
size_t	long
bufsize	long
=	O
sizeof	O
init_bigbuf	array
;	O
char	O
const	O
*	O
fmt	pointer
=	O
(	O
(	O
current_time	long
-	O
6	int
*	O
30	int
*	O
24	int
*	O
60	int
*	O
60	int
<=	O
statp	pointer
->	O
st_mtime	O
&&	O
statp	pointer
->	O
st_mtime	O
<=	O
current_time	long
+	O
60	int
*	O
60	int
)	O
?	O
"%b %e %H:%M"	pointer
:	O
"%b %e  %Y"	pointer
)	O
;	O
while	O
(	O
!	O
strftime	function
(	O
buf	pointer
,	O
bufsize	long
,	O
fmt	pointer
,	O
when_local	pointer
)	O
)	O
buf	pointer
=	O
alloca	O
(	O
bufsize	long
*=	O
2	int
)	O
;	O
if	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%s "	pointer
,	O
buf	pointer
)	O
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
900	int
;	O
}	O
}	O
else	O
{	O
int	O
width	pointer
=	O
12	int
;	O
if	O
(	O
statp	pointer
->	O
st_mtime	O
<	O
0	int
)	O
{	O
char	O
const	O
*	O
num	long
=	O
human_readable	function
(	O
-	O
(	O
uintmax_t	long
)	O
statp	pointer
->	O
st_mtime	O
,	O
hbuf	array
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
;	O
int	O
sign_width	int
=	O
width	pointer
-	O
strlen	function
(	O
num	long
)	O
;	O
if	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%*s%s "	pointer
,	O
sign_width	int
<	O
0	int
?	O
0	int
:	O
sign_width	int
,	O
"-"	pointer
,	O
num	long
)	O
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
1000	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%*s "	pointer
,	O
width	pointer
,	O
human_readable	function
(	O
(	O
uintmax_t	long
)	O
statp	pointer
->	O
st_mtime	O
,	O
hbuf	array
,	O
human_ceiling	int
,	O
1	int
,	O
1	int
)	O
)	O
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
1100	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
output_good	bool
=	O
print_name	function
(	O
name	pointer
,	O
stream	pointer
,	O
literal_control_chars	int
)	O
;	O
if	O
(	O
!	O
output_good	bool
)	O
{	O
failed_at	int
=	O
1200	int
;	O
}	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
S_ISLNK	O
(	O
statp	pointer
->	O
st_mode	int
)	O
)	O
{	O
char	O
*	O
linkname	pointer
=	O
areadlinkat	function
(	O
dir_fd	int
,	O
relname	pointer
)	O
;	O
if	O
(	O
linkname	pointer
)	O
{	O
if	O
(	O
fputs	function
(	O
" -> "	pointer
,	O
stream	pointer
)	O
<	O
0	int
)	O
{	O
output_good	bool
=	O
false	int
;	O
failed_at	int
=	O
1300	int
;	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
output_good	bool
=	O
print_name	function
(	O
linkname	pointer
,	O
stream	pointer
,	O
literal_control_chars	int
)	O
;	O
if	O
(	O
!	O
output_good	bool
)	O
{	O
failed_at	int
=	O
1350	int
;	O
}	O
}	O
}	O
else	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
"%s"	pointer
,	O
name	pointer
)	O
;	O
}	O
free	function
(	O
linkname	pointer
)	O
;	O
}	O
if	O
(	O
output_good	bool
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
'\n'	O
,	O
stream	pointer
)	O
)	O
{	O
output_good	bool
=	O
false	int
;	O
if	O
(	O
!	O
output_good	bool
)	O
{	O
failed_at	int
=	O
1400	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
!	O
output_good	bool
)	O
{	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"Failed to write output (at stage %d)"	pointer
)	O
,	O
failed_at	int
)	O
;	O
}	O
}	O
static	O
bool	bool
print_name_without_quoting	function
(	O
const	O
char	O
*	O
p	pointer
,	O
FILE	struct
*	O
stream	pointer
)	O
{	O
return	O
(	O
fprintf	function
(	O
stream	pointer
,	O
"%s"	pointer
,	O
p	pointer
)	O
>=	O
0	int
)	O
;	O
}	O
static	O
bool	bool
print_name_with_quoting	function
(	O
register	O
const	O
char	O
*	O
p	pointer
,	O
FILE	struct
*	O
stream	pointer
)	O
{	O
register	O
unsigned	O
char	O
c	char
;	O
while	O
(	O
(	O
c	char
=	O
*	O
p	pointer
++	O
)	O
!=	O
'\0'	O
)	O
{	O
int	O
fprintf_result	int
=	O
-	O
1	int
;	O
switch	O
(	O
c	char
)	O
{	O
case	O
'\\'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\\\"	pointer
)	O
;	O
break	O
;	O
case	O
'\n'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\n"	pointer
)	O
;	O
break	O
;	O
case	O
'\b'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\b"	pointer
)	O
;	O
break	O
;	O
case	O
'\r'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\r"	pointer
)	O
;	O
break	O
;	O
case	O
'\t'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\t"	pointer
)	O
;	O
break	O
;	O
case	O
'\f'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\f"	pointer
)	O
;	O
break	O
;	O
case	O
' '	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\ "	pointer
)	O
;	O
break	O
;	O
case	O
'"'	O
:	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\\""	pointer
)	O
;	O
break	O
;	O
default	O
:	O
if	O
(	O
c	char
>	O
040	int
&&	O
c	char
<	O
0177	int
)	O
{	O
if	O
(	O
EOF	O
==	O
putc	function
(	O
c	char
,	O
stream	pointer
)	O
)	O
return	O
false	int
;	O
fprintf_result	int
=	O
1	int
;	O
}	O
else	O
{	O
fprintf_result	int
=	O
fprintf	function
(	O
stream	pointer
,	O
"\\%03o"	pointer
,	O
(	O
unsigned	O
int	O
)	O
c	char
)	O
;	O
}	O
}	O
if	O
(	O
fprintf_result	int
<	O
0	int
)	O
return	O
false	int
;	O
}	O
return	O
true	int
;	O
}	O
static	O
bool	bool
print_name	function
(	O
register	O
const	O
char	O
*	O
p	pointer
,	O
FILE	struct
*	O
stream	pointer
,	O
int	O
literal_control_chars	int
)	O
{	O
if	O
(	O
literal_control_chars	int
)	O
return	O
print_name_without_quoting	function
(	O
p	pointer
,	O
stream	pointer
)	O
;	O
else	O
return	O
print_name_with_quoting	function
(	O
p	pointer
,	O
stream	pointer
)	O
;	O
}	O
