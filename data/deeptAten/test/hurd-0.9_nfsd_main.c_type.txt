int	O
main_udp_socket	O
,	O
pmap_udp_socket	O
;	O
struct	O
sockaddr_in	struct
main_address	O
,	O
pmap_address	O
;	O
static	O
char	O
index_file	O
[	O
]	O
=	O
LOCALSTATEDIR	O
"/state/misc/nfsd.index"	O
;	O
char	O
*	O
index_file_name	pointer
=	O
index_file	O
;	O
static	O
void	O
create_server_thread	O
(	O
int	O
socket	int
)	O
{	O
pthread_t	O
thread	O
;	O
int	O
fail	int
;	O
fail	O
=	O
pthread_create	int
(	O
&	O
thread	pointer
,	O
NULL	O
,	O
server_loop	O
,	O
(	O
void	O
*	O
)	O
socket	pointer
)	O
;	O
if	O
(	O
fail	O
)	O
error	O
(	O
1	int
,	O
fail	O
,	O
"Creating main server thread"	int
)	O
;	O
fail	O
=	O
pthread_detach	O
(	O
thread	pointer
)	O
;	O
if	O
(	O
fail	O
)	O
error	O
(	O
1	int
,	O
fail	O
,	O
"Detaching main server thread"	int
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	pointer
argv	pointer
)	O
{	O
int	O
nthreads	int
;	O
int	O
fail	int
;	O
if	O
(	O
argc	O
>	O
2	O
)	O
{	O
fprintf	O
(	O
stderr	pointer
,	O
"%s [num-threads]\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
argc	O
==	O
1	O
)	O
nthreads	O
=	O
4	pointer
;	O
else	O
nthreads	O
=	O
atoi	O
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
if	O
(	O
!	O
nthreads	O
)	O
nthreads	O
=	O
4	pointer
;	O
authserver	O
=	O
getauth	O
(	O
)	pointer
;	O
maptime_map	O
(	O
0	pointer
,	O
0	int
,	O
&	int
mapped_time	pointer
)	O
;	O
main_address	O
.	O
sin_family	pointer
=	O
AF_INET	O
;	O
main_address	O
.	O
sin_port	pointer
=	O
htons	O
(	O
NFS_PORT	pointer
)	O
;	O
main_address	O
.	O
sin_addr	pointer
.	O
s_addr	int
=	O
INADDR_ANY	int
;	O
pmap_address	pointer
.	O
sin_family	pointer
=	O
AF_INET	O
;	O
pmap_address	pointer
.	O
sin_port	pointer
=	O
htons	O
(	O
PMAPPORT	pointer
)	O
;	O
pmap_address	O
.	O
sin_addr	pointer
.	O
s_addr	int
=	O
INADDR_ANY	int
;	O
main_udp_socket	pointer
=	O
socket	O
(	O
PF_INET	pointer
,	O
SOCK_DGRAM	O
,	O
0	pointer
)	O
;	O
pmap_udp_socket	O
=	O
socket	O
(	O
PF_INET	pointer
,	O
SOCK_DGRAM	O
,	O
0	int
)	O
;	O
fail	O
=	O
bind	O
(	O
main_udp_socket	pointer
,	O
(	pointer
struct	O
sockaddr	O
*	O
)	O
&	pointer
main_address	struct
,	O
sizeof	O
(	O
struct	O
sockaddr_in	struct
)	O
)	O
;	O
if	O
(	O
fail	O
)	O
error	O
(	O
1	pointer
,	O
errno	O
,	O
"Binding NFS socket"	int
)	O
;	O
fail	O
=	O
bind	O
(	O
pmap_udp_socket	pointer
,	O
(	O
struct	O
sockaddr	O
*	O
)	O
&	pointer
pmap_address	struct
,	O
sizeof	O
(	O
struct	O
sockaddr_in	struct
)	O
)	O
;	O
if	O
(	O
fail	O
)	O
error	O
(	O
1	pointer
,	O
errno	O
,	O
"Binding PMAP socket"	int
)	O
;	O
init_filesystems	O
(	O
)	pointer
;	O
create_server_thread	O
(	O
pmap_udp_socket	pointer
)	O
;	O
while	O
(	O
nthreads	O
--	O
)	O
create_server_thread	O
(	O
main_udp_socket	pointer
)	O
;	O
for	O
(	O
;	int
;	O
)	O
{	O
sleep	O
(	O
1	O
)	O
;	O
scan_fhs	O
(	O
)	pointer
;	O
scan_creds	O
(	O
)	pointer
;	O
scan_replies	O
(	O
)	pointer
;	O
}	O
}	O