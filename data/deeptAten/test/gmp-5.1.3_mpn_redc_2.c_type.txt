mp_limb_t	O
mpn_redc_2	O
(	O
mp_ptr	O
rp	O
,	O
mp_ptr	pointer
up	O
,	O
mp_srcptr	pointer
mp	O
,	O
mp_size_t	pointer
n	O
,	O
mp_srcptr	pointer
mip	O
)	O
{	O
mp_limb_t	O
q	O
[	O
2	int
]	O
;	O
mp_size_t	O
j	O
;	O
mp_limb_t	O
upn	O
;	O
mp_limb_t	O
cy	O
;	O
ASSERT	O
(	O
n	O
>	O
0	O
)	O
;	O
ASSERT_MPN	O
(	O
up	O
,	O
2	O
*	O
n	pointer
)	O
;	O
if	O
(	O
(	O
n	O
&	O
1	int
)	O
!=	O
0	O
)	O
{	O
up	O
[	O
0	O
]	O
=	O
mpn_addmul_1	pointer
(	O
up	pointer
,	O
mp	pointer
,	O
n	O
,	O
(	O
up	O
[	O
0	int
]	O
*	O
mip	pointer
[	O
0	int
]	O
)	O
&	O
GMP_NUMB_MASK	pointer
)	O
;	O
up	O
++	O
;	O
}	O
for	O
(	O
j	O
=	O
n	int
-	O
2	int
;	O
j	O
>=	O
0	O
;	O
j	O
-=	O
2	O
)	O
{	O
umul2low	O
(	O
q	O
[	O
1	int
]	O
,	O
q	O
[	O
0	int
]	O
,	O
mip	O
[	O
1	int
]	O
,	O
mip	O
[	O
0	int
]	O
,	O
up	O
[	O
1	int
]	O
,	O
up	pointer
[	O
0	int
]	O
)	O
;	O
upn	O
=	O
up	O
[	O
n	O
]	O
;	O
up	O
[	O
1	O
]	O
=	O
mpn_addmul_2	pointer
(	O
up	pointer
,	O
mp	pointer
,	O
n	pointer
,	O
q	O
)	O
;	O
up	O
[	O
0	O
]	O
=	O
up	pointer
[	O
n	int
]	O
;	O
up	O
[	O
n	O
]	O
=	O
upn	pointer
;	O
up	O
+=	O
2	O
;	O
}	O
cy	O
=	O
mpn_add_n	O
(	O
rp	pointer
,	O
up	O
,	O
up	pointer
-	O
n	pointer
,	O
n	O
)	O
;	O
return	O
cy	int
;	O
}	O