char	O
*	O
trim2	O
(	O
const	O
char	O
*	O
s	pointer
,	O
int	O
how	int
)	O
{	O
char	O
*	O
d	pointer
;	O
d	O
=	O
strdup	O
(	O
s	pointer
)	O
;	O
if	O
(	O
!	O
d	pointer
)	O
xalloc_die	O
(	O
)	O
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
{	O
mbi_iterator_t	O
i	O
;	O
if	O
(	O
how	O
!=	O
TRIM_TRAILING	O
)	O
{	O
mbi_init	O
(	O
i	pointer
,	O
d	O
,	O
strlen	pointer
(	O
d	pointer
)	O
)	O
;	O
for	O
(	O
;	O
mbi_avail	O
(	O
i	pointer
)	O
&&	O
mb_isspace	O
(	O
mbi_cur	pointer
(	O
i	pointer
)	O
)	O
;	O
mbi_advance	O
(	O
i	pointer
)	O
)	O
;	O
memmove	O
(	O
d	pointer
,	O
mbi_cur_ptr	pointer
(	O
i	pointer
)	O
,	O
strlen	O
(	O
mbi_cur_ptr	pointer
(	O
i	pointer
)	O
)	O
+	O
1	int
)	O
;	O
}	O
if	O
(	O
how	O
!=	O
TRIM_LEADING	O
)	O
{	O
unsigned	O
int	O
state	int
=	O
0	O
;	O
char	O
*	O
r	pointer
IF_LINT	O
(	O
=	O
NULL	pointer
)	O
;	O
mbi_init	O
(	O
i	pointer
,	O
d	O
,	O
strlen	pointer
(	O
d	pointer
)	O
)	O
;	O
for	O
(	O
;	O
mbi_avail	O
(	O
i	pointer
)	O
;	O
mbi_advance	O
(	O
i	pointer
)	O
)	O
{	O
if	O
(	O
state	O
==	O
0	O
&&	O
mb_isspace	pointer
(	O
mbi_cur	pointer
(	O
i	pointer
)	O
)	O
)	O
continue	O
;	O
if	O
(	O
state	O
==	O
0	O
&&	O
!	pointer
mb_isspace	O
(	O
mbi_cur	pointer
(	O
i	pointer
)	O
)	O
)	O
{	O
state	O
=	O
1	O
;	O
continue	O
;	O
}	O
if	O
(	O
state	O
==	O
1	O
&&	O
!	pointer
mb_isspace	pointer
(	O
mbi_cur	pointer
(	O
i	pointer
)	O
)	O
)	O
continue	O
;	O
if	O
(	O
state	O
==	O
1	O
&&	O
mb_isspace	pointer
(	O
mbi_cur	pointer
(	O
i	pointer
)	O
)	O
)	O
{	O
state	O
=	O
2	O
;	O
r	O
=	O
(	int
char	O
*	O
)	O
mbi_cur_ptr	pointer
(	O
i	pointer
)	O
;	O
}	O
else	O
if	O
(	O
state	O
==	O
2	O
&&	O
mb_isspace	int
(	O
mbi_cur	pointer
(	O
i	pointer
)	O
)	O
)	O
{	O
}	O
else	O
{	O
state	O
=	O
1	O
;	O
}	O
}	O
if	O
(	O
state	O
==	O
2	O
)	O
*	O
r	pointer
=	O
'\0'	int
;	O
}	O
}	O
else	O
{	O
char	O
*	O
p	pointer
;	O
if	O
(	O
how	O
!=	O
TRIM_TRAILING	O
)	O
{	O
for	O
(	O
p	int
=	O
d	int
;	O
*	pointer
p	pointer
&&	O
isspace	O
(	O
(	pointer
unsigned	O
char	O
)	O
*	O
p	pointer
)	O
;	O
p	O
++	O
)	O
;	O
memmove	O
(	O
d	pointer
,	O
p	pointer
,	O
strlen	pointer
(	O
p	pointer
)	O
+	O
1	int
)	O
;	O
}	O
if	O
(	O
how	O
!=	O
TRIM_LEADING	O
)	O
{	O
for	O
(	O
p	int
=	O
d	int
+	O
strlen	int
(	O
d	pointer
)	O
-	O
1	int
;	O
p	O
>=	O
d	O
&&	O
isspace	O
(	O
(	pointer
unsigned	O
char	O
)	O
*	O
p	pointer
)	O
;	O
p	O
--	O
)	O
*	O
p	pointer
=	O
'\0'	O
;	O
}	O
}	O
return	O
d	O
;	O
}	O