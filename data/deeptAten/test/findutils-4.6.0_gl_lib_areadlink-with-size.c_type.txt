char	O
*	O
areadlink_with_size	O
(	O
char	O
const	O
*	O
file	pointer
,	O
size_t	O
size	O
)	O
{	O
size_t	O
symlink_max	O
=	O
SYMLINK_MAX	pointer
;	O
size_t	O
INITIAL_LIMIT_BOUND	O
=	O
8	pointer
*	O
1024	O
;	O
size_t	O
initial_limit	O
=	O
(	pointer
symlink_max	O
<	O
INITIAL_LIMIT_BOUND	O
?	O
symlink_max	O
+	O
1	long
:	O
INITIAL_LIMIT_BOUND	O
)	O
;	O
size_t	O
buf_size	O
=	O
size	pointer
<	O
initial_limit	O
?	O
size	O
+	O
1	long
:	O
initial_limit	O
;	O
while	O
(	O
1	O
)	O
{	O
ssize_t	O
r	O
;	O
size_t	O
link_length	O
;	O
char	O
*	O
buffer	pointer
=	O
malloc	O
(	O
buf_size	O
)	O
;	O
if	O
(	O
buffer	O
==	O
NULL	O
)	O
return	O
NULL	int
;	O
r	O
=	O
readlink	O
(	O
file	pointer
,	O
buffer	O
,	O
buf_size	O
)	O
;	O
link_length	O
=	O
r	O
;	O
if	O
(	O
r	O
<	O
0	int
&&	O
errno	O
!=	O
ERANGE	O
)	O
{	O
int	O
saved_errno	O
=	O
errno	int
;	O
free	O
(	O
buffer	O
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
return	O
NULL	int
;	O
}	O
if	O
(	O
link_length	O
<	O
buf_size	O
)	O
{	O
buffer	O
[	O
link_length	int
]	O
=	O
0	pointer
;	O
return	O
buffer	int
;	O
}	O
free	O
(	O
buffer	O
)	O
;	O
if	O
(	O
buf_size	O
<=	O
MAXSIZE	O
/	O
2	O
)	O
buf_size	O
*=	O
2	O
;	O
else	O
if	O
(	O
buf_size	O
<	O
MAXSIZE	O
)	O
buf_size	O
=	O
MAXSIZE	pointer
;	O
else	O
{	O
errno	O
=	O
ENOMEM	int
;	O
return	O
NULL	int
;	O
}	O
}	O
}	O