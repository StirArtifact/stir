static	O
const	O
char	O
*	O
current_folder	function
=	O
NULL	O
;	O
int	O
rcpt_mask	int
=	O
RCPT_DEFAULT	O
;	O
int	O
mh_auto_install	int
=	O
1	O
;	O
mu_property_t	O
mh_read_property_file	O
(	O
char	O
*	O
name	pointer
,	O
int	O
ro	int
)	O
{	O
mu_property_t	O
prop	pointer
;	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
;	O
int	O
rc	int
;	O
mhprop	O
=	O
mu_zalloc	function
(	O
sizeof	O
(	O
mhprop	O
[	O
0	int
]	O
)	O
)	O
;	O
mhprop	O
->	O
filename	pointer
=	O
name	O
;	O
mhprop	O
->	O
ro	pointer
=	O
ro	O
;	O
rc	pointer
=	O
mu_property_create_init	function
(	O
&	pointer
prop	pointer
,	O
mu_mh_property_init	pointer
,	O
mhprop	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_property_create_init"	pointer
,	O
name	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
return	O
prop	O
;	O
}	O
static	O
int	O
prop_merger	function
(	O
const	O
char	O
*	O
field	pointer
,	O
const	O
char	O
*	O
value	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
mu_property_t	O
dst	pointer
=	O
data	pointer
;	O
return	O
mu_property_set_value	int
(	O
dst	pointer
,	O
field	pointer
,	O
value	O
,	O
1	int
)	O
;	O
}	O
void	O
mh_property_merge	function
(	O
mu_property_t	O
dst	O
,	O
mu_property_t	O
src	O
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
!	O
src	pointer
)	O
return	O
;	O
rc	O
=	O
mu_mhprop_iterate	function
(	O
src	pointer
,	O
prop_merger	int
,	O
dst	int
)	O
;	O
if	O
(	O
rc	O
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_mhprop_iterate"	pointer
,	O
NULL	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
}	O
void	O
_mh_init_global_context	function
(	O
)	O
{	O
char	O
*	O
p	pointer
,	O
*	O
ctx_name	pointer
;	O
if	O
(	O
mu_mh_context	O
)	O
return	O
;	O
p	O
=	O
getenv	function
(	O
"CONTEXT"	pointer
)	O
;	O
if	O
(	O
!	pointer
p	O
)	O
p	O
=	O
MH_CONTEXT_FILE	function
;	O
ctx_name	O
=	O
mh_expand_name	O
(	O
NULL	pointer
,	O
p	pointer
,	O
NAME_ANY	int
)	O
;	O
mu_mh_context	O
=	O
mh_read_property_file	function
(	O
ctx_name	pointer
,	O
0	pointer
)	O
;	O
if	O
(	O
!	pointer
current_folder	O
)	O
current_folder	O
=	O
mh_global_context_get	function
(	O
"Current-Folder"	pointer
,	O
mh_global_profile_get	pointer
(	O
"Inbox"	pointer
,	O
"inbox"	pointer
)	O
)	O
;	O
}	O
void	O
mh_read_profile	function
(	O
)	O
{	O
char	O
*	O
p	pointer
;	O
const	O
char	O
*	O
fallback	pointer
;	O
p	O
=	O
getenv	function
(	O
"MH"	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
p	O
=	O
mu_tilde_expansion	function
(	O
p	pointer
,	O
MU_HIERARCHY_DELIMITER	pointer
,	O
NULL	pointer
)	O
;	O
else	O
{	O
char	O
*	O
home	pointer
=	O
mu_get_homedir	O
(	O
)	O
;	O
if	O
(	O
!	pointer
home	pointer
)	O
abort	O
(	O
)	O
;	O
p	O
=	O
mh_safe_make_file_name	function
(	O
home	pointer
,	O
MH_USER_PROFILE	pointer
)	O
;	O
free	O
(	O
home	pointer
)	O
;	O
}	O
if	O
(	O
mh_auto_install	pointer
&&	O
access	pointer
(	O
p	pointer
,	O
R_OK	pointer
)	O
)	O
mh_install	O
(	O
p	pointer
,	O
1	pointer
)	O
;	O
mu_mh_profile	O
=	O
mh_read_property_file	function
(	O
p	pointer
,	O
0	pointer
)	O
;	O
mu_set_folder_directory	O
(	O
mh_get_dir	pointer
(	O
)	pointer
)	O
;	O
mh_set_reply_regex	O
(	O
mh_global_profile_get	pointer
(	O
"Reply-Regex"	pointer
,	O
NULL	pointer
)	O
)	O
;	O
fallback	O
=	O
mh_global_profile_get	function
(	O
"Decode-Fallback"	pointer
,	O
NULL	pointer
)	O
;	O
if	O
(	O
fallback	pointer
&&	O
mu_set_default_fallback	pointer
(	O
fallback	pointer
)	O
)	O
mu_error	O
(	O
_	pointer
(	O
"Incorrect value for decode-fallback"	pointer
)	O
)	O
;	O
_mh_init_global_context	O
(	O
)	pointer
;	O
}	O
const	O
char	O
*	O
mh_current_folder	function
(	O
)	O
{	O
return	O
mh_global_context_get	int
(	O
"Current-Folder"	O
,	O
mh_global_profile_get	pointer
(	O
"Inbox"	O
,	O
"inbox"	pointer
)	O
)	O
;	O
}	O
const	O
char	O
*	O
mh_set_current_folder	function
(	O
const	O
char	O
*	O
val	pointer
)	O
{	O
int	O
rc	int
=	O
mh_global_context_set	int
(	O
"Current-Folder"	O
,	O
val	pointer
)	O
;	O
if	O
(	O
rc	pointer
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mh_global_context_set"	pointer
,	O
"Current-Folder"	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
current_folder	O
=	O
mh_current_folder	function
(	O
)	O
;	O
return	O
current_folder	int
;	O
}	O
mu_property_t	O
mh_mailbox_get_property	O
(	O
mu_mailbox_t	O
mbox	O
)	O
{	O
mu_property_t	O
prop	pointer
;	O
int	O
rc	int
=	O
mu_mailbox_get_property	int
(	O
mbox	O
,	O
&	int
prop	pointer
)	O
;	O
if	O
(	O
rc	pointer
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_mailbox_get_property"	pointer
,	O
NULL	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
return	O
prop	O
;	O
}	O
void	O
mh_global_sequences_drop	function
(	O
mu_mailbox_t	O
mbox	O
)	O
{	O
mu_property_t	O
prop	pointer
=	O
mh_mailbox_get_property	pointer
(	O
mbox	O
)	O
;	O
int	O
rc	int
=	O
mu_property_clear	int
(	O
prop	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_property_clear"	pointer
,	O
NULL	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
}	O
const	O
char	O
*	O
mh_global_sequences_get	function
(	O
mu_mailbox_t	O
mbox	O
,	O
const	O
char	O
*	O
name	pointer
,	O
const	O
char	O
*	O
defval	pointer
)	O
{	O
mu_property_t	O
prop	pointer
=	O
mh_mailbox_get_property	pointer
(	O
mbox	O
)	O
;	O
const	O
char	O
*	O
s	pointer
;	O
int	O
rc	int
=	O
mu_property_sget_value	int
(	O
prop	O
,	O
name	pointer
,	O
&	pointer
s	pointer
)	O
;	O
if	O
(	O
rc	pointer
==	O
MU_ERR_NOENT	O
)	O
s	O
=	O
defval	function
;	O
else	O
if	O
(	O
rc	pointer
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_property_sget_value"	pointer
,	O
name	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
return	O
s	O
;	O
}	O
void	O
mh_global_sequences_set	function
(	O
mu_mailbox_t	O
mbox	O
,	O
const	O
char	O
*	O
name	pointer
,	O
const	O
char	O
*	O
value	pointer
)	O
{	O
mu_property_t	O
prop	pointer
=	O
mh_mailbox_get_property	pointer
(	O
mbox	O
)	O
;	O
int	O
rc	int
=	O
mu_property_set_value	int
(	O
prop	pointer
,	O
name	pointer
,	O
value	pointer
,	O
1	int
)	O
;	O
if	O
(	O
rc	pointer
&&	O
!	O
(	O
!	O
value	O
&&	O
rc	function
==	O
MU_ERR_NOENT	O
)	O
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_property_set_value"	pointer
,	O
name	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
}	O
void	O
mh_global_sequences_iterate	function
(	O
mu_mailbox_t	O
mbox	O
,	O
mu_mhprop_iterator_t	O
fp	O
,	O
void	O
*	O
data	pointer
)	O
{	O
int	O
rc	int
;	O
mu_iterator_t	O
itr	pointer
;	O
mu_property_t	O
prop	O
=	O
mh_mailbox_get_property	pointer
(	O
mbox	O
)	O
;	O
rc	O
=	O
mu_property_get_iterator	function
(	O
prop	pointer
,	O
&	pointer
itr	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_property_get_iterator"	pointer
,	O
NULL	O
,	O
rc	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
mu_mhprop_iterate	O
(	O
prop	O
,	O
fp	pointer
,	O
data	pointer
)	O
;	O
}	O
void	O
mh_global_save_state	function
(	O
)	O
{	O
int	O
rc	int
;	O
mh_global_context_set	O
(	O
"Current-Folder"	O
,	O
current_folder	O
)	O
;	O
rc	O
=	O
mu_property_save	function
(	O
mu_mh_context	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	O
(	O
MU_DIAG_ERROR	O
,	O
"mu_property_save"	O
,	O
"context"	O
,	O
rc	int
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
}	O