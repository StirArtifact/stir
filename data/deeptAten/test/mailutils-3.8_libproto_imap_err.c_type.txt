int	O
_mu_imap_seterrstr	O
(	O
mu_imap_t	O
imap	O
,	O
const	O
char	O
*	O
str	pointer
,	O
size_t	O
len	O
)	O
{	O
if	O
(	O
!	O
imap	O
)	O
return	O
EINVAL	O
;	O
if	O
(	O
len	O
+	O
1	int
>	O
imap	int
->	O
errsize	int
)	O
{	O
char	O
*	O
p	O
=	O
realloc	O
(	O
imap	pointer
->	O
errstr	pointer
,	O
len	pointer
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	O
)	O
return	O
ENOMEM	O
;	O
imap	O
->	O
errsize	pointer
=	O
len	int
+	O
1	int
;	O
imap	O
->	O
errstr	pointer
=	O
p	int
;	O
}	O
memcpy	O
(	O
imap	pointer
->	O
errstr	pointer
,	O
str	pointer
,	O
len	O
)	O
;	O
imap	O
->	O
errstr	pointer
[	O
len	int
]	O
=	O
0	pointer
;	O
return	O
0	int
;	O
}	O
int	O
_mu_imap_seterrstrz	function
(	O
mu_imap_t	O
imap	O
,	O
const	O
char	O
*	O
str	pointer
)	O
{	O
return	O
_mu_imap_seterrstr	int
(	O
imap	O
,	O
str	O
,	O
strlen	O
(	O
str	pointer
)	O
)	O
;	O
}	O
void	O
_mu_imap_clrerrstr	function
(	O
mu_imap_t	O
imap	O
)	O
{	O
if	O
(	O
imap	O
&&	O
imap	O
->	O
errstr	pointer
)	O
imap	O
->	O
errstr	pointer
[	O
0	int
]	O
=	O
0	pointer
;	O
}	O
int	O
mu_imap_strerror	function
(	O
mu_imap_t	O
imap	O
,	O
const	O
char	O
*	O
*	pointer
pstr	pointer
)	O
{	O
if	O
(	O
!	O
imap	O
)	O
{	O
*	O
pstr	pointer
=	O
"(imap not initialized)"	O
;	O
return	O
EINVAL	int
;	O
}	O
if	O
(	O
MU_IMAP_FISSET	O
(	O
imap	pointer
,	O
MU_IMAP_RESP	O
)	O
)	O
{	O
*	O
pstr	pointer
=	O
imap	O
->	O
errstr	pointer
;	O
return	O
0	int
;	O
}	O
*	O
pstr	function
=	O
"(no recent reply)"	O
;	O
return	O
MU_ERR_NOENT	int
;	O
}	O
enum	O
mu_imap_response	O
mu_imap_response	O
(	O
mu_imap_t	O
imap	O
)	O
{	O
if	O
(	O
!	O
imap	O
)	O
return	O
MU_IMAP_BAD	O
;	O
return	O
imap	int
->	O
response	pointer
;	O
}	O
int	O
mu_imap_response_code	function
(	O
mu_imap_t	O
imap	O
)	O
{	O
if	O
(	O
!	O
imap	int
)	O
return	O
-	O
1	int
;	O
return	O
imap	int
->	O
response_code	pointer
;	O
}	O