int	O
io_size	function
(	O
FILE	O
*	O
,	pointer
void	O
*	O
,	O
unsigned	O
int	O
size	int
,	O
int	O
)	int
;	O
char	O
const	O
*	O
locate_id_file_name	pointer
(	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
static	O
char	O
file_name_buffer	O
[	O
BUFSIZ	O
]	O
;	O
char	O
*	O
buf	pointer
=	O
file_name_buffer	O
;	O
char	O
*	O
id_path	pointer
=	O
0	O
;	O
struct	O
stat	struct
rootb	O
;	O
struct	O
stat	struct
statb	O
;	O
if	O
(	O
arg	O
==	O
0	O
)	O
{	O
id_path	O
=	O
getenv	pointer
(	O
"IDPATH"	pointer
)	O
;	O
if	O
(	O
id_path	O
)	O
{	O
id_path	O
=	O
strdup	O
(	O
id_path	pointer
)	O
;	O
arg	O
=	O
strsep	O
(	O
&	pointer
id_path	pointer
,	O
":"	pointer
)	O
;	O
}	O
}	O
if	O
(	O
arg	O
==	O
0	O
)	O
arg	O
=	O
DEFAULT_ID_FILE_NAME	int
;	O
if	O
(	O
arg	O
[	O
0	int
]	O
==	O
'/'	O
)	O
return	O
arg	O
;	O
if	O
(	O
stat	O
(	O
arg	pointer
,	O
&	pointer
statb	pointer
)	O
==	O
0	O
)	O
return	O
arg	O
;	O
if	O
(	O
stat	O
(	O
"/"	pointer
,	O
&	pointer
rootb	pointer
)	O
!=	O
0	O
)	O
return	O
NULL	O
;	O
do	O
{	O
strcpy	O
(	O
buf	pointer
,	O
"../"	pointer
)	O
;	O
buf	O
+=	O
3	int
;	O
strcpy	O
(	O
buf	pointer
,	O
arg	pointer
)	O
;	O
if	O
(	O
stat	pointer
(	O
file_name_buffer	pointer
,	O
&	pointer
statb	pointer
)	O
==	O
0	O
)	O
return	O
file_name_buffer	O
;	O
*	O
buf	pointer
=	O
'\0'	O
;	O
if	O
(	O
stat	O
(	O
file_name_buffer	pointer
,	O
&	pointer
statb	pointer
)	O
!=	O
0	O
)	O
return	O
NULL	O
;	O
}	O
while	O
(	O
statb	O
.	O
st_ino	int
!=	O
rootb	O
.	O
st_ino	pointer
||	O
statb	O
.	O
st_dev	pointer
!=	O
rootb	O
.	O
st_dev	pointer
)	O
;	O
return	O
NULL	int
;	O
}	O
int	O
sizeof_idhead	function
(	O
)	O
{	O
return	O
io_idhead	int
(	O
0	pointer
,	O
io_size	int
,	O
0	int
)	O
;	O
}	O
int	O
io_size	function
(	O
FILE	O
*	O
ignore_FILE	pointer
,	O
void	O
*	O
ignore_addr	pointer
,	O
unsigned	O
int	O
size	int
,	O
int	O
io_type	int
)	O
{	O
if	O
(	O
io_type	O
==	O
IO_TYPE_STR	int
)	O
error	O
(	O
0	int
,	O
0	int
,	O
_	int
(	O
"can't determine the io_size of a string!"	pointer
)	O
)	O
;	O
return	O
size	int
;	O
}	O
int	O
io_idhead	function
(	O
FILE	O
*	O
fp	pointer
,	O
io_func_t	O
iof	O
,	O
struct	O
idhead	struct
*	O
idhp	pointer
)	O
{	O
unsigned	O
int	O
size	int
=	O
0	O
;	O
unsigned	O
char	O
pad	O
=	O
0	O
;	O
if	O
(	O
fp	O
)	O
fseek	O
(	O
fp	pointer
,	O
0L	pointer
,	O
0	pointer
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
idhp	pointer
->	O
idh_magic	pointer
,	O
2	O
,	O
IO_TYPE_FIX	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
pad	pointer
,	O
1	O
,	O
IO_TYPE_FIX	O
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_version	struct
,	O
1	O
,	O
IO_TYPE_FIX	O
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_flags	struct
,	O
2	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_file_links	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_files	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_tokens	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_buf_size	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_vec_size	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_tokens_offset	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_flinks_offset	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_end_offset	struct
,	O
4	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_max_link	struct
,	O
2	O
,	O
IO_TYPE_INT	int
)	O
;	O
size	O
+=	O
iof	O
(	O
fp	pointer
,	O
&	pointer
idhp	pointer
->	O
idh_max_path	struct
,	O
2	O
,	O
IO_TYPE_INT	O
)	O
;	O
return	O
size	int
;	O
}	O