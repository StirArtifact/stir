void	O
psout	O
(	O
struct	O
proc_stat_list	struct
*	O
procs	pointer
,	O
char	O
*	O
fmt_string	pointer
,	O
int	O
posix_fmt	int
,	O
struct	O
ps_fmt_specs	struct
*	O
specs	pointer
,	O
char	O
*	O
sort_key_name	pointer
,	O
int	O
sort_reverse	int
,	O
int	O
output_width	int
,	O
int	O
print_heading	int
,	O
int	O
squash_bogus_fields	int
,	O
int	O
squash_nominal_fields	int
,	O
int	O
top	int
)	O
{	O
error_t	O
err	int
;	O
struct	O
ps_stream	struct
*	O
output	pointer
;	O
struct	O
ps_fmt	struct
*	O
fmt	pointer
;	O
err	O
=	O
ps_fmt_create	int
(	O
fmt_string	pointer
,	O
posix_fmt	pointer
,	O
specs	pointer
,	O
&	pointer
fmt	pointer
)	O
;	O
if	O
(	O
err	O
)	O
{	O
char	O
*	O
problem	pointer
;	O
ps_fmt_creation_error	O
(	O
fmt_string	pointer
,	O
posix_fmt	pointer
,	O
specs	pointer
,	O
&	pointer
problem	pointer
)	O
;	O
error	O
(	O
4	O
,	O
0	O
,	O
"%s"	int
,	O
problem	pointer
)	O
;	O
}	O
if	O
(	O
squash_bogus_fields	O
)	O
{	O
ps_flags_t	O
bogus_flags	O
=	O
ps_fmt_needs	O
(	O
fmt	pointer
)	O
;	O
err	O
=	O
proc_stat_list_find_bogus_flags	function
(	O
procs	pointer
,	O
&	pointer
bogus_flags	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	O
(	O
0	O
,	O
err	int
,	O
"Couldn't remove bogus fields"	int
)	O
;	O
else	O
ps_fmt_squash_flags	O
(	O
fmt	pointer
,	O
bogus_flags	pointer
)	O
;	O
}	O
if	O
(	O
squash_nominal_fields	O
)	O
{	O
int	O
nominal	int
(	O
struct	pointer
ps_fmt_field	struct
*	O
field	pointer
)	O
{	O
return	O
!	int
(	int
field	O
->	O
flags	pointer
&	O
PS_FMT_FIELD_KEEP	int
)	O
&&	O
proc_stat_list_spec_nominal	O
(	O
procs	pointer
,	O
field	pointer
->	O
spec	pointer
)	O
;	O
}	O
ps_fmt_squash	O
(	O
fmt	pointer
,	O
nominal	pointer
)	O
;	O
}	O
if	O
(	O
sort_key_name	O
)	O
{	O
const	O
struct	O
ps_fmt_spec	struct
*	O
sort_key	O
;	O
if	O
(	O
*	O
sort_key_name	pointer
==	O
'-'	O
)	O
{	O
sort_reverse	O
=	O
1	O
;	O
sort_key_name	O
++	O
;	O
}	O
sort_key	O
=	O
ps_fmt_specs_find	function
(	O
specs	pointer
,	O
sort_key_name	pointer
)	O
;	O
if	O
(	O
sort_key	O
==	O
NULL	O
)	O
error	O
(	O
3	pointer
,	O
0	O
,	O
"%s: bad sort key"	int
,	O
sort_key_name	O
)	O
;	O
err	O
=	O
proc_stat_list_sort	function
(	O
procs	pointer
,	O
sort_key	pointer
,	O
sort_reverse	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	O
(	O
0	int
,	O
err	int
,	O
"Couldn't sort processes"	int
)	O
;	O
}	O
err	O
=	O
ps_stream_create	function
(	O
stdout	pointer
,	O
&	int
output	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	O
(	O
5	int
,	O
err	O
,	O
"Can't make output stream"	int
)	O
;	O
if	O
(	O
print_heading	O
)	O
{	O
if	O
(	O
procs	O
->	O
num_procs	pointer
>	O
0	int
)	O
{	O
err	O
=	O
ps_fmt_write_titles	function
(	O
fmt	pointer
,	O
output	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	O
(	O
0	int
,	O
err	int
,	O
"Can't print titles"	int
)	O
;	O
ps_stream_newline	O
(	O
output	pointer
)	O
;	O
}	O
else	O
error	O
(	O
1	O
,	O
0	O
,	O
"No applicable processes"	int
)	O
;	O
}	O
if	O
(	O
output_width	O
)	O
{	O
int	O
deduce_term_size	int
(	O
int	O
fd	O
,	O
char	O
*	O
type	pointer
,	O
int	O
*	int
width	pointer
,	O
int	O
*	int
height	pointer
)	O
;	O
if	O
(	O
output_width	O
<	O
0	int
)	O
if	O
(	O
!	int
deduce_term_size	O
(	O
1	pointer
,	O
getenv	O
(	O
"TERM"	pointer
)	O
,	O
&	O
output_width	pointer
,	O
0	O
)	O
)	O
output_width	O
=	O
80	O
;	O
ps_fmt_set_output_width	O
(	O
fmt	pointer
,	O
output_width	pointer
)	O
;	O
}	O
if	O
(	O
top	O
)	O
{	O
int	O
filter	int
(	O
struct	O
proc_stat	struct
*	O
ps	pointer
)	O
{	O
return	O
--	int
top	O
>=	O
0	O
;	O
}	O
if	O
(	O
top	O
<	O
0	int
)	O
{	O
top	O
+=	O
procs	int
->	O
num_procs	pointer
;	O
proc_stat_list_filter1	O
(	O
procs	pointer
,	O
filter	pointer
,	O
0	pointer
,	O
1	int
)	O
;	O
}	O
else	O
proc_stat_list_filter1	O
(	O
procs	pointer
,	O
filter	pointer
,	O
0	pointer
,	O
0	int
)	O
;	O
}	O
err	O
=	O
proc_stat_list_fmt	function
(	O
procs	pointer
,	O
fmt	pointer
,	O
output	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	O
(	O
5	int
,	O
err	int
,	O
"Couldn't output process status"	int
)	O
;	O
}	O