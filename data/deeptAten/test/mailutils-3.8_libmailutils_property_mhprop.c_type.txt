static	O
void	O
_mh_prop_done	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
=	O
prop	O
->	O
_prop_init_data	pointer
;	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
mu_header_destroy	O
(	O
&	pointer
header	pointer
)	O
;	O
free	O
(	O
mhprop	pointer
->	O
filename	pointer
)	O
;	O
free	O
(	O
mhprop	pointer
)	O
;	O
}	O
static	O
int	O
_mh_prop_getval	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
*	pointer
pval	pointer
)	O
{	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
if	O
(	O
!	pointer
header	pointer
)	O
return	O
MU_ERR_NOENT	O
;	O
return	O
mu_header_sget_value	O
(	O
header	pointer
,	O
key	pointer
,	O
pval	pointer
)	O
;	O
}	O
static	O
int	O
_mh_prop_setval	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
val	pointer
,	O
int	O
overwrite	O
)	O
{	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
=	O
prop	O
->	O
_prop_init_data	pointer
;	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
if	O
(	O
!	pointer
header	pointer
)	O
{	O
int	function
rc	int
;	O
if	O
(	O
(	pointer
rc	O
=	O
mu_header_create	function
(	O
&	pointer
header	pointer
,	O
NULL	O
,	O
0	O
)	O
)	O
!=	O
0	int
)	O
{	O
mu_error	O
(	O
_	pointer
(	O
"cannot create context %s: %s"	pointer
)	O
,	O
mhprop	pointer
->	O
filename	pointer
,	O
mu_strerror	pointer
(	O
rc	int
)	O
)	O
;	O
return	O
1	int
;	O
}	O
prop	O
->	O
_prop_data	pointer
=	O
header	pointer
;	O
}	pointer
return	O
mu_header_set_value	O
(	O
header	pointer
,	O
key	pointer
,	O
val	int
,	O
overwrite	int
)	O
;	O
}	O
static	O
int	O
_mh_prop_unset	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
const	O
char	O
*	O
key	pointer
)	O
{	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
if	O
(	O
!	pointer
header	pointer
)	O
return	O
0	O
;	O
return	O
mu_header_remove	int
(	O
header	pointer
,	O
key	pointer
,	O
1	int
)	O
;	O
}	O
static	O
int	O
_mh_prop_getitr	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
,	O
mu_iterator_t	O
*	O
pitr	pointer
)	O
{	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
return	O
mu_header_get_iterator	O
(	O
header	pointer
,	O
pitr	pointer
)	O
;	O
}	O
static	O
int	O
_mh_prop_clear	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
return	O
mu_header_clear	O
(	O
header	pointer
)	O
;	O
}	O
static	O
int	O
_mh_prop_read_stream	function
(	O
mu_header_t	O
*	O
phdr	pointer
,	O
mu_stream_t	O
stream	O
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	O
flt	pointer
;	O
const	O
char	O
*	O
argv	pointer
[	O
4	int
]	O
;	O
mu_off_t	O
size	int
;	O
size_t	O
total	long
;	O
char	O
*	O
blurb	pointer
;	O
rc	O
=	O
mu_stream_size	int
(	O
stream	O
,	O
&	O
size	pointer
)	O
;	O
if	O
(	O
rc	O
)	O
return	O
rc	O
;	O
argv	O
[	O
0	int
]	O
=	O
"INLINE-COMMENT"	O
;	O
argv	O
[	O
1	int
]	O
=	O
"#"	O
;	O
argv	int
[	O
2	int
]	O
=	O
"-r"	O
;	O
argv	int
[	O
3	int
]	O
=	O
NULL	O
;	O
rc	O
=	O
mu_filter_create_args	int
(	O
&	O
flt	pointer
,	O
stream	O
,	O
argv	O
[	O
0	int
]	O
,	O
3	O
,	O
argv	int
,	O
MU_FILTER_DECODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
if	O
(	O
rc	O
)	O
{	O
mu_error	O
(	O
_	pointer
(	O
"cannot open filter stream: %s"	pointer
)	O
,	O
mu_strerror	pointer
(	O
rc	int
)	O
)	O
;	O
return	O
rc	int
;	O
}	O
blurb	O
=	O
malloc	function
(	O
size	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
blurb	O
)	O
{	O
mu_stream_destroy	O
(	O
&	O
flt	struct
)	O
;	O
return	O
ENOMEM	O
;	O
}	O
total	O
=	O
0	function
;	O
while	O
(	O
1	O
)	O
{	O
size_t	O
n	O
;	O
rc	O
=	O
mu_stream_read	function
(	O
flt	pointer
,	O
blurb	int
+	O
total	int
,	O
size	int
-	O
total	int
,	O
&	int
n	pointer
)	O
;	O
if	O
(	O
rc	O
)	O
break	O
;	O
if	O
(	O
n	O
==	O
0	O
)	O
break	O
;	O
total	O
+=	O
n	int
;	O
}	O
mu_stream_destroy	O
(	O
&	O
flt	struct
)	O
;	O
if	O
(	O
rc	O
)	O
{	O
free	O
(	O
blurb	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
rc	O
=	O
mu_header_create	function
(	O
phdr	O
,	O
blurb	O
,	O
total	int
)	O
;	O
free	O
(	O
blurb	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mh_prop_write_stream	function
(	O
mu_header_t	O
header	O
,	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
,	O
mu_stream_t	O
stream	O
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	O
instream	pointer
;	O
mu_off_t	O
size	O
;	O
mu_header_get_streamref	O
(	O
header	O
,	O
&	pointer
instream	pointer
)	O
;	O
rc	O
=	O
mu_stream_copy	function
(	O
stream	pointer
,	O
instream	O
,	O
0	int
,	O
&	int
size	pointer
)	O
;	O
if	O
(	O
rc	O
)	O
{	O
mu_error	O
(	O
_	pointer
(	O
"error writing to context file %s: %s"	pointer
)	O
,	O
mhprop	pointer
->	O
filename	int
,	O
mu_strerror	pointer
(	O
rc	int
)	O
)	O
;	O
return	O
rc	int
;	O
}	O
else	O
rc	O
=	O
mu_stream_truncate	function
(	O
stream	pointer
,	O
size	O
)	O
;	O
mu_stream_destroy	O
(	O
&	O
instream	struct
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mh_prop_fill	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
=	O
prop	O
->	O
_prop_init_data	pointer
;	O
int	O
rc	int
;	O
mu_stream_t	O
stream	pointer
;	O
mu_header_t	O
header	pointer
;	O
rc	O
=	O
mu_file_stream_create	function
(	O
&	O
stream	pointer
,	O
mhprop	O
->	O
filename	int
,	O
MU_STREAM_READ	O
)	O
;	O
if	O
(	O
rc	pointer
)	O
{	O
if	O
(	O
(	pointer
rc	O
=	O
mu_header_create	function
(	O
&	pointer
header	pointer
,	O
NULL	O
,	O
0	O
)	O
)	O
!=	O
0	int
)	O
mu_error	O
(	O
_	pointer
(	O
"cannot create context %s: %s"	pointer
)	O
,	O
mhprop	pointer
->	O
filename	pointer
,	O
mu_strerror	pointer
(	O
rc	int
)	O
)	O
;	O
}	O
else	O
{	O
rc	O
=	O
_mh_prop_read_stream	function
(	O
&	pointer
header	pointer
,	O
stream	O
)	O
;	O
mu_stream_unref	O
(	O
stream	pointer
)	O
;	O
}	O
if	O
(	O
rc	O
==	O
0	O
)	O
prop	O
->	O
_prop_data	pointer
=	O
header	pointer
;	O
return	pointer
rc	int
;	O
}	O
static	O
int	O
_mh_prop_save	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
=	O
prop	O
->	O
_prop_init_data	pointer
;	O
mu_header_t	O
header	pointer
=	O
prop	pointer
->	O
_prop_data	pointer
;	O
mu_stream_t	O
stream	pointer
;	O
int	O
rc	int
;	O
if	O
(	O
mhprop	pointer
->	O
ro	pointer
)	O
return	O
0	O
;	O
rc	O
=	O
mu_file_stream_create	function
(	O
&	O
stream	pointer
,	O
mhprop	O
->	O
filename	int
,	O
MU_STREAM_WRITE	O
|	O
MU_STREAM_CREAT	O
)	O
;	O
if	O
(	O
rc	pointer
)	O
return	O
rc	O
;	O
rc	O
=	O
_mh_prop_write_stream	function
(	O
header	pointer
,	O
mhprop	pointer
,	O
stream	int
)	O
;	O
mu_stream_unref	O
(	O
stream	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_mh_property_init	function
(	O
struct	O
_mu_property	struct
*	O
prop	pointer
)	O
{	O
struct	O
mu_mh_prop	struct
*	O
mhprop	pointer
=	O
prop	O
->	O
_prop_init_data	pointer
;	O
if	O
(	O
!	pointer
mhprop	pointer
)	O
return	O
EINVAL	O
;	O
prop	O
->	O
_prop_data	pointer
=	O
NULL	pointer
;	O
prop	pointer
->	O
_prop_done	pointer
=	O
_mh_prop_done	pointer
;	O
prop	pointer
->	O
_prop_fill	pointer
=	O
_mh_prop_fill	int
;	O
prop	pointer
->	O
_prop_save	pointer
=	O
_mh_prop_save	pointer
;	O
prop	pointer
->	O
_prop_getval	pointer
=	O
_mh_prop_getval	int
;	O
prop	pointer
->	O
_prop_setval	pointer
=	O
_mh_prop_setval	pointer
;	O
prop	pointer
->	O
_prop_unset	pointer
=	O
_mh_prop_unset	pointer
;	O
prop	pointer
->	O
_prop_getitr	pointer
=	O
_mh_prop_getitr	pointer
;	O
prop	pointer
->	O
_prop_clear	pointer
=	O
_mh_prop_clear	pointer
;	O
return	pointer
0	O
;	O
}	O