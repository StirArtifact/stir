int	O
mu_string_unfold	O
(	O
char	O
*	O
text	pointer
,	O
size_t	O
*	O
plen	pointer
)	O
{	O
char	O
*	O
p	pointer
,	O
*	O
q	pointer
;	O
enum	O
uf_state	O
{	O
uf_init	O
,	O
uf_nl	O
,	O
uf_fold	O
}	O
state	O
=	O
uf_init	O
;	O
if	O
(	O
!	O
text	O
)	O
return	O
EINVAL	O
;	O
for	O
(	O
p	O
=	O
q	int
=	O
text	int
;	O
*	O
q	pointer
;	O
q	O
++	O
)	O
{	O
switch	O
(	O
state	O
)	O
{	O
case	O
uf_init	O
:	O
if	O
(	O
*	O
q	pointer
==	O
'\n'	O
)	O
state	O
=	O
uf_nl	pointer
;	O
else	O
*	O
p	pointer
++	O
=	O
*	O
q	pointer
;	O
break	O
;	O
case	O
uf_nl	O
:	O
if	O
(	O
ISSPACE	O
(	O
*	O
q	pointer
)	O
)	O
state	O
=	O
uf_fold	O
;	O
else	O
{	O
state	O
=	O
uf_init	O
;	O
*	O
p	pointer
++	O
=	O
*	O
q	pointer
;	O
}	O
break	O
;	O
case	O
uf_fold	O
:	O
if	O
(	O
!	O
ISSPACE	O
(	O
*	O
q	pointer
)	O
)	O
{	O
*	O
p	pointer
++	O
=	O
' '	O
;	O
*	O
p	pointer
++	O
=	O
*	O
q	pointer
;	O
state	O
=	O
uf_init	O
;	O
}	O
break	O
;	O
}	O
}	O
*	O
p	function
++	O
=	O
0	O
;	O
if	O
(	O
plen	O
)	O
*	O
plen	pointer
=	O
p	O
-	O
text	int
;	O
return	O
0	int
;	O
}	O