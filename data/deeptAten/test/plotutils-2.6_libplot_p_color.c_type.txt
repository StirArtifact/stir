static	O
int	O
_idraw_pseudocolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
;	O
void	O
_pl_p_set_pen_color	function
(	O
S___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
)	O
{	O
_plotter	O
->	O
drawstate	pointer
->	O
ps_fgcolor_red	pointer
=	O
(	int
(	O
double	O
)	O
(	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fgcolor	pointer
)	O
.	O
red	pointer
)	O
)	O
/	O
0xFFFF	int
;	O
_plotter	int
->	O
drawstate	pointer
->	O
ps_fgcolor_green	pointer
=	O
(	int
(	O
double	O
)	O
(	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fgcolor	pointer
)	O
.	O
green	pointer
)	O
)	O
/	O
0xFFFF	int
;	O
_plotter	int
->	O
drawstate	pointer
->	O
ps_fgcolor_blue	pointer
=	O
(	int
(	O
double	O
)	O
(	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fgcolor	pointer
)	O
.	O
blue	pointer
)	O
)	O
/	O
0xFFFF	int
;	O
_plotter	int
->	O
drawstate	pointer
->	O
ps_idraw_fgcolor	pointer
=	O
_idraw_pseudocolor	int
(	O
(	pointer
_plotter	O
->	O
drawstate	pointer
->	O
fgcolor	pointer
)	O
.	O
red	pointer
,	O
(	int
_plotter	O
->	O
drawstate	pointer
->	O
fgcolor	pointer
)	O
.	O
green	pointer
,	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fgcolor	pointer
)	O
.	O
blue	pointer
)	O
;	O
return	O
;	int
}	O
void	O
_pl_p_set_fill_color	function
(	O
S___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
)	O
{	O
double	O
red	function
,	O
green	O
,	O
blue	O
;	O
if	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fill_type	pointer
==	O
0	int
)	O
return	O
;	int
red	O
=	O
(	int
(	O
double	O
)	O
(	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fillcolor	pointer
)	O
.	O
red	pointer
)	O
)	O
/	O
0xFFFF	int
;	O
green	int
=	O
(	int
(	O
double	O
)	O
(	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fillcolor	pointer
)	O
.	O
green	pointer
)	O
)	O
/	O
0xFFFF	int
;	O
blue	int
=	O
(	int
(	O
double	O
)	O
(	O
(	O
_plotter	O
->	O
drawstate	pointer
->	O
fillcolor	pointer
)	O
.	O
blue	pointer
)	O
)	O
/	O
0xFFFF	int
;	O
_plotter	int
->	O
drawstate	pointer
->	O
ps_fillcolor_red	pointer
=	O
red	int
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
ps_fillcolor_green	pointer
=	O
green	int
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
ps_fillcolor_blue	pointer
=	O
blue	int
;	O
_pl_p_set_pen_color	pointer
(	O
S___	pointer
(	O
_plotter	pointer
)	O
)	O
;	O
_pl_p_compute_idraw_bgcolor	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
return	O
;	int
}	O
static	O
int	O
_idraw_pseudocolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
{	O
double	O
difference	array
;	O
int	O
i	int
;	O
int	O
best	int
=	O
0	int
;	O
difference	O
=	O
DBL_MAX	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PS_NUM_IDRAW_STD_COLORS	int
;	O
i	int
++	O
)	O
{	O
double	O
newdifference	array
;	O
if	O
(	O
_pl_p_idraw_stdcolors	int
[	O
i	int
]	O
.	O
red	int
==	O
0xffff	int
&&	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
green	int
==	O
0xffff	int
&&	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
blue	int
==	O
0xffff	int
)	O
{	O
if	O
(	O
red	int
==	O
0xffff	int
&&	O
green	int
==	O
0xffff	int
&&	O
blue	O
==	O
0xffff	int
)	O
{	O
difference	O
=	O
0.0	int
;	O
best	O
=	O
i	int
;	O
}	int
continue	O
;	O
}	O
newdifference	O
=	O
(	function
(	O
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
red	int
-	O
red	int
)	O
*	O
(	O
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
red	int
-	O
red	int
)	O
)	O
+	O
(	int
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
green	int
-	O
green	int
)	O
*	O
(	O
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
green	int
-	O
green	int
)	O
)	O
+	O
(	int
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
blue	int
-	O
blue	int
)	O
*	O
(	O
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
blue	int
-	O
blue	int
)	O
)	O
;	O
if	O
(	O
newdifference	int
<	O
difference	int
)	O
{	O
difference	O
=	O
newdifference	int
;	O
best	O
=	O
i	int
;	O
}	int
}	O
return	O
best	int
;	O
}	O
void	O
_pl_p_compute_idraw_bgcolor	function
(	O
S___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
)	O
{	O
double	O
truered	double
,	O
truegreen	O
,	O
trueblue	O
;	O
double	O
fgred	double
,	O
fggreen	O
,	O
fgblue	O
;	O
double	O
difference	double
=	O
DBL_MAX	O
;	O
int	O
i	int
,	O
j	int
;	O
int	O
best_bgcolor	int
=	O
0	int
,	O
best_shading	int
=	O
0	int
;	O
double	O
best_shade	double
=	O
0.0	int
;	O
truered	O
=	O
0xFFFF	int
*	O
_plotter	O
->	O
drawstate	double
->	O
ps_fillcolor_red	pointer
;	O
truegreen	O
=	O
0xFFFF	int
*	O
_plotter	O
->	O
drawstate	double
->	O
ps_fillcolor_green	pointer
;	O
trueblue	O
=	O
0xFFFF	int
*	O
_plotter	O
->	O
drawstate	double
->	O
ps_fillcolor_blue	pointer
;	O
fgred	O
=	O
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
_plotter	int
->	O
drawstate	int
->	O
ps_idraw_fgcolor	pointer
]	O
.	O
red	pointer
)	O
;	O
fggreen	O
=	O
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
_plotter	int
->	O
drawstate	int
->	O
ps_idraw_fgcolor	pointer
]	O
.	O
green	pointer
)	O
;	O
fgblue	O
=	O
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
_plotter	int
->	O
drawstate	int
->	O
ps_idraw_fgcolor	pointer
]	O
.	O
blue	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PS_NUM_IDRAW_STD_COLORS	int
;	O
i	int
++	O
)	O
{	O
double	O
bgred	double
,	O
bggreen	O
,	O
bgblue	O
;	O
bgred	O
=	O
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
red	double
)	O
;	O
bggreen	O
=	O
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
green	double
)	O
;	O
bgblue	O
=	O
(	int
double	O
)	O
(	O
_pl_p_idraw_stdcolors	O
[	O
i	int
]	O
.	O
blue	double
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
PS_NUM_IDRAW_STD_SHADINGS	int
;	O
j	int
++	O
)	O
{	O
double	O
approxred	double
,	O
approxgreen	O
,	O
approxblue	O
;	O
double	O
shade	double
,	O
newdifference	O
;	O
shade	O
=	O
_pl_p_idraw_stdshadings	int
[	O
j	int
]	O
;	O
approxred	O
=	O
shade	int
*	O
bgred	O
+	O
(	int
1.0	O
-	O
shade	int
)	O
*	O
fgred	O
;	O
approxgreen	O
=	O
shade	int
*	O
bggreen	O
+	O
(	int
1.0	O
-	O
shade	int
)	O
*	O
fggreen	O
;	O
approxblue	O
=	O
shade	int
*	O
bgblue	O
+	O
(	int
1.0	O
-	O
shade	int
)	O
*	O
fgblue	O
;	O
newdifference	O
=	O
(	int
truered	O
-	O
approxred	int
)	O
*	O
(	O
truered	O
-	O
approxred	int
)	O
+	O
(	int
truegreen	O
-	O
approxgreen	int
)	O
*	O
(	O
truegreen	O
-	O
approxgreen	int
)	O
+	O
(	int
trueblue	O
-	O
approxblue	int
)	O
*	O
(	O
trueblue	O
-	O
approxblue	int
)	O
;	O
if	O
(	O
newdifference	int
<	O
difference	int
)	O
{	O
difference	O
=	O
newdifference	int
;	O
best_bgcolor	O
=	O
i	int
;	O
best_shading	int
=	O
j	int
;	O
best_shade	int
=	O
shade	int
;	O
}	O
}	O
}	O
_plotter	O
->	O
drawstate	double
->	O
ps_idraw_bgcolor	struct
=	O
best_bgcolor	pointer
;	O
_plotter	O
->	O
drawstate	double
->	O
ps_idraw_shading	pointer
=	O
best_shading	int
;	O
if	O
(	O
best_shade	pointer
!=	O
0.0	O
)	O
{	O
_plotter	O
->	O
drawstate	pointer
->	O
ps_fillcolor_red	pointer
=	O
(	int
_plotter	O
->	O
drawstate	pointer
->	O
ps_fillcolor_red	pointer
-	O
(	int
1.0	O
-	O
best_shade	int
)	O
*	O
_plotter	pointer
->	O
drawstate	double
->	O
ps_fgcolor_red	pointer
)	O
/	O
best_shade	int
;	O
_plotter	O
->	O
drawstate	double
->	O
ps_fillcolor_green	pointer
=	O
(	int
_plotter	O
->	O
drawstate	pointer
->	O
ps_fillcolor_green	pointer
-	O
(	int
1.0	O
-	O
best_shade	int
)	O
*	O
_plotter	pointer
->	O
drawstate	double
->	O
ps_fgcolor_green	pointer
)	O
/	O
best_shade	int
;	O
_plotter	O
->	O
drawstate	double
->	O
ps_fillcolor_blue	pointer
=	O
(	int
_plotter	O
->	O
drawstate	pointer
->	O
ps_fillcolor_blue	pointer
-	O
(	int
1.0	O
-	O
best_shade	int
)	O
*	O
_plotter	pointer
->	O
drawstate	double
->	O
ps_fgcolor_blue	pointer
)	O
/	O
best_shade	int
;	O
}	O
}	O