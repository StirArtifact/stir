static	O
void	O
describe	O
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
unused	pointer
)	O
{	O
int	O
len	int
=	O
strcspn	O
(	O
po	pointer
->	O
po_prog_doc	pointer
,	O
"\n"	pointer
)	O
;	O
mu_printf	O
(	O
"%.*s\n"	pointer
,	O
len	pointer
,	O
po	pointer
->	O
po_prog_doc	pointer
)	O
;	O
exit	O
(	O
0	int
)	O
;	O
}	O
struct	O
mu_option	struct
common_options	O
[	O
]	O
=	O
{	pointer
{	pointer
"describe"	O
,	O
0	O
,	O
NULL	O
,	O
MU_OPTION_HIDDEN	O
,	O
"describe the program"	O
,	O
mu_c_string	pointer
,	O
NULL	O
,	O
describe	O
}	O
,	O
MU_OPTION_END	O
}	O
;	O
void	O
mu_action_getopt	O
(	O
int	O
*	int
pargc	pointer
,	O
char	O
*	O
*	pointer
*	pointer
pargv	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
docstring	pointer
,	O
char	O
const	O
*	O
argdoc	pointer
)	O
{	O
static	O
struct	O
mu_parseopt	struct
pohint	O
=	O
{	O
.	O
po_flags	struct
=	O
MU_PARSEOPT_PACKAGE_NAME	O
|	O
MU_PARSEOPT_PACKAGE_URL	O
|	O
MU_PARSEOPT_BUG_ADDRESS	O
|	O
MU_PARSEOPT_VERSION_HOOK	O
,	O
.	pointer
po_package_name	pointer
=	O
PACKAGE_NAME	pointer
,	O
.	O
po_package_url	struct
=	O
PACKAGE_URL	pointer
,	O
.	O
po_bug_address	struct
=	O
PACKAGE_BUGREPORT	O
,	O
.	O
po_version_hook	struct
=	O
mu_version_hook	O
}	O
;	O
static	O
char	O
*	O
defcapa	O
[	O
]	O
=	O
{	O
"debug"	O
,	O
NULL	O
}	O
;	O
struct	O
mu_cfg_parse_hints	struct
cfhint	O
=	O
{	O
.	pointer
flags	struct
=	O
0	O
}	O
;	O
struct	O
mu_option	struct
*	O
options	pointer
[	O
3	O
]	O
=	O
{	pointer
common_options	pointer
,	O
opt	O
,	O
NULL	O
}	O
;	O
struct	O
mu_cli_setup	struct
cli	O
=	O
{	O
.	pointer
prog_doc	struct
=	O
(	O
char	O
*	O
)	O
docstring	O
,	O
.	O
prog_args	struct
=	O
(	O
char	O
*	O
)	O
argdoc	O
,	O
.	O
optv	struct
=	O
options	O
}	O
;	O
char	O
*	O
p	pointer
;	O
p	O
=	O
getenv	O
(	O
"MAILUTILS_PROGNAME"	pointer
)	O
;	O
if	O
(	O
p	O
)	O
{	O
pohint	O
.	O
po_flags	pointer
|=	O
MU_PARSEOPT_PROG_NAME	O
;	O
pohint	O
.	O
po_prog_name	pointer
=	O
p	pointer
;	O
}	O
MU_APP_INIT_NLS	O
(	O
)	pointer
;	O
mu_cli_ext	O
(	O
*	O
pargc	pointer
,	O
*	O
pargv	pointer
,	O
&	O
cli	pointer
,	O
&	O
pohint	pointer
,	O
&	O
cfhint	pointer
,	O
defcapa	O
,	O
NULL	O
,	O
pargc	O
,	O
pargv	O
)	O
;	O
}	O