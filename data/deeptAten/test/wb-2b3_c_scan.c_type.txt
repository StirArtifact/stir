int	O
bt_scan	function
(	O
HAND	struct
*	O
han	pointer
,	O
int	O
operation	int
,	O
unsigned	O
char	O
*	O
kstr1	pointer
,	O
int	O
len1	int
,	O
unsigned	O
char	O
*	O
kstr2	pointer
,	O
int	O
len2	int
,	O
int_function	pointer
func	pointer
,	O
long	O
*	O
long_tab	pointer
,	O
int	O
*	O
respkt	pointer
,	O
int	O
blk_limit	int
)	O
{	O
L_bt_scan	O
:	O
{	O
int	O
pkt	pointer
[	O
pkt_size	int
]	O
;	O
int	O
opkt	pointer
[	O
pkt_size	int
]	O
;	O
ENTRY	struct
*	O
ent	pointer
=	O
0	int
;	O
unsigned	O
char	O
vstr	pointer
[	O
0x100	int
]	O
;	O
int	O
accmode	int
=	O
(	O
operation	int
)	O
==	O
(	O
count_scan	int
)	O
?	O
accread	O
:	O
accwrite	O
;	O
int	O
result	int
=	O
success	int
;	O
if	O
(	O
key_error_P	function
(	O
kstr1	pointer
,	O
len1	int
,	O
-	O
2	int
,	O
"bt_scan_1"	pointer
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
key_error_P	function
(	O
kstr2	pointer
,	O
len2	int
,	O
-	O
1	int
,	O
"bt_scan_2"	pointer
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	function
(	O
han	pointer
,	O
"bt_scan"	pointer
)	O
)	O
return	O
argerr	O
;	O
else	O
if	O
(	O
(	O
(	O
operation	int
)	O
==	O
(	O
modify_scan	int
)	O
)	O
&&	O
(	O
!	O
(	O
func	pointer
)	O
)	O
)	O
{	O
dprintf	function
(	O
(	O
diagout	pointer
,	O
">>>>ERROR<<<< %s: MODIFY-SCAN requires func be specified\n"	pointer
,	O
"bt_scan"	pointer
)	O
)	O
;	O
return	O
argerr	O
;	O
}	O
else	O
{	O
ent	pointer
=	O
chain_find_ent	function
(	O
han	pointer
,	O
accmode	int
,	O
kstr1	pointer
,	O
len1	int
,	O
pkt	pointer
)	O
;	O
if	O
(	O
(	O
ent	pointer
)	O
&&	O
(	O
blk_find_pos	function
(	O
ent_blk	O
(	O
ent	pointer
)	O
,	O
kstr2	pointer
,	O
len2	int
,	O
opkt	pointer
)	O
)	O
)	O
{	O
if	O
(	O
(	O
operation	int
)	O
==	O
(	O
count_scan	int
)	O
)	O
{	O
ENTRY	struct
*	O
nent	pointer
=	O
allocate_ent	function
(	O
)	O
;	O
ent_copy	function
(	O
nent	pointer
,	O
ent	pointer
)	O
;	O
release_ent	function
(	O
ent	pointer
,	O
accmode	int
)	O
;	O
result	int
=	O
chain_scan	function
(	O
nent	pointer
,	O
operation	int
,	O
pkt	pointer
,	O
opkt	pointer
,	O
kstr1	pointer
,	O
func	pointer
,	O
long_tab	pointer
,	O
vstr	pointer
,	O
respkt	pointer
,	O
han_wcb	O
(	O
han	pointer
)	O
)	O
;	O
recycle_ent	function
(	O
nent	pointer
)	O
;	O
}	O
else	O
{	O
result	int
=	O
chain_scan	function
(	O
ent	pointer
,	O
operation	int
,	O
pkt	pointer
,	O
opkt	pointer
,	O
kstr1	pointer
,	O
func	pointer
,	O
long_tab	pointer
,	O
vstr	pointer
,	O
respkt	pointer
,	O
han_wcb	O
(	O
han	pointer
)	O
)	O
;	O
release_ent	function
(	O
ent	pointer
,	O
accmode	int
)	O
;	O
if	O
(	O
(	O
result	int
)	O
>	O
0	int
)	O
{	O
result	int
=	O
bt_put	function
(	O
han	pointer
,	O
kstr1	pointer
,	O
pkt_skey_len	O
(	O
respkt	pointer
)	O
,	O
vstr	pointer
,	O
result	int
)	O
;	O
if	O
(	O
(	O
result	int
)	O
==	O
(	O
success	int
)	O
)	O
{	O
pkt_set_skey_count	O
(	O
respkt	pointer
,	O
(	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
)	O
+	O
1	int
)	O
;	O
pkt_set_skey_len	O
(	O
respkt	pointer
,	O
increment_string	function
(	O
kstr1	pointer
,	O
pkt_skey_len	O
(	O
respkt	pointer
)	O
,	O
0x100	int
)	O
)	O
;	O
result	int
=	O
notpres	O
;	O
}	O
}	O
}	O
if	O
(	O
(	O
(	O
result	int
)	O
==	O
(	O
notpres	O
)	O
)	O
&&	O
(	O
0	int
!=	O
(	O
blk_limit	int
)	O
)	O
)	O
{	O
len1	int
=	O
pkt_skey_len	O
(	O
respkt	pointer
)	O
;	O
blk_limit	int
=	O
(	O
blk_limit	int
)	O
-	O
1	int
;	O
goto	O
L_bt_scan	O
;	O
}	O
else	O
return	O
result	int
;	O
}	O
else	O
{	O
if	O
(	O
ent	pointer
)	O
release_ent	function
(	O
ent	pointer
,	O
accmode	int
)	O
;	O
rem_fct	long
=	O
0x1L	int
+	O
(	O
rem_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
}	O
}	O
}	O
int	O
increment_string	function
(	O
unsigned	O
char	O
*	O
str	pointer
,	O
int	O
len	int
,	O
int	O
maxlen	int
)	O
{	O
if	O
(	O
(	O
len	int
)	O
<	O
(	O
maxlen	int
)	O
)	O
{	O
str	pointer
[	O
len	int
]	O
=	O
0	int
;	O
return	O
(	O
len	int
)	O
+	O
1	int
;	O
}	O
else	O
{	O
int	O
oldval	int
=	O
(	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
str	pointer
)	O
)	O
[	O
(	O
len	int
)	O
-	O
1	int
]	O
)	O
;	O
str	pointer
[	O
(	O
len	int
)	O
-	O
1	int
]	O
=	O
1	int
+	O
(	O
oldval	int
)	O
;	O
return	O
len	int
;	O
}	O
}	O
int	O
chain_scan	function
(	O
ENTRY	struct
*	O
ent	pointer
,	O
int	O
operation	int
,	O
int	O
*	O
pkt	pointer
,	O
int	O
*	O
opkt	pointer
,	O
unsigned	O
char	O
*	O
key_str	pointer
,	O
int_function	pointer
func	pointer
,	O
long	O
*	O
long_tab	pointer
,	O
unsigned	O
char	O
*	O
vstr	pointer
,	O
int	O
*	O
respkt	pointer
,	O
int	O
wcb	int
)	O
{	O
{	O
unsigned	O
char	O
*	O
blk	pointer
=	O
ent_blk	O
(	O
ent	pointer
)	O
;	O
int	O
result	int
=	O
success	int
;	O
if	O
(	O
(	O
(	O
operation	int
)	O
==	O
(	O
rem_scan	O
)	O
)	O
&&	O
(	O
!	O
(	O
func	pointer
)	O
)	O
&&	O
(	O
(	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
)	O
>	O
(	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
)	O
)	O
&&	O
(	O
(	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
)	O
==	O
(	O
blk_data_start	int
)	O
)	O
&&	O
(	O
at_split_key_pos_P	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
)	O
)	O
)	O
{	O
{	O
int	O
key_len	int
=	O
recon_this_key	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
,	O
key_str	pointer
,	O
0	int
,	O
0x100	int
)	O
;	O
subbytes_move	O
(	O
key_str	pointer
,	O
0	int
,	O
key_len	int
,	O
blk	pointer
,	O
(	O
blk_data_start	int
)	O
+	O
2	int
)	O
;	O
set_field_len	O
(	O
blk	pointer
,	O
(	O
blk_data_start	int
)	O
+	O
1	int
,	O
key_len	int
)	O
;	O
blk_set_end	O
(	O
blk	pointer
,	O
(	O
blk_data_start	int
)	O
+	O
2	int
+	O
(	O
key_len	int
)	O
)	O
;	O
}	O
pkt_set_skey_count	O
(	O
respkt	pointer
,	O
(	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
)	O
+	O
1	int
)	O
;	O
rem_ct	long
=	O
0x1L	int
+	O
(	O
rem_ct	long
)	O
;	O
ent_set_dty	O
(	O
ent	pointer
,	O
!	O
0	int
)	O
;	O
pkt_set_match_pos	O
(	O
opkt	pointer
,	O
blk_data_start	int
)	O
;	O
}	O
else	O
{	O
int	O
oldct	int
=	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
;	O
unsigned	O
char	O
ckstr	pointer
[	O
0x100	int
]	O
;	O
int	O
clen	int
=	O
0	int
;	O
if	O
(	O
func	pointer
)	O
clen	int
=	O
recon_this_key	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
,	O
ckstr	pointer
,	O
0	int
,	O
0x100	int
)	O
;	O
pkt_set_match_type	O
(	O
pkt	pointer
,	O
match	O
)	O
;	O
result	int
=	O
scan_loop	function
(	O
ent_blk	O
(	O
ent	pointer
)	O
,	O
operation	int
,	O
pkt	pointer
,	O
opkt	pointer
,	O
func	pointer
,	O
long_tab	pointer
,	O
respkt	pointer
,	O
ckstr	pointer
,	O
clen	int
,	O
vstr	pointer
,	O
seg_bsiz	O
(	O
ent_seg	O
(	O
ent	pointer
)	O
)	O
)	O
;	O
if	O
(	O
(	O
(	O
operation	int
)	O
!=	O
(	O
count_scan	int
)	O
)	O
&&	O
(	O
(	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
)	O
>	O
(	O
oldct	int
)	O
)	O
)	O
ent_set_dty	O
(	O
ent	pointer
,	O
!	O
0	int
)	O
;	O
}	O
if	O
(	O
(	O
(	O
operation	int
)	O
==	O
(	O
rem_scan	O
)	O
)	O
&&	O
(	O
blk_empty_P	O
(	O
blk	pointer
)	O
)	O
&&	O
(	O
!	O
(	O
end_of_chain_P	O
(	O
blk	pointer
)	O
)	O
)	O
)	O
{	O
del_delete_bck	function
(	O
ent	pointer
)	O
;	O
}	O
else	O
if	O
(	O
ent_dty_P	O
(	O
ent	pointer
)	O
)	O
if	O
(	O
(	O
(	O
(	O
operation	int
)	O
==	O
(	O
rem_scan	O
)	O
)	O
&&	O
(	O
(	O
(	O
wcb_sar	int
)	O
&	O
(	O
wcb	int
)	O
)	O
||	O
(	O
(	O
blk_level	O
(	O
blk	pointer
)	O
)	O
>	O
(	O
leaf	int
)	O
)	O
)	O
)	O
||	O
(	O
(	O
(	O
operation	int
)	O
==	O
(	O
modify_scan	int
)	O
)	O
&&	O
(	O
(	O
wcb_sap	int
)	O
&	O
(	O
wcb	int
)	O
)	O
)	O
)	O
ents_ent_write	function
(	O
ent	pointer
)	O
;	O
if	O
(	O
(	O
result	int
)	O
!=	O
(	O
success	int
)	O
)	O
{	O
pkt_set_skey_len	O
(	O
respkt	pointer
,	O
recon_this_key	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
,	O
key_str	pointer
,	O
0	int
,	O
0x100	int
)	O
)	O
;	O
return	O
result	int
;	O
}	O
else	O
if	O
(	O
(	O
(	O
pkt_match_type	O
(	O
opkt	pointer
)	O
)	O
==	O
(	O
pastend	O
)	O
)	O
&&	O
(	O
!	O
(	O
end_of_chain_P	O
(	O
blk	pointer
)	O
)	O
)	O
)	O
{	O
pkt_set_skey_len	O
(	O
respkt	pointer
,	O
recon_this_key	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
,	O
key_str	pointer
,	O
0	int
,	O
0x100	int
)	O
)	O
;	O
return	O
notpres	O
;	O
}	O
else	O
{	O
pkt_set_skey_len	O
(	O
respkt	pointer
,	O
0	int
)	O
;	O
return	O
success	int
;	O
}	O
}	O
}	O
int	O
scan_loop	function
(	O
unsigned	O
char	O
*	O
blk	pointer
,	O
int	O
operation	int
,	O
int	O
*	O
pkt	pointer
,	O
int	O
*	O
opkt	pointer
,	O
int_function	pointer
func	pointer
,	O
long	O
*	O
long_tab	pointer
,	O
int	O
*	O
respkt	pointer
,	O
unsigned	O
char	O
*	O
ckstr	pointer
,	O
int	O
clen	int
,	O
unsigned	O
char	O
*	O
vstr	pointer
,	O
int	O
blksize	int
)	O
{	O
L_scan_loop	O
:	O
if	O
(	O
(	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
)	O
>	O
(	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
)	O
)	O
{	O
int	O
old_bend	int
=	O
blk_end	O
(	O
blk	pointer
)	O
;	O
int	O
next_pos	int
=	O
next_cnvpair	O
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
)	O
;	O
int	O
result	int
=	O
success	int
;	O
if	O
(	O
func	pointer
)	O
{	O
int	O
vpos	int
=	O
next_field	O
(	O
blk	pointer
,	O
1	int
+	O
(	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
)	O
)	O
;	O
int	O
vlen	int
=	O
field_len	O
(	O
blk	pointer
,	O
vpos	int
)	O
;	O
subbytes_move	O
(	O
blk	pointer
,	O
(	O
vpos	int
)	O
+	O
1	int
,	O
(	O
vpos	int
)	O
+	O
(	O
vlen	int
)	O
+	O
1	int
,	O
vstr	pointer
,	O
0	int
)	O
;	O
result	int
=	O
func	pointer
(	O
ckstr	pointer
,	O
clen	int
,	O
vstr	pointer
,	O
vlen	int
,	O
long_tab	pointer
)	O
;	O
}	O
if	O
(	O
(	O
result	int
)	O
>=	O
(	O
success	int
)	O
)	O
{	O
if	O
(	O
(	O
operation	int
)	O
==	O
(	O
rem_scan	O
)	O
)	O
{	O
blk_remove_key_and_val	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
,	O
blksize	int
)	O
;	O
pkt_set_skey_count	O
(	O
respkt	pointer
,	O
(	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
)	O
+	O
1	int
)	O
;	O
rem_ct	long
=	O
0x1L	int
+	O
(	O
rem_ct	long
)	O
;	O
if	O
(	O
(	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
)	O
==	O
(	O
next_pos	int
)	O
)	O
{	O
pkt_set_match_pos	O
(	O
opkt	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
)	O
;	O
}	O
else	O
pkt_set_match_pos	O
(	O
opkt	pointer
,	O
(	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
)	O
-	O
(	O
(	O
old_bend	int
)	O
-	O
(	O
blk_end	O
(	O
blk	pointer
)	O
)	O
)	O
)	O
;	O
next_pos	int
=	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
;	O
}	O
else	O
if	O
(	O
(	O
operation	int
)	O
==	O
(	O
count_scan	int
)	O
)	O
{	O
pkt_set_skey_count	O
(	O
respkt	pointer
,	O
(	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
)	O
+	O
1	int
)	O
;	O
pkt_set_match_pos	O
(	O
pkt	pointer
,	O
next_pos	int
)	O
;	O
}	O
else	O
if	O
(	O
blk_change_existing_value	function
(	O
blk	pointer
,	O
pkt_match_pos	O
(	O
pkt	pointer
)	O
,	O
ckstr	pointer
,	O
clen	int
,	O
vstr	pointer
,	O
result	int
,	O
blksize	int
)	O
)	O
{	O
pkt_set_skey_count	O
(	O
respkt	pointer
,	O
(	O
pkt_skey_count	O
(	O
respkt	pointer
)	O
)	O
+	O
1	int
)	O
;	O
next_pos	int
=	O
(	O
next_pos	int
)	O
-	O
(	O
(	O
old_bend	int
)	O
-	O
(	O
blk_end	O
(	O
blk	pointer
)	O
)	O
)	O
;	O
pkt_set_match_pos	O
(	O
opkt	pointer
,	O
(	O
pkt_match_pos	O
(	O
opkt	pointer
)	O
)	O
-	O
(	O
(	O
old_bend	int
)	O
-	O
(	O
blk_end	O
(	O
blk	pointer
)	O
)	O
)	O
)	O
;	O
pkt_set_match_pos	O
(	O
pkt	pointer
,	O
next_pos	int
)	O
;	O
result	int
=	O
success	int
;	O
}	O
else	O
dprintf	function
(	O
(	O
diagout	pointer
,	O
"%s: hit modify special case\n"	pointer
,	O
"scan_loop"	pointer
)	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
result	int
)	O
==	O
(	O
notpres	O
)	O
)	O
pkt_set_match_pos	O
(	O
pkt	pointer
,	O
next_pos	int
)	O
;	O
if	O
(	O
(	O
(	O
result	int
)	O
==	O
(	O
success	int
)	O
)	O
||	O
(	O
(	O
result	int
)	O
==	O
(	O
notpres	O
)	O
)	O
)	O
{	O
if	O
(	O
func	pointer
)	O
{	O
clen	int
=	O
(	O
field_len	O
(	O
blk	pointer
,	O
next_pos	int
)	O
)	O
+	O
(	O
field_len	O
(	O
blk	pointer
,	O
1	int
+	O
(	O
next_pos	int
)	O
)	O
)	O
;	O
subbytes_move	O
(	O
blk	pointer
,	O
(	O
next_pos	int
)	O
+	O
2	int
,	O
(	O
next_pos	int
)	O
+	O
2	int
+	O
(	O
field_len	O
(	O
blk	pointer
,	O
1	int
+	O
(	O
next_pos	int
)	O
)	O
)	O
,	O
ckstr	pointer
,	O
field_len	O
(	O
blk	pointer
,	O
next_pos	int
)	O
)	O
;	O
}	O
goto	O
L_scan_loop	O
;	O
}	O
else	O
return	O
result	int
;	O
}	O
else	O
return	O
success	int
;	O
}	O
