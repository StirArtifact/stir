int	O
thrashing_dragon	O
=	O
NO_MOVE	O
;	O
signed	O
char	O
thrashing_stone	O
[	O
BOARDMAX	O
]	O
;	O
float	O
potential_moves	O
[	O
BOARDMAX	O
]	O
;	O
int	O
depth	O
;	O
int	O
backfill_depth	O
;	O
int	O
backfill2_depth	O
;	O
int	O
break_chain_depth	O
;	O
int	O
superstring_depth	O
;	O
int	O
fourlib_depth	O
;	O
int	O
ko_depth	O
;	O
int	O
branch_depth	O
;	O
int	O
aa_depth	O
;	O
int	O
depth_offset	O
;	O
int	O
owl_distrust_depth	O
;	O
int	O
owl_branch_depth	O
;	O
int	O
owl_reading_depth	O
;	O
int	O
owl_node_limit	O
;	O
int	O
semeai_branch_depth	O
;	O
int	O
semeai_branch_depth2	O
;	O
int	O
semeai_node_limit	O
;	O
int	O
connect_depth	O
;	O
int	O
connect_depth2	O
;	O
int	O
connection_node_limit	O
;	O
int	O
breakin_node_limit	O
;	O
int	O
breakin_depth	O
;	O
int	O
mandated_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_backfill_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_backfill2_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_break_chain_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_superstring_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_fourlib_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_ko_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_branch_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_aa_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_owl_distrust_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_owl_branch_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_owl_reading_depth	O
=	O
-	O
1	O
;	O
int	O
mandated_owl_node_limit	O
=	O
-	O
1	O
;	O
int	O
mandated_semeai_node_limit	O
=	O
-	O
1	O
;	O
int	O
quiet	O
=	O
0	O
;	O
int	O
showstatistics	O
=	O
0	O
;	O
int	O
profile_patterns	O
=	O
0	O
;	O
int	O
allpats	O
=	O
0	O
;	O
int	O
printworms	O
=	O
0	O
;	O
int	O
printmoyo	O
=	O
0	O
;	O
int	O
printboard	O
=	O
0	O
;	O
int	O
fusekidb	O
=	O
1	O
;	O
int	O
disable_fuseki	O
=	O
0	O
;	O
int	O
josekidb	O
=	O
1	O
;	O
int	O
showtime	O
=	O
0	O
;	O
int	O
showscore	O
=	O
0	O
;	O
int	O
debug	O
=	O
0	O
;	O
int	O
verbose	O
=	O
0	O
;	O
char	O
outfilename	O
[	O
128	O
]	O
=	O
""	O
;	O
int	O
output_flags	O
=	O
OUTPUT_DEFAULT	O
;	O
int	O
metamachine	O
=	O
0	O
;	O
int	O
oracle_exists	O
=	O
0	O
;	O
int	O
autolevel_on	O
=	O
0	O
;	O
int	O
disable_threat_computation	O
=	O
0	O
;	O
int	O
disable_endgame_patterns	O
=	O
0	O
;	O
int	O
doing_scoring	O
=	O
0	O
;	O
int	O
chinese_rules	O
=	O
CHINESE_RULES	O
;	O
int	O
experimental_connections	O
=	O
EXPERIMENTAL_CONNECTIONS	O
;	O
int	O
alternate_connections	O
=	O
ALTERNATE_CONNECTIONS	O
;	O
int	O
owl_threats	O
=	O
OWL_THREATS	O
;	O
int	O
experimental_owl_ext	O
=	O
EXPERIMENTAL_OWL_EXT	O
;	O
int	O
experimental_break_in	O
=	O
USE_BREAK_IN	O
;	O
int	O
cosmic_gnugo	O
=	O
COSMIC_GNUGO	O
;	O
int	O
large_scale	O
=	O
LARGE_SCALE	O
;	O
int	O
capture_all_dead	O
=	O
0	O
;	O
int	O
play_out_aftermath	O
=	O
0	O
;	O
int	O
resign_allowed	O
=	O
RESIGNATION_ALLOWED	O
;	O
int	O
play_mirror_go	O
=	O
0	O
;	O
int	O
mirror_stones_limit	O
=	O
-	O
1	O
;	O
int	O
gtp_version	O
=	O
2	O
;	O
int	O
use_monte_carlo_genmove	O
=	O
0	O
;	O
int	O
mc_games_per_level	O
=	O
8000	O
;	O
float	O
best_move_values	O
[	O
10	O
]	O
;	O
int	O
best_moves	O
[	O
10	O
]	O
;	O
float	O
white_score	O
;	O
float	O
black_score	O
;	O
int	O
close_worms	O
[	O
BOARDMAX	O
]	O
[	O
4	O
]	O
;	O
int	O
number_close_worms	O
[	O
BOARDMAX	O
]	O
;	O
int	O
close_black_worms	O
[	O
BOARDMAX	O
]	O
[	O
4	O
]	O
;	O
int	O
number_close_black_worms	O
[	O
BOARDMAX	O
]	O
;	O
int	O
close_white_worms	O
[	O
BOARDMAX	O
]	O
[	O
4	O
]	O
;	O
int	O
number_close_white_worms	O
[	O
BOARDMAX	O
]	O
;	O
int	O
false_eye_territory	O
[	O
BOARDMAX	O
]	O
;	O
int	O
forced_backfilling_moves	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
worm_data	O
worm	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
dragon_data	O
dragon	O
[	O
BOARDMAX	O
]	O
;	O
int	O
number_of_dragons	O
;	O
struct	O
dragon_data2	O
*	O
dragon2	double
=	O
NULL	O
;	O
struct	O
half_eye_data	O
half_eye	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
eye_data	O
black_eye	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
eye_data	O
white_eye	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
vital_eye_points	O
black_vital_points	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
vital_eye_points	O
white_vital_points	O
[	O
BOARDMAX	O
]	O
;	O
struct	O
surround_data	O
surroundings	O
[	O
MAX_SURROUND	O
]	O
;	O
int	O
surround_pointer	O
;	O
int	O
cutting_points	O
[	O
BOARDMAX	O
]	O
;	O
double	O
slowest_time	O
=	O
0.0	O
;	O
int	O
slowest_move	O
=	O
NO_MOVE	O
;	O
int	O
slowest_movenum	O
=	O
0	O
;	O
double	O
total_time	O
=	O
0.0	O
;	O
float	O
minimum_value_weight	O
=	O
1.0	O
;	O
float	O
maximum_value_weight	O
=	O
1.0	O
;	O
float	O
invasion_malus_weight	O
=	O
1.0	O
;	O
float	O
territorial_weight	O
=	O
1.0	O
;	O
float	O
strategical_weight	O
=	O
1.0	O
;	O
float	O
attack_dragon_weight	O
=	O
1.0	O
;	O
float	O
followup_weight	O
=	O
1.0	O
;	O