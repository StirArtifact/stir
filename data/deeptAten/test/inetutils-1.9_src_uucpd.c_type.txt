void	O
dologin	function
(	O
struct	O
passwd	struct
*	O
pw	pointer
,	O
struct	O
sockaddr_in	struct
*	O
sin	pointer
)	O
;	O
struct	O
sockaddr_in	struct
hisctladdr	O
;	O
int	O
hisaddrlen	int
=	O
sizeof	O
hisctladdr	O
;	O
struct	O
sockaddr_in	struct
myctladdr	O
;	O
int	O
mypid	int
;	O
char	O
Username	O
[	O
64	O
]	O
;	O
char	O
*	O
nenv	pointer
[	O
]	O
=	O
{	O
Username	O
,	O
NULL	pointer
,	O
}	O
;	O
extern	O
char	O
*	O
*	function
environ	O
;	O
static	O
struct	O
argp	struct
argp	O
=	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
"TCP/IP server for uucico"	O
}	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	pointer
argv	pointer
)	O
{	O
register	O
int	O
s	int
;	O
struct	O
servent	struct
*	O
sp	pointer
;	O
void	O
dologout	O
(	O
void	O
)	O
;	O
set_program_name	O
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
iu_argp_init	O
(	O
"uucpd"	pointer
,	O
default_program_authors	pointer
)	O
;	O
argp_parse	O
(	O
&	O
argp	pointer
,	O
argc	O
,	O
argv	O
,	O
0	O
,	O
NULL	int
,	O
NULL	int
)	O
;	O
environ	O
=	O
nenv	function
;	O
sp	O
=	O
getservbyname	function
(	O
"uucp"	pointer
,	O
"tcp"	pointer
)	O
;	O
if	O
(	O
sp	int
==	O
NULL	O
)	O
{	O
perror	function
(	O
"uucpd: getservbyname"	pointer
)	O
;	O
exit	O
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
if	O
(	O
fork	O
(	O
)	O
)	O
exit	O
(	O
EXIT_SUCCESS	int
)	O
;	O
if	O
(	O
(	int
s	O
=	O
open	function
(	O
PATH_TTY	pointer
,	O
O_RDWR	int
)	O
)	O
>=	O
0	int
)	O
{	O
ioctl	O
(	O
s	int
,	O
TIOCNOTTY	int
,	O
(	int
char	O
*	O
)	O
0	pointer
)	O
;	O
close	O
(	O
s	pointer
)	O
;	O
}	O
memset	O
(	O
&	O
myctladdr	pointer
,	O
0	O
,	O
sizeof	O
(	O
myctladdr	O
)	O
)	O
;	O
myctladdr	O
.	O
sin_family	pointer
=	O
AF_INET	O
;	O
myctladdr	O
.	O
sin_port	pointer
=	O
sp	O
->	O
s_port	pointer
;	O
}	O
static	O
int	O
readline	function
(	O
register	O
char	O
*	O
p	pointer
,	O
register	O
int	O
n	int
)	O
{	O
char	O
c	O
;	O
while	O
(	O
n	O
--	O
>	O
0	int
)	O
{	O
if	O
(	O
read	int
(	O
0	int
,	O
&	int
c	pointer
,	O
1	O
)	O
<=	O
0	int
)	O
return	O
(	O
-	O
1	int
)	O
;	O
c	O
&=	O
0177	O
;	O
if	O
(	O
c	O
==	O
'\n'	O
||	O
c	int
==	O
'\r'	O
)	O
{	O
*	O
p	pointer
=	O
'\0'	O
;	O
return	O
(	int
0	O
)	O
;	O
}	O
*	O
p	function
++	O
=	O
c	O
;	O
}	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
void	O
doit	function
(	O
struct	O
sockaddr_in	struct
*	O
sinp	pointer
)	O
{	O
struct	O
passwd	struct
*	O
pw	pointer
,	O
*	O
getpwnam	pointer
(	O
const	O
char	O
*	O
)	pointer
;	pointer
char	O
user	O
[	O
64	O
]	O
,	O
passwd	O
[	O
64	int
]	O
;	O
char	O
*	O
xpasswd	pointer
;	O
alarm	O
(	O
60	O
)	O
;	O
printf	O
(	O
"login: "	pointer
)	O
;	O
fflush	O
(	O
stdout	pointer
)	O
;	O
if	O
(	O
readline	pointer
(	O
user	pointer
,	O
sizeof	pointer
user	O
)	O
<	O
0	int
)	O
{	O
fprintf	O
(	O
stderr	pointer
,	O
"user read\n"	pointer
)	O
;	O
return	O
;	int
}	O
user	O
[	O
8	int
]	O
=	O
'\0'	O
;	O
pw	O
=	O
getpwnam	function
(	O
user	pointer
)	O
;	O
if	O
(	O
pw	int
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"user unknown\n"	pointer
)	O
;	O
return	O
;	int
}	O
if	O
(	O
strcmp	pointer
(	O
pw	pointer
->	O
pw_shell	pointer
,	O
PATH_UUCICO	pointer
)	O
)	O
{	O
fprintf	O
(	O
stderr	pointer
,	O
"Login incorrect."	pointer
)	O
;	O
return	O
;	int
}	O
if	O
(	O
pw	pointer
->	O
pw_passwd	pointer
&&	O
*	pointer
pw	pointer
->	O
pw_passwd	pointer
!=	O
'\0'	O
)	O
{	O
printf	O
(	O
"Password: "	pointer
)	O
;	O
fflush	O
(	O
stdout	pointer
)	O
;	O
if	O
(	O
readline	pointer
(	O
passwd	pointer
,	O
sizeof	pointer
passwd	O
)	O
<	O
0	int
)	O
{	O
fprintf	O
(	O
stderr	pointer
,	O
"passwd read\n"	pointer
)	O
;	O
return	O
;	int
}	O
xpasswd	O
=	O
crypt	function
(	O
passwd	pointer
,	O
pw	O
->	O
pw_passwd	pointer
)	O
;	O
if	O
(	O
strcmp	pointer
(	O
xpasswd	pointer
,	O
pw	pointer
->	O
pw_passwd	pointer
)	O
)	O
{	O
fprintf	O
(	O
stderr	pointer
,	O
"Login incorrect."	pointer
)	O
;	O
return	O
;	int
}	O
}	O
alarm	O
(	O
0	O
)	O
;	O
sprintf	O
(	O
Username	pointer
,	O
"USER=%s"	pointer
,	O
user	pointer
)	O
;	O
dologin	O
(	O
pw	O
,	O
sinp	int
)	O
;	O
setgid	O
(	O
pw	int
->	O
pw_gid	pointer
)	O
;	O
chdir	O
(	O
pw	pointer
->	O
pw_dir	pointer
)	O
;	O
setuid	O
(	O
pw	int
->	O
pw_uid	pointer
)	O
;	O
perror	O
(	O
"uucico server: execl"	pointer
)	O
;	O
}	O
void	O
dologout	function
(	O
void	O
)	O
{	O
int	O
pid	int
;	O
while	O
(	O
(	O
pid	O
=	O
wait3	O
(	O
0	O
,	O
WNOHANG	int
,	O
0	int
)	O
)	O
>	O
0	int
)	O
{	O
char	O
line	O
[	O
100	int
]	O
;	O
sprintf	O
(	O
line	pointer
,	O
"uucp%.4d"	pointer
,	O
pid	int
)	O
;	O
logwtmp	O
(	O
line	O
,	O
""	int
,	O
""	pointer
)	O
;	O
}	O
}	O
void	O
dologin	function
(	O
struct	O
passwd	struct
*	O
pw	pointer
,	O
struct	O
sockaddr_in	struct
*	O
sin	pointer
)	O
{	O
char	O
line	O
[	O
32	int
]	O
;	O
char	O
remotehost	O
[	O
32	int
]	O
;	O
int	O
f	int
;	O
struct	O
hostent	struct
*	O
hp	pointer
=	O
gethostbyaddr	O
(	O
(	O
char	O
*	O
)	O
&	pointer
sin	pointer
->	O
sin_addr	struct
,	O
sizeof	O
(	O
struct	O
in_addr	struct
)	O
,	O
AF_INET	O
)	O
;	O
if	O
(	O
hp	O
)	O
{	O
strncpy	O
(	O
remotehost	pointer
,	O
hp	pointer
->	O
h_name	pointer
,	O
sizeof	int
(	O
remotehost	O
)	O
)	O
;	O
endhostent	O
(	O
)	O
;	O
}	O
else	O
strncpy	O
(	O
remotehost	pointer
,	O
inet_ntoa	pointer
(	O
sin	O
->	O
sin_addr	pointer
)	O
,	O
sizeof	O
(	O
remotehost	O
)	O
)	O
;	O
sprintf	O
(	O
line	pointer
,	O
"uucp%.4d"	pointer
,	O
getpid	pointer
(	O
)	O
)	O
;	O
logwtmp	O
(	O
line	O
,	O
pw	O
->	O
pw_name	pointer
,	O
remotehost	int
)	O
;	O
f	O
=	O
open	function
(	O
PATH_LASTLOG	pointer
,	O
O_RDWR	int
)	O
;	O
if	O
(	O
f	pointer
>=	O
0	int
)	O
{	O
struct	function
lastlog	struct
ll	O
;	O
time_t	O
t	O
;	O
time	O
(	O
&	O
t	pointer
)	O
;	O
ll	O
.	O
ll_time	pointer
=	O
t	O
;	O
lseek	O
(	O
f	int
,	O
(	int
long	O
)	O
pw	O
->	O
pw_uid	pointer
*	O
sizeof	O
(	O
struct	O
lastlog	struct
)	O
,	O
0	O
)	O
;	O
strcpy	O
(	O
line	pointer
,	O
remotehost	pointer
)	O
;	O
SCPYN	O
(	O
ll	O
.	O
ll_line	pointer
,	O
line	O
)	O
;	O
SCPYN	O
(	O
ll	O
.	O
ll_host	pointer
,	O
remotehost	O
)	O
;	O
write	O
(	O
f	pointer
,	O
(	pointer
char	O
*	O
)	O
&	pointer
ll	pointer
,	O
sizeof	O
ll	O
)	O
;	O
close	O
(	O
f	pointer
)	O
;	O
}	O
}	O