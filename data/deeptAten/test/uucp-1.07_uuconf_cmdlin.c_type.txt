const	O
char	O
_uuconf_cmdlin_rcsid	O
[	O
]	O
=	O
"$Id: cmdlin.c,v 1.7 2002/03/05 19:10:42 ian Rel $"	O
;	O
int	O
uuconf_cmd_line	int
(	O
pglobal	O
,	O
zline	pointer
,	O
qtab	pointer
,	O
pinfo	pointer
,	O
pfiunknown	pointer
,	O
iflags	pointer
,	O
pblock	pointer
)	O
pointer	O
pglobal	pointer
;	O
char	O
*	O
zline	pointer
;	O
const	O
struct	O
uuconf_cmdtab	struct
*	O
qtab	pointer
;	O
pointer	O
pinfo	pointer
;	O
int	O
(	int
*	O
pfiunknown	pointer
)	O
P	O
(	O
(	O
pointer	O
,	O
int	O
,	O
char	O
*	O
*	O
,	O
pointer	O
,	O
pointer	O
)	O
)	O
;	O
int	O
iflags	int
;	O
pointer	O
pblock	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
char	O
*	O
z	pointer
;	O
int	O
cargs	int
;	O
char	O
*	O
azargs	pointer
[	O
CSTACK	O
]	O
;	O
char	O
*	O
*	pointer
pzargs	pointer
;	O
int	O
iret	int
;	O
if	O
(	O
(	O
iflags	O
&	O
UUCONF_CMDTABFLAG_NOCOMMENTS	pointer
)	O
==	O
0	O
)	O
{	O
z	O
=	O
zline	O
;	O
while	O
(	O
(	O
z	O
=	O
strchr	int
(	O
z	pointer
,	O
'#'	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
z	O
==	O
zline	O
||	O
*	O
(	pointer
z	O
-	O
1	int
)	O
!=	O
'\\'	O
)	O
{	O
*	O
z	pointer
=	O
'\0'	O
;	O
break	O
;	O
}	O
while	O
(	O
(	O
*	O
(	pointer
z	O
-	O
1	int
)	O
=	O
*	O
z	pointer
)	O
!=	O
'\0'	O
)	O
++	O
z	O
;	O
}	O
}	O
z	O
=	O
zline	function
;	O
cargs	O
=	O
0	O
;	O
pzargs	O
=	O
azargs	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
*	O
z	pointer
!=	O
'\0'	O
&&	O
isspace	O
(	O
BUCHAR	O
(	O
*	pointer
z	pointer
)	O
)	O
)	O
++	O
z	O
;	O
if	O
(	O
*	O
z	pointer
==	O
'\0'	O
)	O
break	O
;	O
if	O
(	O
cargs	O
>=	O
CSTACK	int
)	O
{	O
char	O
*	O
*	pointer
pzsplit	pointer
;	O
size_t	O
csplit	O
;	O
int	O
cmore	int
;	O
pzsplit	O
=	O
NULL	O
;	O
csplit	O
=	O
0	O
;	O
cmore	O
=	O
_uuconf_istrsplit	O
(	O
z	pointer
,	O
'\0'	O
,	O
&	pointer
pzsplit	pointer
,	O
&	O
csplit	pointer
)	O
;	O
if	O
(	O
cmore	O
<	O
0	int
)	O
{	O
qglobal	O
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	int
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
pzargs	O
=	O
(	O
char	O
*	O
*	O
)	O
malloc	pointer
(	O
(	O
cmore	O
+	O
CSTACK	O
)	O
*	O
sizeof	pointer
(	O
char	O
*	O
)	O
)	pointer
;	O
if	O
(	O
pzargs	O
==	O
NULL	O
)	O
{	O
qglobal	O
->	O
ierrno	pointer
=	O
errno	O
;	O
free	O
(	O
(	pointer
pointer	O
)	O
pzsplit	O
)	O
;	O
return	O
UUCONF_MALLOC_FAILED	int
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	O
(	O
(	pointer
pointer	O
)	O
pzargs	pointer
,	O
(	O
pointer	O
)	O
azargs	pointer
,	O
CSTACK	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	pointer
;	O
memcpy	O
(	O
(	pointer
pointer	pointer
)	O
(	O
pzargs	O
+	O
CSTACK	O
)	O
,	O
(	O
pointer	O
)	O
pzsplit	pointer
,	O
cmore	O
*	O
sizeof	pointer
(	O
char	O
*	O
)	O
)	pointer
;	O
cargs	O
=	O
cmore	O
+	O
CSTACK	int
;	O
free	O
(	O
(	pointer
pointer	O
)	O
pzsplit	O
)	O
;	O
break	O
;	O
}	O
azargs	O
[	O
cargs	int
]	O
=	O
z	O
;	O
++	O
cargs	O
;	O
while	O
(	O
*	O
z	pointer
!=	O
'\0'	O
&&	O
!	pointer
isspace	O
(	O
BUCHAR	O
(	O
*	pointer
z	pointer
)	O
)	O
)	O
z	O
++	O
;	O
if	O
(	O
*	O
z	pointer
==	O
'\0'	O
)	O
break	O
;	O
*	O
z	pointer
++	O
=	O
'\0'	int
;	O
}	O
if	O
(	O
cargs	O
<=	O
0	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
iret	O
=	O
uuconf_cmd_args	O
(	O
pglobal	pointer
,	O
cargs	pointer
,	O
pzargs	pointer
,	O
qtab	pointer
,	O
pinfo	pointer
,	O
pfiunknown	pointer
,	O
iflags	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
pzargs	O
!=	O
azargs	O
)	O
free	O
(	O
(	pointer
pointer	O
)	O
pzargs	pointer
)	O
;	O
return	O
iret	int
;	O
}	O