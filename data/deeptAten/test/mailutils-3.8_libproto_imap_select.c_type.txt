static	O
int	O
_collect_flags	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
imap_list_element	struct
*	O
elt	pointer
=	O
item	O
;	O
int	O
*	int
args	pointer
=	O
data	O
;	O
if	O
(	O
elt	O
->	O
type	pointer
==	O
imap_eltype_string	O
)	O
mu_imap_flag_to_attribute	O
(	O
elt	pointer
->	O
v	pointer
.	O
string	pointer
,	O
args	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
_mu_imap_collect_flags	function
(	O
struct	O
imap_list_element	struct
*	O
arg	pointer
,	O
int	O
*	int
res	pointer
)	O
{	O
if	O
(	O
arg	O
->	O
type	pointer
!=	O
imap_eltype_list	O
)	O
return	O
EINVAL	O
;	O
*	O
res	pointer
=	O
0	O
;	O
mu_list_foreach	O
(	O
arg	pointer
->	O
v	pointer
.	O
list	pointer
,	O
_collect_flags	pointer
,	O
res	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
_select_response_action	function
(	O
mu_imap_t	O
imap	O
,	O
mu_list_t	O
response	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
imap_list_element	struct
*	O
elt	pointer
;	O
elt	O
=	O
_mu_imap_list_at	int
(	O
response	O
,	O
0	int
)	O
;	O
if	O
(	O
elt	O
&&	O
_mu_imap_list_element_is_string	O
(	O
elt	pointer
,	O
"FLAGS"	pointer
)	O
)	O
{	O
struct	O
imap_list_element	struct
*	O
arg	pointer
=	O
_mu_imap_list_at	O
(	O
response	O
,	O
1	int
)	O
;	O
if	O
(	O
arg	O
&&	O
_mu_imap_collect_flags	O
(	O
arg	pointer
,	O
&	pointer
imap	pointer
->	O
mbox_stat	pointer
.	O
defined_flags	pointer
)	O
==	O
0	O
)	O
imap	O
->	O
mbox_stat	pointer
.	O
flags	pointer
|=	O
MU_IMAP_STAT_DEFINED_FLAGS	int
;	O
}	pointer
}	O
int	O
mu_imap_select	function
(	O
mu_imap_t	O
imap	pointer
,	O
const	O
char	O
*	O
mbox	pointer
,	O
int	O
writable	int
,	O
struct	O
mu_imap_stat	struct
*	O
ps	pointer
)	O
{	O
int	O
status	int
;	O
if	O
(	O
imap	O
==	O
NULL	O
)	O
return	O
EINVAL	O
;	O
if	O
(	O
!	O
imap	O
->	O
io	pointer
)	O
return	O
MU_ERR_NO_TRANSPORT	O
;	O
if	O
(	O
imap	O
->	O
session_state	pointer
!=	O
MU_IMAP_SESSION_AUTH	O
&&	O
imap	pointer
->	O
session_state	pointer
!=	O
MU_IMAP_SESSION_SELECTED	O
)	O
return	O
MU_ERR_SEQ	O
;	O
if	O
(	O
!	O
mbox	O
)	O
{	O
if	O
(	O
imap	O
->	O
session_state	pointer
==	O
MU_IMAP_SESSION_SELECTED	int
)	O
{	O
if	O
(	O
ps	O
)	O
*	O
ps	pointer
=	O
imap	int
->	O
mbox_stat	pointer
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_INFO_UNAVAILABLE	O
;	O
}	O
if	O
(	O
imap	O
->	O
mbox_name	pointer
&&	O
strcmp	O
(	O
imap	pointer
->	O
mbox_name	pointer
,	O
mbox	pointer
)	O
==	O
0	int
&&	O
writable	int
==	O
imap	O
->	O
mbox_writable	int
)	O
{	O
if	O
(	O
ps	O
)	O
*	O
ps	pointer
=	O
imap	int
->	O
mbox_stat	pointer
;	O
return	O
0	int
;	O
}	O
switch	O
(	O
imap	O
->	O
client_state	pointer
)	O
{	O
case	O
MU_IMAP_CLIENT_READY	O
:	O
status	O
=	O
_mu_imap_tag_next	int
(	O
imap	pointer
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
status	O
=	O
mu_imapio_send_command	int
(	O
imap	pointer
->	O
io	pointer
,	O
imap	pointer
->	O
tag_str	pointer
,	O
NULL	pointer
,	O
writable	pointer
?	O
"SELECT"	O
:	O
"EXAMINE"	O
,	O
mbox	pointer
,	O
NULL	pointer
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
MU_IMAP_FCLR	O
(	O
imap	pointer
,	O
MU_IMAP_RESP	int
)	O
;	O
imap	O
->	O
client_state	pointer
=	O
MU_IMAP_CLIENT_SELECT_RX	int
;	O
case	pointer
MU_IMAP_CLIENT_SELECT_RX	O
:	O
memset	O
(	O
&	pointer
imap	pointer
->	O
mbox_stat	pointer
,	O
0	O
,	O
sizeof	int
(	O
imap	O
->	O
mbox_stat	pointer
)	O
)	O
;	O
status	O
=	O
_mu_imap_response	int
(	O
imap	pointer
,	O
_select_response_action	int
,	O
NULL	int
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
switch	O
(	O
imap	O
->	O
response	int
)	O
{	O
case	O
MU_IMAP_OK	O
:	O
imap	O
->	O
session_state	pointer
=	O
MU_IMAP_SESSION_SELECTED	int
;	O
free	O
(	O
imap	pointer
->	O
mbox_name	pointer
)	O
;	O
imap	O
->	O
mbox_name	pointer
=	O
strdup	O
(	O
mbox	pointer
)	O
;	O
if	O
(	O
!	O
imap	O
->	O
mbox_name	pointer
)	O
{	O
imap	O
->	O
client_state	pointer
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
return	pointer
errno	int
;	O
}	O
imap	O
->	O
mbox_writable	pointer
=	O
writable	O
;	O
if	O
(	O
ps	O
)	O
*	O
ps	pointer
=	O
imap	int
->	O
mbox_stat	pointer
;	O
break	O
;	O
case	O
MU_IMAP_NO	O
:	O
status	O
=	O
EACCES	int
;	O
break	O
;	O
case	O
MU_IMAP_BAD	O
:	O
status	O
=	O
MU_ERR_BADREPLY	int
;	O
break	O
;	O
}	O
imap	O
->	O
client_state	pointer
=	O
MU_IMAP_CLIENT_READY	int
;	O
break	O
;	O
default	O
:	O
status	O
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	O
;	O
}	O