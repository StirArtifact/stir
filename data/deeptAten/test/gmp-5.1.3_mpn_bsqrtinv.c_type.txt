int	O
mpn_bsqrtinv	O
(	O
mp_ptr	O
rp	O
,	O
mp_srcptr	O
yp	O
,	O
mp_bitcnt_t	pointer
bnb	O
,	O
mp_ptr	pointer
tp	O
)	O
{	O
mp_ptr	O
tp2	O
,	O
tp3	pointer
;	O
mp_limb_t	O
k	O
;	O
mp_size_t	O
bn	O
,	O
order	pointer
[	O
GMP_LIMB_BITS	int
+	O
1	int
]	O
;	O
int	O
i	int
,	O
d	int
;	O
ASSERT	O
(	O
bnb	O
>	O
0	int
)	O
;	O
bn	O
=	O
1	O
+	O
bnb	int
/	O
GMP_LIMB_BITS	O
;	O
tp2	O
=	O
tp	O
+	O
bn	int
;	O
tp3	O
=	O
tp	pointer
+	O
2	int
*	O
bn	int
;	O
k	O
=	O
3	int
;	O
rp	O
[	O
0	int
]	O
=	O
1	pointer
;	O
if	O
(	O
bnb	O
==	O
1	O
)	O
{	O
if	O
(	O
(	O
yp	O
[	O
0	int
]	O
&	O
3	pointer
)	O
!=	O
1	O
)	O
return	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
(	O
yp	O
[	O
0	int
]	O
&	O
7	pointer
)	O
!=	O
1	O
)	O
return	O
0	int
;	O
d	O
=	O
0	O
;	O
for	O
(	O
;	O
bnb	O
!=	O
2	O
;	O
bnb	O
=	O
(	int
bnb	O
+	O
2	int
)	O
>>	O
1	int
)	O
order	O
[	O
d	int
++	O
]	O
=	O
bnb	pointer
;	O
for	O
(	O
i	O
=	O
d	int
-	O
1	int
;	O
i	O
>=	O
0	int
;	O
i	int
--	O
)	O
{	O
bnb	O
=	O
order	O
[	O
i	int
]	O
;	O
bn	O
=	O
1	O
+	O
bnb	int
/	O
GMP_LIMB_BITS	int
;	O
mpn_mul_1	O
(	O
tp	pointer
,	O
rp	pointer
,	O
bn	pointer
,	O
k	pointer
)	O
;	O
mpn_powlo	O
(	O
tp2	pointer
,	O
rp	pointer
,	O
&	pointer
k	pointer
,	O
1	O
,	O
bn	O
,	O
tp3	O
)	O
;	O
mpn_mullo_n	O
(	O
rp	pointer
,	O
yp	O
,	O
tp2	O
,	O
bn	pointer
)	O
;	O
mpn_rsh1sub_n	O
(	O
rp	pointer
,	O
tp	O
,	O
rp	pointer
,	O
bn	pointer
)	O
;	O
}	O
}	O
return	O
1	O
;	O
}	O