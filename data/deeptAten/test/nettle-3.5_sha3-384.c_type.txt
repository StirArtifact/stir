void	O
sha3_384_init	O
(	O
struct	O
sha3_384_ctx	struct
*	O
ctx	pointer
)	O
{	O
memset	O
(	O
ctx	O
,	O
0	O
,	O
offsetof	O
(	O
struct	O
sha3_384_ctx	O
,	O
block	O
)	O
)	O
;	O
}	O
void	O
sha3_384_update	O
(	O
struct	O
sha3_384_ctx	struct
*	O
ctx	pointer
,	O
size_t	O
length	O
,	O
const	O
uint8_t	O
*	O
data	pointer
)	O
{	O
ctx	O
->	O
index	pointer
=	O
_sha3_update	int
(	O
&	O
ctx	pointer
->	O
state	pointer
,	O
SHA3_384_BLOCK_SIZE	O
,	O
ctx	O
->	O
block	pointer
,	O
ctx	O
->	O
index	pointer
,	O
length	O
,	O
data	O
)	O
;	O
}	O
void	O
sha3_384_digest	O
(	O
struct	O
sha3_384_ctx	struct
*	O
ctx	pointer
,	O
size_t	O
length	O
,	O
uint8_t	O
*	O
digest	pointer
)	O
{	O
_sha3_pad	O
(	O
&	O
ctx	pointer
->	O
state	pointer
,	O
SHA3_384_BLOCK_SIZE	O
,	O
ctx	O
->	O
block	pointer
,	O
ctx	O
->	O
index	pointer
)	O
;	O
_nettle_write_le64	O
(	O
length	O
,	O
digest	O
,	O
ctx	O
->	O
state	pointer
.	O
a	pointer
)	O
;	O
sha3_384_init	O
(	O
ctx	O
)	O
;	O
}	O