const	O
char	O
uupick_rcsid	array
[	O
]	O
=	O
"$Id: uupick.c,v 1.19 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
static	O
void	O
upmovedir	function
P	O
(	O
(	O
const	O
char	O
*	O
zfull	pointer
,	O
const	O
char	O
*	O
zrelative	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
void	O
upmove	function
P	O
(	O
(	O
const	O
char	O
*	O
zfrom	pointer
,	O
const	O
char	O
*	O
zto	pointer
)	O
)	O
;	O
static	O
const	O
struct	O
option	struct
asPlongopts	array
[	O
]	O
=	O
{	O
{	O
"system"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"config"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'I'	O
}	O
,	O
{	O
"debug"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'x'	O
}	O
,	O
{	O
"version"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
void	O
upusage	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
uphelp	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
int	O
main	function
(	O
argc	int
,	O
argv	pointer
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
{	O
const	O
char	O
*	O
zsystem	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
zconfig	pointer
=	O
NULL	O
;	O
int	O
iopt	int
;	O
pointer	pointer
puuconf	pointer
;	O
int	O
iuuconf	int
;	O
const	O
char	O
*	O
zpubdir	pointer
;	O
char	O
*	O
zfile	pointer
,	O
*	O
zfrom	pointer
,	O
*	O
zfull	pointer
;	O
char	O
*	O
zallsys	pointer
;	O
char	O
ab	array
[	O
1000	int
]	O
;	O
boolean	int
fquit	int
;	O
zProgram	pointer
=	O
"uupick"	pointer
;	O
while	O
(	O
(	O
iopt	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	pointer
,	O
"I:s:vx:"	pointer
,	O
asPlongopts	array
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
iopt	int
)	O
{	O
case	O
's'	O
:	O
zsystem	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'I'	O
:	O
if	O
(	O
fsysdep_other_config	function
(	O
optarg	O
)	O
)	O
zconfig	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'x'	O
:	O
iDebug	int
|=	O
idebug_parse	function
(	O
optarg	O
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
printf	function
(	O
"uupick (Taylor UUCP) %s\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
"Copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	pointer
)	O
;	O
printf	function
(	O
"This program is free software; you may redistribute it under the terms of\n"	pointer
)	O
;	O
printf	function
(	O
"the GNU General Public LIcense.  This program has ABSOLUTELY NO WARRANTY.\n"	pointer
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
1	int
:	O
uphelp	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
upusage	function
(	O
)	O
;	O
}	O
}	O
if	O
(	O
argc	int
!=	O
optind	O
)	O
upusage	function
(	O
)	O
;	O
iuuconf	int
=	O
uuconf_init	function
(	O
&	O
puuconf	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
zconfig	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
usysdep_initialize	function
(	O
puuconf	pointer
,	O
INIT_GETCWD	O
|	O
INIT_NOCHDIR	O
)	O
;	O
zpubdir	pointer
=	O
NULL	O
;	O
if	O
(	O
zsystem	pointer
!=	O
NULL	O
)	O
{	O
struct	O
uuconf_system	struct
ssys	struct
;	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
zsystem	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
zpubdir	pointer
=	O
zbufcpy	function
(	O
ssys	struct
.	O
uuconf_zpubdir	pointer
)	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
}	O
}	O
if	O
(	O
zpubdir	pointer
==	O
NULL	O
)	O
{	O
iuuconf	int
=	O
uuconf_pubdir	function
(	O
puuconf	pointer
,	O
&	O
zpubdir	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
}	O
if	O
(	O
!	O
fsysdep_uupick_init	function
(	O
zsystem	pointer
,	O
zpubdir	pointer
)	O
)	O
usysdep_exit	function
(	O
FALSE	O
)	O
;	O
zallsys	pointer
=	O
NULL	O
;	O
fquit	int
=	O
FALSE	O
;	O
while	O
(	O
!	O
fquit	int
&&	O
(	O
(	O
zfile	pointer
=	O
zsysdep_uupick	function
(	O
zsystem	pointer
,	O
zpubdir	pointer
,	O
&	O
zfrom	pointer
,	O
&	O
zfull	pointer
)	O
)	O
!=	O
NULL	O
)	O
)	O
{	O
boolean	int
fdir	int
;	O
char	O
*	O
zto	pointer
,	O
*	O
zlocal	pointer
;	O
FILE	struct
*	O
e	pointer
;	O
boolean	int
fcontinue	int
;	O
fdir	int
=	O
fsysdep_directory	function
(	O
zfull	pointer
)	O
;	O
do	O
{	O
boolean	int
fbadname	int
;	O
fcontinue	int
=	O
FALSE	O
;	O
if	O
(	O
zallsys	pointer
==	O
NULL	O
||	O
strcmp	function
(	O
zallsys	pointer
,	O
zfrom	pointer
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
zallsys	pointer
!=	O
NULL	O
)	O
{	O
ubuffree	function
(	O
zallsys	pointer
)	O
;	O
zallsys	pointer
=	O
NULL	O
;	O
}	O
printf	function
(	O
"from %s: %s %s ?\n"	pointer
,	O
zfrom	pointer
,	O
fdir	int
?	O
"dir"	pointer
:	O
"file"	pointer
,	O
zfile	pointer
)	O
;	O
if	O
(	O
fgets	function
(	O
ab	array
,	O
sizeof	O
ab	array
,	O
stdin	pointer
)	O
==	O
NULL	O
)	O
break	O
;	O
}	O
if	O
(	O
ab	array
[	O
0	int
]	O
==	O
'q'	O
)	O
{	O
fquit	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
switch	O
(	O
ab	array
[	O
0	int
]	O
)	O
{	O
case	O
'\n'	O
:	O
break	O
;	O
case	O
'd'	O
:	O
if	O
(	O
fdir	int
)	O
(	O
void	O
)	O
fsysdep_rmdir	function
(	O
zfull	pointer
)	O
;	O
else	O
{	O
if	O
(	O
remove	function
(	O
zfull	pointer
)	O
!=	O
0	int
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"remove (%s): %s"	pointer
,	O
zfull	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
'm'	O
:	O
case	O
'a'	O
:	O
zto	pointer
=	O
ab	array
+	O
1	int
+	O
strspn	function
(	O
ab	array
+	O
1	int
,	O
" \t"	pointer
)	O
;	O
zto	pointer
[	O
strcspn	function
(	O
zto	pointer
,	O
" \t\n"	pointer
)	O
]	O
=	O
'\0'	O
;	O
zlocal	pointer
=	O
zsysdep_uupick_local_file	function
(	O
zto	pointer
,	O
&	O
fbadname	int
)	O
;	O
if	O
(	O
zlocal	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
!	O
fbadname	int
)	O
usysdep_exit	function
(	O
FALSE	O
)	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: bad local file name"	pointer
,	O
zto	pointer
)	O
;	O
fcontinue	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
zto	pointer
=	O
zsysdep_in_dir	function
(	O
zlocal	pointer
,	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zlocal	pointer
)	O
;	O
if	O
(	O
zto	pointer
==	O
NULL	O
)	O
usysdep_exit	function
(	O
FALSE	O
)	O
;	O
if	O
(	O
!	O
fdir	int
)	O
upmove	function
(	O
zfull	pointer
,	O
zto	pointer
)	O
;	O
else	O
{	O
usysdep_walk_tree	function
(	O
zfull	pointer
,	O
upmovedir	function
,	O
(	O
pointer	pointer
)	O
zto	pointer
)	O
;	O
(	O
void	O
)	O
fsysdep_rmdir	function
(	O
zfull	pointer
)	O
;	O
}	O
ubuffree	function
(	O
zto	pointer
)	O
;	O
if	O
(	O
ab	array
[	O
0	int
]	O
==	O
'a'	O
)	O
{	O
zallsys	pointer
=	O
zbufcpy	function
(	O
zfrom	pointer
)	O
;	O
ab	array
[	O
0	int
]	O
=	O
'm'	O
;	O
}	O
break	O
;	O
case	O
'p'	O
:	O
if	O
(	O
fdir	int
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Can't print directory"	pointer
)	O
;	O
else	O
{	O
e	pointer
=	O
fopen	function
(	O
zfull	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fopen (%s): %s"	pointer
,	O
zfull	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
else	O
{	O
while	O
(	O
fgets	function
(	O
ab	array
,	O
sizeof	O
ab	array
,	O
e	pointer
)	O
!=	O
NULL	O
)	O
(	O
void	O
)	O
fputs	function
(	O
ab	array
,	O
stdout	pointer
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
}	O
}	O
fcontinue	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'!'	O
:	O
(	O
void	O
)	O
system	function
(	O
ab	array
+	O
1	int
)	O
;	O
fcontinue	int
=	O
TRUE	O
;	O
break	O
;	O
default	O
:	O
printf	function
(	O
"uupick commands:\n"	pointer
)	O
;	O
printf	function
(	O
"q: quit\n"	pointer
)	O
;	O
printf	function
(	O
"<return>: skip file\n"	pointer
)	O
;	O
printf	function
(	O
"m [dir]: move file to directory\n"	pointer
)	O
;	O
printf	function
(	O
"a [dir]: move all files from this system to directory\n"	pointer
)	O
;	O
printf	function
(	O
"p: list file to stdout\n"	pointer
)	O
;	O
printf	function
(	O
"d: delete file\n"	pointer
)	O
;	O
printf	function
(	O
"! command: shell escape\n"	pointer
)	O
;	O
fcontinue	int
=	O
TRUE	O
;	O
break	O
;	O
}	O
}	O
while	O
(	O
fcontinue	int
)	O
;	O
ubuffree	function
(	O
zfull	pointer
)	O
;	O
ubuffree	function
(	O
zfrom	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
}	O
(	O
void	O
)	O
fsysdep_uupick_free	function
(	O
zsystem	pointer
,	O
zpubdir	pointer
)	O
;	O
usysdep_exit	function
(	O
TRUE	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
upusage	function
(	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s [-s system] [-I config] [-x debug]\n"	pointer
,	O
zProgram	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Use %s --help for help\n"	pointer
,	O
zProgram	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
uphelp	function
(	O
)	O
{	O
printf	function
(	O
"Taylor UUCP %s, copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
" -s,--system system: Only consider files from named system\n"	pointer
)	O
;	O
printf	function
(	O
" -x,--debug debug: Set debugging level\n"	pointer
)	O
;	O
printf	function
(	O
" -I,--config file: Set configuration file to use\n"	pointer
)	O
;	O
printf	function
(	O
" -v,--version: Print version and exit\n"	pointer
)	O
;	O
printf	function
(	O
" --help: Print help and exit\n"	pointer
)	O
;	O
printf	function
(	O
"Report bugs to taylor-uucp@gnu.org\n"	pointer
)	O
;	O
}	O
static	O
void	O
upmovedir	function
(	O
zfull	pointer
,	O
zrelative	pointer
,	O
pinfo	pointer
)	O
const	O
char	O
*	O
zfull	pointer
;	O
const	O
char	O
*	O
zrelative	pointer
;	O
pointer	pointer
pinfo	pointer
;	O
{	O
const	O
char	O
*	O
ztodir	pointer
=	O
(	O
const	O
char	O
*	O
)	O
pinfo	pointer
;	O
char	O
*	O
zto	pointer
;	O
zto	pointer
=	O
zsysdep_in_dir	function
(	O
ztodir	pointer
,	O
zrelative	pointer
)	O
;	O
if	O
(	O
zto	pointer
==	O
NULL	O
)	O
usysdep_exit	function
(	O
FALSE	O
)	O
;	O
upmove	function
(	O
zfull	pointer
,	O
zto	pointer
)	O
;	O
ubuffree	function
(	O
zto	pointer
)	O
;	O
}	O
static	O
void	O
upmove	function
(	O
zfrom	pointer
,	O
zto	pointer
)	O
const	O
char	O
*	O
zfrom	pointer
;	O
const	O
char	O
*	O
zto	pointer
;	O
{	O
(	O
void	O
)	O
fsysdep_move_file	function
(	O
zfrom	pointer
,	O
zto	pointer
,	O
TRUE	O
,	O
TRUE	O
,	O
FALSE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
