int	O
checkCutOrCopyDir	function
(	O
int	O
i	int
)	O
{	O
if	O
(	O
numCutDirs	O
==	O
0	int
&&	O
numCopyDirs	int
==	O
0	int
)	O
return	O
0	int
;	O
int	O
j	int
;	O
char	O
str	O
[	O
dirs	int
[	O
i	int
]	O
->	O
namelen	pointer
+	O
cwdlen	int
+	O
2	int
]	O
;	O
strcpy	O
(	O
str	pointer
,	O
cwd	pointer
)	O
;	O
strcat	O
(	O
str	pointer
,	O
"/"	pointer
)	O
;	O
strcat	O
(	O
str	pointer
,	O
dirs	pointer
[	O
i	int
]	O
->	O
name	pointer
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
numCutDirs	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	int
(	O
cutDirs	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
1	int
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
numCopyDirs	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	int
(	O
copyDirs	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
2	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
checkCutOrCopyFile	function
(	O
int	O
i	int
)	O
{	O
if	O
(	O
numCutFiles	int
==	O
0	int
&&	O
numCopyFiles	int
==	O
0	int
)	O
return	O
0	int
;	O
int	O
j	int
;	O
char	O
str	O
[	O
files	int
[	O
i	int
]	O
->	O
namelen	pointer
+	O
cwdlen	int
+	O
2	int
]	O
;	O
strcpy	O
(	O
str	pointer
,	O
cwd	pointer
)	O
;	O
strcat	O
(	O
str	pointer
,	O
"/"	pointer
)	O
;	O
strcat	O
(	O
str	pointer
,	O
files	pointer
[	O
i	int
]	O
->	O
name	pointer
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
numCutFiles	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	int
(	O
cutFiles	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
1	int
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
numCopyFiles	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	int
(	O
copyFiles	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
2	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
__removeCutCopyItem	function
(	O
struct	O
dirstruct	struct
*	O
*	pointer
fileDirItems	pointer
,	O
int	O
fileDirIndex	int
,	O
char	O
*	O
*	pointer
cutCopyItems	pointer
,	O
int	O
*	int
cutCopyItemCount	pointer
)	O
{	O
if	O
(	O
*	O
cutCopyItemCount	pointer
==	O
0	O
)	O
return	O
;	O
int	O
j	int
,	O
k	O
;	O
char	O
*	O
str	pointer
=	O
(	O
char	O
*	O
)	O
malloc	pointer
(	O
fileDirItems	O
[	O
fileDirIndex	int
]	O
->	O
namelen	pointer
+	O
cwdlen	int
+	O
2	int
)	O
;	O
if	O
(	O
!	pointer
str	pointer
)	O
{	O
msgBoxH	O
(	O
"Insufficient memory"	pointer
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	int
}	O
strcpy	O
(	O
str	pointer
,	O
cwd	pointer
)	O
;	O
strcat	O
(	O
str	pointer
,	O
"/"	pointer
)	O
;	O
strcat	O
(	O
str	pointer
,	O
fileDirItems	pointer
[	O
fileDirIndex	int
]	O
->	O
name	pointer
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
*	int
cutCopyItemCount	O
;	O
j	pointer
++	O
)	O
{	O
if	O
(	O
strcmp	pointer
(	O
str	pointer
,	O
cutCopyItems	pointer
[	O
j	int
]	O
)	O
==	O
0	int
)	O
{	O
free	O
(	O
cutCopyItems	pointer
[	O
j	int
]	O
)	O
;	O
for	O
(	O
k	int
=	O
j	int
;	O
k	int
<	O
(	int
*	int
cutCopyItemCount	pointer
)	O
-	O
1	int
;	O
k	O
++	O
)	O
{	O
cutCopyItems	O
[	O
k	int
]	O
=	O
cutCopyItems	O
[	O
k	int
+	O
1	int
]	O
;	O
}	pointer
(	O
*	O
cutCopyItemCount	pointer
)	O
--	O
;	O
cutCopyItems	O
[	O
k	int
]	O
=	O
NULL	O
;	O
break	O
;	O
}	O
}	O
free	O
(	O
str	pointer
)	O
;	O
}	O
void	O
removeCutFile	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	O
(	O
files	O
,	O
i	int
,	O
cutFiles	int
,	O
&	int
numCutFiles	pointer
)	O
;	O
}	O
void	O
removeCopyFile	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	O
(	O
files	O
,	O
i	int
,	O
copyFiles	int
,	O
&	int
numCopyFiles	pointer
)	O
;	O
}	O
void	O
removeCutDir	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	O
(	O
dirs	O
,	O
i	int
,	O
cutDirs	int
,	O
&	int
numCutDirs	pointer
)	O
;	O
}	O
void	O
removeCopyDir	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	O
(	O
dirs	O
,	O
i	int
,	O
copyDirs	int
,	O
&	int
numCopyDirs	pointer
)	O
;	O
}	O
void	O
__saveCutCopyItem	function
(	O
struct	O
dirstruct	struct
*	O
*	pointer
fileDirItems	pointer
,	O
int	O
fileDirIndex	int
,	O
char	O
*	O
*	pointer
cutCopyItems	pointer
,	O
int	O
*	int
cutCopyItemCount	pointer
)	O
{	O
int	O
k	int
=	O
*	int
cutCopyItemCount	pointer
;	O
if	O
(	O
k	O
>=	O
MAX_CUT_COPY	int
)	O
{	O
msgBoxH	O
(	O
"Unable to perform operation.\nClipboard is full."	pointer
,	O
OK	pointer
,	O
ERROR	int
)	O
;	O
return	O
;	int
}	O
if	O
(	O
cutCopyItems	O
[	O
k	int
]	O
)	O
free	O
(	O
cutCopyItems	pointer
[	O
k	int
]	O
)	O
;	O
char	O
*	O
s	pointer
=	O
(	O
char	O
*	O
)	O
malloc	pointer
(	O
fileDirItems	O
[	O
fileDirIndex	int
]	O
->	O
namelen	pointer
+	O
cwdlen	int
+	O
2	int
)	O
;	O
if	O
(	O
!	pointer
s	pointer
)	O
{	O
msgBoxH	O
(	O
"Insufficient memory"	pointer
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	int
}	O
strcpy	O
(	O
s	pointer
,	O
cwd	pointer
)	O
;	O
strcat	O
(	O
s	pointer
,	O
"/"	pointer
)	O
;	O
strcat	O
(	O
s	pointer
,	O
fileDirItems	pointer
[	O
fileDirIndex	int
]	O
->	O
name	pointer
)	O
;	O
cutCopyItems	O
[	O
k	int
]	O
=	O
s	O
;	O
(	pointer
*	O
cutCopyItemCount	pointer
)	O
++	O
;	O
}	O
void	O
saveCutFile	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	O
(	O
files	O
,	O
i	int
,	O
cutFiles	int
,	O
&	int
numCutFiles	pointer
)	O
;	O
}	O
void	O
saveCopyFile	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	O
(	O
files	O
,	O
i	int
,	O
copyFiles	int
,	O
&	int
numCopyFiles	pointer
)	O
;	O
}	O
void	O
saveCutDir	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	O
(	O
dirs	O
,	O
i	int
,	O
cutDirs	int
,	O
&	int
numCutDirs	pointer
)	O
;	O
}	O
void	O
saveCopyDir	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	O
(	O
dirs	O
,	O
i	int
,	O
copyDirs	int
,	O
&	int
numCopyDirs	pointer
)	O
;	O
}	O