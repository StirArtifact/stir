struct	O
z_stream_s	O
*	O
compress_init	O
(	O
void	O
)	O
{	O
static	O
struct	O
z_stream_s	struct
strm	O
;	O
strm	O
.	O
zalloc	pointer
=	O
NULL	pointer
;	O
strm	O
.	O
zfree	pointer
=	O
NULL	pointer
;	O
strm	pointer
.	O
opaque	pointer
=	O
NULL	int
;	O
deflateInit	pointer
(	O
&	pointer
strm	pointer
,	O
Z_DEFAULT_COMPRESSION	O
)	O
;	O
return	O
&	int
strm	pointer
;	O
}	O
int	O
compress_data	function
(	O
struct	O
z_stream_s	struct
*	O
strm	pointer
,	O
const	O
char	O
*	O
*	pointer
next_in	pointer
,	O
int	O
*	O
avail_in	pointer
,	O
char	O
*	O
*	pointer
next_out	pointer
,	O
int	O
*	O
avail_out	pointer
)	O
{	O
int	O
out_size	int
=	O
0	O
;	O
int	O
x	int
;	O
strm	O
->	O
next_in	pointer
=	O
(	O
Bytef	O
*	O
)	O
(	pointer
*	O
next_in	pointer
)	O
;	O
strm	O
->	O
avail_in	pointer
=	O
*	O
avail_in	pointer
;	O
strm	O
->	O
next_out	pointer
=	O
(	pointer
Bytef	O
*	O
)	O
(	pointer
*	O
next_out	pointer
)	O
;	O
strm	O
->	O
avail_out	pointer
=	O
*	O
avail_out	pointer
;	O
x	O
=	O
deflate	O
(	O
strm	pointer
,	O
Z_NO_FLUSH	O
)	O
;	O
if	O
(	O
x	O
!=	O
Z_OK	O
)	O
return	O
-	O
1	int
;	O
out_size	O
=	O
*	O
avail_out	O
-	O
strm	O
->	O
avail_out	pointer
;	O
*	O
next_in	pointer
=	O
(	O
char	O
*	O
)	O
(	pointer
strm	O
->	O
next_in	pointer
)	O
;	O
*	O
avail_in	pointer
=	O
strm	O
->	O
avail_in	pointer
;	O
*	O
next_out	pointer
=	O
(	pointer
char	O
*	O
)	O
(	pointer
strm	O
->	O
next_out	pointer
)	O
;	O
*	O
avail_out	pointer
=	O
strm	O
->	O
avail_out	pointer
;	O
return	O
out_size	int
;	O
}	O
int	O
compress_finish	function
(	O
struct	O
z_stream_s	struct
*	O
strm	pointer
,	O
char	O
*	O
*	pointer
next_out	pointer
,	O
int	O
*	O
avail_out	pointer
,	O
int	O
*	O
out_size	pointer
)	O
{	O
int	O
x	int
;	O
strm	O
->	O
avail_in	pointer
=	O
0	O
;	O
strm	O
->	O
next_out	pointer
=	O
(	pointer
Bytef	O
*	O
)	O
(	O
*	O
next_out	pointer
)	O
;	O
strm	O
->	O
avail_out	pointer
=	O
*	O
avail_out	pointer
;	O
x	O
=	O
deflate	O
(	O
strm	pointer
,	O
Z_FINISH	O
)	O
;	O
*	O
out_size	pointer
=	O
*	O
avail_out	pointer
-	O
strm	O
->	O
avail_out	pointer
;	O
*	O
next_out	pointer
=	O
(	O
char	O
*	O
)	O
(	pointer
strm	O
->	O
next_out	pointer
)	O
;	O
*	O
avail_out	pointer
=	O
strm	O
->	O
avail_out	pointer
;	O
if	O
(	O
x	O
==	O
Z_STREAM_END	O
)	O
{	O
deflateEnd	O
(	O
strm	O
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
strm	O
->	O
avail_out	pointer
!=	O
0	O
)	O
return	O
-	O
1	int
;	O
return	O
1	O
;	O
}	O