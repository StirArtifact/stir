struct	O
get_names_state	struct
{	O
char	O
*	O
name	pointer
;	O
size_t	O
name_len	long
;	O
size_t	O
name_alloced	long
;	O
int	O
name_partial	int
;	O
size_t	O
buf_len	long
;	O
char	O
buf	O
[	O
7000	int
]	O
;	O
}	O
;	O
error_t	O
ftp_conn_start_get_names	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
int	O
*	int
fd	pointer
,	O
void	O
*	O
*	pointer
state	pointer
)	O
{	O
error_t	O
err	int
;	O
struct	O
get_names_state	struct
*	O
s	pointer
=	O
malloc	O
(	O
sizeof	O
(	O
struct	O
get_names_state	struct
)	O
)	O
;	O
if	O
(	O
!	pointer
s	pointer
)	O
return	O
ENOMEM	O
;	O
err	O
=	O
ftp_conn_start_list	O
(	O
conn	pointer
,	O
name	pointer
,	O
fd	pointer
)	O
;	O
if	O
(	O
err	pointer
)	O
free	O
(	O
s	pointer
)	O
;	O
else	O
{	O
s	O
->	O
name	pointer
=	O
0	O
;	O
s	pointer
->	O
name_len	pointer
=	O
s	O
->	O
name_alloced	pointer
=	O
0	int
;	O
s	pointer
->	O
name_partial	pointer
=	O
0	int
;	O
s	pointer
->	O
buf_len	pointer
=	O
0	int
;	O
*	pointer
state	pointer
=	O
s	O
;	O
}	O
return	O
err	O
;	O
}	O
error_t	O
ftp_conn_cont_get_names	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
int	O
fd	O
,	O
void	O
*	O
state	pointer
,	O
ftp_conn_add_name_fun_t	O
add_name	O
,	O
void	O
*	O
hook	pointer
)	O
{	O
char	O
*	O
p	pointer
,	O
*	O
nl	pointer
;	O
ssize_t	O
rd	O
;	O
size_t	O
name_len	long
;	O
error_t	O
err	int
=	O
0	int
;	O
struct	O
get_names_state	struct
*	O
s	pointer
=	O
state	O
;	O
int	O
(	int
*	int
icheck	pointer
)	O
(	O
struct	O
ftp_conn	struct
*	O
conn	O
)	O
=	O
conn	O
->	O
hooks	pointer
->	O
interrupt_check	pointer
;	O
rd	pointer
=	O
read	pointer
(	O
fd	pointer
,	O
s	pointer
->	O
buf	pointer
+	O
s	int
->	O
buf_len	pointer
,	O
sizeof	pointer
(	O
s	pointer
->	O
buf	pointer
)	O
-	O
s	int
->	O
buf_len	pointer
)	O
;	O
if	O
(	O
rd	pointer
<	O
0	O
)	O
{	O
err	O
=	O
errno	function
;	O
goto	O
finished	O
;	O
}	O
if	O
(	O
icheck	O
&&	O
(	pointer
*	O
icheck	pointer
)	O
(	O
conn	O
)	O
)	O
{	O
err	O
=	O
EINTR	int
;	O
goto	O
finished	O
;	O
}	O
if	O
(	O
rd	O
==	O
0	O
)	O
if	O
(	O
s	pointer
->	O
buf_len	pointer
==	O
0	O
)	O
goto	O
finished	O
;	O
else	pointer
nl	O
=	O
s	pointer
->	O
buf	pointer
+	O
s	int
->	O
buf_len	pointer
;	O
else	pointer
{	O
nl	O
=	O
memchr	pointer
(	O
s	pointer
->	O
buf	pointer
+	O
s	int
->	O
buf_len	pointer
,	O
'\n'	pointer
,	O
rd	pointer
)	O
;	O
s	O
->	O
buf_len	pointer
+=	O
rd	int
;	O
}	pointer
if	O
(	O
!	pointer
nl	pointer
&&	O
s	pointer
->	O
buf_len	pointer
<	O
sizeof	int
(	O
s	pointer
->	O
buf	pointer
)	O
)	O
return	O
EAGAIN	O
;	O
p	O
=	O
s	O
->	O
buf	pointer
;	O
do	O
{	O
name_len	O
=	O
(	O
nl	O
?	O
nl	O
-	O
p	int
:	O
s	O
->	O
buf	pointer
+	O
s	int
->	O
buf_len	pointer
-	O
p	int
)	O
;	O
if	O
(	O
name_len	pointer
>	O
0	O
&&	O
p	pointer
[	O
name_len	int
-	O
1	int
]	O
==	O
'\r'	O
)	O
name_len	O
--	O
;	O
if	O
(	O
name_len	pointer
>	O
0	O
)	O
{	O
size_t	O
old_len	O
=	O
s	pointer
->	O
name_len	pointer
;	O
size_t	pointer
total_len	long
=	O
old_len	pointer
+	O
name_len	int
+	O
1	int
;	O
if	pointer
(	O
total_len	long
>	O
s	int
->	O
name_alloced	long
)	O
{	O
char	O
*	O
new_name	pointer
=	O
realloc	O
(	O
s	pointer
->	O
name	pointer
,	O
total_len	pointer
)	O
;	O
if	O
(	O
!	pointer
new_name	O
)	O
goto	O
enomem	O
;	O
s	pointer
->	O
name	pointer
=	O
new_name	O
;	O
s	pointer
->	O
name_alloced	pointer
=	O
total_len	int
;	O
}	pointer
strncpy	O
(	O
s	pointer
->	O
name	pointer
+	O
old_len	int
,	O
p	pointer
,	O
name_len	pointer
)	O
;	O
s	O
->	O
name	pointer
[	O
old_len	int
+	O
name_len	int
]	O
=	O
'\0'	pointer
;	O
s	pointer
->	O
name_len	pointer
=	O
total_len	int
-	O
1	int
;	O
}	O
if	O
(	O
nl	pointer
)	O
{	O
char	O
*	O
name	pointer
=	O
s	O
->	O
name	long
;	O
if	O
(	O
conn	pointer
->	O
syshooks	pointer
.	O
basename	pointer
)	O
{	O
err	pointer
=	O
(	int
*	O
conn	O
->	O
syshooks	pointer
.	O
basename	pointer
)	O
(	O
conn	pointer
,	O
&	pointer
name	pointer
)	O
;	O
if	O
(	O
err	pointer
)	O
goto	O
finished	O
;	O
}	O
err	O
=	O
(	function
*	O
add_name	pointer
)	O
(	O
name	O
,	O
hook	O
)	O
;	O
if	O
(	O
name	O
<	O
s	O
->	O
name	pointer
||	O
name	O
>	O
s	int
->	O
name	pointer
+	O
s	int
->	O
name_len	pointer
)	O
free	O
(	O
name	pointer
)	O
;	O
if	O
(	O
err	pointer
)	O
goto	O
finished	O
;	O
s	O
->	O
name_len	pointer
=	O
0	O
;	O
s	pointer
->	O
name_partial	pointer
=	O
0	int
;	O
p	pointer
=	O
nl	O
+	O
1	int
;	O
nl	pointer
=	O
memchr	pointer
(	O
p	pointer
,	O
'\n'	pointer
,	O
s	pointer
->	O
buf	pointer
+	O
s	int
->	O
buf_len	pointer
-	O
p	int
)	O
;	O
}	O
else	O
{	O
s	O
->	O
name_partial	pointer
=	O
1	int
;	O
p	pointer
+=	O
name_len	int
;	O
}	pointer
}	O
while	O
(	O
nl	O
)	O
;	O
s	O
->	O
buf_len	pointer
-=	O
(	int
p	pointer
-	O
s	int
->	O
buf	pointer
)	O
;	O
if	O
(	O
s	pointer
->	O
buf_len	pointer
>	O
0	int
)	O
memmove	O
(	O
s	pointer
->	O
buf	pointer
,	O
p	pointer
,	O
s	pointer
->	O
buf_len	pointer
)	O
;	O
return	O
EAGAIN	int
;	O
enomem	O
:	O
err	O
=	O
ENOMEM	function
;	O
finished	O
:	O
if	O
(	O
s	pointer
->	O
name	pointer
)	O
free	O
(	O
s	pointer
->	O
name	pointer
)	O
;	O
free	O
(	O
s	pointer
)	O
;	O
close	O
(	O
fd	pointer
)	O
;	O
if	O
(	O
err	pointer
&&	O
rd	O
>	O
0	O
)	O
ftp_conn_abort	O
(	O
conn	pointer
)	O
;	O
else	O
if	O
(	O
err	pointer
)	O
ftp_conn_finish_transfer	O
(	O
conn	pointer
)	O
;	O
else	O
err	O
=	O
ftp_conn_finish_transfer	function
(	O
conn	pointer
)	O
;	O
return	O
err	int
;	O
}	O
error_t	O
ftp_conn_get_names	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
ftp_conn_add_name_fun_t	O
add_name	O
,	O
void	O
*	O
hook	pointer
)	O
{	O
int	O
fd	int
;	O
void	O
*	O
state	pointer
;	O
error_t	O
err	int
=	O
ftp_conn_start_get_names	int
(	O
conn	O
,	O
name	pointer
,	O
&	pointer
fd	pointer
,	O
&	O
state	pointer
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
do	O
err	O
=	O
ftp_conn_cont_get_names	function
(	O
conn	pointer
,	O
fd	O
,	O
state	pointer
,	O
add_name	int
,	O
hook	int
)	O
;	O
while	O
(	O
err	int
==	O
EAGAIN	int
)	O
;	O
return	O
err	int
;	O
}	O