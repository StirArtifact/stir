const	O
Plotter	O
_pl_r_default_plotter	O
=	O
{	O
_pl_r_initialize	pointer
,	O
_pl_r_terminate	O
,	O
_pl_r_begin_page	int
,	O
_pl_r_erase_page	int
,	O
_pl_r_end_page	int
,	O
_pl_g_push_state	int
,	O
_pl_g_pop_state	int
,	O
_pl_r_paint_path	int
,	O
_pl_r_paint_paths	int
,	O
_pl_r_path_is_flushable	int
,	O
_pl_r_maybe_prepaint_segments	int
,	O
_pl_g_paint_marker	int
,	O
_pl_r_paint_point	int
,	O
_pl_g_paint_text_string_with_escapes	int
,	O
_pl_g_paint_text_string	int
,	O
_pl_g_get_text_width	int
,	O
_pl_g_retrieve_font	int
,	O
_pl_g_flush_output	O
,	O
_pl_g_warning	int
,	O
_pl_g_error	int
,	O
}	O
;	O
void	O
_pl_r_initialize	function
(	O
S___	O
(	O
Plotter	pointer
*	O
_plotter	pointer
)	O
)	O
{	O
_pl_g_initialize	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	O
->	O
data	pointer
->	O
type	int
=	O
PL_REGIS	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
output_model	int
=	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES_IN_REAL_TIME	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_wide_lines	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_dash_array	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_solid_fill	int
=	O
1	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_odd_winding_fill	int
=	O
1	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_nonzero_winding_fill	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_settable_bg	int
=	O
1	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_escaped_string_support	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_ps_fonts	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_pcl_fonts	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_stick_fonts	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_extra_stick_fonts	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
have_other_fonts	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
default_font_type	int
=	O
PL_F_HERSHEY	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
pcl_before_ps	int
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_horizontal_justification	int
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_vertical_justification	int
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
issue_font_warning	int
=	O
true	int
;	O
_plotter	int
->	O
data	pointer
->	O
max_unfilled_path_length	int
=	O
PL_MAX_UNFILLED_PATH_LENGTH	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	int
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_arc_scaling	int
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	int
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_quad_scaling	int
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_cubic_scaling	int
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_box_scaling	int
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_circle_scaling	int
=	O
AS_UNIFORM	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellipse_scaling	int
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
display_model_type	int
=	O
(	int
int	O
)	O
DISP_MODEL_VIRTUAL	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
=	O
(	int
int	O
)	O
DISP_DEVICE_COORS_INTEGER_NON_LIBXMI	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
flipped_y	int
=	O
true	int
;	O
_plotter	int
->	O
data	pointer
->	O
imin	int
=	O
144	int
;	O
_plotter	int
->	O
data	pointer
->	O
imax	int
=	O
623	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
jmin	int
=	O
479	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
jmax	int
=	O
0	int
;	O
_plotter	int
->	O
data	pointer
->	O
xmin	int
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	int
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymin	int
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymax	int
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	int
=	O
(	int
plPageData	O
*	O
)	O
NULL	O
;	O
_compute_ndc_to_device_map	int
(	O
_plotter	pointer
->	O
data	pointer
)	O
;	O
_plotter	O
->	O
regis_pos	pointer
.	O
x	int
=	O
0	int
;	O
_plotter	int
->	O
regis_pos	pointer
.	O
y	int
=	O
0	int
;	O
_plotter	int
->	O
regis_position_is_unknown	pointer
=	O
true	int
;	O
_plotter	int
->	O
regis_line_type	pointer
=	O
PL_L_SOLID	int
;	O
_plotter	pointer
->	O
regis_line_type_is_unknown	pointer
=	O
true	int
;	O
_plotter	int
->	O
regis_fgcolor	pointer
=	O
0	int
;	O
_plotter	int
->	O
regis_bgcolor	pointer
=	O
0	int
;	O
_plotter	int
->	O
regis_fgcolor_is_unknown	pointer
=	O
true	int
;	O
_plotter	int
->	O
regis_bgcolor_is_unknown	pointer
=	O
true	int
;	O
}	int
void	O
_pl_r_terminate	function
(	O
S___	O
(	O
Plotter	pointer
*	O
_plotter	pointer
)	O
)	O
{	O
_pl_g_terminate	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
}	O