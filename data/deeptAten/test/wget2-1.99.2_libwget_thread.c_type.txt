struct	O
wget_thread_st	struct
{	O
gl_thread_t	O
tid	O
;	O
}	O
;	O
struct	O
wget_thread_mutex_st	struct
{	O
gl_lock_t	O
mutex	O
;	O
}	O
;	O
struct	O
wget_thread_cond_st	struct
{	O
gl_cond_t	O
cond	O
;	O
}	O
;	O
int	O
wget_thread_mutex_init	function
(	O
wget_thread_mutex	O
*	O
mutex	pointer
)	O
{	O
*	O
mutex	pointer
=	O
wget_malloc	O
(	O
sizeof	O
(	O
struct	O
wget_thread_mutex_st	struct
)	O
)	O
;	O
if	O
(	O
!	O
*	pointer
mutex	pointer
)	O
return	O
WGET_E_MEMORY	O
;	O
return	O
glthread_lock_init	int
(	O
&	pointer
(	pointer
(	O
*	O
mutex	pointer
)	O
->	O
mutex	pointer
)	O
)	O
;	O
}	O
int	O
wget_thread_mutex_destroy	function
(	O
wget_thread_mutex	O
*	O
mutex	pointer
)	O
{	O
int	O
rc	int
=	O
glthread_lock_destroy	int
(	O
&	O
(	pointer
*	O
mutex	pointer
)	O
->	O
mutex	pointer
)	O
;	O
xfree	O
(	O
*	pointer
mutex	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
void	O
wget_thread_mutex_lock	function
(	O
wget_thread_mutex	O
mutex	O
)	O
{	O
glthread_lock_lock	O
(	O
&	pointer
mutex	pointer
->	O
mutex	pointer
)	O
;	O
}	O
void	O
wget_thread_mutex_unlock	function
(	O
wget_thread_mutex	O
mutex	O
)	O
{	O
glthread_lock_unlock	O
(	O
&	pointer
mutex	pointer
->	O
mutex	pointer
)	O
;	O
}	O
int	O
wget_thread_cond_init	function
(	O
wget_thread_cond	O
*	O
cond	pointer
)	O
{	O
*	O
cond	pointer
=	O
wget_malloc	O
(	O
sizeof	O
(	O
struct	O
wget_thread_cond_st	struct
)	O
)	O
;	O
if	O
(	O
!	O
*	pointer
cond	pointer
)	O
return	O
WGET_E_MEMORY	O
;	O
return	O
glthread_cond_init	int
(	O
&	pointer
(	pointer
(	O
*	O
cond	pointer
)	O
->	O
cond	pointer
)	O
)	O
;	O
}	O
int	O
wget_thread_cond_destroy	function
(	O
wget_thread_cond	O
*	O
cond	pointer
)	O
{	O
int	O
rc	int
=	O
glthread_cond_destroy	int
(	O
&	O
(	pointer
*	O
cond	pointer
)	O
->	O
cond	pointer
)	O
;	O
xfree	O
(	O
*	pointer
cond	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
wget_thread_cond_signal	function
(	O
wget_thread_cond	O
cond	O
)	O
{	O
return	O
glthread_cond_broadcast	int
(	O
&	pointer
cond	pointer
->	O
cond	pointer
)	O
;	O
}	O
int	O
wget_thread_cond_wait	function
(	O
wget_thread_cond	O
cond	O
,	O
wget_thread_mutex	O
mutex	O
,	O
long	O
long	O
ms	O
)	O
{	O
if	O
(	O
ms	O
<=	O
0	int
)	O
return	O
glthread_cond_wait	int
(	O
&	pointer
cond	pointer
->	O
cond	pointer
,	O
&	O
mutex	pointer
->	O
mutex	pointer
)	O
;	O
struct	O
timespec	struct
ts	O
;	O
gettime	O
(	O
&	O
ts	pointer
)	O
;	O
ms	O
+=	O
ts	int
.	O
tv_sec	pointer
*	O
1000LL	O
+	O
ts	int
.	O
tv_nsec	pointer
/	O
1000000	int
;	O
ts	O
.	O
tv_sec	pointer
=	O
ms	O
/	O
1000	int
;	O
ts	int
.	O
tv_nsec	pointer
=	O
(	int
ms	O
%	O
1000	O
)	O
*	O
1000000	pointer
;	O
return	O
glthread_cond_timedwait	int
(	O
&	pointer
cond	pointer
->	O
cond	pointer
,	O
&	O
mutex	pointer
->	O
mutex	pointer
,	O
&	O
ts	pointer
)	O
;	O
}	O
int	O
wget_thread_start	function
(	O
wget_thread	O
*	O
thread	pointer
,	O
void	O
*	O
(	pointer
*	O
start_routine	pointer
)	O
(	O
void	O
*	O
)	pointer
,	O
void	O
*	O
arg	O
,	O
WGET_GCC_UNUSED	O
int	O
flags	int
)	O
{	O
if	O
(	O
wget_thread_support	O
(	O
)	pointer
)	O
{	O
*	O
thread	pointer
=	O
wget_malloc	O
(	O
sizeof	O
(	O
struct	O
wget_thread_st	struct
)	O
)	O
;	O
if	O
(	O
!	O
*	pointer
thread	pointer
)	O
return	O
WGET_E_MEMORY	O
;	O
return	O
glthread_create	int
(	O
&	pointer
(	pointer
(	O
*	O
thread	O
)	O
->	O
tid	pointer
)	O
,	O
start_routine	O
,	O
arg	O
)	O
;	O
}	O
*	O
thread	function
=	O
NULL	O
;	O
start_routine	O
(	O
arg	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
wget_thread_cancel	function
(	O
WGET_GCC_UNUSED	O
wget_thread	O
thread	O
)	O
{	O
return	O
0	int
;	O
}	O
int	O
wget_thread_kill	function
(	O
WGET_GCC_UNUSED	O
wget_thread	O
thread	O
,	O
WGET_GCC_UNUSED	O
int	O
sig	int
)	O
{	O
return	O
0	int
;	O
}	O
int	O
wget_thread_join	function
(	O
wget_thread	O
*	O
thread	pointer
)	O
{	O
if	O
(	O
thread	int
&&	O
*	pointer
thread	pointer
&&	O
(	O
*	O
thread	pointer
)	O
->	O
tid	pointer
)	O
{	O
int	O
rc	int
=	O
glthread_join	int
(	O
(	O
*	O
thread	pointer
)	O
->	O
tid	pointer
,	O
NULL	O
)	O
;	O
xfree	O
(	O
*	pointer
thread	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
if	O
(	O
wget_thread_support	O
(	O
)	pointer
)	O
{	O
errno	O
=	O
ESRCH	int
;	O
return	O
-	int
1	int
;	O
}	O
return	O
0	int
;	O
}	O
wget_thread_id	O
wget_thread_self	O
(	O
void	O
)	O
{	O
return	O
gl_thread_self	int
(	O
)	pointer
;	O
}	O
bool	O
wget_thread_support	function
(	O
void	O
)	O
{	O
return	O
true	int
;	O
}	O