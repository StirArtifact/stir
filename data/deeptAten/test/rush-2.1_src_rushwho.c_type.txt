char	O
*	O
base_name	O
=	O
RUSH_DB	O
;	O
struct	O
rush_wtmp	struct
*	O
wtmp	pointer
=	O
NULL	O
;	O
int	O
display_header	int
=	O
1	O
;	O
char	O
*	O
format	pointer
;	O
void	O
xalloc_die	O
(	O
)	O
{	O
error	O
(	O
1	O
,	O
0	O
,	O
_	O
(	O
"not enough memory"	pointer
)	O
)	O
;	O
abort	O
(	O
)	O
;	O
}	O
char	O
*	O
default_format	function
=	O
"(user 10 Login) "	O
"(rule 8 Rule) "	O
"(start-time 0 Start) "	O
"(duration 10 Time) "	O
"(pid 10 PID) "	O
"(command 28 Command)"	O
;	O
int	pointer
main	int
(	O
int	O
argc	O
,	O
char	O
*	O
*	pointer
argv	pointer
)	O
{	O
int	O
status	int
;	O
rushdb_format_t	O
form	O
;	O
rush_set_program_name	O
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
rush_i18n_init	O
(	O
)	pointer
;	O
format	O
=	O
getenv	O
(	O
"RUSHWHO_FORMAT"	pointer
)	O
;	O
if	O
(	O
!	O
format	O
)	O
format	O
=	O
default_format	int
;	O
get_options	O
(	O
argc	pointer
,	O
argv	pointer
)	O
;	O
argc	O
-=	O
optind	O
;	O
argv	O
+=	O
optind	int
;	O
if	O
(	O
argc	O
)	O
error	O
(	O
1	pointer
,	O
0	O
,	O
_	int
(	O
"extra arguments"	pointer
)	O
)	O
;	O
if	O
(	O
format	O
[	O
0	int
]	O
==	O
'@'	O
)	O
format	O
=	O
rush_read_format	int
(	O
format	pointer
+	O
1	int
)	O
;	O
form	O
=	O
rushdb_compile_format	O
(	O
format	pointer
)	O
;	O
if	O
(	O
!	O
form	O
)	O
error	O
(	O
1	pointer
,	O
0	O
,	O
_	int
(	O
"invalid format: %s"	pointer
)	O
,	O
rushdb_error_string	pointer
)	O
;	O
switch	O
(	O
rushdb_open	O
(	O
base_name	pointer
,	O
0	O
)	O
)	O
{	O
case	O
rushdb_result_ok	O
:	O
break	O
;	O
case	O
rushdb_result_eof	O
:	O
exit	O
(	O
0	int
)	O
;	O
case	O
rushdb_result_fail	O
:	O
error	O
(	O
1	O
,	O
errno	O
,	O
_	O
(	O
"cannot open database file %s"	pointer
)	O
,	O
base_name	pointer
)	O
;	O
}	O
if	O
(	O
display_header	O
)	O
rushdb_print_header	O
(	O
form	pointer
)	O
;	O
while	O
(	O
rush_utmp_read	O
(	O
RUSH_STATUS_MAP_BIT	pointer
(	O
RUSH_STATUS_INUSE	pointer
)	O
,	O
&	O
status	pointer
,	O
&	O
wtmp	pointer
)	O
==	O
rushdb_result_ok	O
)	O
{	O
rushdb_print	O
(	O
form	pointer
,	O
wtmp	O
,	O
1	O
)	O
;	O
free	O
(	O
wtmp	pointer
)	O
;	O
}	O
rushdb_close	O
(	O
)	O
;	O
exit	O
(	O
0	O
)	O
;	O
}	O