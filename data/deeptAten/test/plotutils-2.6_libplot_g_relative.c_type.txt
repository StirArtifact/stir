int	O
_API_farcrel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dxc	O
,	O
double	O
dyc	O
,	O
double	O
dx0	O
,	O
double	O
dy0	O
,	O
double	O
dx1	O
,	O
double	O
dy1	O
)	O
{	O
return	O
_API_farc	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	pointer
->	O
pos	pointer
.	O
x	double
+	O
dxc	int
,	O
_plotter	int
->	O
drawstate	pointer
->	O
pos	pointer
.	O
y	double
+	O
dyc	int
,	O
_plotter	int
->	O
drawstate	pointer
->	O
pos	pointer
.	O
x	int
+	O
dx0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	pointer
.	O
y	int
+	O
dy0	int
,	O
_plotter	int
->	O
drawstate	pointer
->	O
pos	pointer
.	O
x	int
+	O
dx1	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
y	int
+	O
dy1	int
)	O
;	O
}	O
int	O
_API_fbezier2rel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dxc	double
,	O
double	O
dyc	O
,	O
double	O
dx0	O
,	O
double	O
dy0	O
,	O
double	O
dx1	O
,	O
double	O
dy1	O
)	O
{	O
return	O
_API_fbezier2	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dxc	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	pointer
.	O
y	double
+	O
dyc	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	pointer
.	O
y	double
+	O
dy0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx1	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
y	double
+	O
dy1	int
)	O
;	O
}	O
int	O
_API_fbezier3rel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx0	double
,	O
double	O
dy0	O
,	O
double	O
dx1	O
,	O
double	O
dy1	double
,	O
double	O
dx2	double
,	O
double	O
dy2	double
,	O
double	O
dx3	double
,	O
double	O
dy3	double
)	O
{	O
return	O
_API_fbezier3	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx1	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy1	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx2	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy2	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx3	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy3	int
)	O
;	O
}	O
int	O
_API_fellarcrel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dxc	double
,	O
double	O
dyc	double
,	O
double	O
dx0	double
,	O
double	O
dy0	double
,	O
double	O
dx1	double
,	O
double	O
dy1	double
)	O
{	O
return	O
_API_fellarc	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dxc	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dyc	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx1	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy1	int
)	O
;	O
}	O
int	O
_API_fboxrel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx0	double
,	O
double	O
dy0	double
,	O
double	O
dx1	double
,	O
double	O
dy1	double
)	O
{	O
return	O
_API_fbox	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx1	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy1	int
)	O
;	O
}	O
int	O
_API_fcirclerel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx	double
,	O
double	O
dy	double
,	O
double	O
r	double
)	O
{	O
return	O
_API_fcircle	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx	int
,	O
_plotter	double
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy	int
,	O
r	int
)	O
;	O
}	O
int	O
_API_fellipserel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx	double
,	O
double	O
dy	double
,	O
double	O
rx	double
,	O
double	O
ry	double
,	O
double	O
angle	double
)	O
{	O
return	O
_API_fellipse	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy	int
,	O
rx	int
,	O
ry	int
,	O
angle	int
)	O
;	O
}	O
int	O
_API_fcontrel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx	double
,	O
double	O
dy	double
)	O
{	O
return	O
_API_fcont	int
(	O
R___	O
(	O
_plotter	O
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy	int
)	O
;	O
}	O
int	O
_API_flinerel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx0	double
,	O
double	O
dy0	double
,	O
double	O
dx1	double
,	O
double	O
dy1	double
)	O
{	O
return	O
_API_fline	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy0	int
,	O
_plotter	int
->	O
drawstate	double
->	O
pos	double
.	O
x	double
+	O
dx1	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy1	int
)	O
;	O
}	O
int	O
_API_fmarkerrel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx	double
,	O
double	O
dy	double
,	O
int	O
type	int
,	O
double	O
size	double
)	O
{	O
return	O
_API_fmarker	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy	int
,	O
type	int
,	O
size	int
)	O
;	O
}	O
int	O
_API_fmoverel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
return	O
_API_fmove	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
x	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
y	int
)	O
;	O
}	O
int	O
_API_fpointrel	function
(	O
R___	O
(	O
Plotter	O
*	O
_plotter	pointer
)	O
double	O
dx	double
,	O
double	O
dy	double
)	O
{	O
return	O
_API_fpoint	int
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	O
->	O
drawstate	double
->	O
pos	pointer
.	O
x	double
+	O
dx	int
,	O
_plotter	O
->	O
drawstate	double
->	O
pos	double
.	O
y	double
+	O
dy	int
)	O
;	O
}	O