struct	O
sbuf	O
{	O
struct	O
sbuf	struct
*	O
qnext	pointer
;	O
size_t	O
c	O
;	O
union	O
{	O
char	O
ab	O
[	O
4	O
]	O
;	O
char	O
bdummy	O
;	O
}	O
u	O
;	O
}	O
;	O
static	O
struct	O
sbuf	struct
*	O
qBlist	O
;	O
char	O
*	O
zbufalc	pointer
(	O
c	O
)	O
size_t	O
c	O
;	O
{	O
register	O
struct	O
sbuf	O
*	O
q	pointer
;	O
if	O
(	O
qBlist	O
==	O
NULL	O
)	O
{	O
q	O
=	O
(	O
struct	O
sbuf	O
*	O
)	O
xmalloc	pointer
(	O
sizeof	O
(	O
struct	pointer
sbuf	O
)	O
+	O
c	int
-	O
4	int
)	O
;	O
q	O
->	O
c	pointer
=	O
c	O
;	O
}	O
else	O
{	O
q	O
=	O
qBlist	O
;	O
qBlist	O
=	O
q	O
->	O
qnext	pointer
;	O
if	O
(	O
q	O
->	O
c	pointer
<	O
c	O
)	O
{	O
q	O
=	O
(	O
struct	O
sbuf	O
*	O
)	O
xrealloc	pointer
(	O
(	O
pointer	O
)	O
q	O
,	O
sizeof	O
(	O
struct	pointer
sbuf	O
)	O
+	O
c	int
-	O
4	int
)	O
;	O
q	O
->	O
c	pointer
=	O
c	O
;	O
}	O
}	O
return	O
q	O
->	O
u	pointer
.	O
ab	pointer
;	O
}	O
void	O
ubuffree	O
(	O
z	O
)	O
char	O
*	O
z	pointer
;	O
{	O
struct	O
sbuf	struct
*	O
q	pointer
;	O
int	O
ioff	O
;	O
if	O
(	O
z	O
==	O
NULL	O
)	O
return	O
;	O
ioff	O
=	O
offsetof	O
(	O
struct	pointer
sbuf	O
,	O
u	O
)	O
;	O
q	O
=	O
(	O
struct	O
sbuf	O
*	O
)	O
(	pointer
pointer	O
)	O
(	O
z	O
-	O
ioff	int
)	O
;	O
q	O
->	O
qnext	pointer
=	O
qBlist	O
;	O
qBlist	O
=	O
q	O
;	O
}	O
char	O
*	O
zbufcpy	O
(	O
z	O
)	O
const	O
char	O
*	O
z	pointer
;	O
{	O
size_t	O
csize	O
;	O
char	O
*	O
zret	pointer
;	O
if	O
(	O
z	O
==	O
NULL	O
)	O
return	O
NULL	O
;	O
csize	O
=	O
strlen	O
(	O
z	pointer
)	O
+	O
1	int
;	O
zret	O
=	O
zbufalc	O
(	O
csize	pointer
)	O
;	O
memcpy	O
(	O
zret	pointer
,	O
z	pointer
,	O
csize	O
)	O
;	O
return	O
zret	int
;	O
}	O