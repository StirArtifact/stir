static	O
void	O
__gmpz_cfdiv_r_2exp	O
(	O
REGPARM_3_1	O
(	O
mpz_ptr	O
,	O
mpz_srcptr	pointer
,	O
mp_bitcnt_t	pointer
,	O
int	int
)	int
)	O
REGPARM_ATTR	O
(	O
1	int
)	O
;	O
REGPARM_ATTR	O
(	O
1	int
)	O
static	O
void	O
cfdiv_r_2exp	O
(	O
mpz_ptr	O
w	O
,	O
mpz_srcptr	pointer
u	O
,	O
mp_bitcnt_t	pointer
cnt	O
,	O
int	O
dir	int
)	O
{	O
mp_size_t	O
usize	long
,	O
abs_usize	pointer
,	O
limb_cnt	pointer
,	O
i	long
;	O
mp_srcptr	O
up	pointer
;	O
mp_ptr	O
wp	pointer
;	O
mp_limb_t	pointer
high	long
;	O
usize	O
=	O
SIZ	pointer
(	O
u	pointer
)	O
;	O
if	O
(	O
usize	long
==	O
0	O
)	O
{	O
SIZ	O
(	O
w	pointer
)	O
=	O
0	int
;	O
return	O
;	int
}	O
limb_cnt	O
=	O
cnt	function
/	O
GMP_NUMB_BITS	O
;	O
cnt	long
%=	O
GMP_NUMB_BITS	O
;	O
abs_usize	long
=	O
ABS	int
(	O
usize	int
)	O
;	O
up	O
=	O
PTR	O
(	O
u	pointer
)	O
;	O
if	O
(	O
(	long
usize	O
^	O
dir	O
)	O
<	O
0	int
)	O
{	O
if	O
(	O
w	O
==	O
u	O
)	O
{	O
if	O
(	O
abs_usize	long
<=	O
limb_cnt	int
)	O
return	O
;	int
wp	O
=	O
PTR	O
(	O
w	pointer
)	O
;	O
}	O
else	O
{	O
i	O
=	O
MIN	O
(	O
abs_usize	int
,	O
limb_cnt	int
+	O
1	int
)	O
;	O
wp	O
=	O
MPZ_REALLOC	O
(	O
w	pointer
,	O
i	pointer
)	O
;	O
MPN_COPY	O
(	O
wp	pointer
,	O
up	pointer
,	O
i	pointer
)	O
;	O
if	O
(	O
abs_usize	long
<=	O
limb_cnt	int
)	O
{	O
SIZ	O
(	O
w	pointer
)	O
=	O
usize	int
;	O
return	O
;	int
}	O
}	O
}	O
else	O
{	O
if	O
(	O
abs_usize	O
<=	O
limb_cnt	int
)	O
goto	O
negate	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
limb_cnt	int
;	O
i	int
++	O
)	O
if	O
(	O
up	int
[	O
i	int
]	O
!=	O
0	O
)	O
goto	O
negate	O
;	O
if	pointer
(	O
(	O
up	O
[	O
limb_cnt	int
]	O
&	O
LOW_MASK	pointer
(	O
cnt	pointer
)	O
)	O
!=	O
0	O
)	O
goto	O
negate	O
;	O
SIZ	O
(	O
w	pointer
)	O
=	O
0	int
;	O
return	O
;	int
negate	O
:	O
wp	O
=	O
MPZ_REALLOC	O
(	O
w	pointer
,	O
limb_cnt	pointer
+	O
1	int
)	O
;	O
up	O
=	O
PTR	O
(	O
u	pointer
)	O
;	O
i	O
=	O
MIN	int
(	O
abs_usize	int
,	O
limb_cnt	int
+	O
1	int
)	O
;	O
mpn_com	O
(	O
wp	pointer
,	O
up	pointer
,	O
i	pointer
)	O
;	O
for	O
(	O
;	int
i	O
<=	O
limb_cnt	int
;	O
i	int
++	O
)	O
wp	O
[	O
i	int
]	O
=	O
GMP_NUMB_MAX	pointer
;	O
MPN_INCR_U	pointer
(	O
wp	pointer
,	O
limb_cnt	pointer
+	O
1	int
,	O
CNST_LIMB	int
(	O
1	int
)	O
)	O
;	O
usize	O
=	O
-	O
usize	int
;	O
}	O
high	O
=	O
wp	O
[	O
limb_cnt	int
]	O
;	O
high	O
&=	O
LOW_MASK	O
(	O
cnt	pointer
)	O
;	O
wp	O
[	O
limb_cnt	int
]	O
=	O
high	pointer
;	O
while	O
(	O
high	O
==	O
0	O
)	O
{	O
limb_cnt	O
--	O
;	O
if	O
(	O
limb_cnt	O
<	O
0	int
)	O
{	O
SIZ	O
(	O
w	pointer
)	O
=	O
0	int
;	O
return	O
;	int
}	O
high	O
=	O
wp	O
[	O
limb_cnt	int
]	O
;	O
}	O
limb_cnt	O
++	O
;	O
SIZ	O
(	O
w	pointer
)	O
=	O
(	int
usize	O
>=	O
0	O
?	O
limb_cnt	int
:	O
-	O
limb_cnt	int
)	O
;	O
}	O
void	O
mpz_cdiv_r_2exp	function
(	O
mpz_ptr	O
w	O
,	O
mpz_srcptr	pointer
u	pointer
,	O
mp_bitcnt_t	pointer
cnt	O
)	O
{	O
cfdiv_r_2exp	O
(	O
w	pointer
,	O
u	pointer
,	O
cnt	pointer
,	O
1	int
)	O
;	O
}	O
void	O
mpz_fdiv_r_2exp	function
(	O
mpz_ptr	O
w	O
,	O
mpz_srcptr	pointer
u	pointer
,	O
mp_bitcnt_t	pointer
cnt	O
)	O
{	O
cfdiv_r_2exp	O
(	O
w	pointer
,	O
u	pointer
,	O
cnt	pointer
,	O
-	int
1	int
)	O
;	O
}	O