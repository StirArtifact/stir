double	O
gsl_acosh	O
(	O
const	O
double	O
x	O
)	O
{	O
if	O
(	O
x	O
>	O
1.0	int
/	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
return	O
log	int
(	O
x	pointer
)	O
+	O
M_LN2	int
;	O
}	O
else	O
if	O
(	O
x	O
>	O
2	O
)	O
{	O
return	O
log	int
(	O
2	pointer
*	O
x	O
-	O
1	int
/	O
(	O
sqrt	O
(	O
x	pointer
*	O
x	O
-	O
1	int
)	O
+	O
x	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
x	O
>	O
1	O
)	O
{	O
double	O
t	double
=	O
x	O
-	O
1	int
;	O
return	O
log1p	int
(	O
t	O
+	O
sqrt	int
(	O
2	pointer
*	O
t	O
+	O
t	int
*	O
t	O
)	O
)	O
;	O
}	O
else	O
if	O
(	O
x	O
==	O
1	O
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
GSL_NAN	int
;	O
}	O
}	O
double	O
gsl_asinh	function
(	O
const	O
double	O
x	O
)	O
{	O
double	O
a	double
=	O
fabs	O
(	O
x	pointer
)	O
;	O
double	O
s	double
=	O
(	O
x	O
<	O
0	O
)	O
?	O
-	O
1	int
:	O
1	O
;	O
if	O
(	O
a	O
>	O
1	int
/	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
return	O
s	int
*	O
(	O
log	O
(	O
a	pointer
)	O
+	O
M_LN2	int
)	O
;	O
}	O
else	O
if	O
(	O
a	O
>	O
2	int
)	O
{	O
return	O
s	int
*	O
log	O
(	O
2	pointer
*	O
a	O
+	O
1	int
/	O
(	int
a	O
+	O
sqrt	int
(	O
a	pointer
*	O
a	O
+	O
1	int
)	O
)	O
)	O
;	O
}	O
else	O
if	O
(	O
a	O
>	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
double	O
a2	double
=	O
a	O
*	O
a	O
;	O
return	O
s	int
*	O
log1p	O
(	O
a	O
+	O
a2	int
/	O
(	O
1	O
+	O
sqrt	int
(	O
1	pointer
+	O
a2	int
)	O
)	O
)	O
;	O
}	O
else	O
{	O
return	O
x	int
;	O
}	O
}	O
double	O
gsl_atanh	function
(	O
const	O
double	O
x	double
)	O
{	O
double	O
a	double
=	O
fabs	O
(	O
x	pointer
)	O
;	O
double	O
s	double
=	O
(	O
x	O
<	O
0	O
)	O
?	O
-	O
1	int
:	O
1	O
;	O
if	O
(	O
a	O
>	O
1	int
)	O
{	O
return	O
GSL_NAN	int
;	O
}	O
else	O
if	O
(	O
a	O
==	O
1	O
)	O
{	O
return	O
(	int
x	O
<	O
0	O
)	O
?	O
GSL_NEGINF	O
:	O
GSL_POSINF	O
;	O
}	O
else	O
if	O
(	O
a	O
>=	O
0.5	int
)	O
{	O
return	O
s	int
*	O
0.5	O
*	O
log1p	O
(	O
2	pointer
*	O
a	O
/	O
(	O
1	O
-	O
a	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
a	O
>	O
GSL_DBL_EPSILON	int
)	O
{	O
return	O
s	int
*	O
0.5	O
*	O
log1p	O
(	O
2	pointer
*	O
a	O
+	O
2	int
*	O
a	int
*	O
a	O
/	O
(	O
1	O
-	O
a	int
)	O
)	O
;	O
}	O
else	O
{	O
return	O
x	int
;	O
}	O
}	O