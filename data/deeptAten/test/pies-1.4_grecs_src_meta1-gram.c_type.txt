int	O
grecs_meta1_lex	function
(	O
void	O
)	O
;	O
int	O
grecs_meta1_error	function
(	O
char	O
const	O
*	O
s	pointer
)	O
;	O
static	O
struct	O
grecs_node	struct
*	O
parse_tree	pointer
;	O
extern	O
int	O
grecs_meta1__flex_debug	int
;	O
extern	O
void	O
grecs_meta1_set_in	function
(	O
FILE	struct
*	O
)	O
;	O
extern	O
int	O
grecs_meta1_debug	int
;	O
enum	O
grecs_meta1_tokentype	enum
{	O
META1_STRING	int
=	O
258	int
,	O
META1_IDENT	int
=	O
259	int
}	O
;	O
typedef	O
union	O
YYSTYPE	union
{	O
char	O
*	O
string	pointer
;	O
grecs_value_t	struct
svalue	struct
,	O
*	O
pvalue	pointer
;	O
struct	O
grecs_list	struct
*	O
list	pointer
;	O
struct	O
{	O
struct	O
grecs_node	struct
*	O
head	pointer
,	O
*	O
tail	pointer
;	O
}	O
node_list	struct
;	O
struct	O
grecs_node	struct
*	O
node	pointer
;	O
}	O
YYSTYPE	union
;	O
extern	O
YYSTYPE	union
grecs_meta1_lval	union
;	O
extern	O
YYLTYPE	O
grecs_meta1_lloc	struct
;	O
int	O
grecs_meta1_parse	function
(	O
void	O
)	O
;	O
typedef	O
unsigned	O
char	O
grecs_meta1_type_uint8	char
;	O
typedef	O
signed	O
char	O
grecs_meta1_type_int8	char
;	O
typedef	O
unsigned	O
short	O
int	O
grecs_meta1_type_uint16	short
;	O
typedef	O
short	O
int	O
grecs_meta1_type_int16	short
;	O
void	O
*	O
malloc	function
(	O
YYSIZE_T	O
)	O
;	O
void	O
free	function
(	O
void	O
*	O
)	O
;	O
union	O
grecs_meta1_alloc	union
{	O
grecs_meta1_type_int16	short
grecs_meta1_ss_alloc	short
;	O
YYSTYPE	union
grecs_meta1_vs_alloc	union
;	O
YYLTYPE	O
grecs_meta1_ls_alloc	struct
;	O
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_translate	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
8	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
9	int
,	O
2	int
,	O
5	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
6	int
,	O
2	int
,	O
7	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_prhs	array
[	O
]	O
=	O
{	O
0	int
,	O
0	int
,	O
3	int
,	O
5	int
,	O
6	int
,	O
8	int
,	O
10	int
,	O
13	int
,	O
15	int
,	O
17	int
,	O
22	int
,	O
29	int
,	O
30	int
,	O
32	int
,	O
34	int
,	O
36	int
,	O
38	int
,	O
40	int
,	O
42	int
,	O
44	int
,	O
47	int
,	O
51	int
,	O
56	int
,	O
58	int
,	O
62	int
,	O
63	int
}	O
;	O
static	O
const	O
grecs_meta1_type_int8	char
grecs_meta1_rhs	array
[	O
]	O
=	O
{	O
11	int
,	O
0	int
,	O
-	O
1	int
,	O
12	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
13	int
,	O
-	O
1	int
,	O
14	int
,	O
-	O
1	int
,	O
13	int
,	O
14	int
,	O
-	O
1	int
,	O
15	int
,	O
-	O
1	int
,	O
16	int
,	O
-	O
1	int
,	O
4	int
,	O
5	int
,	O
18	int
,	O
24	int
,	O
-	O
1	int
,	O
4	int
,	O
17	int
,	O
6	int
,	O
13	int
,	O
7	int
,	O
24	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
4	int
,	O
-	O
1	int
,	O
19	int
,	O
-	O
1	int
,	O
22	int
,	O
-	O
1	int
,	O
4	int
,	O
-	O
1	int
,	O
20	int
,	O
-	O
1	int
,	O
21	int
,	O
-	O
1	int
,	O
3	int
,	O
-	O
1	int
,	O
21	int
,	O
3	int
,	O
-	O
1	int
,	O
6	int
,	O
23	int
,	O
7	int
,	O
-	O
1	int
,	O
6	int
,	O
23	int
,	O
8	int
,	O
7	int
,	O
-	O
1	int
,	O
18	int
,	O
-	O
1	int
,	O
23	int
,	O
8	int
,	O
18	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
9	int
,	O
-	O
1	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_rline	array
[	O
]	O
=	O
{	O
0	int
,	O
53	int
,	O
53	int
,	O
63	int
,	O
66	int
,	O
72	int
,	O
76	int
,	O
82	int
,	O
83	int
,	O
86	int
,	O
96	int
,	O
108	int
,	O
111	int
,	O
119	int
,	O
126	int
,	O
135	int
,	O
136	int
,	O
139	int
,	O
153	int
,	O
158	int
,	O
165	int
,	O
169	int
,	O
175	int
,	O
180	int
,	O
187	int
,	O
188	int
}	O
;	O
static	O
const	O
char	O
*	O
const	O
grecs_meta1_tname	array
[	O
]	O
=	O
{	O
"$end"	pointer
,	O
"error"	pointer
,	O
"$undefined"	pointer
,	O
"META1_STRING"	pointer
,	O
"META1_IDENT"	pointer
,	O
"'='"	pointer
,	O
"'{'"	pointer
,	O
"'}'"	pointer
,	O
"','"	pointer
,	O
"';'"	pointer
,	O
"$accept"	pointer
,	O
"input"	pointer
,	O
"maybe_stmtlist"	pointer
,	O
"stmtlist"	pointer
,	O
"stmt"	pointer
,	O
"simple"	pointer
,	O
"block"	pointer
,	O
"tag"	pointer
,	O
"value"	pointer
,	O
"string"	pointer
,	O
"slist"	pointer
,	O
"slist0"	pointer
,	O
"list"	pointer
,	O
"values"	pointer
,	O
"opt_sc"	pointer
,	O
YY_NULL	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_r1	array
[	O
]	O
=	O
{	O
0	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
12	int
,	O
13	int
,	O
13	int
,	O
14	int
,	O
14	int
,	O
15	int
,	O
16	int
,	O
17	int
,	O
17	int
,	O
18	int
,	O
18	int
,	O
19	int
,	O
19	int
,	O
20	int
,	O
21	int
,	O
21	int
,	O
22	int
,	O
22	int
,	O
23	int
,	O
23	int
,	O
24	int
,	O
24	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_r2	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
1	int
,	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
1	int
,	O
4	int
,	O
6	int
,	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
1	int
,	O
3	int
,	O
0	int
,	O
1	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_defact	array
[	O
]	O
=	O
{	O
3	int
,	O
11	int
,	O
0	int
,	O
2	int
,	O
4	int
,	O
5	int
,	O
7	int
,	O
8	int
,	O
12	int
,	O
0	int
,	O
0	int
,	O
1	int
,	O
6	int
,	O
18	int
,	O
15	int
,	O
0	int
,	O
24	int
,	O
13	int
,	O
16	int
,	O
17	int
,	O
14	int
,	O
0	int
,	O
22	int
,	O
0	int
,	O
25	int
,	O
9	int
,	O
19	int
,	O
0	int
,	O
20	int
,	O
0	int
,	O
24	int
,	O
21	int
,	O
23	int
,	O
10	int
}	O
;	O
static	O
const	O
grecs_meta1_type_int8	char
grecs_meta1_defgoto	array
[	O
]	O
=	O
{	O
-	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
10	int
,	O
16	int
,	O
17	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
23	int
,	O
25	int
}	O
;	O
static	O
const	O
grecs_meta1_type_int8	char
grecs_meta1_pact	array
[	O
]	O
=	O
{	O
0	int
,	O
9	int
,	O
11	int
,	O
-	O
15	int
,	O
0	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
4	int
,	O
13	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
4	int
,	O
7	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
17	int
,	O
-	O
15	int
,	O
0	int
,	O
-	O
15	int
,	O
10	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
5	int
,	O
-	O
15	int
,	O
-	O
1	int
,	O
7	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
}	O
;	O
static	O
const	O
grecs_meta1_type_int8	char
grecs_meta1_pgoto	array
[	O
]	O
=	O
{	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
1	int
,	O
-	O
4	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
14	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
15	int
,	O
-	O
9	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_table	array
[	O
]	O
=	O
{	O
12	int
,	O
22	int
,	O
13	int
,	O
14	int
,	O
1	int
,	O
15	int
,	O
31	int
,	O
13	int
,	O
14	int
,	O
1	int
,	O
15	int
,	O
11	int
,	O
30	int
,	O
8	int
,	O
9	int
,	O
32	int
,	O
24	int
,	O
28	int
,	O
29	int
,	O
21	int
,	O
26	int
,	O
33	int
,	O
27	int
,	O
12	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_check	array
[	O
]	O
=	O
{	O
4	int
,	O
15	int
,	O
3	int
,	O
4	int
,	O
4	int
,	O
6	int
,	O
7	int
,	O
3	int
,	O
4	int
,	O
4	int
,	O
6	int
,	O
0	int
,	O
7	int
,	O
4	int
,	O
5	int
,	O
29	int
,	O
9	int
,	O
7	int
,	O
8	int
,	O
6	int
,	O
3	int
,	O
30	int
,	O
21	int
,	O
27	int
}	O
;	O
static	O
const	O
grecs_meta1_type_uint8	char
grecs_meta1_stos	array
[	O
]	O
=	O
{	O
0	int
,	O
4	int
,	O
11	int
,	O
12	int
,	O
13	int
,	O
14	int
,	O
15	int
,	O
16	int
,	O
4	int
,	O
5	int
,	O
17	int
,	O
0	int
,	O
14	int
,	O
3	int
,	O
4	int
,	O
6	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
21	int
,	O
22	int
,	O
6	int
,	O
18	int
,	O
23	int
,	O
9	int
,	O
24	int
,	O
3	int
,	O
13	int
,	O
7	int
,	O
8	int
,	O
7	int
,	O
7	int
,	O
18	int
,	O
24	int
}	O
;	O
static	O
void	O
grecs_meta1__symbol_value_print	function
(	O
FILE	struct
*	O
grecs_meta1_output	pointer
,	O
int	O
grecs_meta1_type	int
,	O
YYSTYPE	union
const	O
*	O
const	O
grecs_meta1_valuep	pointer
,	O
YYLTYPE	O
const	O
*	O
const	O
grecs_meta1_locationp	pointer
)	O
{	O
FILE	struct
*	O
grecs_meta1_o	pointer
=	O
grecs_meta1_output	pointer
;	O
YYUSE	O
(	O
grecs_meta1_o	pointer
)	O
;	O
if	O
(	O
!	O
grecs_meta1_valuep	pointer
)	O
return	O
;	O
YYUSE	O
(	O
grecs_meta1_locationp	pointer
)	O
;	O
YYUSE	O
(	O
grecs_meta1_output	pointer
)	O
;	O
switch	O
(	O
grecs_meta1_type	int
)	O
{	O
default	O
:	O
break	O
;	O
}	O
}	O
static	O
void	O
grecs_meta1__symbol_print	function
(	O
FILE	struct
*	O
grecs_meta1_output	pointer
,	O
int	O
grecs_meta1_type	int
,	O
YYSTYPE	union
const	O
*	O
const	O
grecs_meta1_valuep	pointer
,	O
YYLTYPE	O
const	O
*	O
const	O
grecs_meta1_locationp	pointer
)	O
{	O
if	O
(	O
grecs_meta1_type	int
<	O
YYNTOKENS	int
)	O
YYFPRINTF	O
(	O
grecs_meta1_output	pointer
,	O
"token %s ("	pointer
,	O
grecs_meta1_tname	array
[	O
grecs_meta1_type	int
]	O
)	O
;	O
else	O
YYFPRINTF	O
(	O
grecs_meta1_output	pointer
,	O
"nterm %s ("	pointer
,	O
grecs_meta1_tname	array
[	O
grecs_meta1_type	int
]	O
)	O
;	O
YY_LOCATION_PRINT	O
(	O
grecs_meta1_output	pointer
,	O
*	O
grecs_meta1_locationp	pointer
)	O
;	O
YYFPRINTF	O
(	O
grecs_meta1_output	pointer
,	O
": "	pointer
)	O
;	O
grecs_meta1__symbol_value_print	function
(	O
grecs_meta1_output	pointer
,	O
grecs_meta1_type	int
,	O
grecs_meta1_valuep	pointer
,	O
grecs_meta1_locationp	pointer
)	O
;	O
YYFPRINTF	O
(	O
grecs_meta1_output	pointer
,	O
")"	pointer
)	O
;	O
}	O
static	O
void	O
grecs_meta1__stack_print	function
(	O
grecs_meta1_type_int16	short
*	O
grecs_meta1_bottom	pointer
,	O
grecs_meta1_type_int16	short
*	O
grecs_meta1_top	pointer
)	O
{	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"Stack now"	pointer
)	O
;	O
for	O
(	O
;	O
grecs_meta1_bottom	pointer
<=	O
grecs_meta1_top	pointer
;	O
grecs_meta1_bottom	pointer
++	O
)	O
{	O
int	O
grecs_meta1_bot	int
=	O
*	O
grecs_meta1_bottom	pointer
;	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
" %d"	pointer
,	O
grecs_meta1_bot	int
)	O
;	O
}	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
static	O
void	O
grecs_meta1__reduce_print	function
(	O
YYSTYPE	union
*	O
grecs_meta1_vsp	pointer
,	O
YYLTYPE	O
*	O
grecs_meta1_lsp	pointer
,	O
int	O
grecs_meta1_rule	int
)	O
{	O
int	O
grecs_meta1_nrhs	int
=	O
grecs_meta1_r2	array
[	O
grecs_meta1_rule	int
]	O
;	O
int	O
grecs_meta1_i	int
;	O
unsigned	O
long	O
int	O
grecs_meta1_lno	long
=	O
grecs_meta1_rline	array
[	O
grecs_meta1_rule	int
]	O
;	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"Reducing stack by rule %d (line %lu):\n"	pointer
,	O
grecs_meta1_rule	int
-	O
1	int
,	O
grecs_meta1_lno	long
)	O
;	O
for	O
(	O
grecs_meta1_i	int
=	O
0	int
;	O
grecs_meta1_i	int
<	O
grecs_meta1_nrhs	int
;	O
grecs_meta1_i	int
++	O
)	O
{	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"   $%d = "	pointer
,	O
grecs_meta1_i	int
+	O
1	int
)	O
;	O
grecs_meta1__symbol_print	function
(	O
stderr	pointer
,	O
grecs_meta1_rhs	array
[	O
grecs_meta1_prhs	array
[	O
grecs_meta1_rule	int
]	O
+	O
grecs_meta1_i	int
]	O
,	O
&	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
grecs_meta1_i	int
+	O
1	int
)	O
-	O
(	O
grecs_meta1_nrhs	int
)	O
]	O
)	O
,	O
&	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
grecs_meta1_i	int
+	O
1	int
)	O
-	O
(	O
grecs_meta1_nrhs	int
)	O
]	O
)	O
)	O
;	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
}	O
int	O
grecs_meta1_debug	int
;	O
static	O
YYSIZE_T	O
grecs_meta1_tnamerr	function
(	O
char	O
*	O
grecs_meta1_res	pointer
,	O
const	O
char	O
*	O
grecs_meta1_str	pointer
)	O
{	O
if	O
(	O
*	O
grecs_meta1_str	pointer
==	O
'"'	O
)	O
{	O
YYSIZE_T	O
grecs_meta1_n	long
=	O
0	int
;	O
char	O
const	O
*	O
grecs_meta1_p	pointer
=	O
grecs_meta1_str	pointer
;	O
for	O
(	O
;	O
;	O
)	O
switch	O
(	O
*	O
++	O
grecs_meta1_p	pointer
)	O
{	O
case	O
'\''	O
:	O
case	O
','	O
:	O
goto	O
do_not_strip_quotes	O
;	O
case	O
'\\'	O
:	O
if	O
(	O
*	O
++	O
grecs_meta1_p	pointer
!=	O
'\\'	O
)	O
goto	O
do_not_strip_quotes	O
;	O
default	O
:	O
if	O
(	O
grecs_meta1_res	pointer
)	O
grecs_meta1_res	pointer
[	O
grecs_meta1_n	long
]	O
=	O
*	O
grecs_meta1_p	pointer
;	O
grecs_meta1_n	long
++	O
;	O
break	O
;	O
case	O
'"'	O
:	O
if	O
(	O
grecs_meta1_res	pointer
)	O
grecs_meta1_res	pointer
[	O
grecs_meta1_n	long
]	O
=	O
'\0'	O
;	O
return	O
grecs_meta1_n	long
;	O
}	O
do_not_strip_quotes	O
:	O
;	O
}	O
if	O
(	O
!	O
grecs_meta1_res	pointer
)	O
return	O
grecs_meta1_strlen	O
(	O
grecs_meta1_str	pointer
)	O
;	O
return	O
grecs_meta1_stpcpy	O
(	O
grecs_meta1_res	pointer
,	O
grecs_meta1_str	pointer
)	O
-	O
grecs_meta1_res	pointer
;	O
}	O
static	O
int	O
grecs_meta1_syntax_error	function
(	O
YYSIZE_T	O
*	O
grecs_meta1_msg_alloc	pointer
,	O
char	O
*	O
*	O
grecs_meta1_msg	pointer
,	O
grecs_meta1_type_int16	short
*	O
grecs_meta1_ssp	pointer
,	O
int	O
grecs_meta1_token	int
)	O
{	O
YYSIZE_T	O
grecs_meta1_size0	long
=	O
grecs_meta1_tnamerr	function
(	O
YY_NULL	int
,	O
grecs_meta1_tname	array
[	O
grecs_meta1_token	int
]	O
)	O
;	O
YYSIZE_T	O
grecs_meta1_size	long
=	O
grecs_meta1_size0	long
;	O
enum	O
{	O
YYERROR_VERBOSE_ARGS_MAXIMUM	int
=	O
5	int
}	O
;	O
const	O
char	O
*	O
grecs_meta1_format	pointer
=	O
YY_NULL	int
;	O
char	O
const	O
*	O
grecs_meta1_arg	array
[	O
YYERROR_VERBOSE_ARGS_MAXIMUM	int
]	O
;	O
int	O
grecs_meta1_count	int
=	O
0	int
;	O
if	O
(	O
grecs_meta1_token	int
!=	O
YYEMPTY	O
)	O
{	O
int	O
grecs_meta1_n	long
=	O
grecs_meta1_pact	array
[	O
*	O
grecs_meta1_ssp	pointer
]	O
;	O
grecs_meta1_arg	array
[	O
grecs_meta1_count	int
++	O
]	O
=	O
grecs_meta1_tname	array
[	O
grecs_meta1_token	int
]	O
;	O
if	O
(	O
!	O
grecs_meta1_pact_value_is_default	O
(	O
grecs_meta1_n	long
)	O
)	O
{	O
int	O
grecs_meta1_xbegin	int
=	O
grecs_meta1_n	long
<	O
0	int
?	O
-	O
grecs_meta1_n	long
:	O
0	int
;	O
int	O
grecs_meta1_checklim	int
=	O
YYLAST	int
-	O
grecs_meta1_n	long
+	O
1	int
;	O
int	O
grecs_meta1_xend	int
=	O
grecs_meta1_checklim	int
<	O
YYNTOKENS	int
?	O
grecs_meta1_checklim	int
:	O
YYNTOKENS	int
;	O
int	O
grecs_meta1_x	int
;	O
for	O
(	O
grecs_meta1_x	int
=	O
grecs_meta1_xbegin	int
;	O
grecs_meta1_x	int
<	O
grecs_meta1_xend	int
;	O
++	O
grecs_meta1_x	int
)	O
if	O
(	O
grecs_meta1_check	array
[	O
grecs_meta1_x	int
+	O
grecs_meta1_n	long
]	O
==	O
grecs_meta1_x	int
&&	O
grecs_meta1_x	int
!=	O
YYTERROR	int
&&	O
!	O
grecs_meta1_table_value_is_error	O
(	O
grecs_meta1_table	array
[	O
grecs_meta1_x	int
+	O
grecs_meta1_n	long
]	O
)	O
)	O
{	O
if	O
(	O
grecs_meta1_count	int
==	O
YYERROR_VERBOSE_ARGS_MAXIMUM	int
)	O
{	O
grecs_meta1_count	int
=	O
1	int
;	O
grecs_meta1_size	long
=	O
grecs_meta1_size0	long
;	O
break	O
;	O
}	O
grecs_meta1_arg	array
[	O
grecs_meta1_count	int
++	O
]	O
=	O
grecs_meta1_tname	array
[	O
grecs_meta1_x	int
]	O
;	O
{	O
YYSIZE_T	O
grecs_meta1_size1	long
=	O
grecs_meta1_size	long
+	O
grecs_meta1_tnamerr	function
(	O
YY_NULL	int
,	O
grecs_meta1_tname	array
[	O
grecs_meta1_x	int
]	O
)	O
;	O
if	O
(	O
!	O
(	O
grecs_meta1_size	long
<=	O
grecs_meta1_size1	long
&&	O
grecs_meta1_size1	long
<=	O
YYSTACK_ALLOC_MAXIMUM	O
)	O
)	O
return	O
2	int
;	O
grecs_meta1_size	long
=	O
grecs_meta1_size1	long
;	O
}	O
}	O
}	O
}	O
switch	O
(	O
grecs_meta1_count	int
)	O
{	O
YYCASE_	O
(	O
0	int
,	O
YY_	O
(	O
"syntax error"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
1	int
,	O
YY_	O
(	O
"syntax error, unexpected %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
2	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
3	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s or %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
4	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s or %s or %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
5	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s or %s or %s or %s"	pointer
)	O
)	O
;	O
}	O
{	O
YYSIZE_T	O
grecs_meta1_size1	long
=	O
grecs_meta1_size	long
+	O
grecs_meta1_strlen	O
(	O
grecs_meta1_format	pointer
)	O
;	O
if	O
(	O
!	O
(	O
grecs_meta1_size	long
<=	O
grecs_meta1_size1	long
&&	O
grecs_meta1_size1	long
<=	O
YYSTACK_ALLOC_MAXIMUM	O
)	O
)	O
return	O
2	int
;	O
grecs_meta1_size	long
=	O
grecs_meta1_size1	long
;	O
}	O
if	O
(	O
*	O
grecs_meta1_msg_alloc	pointer
<	O
grecs_meta1_size	long
)	O
{	O
*	O
grecs_meta1_msg_alloc	pointer
=	O
2	int
*	O
grecs_meta1_size	long
;	O
if	O
(	O
!	O
(	O
grecs_meta1_size	long
<=	O
*	O
grecs_meta1_msg_alloc	pointer
&&	O
*	O
grecs_meta1_msg_alloc	pointer
<=	O
YYSTACK_ALLOC_MAXIMUM	O
)	O
)	O
*	O
grecs_meta1_msg_alloc	pointer
=	O
YYSTACK_ALLOC_MAXIMUM	O
;	O
return	O
1	int
;	O
}	O
{	O
char	O
*	O
grecs_meta1_p	pointer
=	O
*	O
grecs_meta1_msg	pointer
;	O
int	O
grecs_meta1_i	int
=	O
0	int
;	O
while	O
(	O
(	O
*	O
grecs_meta1_p	pointer
=	O
*	O
grecs_meta1_format	pointer
)	O
!=	O
'\0'	O
)	O
if	O
(	O
*	O
grecs_meta1_p	pointer
==	O
'%'	O
&&	O
grecs_meta1_format	pointer
[	O
1	int
]	O
==	O
's'	O
&&	O
grecs_meta1_i	int
<	O
grecs_meta1_count	int
)	O
{	O
grecs_meta1_p	pointer
+=	O
grecs_meta1_tnamerr	function
(	O
grecs_meta1_p	pointer
,	O
grecs_meta1_arg	array
[	O
grecs_meta1_i	int
++	O
]	O
)	O
;	O
grecs_meta1_format	pointer
+=	O
2	int
;	O
}	O
else	O
{	O
grecs_meta1_p	pointer
++	O
;	O
grecs_meta1_format	pointer
++	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
grecs_meta1_destruct	function
(	O
const	O
char	O
*	O
grecs_meta1_msg	pointer
,	O
int	O
grecs_meta1_type	int
,	O
YYSTYPE	union
*	O
grecs_meta1_valuep	pointer
,	O
YYLTYPE	O
*	O
grecs_meta1_locationp	pointer
)	O
{	O
YYUSE	O
(	O
grecs_meta1_valuep	pointer
)	O
;	O
YYUSE	O
(	O
grecs_meta1_locationp	pointer
)	O
;	O
if	O
(	O
!	O
grecs_meta1_msg	pointer
)	O
grecs_meta1_msg	pointer
=	O
"Deleting"	pointer
;	O
YY_SYMBOL_PRINT	O
(	O
grecs_meta1_msg	pointer
,	O
grecs_meta1_type	int
,	O
grecs_meta1_valuep	pointer
,	O
grecs_meta1_locationp	pointer
)	O
;	O
switch	O
(	O
grecs_meta1_type	int
)	O
{	O
default	O
:	O
break	O
;	O
}	O
}	O
int	O
grecs_meta1_char	int
;	O
YYSTYPE	union
grecs_meta1_lval	union
YY_INITIAL_VALUE	O
(	O
grecs_meta1_val_default	O
)	O
;	O
YYLTYPE	O
grecs_meta1_lloc	struct
;	O
int	O
grecs_meta1_nerrs	int
;	O
int	O
grecs_meta1_parse	function
(	O
void	O
)	O
{	O
int	O
grecs_meta1_state	int
;	O
int	O
grecs_meta1_errstatus	int
;	O
grecs_meta1_type_int16	short
grecs_meta1_ssa	array
[	O
YYINITDEPTH	int
]	O
;	O
grecs_meta1_type_int16	short
*	O
grecs_meta1_ss	pointer
;	O
grecs_meta1_type_int16	short
*	O
grecs_meta1_ssp	pointer
;	O
YYSTYPE	union
grecs_meta1_vsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYSTYPE	union
*	O
grecs_meta1_vs	pointer
;	O
YYSTYPE	union
*	O
grecs_meta1_vsp	pointer
;	O
YYLTYPE	O
grecs_meta1_lsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYLTYPE	O
*	O
grecs_meta1_ls	pointer
;	O
YYLTYPE	O
*	O
grecs_meta1_lsp	pointer
;	O
YYLTYPE	O
grecs_meta1_error_range	array
[	O
3	int
]	O
;	O
YYSIZE_T	O
grecs_meta1_stacksize	long
;	O
int	O
grecs_meta1_n	long
;	O
int	O
grecs_meta1_result	int
;	O
int	O
grecs_meta1_token	int
=	O
0	int
;	O
YYSTYPE	union
grecs_meta1_val	union
;	O
YYLTYPE	O
grecs_meta1_loc	struct
;	O
char	O
grecs_meta1_msgbuf	array
[	O
128	int
]	O
;	O
char	O
*	O
grecs_meta1_msg	pointer
=	O
grecs_meta1_msgbuf	array
;	O
YYSIZE_T	O
grecs_meta1_msg_alloc	pointer
=	O
sizeof	O
grecs_meta1_msgbuf	array
;	O
int	O
grecs_meta1_len	int
=	O
0	int
;	O
grecs_meta1_ssp	pointer
=	O
grecs_meta1_ss	pointer
=	O
grecs_meta1_ssa	array
;	O
grecs_meta1_vsp	pointer
=	O
grecs_meta1_vs	pointer
=	O
grecs_meta1_vsa	array
;	O
grecs_meta1_lsp	pointer
=	O
grecs_meta1_ls	pointer
=	O
grecs_meta1_lsa	array
;	O
grecs_meta1_stacksize	long
=	O
YYINITDEPTH	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Starting parse\n"	pointer
)	O
)	O
;	O
grecs_meta1_state	int
=	O
0	int
;	O
grecs_meta1_errstatus	int
=	O
0	int
;	O
grecs_meta1_nerrs	int
=	O
0	int
;	O
grecs_meta1_char	int
=	O
YYEMPTY	O
;	O
grecs_meta1_lsp	pointer
[	O
0	int
]	O
=	O
grecs_meta1_lloc	struct
;	O
goto	O
grecs_meta1_setstate	O
;	O
grecs_meta1_newstate	O
:	O
grecs_meta1_ssp	pointer
++	O
;	O
grecs_meta1_setstate	O
:	O
*	O
grecs_meta1_ssp	pointer
=	O
grecs_meta1_state	int
;	O
if	O
(	O
grecs_meta1_ss	pointer
+	O
grecs_meta1_stacksize	long
-	O
1	int
<=	O
grecs_meta1_ssp	pointer
)	O
{	O
YYSIZE_T	O
grecs_meta1_size	long
=	O
grecs_meta1_ssp	pointer
-	O
grecs_meta1_ss	pointer
+	O
1	int
;	O
if	O
(	O
YYMAXDEPTH	int
<=	O
grecs_meta1_stacksize	long
)	O
goto	O
grecs_meta1_exhaustedlab	O
;	O
grecs_meta1_stacksize	long
*=	O
2	int
;	O
if	O
(	O
YYMAXDEPTH	int
<	O
grecs_meta1_stacksize	long
)	O
grecs_meta1_stacksize	long
=	O
YYMAXDEPTH	int
;	O
{	O
grecs_meta1_type_int16	short
*	O
grecs_meta1_ss1	pointer
=	O
grecs_meta1_ss	pointer
;	O
union	O
grecs_meta1_alloc	union
*	O
grecs_meta1_ptr	pointer
=	O
(	O
union	O
grecs_meta1_alloc	union
*	O
)	O
YYSTACK_ALLOC	O
(	O
YYSTACK_BYTES	O
(	O
grecs_meta1_stacksize	long
)	O
)	O
;	O
if	O
(	O
!	O
grecs_meta1_ptr	pointer
)	O
goto	O
grecs_meta1_exhaustedlab	O
;	O
YYSTACK_RELOCATE	O
(	O
grecs_meta1_ss_alloc	short
,	O
grecs_meta1_ss	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
grecs_meta1_vs_alloc	union
,	O
grecs_meta1_vs	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
grecs_meta1_ls_alloc	struct
,	O
grecs_meta1_ls	pointer
)	O
;	O
if	O
(	O
grecs_meta1_ss1	pointer
!=	O
grecs_meta1_ssa	array
)	O
YYSTACK_FREE	O
(	O
grecs_meta1_ss1	pointer
)	O
;	O
}	O
grecs_meta1_ssp	pointer
=	O
grecs_meta1_ss	pointer
+	O
grecs_meta1_size	long
-	O
1	int
;	O
grecs_meta1_vsp	pointer
=	O
grecs_meta1_vs	pointer
+	O
grecs_meta1_size	long
-	O
1	int
;	O
grecs_meta1_lsp	pointer
=	O
grecs_meta1_ls	pointer
+	O
grecs_meta1_size	long
-	O
1	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Stack size increased to %lu\n"	pointer
,	O
(	O
unsigned	O
long	O
int	O
)	O
grecs_meta1_stacksize	long
)	O
)	O
;	O
if	O
(	O
grecs_meta1_ss	pointer
+	O
grecs_meta1_stacksize	long
-	O
1	int
<=	O
grecs_meta1_ssp	pointer
)	O
YYABORT	O
;	O
}	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Entering state %d\n"	pointer
,	O
grecs_meta1_state	int
)	O
)	O
;	O
if	O
(	O
grecs_meta1_state	int
==	O
YYFINAL	int
)	O
YYACCEPT	O
;	O
goto	O
grecs_meta1_backup	O
;	O
grecs_meta1_backup	O
:	O
grecs_meta1_n	long
=	O
grecs_meta1_pact	array
[	O
grecs_meta1_state	int
]	O
;	O
if	O
(	O
grecs_meta1_pact_value_is_default	O
(	O
grecs_meta1_n	long
)	O
)	O
goto	O
grecs_meta1_default	O
;	O
if	O
(	O
grecs_meta1_char	int
==	O
YYEMPTY	O
)	O
{	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Reading a token: "	pointer
)	O
)	O
;	O
grecs_meta1_char	int
=	O
YYLEX	O
;	O
}	O
if	O
(	O
grecs_meta1_char	int
<=	O
YYEOF	int
)	O
{	O
grecs_meta1_char	int
=	O
grecs_meta1_token	int
=	O
YYEOF	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Now at end of input.\n"	pointer
)	O
)	O
;	O
}	O
else	O
{	O
grecs_meta1_token	int
=	O
YYTRANSLATE	O
(	O
grecs_meta1_char	int
)	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Next token is"	pointer
,	O
grecs_meta1_token	int
,	O
&	O
grecs_meta1_lval	union
,	O
&	O
grecs_meta1_lloc	struct
)	O
;	O
}	O
grecs_meta1_n	long
+=	O
grecs_meta1_token	int
;	O
if	O
(	O
grecs_meta1_n	long
<	O
0	int
||	O
YYLAST	int
<	O
grecs_meta1_n	long
||	O
grecs_meta1_check	array
[	O
grecs_meta1_n	long
]	O
!=	O
grecs_meta1_token	int
)	O
goto	O
grecs_meta1_default	O
;	O
grecs_meta1_n	long
=	O
grecs_meta1_table	array
[	O
grecs_meta1_n	long
]	O
;	O
if	O
(	O
grecs_meta1_n	long
<=	O
0	int
)	O
{	O
if	O
(	O
grecs_meta1_table_value_is_error	O
(	O
grecs_meta1_n	long
)	O
)	O
goto	O
grecs_meta1_errlab	O
;	O
grecs_meta1_n	long
=	O
-	O
grecs_meta1_n	long
;	O
goto	O
grecs_meta1_reduce	O
;	O
}	O
if	O
(	O
grecs_meta1_errstatus	int
)	O
grecs_meta1_errstatus	int
--	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
grecs_meta1_token	int
,	O
&	O
grecs_meta1_lval	union
,	O
&	O
grecs_meta1_lloc	struct
)	O
;	O
grecs_meta1_char	int
=	O
YYEMPTY	O
;	O
grecs_meta1_state	int
=	O
grecs_meta1_n	long
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
grecs_meta1_vsp	pointer
=	O
grecs_meta1_lval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
*	O
++	O
grecs_meta1_lsp	pointer
=	O
grecs_meta1_lloc	struct
;	O
goto	O
grecs_meta1_newstate	O
;	O
grecs_meta1_default	O
:	O
grecs_meta1_n	long
=	O
grecs_meta1_defact	array
[	O
grecs_meta1_state	int
]	O
;	O
if	O
(	O
grecs_meta1_n	long
==	O
0	int
)	O
goto	O
grecs_meta1_errlab	O
;	O
goto	O
grecs_meta1_reduce	O
;	O
grecs_meta1_reduce	O
:	O
grecs_meta1_len	int
=	O
grecs_meta1_r2	array
[	O
grecs_meta1_n	long
]	O
;	O
grecs_meta1_val	union
=	O
grecs_meta1_vsp	pointer
[	O
1	int
-	O
grecs_meta1_len	int
]	O
;	O
YYLLOC_DEFAULT	O
(	O
grecs_meta1_loc	struct
,	O
(	O
grecs_meta1_lsp	pointer
-	O
grecs_meta1_len	int
)	O
,	O
grecs_meta1_len	int
)	O
;	O
YY_REDUCE_PRINT	O
(	O
grecs_meta1_n	long
)	O
;	O
switch	O
(	O
grecs_meta1_n	long
)	O
{	O
case	O
2	int
:	O
{	O
parse_tree	pointer
=	O
grecs_node_create	function
(	O
grecs_node_root	int
,	O
&	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
)	O
;	O
parse_tree	pointer
->	O
v	pointer
.	O
texttab	pointer
=	O
grecs_text_table	function
(	O
)	O
;	O
grecs_node_bind	function
(	O
parse_tree	pointer
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
node	pointer
)	O
,	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
3	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
=	O
NULL	O
;	O
}	O
break	O
;	O
case	O
4	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
node_list	struct
)	O
.	O
head	pointer
;	O
}	O
break	O
;	O
case	O
5	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
node_list	struct
)	O
.	O
head	pointer
=	O
(	O
grecs_meta1_val	union
.	O
node_list	struct
)	O
.	O
tail	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
node	pointer
)	O
;	O
}	O
break	O
;	O
case	O
6	int
:	O
{	O
grecs_node_bind	function
(	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
node_list	struct
)	O
.	O
tail	pointer
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
node	pointer
)	O
,	O
0	int
)	O
;	O
}	O
break	O
;	O
case	O
9	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
=	O
grecs_node_create_points	function
(	O
grecs_node_stmt	int
,	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
4	int
)	O
]	O
)	O
.	O
beg	struct
,	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
4	int
)	O
]	O
)	O
.	O
end	struct
)	O
;	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
->	O
ident	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
string	pointer
)	O
;	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
->	O
idloc	struct
=	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
4	int
)	O
]	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
->	O
v	pointer
.	O
value	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
pvalue	pointer
)	O
;	O
}	O
break	O
;	O
case	O
10	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
=	O
grecs_node_create_points	function
(	O
grecs_node_block	int
,	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
6	int
)	O
]	O
)	O
.	O
beg	struct
,	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
5	int
)	O
-	O
(	O
6	int
)	O
]	O
)	O
.	O
end	struct
)	O
;	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
->	O
ident	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
6	int
)	O
]	O
.	O
string	pointer
)	O
;	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
->	O
idloc	struct
=	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
6	int
)	O
]	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
->	O
v	pointer
.	O
value	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
6	int
)	O
]	O
.	O
pvalue	pointer
)	O
;	O
grecs_node_bind	function
(	O
(	O
grecs_meta1_val	union
.	O
node	pointer
)	O
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
4	int
)	O
-	O
(	O
6	int
)	O
]	O
.	O
node_list	struct
)	O
.	O
head	pointer
,	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
11	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
=	O
NULL	O
;	O
}	O
break	O
;	O
case	O
12	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
=	O
grecs_malloc	function
(	O
sizeof	O
(	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
[	O
0	int
]	O
)	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
type	int
=	O
GRECS_TYPE_STRING	int
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
v	pointer
.	O
string	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
;	O
}	O
break	O
;	O
case	O
13	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
=	O
grecs_malloc	function
(	O
sizeof	O
(	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
[	O
0	int
]	O
)	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
type	int
=	O
GRECS_TYPE_STRING	int
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
locus	struct
=	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
v	pointer
.	O
string	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
;	O
}	O
break	O
;	O
case	O
14	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
=	O
grecs_malloc	function
(	O
sizeof	O
(	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
[	O
0	int
]	O
)	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
type	int
=	O
GRECS_TYPE_LIST	int
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
locus	struct
=	O
(	O
grecs_meta1_lsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
pvalue	pointer
)	O
->	O
v	pointer
.	O
list	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
list	pointer
)	O
;	O
}	O
break	O
;	O
case	O
17	int
:	O
{	O
struct	O
grecs_list_entry	struct
*	O
ep	pointer
;	O
grecs_line_begin	function
(	O
)	O
;	O
for	O
(	O
ep	pointer
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
list	pointer
)	O
->	O
head	pointer
;	O
ep	pointer
;	O
ep	pointer
=	O
ep	pointer
->	O
next	pointer
)	O
{	O
grecs_line_add	O
(	O
ep	pointer
->	O
data	pointer
,	O
strlen	function
(	O
ep	pointer
->	O
data	pointer
)	O
)	O
;	O
free	function
(	O
ep	pointer
->	O
data	pointer
)	O
;	O
ep	pointer
->	O
data	pointer
=	O
NULL	O
;	O
}	O
(	O
grecs_meta1_val	union
.	O
string	pointer
)	O
=	O
grecs_line_finish	function
(	O
)	O
;	O
grecs_list_free	function
(	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
list	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
18	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
=	O
grecs_list_create	function
(	O
)	O
;	O
grecs_list_append	function
(	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
19	int
:	O
{	O
grecs_list_append	function
(	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
list	pointer
)	O
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
list	pointer
)	O
;	O
}	O
break	O
;	O
case	O
20	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
list	pointer
)	O
;	O
}	O
break	O
;	O
case	O
21	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
list	pointer
)	O
;	O
}	O
break	O
;	O
case	O
22	int
:	O
{	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
=	O
grecs_value_list_create	function
(	O
)	O
;	O
grecs_list_append	function
(	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
pvalue	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
23	int
:	O
{	O
grecs_list_append	function
(	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
list	pointer
)	O
,	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
pvalue	pointer
)	O
)	O
;	O
(	O
grecs_meta1_val	union
.	O
list	pointer
)	O
=	O
(	O
grecs_meta1_vsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
list	pointer
)	O
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
YY_SYMBOL_PRINT	O
(	O
"-> $$ ="	pointer
,	O
grecs_meta1_r1	array
[	O
grecs_meta1_n	long
]	O
,	O
&	O
grecs_meta1_val	union
,	O
&	O
grecs_meta1_loc	struct
)	O
;	O
YYPOPSTACK	O
(	O
grecs_meta1_len	int
)	O
;	O
grecs_meta1_len	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
grecs_meta1_ss	pointer
,	O
grecs_meta1_ssp	pointer
)	O
;	O
*	O
++	O
grecs_meta1_vsp	pointer
=	O
grecs_meta1_val	union
;	O
*	O
++	O
grecs_meta1_lsp	pointer
=	O
grecs_meta1_loc	struct
;	O
grecs_meta1_n	long
=	O
grecs_meta1_r1	array
[	O
grecs_meta1_n	long
]	O
;	O
grecs_meta1_state	int
=	O
grecs_meta1_pgoto	array
[	O
grecs_meta1_n	long
-	O
YYNTOKENS	int
]	O
+	O
*	O
grecs_meta1_ssp	pointer
;	O
if	O
(	O
0	int
<=	O
grecs_meta1_state	int
&&	O
grecs_meta1_state	int
<=	O
YYLAST	int
&&	O
grecs_meta1_check	array
[	O
grecs_meta1_state	int
]	O
==	O
*	O
grecs_meta1_ssp	pointer
)	O
grecs_meta1_state	int
=	O
grecs_meta1_table	array
[	O
grecs_meta1_state	int
]	O
;	O
else	O
grecs_meta1_state	int
=	O
grecs_meta1_defgoto	array
[	O
grecs_meta1_n	long
-	O
YYNTOKENS	int
]	O
;	O
goto	O
grecs_meta1_newstate	O
;	O
grecs_meta1_errlab	O
:	O
grecs_meta1_token	int
=	O
grecs_meta1_char	int
==	O
YYEMPTY	O
?	O
YYEMPTY	O
:	O
YYTRANSLATE	O
(	O
grecs_meta1_char	int
)	O
;	O
if	O
(	O
!	O
grecs_meta1_errstatus	int
)	O
{	O
++	O
grecs_meta1_nerrs	int
;	O
{	O
char	O
const	O
*	O
grecs_meta1_msgp	pointer
=	O
YY_	O
(	O
"syntax error"	pointer
)	O
;	O
int	O
grecs_meta1_syntax_error_status	int
;	O
grecs_meta1_syntax_error_status	int
=	O
YYSYNTAX_ERROR	O
;	O
if	O
(	O
grecs_meta1_syntax_error_status	int
==	O
0	int
)	O
grecs_meta1_msgp	pointer
=	O
grecs_meta1_msg	pointer
;	O
else	O
if	O
(	O
grecs_meta1_syntax_error_status	int
==	O
1	int
)	O
{	O
if	O
(	O
grecs_meta1_msg	pointer
!=	O
grecs_meta1_msgbuf	array
)	O
YYSTACK_FREE	O
(	O
grecs_meta1_msg	pointer
)	O
;	O
grecs_meta1_msg	pointer
=	O
(	O
char	O
*	O
)	O
YYSTACK_ALLOC	O
(	O
grecs_meta1_msg_alloc	pointer
)	O
;	O
if	O
(	O
!	O
grecs_meta1_msg	pointer
)	O
{	O
grecs_meta1_msg	pointer
=	O
grecs_meta1_msgbuf	array
;	O
grecs_meta1_msg_alloc	pointer
=	O
sizeof	O
grecs_meta1_msgbuf	array
;	O
grecs_meta1_syntax_error_status	int
=	O
2	int
;	O
}	O
else	O
{	O
grecs_meta1_syntax_error_status	int
=	O
YYSYNTAX_ERROR	O
;	O
grecs_meta1_msgp	pointer
=	O
grecs_meta1_msg	pointer
;	O
}	O
}	O
grecs_meta1_error	function
(	O
grecs_meta1_msgp	pointer
)	O
;	O
if	O
(	O
grecs_meta1_syntax_error_status	int
==	O
2	int
)	O
goto	O
grecs_meta1_exhaustedlab	O
;	O
}	O
}	O
grecs_meta1_error_range	array
[	O
1	int
]	O
=	O
grecs_meta1_lloc	struct
;	O
if	O
(	O
grecs_meta1_errstatus	int
==	O
3	int
)	O
{	O
if	O
(	O
grecs_meta1_char	int
<=	O
YYEOF	int
)	O
{	O
if	O
(	O
grecs_meta1_char	int
==	O
YYEOF	int
)	O
YYABORT	O
;	O
}	O
else	O
{	O
grecs_meta1_destruct	function
(	O
"Error: discarding"	pointer
,	O
grecs_meta1_token	int
,	O
&	O
grecs_meta1_lval	union
,	O
&	O
grecs_meta1_lloc	struct
)	O
;	O
grecs_meta1_char	int
=	O
YYEMPTY	O
;	O
}	O
}	O
goto	O
grecs_meta1_errlab1	O
;	O
grecs_meta1_errorlab	O
:	O
if	O
(	O
0	int
)	O
goto	O
grecs_meta1_errorlab	O
;	O
grecs_meta1_error_range	array
[	O
1	int
]	O
=	O
grecs_meta1_lsp	pointer
[	O
1	int
-	O
grecs_meta1_len	int
]	O
;	O
YYPOPSTACK	O
(	O
grecs_meta1_len	int
)	O
;	O
grecs_meta1_len	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
grecs_meta1_ss	pointer
,	O
grecs_meta1_ssp	pointer
)	O
;	O
grecs_meta1_state	int
=	O
*	O
grecs_meta1_ssp	pointer
;	O
goto	O
grecs_meta1_errlab1	O
;	O
grecs_meta1_errlab1	O
:	O
grecs_meta1_errstatus	int
=	O
3	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
grecs_meta1_n	long
=	O
grecs_meta1_pact	array
[	O
grecs_meta1_state	int
]	O
;	O
if	O
(	O
!	O
grecs_meta1_pact_value_is_default	O
(	O
grecs_meta1_n	long
)	O
)	O
{	O
grecs_meta1_n	long
+=	O
YYTERROR	int
;	O
if	O
(	O
0	int
<=	O
grecs_meta1_n	long
&&	O
grecs_meta1_n	long
<=	O
YYLAST	int
&&	O
grecs_meta1_check	array
[	O
grecs_meta1_n	long
]	O
==	O
YYTERROR	int
)	O
{	O
grecs_meta1_n	long
=	O
grecs_meta1_table	array
[	O
grecs_meta1_n	long
]	O
;	O
if	O
(	O
0	int
<	O
grecs_meta1_n	long
)	O
break	O
;	O
}	O
}	O
if	O
(	O
grecs_meta1_ssp	pointer
==	O
grecs_meta1_ss	pointer
)	O
YYABORT	O
;	O
grecs_meta1_error_range	array
[	O
1	int
]	O
=	O
*	O
grecs_meta1_lsp	pointer
;	O
grecs_meta1_destruct	function
(	O
"Error: popping"	pointer
,	O
grecs_meta1_stos	array
[	O
grecs_meta1_state	int
]	O
,	O
grecs_meta1_vsp	pointer
,	O
grecs_meta1_lsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
grecs_meta1_state	int
=	O
*	O
grecs_meta1_ssp	pointer
;	O
YY_STACK_PRINT	O
(	O
grecs_meta1_ss	pointer
,	O
grecs_meta1_ssp	pointer
)	O
;	O
}	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
grecs_meta1_vsp	pointer
=	O
grecs_meta1_lval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
grecs_meta1_error_range	array
[	O
2	int
]	O
=	O
grecs_meta1_lloc	struct
;	O
YYLLOC_DEFAULT	O
(	O
grecs_meta1_loc	struct
,	O
grecs_meta1_error_range	array
,	O
2	int
)	O
;	O
*	O
++	O
grecs_meta1_lsp	pointer
=	O
grecs_meta1_loc	struct
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
grecs_meta1_stos	array
[	O
grecs_meta1_n	long
]	O
,	O
grecs_meta1_vsp	pointer
,	O
grecs_meta1_lsp	pointer
)	O
;	O
grecs_meta1_state	int
=	O
grecs_meta1_n	long
;	O
goto	O
grecs_meta1_newstate	O
;	O
grecs_meta1_acceptlab	O
:	O
grecs_meta1_result	int
=	O
0	int
;	O
goto	O
grecs_meta1_return	O
;	O
grecs_meta1_abortlab	O
:	O
grecs_meta1_result	int
=	O
1	int
;	O
goto	O
grecs_meta1_return	O
;	O
grecs_meta1_exhaustedlab	O
:	O
grecs_meta1_error	function
(	O
YY_	O
(	O
"memory exhausted"	pointer
)	O
)	O
;	O
grecs_meta1_result	int
=	O
2	int
;	O
grecs_meta1_return	O
:	O
if	O
(	O
grecs_meta1_char	int
!=	O
YYEMPTY	O
)	O
{	O
grecs_meta1_token	int
=	O
YYTRANSLATE	O
(	O
grecs_meta1_char	int
)	O
;	O
grecs_meta1_destruct	function
(	O
"Cleanup: discarding lookahead"	pointer
,	O
grecs_meta1_token	int
,	O
&	O
grecs_meta1_lval	union
,	O
&	O
grecs_meta1_lloc	struct
)	O
;	O
}	O
YYPOPSTACK	O
(	O
grecs_meta1_len	int
)	O
;	O
YY_STACK_PRINT	O
(	O
grecs_meta1_ss	pointer
,	O
grecs_meta1_ssp	pointer
)	O
;	O
while	O
(	O
grecs_meta1_ssp	pointer
!=	O
grecs_meta1_ss	pointer
)	O
{	O
grecs_meta1_destruct	function
(	O
"Cleanup: popping"	pointer
,	O
grecs_meta1_stos	array
[	O
*	O
grecs_meta1_ssp	pointer
]	O
,	O
grecs_meta1_vsp	pointer
,	O
grecs_meta1_lsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
grecs_meta1_ss	pointer
!=	O
grecs_meta1_ssa	array
)	O
YYSTACK_FREE	O
(	O
grecs_meta1_ss	pointer
)	O
;	O
if	O
(	O
grecs_meta1_msg	pointer
!=	O
grecs_meta1_msgbuf	array
)	O
YYSTACK_FREE	O
(	O
grecs_meta1_msg	pointer
)	O
;	O
return	O
YYID	O
(	O
grecs_meta1_result	int
)	O
;	O
}	O
int	O
grecs_meta1_error	function
(	O
char	O
const	O
*	O
s	pointer
)	O
{	O
grecs_error	function
(	O
&	O
grecs_meta1_lloc	struct
,	O
0	int
,	O
"%s"	pointer
,	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
struct	O
grecs_node	struct
*	O
grecs_meta1_parser	function
(	O
const	O
char	O
*	O
name	pointer
,	O
int	O
traceflags	int
)	O
{	O
int	O
rc	int
;	O
FILE	struct
*	O
fp	pointer
;	O
fp	pointer
=	O
fopen	function
(	O
name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
{	O
grecs_error	function
(	O
NULL	O
,	O
errno	O
,	O
_	O
(	O
"Cannot open `%s'"	pointer
)	O
,	O
name	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
grecs_meta1_set_in	function
(	O
fp	pointer
)	O
;	O
grecs_meta1__flex_debug	int
=	O
traceflags	int
&	O
GRECS_TRACE_LEX	int
;	O
grecs_meta1_debug	int
=	O
traceflags	int
&	O
GRECS_TRACE_GRAM	int
;	O
parse_tree	pointer
=	O
NULL	O
;	O
grecs_line_acc_create	function
(	O
)	O
;	O
rc	int
=	O
grecs_meta1_parse	function
(	O
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
if	O
(	O
grecs_error_count	int
)	O
rc	int
=	O
1	int
;	O
grecs_line_acc_free	function
(	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
grecs_tree_free	function
(	O
parse_tree	pointer
)	O
;	O
parse_tree	pointer
=	O
NULL	O
;	O
}	O
return	O
parse_tree	pointer
;	O
}	O
