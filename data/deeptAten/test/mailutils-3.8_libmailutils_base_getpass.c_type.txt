int	O
mu_getpass	O
(	O
mu_stream_t	O
in	O
,	O
mu_stream_t	O
out	O
,	O
const	O
char	O
*	O
prompt	pointer
,	O
char	O
*	O
*	pointer
passptr	pointer
)	O
{	O
int	O
status	int
;	O
int	O
echo_state	int
=	O
0	O
;	O
size_t	O
size	O
=	O
0	O
;	O
char	O
*	O
buf	pointer
=	O
NULL	O
;	O
status	O
=	O
mu_stream_write	int
(	O
out	pointer
,	O
prompt	O
,	O
strlen	O
(	O
prompt	pointer
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
status	O
)	O
return	O
status	int
;	O
mu_stream_flush	O
(	O
out	O
)	O
;	O
status	O
=	O
mu_stream_ioctl	int
(	O
in	O
,	O
MU_IOCTL_ECHO	O
,	O
MU_IOCTL_OP_SET	O
,	O
&	O
echo_state	pointer
)	O
;	O
if	O
(	O
status	O
==	O
0	O
)	O
echo_state	O
=	O
1	int
;	O
status	O
=	O
mu_stream_getline	int
(	O
in	pointer
,	O
&	O
buf	pointer
,	O
&	O
size	pointer
,	O
NULL	O
)	O
;	O
if	O
(	O
echo_state	O
)	O
{	O
mu_stream_ioctl	O
(	O
in	O
,	O
MU_IOCTL_ECHO	O
,	O
MU_IOCTL_OP_SET	O
,	O
&	O
echo_state	pointer
)	O
;	O
mu_stream_write	O
(	O
out	O
,	O
"\n"	O
,	O
1	O
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
status	O
==	O
0	O
)	O
{	O
mu_rtrim_cset	O
(	O
buf	O
,	O
"\n"	O
)	O
;	O
*	O
passptr	pointer
=	O
buf	O
;	O
}	O
return	O
0	O
;	O
}	O