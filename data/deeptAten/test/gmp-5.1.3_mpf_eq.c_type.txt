int	O
mpf_eq	O
(	O
mpf_srcptr	O
u	O
,	O
mpf_srcptr	O
v	O
,	O
mp_bitcnt_t	O
n_bits	O
)	O
{	O
mp_srcptr	O
up	pointer
,	O
vp	pointer
,	O
p	pointer
;	O
mp_size_t	O
usize	long
,	O
vsize	pointer
,	O
minsize	pointer
,	O
maxsize	pointer
,	O
n_limbs	pointer
,	O
i	pointer
,	O
size	int
;	O
mp_exp_t	O
uexp	O
,	O
vexp	pointer
;	O
mp_limb_t	O
diff	O
;	O
int	O
cnt	int
;	O
uexp	O
=	O
u	int
->	O
_mp_exp	long
;	O
vexp	O
=	O
v	int
->	O
_mp_exp	long
;	O
usize	O
=	O
u	pointer
->	O
_mp_size	pointer
;	O
vsize	O
=	O
v	pointer
->	O
_mp_size	pointer
;	O
if	O
(	O
(	long
usize	O
^	O
vsize	O
)	O
>=	O
0	int
)	O
{	O
if	O
(	O
usize	O
==	O
0	O
)	O
return	O
vsize	int
==	O
0	O
;	O
if	long
(	O
vsize	O
==	O
0	O
)	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
if	O
(	O
uexp	O
!=	O
vexp	O
)	O
return	O
0	int
;	O
usize	O
=	O
ABS	O
(	O
usize	pointer
)	O
;	O
vsize	O
=	O
ABS	O
(	O
vsize	pointer
)	O
;	O
up	O
=	O
u	O
->	O
_mp_d	pointer
;	O
vp	O
=	O
v	pointer
->	O
_mp_d	pointer
;	O
up	O
+=	O
usize	pointer
;	O
vp	pointer
+=	O
vsize	int
;	O
count_leading_zeros	O
(	O
cnt	pointer
,	O
up	int
[	O
-	int
1	int
]	O
)	O
;	O
if	O
(	O
(	O
vp	O
[	O
-	int
1	int
]	O
>>	O
(	O
GMP_LIMB_BITS	O
-	O
1	int
-	O
cnt	int
)	O
)	O
!=	O
1	O
)	O
return	O
0	int
;	O
n_bits	O
+=	O
cnt	int
-	O
GMP_NAIL_BITS	int
;	O
n_limbs	O
=	O
(	int
n_bits	O
+	O
GMP_NUMB_BITS	int
-	O
1	int
)	O
/	O
GMP_NUMB_BITS	int
;	O
usize	int
=	O
MIN	int
(	O
usize	int
,	O
n_limbs	int
)	O
;	O
vsize	O
=	O
MIN	O
(	O
vsize	int
,	O
n_limbs	int
)	O
;	O
minsize	O
=	O
MIN	O
(	O
usize	int
,	O
vsize	int
)	O
;	O
maxsize	O
=	O
usize	O
+	O
vsize	int
-	O
minsize	int
;	O
up	pointer
-=	O
minsize	O
;	O
vp	pointer
-=	O
minsize	O
;	O
for	pointer
(	O
i	long
=	O
minsize	int
-	O
1	int
;	O
i	int
>	O
0	int
;	O
i	int
--	O
)	O
{	O
if	O
(	O
up	O
[	O
i	int
]	O
!=	O
vp	O
[	O
i	int
]	O
)	O
return	O
0	int
;	O
}	O
n_bits	O
-=	O
(	O
maxsize	O
-	O
1	int
)	O
*	O
GMP_NUMB_BITS	pointer
;	O
size	O
=	O
maxsize	O
-	O
minsize	int
;	O
if	O
(	O
size	O
!=	O
0	O
)	O
{	O
if	O
(	O
up	O
[	O
0	int
]	O
!=	O
vp	O
[	O
0	int
]	O
)	O
return	O
0	int
;	O
if	O
(	O
usize	O
>	O
vsize	int
)	O
p	O
=	O
up	int
-	O
size	int
;	O
else	O
p	O
=	O
vp	int
-	O
size	int
;	O
for	O
(	O
i	O
=	O
size	int
-	O
1	int
;	O
i	O
>	O
0	int
;	O
i	int
--	O
)	O
{	O
if	O
(	O
p	O
[	O
i	int
]	O
!=	O
0	O
)	O
return	O
0	int
;	O
}	O
diff	O
=	O
p	O
[	O
0	int
]	O
;	O
}	O
else	O
{	O
diff	O
=	O
up	O
[	O
0	int
]	O
^	O
vp	O
[	O
0	int
]	O
;	O
}	pointer
if	O
(	O
n_bits	O
<	O
GMP_NUMB_BITS	int
)	O
diff	O
>>=	O
GMP_NUMB_BITS	int
-	O
n_bits	int
;	O
return	O
diff	int
==	O
0	O
;	O
}	int