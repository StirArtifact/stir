static	O
int	O
gegenbauer_check	O
(	O
const	O
size_t	O
n	O
,	O
const	O
gsl_integration_fixed_params	O
*	O
params	pointer
)	O
{	O
(	O
void	O
)	O
n	O
;	O
if	O
(	O
fabs	O
(	O
params	pointer
->	O
b	pointer
-	O
params	int
->	O
a	pointer
)	O
<=	O
GSL_DBL_EPSILON	int
)	O
{	O
GSL_ERROR	O
(	O
"|b - a| too small"	O
,	O
GSL_EDOM	O
)	O
;	O
}	O
else	O
if	O
(	O
params	O
->	O
a	pointer
>=	O
params	int
->	O
b	pointer
)	O
{	O
GSL_ERROR	O
(	O
"lower integration limit must be smaller than upper limit"	O
,	O
GSL_EDOM	O
)	O
;	O
}	O
else	O
if	O
(	O
params	O
->	O
alpha	pointer
<=	O
-	O
1.0	int
)	O
{	O
GSL_ERROR	O
(	O
"alpha must be > -1"	O
,	O
GSL_EDOM	O
)	O
;	O
}	O
else	O
{	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
static	O
int	O
gegenbauer_init	function
(	O
const	O
size_t	O
n	O
,	O
double	O
*	O
diag	pointer
,	O
double	O
*	O
subdiag	pointer
,	O
gsl_integration_fixed_params	O
*	O
params	pointer
)	O
{	O
size_t	O
i	O
;	O
diag	O
[	O
0	long
]	O
=	O
0.0	pointer
;	O
subdiag	O
[	O
0	int
]	O
=	O
sqrt	pointer
(	O
1.0	pointer
/	O
(	O
2.0	pointer
*	O
params	O
->	O
alpha	pointer
+	O
3.0	int
)	O
)	O
;	O
for	O
(	O
i	O
=	O
1	int
;	O
i	O
<	O
n	int
;	O
i	O
++	O
)	O
{	O
diag	O
[	O
i	O
]	O
=	O
0.0	O
;	O
subdiag	O
[	O
i	int
]	O
=	O
sqrt	pointer
(	O
(	pointer
i	O
+	O
1.0	int
)	O
*	O
(	pointer
2.0	O
*	O
params	O
->	O
alpha	pointer
+	O
i	int
+	O
1.0	int
)	O
/	O
(	int
4.0	O
*	O
(	O
params	O
->	O
alpha	pointer
+	O
i	int
+	O
1.0	int
)	O
*	O
(	pointer
params	O
->	O
alpha	pointer
+	O
i	O
+	O
1.0	int
)	O
-	O
1.0	int
)	O
)	O
;	O
}	O
params	O
->	O
zemu	struct
=	O
M_SQRTPI	O
*	O
gsl_sf_gamma	O
(	O
params	pointer
->	O
alpha	pointer
+	O
1.0	int
)	O
/	O
gsl_sf_gamma	int
(	O
params	pointer
->	O
alpha	pointer
+	O
1.5	int
)	O
;	O
params	O
->	O
shft	pointer
=	O
0.5	O
*	O
(	O
params	O
->	O
b	pointer
+	O
params	int
->	O
a	pointer
)	O
;	O
params	O
->	O
slp	pointer
=	O
0.5	O
*	O
(	O
params	O
->	O
b	pointer
-	O
params	int
->	O
a	pointer
)	O
;	O
params	O
->	O
al	pointer
=	O
params	O
->	O
alpha	pointer
;	O
params	O
->	O
be	pointer
=	O
params	O
->	O
alpha	pointer
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_integration_fixed_type	O
gegenbauer_type	O
=	O
{	O
gegenbauer_check	O
,	O
gegenbauer_init	O
}	O
;	O
const	O
gsl_integration_fixed_type	O
*	O
gsl_integration_fixed_gegenbauer	O
=	O
&	O
gegenbauer_type	struct
;	O