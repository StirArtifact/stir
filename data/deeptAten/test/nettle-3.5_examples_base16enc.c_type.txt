int	O
main	O
(	O
int	O
argc	O
UNUSED	O
,	O
char	O
*	O
*	pointer
argv	pointer
UNUSED	O
)	O
{	O
for	O
(	O
;	O
;	O
)	O
{	O
uint8_t	O
buffer	O
[	O
CHUNK_SIZE	int
]	O
;	O
char	O
result	O
[	O
ENCODED_SIZE	O
+	O
1	int
]	O
;	O
unsigned	O
nbytes	O
;	O
int	O
encoded_bytes	int
;	O
nbytes	O
=	O
fread	O
(	O
buffer	pointer
,	O
1	O
,	O
CHUNK_SIZE	O
,	O
stdin	O
)	O
;	O
base16_encode_update	O
(	O
result	O
,	O
nbytes	O
,	O
buffer	O
)	O
;	O
encoded_bytes	O
=	O
BASE16_ENCODE_LENGTH	O
(	O
nbytes	O
)	O
;	O
result	O
[	O
encoded_bytes	int
++	O
]	O
=	O
'\n'	pointer
;	O
if	O
(	O
nbytes	O
<	O
CHUNK_SIZE	int
)	O
{	O
if	O
(	O
ferror	O
(	O
stdin	pointer
)	O
)	O
{	O
werror	O
(	O
"Error reading file: %s\n"	O
,	O
strerror	O
(	O
errno	pointer
)	O
)	O
;	O
return	O
EXIT_FAILURE	int
;	O
}	O
if	O
(	O
!	O
write_data	O
(	O
stdout	pointer
,	O
encoded_bytes	O
,	O
result	O
)	O
||	O
fflush	O
(	O
stdout	pointer
)	O
!=	O
0	O
)	O
{	O
werror	O
(	O
"Error writing file: %s\n"	O
,	O
strerror	O
(	O
errno	pointer
)	O
)	O
;	O
return	O
EXIT_FAILURE	int
;	O
}	O
return	O
EXIT_SUCCESS	O
;	O
}	O
if	O
(	O
!	O
write_data	O
(	O
stdout	pointer
,	O
encoded_bytes	O
,	O
result	O
)	O
)	O
{	O
werror	O
(	O
"Error writing file: %s\n"	O
,	O
strerror	O
(	O
errno	pointer
)	O
)	O
;	O
return	O
EXIT_FAILURE	int
;	O
}	O
}	O
}	O