void	O
mu_message_imapenvelope_free	O
(	O
struct	O
mu_imapenvelope	struct
*	O
env	pointer
)	O
{	O
if	O
(	O
!	O
env	pointer
)	O
return	O
;	O
free	O
(	O
env	pointer
->	O
subject	pointer
)	O
;	O
mu_address_destroy	O
(	O
&	O
env	pointer
->	O
from	pointer
)	O
;	O
mu_address_destroy	O
(	O
&	O
env	pointer
->	O
sender	pointer
)	O
;	O
mu_address_destroy	O
(	O
&	O
env	pointer
->	O
reply_to	pointer
)	O
;	O
mu_address_destroy	O
(	O
&	O
env	pointer
->	O
to	pointer
)	O
;	O
mu_address_destroy	O
(	O
&	O
env	pointer
->	O
cc	pointer
)	O
;	O
mu_address_destroy	O
(	O
&	O
env	pointer
->	O
bcc	pointer
)	O
;	O
free	O
(	O
env	pointer
->	O
in_reply_to	pointer
)	O
;	O
free	O
(	O
env	pointer
->	O
message_id	pointer
)	O
;	O
free	O
(	O
env	pointer
)	O
;	O
}	O
int	O
mu_message_get_imapenvelope	function
(	O
mu_message_t	O
msg	O
,	O
struct	O
mu_imapenvelope	struct
*	O
*	pointer
pimapenvelope	pointer
)	O
{	O
struct	O
mu_imapenvelope	struct
*	O
imapenvelope	pointer
;	O
int	O
rc	int
;	O
if	O
(	O
msg	O
==	O
NULL	O
)	O
return	O
EINVAL	O
;	O
if	O
(	O
pimapenvelope	O
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
msg	O
->	O
_imapenvelope	pointer
)	O
return	O
msg	O
->	O
_imapenvelope	pointer
(	O
msg	pointer
,	O
pimapenvelope	pointer
)	O
;	O
imapenvelope	O
=	O
calloc	O
(	O
1	int
,	O
sizeof	O
(	O
imapenvelope	O
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
imapenvelope	pointer
)	O
return	O
ENOMEM	O
;	O
do	O
{	O
mu_header_t	O
hdr	O
;	O
mu_envelope_t	O
env	O
;	O
const	O
char	O
*	O
s	pointer
;	O
if	O
(	O
(	O
rc	O
=	O
mu_message_get_envelope	int
(	O
msg	pointer
,	O
&	pointer
env	pointer
)	O
)	O
)	O
break	O
;	O
if	O
(	O
(	O
rc	O
=	O
mu_envelope_sget_date	int
(	O
env	pointer
,	O
&	O
s	pointer
)	O
)	O
)	O
break	O
;	O
if	O
(	O
(	O
rc	O
=	O
mu_scan_datetime	int
(	O
s	pointer
,	O
MU_DATETIME_FROM	pointer
,	O
&	pointer
imapenvelope	pointer
->	O
date	pointer
,	O
&	O
imapenvelope	pointer
->	O
tz	pointer
,	O
NULL	O
)	O
)	O
)	O
break	O
;	O
if	O
(	O
(	O
rc	O
=	O
mu_message_get_header	int
(	O
msg	pointer
,	O
&	pointer
hdr	pointer
)	O
)	O
)	O
break	O
;	O
rc	O
=	O
mu_header_get_address	function
(	O
hdr	pointer
,	O
MU_HEADER_FROM	pointer
,	O
&	pointer
imapenvelope	pointer
->	O
from	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_get_address	int
(	O
hdr	pointer
,	O
MU_HEADER_SENDER	pointer
,	O
&	pointer
imapenvelope	pointer
->	O
sender	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_get_address	int
(	O
hdr	pointer
,	O
MU_HEADER_REPLY_TO	pointer
,	O
&	pointer
imapenvelope	pointer
->	O
reply_to	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_get_address	int
(	O
hdr	pointer
,	O
MU_HEADER_TO	pointer
,	O
&	int
imapenvelope	pointer
->	O
to	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_get_address	int
(	O
hdr	pointer
,	O
MU_HEADER_CC	pointer
,	O
&	int
imapenvelope	pointer
->	O
cc	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_get_address	int
(	O
hdr	pointer
,	O
MU_HEADER_BCC	pointer
,	O
&	int
imapenvelope	pointer
->	O
bcc	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_aget_value_unfold	int
(	O
hdr	pointer
,	O
MU_HEADER_SUBJECT	pointer
,	O
&	pointer
imapenvelope	pointer
->	O
subject	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_aget_value_unfold	int
(	O
hdr	pointer
,	O
MU_HEADER_IN_REPLY_TO	pointer
,	O
&	pointer
imapenvelope	pointer
->	O
in_reply_to	pointer
)	O
;	O
if	O
(	O
rc	O
&&	O
rc	O
!=	O
MU_ERR_NOENT	O
)	O
break	O
;	O
rc	O
=	O
mu_header_aget_value_unfold	int
(	O
hdr	pointer
,	O
MU_HEADER_MESSAGE_ID	pointer
,	O
&	int
imapenvelope	pointer
->	O
message_id	pointer
)	O
;	O
}	O
while	O
(	O
0	O
)	O
;	O
if	O
(	O
rc	O
)	O
mu_message_imapenvelope_free	O
(	O
imapenvelope	pointer
)	O
;	O
else	O
*	O
pimapenvelope	pointer
=	O
imapenvelope	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_message_set_imapenvelope	function
(	O
mu_message_t	O
msg	O
,	O
int	O
(	int
*	int
_imapenvelope	pointer
)	O
(	O
mu_message_t	O
,	O
struct	O
mu_imapenvelope	struct
*	O
*	pointer
)	pointer
,	pointer
void	O
*	O
owner	O
)	O
{	O
if	O
(	O
msg	O
==	O
NULL	O
)	O
return	O
EINVAL	O
;	O
if	O
(	O
msg	O
->	O
owner	pointer
!=	O
owner	O
)	O
return	O
EACCES	O
;	O
msg	O
->	O
_imapenvelope	pointer
=	O
_imapenvelope	O
;	O
return	pointer
0	int
;	O
}	O