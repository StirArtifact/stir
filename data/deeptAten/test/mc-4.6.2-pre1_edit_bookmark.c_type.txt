static	O
inline	O
struct	O
_book_mark	struct
*	O
double_marks	pointer
(	O
WEdit	O
*	O
edit	pointer
,	O
struct	O
_book_mark	struct
*	O
p	pointer
)	O
{	O
(	O
void	O
)	O
edit	pointer
;	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
while	O
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
==	O
p	O
->	O
line	pointer
)	O
p	O
=	O
p	pointer
->	O
next	pointer
;	O
return	pointer
p	O
;	O
}	O
struct	O
_book_mark	struct
*	O
book_mark_find	pointer
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
line	O
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	pointer
)	O
{	O
edit	O
->	O
book_mark	pointer
=	O
g_malloc0	O
(	O
sizeof	pointer
(	O
struct	pointer
_book_mark	struct
)	O
)	O
;	O
edit	O
->	O
book_mark	pointer
->	O
line	pointer
=	O
-	pointer
1	O
;	O
return	O
edit	int
->	O
book_mark	pointer
;	O
}	O
for	O
(	O
p	int
=	O
edit	int
->	O
book_mark	pointer
;	O
p	pointer
;	O
p	O
=	O
p	O
->	O
next	pointer
)	O
{	O
if	pointer
(	O
p	pointer
->	O
line	pointer
>	O
line	int
)	O
break	O
;	O
if	pointer
(	O
p	pointer
->	O
line	pointer
<=	O
line	int
)	O
{	O
if	pointer
(	O
p	pointer
->	O
next	pointer
)	O
{	O
if	pointer
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
>	O
line	int
)	O
{	O
edit	pointer
->	O
book_mark	pointer
=	O
p	pointer
;	O
return	pointer
double_marks	int
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
else	O
{	O
edit	O
->	O
book_mark	pointer
=	O
p	pointer
;	O
return	pointer
double_marks	int
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
}	O
for	O
(	O
p	int
=	O
edit	int
->	O
book_mark	pointer
;	O
p	pointer
;	O
p	O
=	O
p	function
->	O
prev	pointer
)	O
{	O
if	pointer
(	O
p	pointer
->	O
next	pointer
)	O
if	O
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
<=	O
line	int
)	O
break	O
;	O
if	pointer
(	O
p	pointer
->	O
line	pointer
<=	O
line	int
)	O
{	O
if	pointer
(	O
p	pointer
->	O
next	pointer
)	O
{	O
if	pointer
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
>	O
line	int
)	O
{	O
edit	pointer
->	O
book_mark	pointer
=	O
p	pointer
;	O
return	pointer
double_marks	int
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
else	O
{	O
edit	O
->	O
book_mark	pointer
=	O
p	pointer
;	O
return	pointer
double_marks	int
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
}	O
return	O
0	O
;	O
}	O
int	O
book_mark_query_color	function
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
line	int
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	pointer
)	O
return	O
0	O
;	O
for	O
(	O
p	int
=	O
book_mark_find	int
(	O
edit	pointer
,	O
line	int
)	O
;	O
p	O
;	O
p	O
=	O
p	function
->	O
prev	pointer
)	O
{	O
if	pointer
(	O
p	pointer
->	O
line	pointer
!=	O
line	int
)	O
return	O
0	int
;	O
if	int
(	O
p	pointer
->	O
c	int
==	O
c	O
)	O
return	O
1	int
;	O
}	O
return	O
0	O
;	O
}	O
void	O
book_mark_insert	function
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
line	int
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
p	O
=	O
book_mark_find	int
(	O
edit	O
,	O
line	pointer
)	O
;	O
edit	O
->	O
force	pointer
|=	O
REDRAW_LINE	int
;	O
q	O
=	O
g_malloc0	int
(	O
sizeof	pointer
(	O
struct	pointer
_book_mark	struct
)	O
)	O
;	O
q	O
->	O
line	pointer
=	O
line	O
;	O
q	pointer
->	O
c	pointer
=	O
c	pointer
;	O
q	pointer
->	O
next	pointer
=	O
p	O
->	O
next	pointer
;	O
q	pointer
->	O
prev	pointer
=	O
p	pointer
;	O
if	pointer
(	O
p	pointer
->	O
next	pointer
)	O
p	O
->	O
next	pointer
->	O
prev	pointer
=	O
q	pointer
;	O
p	pointer
->	O
next	pointer
=	O
q	pointer
;	O
}	pointer
int	O
book_mark_clear	function
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
line	int
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
int	O
r	int
=	O
1	int
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	pointer
)	O
return	O
r	O
;	O
for	int
(	O
p	int
=	O
book_mark_find	int
(	O
edit	int
,	O
line	int
)	O
;	O
p	O
;	O
p	O
=	O
q	function
)	O
{	O
q	O
=	O
p	int
->	O
prev	pointer
;	O
if	pointer
(	O
p	pointer
->	O
line	pointer
==	O
line	int
&&	O
(	int
p	O
->	O
c	pointer
==	O
c	O
||	O
c	int
==	O
-	int
1	int
)	O
)	O
{	O
r	O
=	O
0	int
;	O
edit	int
->	O
force	int
|=	O
REDRAW_LINE	int
;	O
edit	int
->	O
book_mark	int
=	O
p	int
->	O
prev	pointer
;	O
p	pointer
->	O
prev	pointer
->	O
next	pointer
=	O
p	pointer
->	O
next	pointer
;	O
if	pointer
(	O
p	pointer
->	O
next	pointer
)	O
p	O
->	O
next	pointer
->	O
prev	pointer
=	O
p	pointer
->	O
prev	pointer
;	O
g_free	pointer
(	O
p	pointer
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
edit	pointer
->	O
book_mark	pointer
->	O
line	pointer
==	O
-	int
1	int
&&	O
!	int
edit	O
->	O
book_mark	pointer
->	O
next	pointer
)	O
{	O
g_free	pointer
(	O
edit	pointer
->	O
book_mark	pointer
)	O
;	O
edit	O
->	O
book_mark	pointer
=	O
0	int
;	O
}	pointer
return	O
r	O
;	O
}	O
void	O
book_mark_flush	function
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	pointer
)	O
return	O
;	O
edit	O
->	O
force	pointer
|=	O
REDRAW_PAGE	int
;	O
while	O
(	O
edit	O
->	O
book_mark	int
->	O
prev	pointer
)	O
edit	O
->	O
book_mark	pointer
=	O
edit	int
->	O
book_mark	pointer
->	O
prev	pointer
;	O
for	pointer
(	O
q	pointer
=	O
edit	int
->	O
book_mark	pointer
->	O
next	pointer
;	O
q	pointer
;	O
q	pointer
=	O
p	pointer
)	O
{	O
p	O
=	O
q	int
->	O
next	pointer
;	O
if	pointer
(	O
q	pointer
->	O
c	pointer
==	O
c	O
||	O
c	int
==	O
-	O
1	int
)	O
{	O
q	O
->	O
prev	pointer
->	O
next	pointer
=	O
q	pointer
->	O
next	pointer
;	O
if	pointer
(	O
p	pointer
)	O
p	O
->	O
prev	pointer
=	O
q	pointer
->	O
prev	pointer
;	O
g_free	pointer
(	O
q	pointer
)	O
;	O
}	O
}	O
if	O
(	O
!	pointer
edit	pointer
->	O
book_mark	pointer
->	O
next	pointer
)	O
{	O
g_free	pointer
(	O
edit	pointer
->	O
book_mark	pointer
)	O
;	O
edit	O
->	O
book_mark	pointer
=	O
0	O
;	O
}	pointer
}	O
void	O
book_mark_inc	function
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
line	int
)	O
{	O
if	O
(	O
edit	O
->	O
book_mark	pointer
)	O
{	O
struct	O
_book_mark	struct
*	O
p	O
;	O
p	O
=	O
book_mark_find	int
(	O
edit	pointer
,	O
line	int
)	O
;	O
for	O
(	O
p	int
=	O
p	int
->	O
next	int
;	O
p	pointer
;	O
p	O
=	O
p	int
->	O
next	pointer
)	O
{	O
p	pointer
->	O
line	pointer
++	O
;	O
}	O
}	O
}	O
void	O
book_mark_dec	function
(	O
WEdit	O
*	O
edit	pointer
,	O
int	O
line	int
)	O
{	O
if	O
(	O
edit	O
->	O
book_mark	pointer
)	O
{	O
struct	O
_book_mark	struct
*	O
p	O
;	O
p	O
=	O
book_mark_find	int
(	O
edit	O
,	O
line	int
)	O
;	O
for	O
(	O
p	int
=	O
p	int
->	O
next	int
;	O
p	pointer
;	O
p	O
=	O
p	int
->	O
next	pointer
)	O
{	O
p	pointer
->	O
line	pointer
--	O
;	O
}	O
}	O
}	O