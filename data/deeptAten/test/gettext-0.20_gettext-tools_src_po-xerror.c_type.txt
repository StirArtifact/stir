static	O
void	O
xerror	function
(	O
int	O
severity	int
,	O
const	O
char	O
*	O
prefix_tail	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	O
lineno	long
,	O
size_t	O
column	long
,	O
int	O
multiline_p	int
,	O
const	O
char	O
*	O
message_text	pointer
)	O
{	O
if	O
(	O
multiline_p	O
)	O
{	O
bool	O
old_error_with_progname	int
=	O
error_with_progname	O
;	O
char	O
*	O
prefix	pointer
;	O
if	O
(	O
filename	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
lineno	pointer
!=	O
(	O
size_t	pointer
)	O
(	O
-	O
1	O
)	O
)	O
{	O
if	O
(	O
column	O
!=	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
)	O
prefix	O
=	O
xasprintf	O
(	O
"%s:%ld:%ld: %s"	O
,	O
filename	O
,	O
(	O
long	O
)	O
lineno	O
,	O
(	O
long	O
)	O
column	O
,	O
prefix_tail	O
)	O
;	O
else	O
prefix	O
=	O
xasprintf	function
(	O
"%s:%ld: %s"	O
,	O
filename	O
,	O
(	O
long	O
)	O
lineno	O
,	O
prefix_tail	O
)	O
;	O
}	O
else	O
prefix	O
=	O
xasprintf	function
(	O
"%s: %s"	O
,	O
filename	pointer
,	O
prefix_tail	O
)	O
;	O
error_with_progname	O
=	O
false	function
;	O
}	O
else	O
prefix	O
=	O
xasprintf	function
(	O
"%s: %s"	O
,	O
program_name	pointer
,	O
prefix_tail	pointer
)	O
;	O
if	O
(	O
severity	pointer
>=	O
PO_SEVERITY_ERROR	int
)	O
po_multiline_error	O
(	O
prefix	O
,	O
xstrdup	pointer
(	O
message_text	pointer
)	O
)	O
;	O
else	O
po_multiline_warning	O
(	O
prefix	pointer
,	O
xstrdup	pointer
(	O
message_text	pointer
)	O
)	O
;	O
error_with_progname	O
=	O
old_error_with_progname	function
;	O
if	O
(	O
severity	O
==	O
PO_SEVERITY_FATAL_ERROR	O
)	O
exit	O
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
else	O
{	O
int	O
exit_status	int
=	O
(	O
severity	O
==	O
PO_SEVERITY_FATAL_ERROR	O
?	O
EXIT_FAILURE	int
:	O
0	O
)	O
;	O
if	O
(	O
filename	O
!=	O
NULL	O
)	O
{	O
error_with_progname	O
=	O
false	function
;	O
if	O
(	O
lineno	O
!=	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
)	O
{	O
if	O
(	O
column	O
!=	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
)	O
po_error	O
(	O
exit_status	O
,	O
0	O
,	O
"%s:%ld:%ld: %s%s"	int
,	O
filename	O
,	O
(	O
long	O
)	O
lineno	O
,	O
(	int
long	O
)	O
column	O
,	O
prefix_tail	O
,	O
message_text	O
)	O
;	O
else	O
po_error_at_line	O
(	O
exit_status	pointer
,	O
0	O
,	O
filename	int
,	O
lineno	O
,	O
"%s%s"	int
,	O
prefix_tail	pointer
,	O
message_text	O
)	O
;	O
}	O
else	O
po_error	O
(	O
exit_status	O
,	O
0	O
,	O
"%s: %s%s"	int
,	O
filename	int
,	O
prefix_tail	O
,	O
message_text	int
)	O
;	O
error_with_progname	O
=	O
true	function
;	O
}	O
else	O
po_error	O
(	O
exit_status	O
,	O
0	O
,	O
"%s%s"	int
,	O
prefix_tail	O
,	O
message_text	O
)	O
;	O
if	O
(	O
severity	O
<	O
PO_SEVERITY_ERROR	int
)	O
--	O
error_message_count	O
;	O
}	O
}	O
void	O
textmode_xerror	function
(	O
int	O
severity	int
,	O
const	O
struct	O
message_ty	struct
*	O
message	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	O
lineno	long
,	O
size_t	O
column	long
,	O
int	O
multiline_p	int
,	O
const	O
char	O
*	O
message_text	pointer
)	O
{	O
const	O
char	O
*	O
prefix_tail	pointer
=	O
(	O
severity	O
==	O
PO_SEVERITY_WARNING	O
?	O
_	O
(	O
"warning: "	pointer
)	O
:	O
""	pointer
)	O
;	O
if	O
(	O
message	pointer
!=	O
NULL	O
&&	O
(	pointer
filename	O
==	O
NULL	O
||	O
lineno	O
==	O
(	int
size_t	int
)	O
(	O
-	O
1	O
)	O
)	O
)	O
{	O
filename	O
=	O
message	O
->	O
pos	pointer
.	O
file_name	pointer
;	O
lineno	O
=	O
message	int
->	O
pos	pointer
.	O
line_number	pointer
;	O
column	O
=	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
;	O
}	O
xerror	O
(	O
severity	O
,	O
prefix_tail	O
,	O
filename	O
,	O
lineno	O
,	O
column	int
,	O
multiline_p	O
,	O
message_text	O
)	O
;	O
}	O
void	O
textmode_xerror2	function
(	O
int	O
severity	O
,	O
const	O
struct	O
message_ty	struct
*	O
message1	pointer
,	O
const	O
char	O
*	O
filename1	pointer
,	O
size_t	O
lineno1	long
,	O
size_t	O
column1	long
,	O
int	O
multiline_p1	int
,	O
const	O
char	O
*	O
message_text1	pointer
,	O
const	O
struct	O
message_ty	struct
*	O
message2	pointer
,	O
const	O
char	O
*	O
filename2	pointer
,	O
size_t	O
lineno2	long
,	O
size_t	O
column2	long
,	O
int	O
multiline_p2	int
,	O
const	O
char	O
*	O
message_text2	pointer
)	O
{	O
int	O
severity1	int
=	O
(	O
severity	O
==	O
PO_SEVERITY_FATAL_ERROR	O
?	O
PO_SEVERITY_ERROR	O
:	O
severity	O
)	O
;	O
const	O
char	O
*	O
prefix_tail	O
=	O
(	O
severity	O
==	O
PO_SEVERITY_WARNING	O
?	O
_	O
(	O
"warning: "	pointer
)	O
:	O
""	pointer
)	O
;	O
if	O
(	O
message1	pointer
!=	O
NULL	O
&&	O
(	pointer
filename1	O
==	O
NULL	O
||	O
lineno1	O
==	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
)	O
)	O
{	O
filename1	O
=	O
message1	function
->	O
pos	pointer
.	O
file_name	pointer
;	O
lineno1	O
=	O
message1	O
->	O
pos	pointer
.	O
line_number	pointer
;	O
column1	O
=	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
;	O
}	O
if	O
(	O
message2	O
!=	O
NULL	O
&&	O
(	pointer
filename2	O
==	O
NULL	O
||	O
lineno2	O
==	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
)	O
)	O
{	O
filename2	O
=	O
message2	O
->	O
pos	pointer
.	O
file_name	pointer
;	O
lineno2	O
=	O
message2	O
->	O
pos	pointer
.	O
line_number	pointer
;	O
column2	O
=	O
(	O
size_t	O
)	O
(	O
-	O
1	O
)	O
;	O
}	O
if	O
(	O
multiline_p1	O
)	O
xerror	O
(	O
severity1	O
,	O
prefix_tail	pointer
,	O
filename1	O
,	O
lineno1	O
,	O
column1	O
,	O
multiline_p1	O
,	O
message_text1	O
)	O
;	O
else	O
{	O
char	O
*	O
message_text1_extended	pointer
=	O
xasprintf	O
(	O
"%s..."	O
,	O
message_text1	O
)	O
;	O
xerror	O
(	O
severity1	O
,	O
prefix_tail	O
,	O
filename1	O
,	O
lineno1	O
,	O
column1	O
,	O
multiline_p1	O
,	O
message_text1_extended	O
)	O
;	O
free	O
(	O
message_text1_extended	pointer
)	O
;	O
}	O
{	O
char	O
*	O
message_text2_extended	function
=	O
xasprintf	O
(	O
"...%s"	O
,	O
message_text2	O
)	O
;	O
xerror	O
(	O
severity	O
,	O
prefix_tail	pointer
,	O
filename2	O
,	O
lineno2	O
,	O
column2	O
,	O
multiline_p2	O
,	O
message_text2_extended	O
)	O
;	O
free	O
(	O
message_text2_extended	pointer
)	O
;	O
}	O
if	O
(	O
severity	pointer
>=	O
PO_SEVERITY_ERROR	int
)	O
--	O
error_message_count	O
;	O
}	O
void	O
(	function
*	O
po_xerror	pointer
)	O
(	O
int	O
severity	O
,	O
const	O
struct	O
message_ty	struct
*	O
message	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	O
lineno	long
,	O
size_t	O
column	long
,	O
int	O
multiline_p	int
,	O
const	O
char	O
*	O
message_text	pointer
)	O
=	O
textmode_xerror	O
;	O
void	O
(	function
*	O
po_xerror2	pointer
)	O
(	O
int	O
severity	O
,	O
const	O
struct	O
message_ty	struct
*	O
message1	pointer
,	O
const	O
char	O
*	O
filename1	pointer
,	O
size_t	O
lineno1	long
,	O
size_t	O
column1	long
,	O
int	O
multiline_p1	int
,	O
const	O
char	O
*	O
message_text1	pointer
,	O
const	O
struct	O
message_ty	struct
*	O
message2	pointer
,	O
const	O
char	O
*	O
filename2	pointer
,	O
size_t	O
lineno2	long
,	O
size_t	O
column2	long
,	O
int	O
multiline_p2	int
,	O
const	O
char	O
*	O
message_text2	pointer
)	O
=	O
textmode_xerror2	O
;	O