static	O
void	O
stop_workers	function
(	O
struct	O
MHD_Daemon	struct
*	O
daemon	pointer
)	O
{	O
MHD_socket	O
fd	int
;	O
unsigned	O
int	O
i	int
;	O
mhd_assert	O
(	O
1	O
<	O
daemon	int
->	O
worker_pool_size	pointer
)	O
;	O
mhd_assert	O
(	O
1	pointer
<	O
daemon	int
->	O
threading_mode	pointer
)	O
;	O
if	O
(	O
daemon	int
->	O
was_quiesced	pointer
)	O
fd	O
=	O
MHD_INVALID_SOCKET	int
;	O
else	O
fd	O
=	O
daemon	function
->	O
listen_socket	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
daemon	int
->	O
worker_pool_size	pointer
;	O
i	pointer
++	O
)	O
{	O
daemon	O
->	O
worker_pool	pointer
[	O
i	int
]	O
.	O
shutdown	pointer
=	O
true	int
;	O
if	O
(	O
MHD_ITC_IS_VALID_	O
(	O
daemon	pointer
->	O
worker_pool	pointer
[	O
i	int
]	O
.	O
itc	pointer
)	O
)	O
{	O
if	O
(	O
!	int
MHD_itc_activate_	int
(	O
daemon	pointer
->	O
worker_pool	pointer
[	O
i	int
]	O
.	O
itc	pointer
,	O
"e"	pointer
)	O
)	O
MHD_PANIC	O
(	O
_	O
(	O
"Failed to signal shutdown via inter-thread communication channel."	pointer
)	O
)	O
;	O
}	O
else	O
{	O
mhd_assert	O
(	O
MHD_INVALID_SOCKET	pointer
!=	O
fd	O
)	O
;	O
}	O
}	O
if	O
(	O
MHD_INVALID_SOCKET	O
!=	O
fd	O
)	O
{	O
(	O
void	O
)	O
shutdown	function
(	O
fd	pointer
,	O
SHUT_RDWR	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
daemon	int
->	O
worker_pool_size	pointer
;	O
++	pointer
i	O
)	O
{	O
MHD_daemon_destroy	O
(	O
&	pointer
daemon	pointer
->	O
worker_pool	pointer
[	O
i	int
]	O
)	O
;	O
}	O
free	O
(	O
daemon	pointer
->	O
worker_pool	pointer
)	O
;	O
daemon	O
->	O
worker_pool	pointer
=	O
NULL	O
;	O
mhd_assert	pointer
(	O
MHD_ITC_IS_INVALID_	pointer
(	O
daemon	pointer
->	O
itc	pointer
)	O
)	O
;	O
mhd_assert	O
(	O
-	pointer
1	int
==	O
daemon	O
->	O
epoll_fd	pointer
)	O
;	O
}	O
void	O
MHD_daemon_destroy	function
(	O
struct	O
MHD_Daemon	struct
*	O
daemon	pointer
)	O
{	O
MHD_socket	O
fd	int
;	O
daemon	O
->	O
shutdown	pointer
=	O
true	int
;	O
if	O
(	O
daemon	int
->	O
was_quiesced	pointer
)	O
fd	O
=	O
MHD_INVALID_SOCKET	int
;	O
else	O
fd	O
=	O
daemon	function
->	O
listen_socket	pointer
;	O
if	O
(	O
NULL	pointer
!=	O
daemon	O
->	O
worker_pool	pointer
)	O
{	O
stop_workers	O
(	O
daemon	pointer
)	O
;	O
}	O
else	O
{	O
mhd_assert	O
(	O
0	pointer
==	O
daemon	O
->	O
worker_pool_size	pointer
)	O
;	O
if	O
(	O
MHD_TM_EXTERNAL_EVENT_LOOP	int
!=	O
daemon	O
->	O
threading_mode	pointer
)	O
{	O
if	O
(	O
MHD_ITC_IS_VALID_	int
(	O
daemon	pointer
->	O
itc	pointer
)	O
)	O
{	O
if	O
(	O
!	int
MHD_itc_activate_	int
(	O
daemon	pointer
->	O
itc	pointer
,	O
"e"	pointer
)	O
)	O
MHD_PANIC	O
(	O
_	O
(	O
"Failed to signal shutdown via inter-thread communication channel"	pointer
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
MHD_INVALID_SOCKET	O
!=	O
fd	O
)	O
{	O
if	O
(	O
NULL	int
==	O
daemon	O
->	O
master	pointer
)	O
(	O
void	O
)	O
shutdown	function
(	O
fd	pointer
,	O
SHUT_RDWR	O
)	O
;	O
}	O
else	O
mhd_assert	O
(	O
false	O
)	O
;	O
}	O
if	O
(	O
!	O
MHD_join_thread_	int
(	O
daemon	pointer
->	O
pid	pointer
.	O
handle	pointer
)	O
)	O
{	O
MHD_PANIC	O
(	O
_	O
(	O
"Failed to join a thread\n"	pointer
)	O
)	O
;	O
}	O
}	O
else	O
{	O
MHD_daemon_close_all_connections_	O
(	O
daemon	pointer
)	O
;	O
}	O
if	O
(	O
MHD_ITC_IS_VALID_	O
(	O
daemon	pointer
->	O
itc	pointer
)	O
)	O
MHD_itc_destroy_chk_	O
(	O
daemon	pointer
->	O
itc	pointer
)	O
;	O
if	O
(	O
(	int
MHD_ELS_EPOLL	int
==	O
daemon	O
->	O
event_loop_syscall	pointer
)	O
&&	O
(	O
-	O
1	int
!=	O
daemon	O
->	O
epoll_fd	pointer
)	O
)	O
MHD_socket_close_chk_	O
(	O
daemon	pointer
->	O
epoll_fd	pointer
)	O
;	O
MHD_mutex_destroy_chk_	O
(	O
&	pointer
daemon	pointer
->	O
cleanup_connection_mutex	pointer
)	O
;	O
}	O
if	O
(	O
NULL	O
!=	O
daemon	O
->	O
master	pointer
)	O
return	O
;	int
if	O
(	O
MHD_INVALID_SOCKET	int
!=	O
fd	O
)	O
MHD_socket_close_chk_	O
(	O
fd	pointer
)	O
;	O
free	O
(	O
daemon	pointer
->	O
nnc	pointer
)	O
;	O
MHD_mutex_destroy_chk_	O
(	O
&	pointer
daemon	pointer
->	O
nnc_lock	pointer
)	O
;	O
MHD_mutex_destroy_chk_	O
(	O
&	pointer
daemon	pointer
->	O
per_ip_connection_mutex	pointer
)	O
;	O
free	O
(	O
daemon	pointer
)	O
;	O
}	O