static	O
const	O
char	O
revid	O
[	O
]	O
=	O
"$Id: os_fid.c,v 1.3 2000/06/28 16:47:02 loic Exp $"	O
;	O
static	O
u_int32_t	O
fid_serial	O
=	O
SERIAL_INIT	O
;	O
int	O
CDB___os_fileid	int
(	O
dbenv	O
,	O
fname	O
,	O
unique_okay	O
,	O
fidp	O
)	O
DB_ENV	O
*	O
dbenv	pointer
;	O
const	O
char	O
*	O
fname	pointer
;	O
int	O
unique_okay	int
;	O
u_int8_t	O
*	O
fidp	pointer
;	O
{	O
struct	O
stat	struct
sb	O
;	O
size_t	O
i	O
;	O
int	O
ret	int
;	O
u_int32_t	O
tmp	O
;	O
u_int8_t	O
*	O
p	pointer
;	O
memset	O
(	O
fidp	O
,	O
0	O
,	O
DB_FILE_ID_LEN	O
)	O
;	O
if	O
(	O
stat	O
(	O
fname	pointer
,	O
&	O
sb	pointer
)	O
)	O
{	O
ret	O
=	O
CDB___os_get_errno	O
(	O
)	pointer
;	O
CDB___db_err	O
(	O
dbenv	O
,	O
"%s: %s"	pointer
,	O
fname	pointer
,	O
strerror	pointer
(	O
ret	pointer
)	O
)	O
;	O
return	O
(	int
ret	O
)	O
;	O
}	O
if	O
(	O
fid_serial	O
==	O
SERIAL_INIT	O
)	O
fid_serial	O
=	O
(	int
u_int32_t	O
)	O
getpid	O
(	O
)	O
;	O
else	O
fid_serial	O
+=	O
100000	O
;	O
tmp	O
=	O
(	O
u_int32_t	O
)	O
sb	O
.	O
st_ino	pointer
;	O
for	O
(	O
p	O
=	O
(	int
u_int8_t	O
*	O
)	O
&	O
tmp	struct
,	O
i	O
=	O
sizeof	int
(	O
u_int32_t	pointer
)	O
;	O
i	O
>	O
0	O
;	O
--	O
i	O
)	O
*	O
fidp	pointer
++	O
=	O
*	O
p	pointer
++	O
;	O
tmp	O
=	O
(	O
u_int32_t	O
)	O
sb	O
.	O
st_dev	pointer
;	O
for	O
(	O
p	O
=	O
(	int
u_int8_t	O
*	O
)	O
&	O
tmp	struct
,	O
i	O
=	O
sizeof	int
(	O
u_int32_t	pointer
)	O
;	O
i	O
>	O
0	O
;	O
--	O
i	O
)	O
*	O
fidp	pointer
++	O
=	O
*	O
p	pointer
++	O
;	O
if	O
(	O
unique_okay	O
)	O
{	O
tmp	O
=	O
(	O
u_int32_t	O
)	O
time	O
(	O
NULL	O
)	O
;	O
for	O
(	O
p	O
=	O
(	int
u_int8_t	O
*	O
)	O
&	O
tmp	struct
,	O
i	O
=	O
sizeof	int
(	O
u_int32_t	pointer
)	O
;	O
i	O
>	O
0	O
;	O
--	O
i	O
)	O
*	O
fidp	pointer
++	O
=	O
*	O
p	pointer
++	O
;	O
for	O
(	O
p	O
=	O
(	int
u_int8_t	O
*	O
)	O
&	O
fid_serial	struct
,	O
i	O
=	O
sizeof	int
(	O
u_int32_t	pointer
)	O
;	O
i	O
>	O
0	O
;	O
--	O
i	O
)	O
*	O
fidp	pointer
++	O
=	O
*	O
p	pointer
++	O
;	O
}	O
return	O
(	O
0	O
)	O
;	O
}	O