static	O
int	O
content_type_parse	O
(	O
const	O
char	O
*	O
input	pointer
,	O
const	O
char	O
*	O
charset	pointer
,	O
mu_content_type_t	O
ct	O
)	O
{	O
int	O
rc	int
;	O
char	O
*	O
value	pointer
,	O
*	O
p	pointer
;	O
rc	O
=	O
mu_mime_header_parse	int
(	O
input	pointer
,	O
charset	O
,	O
&	pointer
value	pointer
,	O
&	O
ct	pointer
->	O
param	pointer
)	O
;	O
if	O
(	O
rc	O
)	O
return	O
rc	O
;	O
p	O
=	O
strchr	O
(	O
value	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
p	O
)	O
{	O
size_t	O
len	O
=	O
p	int
-	O
value	int
;	O
ct	O
->	O
type	pointer
=	O
malloc	int
(	O
len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
ct	O
->	O
type	pointer
)	O
{	O
rc	O
=	O
errno	int
;	O
free	O
(	O
value	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
memcpy	O
(	O
ct	pointer
->	O
type	pointer
,	O
value	pointer
,	O
len	pointer
)	O
;	O
ct	O
->	O
type	pointer
[	O
len	int
]	O
=	O
0	pointer
;	O
ct	O
->	O
subtype	pointer
=	O
strdup	pointer
(	O
p	pointer
+	O
1	int
)	O
;	O
if	O
(	O
!	O
ct	O
->	O
subtype	pointer
)	O
{	O
rc	O
=	O
errno	int
;	O
free	O
(	O
value	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
}	O
else	O
{	O
ct	O
->	O
type	pointer
=	O
value	O
;	O
ct	O
->	O
subtype	pointer
=	O
NULL	O
;	O
}	O
return	O
0	O
;	O
}	O
int	O
mu_content_type_parse	function
(	O
const	O
char	O
*	O
input	pointer
,	O
const	O
char	O
*	O
charset	pointer
,	O
mu_content_type_t	O
*	O
retct	pointer
)	O
{	O
int	O
rc	int
;	O
mu_content_type_t	O
ct	O
;	O
if	O
(	O
!	O
input	O
)	O
return	O
EINVAL	O
;	O
if	O
(	O
!	O
retct	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
ct	O
=	O
calloc	O
(	O
1	int
,	O
sizeof	O
(	O
*	O
ct	pointer
)	O
)	O
;	O
if	O
(	O
!	O
ct	O
)	O
return	O
errno	O
;	O
rc	O
=	O
content_type_parse	O
(	O
input	pointer
,	O
charset	O
,	O
ct	pointer
)	O
;	O
if	O
(	O
rc	O
)	O
mu_content_type_destroy	O
(	O
&	pointer
ct	pointer
)	O
;	O
else	O
*	O
retct	function
=	O
ct	O
;	O
return	O
rc	int
;	O
}	O
void	O
mu_content_type_destroy	function
(	O
mu_content_type_t	O
*	O
pptr	pointer
)	O
{	O
if	O
(	O
pptr	O
&&	O
*	O
pptr	pointer
)	O
{	O
mu_content_type_t	O
ct	O
=	O
*	O
pptr	pointer
;	O
free	O
(	O
ct	pointer
->	O
type	pointer
)	O
;	O
free	O
(	O
ct	pointer
->	O
subtype	pointer
)	O
;	O
free	O
(	O
ct	pointer
->	O
trailer	pointer
)	O
;	O
mu_assoc_destroy	O
(	O
&	O
ct	pointer
->	O
param	pointer
)	O
;	O
free	O
(	O
ct	pointer
)	O
;	O
*	O
pptr	pointer
=	O
NULL	O
;	O
}	O
}	O