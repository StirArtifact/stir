int	O
ctl_transact	O
(	O
struct	O
in_addr	struct
target	O
,	O
CTL_MSG	O
msg	O
,	O
int	O
type	int
,	O
CTL_RESPONSE	O
*	O
rp	pointer
)	O
{	O
int	O
nready	int
,	O
cc	O
;	O
fd_set	O
read_mask	O
,	O
ctl_mask	O
;	O
struct	O
timeval	struct
wait	O
;	O
msg	O
.	O
type	pointer
=	O
type	int
;	O
daemon_addr	O
.	O
sin_addr	pointer
=	O
target	int
;	O
daemon_addr	O
.	O
sin_port	pointer
=	O
daemon_port	int
;	O
FD_ZERO	O
(	O
&	pointer
ctl_mask	pointer
)	O
;	O
FD_SET	O
(	O
ctl_sockt	O
,	O
&	O
ctl_mask	pointer
)	O
;	O
do	O
{	O
wait	O
.	O
tv_sec	pointer
=	O
CTL_WAIT	O
;	O
wait	O
.	O
tv_usec	pointer
=	O
0	O
;	O
do	O
{	O
cc	O
=	O
sendto	O
(	O
ctl_sockt	pointer
,	O
(	O
char	O
*	O
)	O
&	pointer
msg	struct
,	O
sizeof	O
(	O
msg	O
)	O
,	O
0	O
,	O
(	O
struct	O
sockaddr	O
*	O
)	O
&	pointer
daemon_addr	struct
,	O
sizeof	O
(	O
daemon_addr	O
)	O
)	O
;	O
if	O
(	O
cc	O
!=	O
sizeof	O
(	O
msg	pointer
)	O
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	O
)	O
continue	O
;	O
p_error	O
(	O
"Error on write to talk daemon"	pointer
)	O
;	O
}	O
read_mask	O
=	O
ctl_mask	function
;	O
nready	O
=	O
select	O
(	O
32	pointer
,	O
&	int
read_mask	pointer
,	O
0	O
,	O
0	O
,	O
&	int
wait	pointer
)	O
;	O
if	O
(	O
nready	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	O
)	O
continue	O
;	O
p_error	O
(	O
"Error waiting for daemon response"	pointer
)	O
;	O
}	O
}	O
while	O
(	O
nready	O
==	O
0	O
)	O
;	O
do	O
{	O
cc	O
=	O
recv	O
(	O
ctl_sockt	pointer
,	O
(	pointer
char	O
*	O
)	O
rp	pointer
,	O
sizeof	O
(	O
*	O
rp	pointer
)	O
,	O
0	O
)	O
;	O
if	O
(	O
cc	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	O
)	O
continue	O
;	O
p_error	O
(	O
"Error on read from talk daemon"	pointer
)	O
;	O
}	O
read_mask	O
=	O
ctl_mask	function
;	O
timerclear	O
(	O
&	pointer
wait	pointer
)	O
;	O
nready	O
=	O
select	O
(	O
32	pointer
,	O
&	O
read_mask	pointer
,	O
0	O
,	O
0	O
,	O
&	int
wait	pointer
)	O
;	O
}	O
while	O
(	O
nready	O
>	O
0	int
&&	O
(	O
rp	O
->	O
vers	pointer
!=	O
TALK_VERSION	O
||	O
rp	O
->	O
type	pointer
!=	O
type	O
)	O
)	O
;	O
}	O
while	O
(	O
rp	O
->	O
vers	int
!=	O
TALK_VERSION	O
||	O
rp	O
->	O
type	pointer
!=	O
type	O
)	O
;	O
rp	O
->	O
id_num	pointer
=	O
ntohl	int
(	O
rp	pointer
->	O
id_num	pointer
)	O
;	O
rp	O
->	O
addr	pointer
.	O
sa_family	int
=	O
ntohs	pointer
(	O
rp	pointer
->	O
addr	pointer
.	O
sa_family	int
)	O
;	O
return	O
0	int
;	O
}	O