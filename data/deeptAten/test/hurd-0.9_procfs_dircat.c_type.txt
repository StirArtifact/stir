struct	O
dircat_node	O
{	O
int	O
num_dirs	int
;	O
struct	O
node	struct
*	O
dirs	pointer
[	O
0	O
]	O
;	O
}	O
;	O
static	O
error_t	O
dircat_get_contents	function
(	O
void	O
*	O
hook	pointer
,	O
char	O
*	O
*	pointer
contents	pointer
,	O
ssize_t	O
*	O
contents_len	pointer
)	O
{	O
struct	O
dircat_node	struct
*	O
dcn	pointer
=	O
hook	O
;	O
int	O
i	int
,	O
sz	O
,	O
pos	O
;	O
error_t	O
err	int
;	O
pos	O
=	O
0	O
;	O
*	O
contents	pointer
=	O
malloc	O
(	O
sz	int
=	O
512	int
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
dcn	int
->	O
num_dirs	int
;	O
i	O
++	O
)	O
{	O
char	O
*	O
subcon	pointer
;	O
ssize_t	O
sublen	O
;	O
procfs_refresh	O
(	O
dcn	pointer
->	O
dirs	pointer
[	O
i	int
]	O
)	O
;	O
err	O
=	O
procfs_get_contents	int
(	O
dcn	pointer
->	O
dirs	pointer
[	O
i	int
]	O
,	O
&	pointer
subcon	pointer
,	O
&	O
sublen	pointer
)	O
;	O
if	O
(	O
err	O
)	O
{	O
free	O
(	O
*	pointer
contents	pointer
)	O
;	O
*	O
contents	pointer
=	O
NULL	O
;	O
return	O
err	int
;	O
}	O
while	O
(	O
pos	O
+	O
sublen	int
>	O
sz	int
)	O
*	O
contents	pointer
=	O
realloc	O
(	O
*	pointer
contents	pointer
,	O
sz	O
*=	O
2	O
)	O
;	O
memcpy	O
(	O
*	pointer
contents	pointer
+	O
pos	O
,	O
subcon	O
,	O
sublen	pointer
)	O
;	O
pos	O
+=	O
sublen	int
;	O
}	O
*	O
contents_len	function
=	O
pos	O
;	O
return	O
0	int
;	O
}	O
static	O
error_t	O
dircat_lookup	function
(	O
void	O
*	O
hook	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
struct	O
node	struct
*	O
*	pointer
np	pointer
)	O
{	O
struct	O
dircat_node	struct
*	O
dcn	pointer
=	O
hook	O
;	O
error_t	O
err	O
;	O
int	O
i	int
;	O
err	O
=	O
ENOENT	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
err	int
&&	O
i	O
<	O
dcn	int
->	O
num_dirs	int
;	O
i	O
++	O
)	O
err	O
=	O
procfs_lookup	int
(	O
dcn	pointer
->	O
dirs	pointer
[	O
i	int
]	O
,	O
name	pointer
,	O
np	pointer
)	O
;	O
return	O
err	int
;	O
}	O
static	O
void	O
dircat_release_dirs	function
(	O
struct	O
node	struct
*	O
const	pointer
*	O
dirs	pointer
,	O
int	O
num_dirs	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
num_dirs	int
;	O
i	int
++	O
)	O
if	O
(	O
dirs	int
[	O
i	int
]	O
)	O
netfs_nrele	O
(	O
dirs	pointer
[	O
i	int
]	O
)	O
;	O
}	O
static	O
void	O
dircat_cleanup	function
(	O
void	O
*	O
hook	pointer
)	O
{	O
struct	O
dircat_node	struct
*	O
dcn	pointer
=	O
hook	O
;	O
dircat_release_dirs	O
(	O
dcn	pointer
->	O
dirs	pointer
,	O
dcn	pointer
->	O
num_dirs	pointer
)	O
;	O
free	O
(	O
dcn	pointer
)	O
;	O
}	O
struct	O
node	struct
*	O
dircat_make_node	pointer
(	O
struct	O
node	struct
*	O
const	pointer
*	O
dirs	pointer
,	O
int	O
num_dirs	O
)	O
{	O
static	O
struct	O
procfs_node_ops	struct
ops	O
=	O
{	O
.	O
get_contents	struct
=	O
dircat_get_contents	O
,	O
.	O
cleanup_contents	struct
=	O
procfs_cleanup_contents_with_free	pointer
,	O
.	O
lookup	struct
=	O
dircat_lookup	pointer
,	O
.	O
cleanup	struct
=	O
dircat_cleanup	pointer
,	O
}	O
;	O
struct	O
dircat_node	struct
*	O
dcn	pointer
;	O
int	O
i	int
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
num_dirs	int
;	O
i	int
++	O
)	O
if	O
(	O
!	O
dirs	O
[	O
i	int
]	O
)	O
goto	O
fail	O
;	O
dcn	pointer
=	O
malloc	O
(	O
sizeof	int
*	O
dcn	pointer
+	O
num_dirs	O
*	O
sizeof	O
dcn	O
->	O
dirs	pointer
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
dcn	pointer
)	O
goto	O
fail	O
;	O
dcn	O
->	O
num_dirs	pointer
=	O
num_dirs	O
;	O
memcpy	pointer
(	O
dcn	pointer
->	O
dirs	pointer
,	O
dirs	pointer
,	O
num_dirs	pointer
*	O
sizeof	pointer
dcn	O
->	O
dirs	pointer
[	O
0	int
]	O
)	O
;	O
return	O
procfs_make_node	int
(	O
&	pointer
ops	pointer
,	O
dcn	O
)	O
;	O
fail	O
:	O
dircat_release_dirs	O
(	O
dirs	pointer
,	O
num_dirs	pointer
)	O
;	O
return	O
NULL	int
;	O
}	O