void	O
mu_gdb_bt	O
(	O
)	O
{	O
int	O
i	int
;	O
pid_t	O
master_pid	O
=	O
getpid	O
(	O
)	O
;	O
pid_t	O
pid	O
;	O
static	O
char	O
buf	O
[	O
1024	O
]	O
;	O
static	O
char	O
fname	O
[	O
1024	O
]	O
;	O
int	O
fd	int
;	O
char	O
*	O
argv	pointer
[	O
8	int
]	O
;	O
if	O
(	O
!	O
mu_program_name	O
)	O
abort	O
(	O
)	O
;	O
sprintf	O
(	O
fname	pointer
,	O
"/tmp/mailutils.%s.%lu"	pointer
,	O
mu_program_name	pointer
,	O
(	pointer
unsigned	O
long	O
)	O
master_pid	O
)	O
;	O
pid	O
=	O
fork	O
(	O
)	pointer
;	O
if	O
(	O
pid	O
==	O
(	O
pid_t	int
)	O
-	O
1	int
)	O
abort	O
(	O
)	O
;	O
if	O
(	O
pid	O
)	O
{	O
sleep	O
(	O
10	O
)	O
;	O
abort	O
(	O
)	O
;	O
}	O
for	O
(	O
i	O
=	O
mu_getmaxfd	int
(	O
)	pointer
;	O
i	O
>=	O
0	O
;	O
i	O
--	O
)	O
close	O
(	O
i	pointer
)	O
;	O
fd	O
=	O
open	O
(	O
fname	O
,	O
O_WRONLY	O
|	O
O_CREAT	O
,	O
0600	int
)	O
;	O
if	O
(	O
fd	O
==	O
-	O
1	int
)	O
abort	O
(	O
)	O
;	O
dup2	O
(	O
fd	O
,	O
1	O
)	O
;	O
dup2	O
(	O
fd	O
,	O
2	O
)	O
;	O
close	O
(	O
fd	O
)	O
;	O
argv	O
[	O
0	int
]	O
=	O
"/usr/bin/gdb"	O
;	O
argv	O
[	O
1	int
]	O
=	O
(	pointer
char	O
*	O
)	O
mu_full_program_name	pointer
;	O
sprintf	O
(	O
buf	pointer
,	O
"%lu"	pointer
,	O
(	pointer
unsigned	O
long	O
)	O
master_pid	O
)	O
;	O
argv	O
[	O
2	int
]	O
=	O
buf	O
;	O
argv	O
[	O
3	int
]	O
=	O
"-ex"	pointer
;	O
argv	pointer
[	O
4	int
]	O
=	O
"bt"	pointer
;	O
argv	O
[	O
5	int
]	O
=	O
"-ex"	pointer
;	O
argv	O
[	O
6	int
]	O
=	O
"kill"	pointer
;	O
argv	O
[	O
7	int
]	O
=	O
NULL	pointer
;	O
execvp	O
(	O
argv	pointer
[	O
0	int
]	O
,	O
argv	pointer
)	O
;	O
abort	O
(	O
)	O
;	O
}	O