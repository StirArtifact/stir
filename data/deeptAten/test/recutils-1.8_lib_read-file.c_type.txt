char	O
*	O
fread_file	O
(	O
FILE	O
*	O
stream	pointer
,	O
size_t	O
*	O
length	pointer
)	O
{	O
char	O
*	O
buf	pointer
=	O
NULL	O
;	O
size_t	O
alloc	O
=	O
BUFSIZ	pointer
;	O
{	O
struct	O
stat	struct
st	O
;	O
if	O
(	O
fstat	O
(	O
fileno	pointer
(	O
stream	pointer
)	O
,	O
&	O
st	pointer
)	O
>=	O
0	int
&&	O
S_ISREG	O
(	O
st	pointer
.	O
st_mode	long
)	O
)	O
{	O
off_t	O
pos	O
=	O
ftello	O
(	O
stream	pointer
)	O
;	O
if	O
(	O
pos	O
>=	O
0	int
&&	O
pos	O
<	O
st	int
.	O
st_size	long
)	O
{	O
off_t	O
alloc_off	O
=	O
st	pointer
.	O
st_size	long
-	O
pos	int
;	O
if	O
(	O
SIZE_MAX	long
-	O
1	int
<	O
alloc_off	int
)	O
{	O
errno	O
=	O
ENOMEM	int
;	O
return	O
NULL	int
;	O
}	O
alloc	O
=	O
alloc_off	O
+	O
1	int
;	O
}	O
}	O
}	O
if	O
(	O
!	O
(	pointer
buf	O
=	O
malloc	O
(	O
alloc	int
)	O
)	O
)	O
return	O
NULL	int
;	O
{	O
size_t	O
size	O
=	O
0	O
;	O
int	O
save_errno	int
;	O
for	O
(	O
;	long
;	O
)	O
{	O
size_t	O
requested	O
=	O
alloc	O
-	O
size	long
;	O
size_t	O
count	long
=	O
fread	int
(	O
buf	pointer
+	O
size	long
,	O
1	long
,	O
requested	long
,	O
stream	pointer
)	O
;	O
size	O
+=	O
count	O
;	O
if	O
(	O
count	long
!=	O
requested	O
)	O
{	O
save_errno	O
=	O
errno	O
;	O
if	O
(	O
ferror	long
(	O
stream	pointer
)	O
)	O
break	O
;	O
if	O
(	O
size	long
<	O
alloc	int
-	O
1	int
)	O
{	O
char	O
*	O
smaller_buf	pointer
=	O
realloc	O
(	O
buf	pointer
,	O
size	long
+	O
1	long
)	O
;	O
if	O
(	O
smaller_buf	long
!=	O
NULL	O
)	O
buf	O
=	O
smaller_buf	int
;	O
}	O
buf	O
[	O
size	int
]	O
=	O
'\0'	pointer
;	O
*	pointer
length	pointer
=	O
size	O
;	O
return	O
buf	O
;	O
}	O
{	O
char	O
*	O
new_buf	O
;	O
if	O
(	O
alloc	O
==	O
SIZE_MAX	O
)	O
{	O
save_errno	O
=	O
ENOMEM	O
;	O
break	O
;	O
}	O
if	O
(	O
alloc	O
<	O
SIZE_MAX	O
-	O
alloc	int
/	O
2	int
)	O
alloc	O
=	O
alloc	pointer
+	O
alloc	int
/	O
2	int
;	O
else	long
alloc	O
=	O
SIZE_MAX	pointer
;	O
if	O
(	O
!	O
(	O
new_buf	O
=	O
realloc	O
(	O
buf	pointer
,	O
alloc	pointer
)	O
)	O
)	O
{	O
save_errno	O
=	O
errno	O
;	O
break	O
;	O
}	O
buf	O
=	O
new_buf	O
;	O
}	O
}	O
free	O
(	O
buf	pointer
)	O
;	O
errno	O
=	O
save_errno	int
;	O
return	O
NULL	int
;	O
}	O
}	O
static	O
char	O
*	O
internal_read_file	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	O
*	O
length	pointer
,	O
const	O
char	O
*	O
mode	pointer
)	O
{	O
FILE	O
*	O
stream	pointer
=	O
fopen	O
(	O
filename	pointer
,	O
mode	pointer
)	O
;	O
char	O
*	O
out	pointer
;	O
int	O
save_errno	int
;	O
if	O
(	O
!	O
stream	pointer
)	O
return	O
NULL	O
;	O
out	O
=	O
fread_file	O
(	O
stream	pointer
,	O
length	O
)	O
;	O
save_errno	O
=	O
errno	O
;	O
if	O
(	O
fclose	O
(	O
stream	pointer
)	O
!=	O
0	O
)	O
{	O
if	O
(	O
out	O
)	O
{	O
save_errno	O
=	O
errno	O
;	O
free	O
(	O
out	pointer
)	O
;	O
}	O
errno	O
=	O
save_errno	function
;	O
return	O
NULL	O
;	O
}	O
return	O
out	O
;	O
}	O
char	O
*	O
read_file	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	O
*	O
length	pointer
)	O
{	O
return	O
internal_read_file	int
(	O
filename	pointer
,	O
length	pointer
,	O
"r"	pointer
)	O
;	O
}	O
char	O
*	O
read_binary_file	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	O
*	O
length	pointer
)	O
{	O
return	O
internal_read_file	int
(	O
filename	pointer
,	O
length	pointer
,	O
"rb"	pointer
)	O
;	O
}	O