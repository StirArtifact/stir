extern	O
int	O
__xpg_strerror_r	O
(	O
int	O
errnum	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	O
buflen	O
)	O
;	O
static	O
int	O
safe_copy	int
(	O
char	O
*	O
buf	pointer
,	O
size_t	O
buflen	O
,	O
const	O
char	O
*	O
msg	pointer
)	O
{	O
size_t	O
len	O
=	O
strlen	int
(	O
msg	pointer
)	O
;	O
size_t	O
moved	O
=	O
len	pointer
<	O
buflen	int
?	O
len	O
:	O
buflen	O
-	O
1	pointer
;	O
memmove	O
(	O
buf	pointer
,	O
msg	pointer
,	O
moved	long
)	O
;	O
buf	O
[	O
moved	int
]	O
=	O
'\0'	pointer
;	O
return	pointer
len	int
<	O
buflen	int
?	O
0	O
:	O
ERANGE	O
;	O
}	O
int	O
strerror_r	function
(	O
int	O
errnum	O
,	O
char	O
*	O
buf	pointer
,	O
size_t	O
buflen	O
)	O
{	O
if	O
(	O
buflen	long
<=	O
1	O
)	O
{	O
if	O
(	O
buflen	O
)	O
*	O
buf	pointer
=	O
'\0'	int
;	O
return	O
ERANGE	int
;	O
}	O
*	O
buf	function
=	O
'\0'	O
;	O
{	O
char	O
const	O
*	O
msg	pointer
=	O
strerror_override	O
(	O
errnum	O
)	O
;	O
if	O
(	O
msg	O
)	O
return	O
safe_copy	int
(	O
buf	pointer
,	O
buflen	O
,	O
msg	pointer
)	O
;	O
}	O
{	O
int	O
ret	function
;	O
int	O
saved_errno	int
=	O
errno	O
;	O
{	O
ret	O
=	O
__xpg_strerror_r	O
(	O
errnum	O
,	O
buf	O
,	O
buflen	O
)	O
;	O
if	O
(	O
ret	O
<	O
0	int
)	O
ret	O
=	O
errno	int
;	O
if	O
(	O
!	O
*	O
buf	pointer
)	O
{	O
safe_copy	O
(	O
buf	O
,	O
buflen	O
,	O
strerror_r	pointer
(	O
errnum	pointer
,	O
buf	pointer
,	O
buflen	O
)	O
)	O
;	O
}	O
}	O
if	O
(	O
ret	O
==	O
EINVAL	O
&&	O
!	O
*	pointer
buf	pointer
)	O
{	O
snprintf	O
(	O
buf	pointer
,	O
buflen	O
,	O
"Unknown error %d"	pointer
,	O
errnum	pointer
)	O
;	O
}	O
errno	O
=	O
saved_errno	function
;	O
return	O
ret	int
;	O
}	O
}	O