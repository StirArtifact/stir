CLASSID	O
EDMAPROC	O
edma_class_register	O
(	O
EDMA_REPO	O
repo	O
)	O
{	O
CLASSID	O
class_id	O
;	O
SClass	O
[	O
class_id	int
]	O
->	O
Status	pointer
=	O
CLASS_DEF	int
;	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_unregister	O
(	O
CLASSID	O
class_id	O
)	O
{	O
if	O
(	O
SClass	O
[	O
class_id	int
]	O
->	O
Status	pointer
<	O
CLASS_DEF	int
)	O
return	O
-	int
1	int
;	O
SClass	O
[	O
class_id	int
]	O
->	O
Status	pointer
=	O
CLASS_FREE	int
;	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_load_interface	O
(	O
CLASSID	O
class_id	O
)	O
{	O
if	O
(	O
SClass	O
[	O
class_id	int
]	O
->	O
Status	pointer
!=	O
CLASS_DEF	O
)	O
return	O
-	int
1	int
;	O
SClass	O
[	O
class_id	int
]	O
->	O
Status	pointer
=	O
CLASS_ILOADED	int
;	O
ProcMapTable	O
[	O
class_id	int
]	O
=	O
CLASS_IMAPPED	pointer
;	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_unload_interface	O
(	O
CLASSID	O
class_id	O
)	O
{	O
SClass	O
[	O
class_id	int
]	O
->	O
Status	pointer
=	O
CLASS_DEF	int
;	O
ProcMapTable	O
[	O
class_id	int
]	O
=	O
CLASS_DEF	pointer
;	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_load_implementation	O
(	O
CLASSID	O
class_id	O
)	O
{	O
ProcMapTable	O
[	O
class_id	int
]	O
=	O
CLASS_LOADED	pointer
;	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_unload_implementation	O
(	O
CLASSID	O
class_id	O
)	O
{	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_set_int	O
(	O
CLASSID	O
class_id	O
,	O
EDMA_CLASS_INTERFACE	pointer
class_int	O
)	O
{	O
return	O
-	int
1	int
;	O
}	O
ESint32	O
EDMAPROC	O
edma_class_set_impl	O
(	O
CLASSID	O
class_id	O
,	O
EDMA_CLASS_IMPLEMENTATION	pointer
class_int	O
)	O
{	O
return	O
-	int
1	int
;	O
}	O