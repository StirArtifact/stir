static	O
int	O
get_crlf_stream_size	function
(	O
mu_stream_t	O
str	pointer
,	O
mu_off_t	O
size	O
,	O
mu_off_t	O
*	O
prealsize	pointer
)	O
{	O
mu_stream_t	O
null	pointer
,	O
flt	O
;	O
mu_stream_stat_buffer	O
stat	O
;	O
int	O
rc	int
;	O
mu_off_t	O
needle	int
;	O
rc	O
=	O
mu_nullstream_create	int
(	O
&	pointer
null	pointer
,	O
MU_STREAM_WRITE	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_set_stat	O
(	O
null	pointer
,	O
MU_STREAM_STAT_MASK	int
(	O
MU_STREAM_STAT_OUT	pointer
)	O
,	O
stat	O
)	O
;	O
rc	O
=	O
mu_filter_create	int
(	O
&	pointer
flt	pointer
,	O
null	O
,	O
"CRLF"	int
,	O
MU_FILTER_ENCODE	int
,	O
MU_STREAM_WRITE	O
)	O
;	O
mu_stream_unref	O
(	O
null	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	O
=	O
mu_stream_seek	function
(	O
str	pointer
,	O
0	int
,	O
MU_SEEK_CUR	int
,	O
&	int
needle	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	O
=	O
mu_stream_copy	int
(	O
flt	pointer
,	O
str	pointer
,	O
size	int
,	O
NULL	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	O
=	O
mu_stream_seek	int
(	O
str	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	int
)	O
;	O
mu_stream_unref	O
(	O
flt	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
prealsize	pointer
=	O
stat	int
[	O
MU_STREAM_STAT_OUT	int
]	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_imap_append_stream_size	function
(	O
mu_imap_t	O
imap	O
,	O
const	O
char	O
*	O
mailbox	pointer
,	O
int	O
flags	int
,	O
struct	O
tm	struct
*	O
tm	pointer
,	O
struct	O
mu_timezone	struct
*	O
tz	pointer
,	O
mu_stream_t	O
stream	O
,	O
mu_off_t	O
size	O
)	O
{	O
int	O
status	int
;	O
mu_off_t	O
realsize	O
;	O
if	O
(	O
imap	O
==	O
NULL	O
||	O
!	int
mailbox	int
||	O
!	O
stream	O
||	O
size	O
==	O
0	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
imap	O
->	O
io	pointer
)	O
return	O
MU_ERR_NO_TRANSPORT	O
;	O
if	O
(	O
imap	O
->	O
session_state	int
<	O
MU_IMAP_SESSION_AUTH	int
)	O
return	O
MU_ERR_SEQ	O
;	O
switch	O
(	O
imap	O
->	O
client_state	int
)	O
{	O
case	O
MU_IMAP_CLIENT_READY	O
:	O
status	O
=	O
get_crlf_stream_size	int
(	O
stream	pointer
,	O
size	O
,	O
&	int
realsize	pointer
)	O
;	O
if	O
(	O
status	O
)	O
return	O
status	O
;	O
status	O
=	O
_mu_imap_tag_next	int
(	O
imap	pointer
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
status	O
=	O
mu_imapio_printf	int
(	O
imap	pointer
->	O
io	pointer
,	O
"%s APPEND "	pointer
,	O
imap	pointer
->	O
tag_str	pointer
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
status	O
=	O
mu_imapio_send_qstring	int
(	O
imap	pointer
->	O
io	pointer
,	O
mailbox	pointer
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
if	O
(	O
flags	O
)	O
{	O
status	O
=	O
mu_imapio_send	int
(	O
imap	pointer
->	O
io	pointer
,	O
" "	pointer
,	O
1	int
)	O
;	O
if	O
(	O
status	O
==	O
0	int
)	O
status	O
=	O
mu_imapio_send_flags	int
(	O
imap	pointer
->	O
io	pointer
,	O
flags	pointer
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
}	O
if	O
(	O
tm	O
)	O
{	O
status	O
=	O
mu_imapio_send	int
(	O
imap	pointer
->	O
io	pointer
,	O
" "	pointer
,	O
1	int
)	O
;	O
if	O
(	O
status	O
==	O
0	int
)	O
status	O
=	O
mu_imapio_send_time	int
(	O
imap	pointer
->	O
io	pointer
,	O
tm	pointer
,	O
tz	pointer
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
}	O
status	O
=	O
mu_imapio_send	function
(	O
imap	pointer
->	O
io	pointer
,	O
" "	pointer
,	O
1	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_stream_t	O
flt	pointer
;	O
status	pointer
=	O
mu_filter_create	int
(	O
&	pointer
flt	pointer
,	O
stream	O
,	O
"CRLF"	O
,	O
MU_FILTER_ENCODE	int
,	O
MU_STREAM_READ	O
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	O
=	O
mu_imapio_send_literal_stream	int
(	O
imap	pointer
->	O
io	pointer
,	O
flt	pointer
,	O
realsize	int
)	O
;	O
mu_stream_unref	O
(	O
flt	pointer
)	O
;	O
}	O
}	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	O
,	O
status	int
)	O
;	O
status	O
=	O
mu_imapio_send	int
(	O
imap	pointer
->	O
io	pointer
,	O
"\r\n"	pointer
,	O
2	int
)	O
;	O
MU_IMAP_CHECK_ERROR	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
MU_IMAP_FCLR	O
(	O
imap	pointer
,	O
MU_IMAP_RESP	int
)	O
;	O
imap	O
->	O
client_state	int
=	O
MU_IMAP_CLIENT_APPEND_RX	int
;	O
case	pointer
MU_IMAP_CLIENT_APPEND_RX	O
:	O
status	O
=	O
_mu_imap_response	int
(	O
imap	pointer
,	O
NULL	int
,	O
NULL	int
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
switch	O
(	O
imap	int
->	O
response	int
)	O
{	O
case	O
MU_IMAP_OK	O
:	O
status	O
=	O
0	int
;	O
break	O
;	O
case	O
MU_IMAP_NO	int
:	O
status	O
=	O
MU_ERR_FAILURE	int
;	O
break	O
;	O
case	O
MU_IMAP_BAD	int
:	O
status	O
=	O
MU_ERR_BADREPLY	int
;	O
break	O
;	O
}	O
imap	O
->	O
client_state	pointer
=	O
MU_IMAP_CLIENT_READY	int
;	O
break	O
;	O
default	O
:	O
status	O
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	O
;	O
}	O