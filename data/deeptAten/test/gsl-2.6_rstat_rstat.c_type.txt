gsl_rstat_workspace	O
*	O
gsl_rstat_alloc	function
(	O
void	O
)	O
{	O
gsl_rstat_workspace	O
*	O
w	pointer
;	O
w	O
=	O
calloc	O
(	O
1	int
,	O
sizeof	O
(	O
gsl_rstat_workspace	O
)	O
)	O
;	O
if	O
(	O
w	O
==	O
0	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for workspace"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
w	O
->	O
median_workspace_p	pointer
=	O
gsl_rstat_quantile_alloc	O
(	O
0.5	pointer
)	O
;	O
if	O
(	O
w	pointer
->	O
median_workspace_p	pointer
==	O
0	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for median workspace"	pointer
,	O
GSL_ENOMEM	pointer
)	O
;	O
}	O
gsl_rstat_reset	O
(	O
w	O
)	O
;	O
return	O
w	int
;	O
}	O
void	O
gsl_rstat_free	function
(	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
if	O
(	O
w	O
->	O
median_workspace_p	pointer
)	O
gsl_rstat_quantile_free	O
(	O
w	pointer
->	O
median_workspace_p	pointer
)	O
;	O
free	O
(	O
w	pointer
)	O
;	O
}	O
size_t	O
gsl_rstat_n	O
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
return	O
w	int
->	O
n	pointer
;	O
}	O
int	O
gsl_rstat_add	function
(	O
const	O
double	O
x	O
,	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
double	O
delta	double
=	O
x	O
-	O
w	int
->	O
mean	pointer
;	O
double	O
delta_n	double
,	O
delta_nsq	O
,	O
term1	O
,	O
n	O
;	O
if	O
(	O
w	O
->	O
n	pointer
==	O
0	int
)	O
{	O
w	O
->	O
min	pointer
=	O
x	O
;	O
w	pointer
->	O
max	pointer
=	O
x	int
;	O
}	pointer
else	O
{	O
if	O
(	O
x	O
<	O
w	int
->	O
min	pointer
)	O
w	O
->	O
min	pointer
=	O
x	pointer
;	O
if	pointer
(	O
x	pointer
>	O
w	int
->	O
max	pointer
)	O
w	O
->	O
max	pointer
=	O
x	O
;	O
}	pointer
n	O
=	O
(	function
double	O
)	O
++	O
(	O
w	O
->	O
n	pointer
)	O
;	O
delta_n	O
=	O
delta	O
/	O
n	O
;	O
delta_nsq	O
=	O
delta_n	int
*	O
delta_n	O
;	O
term1	O
=	O
delta	int
*	O
delta_n	O
*	O
(	O
n	O
-	O
1.0	int
)	O
;	O
w	O
->	O
mean	pointer
+=	O
delta_n	int
;	O
w	pointer
->	O
M4	pointer
+=	O
term1	int
*	O
delta_nsq	O
*	O
(	O
n	O
*	O
n	O
-	O
3.0	int
*	O
n	O
+	O
3.0	int
)	O
+	O
6.0	int
*	O
delta_nsq	O
*	O
w	O
->	O
M2	pointer
-	O
4.0	int
*	O
delta_n	O
*	O
w	O
->	O
M3	pointer
;	O
w	O
->	O
M3	pointer
+=	O
term1	int
*	O
delta_n	O
*	O
(	O
n	O
-	O
2.0	int
)	O
-	O
3.0	int
*	O
delta_n	O
*	O
w	O
->	O
M2	pointer
;	O
w	O
->	O
M2	pointer
+=	O
term1	int
;	O
gsl_rstat_quantile_add	pointer
(	O
x	pointer
,	O
w	O
->	O
median_workspace_p	pointer
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
double	O
gsl_rstat_min	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
return	O
w	int
->	O
min	pointer
;	O
}	O
double	O
gsl_rstat_max	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
return	O
w	int
->	O
max	pointer
;	O
}	O
double	O
gsl_rstat_mean	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
return	O
w	int
->	O
mean	pointer
;	O
}	O
double	O
gsl_rstat_variance	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
if	O
(	O
w	O
->	O
n	pointer
>	O
1	int
)	O
{	O
double	O
n	double
=	O
(	O
double	O
)	O
w	O
->	O
n	double
;	O
return	O
(	int
w	O
->	O
M2	pointer
/	O
(	int
n	O
-	O
1.0	int
)	O
)	O
;	O
}	O
else	O
return	O
0.0	int
;	O
}	O
double	O
gsl_rstat_sd	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
double	O
var	double
=	O
gsl_rstat_variance	O
(	O
w	O
)	O
;	O
return	O
(	int
sqrt	O
(	O
var	O
)	O
)	O
;	O
}	O
double	O
gsl_rstat_rms	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
double	O
rms	double
=	O
0.0	O
;	O
if	O
(	O
w	O
->	O
n	pointer
>	O
0	int
)	O
{	O
double	O
mean	double
=	O
gsl_rstat_mean	O
(	O
w	pointer
)	O
;	O
double	O
sigma	double
=	O
gsl_rstat_sd	O
(	O
w	O
)	O
;	O
double	O
n	double
=	O
(	O
double	O
)	O
w	O
->	O
n	double
;	O
double	O
a	double
=	O
sqrt	O
(	O
(	double
n	O
-	O
1.0	int
)	O
/	O
n	int
)	O
;	O
rms	O
=	O
gsl_hypot	O
(	O
mean	double
,	O
a	O
*	O
sigma	double
)	O
;	O
}	O
return	O
rms	int
;	O
}	O
double	O
gsl_rstat_sd_mean	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
if	O
(	O
w	O
->	O
n	pointer
>	O
0	int
)	O
{	O
double	O
sd	double
=	O
gsl_rstat_sd	O
(	O
w	pointer
)	O
;	O
return	O
(	int
sd	O
/	O
sqrt	O
(	O
(	double
double	O
)	O
w	O
->	O
n	double
)	O
)	O
;	O
}	O
else	O
return	O
0.0	int
;	O
}	O
double	O
gsl_rstat_median	function
(	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
return	O
gsl_rstat_quantile_get	int
(	O
w	O
->	O
median_workspace_p	pointer
)	O
;	O
}	O
double	O
gsl_rstat_skew	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
if	O
(	O
w	O
->	O
n	pointer
>	O
0	int
)	O
{	O
double	O
n	double
=	O
(	O
double	O
)	O
w	O
->	O
n	double
;	O
double	O
fac	double
=	O
pow	O
(	O
n	O
-	O
1.0	int
,	O
1.5	O
)	O
/	O
n	int
;	O
return	O
(	int
(	O
fac	O
*	O
w	O
->	O
M3	double
)	O
/	O
pow	int
(	O
w	int
->	O
M2	double
,	O
1.5	int
)	O
)	O
;	O
}	O
else	O
return	O
0.0	int
;	O
}	O
double	O
gsl_rstat_kurtosis	function
(	O
const	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
if	O
(	O
w	O
->	O
n	pointer
>	O
0	int
)	O
{	O
double	O
n	double
=	O
(	O
double	O
)	O
w	O
->	O
n	double
;	O
double	O
fac	double
=	O
(	O
(	O
n	O
-	O
1.0	int
)	O
/	O
n	int
)	O
*	O
(	pointer
n	O
-	O
1.0	int
)	O
;	O
return	O
(	int
(	O
fac	O
*	O
w	O
->	O
M4	double
)	O
/	O
(	int
w	O
->	O
M2	pointer
*	O
w	O
->	O
M2	double
)	O
-	O
3.0	int
)	O
;	O
}	O
else	O
return	O
0.0	int
;	O
}	O
int	O
gsl_rstat_reset	function
(	O
gsl_rstat_workspace	O
*	O
w	pointer
)	O
{	O
int	O
status	int
;	O
w	O
->	O
min	pointer
=	O
0.0	pointer
;	O
w	O
->	O
max	pointer
=	O
0.0	int
;	O
w	pointer
->	O
mean	pointer
=	O
0.0	int
;	O
w	pointer
->	O
M2	pointer
=	O
0.0	int
;	O
w	pointer
->	O
M3	pointer
=	O
0.0	int
;	O
w	pointer
->	O
M4	pointer
=	O
0.0	int
;	O
w	pointer
->	O
n	pointer
=	O
0	int
;	O
status	O
=	O
gsl_rstat_quantile_reset	int
(	O
w	O
->	O
median_workspace_p	pointer
)	O
;	O
return	O
status	int
;	O
}	O