static	O
FILE	struct
*	O
bbin	pointer
=	O
0	int
,	O
*	O
bbout	pointer
=	O
0	int
;	O
short	O
rp_map	array
[	O
MAXPLAYERS	int
]	O
,	O
rm_map	array
[	O
MAXPROJECTILES	O
]	O
;	O
short	O
pp_map	array
[	O
MAXPLAYERS	int
]	O
,	O
pm_map	array
[	O
MAXPROJECTILES	O
]	O
;	O
static	O
char	O
*	O
no_room	pointer
=	O
"No room in player table to add another black box object.\n"	pointer
;	O
void	O
newBlackBoxCraft	function
(	O
int	O
id	char
,	O
int	O
type	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
register	O
craft	struct
*	O
c	pointer
;	O
register	O
int	O
i	int
,	O
max	int
;	O
register	O
short	O
*	O
p	pointer
;	O
if	O
(	O
type	pointer
!=	O
CT_PLANE	int
&&	O
type	pointer
!=	O
CT_DRONE	int
&&	O
type	pointer
!=	O
CT_MISSILE	int
&&	O
type	pointer
!=	O
CT_CANNON	int
)	O
{	O
printf	function
(	O
"Invalid craft type passed to newBlackBoxCraft()\n"	pointer
)	O
;	O
}	O
switch	O
(	O
type	pointer
)	O
{	O
case	O
CT_PLANE	int
:	O
case	O
CT_DRONE	int
:	O
if	O
(	O
(	O
i	int
=	O
newPlane	function
(	O
name	pointer
,	O
-	O
1	int
)	O
)	O
>=	O
0	int
)	O
{	O
c	pointer
=	O
&	O
ptbl	array
[	O
i	int
]	O
;	O
c	pointer
->	O
type	pointer
=	O
type	pointer
;	O
c	pointer
->	O
flags	short
=	O
FL_BLACK_BOX	O
;	O
strcpy	function
(	O
c	pointer
->	O
name	pointer
,	O
"black-box"	pointer
)	O
;	O
strcpy	function
(	O
c	pointer
->	O
display	pointer
,	O
"*none*"	pointer
)	O
;	O
pp_map	array
[	O
id	char
]	O
=	O
i	int
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
no_room	pointer
)	O
;	O
}	O
return	O
;	O
break	O
;	O
case	O
CT_MISSILE	int
:	O
case	O
CT_CANNON	int
:	O
c	pointer
=	O
mtbl	array
;	O
max	int
=	O
MAXPROJECTILES	O
;	O
p	pointer
=	O
rm_map	array
;	O
break	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
max	int
;	O
++	O
i	int
,	O
++	O
c	pointer
)	O
{	O
if	O
(	O
c	pointer
->	O
type	pointer
==	O
CT_FREE	int
)	O
{	O
c	pointer
->	O
type	pointer
=	O
type	pointer
;	O
c	pointer
->	O
flags	short
=	O
FL_BLACK_BOX	O
;	O
c	pointer
->	O
cinfo	pointer
=	O
lookupCraft	function
(	O
name	pointer
)	O
;	O
p	pointer
[	O
id	char
]	O
=	O
i	int
;	O
}	O
}	O
}	O
void	O
startBlackBoxRecording	function
(	O
void	O
)	O
{	O
int	O
i	int
;	O
if	O
(	O
(	O
bbout	pointer
=	O
fopen	function
(	O
"./black_box_output"	pointer
,	O
"w"	pointer
)	O
)	O
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"unable to open black box recording file\n"	pointer
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAXPLAYERS	int
;	O
++	O
i	int
)	O
{	O
rp_map	array
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAXPROJECTILES	O
;	O
++	O
i	int
)	O
{	O
rm_map	array
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
}	O
void	O
endBlackBoxRecording	function
(	O
void	O
)	O
{	O
fclose	function
(	O
bbout	pointer
)	O
;	O
bbout	pointer
=	O
(	O
FILE	struct
*	O
)	O
NULL	O
;	O
}	O
void	O
startBlackBoxPlayback	function
(	O
void	O
)	O
{	O
int	O
i	int
;	O
if	O
(	O
(	O
bbin	pointer
=	O
fopen	function
(	O
"./black_box_input"	pointer
,	O
"r"	pointer
)	O
)	O
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"unable to open black box playback file\n"	pointer
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAXPLAYERS	int
;	O
++	O
i	int
)	O
{	O
pp_map	array
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAXPROJECTILES	O
;	O
++	O
i	int
)	O
{	O
pm_map	array
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
}	O
void	O
blackBoxInput	function
(	O
void	O
)	O
{	O
register	O
int	O
i	int
;	O
BBRecord	struct
rec	struct
;	O
craft	struct
*	O
c	pointer
;	O
if	O
(	O
bbin	pointer
)	O
{	O
while	O
(	O
fread	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
,	O
BB_HDR_SIZE	O
,	O
1	int
,	O
bbin	pointer
)	O
==	O
1	int
)	O
{	O
c	pointer
=	O
(	O
rec	struct
.	O
table	pointer
==	O
0	int
)	O
?	O
&	O
ptbl	array
[	O
pp_map	array
[	O
rec	struct
.	O
id	char
]	O
]	O
:	O
&	O
mtbl	array
[	O
pm_map	array
[	O
-	O
(	O
int	O
)	O
rec	struct
.	O
id	char
]	O
]	O
;	O
switch	O
(	O
rec	struct
.	O
rectype	char
)	O
{	O
case	O
BB_TYPE_SHORT_STATE	int
:	O
fread	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
,	O
sizeof	O
(	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
)	O
,	O
1	int
,	O
bbin	pointer
)	O
;	O
if	O
(	O
pp_map	array
[	O
rec	struct
.	O
id	char
]	O
==	O
-	O
1	int
)	O
break	O
;	O
c	pointer
->	O
prevSg	struct
=	O
c	pointer
->	O
Sg	struct
;	O
c	pointer
->	O
w	pointer
=	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
w	pointer
;	O
c	pointer
->	O
Sg	struct
=	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
Sg	struct
;	O
c	pointer
->	O
Cg	struct
=	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
Cg	struct
;	O
c	pointer
->	O
curRoll	double
=	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
roll	double
;	O
c	pointer
->	O
curPitch	double
=	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
pitch	double
;	O
c	pointer
->	O
curHeading	double
=	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
heading	double
;	O
break	O
;	O
case	O
BB_TYPE_ADD_OBJECT	int
:	O
fread	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
.	O
u	pointer
.	O
object	pointer
,	O
sizeof	O
(	O
rec	struct
.	O
u	pointer
.	O
object	pointer
)	O
,	O
1	int
,	O
bbin	pointer
)	O
;	O
newBlackBoxCraft	function
(	O
rec	struct
.	O
id	char
,	O
rec	struct
.	O
u	pointer
.	O
object	pointer
.	O
type	pointer
,	O
rec	struct
.	O
u	pointer
.	O
object	pointer
.	O
name	pointer
)	O
;	O
break	O
;	O
case	O
BB_TYPE_DELETE_OBJECT	int
:	O
pp_map	array
[	O
rec	struct
.	O
id	char
]	O
=	O
-	O
1	int
;	O
killPlayer	function
(	O
c	pointer
)	O
;	O
break	O
;	O
case	O
BB_TYPE_END_OF_FRAME	int
:	O
return	O
;	O
default	O
:	O
fprintf	function
(	O
stderr	pointer
,	O
"unknown rectype in black box recording: %d\n"	pointer
,	O
rec	struct
.	O
rectype	char
)	O
;	O
fclose	function
(	O
bbin	pointer
)	O
;	O
bbin	pointer
=	O
(	O
FILE	struct
*	O
)	O
NULL	O
;	O
break	O
;	O
}	O
}	O
fclose	function
(	O
bbin	pointer
)	O
;	O
bbin	pointer
=	O
(	O
FILE	struct
*	O
)	O
NULL	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAXPLAYERS	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
pp_map	array
[	O
i	int
]	O
!=	O
-	O
1	int
)	O
killPlayer	function
(	O
&	O
ptbl	array
[	O
pp_map	array
[	O
i	int
]	O
]	O
)	O
;	O
}	O
}	O
}	O
void	O
blackBoxOutput	function
(	O
void	O
)	O
{	O
register	O
int	O
i	int
;	O
register	O
craft	struct
*	O
c	pointer
;	O
BBRecord	struct
rec	struct
;	O
if	O
(	O
bbout	pointer
)	O
{	O
for	O
(	O
i	int
=	O
0	int
,	O
c	pointer
=	O
ptbl	array
;	O
i	int
<	O
MAXPLAYERS	int
;	O
++	O
i	int
,	O
++	O
c	pointer
)	O
{	O
if	O
(	O
c	pointer
->	O
type	pointer
!=	O
CT_FREE	int
)	O
{	O
if	O
(	O
rp_map	array
[	O
i	int
]	O
==	O
-	O
1	int
)	O
{	O
rp_map	array
[	O
i	int
]	O
=	O
i	int
;	O
rec	struct
.	O
rectype	char
=	O
BB_TYPE_ADD_OBJECT	int
;	O
rec	struct
.	O
table	pointer
=	O
0	int
;	O
rec	struct
.	O
id	char
=	O
i	int
;	O
rec	struct
.	O
u	pointer
.	O
object	pointer
.	O
type	pointer
=	O
c	pointer
->	O
type	pointer
;	O
strcpy	function
(	O
rec	struct
.	O
u	pointer
.	O
object	pointer
.	O
name	pointer
,	O
c	pointer
->	O
cinfo	pointer
->	O
name	pointer
)	O
;	O
fwrite	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
,	O
BB_HDR_SIZE	O
,	O
1	int
,	O
bbout	pointer
)	O
;	O
fwrite	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
.	O
u	pointer
.	O
object	pointer
,	O
sizeof	O
(	O
rec	struct
.	O
u	pointer
.	O
object	pointer
)	O
,	O
1	int
,	O
bbout	pointer
)	O
;	O
}	O
rec	struct
.	O
rectype	char
=	O
BB_TYPE_SHORT_STATE	int
;	O
rec	struct
.	O
table	pointer
=	O
0	int
;	O
rec	struct
.	O
id	char
=	O
i	int
;	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
w	pointer
=	O
c	pointer
->	O
w	pointer
;	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
Sg	struct
=	O
c	pointer
->	O
Sg	struct
;	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
Cg	struct
=	O
c	pointer
->	O
Cg	struct
;	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
roll	double
=	O
c	pointer
->	O
curRoll	double
;	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
pitch	double
=	O
c	pointer
->	O
curPitch	double
;	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
.	O
heading	double
=	O
c	pointer
->	O
curHeading	double
;	O
fwrite	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
,	O
BB_HDR_SIZE	O
,	O
1	int
,	O
bbout	pointer
)	O
;	O
fwrite	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
.	O
u	pointer
.	O
object	pointer
,	O
sizeof	O
(	O
rec	struct
.	O
u	pointer
.	O
short_state	struct
)	O
,	O
1	int
,	O
bbout	pointer
)	O
;	O
}	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAXPROJECTILES	O
;	O
++	O
i	int
)	O
{	O
rm_map	array
[	O
i	int
]	O
=	O
-	O
1	int
;	O
}	O
rec	struct
.	O
rectype	char
=	O
BB_TYPE_END_OF_FRAME	int
;	O
rec	struct
.	O
id	char
=	O
0	int
;	O
fwrite	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
,	O
BB_HDR_SIZE	O
,	O
1	int
,	O
bbout	pointer
)	O
;	O
}	O
}	O
void	O
blackBoxKillPlayer	function
(	O
int	O
id	char
)	O
{	O
BBRecord	struct
rec	struct
;	O
if	O
(	O
bbout	pointer
)	O
{	O
rec	struct
.	O
rectype	char
=	O
BB_TYPE_DELETE_OBJECT	int
;	O
rec	struct
.	O
id	char
=	O
id	char
;	O
fwrite	function
(	O
(	O
char	O
*	O
)	O
&	O
rec	struct
,	O
BB_HDR_SIZE	O
,	O
1	int
,	O
bbout	pointer
)	O
;	O
}	O
}	O
