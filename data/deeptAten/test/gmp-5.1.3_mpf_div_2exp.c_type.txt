void	O
mpf_div_2exp	O
(	O
mpf_ptr	O
r	O
,	O
mpf_srcptr	O
u	O
,	O
mp_bitcnt_t	pointer
exp	O
)	O
{	O
mp_srcptr	O
up	pointer
;	O
mp_ptr	O
rp	O
=	O
r	pointer
->	O
_mp_d	int
;	O
mp_size_t	O
usize	O
;	O
mp_size_t	O
abs_usize	O
;	O
mp_size_t	O
prec	O
=	O
r	int
->	O
_mp_prec	long
;	O
mp_exp_t	O
uexp	O
=	O
u	pointer
->	O
_mp_exp	pointer
;	O
usize	O
=	O
u	pointer
->	O
_mp_size	pointer
;	O
if	O
(	O
UNLIKELY	O
(	O
usize	long
==	O
0	O
)	O
)	O
{	O
r	O
->	O
_mp_size	int
=	O
0	int
;	O
r	O
->	O
_mp_exp	long
=	O
0	int
;	O
return	O
;	int
}	O
abs_usize	O
=	O
ABS	O
(	O
usize	O
)	O
;	O
up	O
=	O
u	O
->	O
_mp_d	pointer
;	O
if	O
(	O
exp	O
%	O
GMP_NUMB_BITS	O
==	O
0	O
)	O
{	O
prec	O
++	O
;	O
if	O
(	O
abs_usize	O
>	O
prec	int
)	O
{	O
up	O
+=	O
abs_usize	O
-	O
prec	int
;	O
abs_usize	O
=	O
prec	int
;	O
}	O
if	O
(	O
rp	O
!=	O
up	O
)	O
MPN_COPY_INCR	O
(	O
rp	pointer
,	O
up	pointer
,	O
abs_usize	pointer
)	O
;	O
r	O
->	O
_mp_exp	int
=	O
uexp	int
-	O
exp	int
/	O
GMP_NUMB_BITS	int
;	O
}	O
else	O
{	O
mp_limb_t	O
cy_limb	O
;	O
mp_size_t	O
adj	O
;	O
if	O
(	O
abs_usize	O
>	O
prec	int
)	O
{	O
up	O
+=	O
abs_usize	O
-	O
prec	int
;	O
abs_usize	O
=	O
prec	int
;	O
cy_limb	O
=	O
mpn_rshift	int
(	O
rp	pointer
+	O
1	int
,	O
up	int
,	O
abs_usize	pointer
,	O
exp	pointer
%	O
GMP_NUMB_BITS	O
)	O
;	O
rp	O
[	O
0	int
]	O
=	O
cy_limb	int
;	O
adj	O
=	O
rp	int
[	O
abs_usize	int
]	O
!=	O
0	O
;	O
}	O
else	O
{	O
cy_limb	O
=	O
mpn_lshift	O
(	O
rp	pointer
,	O
up	O
,	O
abs_usize	pointer
,	O
GMP_NUMB_BITS	pointer
-	O
exp	int
%	O
GMP_NUMB_BITS	O
)	O
;	O
rp	O
[	O
abs_usize	int
]	O
=	O
cy_limb	pointer
;	O
adj	O
=	O
cy_limb	int
!=	O
0	O
;	O
}	O
abs_usize	O
+=	O
adj	O
;	O
r	O
->	O
_mp_exp	long
=	O
uexp	int
-	O
exp	int
/	O
GMP_NUMB_BITS	int
-	O
1	int
+	O
adj	int
;	O
}	O
r	O
->	O
_mp_size	long
=	O
usize	int
>=	O
0	O
?	O
abs_usize	int
:	O
-	O
abs_usize	int
;	O
}	O