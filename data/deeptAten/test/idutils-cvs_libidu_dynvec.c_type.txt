struct	O
dynvec	O
*	O
make_dynvec	O
(	O
int	O
n	O
)	O
{	O
struct	O
dynvec	struct
*	O
dv	pointer
=	O
xmalloc	O
(	O
sizeof	O
(	O
struct	pointer
dynvec	struct
)	O
*	O
1	pointer
)	O
;	O
dv	O
->	O
dv_vec	pointer
=	O
xmalloc	O
(	O
sizeof	O
(	O
void	pointer
*	O
)	O
*	O
n	pointer
)	O
;	O
dv	O
->	O
dv_capacity	pointer
=	O
n	O
;	O
dv	O
->	O
dv_fill	pointer
=	O
0	O
;	O
return	O
dv	int
;	O
}	O
void	O
dynvec_free	O
(	O
struct	O
dynvec	struct
*	O
dv	pointer
)	O
{	O
free	O
(	O
dv	O
->	O
dv_vec	pointer
)	O
;	O
free	O
(	O
dv	O
)	O
;	O
}	O
void	O
dynvec_freeze	O
(	O
struct	O
dynvec	struct
*	O
dv	pointer
)	O
{	O
if	O
(	O
dv	O
->	O
dv_fill	pointer
==	O
dv	O
->	O
dv_capacity	pointer
)	O
return	O
;	O
dv	O
->	O
dv_capacity	pointer
=	O
dv	O
->	O
dv_fill	pointer
;	O
dv	O
->	O
dv_vec	pointer
=	O
xrealloc	O
(	O
dv	pointer
->	O
dv_vec	pointer
,	O
sizeof	O
(	O
void	pointer
*	O
)	O
*	O
dv	pointer
->	O
dv_capacity	O
)	O
;	O
}	O
void	O
dynvec_append	O
(	O
struct	O
dynvec	struct
*	O
dv	pointer
,	O
void	O
*	O
element	pointer
)	O
{	O
if	O
(	O
dv	O
->	O
dv_fill	pointer
==	O
dv	O
->	O
dv_capacity	pointer
)	O
{	O
dv	O
->	O
dv_capacity	pointer
*=	O
2	O
;	O
dv	O
->	O
dv_vec	pointer
=	O
xrealloc	O
(	O
dv	pointer
->	O
dv_vec	pointer
,	O
sizeof	O
(	O
void	pointer
*	O
)	O
*	O
dv	pointer
->	O
dv_capacity	O
)	O
;	O
}	O
dv	O
->	O
dv_vec	struct
[	O
dv	O
->	O
dv_fill	pointer
++	O
]	O
=	O
element	pointer
;	O
}	O