const	O
char	O
prott_rcsid	O
[	O
]	O
=	O
"$Id: prott.c,v 1.32 2002/03/05 19:10:41 ian Rel $"	O
;	O
static	O
char	O
*	O
zTbuf	pointer
;	O
static	O
boolean	O
fTfile	int
;	O
static	O
int	O
cTtimeout	function
=	O
120	O
;	O
struct	O
uuconf_cmdtab	struct
asTproto_params	O
[	O
]	O
=	O
{	O
{	O
"timeout"	O
,	O
UUCONF_CMDTABTYPE_INT	int
,	O
(	int
pointer	O
)	O
&	pointer
cTtimeout	struct
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	int
,	O
NULL	int
}	O
}	O
;	O
static	O
boolean	O
ftprocess_data	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
boolean	O
*	int
pfexit	pointer
,	O
size_t	O
*	O
pcneed	pointer
)	O
)	O
;	O
boolean	O
ftstart	int
(	O
qdaemon	O
,	O
pzlog	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
*	pointer
pzlog	pointer
;	O
{	O
*	O
pzlog	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
fconn_set	O
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
PARITYSETTING_NONE	pointer
,	O
STRIPSETTING_EIGHTBITS	pointer
,	O
XONXOFF_OFF	pointer
)	O
)	O
return	O
FALSE	O
;	O
zTbuf	O
=	O
(	function
char	O
*	O
)	O
xmalloc	pointer
(	O
CTBUFSIZE	O
+	O
CTFRAMELEN	int
)	O
;	O
zTbuf	O
[	O
0	int
]	O
=	O
0	O
;	O
zTbuf	O
[	O
1	int
]	O
=	O
0	O
;	O
fTfile	O
=	O
FALSE	int
;	O
usysdep_sleep	O
(	O
2	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	O
ftshutdown	function
(	O
qdaemon	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
xfree	O
(	O
(	pointer
pointer	O
)	O
zTbuf	pointer
)	O
;	O
zTbuf	O
=	O
NULL	function
;	O
cTtimeout	O
=	O
120	O
;	O
return	O
TRUE	int
;	O
}	O
boolean	O
ftsendcmd	function
(	O
qdaemon	O
,	O
z	pointer
,	O
ilocal	int
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
z	pointer
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
{	O
size_t	O
clen	int
,	O
csend	int
;	O
char	O
*	O
zalc	pointer
;	O
boolean	O
fret	int
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"ftsendcmd: Sending command \"%s\""	int
,	O
z	int
)	O
;	O
clen	O
=	O
strlen	function
(	O
z	pointer
)	O
;	O
csend	O
=	O
(	int
(	O
clen	O
/	O
CTPACKSIZE	O
)	O
+	O
1	int
)	O
*	O
CTPACKSIZE	O
;	O
zalc	O
=	O
zbufalc	int
(	O
csend	int
)	O
;	O
memcpy	O
(	O
zalc	pointer
,	O
z	pointer
,	O
clen	O
)	O
;	O
if	O
(	O
csend	O
>	O
clen	int
)	O
bzero	O
(	O
zalc	O
+	O
clen	int
,	O
csend	int
-	O
clen	int
)	O
;	O
fret	O
=	O
fsend_data	O
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zalc	pointer
,	O
csend	pointer
,	O
TRUE	int
)	O
;	O
ubuffree	O
(	O
zalc	pointer
)	O
;	O
return	O
fret	O
;	O
}	O
char	O
*	O
ztgetspace	function
(	O
qdaemon	O
,	O
pclen	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
size_t	O
*	long
pclen	pointer
;	O
{	O
*	O
pclen	pointer
=	O
CTBUFSIZE	O
;	O
return	O
zTbuf	O
+	O
CTFRAMELEN	int
;	O
}	O
boolean	O
ftsenddata	O
(	O
qdaemon	O
,	O
zdata	pointer
,	O
cdata	O
,	O
ilocal	O
,	O
iremote	O
,	O
ipos	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
zdata	pointer
;	O
size_t	O
cdata	long
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
long	O
ipos	long
ATTRIBUTE_UNUSED	O
;	O
{	O
zdata	O
[	O
-	int
2	int
]	O
=	O
(	O
char	O
)	O
(	O
(	O
cdata	O
>>	O
8	O
)	O
&	O
0xff	O
)	O
;	O
zdata	O
[	O
-	int
1	int
]	O
=	O
(	O
char	O
)	O
(	O
cdata	O
&	O
0xff	int
)	O
;	O
return	O
fsend_data	O
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zdata	pointer
-	O
CTFRAMELEN	int
,	O
cdata	int
+	O
CTFRAMELEN	int
,	O
FALSE	int
)	O
;	O
}	O
static	O
boolean	O
ftprocess_data	function
(	O
qdaemon	O
,	O
pfexit	O
,	O
pcneed	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
boolean	O
*	int
pfexit	pointer
;	O
size_t	O
*	long
pcneed	pointer
;	O
{	O
int	O
cinbuf	int
,	O
cfirst	O
,	O
clen	O
;	O
*	O
pfexit	pointer
=	O
FALSE	O
;	O
cinbuf	O
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	O
<	O
0	O
)	O
cinbuf	O
+=	O
CRECBUFLEN	int
;	O
if	O
(	O
!	O
fTfile	O
)	O
{	O
while	O
(	O
cinbuf	int
>=	O
CTPACKSIZE	int
)	O
{	O
cfirst	O
=	O
CRECBUFLEN	int
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	O
>	O
CTPACKSIZE	O
)	O
cfirst	O
=	O
CTPACKSIZE	int
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"ftprocess_data: Got %d command bytes"	int
,	O
cfirst	int
)	O
;	O
if	O
(	O
!	O
fgot_data	O
(	O
qdaemon	pointer
,	O
abPrecbuf	int
+	O
iPrecstart	int
,	O
(	int
size_t	O
)	O
cfirst	O
,	O
abPrecbuf	O
,	O
(	O
size_t	O
)	O
CTPACKSIZE	O
-	O
cfirst	int
,	O
-	int
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	O
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	O
=	O
(	int
iPrecstart	O
+	O
CTPACKSIZE	int
)	O
%	O
CRECBUFLEN	int
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
cinbuf	O
-=	O
CTPACKSIZE	O
;	O
}	O
if	O
(	O
pcneed	O
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
CTPACKSIZE	int
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
while	O
(	O
cinbuf	O
>=	O
CTFRAMELEN	int
)	O
{	O
clen	O
=	O
(	int
(	O
(	O
(	O
(	O
(	O
(	O
abPrecbuf	O
[	O
iPrecstart	int
]	O
&	O
0xff	O
)	O
<<	O
8	int
)	O
+	O
(	int
abPrecbuf	O
[	O
(	int
iPrecstart	O
+	O
1	int
)	O
%	O
CRECBUFLEN	int
]	O
&	O
0xff	pointer
)	O
)	O
<<	O
8	int
)	O
+	O
(	int
abPrecbuf	int
[	O
(	int
iPrecstart	O
+	O
2	int
)	O
%	O
CRECBUFLEN	int
]	O
&	O
0xff	pointer
)	O
)	O
<<	O
8	int
)	O
+	O
(	int
abPrecbuf	int
[	O
(	int
iPrecstart	O
+	O
3	int
)	O
%	O
CRECBUFLEN	int
]	O
&	O
0xff	pointer
)	O
)	O
;	O
if	O
(	O
cinbuf	O
<	O
clen	O
+	O
CTFRAMELEN	int
)	O
{	O
if	O
(	O
pcneed	O
!=	O
NULL	O
)	O
*	O
pcneed	O
=	O
clen	int
+	O
CTFRAMELEN	int
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
iPrecstart	O
=	O
(	function
iPrecstart	O
+	O
CTFRAMELEN	int
)	O
%	O
CRECBUFLEN	int
;	O
cfirst	O
=	O
CRECBUFLEN	int
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	O
>	O
clen	O
)	O
cfirst	O
=	O
clen	int
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"ftprocess_data: Got %d data bytes"	int
,	O
clen	int
)	O
;	O
if	O
(	O
!	O
fgot_data	O
(	O
qdaemon	pointer
,	O
abPrecbuf	int
+	O
iPrecstart	int
,	O
(	int
size_t	O
)	O
cfirst	O
,	O
abPrecbuf	O
,	O
(	O
size_t	O
)	O
(	O
clen	O
-	O
cfirst	int
)	O
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	O
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	O
=	O
(	int
iPrecstart	O
+	O
clen	int
)	O
%	O
CRECBUFLEN	O
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
cinbuf	O
-=	O
clen	O
+	O
CTFRAMELEN	int
;	O
}	O
if	O
(	O
pcneed	O
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
CTFRAMELEN	int
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
boolean	O
ftwait	function
(	O
qdaemon	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
while	O
(	O
TRUE	O
)	O
{	O
boolean	O
fexit	int
;	O
size_t	O
cneed	O
,	O
crec	pointer
;	O
if	O
(	O
!	O
ftprocess_data	O
(	O
qdaemon	pointer
,	O
&	int
fexit	pointer
,	O
&	O
cneed	struct
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
fexit	O
)	O
return	O
TRUE	O
;	O
if	O
(	O
!	O
freceive_data	O
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
cneed	pointer
,	O
&	pointer
crec	pointer
,	O
cTtimeout	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
crec	O
==	O
0	O
)	O
{	O
ulog	O
(	O
LOG_ERROR	int
,	O
"Timed out waiting for data"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
boolean	O
ftfile	function
(	O
qdaemon	O
,	O
qtrans	O
,	O
fstart	O
,	O
fsend	O
,	O
cbytes	O
,	O
pfhandled	O
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
ATTRIBUTE_UNUSED	O
;	O
boolean	O
fstart	int
;	O
boolean	O
fsend	int
;	O
long	O
cbytes	O
ATTRIBUTE_UNUSED	O
;	O
boolean	O
*	int
pfhandled	pointer
;	O
{	O
*	O
pfhandled	pointer
=	O
FALSE	O
;	O
if	O
(	O
!	O
fsend	O
)	O
fTfile	O
=	O
fstart	int
;	O
return	O
TRUE	int
;	O
}	O