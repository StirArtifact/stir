void	O
aes_invert_key	O
(	O
struct	O
aes_ctx	struct
*	O
dst	pointer
,	O
const	O
struct	O
aes_ctx	O
*	O
src	pointer
)	O
{	O
switch	O
(	O
src	O
->	O
key_size	pointer
)	O
{	O
default	O
:	O
abort	O
(	O
)	O
;	O
case	O
AES128_KEY_SIZE	O
:	O
aes128_invert_key	O
(	O
&	O
dst	pointer
->	O
u	pointer
.	O
ctx128	pointer
,	O
&	O
src	pointer
->	O
u	pointer
.	O
ctx128	pointer
)	O
;	O
break	O
;	O
case	O
AES192_KEY_SIZE	O
:	O
aes192_invert_key	O
(	O
&	O
dst	pointer
->	O
u	pointer
.	O
ctx192	pointer
,	O
&	O
src	pointer
->	O
u	pointer
.	O
ctx192	pointer
)	O
;	O
break	O
;	O
case	O
AES256_KEY_SIZE	O
:	O
aes256_invert_key	O
(	O
&	O
dst	pointer
->	O
u	pointer
.	O
ctx256	pointer
,	O
&	O
src	pointer
->	O
u	pointer
.	O
ctx256	pointer
)	O
;	O
break	O
;	O
}	O
dst	O
->	O
key_size	pointer
=	O
src	O
->	O
key_size	pointer
;	O
}	O
void	O
aes_set_decrypt_key	O
(	O
struct	O
aes_ctx	struct
*	O
ctx	pointer
,	O
size_t	O
keysize	O
,	O
const	O
uint8_t	O
*	O
key	pointer
)	O
{	O
aes_set_encrypt_key	O
(	O
ctx	O
,	O
keysize	O
,	O
key	O
)	O
;	O
aes_invert_key	O
(	O
ctx	O
,	O
ctx	O
)	O
;	O
}	O