mp_limb_t	O
mpn_divrem	O
(	O
mp_ptr	O
qp	pointer
,	O
mp_size_t	pointer
qxn	O
,	O
mp_ptr	pointer
np	pointer
,	O
mp_size_t	pointer
nn	long
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	pointer
dn	long
)	O
{	O
ASSERT	O
(	O
qxn	pointer
>=	O
0	int
)	O
;	O
ASSERT	O
(	O
nn	O
>=	O
dn	int
)	O
;	O
ASSERT	O
(	O
dn	pointer
>=	O
1	int
)	O
;	O
ASSERT	O
(	O
dp	pointer
[	O
dn	int
-	O
1	int
]	O
&	O
GMP_NUMB_HIGHBIT	pointer
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
np	pointer
,	O
nn	pointer
,	O
dp	pointer
,	O
dn	int
)	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	pointer
(	O
qp	pointer
,	O
nn	pointer
-	O
dn	int
+	O
qxn	int
,	O
np	int
,	O
nn	pointer
)	O
||	O
qp	O
==	O
np	O
+	O
dn	int
+	O
qxn	int
)	O
;	O
ASSERT	O
(	O
!	pointer
MPN_OVERLAP_P	pointer
(	O
qp	pointer
,	O
nn	pointer
-	O
dn	int
+	O
qxn	int
,	O
dp	int
,	O
dn	int
)	O
)	O
;	O
ASSERT_MPN	O
(	O
np	pointer
,	O
nn	pointer
)	O
;	O
ASSERT_MPN	O
(	O
dp	pointer
,	O
dn	int
)	O
;	O
if	O
(	O
dn	O
==	O
1	O
)	O
{	O
mp_limb_t	O
ret	O
;	O
mp_ptr	O
q2p	pointer
;	O
mp_size_t	pointer
qn	long
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
q2p	O
=	O
TMP_ALLOC_LIMBS	O
(	O
nn	int
+	O
qxn	int
)	O
;	O
np	O
[	O
0	int
]	O
=	O
mpn_divrem_1	O
(	O
q2p	pointer
,	O
qxn	pointer
,	O
np	pointer
,	O
nn	long
,	O
dp	long
[	O
0	int
]	O
)	O
;	O
qn	O
=	O
nn	int
+	O
qxn	int
-	O
1	int
;	O
MPN_COPY	long
(	O
qp	pointer
,	O
q2p	pointer
,	O
qn	pointer
)	O
;	O
ret	O
=	O
q2p	int
[	O
qn	int
]	O
;	O
TMP_FREE	O
;	O
return	O
ret	int
;	O
}	O
else	O
if	O
(	O
dn	O
==	O
2	O
)	O
{	O
return	O
mpn_divrem_2	int
(	O
qp	pointer
,	O
qxn	O
,	O
np	int
,	O
nn	int
,	O
dp	O
)	O
;	O
}	O
else	O
{	O
mp_ptr	O
rp	pointer
,	O
q2p	pointer
;	O
mp_limb_t	O
qhl	long
;	O
mp_size_t	O
qn	long
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
if	O
(	O
UNLIKELY	long
(	O
qxn	int
!=	O
0	O
)	O
)	O
{	O
mp_ptr	O
n2p	pointer
;	O
n2p	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
nn	int
+	O
qxn	int
)	O
;	O
MPN_ZERO	O
(	O
n2p	pointer
,	O
qxn	pointer
)	O
;	O
MPN_COPY	O
(	O
n2p	pointer
+	O
qxn	int
,	O
np	pointer
,	O
nn	long
)	O
;	O
q2p	O
=	O
TMP_ALLOC_LIMBS	O
(	O
nn	int
-	O
dn	int
+	O
qxn	int
+	O
1	int
)	O
;	O
rp	O
=	O
TMP_ALLOC_LIMBS	int
(	O
dn	int
)	O
;	O
mpn_tdiv_qr	O
(	O
q2p	pointer
,	O
rp	pointer
,	O
0L	int
,	O
n2p	pointer
,	O
nn	pointer
+	O
qxn	int
,	O
dp	int
,	O
dn	long
)	O
;	O
MPN_COPY	O
(	O
np	pointer
,	O
rp	pointer
,	O
dn	int
)	O
;	O
qn	O
=	O
nn	int
-	O
dn	int
+	O
qxn	int
;	O
MPN_COPY	pointer
(	O
qp	pointer
,	O
q2p	pointer
,	O
qn	pointer
)	O
;	O
qhl	O
=	O
q2p	O
[	O
qn	int
]	O
;	O
}	O
else	O
{	O
q2p	O
=	O
TMP_ALLOC_LIMBS	O
(	O
nn	int
-	O
dn	int
+	O
1	int
)	O
;	O
rp	O
=	O
TMP_ALLOC_LIMBS	int
(	O
dn	int
)	O
;	O
mpn_tdiv_qr	O
(	O
q2p	pointer
,	O
rp	pointer
,	O
0L	int
,	O
np	pointer
,	O
nn	int
,	O
dp	pointer
,	O
dn	int
)	O
;	O
MPN_COPY	O
(	O
np	pointer
,	O
rp	pointer
,	O
dn	int
)	O
;	O
qn	O
=	O
nn	int
-	O
dn	int
;	O
MPN_COPY	O
(	O
qp	pointer
,	O
q2p	pointer
,	O
qn	pointer
)	O
;	O
qhl	O
=	O
q2p	O
[	O
qn	int
]	O
;	O
}	O
TMP_FREE	O
;	O
return	O
qhl	int
;	O
}	O
}	O