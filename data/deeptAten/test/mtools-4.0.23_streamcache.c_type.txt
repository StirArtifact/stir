static	O
int	O
is_initialized	O
=	O
0	O
;	O
static	O
Stream_t	O
*	O
fss	O
[	O
256	O
]	O
;	O
static	O
void	O
finish_sc	O
(	O
void	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
256	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
fss	O
[	O
i	int
]	O
&&	O
fss	O
[	O
i	int
]	O
->	O
refs	pointer
!=	O
1	O
)	O
fprintf	O
(	O
stderr	pointer
,	O
"Streamcache allocation problem:%c %d\n"	pointer
,	O
i	pointer
,	O
fss	O
[	O
i	int
]	O
->	O
refs	pointer
)	O
;	O
FREE	O
(	O
&	O
(	pointer
fss	O
[	O
i	int
]	O
)	O
)	O
;	O
}	O
}	O
static	O
void	O
init_streamcache	O
(	O
void	O
)	O
{	O
int	O
i	int
;	O
if	O
(	O
is_initialized	O
)	O
return	O
;	int
is_initialized	O
=	O
1	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
256	int
;	O
i	int
++	O
)	O
fss	O
[	O
i	int
]	O
=	O
0	O
;	O
atexit	O
(	O
finish_sc	O
)	O
;	O
}	O
Stream_t	O
*	O
open_root_dir	function
(	O
unsigned	O
char	O
drive	O
,	O
int	O
flags	int
,	O
int	O
*	int
isRop	pointer
)	O
{	O
Stream_t	O
*	O
Fs	pointer
;	O
init_streamcache	O
(	O
)	O
;	O
drive	O
=	O
toupper	O
(	O
drive	O
)	O
;	O
if	O
(	O
fss	O
[	O
drive	int
]	O
)	O
Fs	O
=	O
fss	int
[	O
drive	int
]	O
;	O
else	O
{	O
Fs	O
=	O
fs_init	O
(	O
drive	pointer
,	O
flags	O
,	O
isRop	O
)	O
;	O
if	O
(	O
!	O
Fs	O
)	O
{	O
fprintf	O
(	O
stderr	pointer
,	O
"Cannot initialize '%c:'\n"	pointer
,	O
drive	pointer
)	O
;	O
return	O
NULL	int
;	O
}	O
fss	O
[	O
drive	O
]	O
=	O
Fs	O
;	O
}	O
return	O
OpenRoot	int
(	O
Fs	O
)	O
;	O
}	O