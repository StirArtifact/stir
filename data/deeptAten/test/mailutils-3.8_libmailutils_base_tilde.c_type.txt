char	O
*	O
mu_tilde_expansion	O
(	O
const	O
char	O
*	O
ref	pointer
,	O
int	O
delim	O
,	O
const	O
char	O
*	O
homedir	pointer
)	O
{	O
char	O
*	O
base	pointer
=	O
strdup	O
(	O
ref	O
)	O
;	O
char	O
*	O
home	pointer
=	O
NULL	O
;	O
char	O
*	O
proto	pointer
=	O
NULL	O
;	O
size_t	O
proto_len	O
=	O
0	pointer
;	O
char	O
*	O
p	pointer
;	O
if	O
(	O
!	O
base	pointer
)	O
return	O
NULL	O
;	O
for	O
(	O
p	O
=	O
base	int
;	O
*	O
p	pointer
&&	O
mu_isascii	O
(	O
*	pointer
p	pointer
)	O
&&	O
mu_isalnum	O
(	O
*	pointer
p	pointer
)	O
;	O
p	O
++	O
)	O
;	O
if	O
(	O
*	O
p	pointer
==	O
':'	O
)	O
{	O
p	O
++	O
;	O
proto_len	O
=	O
p	O
-	O
base	int
;	O
proto	O
=	O
malloc	O
(	O
proto_len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
proto	O
)	O
return	O
NULL	O
;	O
memcpy	O
(	O
proto	pointer
,	O
base	pointer
,	O
proto_len	O
)	O
;	O
proto	O
[	O
proto_len	int
]	O
=	O
0	O
;	O
if	O
(	O
*	O
p	pointer
==	O
delim	O
)	O
p	O
++	O
;	O
if	O
(	O
*	O
p	pointer
==	O
delim	O
)	O
p	O
++	O
;	O
}	O
else	O
p	O
=	O
base	O
;	O
if	O
(	O
*	O
p	pointer
==	O
'~'	O
)	O
{	O
p	O
++	O
;	O
if	O
(	O
*	O
p	pointer
==	O
delim	O
||	O
*	O
p	pointer
==	O
'\0'	O
)	O
{	O
char	O
*	O
s	pointer
;	O
if	O
(	O
!	O
homedir	pointer
)	O
{	O
home	O
=	O
mu_get_homedir	O
(	O
)	pointer
;	O
if	O
(	O
!	O
home	O
)	O
return	O
base	O
;	O
homedir	O
=	O
home	O
;	O
}	O
s	O
=	O
calloc	O
(	O
proto_len	int
+	O
strlen	int
(	O
homedir	pointer
)	O
+	O
strlen	int
(	O
p	pointer
)	O
+	O
1	int
,	O
1	O
)	O
;	O
if	O
(	O
proto_len	O
)	O
strcpy	O
(	O
s	pointer
,	O
proto	pointer
)	O
;	O
else	O
s	O
[	O
0	int
]	O
=	O
0	pointer
;	O
strcat	O
(	O
s	pointer
,	O
homedir	pointer
)	O
;	O
strcat	O
(	O
s	pointer
,	O
p	pointer
)	O
;	O
free	O
(	O
base	pointer
)	O
;	O
base	O
=	O
s	O
;	O
}	O
else	O
{	O
struct	O
mu_auth_data	struct
*	O
auth	pointer
;	O
char	O
*	O
s	pointer
=	O
p	O
;	O
char	O
*	O
name	pointer
;	O
while	O
(	O
*	O
s	pointer
&&	O
*	O
s	pointer
!=	O
delim	O
)	O
s	O
++	O
;	O
name	O
=	O
calloc	O
(	O
s	int
-	O
p	int
+	O
1	int
,	O
1	O
)	O
;	O
memcpy	O
(	O
name	pointer
,	O
p	pointer
,	O
s	pointer
-	O
p	int
)	O
;	O
name	O
[	O
s	int
-	O
p	int
]	O
=	O
'\0'	pointer
;	O
auth	pointer
=	O
mu_get_auth_by_name	O
(	O
name	pointer
)	O
;	O
free	O
(	O
name	pointer
)	O
;	O
if	O
(	O
auth	O
)	O
{	O
char	O
*	O
buf	pointer
=	O
calloc	O
(	O
proto_len	int
+	O
strlen	int
(	O
auth	pointer
->	O
dir	pointer
)	O
+	O
strlen	int
(	O
s	pointer
)	O
+	O
1	int
,	O
1	O
)	O
;	O
if	O
(	O
proto_len	O
)	O
strcpy	O
(	O
buf	pointer
,	O
proto	pointer
)	O
;	O
else	O
buf	O
[	O
0	int
]	O
=	O
0	pointer
;	O
strcat	pointer
(	O
buf	pointer
,	O
auth	pointer
->	O
dir	pointer
)	O
;	O
strcat	O
(	O
buf	pointer
,	O
s	pointer
)	O
;	O
free	O
(	O
base	pointer
)	O
;	O
base	O
=	O
buf	O
;	O
mu_auth_data_free	O
(	O
auth	pointer
)	O
;	O
}	O
}	O
}	O
if	O
(	O
home	O
)	O
free	O
(	O
home	pointer
)	O
;	O
return	O
base	int
;	O
}	O