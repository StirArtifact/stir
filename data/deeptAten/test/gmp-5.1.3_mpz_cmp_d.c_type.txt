int	O
mpz_cmp_d	O
(	O
mpz_srcptr	O
z	O
,	O
double	O
d	O
)	O
{	O
mp_limb_t	O
darray	O
[	O
LIMBS_PER_DOUBLE	int
]	O
,	O
zlimb	pointer
,	O
dlimb	pointer
;	O
mp_srcptr	O
zp	pointer
;	O
mp_size_t	O
zsize	long
;	O
int	O
dexp	int
,	O
ret	O
;	O
DOUBLE_NAN_INF_ACTION	O
(	O
d	O
,	O
__gmp_invalid_operation	pointer
(	O
)	pointer
,	O
goto	O
z_zero	O
)	O
;	O
zsize	O
=	O
SIZ	O
(	O
z	pointer
)	O
;	O
if	O
(	O
d	O
==	O
0.0	O
)	O
return	O
zsize	int
;	O
if	O
(	O
zsize	O
==	O
0	O
)	O
{	O
z_zero	O
:	O
return	O
(	O
d	O
<	O
0.0	O
?	O
1	O
:	O
-	O
1	int
)	O
;	O
}	O
if	O
(	O
zsize	O
>=	O
0	O
)	O
{	O
if	O
(	O
d	O
<	O
0.0	int
)	O
return	O
1	int
;	O
ret	O
=	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
d	O
>=	O
0.0	int
)	O
return	O
-	int
1	int
;	O
ret	O
=	O
-	int
1	int
;	O
d	O
=	O
-	O
d	int
;	O
zsize	O
=	O
-	O
zsize	int
;	O
}	O
if	O
(	O
d	O
<	O
1.0	int
)	O
return	O
ret	int
;	O
dexp	O
=	O
__gmp_extract_double	O
(	O
darray	pointer
,	O
d	O
)	O
;	O
ASSERT	O
(	O
dexp	O
>=	O
1	O
)	O
;	O
if	O
(	O
zsize	O
!=	O
dexp	O
)	O
return	O
(	int
zsize	O
>=	O
dexp	O
?	O
ret	O
:	O
-	O
ret	int
)	O
;	O
zp	O
=	O
PTR	O
(	O
z	pointer
)	O
;	O
RETURN_CMP	O
(	O
zp	O
[	O
zsize	int
-	O
1	int
]	O
,	O
darray	O
[	O
1	int
]	O
)	O
;	O
if	O
(	O
zsize	O
==	O
1	O
)	O
return	O
(	int
darray	O
[	O
0	int
]	O
!=	O
0	O
?	O
-	O
ret	int
:	O
0	O
)	O
;	O
RETURN_CMP	O
(	O
zp	O
[	O
zsize	int
-	O
2	int
]	O
,	O
darray	O
[	O
0	int
]	O
)	O
;	O
RETURN_NONZERO	O
(	O
zp	O
,	O
zsize	O
-	O
2	int
,	O
ret	O
)	O
;	O
}	O