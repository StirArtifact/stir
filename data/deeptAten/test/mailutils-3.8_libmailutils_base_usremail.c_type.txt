static	O
char	O
*	O
mu_user_email	function
=	O
0	O
;	O
int	O
mu_set_user_email	int
(	O
const	O
char	O
*	O
candidate	pointer
)	O
{	O
int	O
err	int
=	O
0	int
;	O
mu_address_t	O
addr	O
=	O
NULL	O
;	O
size_t	O
emailno	O
=	O
0	pointer
;	O
char	O
*	O
email	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
domain	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
candidate	pointer
)	O
{	O
free	O
(	O
mu_user_email	pointer
)	O
;	O
mu_user_email	O
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
(	O
err	O
=	O
mu_address_create	function
(	O
&	O
addr	pointer
,	O
candidate	O
)	O
)	O
!=	O
0	O
)	O
return	O
err	O
;	O
if	O
(	O
(	O
err	O
=	O
mu_address_get_email_count	O
(	O
addr	pointer
,	O
&	O
emailno	pointer
)	O
)	O
!=	O
0	O
)	O
goto	O
cleanup	O
;	O
if	O
(	O
emailno	O
!=	O
1	O
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
goto	O
cleanup	O
;	O
}	O
if	O
(	O
(	O
err	O
=	O
mu_address_aget_email	function
(	O
addr	pointer
,	O
1	pointer
,	O
&	O
email	pointer
)	O
)	O
!=	O
0	O
)	O
goto	O
cleanup	O
;	O
else	O
if	O
(	O
email	O
==	O
NULL	O
)	O
{	O
err	O
=	O
MU_ERR_NOENT	function
;	O
goto	O
cleanup	O
;	O
}	O
free	O
(	O
mu_user_email	pointer
)	O
;	O
mu_user_email	O
=	O
email	O
;	O
if	O
(	O
(	O
err	O
=	O
mu_address_sget_domain	int
(	O
addr	pointer
,	O
1	pointer
,	O
&	O
domain	pointer
)	O
)	O
!=	O
0	O
)	O
goto	O
cleanup	O
;	O
else	O
if	O
(	O
domain	O
==	O
NULL	O
)	O
{	O
err	O
=	O
MU_ERR_NOENT	function
;	O
goto	O
cleanup	O
;	O
}	O
mu_set_user_email_domain	O
(	O
domain	O
)	O
;	O
cleanup	O
:	O
mu_address_destroy	O
(	O
&	O
addr	pointer
)	O
;	O
return	O
err	int
;	O
}	O
static	O
char	O
*	O
mu_user_email_domain	function
=	O
0	O
;	O
int	O
mu_set_user_email_domain	int
(	O
const	O
char	O
*	O
domain	pointer
)	O
{	O
char	O
*	O
d	pointer
;	O
if	O
(	O
domain	O
)	O
{	O
d	O
=	O
strdup	O
(	O
domain	pointer
)	O
;	O
if	O
(	O
!	O
d	pointer
)	O
return	O
ENOMEM	O
;	O
}	O
else	O
d	O
=	O
NULL	function
;	O
if	O
(	O
mu_user_email_domain	O
)	O
free	O
(	O
mu_user_email_domain	pointer
)	O
;	O
mu_user_email_domain	O
=	O
d	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_get_user_email_domain	function
(	O
const	O
char	O
*	O
*	pointer
domain	pointer
)	O
{	O
int	O
err	int
=	O
0	int
;	O
if	O
(	O
!	O
mu_user_email_domain	pointer
)	O
{	O
if	O
(	O
(	O
err	O
=	O
mu_get_host_name	int
(	O
&	pointer
mu_user_email_domain	pointer
)	O
)	O
)	O
return	O
err	int
;	O
}	O
*	O
domain	function
=	O
mu_user_email_domain	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_aget_user_email_domain	function
(	O
char	O
*	O
*	pointer
pdomain	pointer
)	O
{	O
const	O
char	O
*	O
domain	pointer
;	O
int	O
status	int
=	O
mu_get_user_email_domain	int
(	O
&	O
domain	pointer
)	O
;	O
if	O
(	O
status	O
)	O
return	O
status	O
;	O
if	O
(	O
domain	O
==	O
NULL	O
)	O
*	O
pdomain	pointer
=	O
NULL	O
;	O
else	O
{	O
*	O
pdomain	pointer
=	O
strdup	O
(	O
domain	pointer
)	O
;	O
if	O
(	O
*	O
pdomain	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	O
;	O
}	O
return	O
0	O
;	O
}	O
char	O
*	O
mu_get_user_email	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
int	O
status	int
=	O
0	int
;	O
char	O
*	O
localpart	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
domainpart	pointer
=	O
NULL	O
;	O
char	O
*	O
email	pointer
=	O
NULL	O
;	O
char	O
*	O
tmpname	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
name	pointer
&&	O
mu_user_email	O
)	O
{	O
email	O
=	O
strdup	function
(	O
mu_user_email	pointer
)	O
;	O
if	O
(	O
!	O
email	pointer
)	O
errno	O
=	O
ENOMEM	int
;	O
return	O
email	O
;	O
}	O
if	O
(	O
!	O
name	pointer
)	O
{	O
struct	O
mu_auth_data	struct
*	O
auth	O
=	O
mu_get_auth_by_uid	O
(	O
geteuid	O
(	O
)	O
)	O
;	O
if	O
(	O
!	O
auth	pointer
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
NULL	O
;	O
}	O
name	O
=	O
tmpname	function
=	O
strdup	O
(	O
auth	pointer
->	O
name	pointer
)	O
;	O
if	O
(	O
auth	O
)	O
mu_auth_data_free	O
(	O
auth	pointer
)	O
;	O
if	O
(	O
!	O
name	pointer
)	O
{	O
errno	O
=	O
ENOMEM	int
;	O
return	O
NULL	int
;	O
}	O
}	O
status	O
=	O
mu_get_user_email_domain	function
(	O
&	pointer
domainpart	pointer
)	O
;	O
if	O
(	O
status	O
)	O
{	O
free	O
(	O
tmpname	pointer
)	O
;	O
errno	O
=	O
status	int
;	O
return	O
NULL	int
;	O
}	O
if	O
(	O
(	O
status	O
=	O
mu_parse822_quote_local_part	int
(	O
&	pointer
localpart	pointer
,	O
name	O
)	O
)	O
)	O
{	O
free	O
(	O
tmpname	pointer
)	O
;	O
errno	O
=	O
status	int
;	O
return	O
NULL	int
;	O
}	O
email	O
=	O
malloc	function
(	O
strlen	O
(	O
localpart	pointer
)	O
+	O
1	int
+	O
strlen	int
(	O
domainpart	pointer
)	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
email	pointer
)	O
errno	O
=	O
ENOMEM	int
;	O
else	O
sprintf	O
(	O
email	pointer
,	O
"%s@%s"	pointer
,	O
localpart	pointer
,	O
domainpart	pointer
)	O
;	O
free	O
(	O
tmpname	pointer
)	O
;	O
free	O
(	O
localpart	pointer
)	O
;	O
return	O
email	int
;	O
}	O