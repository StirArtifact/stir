error_t	O
fshelp_start_translator	O
(	O
fshelp_open_fn_t	O
underlying_open_fn	O
,	O
void	O
*	O
cookie	pointer
,	O
char	O
*	O
name	pointer
,	O
char	O
*	O
argz	pointer
,	O
int	O
argz_len	O
,	O
int	O
timeout	int
,	O
fsys_t	O
*	O
control	pointer
)	O
{	O
mach_port_t	O
ports	O
[	O
INIT_PORT_MAX	int
]	O
;	O
mach_port_t	O
fds	O
[	O
STDERR_FILENO	int
+	O
1	int
]	O
;	O
int	O
ints	int
[	O
INIT_INT_MAX	int
]	O
;	O
int	O
i	int
;	O
error_t	O
err	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
INIT_PORT_MAX	int
;	O
i	int
++	O
)	O
ports	O
[	O
i	int
]	O
=	O
MACH_PORT_NULL	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
STDERR_FILENO	int
+	O
1	int
;	O
i	O
++	O
)	O
fds	O
[	O
i	int
]	O
=	O
MACH_PORT_NULL	int
;	O
memset	O
(	O
ints	O
,	O
0	O
,	O
INIT_INT_MAX	O
*	O
sizeof	pointer
(	O
int	pointer
)	O
)	O
;	O
ports	O
[	O
INIT_PORT_CWDIR	O
]	O
=	O
getcwdir	O
(	O
)	pointer
;	O
ports	O
[	O
INIT_PORT_CRDIR	O
]	O
=	O
getcrdir	O
(	O
)	pointer
;	O
ports	O
[	O
INIT_PORT_AUTH	int
]	O
=	O
getauth	O
(	O
)	pointer
;	O
fds	O
[	O
STDERR_FILENO	int
]	O
=	O
getdport	O
(	O
STDERR_FILENO	pointer
)	O
;	O
err	O
=	O
fshelp_start_translator_long	int
(	O
underlying_open_fn	pointer
,	O
cookie	O
,	O
name	O
,	O
argz	O
,	O
argz_len	O
,	O
fds	O
,	O
MACH_MSG_TYPE_COPY_SEND	int
,	O
STDERR_FILENO	O
+	O
1	int
,	O
ports	O
,	O
MACH_MSG_TYPE_COPY_SEND	O
,	O
INIT_PORT_MAX	O
,	O
ints	O
,	O
INIT_INT_MAX	pointer
,	O
geteuid	O
(	O
)	pointer
,	O
timeout	O
,	O
control	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
INIT_PORT_MAX	int
;	O
i	int
++	O
)	O
mach_port_deallocate	O
(	O
mach_task_self	pointer
(	O
)	pointer
,	O
ports	O
[	O
i	int
]	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<=	O
STDERR_FILENO	O
;	O
i	O
++	O
)	O
mach_port_deallocate	O
(	O
mach_task_self	pointer
(	O
)	pointer
,	O
fds	O
[	O
i	int
]	O
)	O
;	O
return	O
err	int
;	O
}	O