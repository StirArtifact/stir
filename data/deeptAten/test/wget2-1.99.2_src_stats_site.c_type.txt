enum	O
{	O
STATS_METHOD_GET	int
=	O
1	int
,	O
STATS_METHOD_HEAD	int
=	O
2	int
,	O
STATS_METHOD_POST	int
=	O
3	int
,	O
}	int
;	O
typedef	O
struct	O
{	O
wget_iri	O
*	O
iri	pointer
;	O
long	O
long	O
size_downloaded	O
,	O
size_decompressed	O
;	O
long	O
long	long
request_start	O
;	O
long	O
long	long
response_end	O
;	O
long	O
long	long
initial_response_duration	O
;	O
unsigned	O
long	O
long	long
id	O
,	O
parent_id	O
;	O
int	O
status	int
,	O
signature_status	O
;	O
char	O
encoding	O
,	O
method	O
;	O
const	O
char	O
*	O
mime_type	pointer
;	O
bool	O
redirect	long
:	O
1	O
;	O
time_t	O
last_modified	long
;	O
}	O
site_stats_t	O
;	O
static	O
wget_vector	O
*	O
data	function
;	O
static	O
wget_thread_mutex	O
mutex	O
;	O
static	O
wget_hashmap	O
*	O
docs	pointer
;	O
static	O
FILE	O
*	O
fp	pointer
;	O
static	O
void	O
free_stats	function
(	O
void	O
*	O
stats	pointer
)	O
{	O
site_stats_t	O
*	O
s	pointer
=	O
stats	O
;	O
if	O
(	O
s	O
)	O
{	O
xfree	O
(	O
s	pointer
->	O
mime_type	pointer
)	O
;	O
xfree	O
(	O
s	pointer
)	O
;	O
}	O
}	O
void	O
site_stats_init	function
(	O
FILE	O
*	O
fpout	pointer
)	O
{	O
wget_thread_mutex_init	O
(	O
&	O
mutex	pointer
)	O
;	O
data	O
=	O
wget_vector_create	int
(	O
8	int
,	O
NULL	int
)	O
;	O
wget_vector_set_destructor	O
(	O
data	pointer
,	O
free_stats	int
)	O
;	O
fp	O
=	O
fpout	function
;	O
}	O
void	O
site_stats_exit	function
(	O
void	O
)	O
{	O
wget_stringmap_free	O
(	O
&	O
docs	pointer
)	O
;	O
wget_vector_free	O
(	O
&	O
data	pointer
)	O
;	O
wget_thread_mutex_destroy	O
(	O
&	O
mutex	pointer
)	O
;	O
}	O
void	O
stats_site_add	function
(	O
wget_http_response	O
*	O
resp	pointer
,	O
wget_gpg_info_t	O
*	O
gpg_info	pointer
)	O
{	O
JOB	O
*	O
job	pointer
=	O
resp	O
->	O
req	pointer
->	O
user_data	pointer
;	O
wget_iri	pointer
*	O
iri	pointer
=	O
job	O
->	O
iri	pointer
;	O
if	O
(	O
gpg_info	pointer
)	O
{	O
wget_thread_mutex_lock	O
(	O
mutex	pointer
)	O
;	O
if	O
(	O
!	pointer
docs	O
)	O
{	O
docs	function
=	O
wget_stringmap_create	function
(	O
128	pointer
)	O
;	O
wget_stringmap_set_key_destructor	O
(	O
docs	pointer
,	O
NULL	pointer
)	O
;	O
wget_stringmap_set_value_destructor	O
(	O
docs	pointer
,	O
NULL	pointer
)	O
;	O
for	O
(	O
int	int
it	O
=	O
0	int
;	O
it	int
<	O
wget_vector_size	int
(	O
data	pointer
)	O
;	O
it	O
++	O
)	O
{	O
site_stats_t	O
*	O
e	pointer
=	O
wget_vector_get	O
(	O
data	pointer
,	O
it	int
)	O
;	O
wget_stringmap_put	O
(	O
docs	pointer
,	O
e	pointer
->	O
iri	pointer
->	O
uri	pointer
,	O
e	pointer
)	O
;	O
}	O
}	O
char	O
*	O
p	function
,	O
*	O
uri	pointer
=	O
wget_strdup	O
(	O
iri	O
->	O
uri	pointer
)	O
;	O
if	O
(	O
(	pointer
p	O
=	O
strrchr	function
(	O
uri	pointer
,	O
'.'	pointer
)	O
)	O
)	O
*	O
p	pointer
=	O
0	O
;	O
site_stats_t	O
*	O
doc	pointer
;	O
wget_stringmap_get	pointer
(	O
docs	pointer
,	O
uri	pointer
,	O
&	int
doc	pointer
)	O
;	O
xfree	O
(	O
uri	pointer
)	O
;	O
if	O
(	O
doc	pointer
)	O
{	O
if	O
(	O
gpg_info	pointer
->	O
valid_sigs	pointer
)	O
doc	O
->	O
signature_status	pointer
=	O
1	pointer
;	O
else	pointer
if	O
(	O
gpg_info	pointer
->	O
invalid_sigs	pointer
)	O
doc	O
->	O
signature_status	pointer
=	O
2	pointer
;	O
else	pointer
if	O
(	O
gpg_info	pointer
->	O
bad_sigs	pointer
)	O
doc	O
->	O
signature_status	pointer
=	O
3	pointer
;	O
else	pointer
if	O
(	O
gpg_info	pointer
->	O
missing_sigs	pointer
)	O
doc	O
->	O
signature_status	pointer
=	O
4	pointer
;	O
wget_thread_mutex_unlock	pointer
(	O
mutex	pointer
)	O
;	O
return	O
;	int
}	O
wget_thread_mutex_unlock	O
(	O
mutex	pointer
)	O
;	O
}	O
site_stats_t	O
*	O
doc	function
=	O
wget_calloc	O
(	O
1	int
,	O
sizeof	O
(	O
site_stats_t	O
)	O
)	O
;	O
doc	O
->	O
id	pointer
=	O
job	O
->	O
id	pointer
;	O
doc	pointer
->	O
parent_id	pointer
=	O
job	pointer
->	O
parent_id	pointer
;	O
doc	pointer
->	O
iri	pointer
=	O
iri	int
;	O
doc	pointer
->	O
status	pointer
=	O
resp	pointer
->	O
code	pointer
;	O
doc	pointer
->	O
encoding	pointer
=	O
resp	pointer
->	O
content_encoding	pointer
;	O
doc	pointer
->	O
redirect	pointer
=	O
!	int
!	O
job	O
->	O
redirection_level	pointer
;	O
doc	pointer
->	O
mime_type	pointer
=	O
wget_strdup	int
(	O
resp	pointer
->	O
content_type	pointer
)	O
;	O
doc	O
->	O
last_modified	pointer
=	O
resp	O
->	O
last_modified	pointer
;	O
doc	pointer
->	O
request_start	pointer
=	O
resp	int
->	O
req	pointer
->	O
request_start	pointer
;	O
doc	pointer
->	O
response_end	pointer
=	O
resp	pointer
->	O
response_end	pointer
;	O
doc	pointer
->	O
initial_response_duration	pointer
=	O
resp	pointer
->	O
req	pointer
->	O
first_response_start	pointer
-	O
resp	int
->	O
req	pointer
->	O
request_start	pointer
;	O
doc	pointer
->	O
size_downloaded	pointer
=	O
resp	pointer
->	O
cur_downloaded	pointer
;	O
doc	pointer
->	O
size_decompressed	pointer
=	O
resp	pointer
->	O
body	pointer
->	O
length	pointer
;	O
if	pointer
(	O
!	pointer
wget_strcasecmp_ascii	pointer
(	O
resp	pointer
->	O
req	pointer
->	O
method	pointer
,	O
"GET"	pointer
)	O
)	O
{	O
doc	O
->	O
method	pointer
=	O
STATS_METHOD_GET	pointer
;	O
}	pointer
else	O
if	O
(	O
!	pointer
wget_strcasecmp_ascii	pointer
(	O
resp	pointer
->	O
req	pointer
->	O
method	pointer
,	O
"HEAD"	pointer
)	O
)	O
{	O
doc	O
->	O
size_downloaded	pointer
=	O
resp	pointer
->	O
content_length	pointer
;	O
doc	pointer
->	O
method	pointer
=	O
STATS_METHOD_HEAD	pointer
;	O
}	pointer
else	O
if	O
(	O
!	pointer
wget_strcasecmp_ascii	pointer
(	O
resp	pointer
->	O
req	pointer
->	O
method	pointer
,	O
"POST"	pointer
)	O
)	O
{	O
doc	O
->	O
method	pointer
=	O
STATS_METHOD_POST	pointer
;	O
}	pointer
wget_thread_mutex_lock	O
(	O
mutex	pointer
)	O
;	O
wget_vector_add	O
(	O
data	pointer
,	O
doc	pointer
)	O
;	O
if	O
(	O
docs	pointer
)	O
wget_stringmap_put	O
(	O
docs	pointer
,	O
doc	pointer
->	O
iri	pointer
->	O
uri	pointer
,	O
doc	pointer
)	O
;	O
wget_thread_mutex_unlock	O
(	O
mutex	pointer
)	O
;	O
}	O
static	O
int	O
print_human_entry	function
(	O
FILE	O
*	O
_fp	pointer
,	O
site_stats_t	O
*	O
doc	pointer
)	O
{	O
long	O
long	long
transfer_time	O
=	O
doc	O
->	O
response_end	pointer
-	O
doc	pointer
->	O
request_start	pointer
;	O
wget_fprintf	O
(	O
_fp	pointer
,	O
"  %6d %5lld %6lld %s\n"	pointer
,	O
doc	pointer
->	O
status	pointer
,	O
transfer_time	O
,	O
doc	int
->	O
size_downloaded	pointer
,	O
doc	pointer
->	O
iri	pointer
->	O
uri	pointer
)	O
;	O
return	O
0	O
;	O
}	O
static	O
int	O
print_csv_entry	function
(	O
FILE	O
*	O
_fp	pointer
,	O
site_stats_t	O
*	O
doc	pointer
)	O
{	O
long	O
long	long
transfer_time	O
=	O
doc	O
->	O
response_end	pointer
-	O
doc	pointer
->	O
request_start	pointer
;	O
wget_fprintf	O
(	O
_fp	pointer
,	O
"%llu,%llu,%s,%d,%d,%d,%lld,%lld,%lld,%lld,%d,%d,%ld,%s\n"	pointer
,	O
doc	pointer
->	O
id	pointer
,	O
doc	pointer
->	O
parent_id	pointer
,	O
doc	pointer
->	O
iri	pointer
->	O
uri	pointer
,	O
doc	pointer
->	O
status	pointer
,	O
!	pointer
doc	O
->	O
redirect	pointer
,	O
doc	pointer
->	O
method	pointer
,	O
doc	pointer
->	O
size_downloaded	pointer
,	O
doc	pointer
->	O
size_decompressed	pointer
,	O
transfer_time	pointer
,	O
doc	pointer
->	O
initial_response_duration	pointer
,	O
doc	pointer
->	O
encoding	pointer
,	O
doc	pointer
->	O
signature_status	pointer
,	O
doc	pointer
->	O
last_modified	pointer
,	O
doc	pointer
->	O
mime_type	pointer
)	O
;	O
return	O
0	O
;	O
}	O
static	O
void	O
print_human	function
(	O
void	O
)	O
{	O
wget_fprintf	O
(	O
fp	pointer
,	O
"\nSite Statistics:\n"	pointer
)	O
;	O
wget_fprintf	O
(	O
fp	pointer
,	O
"  %6s %5s %6s %s\n"	pointer
,	O
"Status"	pointer
,	O
"ms"	O
,	O
"Size"	O
,	O
"URL"	O
)	O
;	O
wget_vector_browse	O
(	O
data	pointer
,	O
(	int
wget_vector_browse_fn	O
*	O
)	O
print_human_entry	O
,	O
fp	O
)	O
;	O
}	O
static	O
void	O
print_csv	function
(	O
void	O
)	O
{	O
wget_fprintf	O
(	O
fp	pointer
,	O
"ID,ParentID,URL,Status,Link,Method,Size,SizeDecompressed,TransferTime,ResponseTime,Encoding,Verification,Last-Modified,Content-Type\n"	pointer
)	O
;	O
wget_vector_browse	O
(	O
data	pointer
,	O
(	int
wget_vector_browse_fn	O
*	O
)	O
print_csv_entry	pointer
,	O
fp	O
)	O
;	O
}	O
void	O
site_stats_print	function
(	O
void	O
)	O
{	O
if	O
(	O
config	O
.	O
stats_site_args	pointer
->	O
format	pointer
==	O
WGET_STATS_FORMAT_HUMAN	int
)	O
print_human	O
(	O
)	O
;	O
else	O
print_csv	O
(	O
)	pointer
;	O
}	O