struct	O
snmp_pdu	O
*	O
snmp_pdu_create	pointer
(	O
int	O
type	O
)	O
{	O
struct	O
snmp_pdu	struct
*	O
pdu	pointer
;	O
pdu	O
=	O
snmp_alloc	O
(	O
sizeof	O
(	O
*	pointer
pdu	pointer
)	O
)	O
;	O
pdu	O
->	O
type	pointer
=	O
type	O
;	O
pdu	O
->	O
req_id	pointer
=	O
0	int
;	O
pdu	O
->	O
err_stat	pointer
=	O
0	O
;	O
pdu	pointer
->	O
err_ind	pointer
=	O
0	O
;	O
pdu	pointer
->	O
var	pointer
=	O
NULL	O
;	O
return	pointer
pdu	int
;	O
}	O
void	O
snmp_pdu_free	function
(	O
struct	O
snmp_pdu	struct
*	O
pdu	pointer
)	O
{	O
if	O
(	O
!	O
pdu	pointer
)	O
return	O
;	O
snmp_var_free_list	O
(	O
pdu	pointer
->	O
var	pointer
)	O
;	O
snmp_free	O
(	O
pdu	pointer
)	O
;	O
}	O
void	O
snmp_pdu_add_var	function
(	O
struct	O
snmp_pdu	struct
*	O
pdu	pointer
,	O
struct	O
snmp_var	struct
*	O
var	pointer
)	O
{	O
var	O
->	O
next	pointer
=	O
pdu	pointer
->	O
var	pointer
;	O
pdu	O
->	O
var	pointer
=	O
var	pointer
;	O
}	pointer
u_char	O
*	O
snmp_pdu_decode	pointer
(	O
u_char	pointer
*	O
data	pointer
,	O
int	O
*	int
length	pointer
,	O
struct	O
snmp_pdu	struct
*	O
pdu	pointer
)	O
{	O
u_char	O
*	O
buf	pointer
=	O
data	O
;	O
u_char	O
type	O
;	O
buf	O
=	O
asn_decode_header	O
(	O
buf	pointer
,	O
length	pointer
,	O
&	pointer
pdu	pointer
->	O
type	pointer
)	O
;	O
if	O
(	O
!	O
buf	O
)	O
return	O
NULL	O
;	O
switch	O
(	O
pdu	O
->	O
type	pointer
)	O
{	O
case	O
SNMP_PDU_RESPONSE	O
:	O
case	O
SNMP_PDU_GET	O
:	O
case	O
SNMP_PDU_GETNEXT	O
:	O
case	O
SNMP_PDU_SET	O
:	O
buf	O
=	O
asn_decode_int	O
(	O
buf	pointer
,	O
length	pointer
,	O
&	pointer
type	pointer
,	O
&	O
pdu	pointer
->	O
req_id	pointer
,	O
sizeof	O
(	O
pdu	pointer
->	O
req_id	pointer
)	O
)	O
;	O
if	O
(	O
!	O
buf	O
)	O
break	O
;	O
buf	O
=	O
asn_decode_int	O
(	O
buf	pointer
,	O
length	pointer
,	O
&	pointer
type	pointer
,	O
&	O
pdu	pointer
->	O
err_stat	pointer
,	O
sizeof	O
(	O
pdu	pointer
->	O
err_stat	pointer
)	O
)	O
;	O
if	O
(	O
!	O
buf	O
)	O
break	O
;	O
buf	O
=	O
asn_decode_int	O
(	O
buf	pointer
,	O
length	pointer
,	O
&	pointer
type	pointer
,	O
&	O
pdu	pointer
->	O
err_ind	pointer
,	O
sizeof	O
(	O
pdu	pointer
->	O
err_ind	pointer
)	O
)	O
;	O
break	O
;	O
default	O
:	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_UNKNOWN_REQ	pointer
)	O
;	O
buf	O
=	O
NULL	O
;	O
}	O
return	O
buf	O
;	O
}	O
u_char	O
*	O
snmp_pdu_encode	function
(	O
u_char	pointer
*	O
data	pointer
,	O
int	O
*	int
length	pointer
,	O
struct	O
snmp_pdu	struct
*	O
pdu	pointer
)	O
{	O
u_char	O
*	O
buf	pointer
=	O
data	O
;	O
buf	O
=	O
asn_encode_int	O
(	O
buf	pointer
,	O
length	pointer
,	O
(	pointer
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_INTEGER	O
)	O
,	O
pdu	pointer
->	O
req_id	pointer
)	O
;	O
BAIL_OUT	O
;	O
buf	O
=	O
asn_encode_int	O
(	O
buf	pointer
,	O
length	pointer
,	O
(	pointer
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_INTEGER	O
)	O
,	O
pdu	pointer
->	O
err_stat	pointer
)	O
;	O
BAIL_OUT	O
;	O
buf	O
=	O
asn_encode_int	O
(	O
buf	pointer
,	O
length	pointer
,	O
(	pointer
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_INTEGER	O
)	O
,	O
pdu	pointer
->	O
err_ind	pointer
)	O
;	O
BAIL_OUT	O
;	O
return	O
buf	O
;	O
}	O