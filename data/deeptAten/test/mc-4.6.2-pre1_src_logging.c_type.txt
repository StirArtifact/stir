static	O
gboolean	O
is_logging_enabled	O
(	O
void	O
)	O
{	O
static	O
gboolean	O
logging_initialized	O
=	O
FALSE	O
;	O
static	O
gboolean	O
logging_enabled	O
=	O
FALSE	O
;	O
char	O
*	O
mc_ini	O
;	O
if	O
(	O
!	O
logging_initialized	O
)	O
{	O
mc_ini	O
=	O
g_strdup_printf	O
(	O
"%s/%s"	O
,	O
home_dir	O
,	O
PROFILE_NAME	O
)	O
;	O
logging_enabled	O
=	O
get_int	O
(	O
mc_ini	O
,	O
"development.enable_logging"	O
,	O
FALSE	O
)	O
;	O
g_free	O
(	O
mc_ini	O
)	O
;	O
logging_initialized	O
=	O
TRUE	O
;	O
}	O
return	O
logging_enabled	O
;	O
}	O
void	O
mc_log	O
(	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	O
args	O
;	O
FILE	O
*	O
f	pointer
;	O
char	O
*	O
logfilename	pointer
;	O
if	O
(	O
is_logging_enabled	O
(	O
)	pointer
)	O
{	O
va_start	O
(	O
args	O
,	O
fmt	O
)	O
;	O
logfilename	O
=	O
g_strdup_printf	O
(	O
"%s/.mc/log"	O
,	O
home_dir	O
)	O
;	O
if	O
(	O
(	O
f	O
=	O
fopen	int
(	O
logfilename	pointer
,	O
"a"	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
vfprintf	O
(	O
f	O
,	O
fmt	O
,	O
args	pointer
)	O
;	O
(	O
void	O
)	O
fclose	O
(	O
f	pointer
)	O
;	O
}	O
g_free	O
(	O
logfilename	O
)	O
;	O
}	O
}	O