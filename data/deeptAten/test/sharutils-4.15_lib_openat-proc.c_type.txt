char	O
*	O
openat_proc_name	O
(	O
char	O
buf	O
[	O
OPENAT_BUFFER_SIZE	O
]	O
,	O
int	O
fd	O
,	O
char	O
const	O
*	O
file	pointer
)	O
{	O
static	O
int	O
proc_status	int
=	O
0	O
;	O
if	O
(	O
!	O
*	O
file	pointer
)	O
{	O
buf	O
[	O
0	int
]	O
=	O
'\0'	pointer
;	O
return	O
buf	int
;	O
}	O
if	O
(	O
!	O
proc_status	O
)	O
{	O
int	O
proc_self_fd	int
=	O
open	int
(	O
"/proc/self/fd"	O
,	O
O_SEARCH	O
|	O
O_DIRECTORY	O
|	O
O_NOCTTY	O
|	O
O_NONBLOCK	O
)	O
;	O
if	O
(	O
proc_self_fd	O
<	O
0	O
)	O
proc_status	O
=	O
-	int
1	int
;	O
else	O
{	O
char	O
dotdot_buf	O
[	O
PROC_SELF_FD_NAME_SIZE_BOUND	O
(	O
sizeof	O
"../fd"	O
-	O
1	pointer
)	O
]	O
;	O
sprintf	O
(	O
dotdot_buf	pointer
,	O
PROC_SELF_FD_FORMAT	pointer
,	O
proc_self_fd	pointer
,	O
"../fd"	pointer
)	O
;	O
proc_status	O
=	O
access	O
(	O
dotdot_buf	O
,	O
F_OK	O
)	O
?	O
-	O
1	int
:	O
1	O
;	O
close	O
(	O
proc_self_fd	O
)	O
;	O
}	O
}	O
if	O
(	O
proc_status	O
<	O
0	O
)	O
return	O
NULL	int
;	O
else	O
{	O
size_t	O
bufsize	O
=	O
PROC_SELF_FD_NAME_SIZE_BOUND	int
(	O
strlen	pointer
(	O
file	pointer
)	O
)	O
;	O
char	O
*	O
result	O
=	O
buf	O
;	O
if	O
(	O
OPENAT_BUFFER_SIZE	O
<	O
bufsize	O
)	O
{	O
result	O
=	O
malloc	int
(	O
bufsize	int
)	O
;	O
if	O
(	O
!	O
result	O
)	O
return	O
NULL	int
;	O
}	O
sprintf	O
(	O
result	O
,	O
PROC_SELF_FD_FORMAT	O
,	O
fd	pointer
,	O
file	O
)	O
;	O
return	O
result	int
;	O
}	O
}	O