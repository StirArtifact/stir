static	O
void	O
__gmpz_cfdiv_q_2exp	O
(	O
REGPARM_3_1	O
(	O
mpz_ptr	O
,	O
mpz_srcptr	pointer
,	O
mp_bitcnt_t	pointer
,	O
int	int
)	int
)	O
REGPARM_ATTR	O
(	O
1	int
)	O
;	O
REGPARM_ATTR	O
(	O
1	O
)	O
static	O
void	O
cfdiv_q_2exp	O
(	O
mpz_ptr	O
w	O
,	O
mpz_srcptr	pointer
u	O
,	O
mp_bitcnt_t	pointer
cnt	O
,	O
int	pointer
dir	int
)	O
{	O
mp_size_t	O
wsize	long
,	O
usize	O
,	O
abs_usize	pointer
,	O
limb_cnt	pointer
,	O
i	long
;	O
mp_srcptr	O
up	pointer
;	O
mp_ptr	O
wp	pointer
;	O
mp_limb_t	pointer
round	long
,	O
rmask	pointer
;	O
usize	O
=	O
SIZ	pointer
(	O
u	pointer
)	O
;	O
abs_usize	O
=	O
ABS	O
(	O
usize	pointer
)	O
;	O
limb_cnt	O
=	O
cnt	O
/	O
GMP_NUMB_BITS	int
;	O
wsize	long
=	O
abs_usize	int
-	O
limb_cnt	int
;	O
if	O
(	O
wsize	long
<=	O
0	int
)	O
{	O
PTR	O
(	O
w	pointer
)	O
[	O
0	int
]	O
=	O
1	O
;	O
SIZ	O
(	O
w	pointer
)	O
=	O
(	int
usize	O
==	O
0	O
||	O
(	O
usize	O
^	O
dir	O
)	O
<	O
0	int
?	O
0	int
:	O
dir	O
)	O
;	O
return	O
;	int
}	O
MPZ_REALLOC	O
(	O
w	O
,	O
wsize	O
+	O
1	int
)	O
;	O
up	O
=	O
PTR	O
(	O
u	pointer
)	O
;	O
round	O
=	O
0	O
;	O
rmask	O
=	O
(	O
(	O
usize	O
^	O
dir	O
)	O
>=	O
0	int
?	O
MP_LIMB_T_MAX	int
:	O
0	O
)	O
;	O
if	O
(	O
rmask	O
!=	O
0	O
)	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
limb_cnt	int
&&	O
round	int
==	O
0	O
;	O
i	int
++	O
)	O
round	O
=	O
up	int
[	O
i	int
]	O
;	O
wp	O
=	O
PTR	pointer
(	O
w	pointer
)	O
;	O
cnt	O
%=	O
GMP_NUMB_BITS	O
;	O
if	O
(	O
cnt	long
!=	O
0	O
)	O
{	O
round	O
|=	O
rmask	O
&	O
mpn_rshift	int
(	O
wp	pointer
,	O
up	pointer
+	O
limb_cnt	int
,	O
wsize	pointer
,	O
cnt	pointer
)	O
;	O
wsize	O
-=	O
(	O
wp	O
[	O
wsize	int
-	O
1	int
]	O
==	O
0	O
)	O
;	O
}	O
else	O
MPN_COPY_INCR	O
(	O
wp	pointer
,	O
up	pointer
+	O
limb_cnt	pointer
,	O
wsize	pointer
)	O
;	O
if	O
(	O
round	O
!=	O
0	O
)	O
{	O
if	O
(	O
wsize	int
!=	O
0	O
)	O
{	O
mp_limb_t	O
cy	O
;	O
cy	O
=	O
mpn_add_1	O
(	O
wp	pointer
,	O
wp	pointer
,	O
wsize	pointer
,	O
CNST_LIMB	pointer
(	O
1	int
)	O
)	O
;	O
wp	O
[	O
wsize	O
]	O
=	O
cy	O
;	O
wsize	O
+=	O
cy	int
;	O
}	O
else	O
{	O
wp	O
[	O
0	int
]	O
=	O
1	O
;	O
wsize	O
=	O
1	int
;	O
}	O
}	O
SIZ	O
(	O
w	O
)	O
=	O
(	int
usize	O
>=	O
0	O
?	O
wsize	int
:	O
-	O
wsize	int
)	O
;	O
}	O
void	O
mpz_cdiv_q_2exp	function
(	O
mpz_ptr	O
w	O
,	O
mpz_srcptr	pointer
u	O
,	O
mp_bitcnt_t	pointer
cnt	O
)	O
{	O
cfdiv_q_2exp	O
(	O
w	pointer
,	O
u	pointer
,	O
cnt	pointer
,	O
1	int
)	O
;	O
}	O
void	O
mpz_fdiv_q_2exp	function
(	O
mpz_ptr	O
w	O
,	O
mpz_srcptr	pointer
u	O
,	O
mp_bitcnt_t	pointer
cnt	O
)	O
{	O
cfdiv_q_2exp	O
(	O
w	pointer
,	O
u	pointer
,	O
cnt	pointer
,	O
-	int
1	int
)	O
;	O
}	O