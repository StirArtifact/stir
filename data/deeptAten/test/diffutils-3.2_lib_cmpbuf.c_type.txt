size_t	O
block_read	O
(	O
int	O
fd	O
,	O
char	O
*	O
buf	pointer
,	O
size_t	O
nbytes	O
)	O
{	O
char	O
*	O
bp	pointer
=	O
buf	O
;	O
char	O
const	O
*	O
buflim	pointer
=	O
buf	O
+	O
nbytes	int
;	O
size_t	O
readlim	O
=	O
MIN	pointer
(	O
SSIZE_MAX	pointer
,	O
SIZE_MAX	pointer
)	O
;	O
do	O
{	O
size_t	O
bytes_remaining	O
=	O
buflim	pointer
-	O
bp	int
;	O
size_t	O
bytes_to_read	O
=	O
MIN	pointer
(	O
bytes_remaining	long
,	O
readlim	O
)	O
;	O
ssize_t	O
nread	O
=	O
read	int
(	O
fd	pointer
,	O
bp	O
,	O
bytes_to_read	pointer
)	O
;	O
if	O
(	O
nread	O
<=	O
0	O
)	O
{	O
if	O
(	O
nread	O
==	O
0	O
)	O
break	O
;	O
if	O
(	O
errno	O
==	O
EINVAL	O
&&	O
INT_MAX	O
<	O
bytes_to_read	int
)	O
{	O
readlim	O
=	O
INT_MAX	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
SA_RESTART	O
&&	O
errno	O
==	O
EINTR	O
)	O
continue	O
;	O
return	O
SIZE_MAX	int
;	O
}	O
bp	O
+=	O
nread	O
;	O
}	O
while	O
(	O
bp	O
<	O
buflim	O
)	O
;	O
return	O
bp	int
-	O
buf	int
;	O
}	O
size_t	O
buffer_lcm	O
(	O
size_t	O
a	O
,	O
size_t	O
b	O
,	O
size_t	pointer
lcm_max	O
)	O
{	O
size_t	O
lcm	O
,	O
m	O
,	O
n	O
,	O
q	O
,	O
r	pointer
;	O
if	O
(	O
!	long
a	O
)	O
return	O
b	int
?	O
b	O
:	O
8	O
*	O
1024	pointer
;	O
if	O
(	O
!	O
b	O
)	O
return	O
a	int
;	O
for	O
(	O
m	O
=	O
a	int
,	O
n	O
=	O
b	int
;	O
(	O
r	O
=	O
m	int
%	O
n	O
)	O
!=	O
0	O
;	O
m	O
=	O
n	O
,	O
n	O
=	O
r	int
)	O
continue	O
;	O
q	O
=	O
a	O
/	O
n	O
;	O
lcm	O
=	O
q	O
*	O
b	O
;	O
return	O
lcm	int
<=	O
lcm_max	O
&&	O
lcm	O
/	O
b	O
==	O
q	O
?	O
lcm	O
:	O
a	O
;	O
}	O