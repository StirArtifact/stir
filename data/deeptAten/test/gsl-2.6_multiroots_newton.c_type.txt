typedef	O
struct	O
{	O
gsl_matrix	O
*	O
lu	pointer
;	O
gsl_permutation	O
*	O
permutation	pointer
;	O
}	O
newton_state_t	O
;	O
static	O
int	O
newton_alloc	function
(	O
void	O
*	O
vstate	pointer
,	O
size_t	O
n	O
)	O
;	O
static	O
int	O
newton_set	function
(	O
void	O
*	O
vstate	pointer
,	O
gsl_multiroot_function_fdf	O
*	O
fdf	pointer
,	O
gsl_vector	O
*	O
x	pointer
,	O
gsl_vector	O
*	O
f	pointer
,	O
gsl_matrix	O
*	O
J	pointer
,	O
gsl_vector	O
*	O
dx	pointer
)	O
;	O
static	O
int	O
newton_iterate	function
(	O
void	O
*	O
vstate	pointer
,	O
gsl_multiroot_function_fdf	O
*	O
fdf	pointer
,	O
gsl_vector	O
*	O
x	pointer
,	O
gsl_vector	O
*	O
f	pointer
,	O
gsl_matrix	O
*	O
J	pointer
,	O
gsl_vector	O
*	O
dx	pointer
)	O
;	O
static	O
void	O
newton_free	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
int	O
newton_alloc	function
(	O
void	O
*	O
vstate	pointer
,	O
size_t	O
n	O
)	O
{	O
newton_state_t	O
*	O
state	pointer
=	O
(	O
newton_state_t	O
*	O
)	O
vstate	pointer
;	O
gsl_permutation	O
*	O
p	O
;	O
gsl_matrix	O
*	O
m	pointer
;	O
m	O
=	O
gsl_matrix_calloc	O
(	O
n	int
,	O
n	int
)	O
;	O
if	O
(	O
m	O
==	O
0	O
)	O
{	O
GSL_ERROR	O
(	O
"failed to allocate space for lu"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	O
->	O
lu	pointer
=	O
m	pointer
;	O
p	O
=	O
gsl_permutation_calloc	int
(	O
n	int
)	O
;	O
if	O
(	O
p	int
==	O
0	O
)	O
{	O
gsl_matrix_free	O
(	O
m	pointer
)	O
;	O
GSL_ERROR	O
(	O
"failed to allocate space for permutation"	O
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	O
->	O
permutation	pointer
=	O
p	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
newton_set	function
(	O
void	O
*	O
vstate	pointer
,	O
gsl_multiroot_function_fdf	O
*	O
FDF	pointer
,	O
gsl_vector	O
*	O
x	pointer
,	O
gsl_vector	O
*	O
f	pointer
,	O
gsl_matrix	O
*	O
J	pointer
,	O
gsl_vector	O
*	O
dx	pointer
)	O
{	O
newton_state_t	O
*	O
state	pointer
=	O
(	O
newton_state_t	O
*	O
)	O
vstate	pointer
;	O
size_t	O
i	O
,	O
n	O
=	O
FDF	int
->	O
n	pointer
;	O
state	O
=	O
0	int
;	O
GSL_MULTIROOT_FN_EVAL_F_DF	O
(	O
FDF	pointer
,	O
x	pointer
,	O
f	pointer
,	O
J	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
gsl_vector_set	O
(	O
dx	O
,	O
i	O
,	O
0.0	int
)	O
;	O
}	O
return	O
GSL_SUCCESS	O
;	O
}	O
static	O
int	O
newton_iterate	function
(	O
void	O
*	O
vstate	pointer
,	O
gsl_multiroot_function_fdf	O
*	O
fdf	pointer
,	O
gsl_vector	O
*	O
x	pointer
,	O
gsl_vector	O
*	O
f	pointer
,	O
gsl_matrix	O
*	O
J	pointer
,	O
gsl_vector	O
*	O
dx	pointer
)	O
{	O
newton_state_t	O
*	O
state	pointer
=	O
(	O
newton_state_t	O
*	O
)	O
vstate	pointer
;	O
int	O
signum	int
;	O
size_t	O
i	O
;	O
size_t	O
n	long
=	O
fdf	int
->	O
n	pointer
;	O
gsl_matrix_memcpy	O
(	O
state	pointer
->	O
lu	pointer
,	O
J	pointer
)	O
;	O
gsl_linalg_LU_decomp	O
(	O
state	pointer
->	O
lu	pointer
,	O
state	pointer
->	O
permutation	pointer
,	O
&	pointer
signum	pointer
)	O
;	O
{	O
int	O
status	int
=	O
gsl_linalg_LU_solve	int
(	O
state	pointer
->	O
lu	pointer
,	O
state	pointer
->	O
permutation	pointer
,	O
f	pointer
,	O
dx	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
}	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
double	O
e	array
=	O
gsl_vector_get	O
(	O
dx	O
,	O
i	O
)	O
;	O
double	O
y	double
=	O
gsl_vector_get	O
(	O
x	O
,	O
i	O
)	O
;	O
gsl_vector_set	O
(	O
dx	O
,	O
i	O
,	O
-	int
e	int
)	O
;	O
gsl_vector_set	O
(	O
x	O
,	O
i	O
,	O
y	O
-	O
e	int
)	O
;	O
}	O
{	O
int	O
status	function
=	O
GSL_MULTIROOT_FN_EVAL_F_DF	int
(	O
fdf	O
,	O
x	pointer
,	O
f	O
,	O
J	O
)	O
;	O
if	O
(	O
status	O
!=	O
GSL_SUCCESS	int
)	O
{	O
return	O
GSL_EBADFUNC	int
;	O
}	O
}	O
return	O
GSL_SUCCESS	O
;	O
}	O
static	O
void	O
newton_free	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
newton_state_t	O
*	O
state	pointer
=	O
(	O
newton_state_t	O
*	O
)	O
vstate	pointer
;	O
gsl_matrix_free	O
(	O
state	pointer
->	O
lu	pointer
)	O
;	O
gsl_permutation_free	O
(	O
state	pointer
->	O
permutation	pointer
)	O
;	O
}	O
static	O
const	O
gsl_multiroot_fdfsolver_type	O
newton_type	O
=	O
{	O
"newton"	O
,	O
sizeof	O
(	O
newton_state_t	O
)	O
,	O
&	O
newton_alloc	pointer
,	O
&	O
newton_set	struct
,	O
&	O
newton_iterate	struct
,	O
&	O
newton_free	struct
}	O
;	O
const	O
gsl_multiroot_fdfsolver_type	O
*	O
gsl_multiroot_fdfsolver_newton	pointer
=	O
&	O
newton_type	struct
;	O