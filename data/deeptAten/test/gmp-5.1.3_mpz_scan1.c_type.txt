mp_bitcnt_t	O
mpz_scan1	O
(	O
mpz_srcptr	O
u	O
,	O
mp_bitcnt_t	pointer
starting_bit	O
)	O
__GMP_NOTHROW	O
{	O
mp_srcptr	O
u_ptr	pointer
=	O
PTR	pointer
(	O
u	pointer
)	O
;	O
mp_size_t	O
size	O
=	O
SIZ	O
(	O
u	pointer
)	O
;	O
mp_size_t	O
abs_size	O
=	O
ABS	O
(	O
size	pointer
)	O
;	O
mp_srcptr	O
u_end	O
=	O
u_ptr	O
+	O
abs_size	long
-	O
1	int
;	O
mp_size_t	O
starting_limb	O
=	O
starting_bit	pointer
/	O
GMP_NUMB_BITS	O
;	O
mp_srcptr	long
p	O
=	O
u_ptr	pointer
+	O
starting_limb	long
;	O
mp_limb_t	O
limb	O
;	O
int	O
cnt	int
;	O
if	O
(	O
starting_limb	O
>=	O
abs_size	O
)	O
return	O
(	O
size	O
>=	O
0	O
?	O
~	O
(	O
mp_bitcnt_t	O
)	O
0	O
:	O
starting_bit	O
)	O
;	O
if	O
(	O
starting_bit	O
==	O
0	O
)	O
goto	O
short_cut	O
;	O
limb	O
=	O
*	O
p	pointer
;	O
if	O
(	O
size	O
>=	O
0	O
)	O
{	O
limb	O
&=	O
(	O
MP_LIMB_T_MAX	O
<<	O
(	int
starting_bit	O
%	O
GMP_NUMB_BITS	O
)	O
)	O
;	O
if	O
(	O
limb	O
==	O
0	O
)	O
{	O
if	O
(	O
p	O
==	O
u_end	O
)	O
return	O
~	int
(	int
mp_bitcnt_t	int
)	O
0	O
;	O
search_nonzero	O
:	O
do	O
{	O
ASSERT	O
(	O
p	O
!=	O
u_end	O
)	O
;	O
p	O
++	O
;	O
short_cut	O
:	O
limb	O
=	O
*	O
p	pointer
;	O
}	O
while	O
(	O
limb	O
==	O
0	O
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
mpn_zero_p	O
(	O
u_ptr	pointer
,	O
starting_limb	O
)	O
)	O
{	O
if	O
(	O
limb	O
==	O
0	O
)	O
goto	O
search_nonzero	O
;	O
limb	O
--	O
;	O
}	O
limb	O
|=	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
(	int
starting_bit	int
%	O
GMP_NUMB_BITS	O
)	O
)	O
-	O
1	int
;	O
while	O
(	O
limb	O
==	O
GMP_NUMB_MAX	O
)	O
{	O
if	O
(	O
p	O
==	O
u_end	O
)	O
return	O
(	int
mp_bitcnt_t	O
)	O
abs_size	O
*	O
GMP_NUMB_BITS	O
;	O
p	O
++	O
;	O
limb	O
=	O
*	O
p	O
;	O
}	O
limb	O
=	O
~	O
limb	O
;	O
}	O
ASSERT	O
(	O
limb	O
!=	O
0	O
)	O
;	O
count_trailing_zeros	O
(	O
cnt	O
,	O
limb	O
)	O
;	O
return	O
(	int
mp_bitcnt_t	O
)	O
(	O
p	O
-	O
u_ptr	int
)	O
*	O
GMP_NUMB_BITS	O
+	O
cnt	int
;	O
}	O