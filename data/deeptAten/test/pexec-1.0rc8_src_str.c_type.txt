char	O
*	O
strkcpy	O
(	O
char	O
*	O
out	pointer
,	O
char	O
*	O
in	pointer
,	O
int	O
size	int
)	O
{	O
strncpy	O
(	O
out	pointer
,	O
in	O
,	O
size	pointer
)	O
;	O
out	O
[	O
size	int
-	O
1	int
]	O
=	O
0	O
;	O
return	O
(	int
out	O
)	O
;	O
}	O
int	O
strappend	function
(	O
char	O
*	O
*	pointer
str	pointer
,	O
char	O
*	O
cat	pointer
)	O
{	O
int	O
l1	int
,	O
l2	O
;	O
if	O
(	O
str	O
==	O
NULL	O
)	O
return	O
(	O
-	O
1	int
)	O
;	O
else	O
if	O
(	O
*	O
str	pointer
==	O
NULL	O
)	O
{	O
*	O
str	pointer
=	O
strdup	O
(	O
cat	pointer
)	O
;	O
malloc_check	O
(	O
*	pointer
str	pointer
)	O
;	O
return	O
(	int
0	O
)	O
;	O
}	O
else	O
{	O
l1	O
=	O
strlen	O
(	O
*	pointer
str	pointer
)	O
;	O
l2	O
=	O
strlen	O
(	O
cat	pointer
)	O
;	O
*	O
str	pointer
=	O
realloc	O
(	O
*	pointer
str	pointer
,	O
l1	O
+	O
l2	int
+	O
1	int
)	O
;	O
malloc_check	O
(	O
*	pointer
str	pointer
)	O
;	O
strcpy	O
(	O
(	pointer
*	O
str	pointer
)	O
+	O
l1	int
,	O
cat	O
)	O
;	O
return	O
(	int
0	O
)	O
;	O
}	O
}	O
int	O
vstrappendf	function
(	O
char	O
*	O
*	pointer
str	pointer
,	O
char	O
*	O
fmt	pointer
,	O
va_list	O
ap	O
)	O
{	O
int	O
n	int
,	O
l	O
,	O
size	O
;	O
if	O
(	O
str	O
==	O
NULL	O
)	O
return	O
(	O
0	O
)	O
;	O
if	O
(	O
*	O
str	pointer
==	O
NULL	O
)	O
l	O
=	O
0	int
;	O
else	O
l	O
=	O
strlen	O
(	O
*	pointer
str	pointer
)	O
;	O
size	O
=	O
128	O
;	O
*	O
str	pointer
=	O
realloc	O
(	O
*	pointer
str	pointer
,	O
l	O
+	O
size	int
)	O
;	O
realloc_check	O
(	O
*	pointer
str	pointer
,	O
l	O
+	O
size	int
)	O
;	O
if	O
(	O
*	O
str	pointer
==	O
NULL	O
)	O
return	O
(	O
-	O
1	int
)	O
;	O
while	O
(	O
1	O
)	O
{	O
n	O
=	O
vsnprintf	O
(	O
(	pointer
*	O
str	pointer
)	O
+	O
l	int
,	O
size	int
,	O
fmt	O
,	O
ap	pointer
)	O
;	O
if	O
(	O
n	O
>	O
-	int
1	int
&&	O
n	O
<	O
size	int
)	O
return	O
(	O
0	O
)	O
;	O
else	O
if	O
(	O
n	O
>	O
-	O
1	int
)	O
size	O
=	O
n	O
+	O
1	int
;	O
else	O
size	O
=	O
size	O
*	O
2	O
;	O
if	O
(	O
(	O
*	O
str	pointer
=	O
realloc	O
(	O
*	pointer
str	pointer
,	O
l	O
+	O
size	int
)	O
)	O
==	O
NULL	O
)	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
;	O
return	O
(	int
0	O
)	O
;	O
}	O
int	O
strappendf	function
(	O
char	O
*	O
*	pointer
str	pointer
,	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	O
ap	O
;	O
va_start	O
(	O
ap	pointer
,	O
fmt	pointer
)	O
;	O
ret	O
=	O
vstrappendf	O
(	O
str	pointer
,	O
fmt	O
,	O
ap	pointer
)	O
;	O
va_end	O
(	O
ap	pointer
)	O
;	O
return	O
(	int
ret	O
)	O
;	O
}	O