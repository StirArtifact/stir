static	O
const	O
char	O
revid	O
[	O
]	O
=	O
"$Id: hash_method.c,v 1.3 2000/06/28 16:47:01 loic Exp $"	O
;	O
static	O
int	O
__ham_set_h_ffactor	int
__P	O
(	O
(	O
DB	O
*	O
,	pointer
u_int32_t	O
)	O
)	O
;	O
static	O
int	O
__ham_set_h_hash	function
__P	O
(	O
(	O
DB	O
*	O
,	pointer
u_int32_t	O
(	O
*	O
)	pointer
(	O
const	O
void	O
*	O
,	O
u_int32_t	O
)	O
)	O
)	O
;	O
static	O
int	O
__ham_set_h_nelem	function
__P	O
(	O
(	O
DB	O
*	O
,	pointer
u_int32_t	O
)	O
)	O
;	O
int	O
CDB___ham_db_create	int
(	O
dbp	O
)	O
DB	O
*	O
dbp	pointer
;	O
{	O
HASH	O
*	O
hashp	pointer
;	O
int	O
ret	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_malloc	int
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
sizeof	pointer
(	O
HASH	pointer
)	O
,	O
NULL	O
,	O
&	O
dbp	struct
->	O
h_internal	pointer
)	O
)	O
!=	O
0	O
)	O
return	O
(	int
ret	int
)	O
;	O
hashp	O
=	O
dbp	O
->	O
h_internal	pointer
;	O
hashp	O
->	O
h_nelem	pointer
=	O
0	int
;	O
hashp	O
->	O
h_ffactor	pointer
=	O
0	int
;	O
hashp	O
->	O
h_hash	pointer
=	O
NULL	int
;	O
dbp	O
->	O
set_h_ffactor	pointer
=	O
__ham_set_h_ffactor	int
;	O
dbp	pointer
->	O
set_h_hash	pointer
=	O
__ham_set_h_hash	int
;	O
dbp	pointer
->	O
set_h_nelem	pointer
=	O
__ham_set_h_nelem	int
;	O
return	pointer
(	int
0	O
)	O
;	O
}	O
int	O
CDB___ham_db_close	function
(	O
dbp	O
)	O
DB	O
*	O
dbp	pointer
;	O
{	O
if	O
(	O
dbp	O
->	O
h_internal	pointer
==	O
NULL	O
)	O
return	O
(	int
0	O
)	O
;	O
CDB___os_free	O
(	O
dbp	O
->	O
h_internal	pointer
,	O
sizeof	pointer
(	O
HASH	pointer
)	O
)	O
;	O
dbp	O
->	O
h_internal	pointer
=	O
NULL	int
;	O
return	O
(	int
0	O
)	O
;	O
}	O
static	O
int	O
__ham_set_h_ffactor	function
(	O
dbp	O
,	O
h_ffactor	O
)	O
DB	O
*	O
dbp	pointer
;	O
u_int32_t	O
h_ffactor	O
;	O
{	O
HASH	O
*	O
hashp	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	O
,	O
"set_h_ffactor"	O
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_HASH	O
)	O
;	O
hashp	O
=	O
dbp	O
->	O
h_internal	pointer
;	O
hashp	O
->	O
h_ffactor	pointer
=	O
h_ffactor	int
;	O
return	O
(	int
0	O
)	O
;	O
}	O
static	O
int	O
__ham_set_h_hash	function
(	O
dbp	O
,	O
func	O
)	O
DB	O
*	O
dbp	pointer
;	O
u_int32_t	O
(	O
*	int
func	pointer
)	O
__P	O
(	O
(	O
const	O
void	O
*	O
,	O
u_int32_t	O
)	O
)	O
;	O
{	O
HASH	O
*	O
hashp	O
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	O
,	O
"set_h_hash"	O
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	O
,	O
DB_OK_HASH	O
)	O
;	O
hashp	O
=	O
dbp	O
->	O
h_internal	pointer
;	O
hashp	O
->	O
h_hash	pointer
=	O
func	int
;	O
return	pointer
(	int
0	O
)	O
;	O
}	O
static	O
int	O
__ham_set_h_nelem	function
(	O
dbp	O
,	O
h_nelem	O
)	O
DB	O
*	O
dbp	pointer
;	O
u_int32_t	O
h_nelem	O
;	O
{	O
HASH	O
*	O
hashp	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	O
,	O
"set_h_nelem"	O
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_HASH	O
)	O
;	O
hashp	O
=	O
dbp	O
->	O
h_internal	pointer
;	O
hashp	O
->	O
h_nelem	pointer
=	O
h_nelem	int
;	O
return	O
(	int
0	O
)	O
;	O
}	O