static	O
void	O
print_bytes	O
(	O
unsigned	O
char	O
*	O
b	pointer
,	O
size_t	O
l	O
)	O
{	O
for	O
(	O
;	int
l	O
;	O
l	O
--	O
,	O
b	O
++	O
)	O
printf	O
(	O
" %02x"	pointer
,	O
*	pointer
b	pointer
)	O
;	O
printf	O
(	O
"\n"	pointer
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	pointer
argv	pointer
)	O
{	O
int	O
flags	int
=	O
0	O
;	O
mu_set_program_name	O
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
if	O
(	O
argc	O
<	O
2	O
)	O
{	O
mu_error	O
(	O
"usage: %s [-sS] CIDR [CIDR...]"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
while	O
(	O
--	O
argc	O
)	O
{	O
char	O
*	O
arg	pointer
=	O
*	O
++	pointer
argv	O
;	O
struct	O
mu_cidr	struct
cidr	O
;	O
int	O
rc	int
;	O
char	O
*	O
str	pointer
;	O
if	O
(	O
strcmp	O
(	O
arg	pointer
,	O
"-s"	pointer
)	O
==	O
0	O
)	O
{	O
flags	O
|=	O
MU_CIDR_FMT_SIMPLIFY	O
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
strcmp	O
(	O
arg	pointer
,	O
"-S"	pointer
)	O
==	O
0	O
)	O
{	O
flags	O
&=	O
~	O
MU_CIDR_FMT_SIMPLIFY	O
;	O
continue	O
;	O
}	O
rc	O
=	O
mu_cidr_from_string	function
(	O
&	pointer
cidr	pointer
,	O
arg	O
)	O
;	O
if	O
(	O
rc	O
)	O
{	O
mu_error	O
(	O
"%s: %s"	O
,	O
arg	pointer
,	O
mu_strerror	O
(	O
rc	int
)	O
)	O
;	O
continue	O
;	O
}	O
printf	O
(	O
"%s:\n"	pointer
,	O
arg	pointer
)	O
;	O
printf	O
(	O
"family = %d\n"	pointer
,	O
cidr	pointer
.	O
family	pointer
)	O
;	O
printf	O
(	O
"len = %d\n"	pointer
,	O
cidr	pointer
.	O
len	pointer
)	O
;	O
printf	O
(	O
"address ="	pointer
)	O
;	O
print_bytes	O
(	O
cidr	pointer
.	O
address	pointer
,	O
cidr	O
.	O
len	pointer
)	O
;	O
printf	O
(	O
"netmask ="	pointer
)	O
;	O
print_bytes	O
(	O
cidr	pointer
.	O
netmask	pointer
,	O
cidr	O
.	O
len	pointer
)	O
;	O
rc	O
=	O
mu_cidr_format	O
(	O
&	pointer
cidr	pointer
,	O
flags	O
,	O
&	O
str	pointer
)	O
;	O
if	O
(	O
rc	O
)	O
{	O
mu_error	O
(	O
"cannot covert to string: %s"	O
,	O
mu_strerror	pointer
(	O
rc	int
)	O
)	O
;	O
return	O
2	int
;	O
}	O
printf	O
(	O
"string = %s\n"	pointer
,	O
str	pointer
)	O
;	O
free	O
(	O
str	pointer
)	O
;	O
}	O
return	O
0	O
;	O
}	O