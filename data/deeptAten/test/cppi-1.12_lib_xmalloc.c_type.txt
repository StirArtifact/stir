enum	O
{	O
HAVE_GNU_CALLOC	O
=	O
1	O
}	O
;	O
static	O
inline	O
void	O
*	function
xnmalloc_inline	function
(	O
size_t	O
n	O
,	O
size_t	O
s	long
)	O
{	O
void	O
*	O
p	pointer
;	O
if	O
(	O
xalloc_oversized	O
(	O
n	pointer
,	O
s	pointer
)	O
||	O
(	O
!	O
(	O
p	O
=	O
malloc	O
(	O
n	int
*	O
s	O
)	O
)	O
&&	O
n	O
!=	O
0	O
)	O
)	O
xalloc_die	O
(	O
)	O
;	O
return	O
p	int
;	O
}	O
void	O
*	function
xnmalloc	function
(	O
size_t	O
n	O
,	O
size_t	O
s	long
)	O
{	O
return	O
xnmalloc_inline	int
(	O
n	pointer
,	O
s	O
)	O
;	O
}	O
void	O
*	function
xmalloc	function
(	O
size_t	O
n	O
)	O
{	O
return	O
xnmalloc_inline	int
(	O
n	O
,	O
1	O
)	O
;	O
}	O
static	O
inline	O
void	O
*	function
xnrealloc_inline	function
(	O
void	O
*	O
p	pointer
,	O
size_t	O
n	long
,	O
size_t	O
s	long
)	O
{	O
if	O
(	O
xalloc_oversized	long
(	O
n	pointer
,	O
s	pointer
)	O
||	O
(	O
!	O
(	O
p	O
=	O
realloc	O
(	O
p	pointer
,	O
n	pointer
*	O
s	O
)	O
)	O
&&	O
n	O
!=	O
0	O
)	O
)	O
xalloc_die	O
(	O
)	O
;	O
return	O
p	int
;	O
}	O
void	O
*	function
xnrealloc	function
(	O
void	O
*	O
p	pointer
,	O
size_t	O
n	long
,	O
size_t	O
s	long
)	O
{	O
return	O
xnrealloc_inline	int
(	O
p	pointer
,	O
n	O
,	O
s	O
)	O
;	O
}	O
void	O
*	function
xrealloc	function
(	O
void	O
*	O
p	pointer
,	O
size_t	O
n	long
)	O
{	O
return	O
xnrealloc_inline	int
(	O
p	pointer
,	O
n	O
,	O
1	O
)	O
;	O
}	O
static	O
inline	O
void	O
*	function
x2nrealloc_inline	function
(	O
void	O
*	O
p	pointer
,	O
size_t	O
*	long
pn	pointer
,	O
size_t	O
s	long
)	O
{	O
size_t	O
n	long
=	O
*	O
pn	pointer
;	O
if	O
(	O
!	long
p	pointer
)	O
{	O
if	O
(	O
!	long
n	pointer
)	O
{	O
enum	O
{	O
DEFAULT_MXFAST	int
=	O
64	O
}	O
;	O
n	O
=	O
DEFAULT_MXFAST	O
/	O
s	O
;	O
n	O
+=	O
!	O
n	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
SIZE_MAX	O
/	O
2	O
/	O
s	int
<	O
n	int
)	O
xalloc_die	O
(	O
)	O
;	O
n	O
*=	O
2	O
;	O
}	O
*	O
pn	pointer
=	O
n	O
;	O
return	O
xrealloc	int
(	O
p	pointer
,	O
n	pointer
*	O
s	O
)	O
;	O
}	O
void	O
*	function
x2nrealloc	function
(	O
void	O
*	O
p	pointer
,	O
size_t	O
*	long
pn	pointer
,	O
size_t	O
s	long
)	O
{	O
return	O
x2nrealloc_inline	int
(	O
p	pointer
,	O
pn	O
,	O
s	pointer
)	O
;	O
}	O
void	O
*	function
x2realloc	function
(	O
void	O
*	O
p	pointer
,	O
size_t	O
*	long
pn	pointer
)	O
{	O
return	O
x2nrealloc_inline	O
(	O
p	pointer
,	O
pn	O
,	O
1	pointer
)	O
;	O
}	O
void	O
*	function
xzalloc	function
(	O
size_t	O
s	long
)	O
{	O
return	O
memset	int
(	O
xmalloc	O
(	O
s	O
)	O
,	O
0	O
,	O
s	O
)	O
;	O
}	O
void	O
*	function
xcalloc	function
(	O
size_t	O
n	long
,	O
size_t	O
s	long
)	O
{	O
void	O
*	O
p	pointer
;	O
if	O
(	O
(	long
!	long
HAVE_GNU_CALLOC	O
&&	O
xalloc_oversized	O
(	O
n	pointer
,	O
s	pointer
)	O
)	O
||	O
(	O
!	O
(	O
p	O
=	O
calloc	O
(	O
n	int
,	O
s	O
)	O
)	O
&&	O
(	O
HAVE_GNU_CALLOC	O
||	O
n	O
!=	O
0	O
)	O
)	O
)	O
xalloc_die	O
(	O
)	O
;	O
return	O
p	O
;	O
}	O
void	O
*	function
xmemdup	function
(	O
void	O
const	O
*	O
p	pointer
,	O
size_t	O
s	long
)	O
{	O
return	O
memcpy	int
(	O
xmalloc	pointer
(	O
s	pointer
)	O
,	O
p	O
,	O
s	O
)	O
;	O
}	O
char	O
*	O
xstrdup	function
(	O
char	O
const	O
*	O
string	pointer
)	O
{	O
return	O
xmemdup	int
(	O
string	pointer
,	O
strlen	O
(	O
string	pointer
)	O
+	O
1	int
)	O
;	O
}	O