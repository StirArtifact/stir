static	O
struct	O
parser_tab	O
{	O
const	O
char	O
*	O
name	pointer
;	O
grecs_parser_t	O
parser	O
;	O
}	O
parser_tab	O
[	O
]	O
=	O
{	pointer
{	pointer
"GRECS"	O
,	O
grecs_grecs_parser	O
}	O
,	O
{	O
"PATH"	O
,	O
grecs_path_parser	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
int	O
grecs_enumerate_parsers	function
(	O
int	O
(	O
*	O
fun	pointer
)	O
(	O
const	O
char	O
*	O
,	pointer
grecs_parser_t	O
,	O
void	O
*	O
)	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
parser_tab	struct
*	O
pt	pointer
;	O
int	O
rc	O
=	O
0	int
;	O
for	O
(	O
pt	O
=	O
parser_tab	pointer
;	O
rc	O
==	O
0	O
&&	O
pt	O
->	O
name	pointer
;	O
pt	O
++	O
)	O
rc	O
=	O
fun	int
(	O
pt	O
->	O
name	pointer
,	O
pt	O
->	O
parser	pointer
,	O
data	O
)	O
;	O
return	O
rc	int
;	O
}	O
grecs_parser_t	O
grecs_get_parser_by_type	O
(	O
const	O
char	O
*	O
type	pointer
)	O
{	O
struct	O
parser_tab	struct
*	O
pt	pointer
;	O
for	O
(	O
pt	O
=	O
parser_tab	pointer
;	O
pt	O
->	O
name	pointer
;	O
pt	O
++	O
)	O
{	O
if	O
(	O
strcasecmp	O
(	O
pt	pointer
->	O
name	pointer
,	O
type	O
)	O
==	O
0	O
)	O
return	O
pt	int
->	O
parser	pointer
;	O
}	O
return	O
NULL	O
;	O
}	O