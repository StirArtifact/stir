int	O
osip_route_init	O
(	O
osip_route_t	O
*	O
*	pointer
route	pointer
)	O
{	O
return	O
osip_from_init	int
(	O
(	O
osip_from_t	O
*	O
*	pointer
)	pointer
route	O
)	O
;	O
}	O
int	O
osip_message_set_route	function
(	O
osip_message_t	O
*	O
sip	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
osip_route_t	O
*	O
route	pointer
;	O
int	O
i	int
;	O
if	O
(	O
hvalue	O
==	O
NULL	O
||	O
hvalue	O
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
i	O
=	O
osip_route_init	O
(	O
&	pointer
route	pointer
)	O
;	O
if	O
(	O
i	O
!=	O
0	O
)	O
return	O
i	int
;	O
i	O
=	O
osip_route_parse	int
(	O
route	pointer
,	O
hvalue	O
)	O
;	O
if	O
(	O
i	O
!=	O
0	O
)	O
{	O
osip_route_free	O
(	O
route	pointer
)	O
;	O
return	O
i	int
;	O
}	O
sip	O
->	O
message_property	pointer
=	O
2	int
;	O
osip_list_add	O
(	O
&	O
sip	pointer
->	O
routes	pointer
,	O
route	O
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_route	function
(	O
const	O
osip_message_t	O
*	O
sip	pointer
,	O
int	O
pos	int
,	O
osip_route_t	O
*	O
*	pointer
dest	pointer
)	O
{	O
osip_route_t	O
*	O
route	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	O
(	O
&	pointer
sip	pointer
->	O
routes	pointer
)	O
<=	O
pos	O
)	O
return	O
OSIP_UNDEFINED_ERROR	int
;	O
route	O
=	O
(	O
osip_route_t	O
*	O
)	O
osip_list_get	O
(	O
&	pointer
sip	struct
->	O
routes	pointer
,	O
pos	O
)	O
;	O
*	O
dest	pointer
=	O
route	O
;	O
return	O
pos	int
;	O
}	O
int	O
osip_route_parse	function
(	O
osip_route_t	O
*	O
route	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
return	O
osip_from_parse	int
(	O
(	O
osip_from_t	O
*	O
)	pointer
route	pointer
,	O
hvalue	O
)	O
;	O
}	O
int	O
osip_route_to_str	function
(	O
const	O
osip_route_t	O
*	O
route	pointer
,	O
char	O
*	O
*	pointer
dest	pointer
)	O
{	O
return	O
osip_record_route_to_str	int
(	O
(	O
osip_record_route_t	O
*	O
)	pointer
route	pointer
,	O
dest	O
)	O
;	O
}	O
void	O
osip_route_free	O
(	O
osip_route_t	O
*	O
route	pointer
)	O
{	O
osip_from_free	O
(	O
(	O
osip_from_t	O
*	O
)	O
route	pointer
)	O
;	O
}	O