int	O
mu_create_temp_file	function
(	O
char	O
*	O
filename	pointer
,	O
size_t	O
suflen	long
,	O
int	O
*	int
pfd	pointer
,	O
int	O
isdir	O
)	O
{	O
int	O
rc	int
;	O
size_t	O
len	long
;	O
char	O
*	O
carrybuf	pointer
;	O
char	O
*	O
p	pointer
,	O
*	O
cp	pointer
,	O
*	O
start	pointer
,	O
*	O
end	pointer
;	O
struct	O
stat	struct
st	O
;	O
static	O
int	O
first_call	function
;	O
static	O
char	O
randstate	O
[	O
256	O
]	O
;	O
static	O
const	O
unsigned	O
char	O
alphabet	O
[	O
]	O
=	O
"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"	O
;	O
if	O
(	O
!	O
first_call	pointer
)	O
{	O
struct	O
timeval	struct
tv	O
;	O
gettimeofday	O
(	O
&	O
tv	pointer
,	O
NULL	O
)	O
;	O
initstate	O
(	O
(	pointer
(	O
unsigned	O
long	O
)	O
tv	O
.	O
tv_usec	int
<<	O
16	int
)	O
^	O
tv	O
.	O
tv_sec	int
,	O
randstate	pointer
,	O
sizeof	pointer
(	O
randstate	O
)	O
)	O
;	O
first_call	O
=	O
1	O
;	O
}	O
setstate	O
(	O
randstate	O
)	O
;	O
end	O
=	O
filename	O
+	O
strlen	int
(	O
filename	pointer
)	O
-	O
suflen	int
-	O
1	int
;	O
for	O
(	O
p	int
=	O
end	int
;	O
p	int
>=	O
filename	int
&&	O
*	pointer
p	pointer
==	O
'X'	O
;	O
p	pointer
--	O
)	O
*	O
p	pointer
=	O
alphabet	O
[	O
random	int
(	O
)	int
%	O
(	int
sizeof	O
(	O
alphabet	O
)	O
-	O
1	int
)	O
]	O
;	O
len	O
=	O
end	O
-	O
p	int
;	O
if	O
(	O
len	O
==	O
0	O
)	O
return	O
EINVAL	int
;	O
start	O
=	O
p	O
+	O
1	int
;	O
carrybuf	O
=	O
malloc	int
(	O
len	int
)	O
;	O
if	O
(	O
!	O
carrybuf	O
)	O
return	O
ENOMEM	O
;	O
memcpy	O
(	O
carrybuf	pointer
,	O
start	pointer
,	O
len	pointer
)	O
;	O
for	O
(	O
;	int
;	O
)	O
{	O
if	O
(	O
isdir	O
)	O
{	O
if	O
(	O
mkdir	O
(	O
filename	pointer
,	O
0700	pointer
)	O
==	O
0	int
)	O
{	O
rc	O
=	O
0	int
;	O
break	O
;	O
}	O
}	O
else	O
if	O
(	O
pfd	O
)	O
{	O
if	O
(	O
(	int
*	O
pfd	pointer
=	O
open	function
(	O
filename	pointer
,	O
O_CREAT	pointer
|	O
O_EXCL	int
|	O
O_RDWR	O
,	O
0600	int
)	O
)	O
>=	O
0	int
)	O
{	O
rc	O
=	O
0	int
;	O
break	O
;	O
}	O
}	O
else	O
if	O
(	O
lstat	O
(	O
filename	pointer
,	O
&	pointer
st	pointer
)	O
&&	O
errno	O
==	O
ENOENT	int
)	O
{	O
rc	O
=	O
0	int
;	O
break	O
;	O
}	O
if	O
(	O
errno	O
!=	O
EEXIST	O
)	O
{	O
rc	O
=	O
errno	int
;	O
break	O
;	O
}	O
for	O
(	O
p	int
=	O
start	int
,	O
cp	int
=	O
carrybuf	pointer
;	O
;	pointer
p	O
++	O
,	O
cp	O
++	O
)	O
{	O
char	O
*	O
q	pointer
;	O
if	O
(	O
p	O
==	O
end	O
)	O
return	O
EEXIST	int
;	O
q	O
=	O
strchr	O
(	O
(	pointer
char	O
*	O
)	O
alphabet	pointer
,	O
*	O
p	pointer
)	O
;	O
if	O
(	O
!	O
q	O
)	O
abort	O
(	O
)	O
;	O
*	O
p	pointer
=	O
(	O
q	O
[	O
1	int
]	O
==	O
0	O
)	O
?	O
alphabet	int
[	O
0	int
]	O
:	O
q	O
[	O
1	int
]	O
;	O
if	O
(	O
*	O
p	pointer
!=	O
*	O
cp	O
)	O
break	O
;	O
}	O
}	O
free	O
(	O
carrybuf	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_tempfile	function
(	O
struct	O
mu_tempfile_hints	struct
*	O
hints	pointer
,	O
int	O
flags	int
,	O
int	O
*	int
pfd	pointer
,	O
char	O
*	O
*	pointer
namep	pointer
)	O
{	O
char	O
*	O
filename	pointer
;	O
const	O
char	O
*	O
tmpdir	pointer
=	O
getenv	O
(	O
"TMPDIR"	pointer
)	O
;	O
const	O
char	O
*	O
suf	pointer
=	O
NULL	O
;	O
int	O
create_dir	int
=	O
0	O
;	O
int	O
rc	int
;	O
struct	O
stat	struct
st	O
;	O
if	O
(	O
pfd	O
==	O
NULL	O
&&	O
namep	pointer
==	O
NULL	O
)	O
return	O
EINVAL	O
;	O
if	O
(	O
hints	pointer
)	O
{	O
if	O
(	O
flags	O
&	O
MU_TEMPFILE_TMPDIR	int
)	O
tmpdir	O
=	O
hints	pointer
->	O
tmpdir	pointer
;	O
if	pointer
(	O
flags	pointer
&	O
MU_TEMPFILE_SUFFIX	int
)	O
suf	O
=	O
hints	pointer
->	O
suffix	pointer
;	O
create_dir	pointer
=	O
flags	pointer
&	O
MU_TEMPFILE_MKDIR	int
;	O
}	O
if	O
(	O
!	O
tmpdir	pointer
)	O
tmpdir	O
=	O
P_tmpdir	pointer
;	O
if	O
(	O
stat	O
(	O
tmpdir	pointer
,	O
&	pointer
st	pointer
)	O
)	O
return	O
errno	int
;	O
filename	O
=	O
mu_make_file_name_suf	O
(	O
tmpdir	pointer
,	O
"muXXXXXX"	pointer
,	O
suf	pointer
)	O
;	O
rc	O
=	O
mu_create_temp_file	function
(	O
filename	pointer
,	O
suf	pointer
?	O
strlen	int
(	O
suf	pointer
)	O
:	O
0	O
,	O
pfd	int
,	O
create_dir	pointer
)	O
;	O
if	O
(	O
rc	O
==	O
0	O
)	O
{	O
if	O
(	O
namep	O
)	O
*	O
namep	pointer
=	O
filename	pointer
;	O
else	pointer
{	O
unlink	O
(	O
filename	pointer
)	O
;	O
free	O
(	O
filename	pointer
)	O
;	O
}	O
}	O
return	O
rc	O
;	O
}	O
char	O
*	O
mu_tempname	function
(	O
const	O
char	O
*	O
tmpdir	pointer
)	O
{	O
struct	O
mu_tempfile_hints	struct
hints	O
;	O
char	O
*	O
filename	pointer
=	O
NULL	O
;	O
int	O
fd	int
;	O
hints	O
.	O
tmpdir	pointer
=	O
(	pointer
char	O
*	O
)	O
tmpdir	pointer
;	O
if	O
(	O
mu_tempfile	O
(	O
&	pointer
hints	pointer
,	O
MU_TEMPFILE_TMPDIR	pointer
,	O
&	pointer
fd	pointer
,	O
&	O
filename	pointer
)	O
)	O
return	O
NULL	O
;	O
close	O
(	O
fd	pointer
)	O
;	O
return	O
filename	int
;	O
}	O