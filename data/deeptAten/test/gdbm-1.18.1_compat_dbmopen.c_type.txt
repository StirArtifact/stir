static	O
unsigned	O
getint	O
(	O
const	O
unsigned	O
char	O
*	O
cp	pointer
)	O
{	O
return	O
(	int
cp	O
[	O
0	O
]	O
<<	O
24	O
)	O
+	O
(	int
cp	O
[	O
1	int
]	O
<<	O
16	O
)	O
+	O
(	int
cp	O
[	O
2	int
]	O
<<	O
8	int
)	O
+	O
cp	int
[	O
3	int
]	O
;	O
}	O
static	O
void	O
putint	function
(	O
unsigned	O
char	O
*	O
cp	pointer
,	O
unsigned	O
n	O
)	O
{	O
cp	O
[	pointer
0	int
]	O
=	O
(	O
n	O
>>	O
24	int
)	O
&	O
0xff	pointer
;	O
cp	O
[	O
1	int
]	O
=	O
(	O
n	O
>>	O
16	int
)	O
&	O
0xff	pointer
;	O
cp	O
[	O
2	int
]	O
=	O
(	O
n	O
>>	O
8	int
)	O
&	O
0xff	O
;	O
cp	O
[	O
3	int
]	O
=	O
n	O
&	O
0xff	int
;	O
}	O
static	O
int	O
ndbm_open_dir_file0	function
(	O
const	O
char	O
*	O
file_name	pointer
,	O
int	O
pagfd	int
,	O
int	O
mode	int
)	O
{	O
int	O
fd	int
=	O
-	int
1	int
;	O
struct	O
stat	struct
st	struct
,	O
pagst	O
;	O
unsigned	O
char	O
dirbuf	O
[	O
DEF_DIR_SIZE	int
]	O
;	O
int	O
flags	int
=	O
(	int
mode	O
&	O
GDBM_OPENMASK	int
)	O
==	O
GDBM_READER	int
?	O
O_RDONLY	int
:	O
O_RDWR	O
;	O
if	O
(	O
mode	O
&	O
GDBM_CLOEXEC	int
)	O
flags	O
|=	O
O_CLOEXEC	int
;	O
if	O
(	O
fstat	O
(	O
pagfd	int
,	O
&	int
pagst	struct
)	O
)	O
{	O
gdbm_set_errno	O
(	O
NULL	int
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
TRUE	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
if	O
(	O
stat	O
(	O
file_name	pointer
,	O
&	O
st	struct
)	O
==	O
0	int
)	O
{	O
if	O
(	O
st	O
.	O
st_nlink	int
>=	O
2	int
)	O
{	O
if	O
(	O
st	O
.	O
st_dev	int
==	O
pagst	O
.	O
st_dev	int
&&	O
st	O
.	O
st_ino	int
==	O
pagst	O
.	O
st_ino	int
)	O
{	O
if	O
(	O
unlink	O
(	O
file_name	pointer
)	O
)	O
{	O
if	O
(	O
(	O
mode	O
&	O
GDBM_OPENMASK	int
)	O
==	O
GDBM_READER	O
)	O
return	O
pagfd	int
;	O
else	O
if	O
(	O
errno	O
!=	O
ENOENT	O
)	O
{	O
gdbm_set_errno	function
(	O
NULL	int
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
TRUE	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
}	O
}	O
else	O
{	O
gdbm_set_errno	O
(	O
NULL	pointer
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
}	O
else	O
if	O
(	O
st	O
.	O
st_size	int
==	O
0	O
)	O
;	O
else	O
if	O
(	O
st	O
.	O
st_size	int
!=	O
DEF_DIR_SIZE	O
)	O
{	O
gdbm_set_errno	O
(	O
NULL	int
,	O
GDBM_BAD_MAGIC_NUMBER	int
,	O
FALSE	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
else	O
{	O
fd	O
=	O
open	function
(	O
file_name	O
,	O
flags	int
)	O
;	O
if	O
(	O
fd	O
==	O
-	O
1	int
)	O
{	O
gdbm_set_errno	O
(	O
NULL	int
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
fd	int
;	O
}	O
if	O
(	O
read	O
(	O
fd	int
,	O
dirbuf	pointer
,	O
sizeof	int
(	O
dirbuf	O
)	O
)	O
!=	O
sizeof	int
(	O
dirbuf	O
)	O
)	O
{	O
gdbm_set_errno	O
(	O
NULL	int
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
close	O
(	O
fd	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
if	O
(	O
getint	O
(	O
dirbuf	int
)	O
==	O
GDBM_DIR_MAGIC	int
)	O
{	O
int	O
v	int
[	O
3	int
]	O
;	O
v	O
[	O
0	int
]	O
=	O
getint	O
(	O
dirbuf	O
+	O
4	int
)	O
;	O
v	O
[	O
1	int
]	O
=	O
getint	O
(	O
dirbuf	O
+	O
8	int
)	O
;	O
v	O
[	O
2	int
]	O
=	O
getint	O
(	O
dirbuf	O
+	O
12	int
)	O
;	O
if	O
(	O
gdbm_version_cmp	O
(	O
v	int
,	O
gdbm_version_number	O
)	O
<=	O
0	int
)	O
return	O
fd	int
;	O
}	O
close	O
(	O
fd	int
)	O
;	O
gdbm_set_errno	O
(	O
NULL	O
,	O
GDBM_BAD_MAGIC_NUMBER	int
,	O
FALSE	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
}	O
fd	O
=	O
open	function
(	O
file_name	O
,	O
flags	int
|	O
O_CREAT	int
,	O
pagst	int
.	O
st_mode	int
&	O
0777	struct
)	O
;	O
if	O
(	O
fd	O
>=	O
0	int
)	O
{	O
putint	O
(	O
dirbuf	int
,	O
GDBM_DIR_MAGIC	int
)	O
;	O
putint	O
(	O
dirbuf	O
+	O
4	int
,	O
gdbm_version_number	int
[	O
0	int
]	O
)	O
;	O
putint	O
(	O
dirbuf	O
+	O
8	int
,	O
gdbm_version_number	int
[	O
1	int
]	O
)	O
;	O
putint	O
(	O
dirbuf	O
+	O
12	int
,	O
gdbm_version_number	int
[	O
2	int
]	O
)	O
;	O
if	O
(	O
write	O
(	O
fd	O
,	O
dirbuf	int
,	O
sizeof	int
(	O
dirbuf	O
)	O
)	O
!=	O
sizeof	int
(	O
dirbuf	O
)	O
)	O
{	O
gdbm_set_errno	O
(	O
NULL	int
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
FALSE	int
)	O
;	O
close	O
(	O
fd	int
)	O
;	O
fd	O
=	O
-	function
1	O
;	O
}	O
}	O
return	O
fd	O
;	O
}	O
static	O
int	O
ndbm_open_dir_file	function
(	O
const	O
char	O
*	O
base	pointer
,	O
int	O
pagfd	int
,	O
int	O
mode	int
)	O
{	O
char	O
*	array
file_name	pointer
=	O
malloc	O
(	O
strlen	O
(	O
base	pointer
)	O
+	O
sizeof	int
(	O
DIRSUF	O
)	O
)	O
;	O
int	O
fd	int
;	O
if	O
(	O
!	O
file_name	O
)	O
{	O
gdbm_set_errno	O
(	O
NULL	pointer
,	O
GDBM_MALLOC_ERROR	pointer
,	O
FALSE	int
)	O
;	O
return	O
-	int
1	int
;	O
}	O
fd	O
=	O
ndbm_open_dir_file0	function
(	O
strcat	O
(	O
strcpy	pointer
(	O
file_name	pointer
,	O
base	pointer
)	O
,	O
DIRSUF	O
)	O
,	O
pagfd	O
,	O
mode	int
)	O
;	O
free	O
(	O
file_name	pointer
)	O
;	O
return	O
fd	int
;	O
}	O
DBM	O
*	O
dbm_open	function
(	O
char	O
*	O
file	pointer
,	O
int	O
flags	O
,	O
int	O
mode	int
)	O
{	O
char	O
*	array
pag_file	pointer
;	O
DBM	O
*	O
dbm	pointer
=	O
NULL	O
;	O
int	O
open_flags	int
;	O
int	O
f	int
;	O
pag_file	O
=	O
(	int
char	O
*	O
)	O
malloc	pointer
(	O
strlen	O
(	O
file	pointer
)	O
+	O
5	int
)	O
;	O
if	O
(	O
!	O
pag_file	O
)	O
{	O
gdbm_set_errno	function
(	O
NULL	pointer
,	O
GDBM_MALLOC_ERROR	pointer
,	O
FALSE	int
)	O
;	O
return	O
NULL	int
;	O
}	O
strcpy	O
(	O
pag_file	pointer
,	O
file	pointer
)	O
;	O
strcat	O
(	O
pag_file	pointer
,	O
".pag"	pointer
)	O
;	O
f	O
=	O
flags	function
&	O
(	int
O_RDONLY	O
|	O
O_RDWR	O
|	O
O_CREAT	int
|	O
O_TRUNC	int
)	O
;	O
if	O
(	O
f	O
==	O
O_RDONLY	O
)	O
{	O
open_flags	function
=	O
GDBM_READER	int
;	O
mode	O
=	O
0	int
;	O
}	O
else	O
if	O
(	O
f	O
==	O
(	O
O_RDWR	int
|	O
O_CREAT	int
)	O
)	O
{	O
open_flags	O
=	O
GDBM_WRCREAT	int
;	O
}	O
else	O
if	O
(	O
(	O
f	O
&	O
O_TRUNC	int
)	O
==	O
O_TRUNC	O
)	O
{	O
open_flags	O
=	O
GDBM_NEWDB	int
;	O
}	O
else	O
{	O
open_flags	O
=	O
GDBM_WRITER	int
;	O
mode	O
=	O
0	int
;	O
}	O
if	O
(	O
flags	O
&	O
O_CLOEXEC	int
)	O
open_flags	O
|=	O
GDBM_CLOEXEC	int
;	O
open_flags	O
|=	O
GDBM_NOLOCK	int
;	O
dbm	O
=	O
calloc	O
(	O
1	int
,	O
sizeof	int
(	O
*	O
dbm	pointer
)	O
)	O
;	O
if	O
(	O
!	O
dbm	O
)	O
{	O
free	function
(	O
pag_file	pointer
)	O
;	O
gdbm_set_errno	O
(	O
NULL	pointer
,	O
GDBM_MALLOC_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
NULL	int
;	O
}	O
dbm	O
->	O
file	struct
=	O
gdbm_open	O
(	O
pag_file	O
,	O
0	int
,	O
open_flags	int
,	O
mode	int
,	O
NULL	int
)	O
;	O
if	O
(	O
dbm	O
->	O
file	pointer
==	O
NULL	O
)	O
{	O
gdbm_set_errno	O
(	O
NULL	pointer
,	O
GDBM_FILE_OPEN_ERROR	pointer
,	O
FALSE	int
)	O
;	O
free	O
(	O
dbm	pointer
)	O
;	O
dbm	O
=	O
NULL	function
;	O
}	O
else	O
{	O
dbm	O
->	O
dirfd	pointer
=	O
ndbm_open_dir_file	O
(	O
file	O
,	O
dbm	pointer
->	O
file	int
->	O
desc	pointer
,	O
open_flags	int
)	O
;	O
if	O
(	O
dbm	O
->	O
dirfd	pointer
==	O
-	O
1	int
)	O
{	O
gdbm_close	O
(	O
dbm	O
->	O
file	pointer
)	O
;	O
free	O
(	O
dbm	pointer
)	O
;	O
dbm	O
=	O
NULL	function
;	O
}	O
}	O
free	O
(	O
pag_file	pointer
)	O
;	O
return	O
dbm	int
;	O
}	O