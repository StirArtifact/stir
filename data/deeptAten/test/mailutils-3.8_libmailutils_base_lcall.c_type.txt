static	O
int	O
_parse_lc_all	function
(	O
const	O
char	O
*	O
arg	pointer
,	O
struct	O
mu_lc_all	struct
*	O
str	pointer
,	O
int	O
flags	int
)	O
{	O
char	O
*	O
s	pointer
;	O
size_t	O
n	long
;	O
str	O
->	O
flags	long
=	O
0	int
;	O
n	long
=	O
strcspn	int
(	O
arg	pointer
,	O
"_.@"	pointer
)	O
;	O
if	O
(	O
flags	O
&	O
MU_LC_LANG	int
)	O
{	O
s	O
=	O
malloc	O
(	O
n	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
s	O
)	O
return	O
ENOMEM	O
;	O
memcpy	O
(	O
s	pointer
,	O
arg	pointer
,	O
n	pointer
)	O
;	O
s	O
[	O
n	int
]	O
=	O
0	O
;	O
str	int
->	O
language	pointer
=	O
s	int
;	O
str	pointer
->	O
flags	pointer
|=	O
MU_LC_LANG	int
;	O
}	pointer
else	O
str	O
->	O
language	pointer
=	O
NULL	pointer
;	O
arg	pointer
+=	O
n	int
;	O
if	O
(	O
arg	pointer
[	O
0	int
]	O
==	O
'_'	O
)	O
{	O
arg	O
++	O
;	O
n	O
=	O
strcspn	O
(	O
arg	pointer
,	O
".@"	pointer
)	O
;	O
if	O
(	O
flags	O
&	O
MU_LC_TERR	int
)	O
{	O
s	O
=	O
malloc	O
(	O
n	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
s	O
)	O
return	O
ENOMEM	O
;	O
memcpy	O
(	O
s	pointer
,	O
arg	pointer
,	O
n	pointer
)	O
;	O
s	O
[	O
n	int
]	O
=	O
0	O
;	O
str	int
->	O
territory	pointer
=	O
s	int
;	O
str	pointer
->	O
flags	pointer
|=	O
MU_LC_TERR	int
;	O
}	pointer
else	O
str	O
->	O
territory	pointer
=	O
NULL	int
;	O
arg	pointer
+=	O
n	int
;	O
}	O
if	O
(	O
arg	O
[	O
0	int
]	O
==	O
'.'	O
)	O
{	O
arg	O
++	O
;	O
n	O
=	O
strcspn	int
(	O
arg	pointer
,	O
"@"	pointer
)	O
;	O
if	O
(	O
flags	O
&	O
MU_LC_CSET	int
)	O
{	O
s	O
=	O
malloc	O
(	O
n	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
s	O
)	O
return	O
ENOMEM	O
;	O
memcpy	O
(	O
s	pointer
,	O
arg	pointer
,	O
n	pointer
)	O
;	O
s	O
[	O
n	int
]	O
=	O
0	O
;	O
str	int
->	O
charset	pointer
=	O
s	int
;	O
str	pointer
->	O
flags	pointer
|=	O
MU_LC_CSET	int
;	O
}	pointer
else	O
str	O
->	O
charset	pointer
=	O
NULL	O
;	O
arg	pointer
+=	O
n	int
;	O
}	int
if	O
(	O
arg	O
[	O
0	int
]	O
)	O
{	O
arg	O
++	O
;	O
if	O
(	O
flags	O
&	O
MU_LC_MOD	int
)	O
{	O
str	O
->	O
modifier	int
=	O
strdup	int
(	O
arg	pointer
)	O
;	O
if	O
(	O
!	int
str	O
->	O
modifier	pointer
)	O
return	O
ENOMEM	O
;	O
str	O
->	O
flags	pointer
|=	O
MU_LC_MOD	int
;	O
}	int
}	O
return	O
0	O
;	O
}	O
void	O
mu_lc_all_free	function
(	O
struct	O
mu_lc_all	struct
*	O
str	pointer
)	O
{	O
if	O
(	O
str	O
->	O
flags	pointer
&	O
MU_LC_LANG	int
)	O
free	O
(	O
str	pointer
->	O
language	pointer
)	O
;	O
if	O
(	O
str	pointer
->	O
flags	pointer
&	O
MU_LC_TERR	int
)	O
free	O
(	O
str	pointer
->	O
territory	pointer
)	O
;	O
if	O
(	O
str	pointer
->	O
flags	pointer
&	O
MU_LC_CSET	int
)	O
free	O
(	O
str	pointer
->	O
charset	pointer
)	O
;	O
if	O
(	O
str	pointer
->	O
flags	pointer
&	O
MU_LC_MOD	int
)	O
free	O
(	O
str	pointer
->	O
modifier	pointer
)	O
;	O
str	O
->	O
flags	pointer
=	O
0	int
;	O
}	int
int	O
mu_parse_lc_all	function
(	O
const	O
char	O
*	O
arg	pointer
,	O
struct	O
mu_lc_all	struct
*	O
str	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
memset	O
(	O
str	O
,	O
0	int
,	O
sizeof	int
(	O
str	O
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
arg	O
)	O
{	O
if	O
(	O
flags	O
&	O
MU_LC_LANG	int
)	O
{	O
str	O
->	O
language	int
=	O
strdup	int
(	O
"C"	pointer
)	O
;	O
if	O
(	O
!	O
str	O
->	O
language	pointer
)	O
return	O
ENOMEM	O
;	O
}	O
return	O
0	O
;	O
}	O
rc	O
=	O
_parse_lc_all	function
(	O
arg	pointer
,	O
str	int
,	O
(	int
flags	O
&	O
MU_LC_CSET	int
)	O
?	O
(	O
flags	O
|	O
MU_LC_LANG	O
|	O
MU_LC_TERR	int
)	O
:	O
flags	O
)	O
;	O
if	O
(	O
rc	O
==	O
0	O
&&	O
(	int
flags	O
&	O
MU_LC_CSET	int
)	O
)	O
{	O
if	O
(	O
!	O
str	O
->	O
charset	pointer
)	O
{	O
const	O
char	O
*	O
charset	O
=	O
mu_charset_lookup	O
(	O
str	O
->	O
language	pointer
,	O
str	pointer
->	O
territory	pointer
)	O
;	O
if	O
(	O
charset	O
)	O
{	O
str	O
->	O
charset	pointer
=	O
strdup	int
(	O
charset	pointer
)	O
;	O
if	O
(	O
!	pointer
str	O
->	O
charset	pointer
)	O
{	O
rc	O
=	O
ENOMEM	int
;	O
goto	O
err	O
;	O
}	O
str	O
->	O
flags	pointer
|=	O
MU_LC_CSET	int
;	O
}	O
}	O
flags	O
=	O
~	function
flags	O
&	O
str	int
->	O
flags	int
;	O
if	O
(	O
flags	O
&	O
MU_LC_LANG	int
)	O
{	O
free	O
(	O
str	pointer
->	O
language	pointer
)	O
;	O
str	O
->	O
language	pointer
=	O
NULL	int
;	O
str	pointer
->	O
flags	pointer
&=	O
~	O
MU_LC_LANG	int
;	O
}	int
if	O
(	O
flags	O
&	O
MU_LC_TERR	int
)	O
{	O
free	O
(	O
str	pointer
->	O
territory	pointer
)	O
;	O
str	O
->	O
territory	pointer
=	O
NULL	int
;	O
str	pointer
->	O
flags	pointer
&=	O
~	O
MU_LC_TERR	int
;	O
}	int
}	O
err	O
:	O
if	O
(	O
rc	O
)	O
mu_lc_all_free	O
(	O
str	pointer
)	O
;	O
return	O
rc	int
;	O
}	O