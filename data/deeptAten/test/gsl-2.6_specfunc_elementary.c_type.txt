int	O
gsl_sf_multiply_e	O
(	O
const	O
double	O
x	O
,	O
const	O
double	O
y	O
,	O
gsl_sf_result	O
*	O
result	pointer
)	O
{	O
const	O
double	O
ax	double
=	O
fabs	O
(	O
x	pointer
)	O
;	O
const	O
double	O
ay	function
=	O
fabs	O
(	O
y	pointer
)	O
;	O
if	O
(	O
x	O
==	O
0.0	O
||	O
y	O
==	O
0.0	O
)	O
{	O
result	O
->	O
val	pointer
=	O
0.0	int
;	O
result	O
->	O
err	pointer
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
(	O
ax	O
<=	O
1.0	O
&&	O
ay	O
>=	O
1.0	O
)	O
||	O
(	O
ay	O
<=	O
1.0	O
&&	O
ax	O
>=	O
1.0	O
)	O
)	O
{	O
result	O
->	O
val	int
=	O
x	int
*	O
y	O
;	O
result	O
->	O
err	int
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	O
(	O
result	pointer
->	O
val	pointer
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
f	function
=	O
1.0	O
-	O
2.0	int
*	O
GSL_DBL_EPSILON	int
;	O
const	O
double	O
min	O
=	O
GSL_MIN_DBL	O
(	O
fabs	pointer
(	O
x	pointer
)	O
,	O
fabs	O
(	O
y	pointer
)	O
)	O
;	O
const	O
double	O
max	function
=	O
GSL_MAX_DBL	O
(	O
fabs	O
(	O
x	pointer
)	O
,	O
fabs	O
(	O
y	pointer
)	O
)	O
;	O
if	O
(	O
max	O
<	O
0.9	int
*	O
GSL_SQRT_DBL_MAX	O
||	O
min	O
<	O
(	int
f	O
*	O
DBL_MAX	O
)	O
/	O
max	O
)	O
{	O
result	O
->	O
val	double
=	O
GSL_COERCE_DBL	O
(	O
x	pointer
*	O
y	O
)	O
;	O
result	O
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	O
(	O
result	pointer
->	O
val	pointer
)	O
;	O
CHECK_UNDERFLOW	O
(	O
result	O
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
OVERFLOW_ERROR	O
(	O
result	O
)	O
;	O
}	O
}	O
}	O
int	O
gsl_sf_multiply_err_e	function
(	O
const	O
double	O
x	O
,	O
const	O
double	O
dx	O
,	O
const	O
double	O
y	O
,	O
const	O
double	O
dy	O
,	O
gsl_sf_result	O
*	O
result	pointer
)	O
{	O
int	O
status	int
=	O
gsl_sf_multiply_e	int
(	O
x	O
,	O
y	O
,	O
result	O
)	O
;	O
result	O
->	O
err	int
+=	O
fabs	int
(	O
dx	pointer
*	O
y	O
)	O
+	O
fabs	int
(	O
dy	pointer
*	O
x	pointer
)	O
;	O
return	O
status	int
;	O
}	O
double	O
gsl_sf_multiply	function
(	O
const	O
double	O
x	O
,	O
const	O
double	O
y	O
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_multiply_e	O
(	O
x	O
,	O
y	O
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O