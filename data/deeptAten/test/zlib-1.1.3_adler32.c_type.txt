uLong	O
ZEXPORT	O
adler32	O
(	O
adler	O
,	O
buf	O
,	O
len	O
)	O
uLong	O
adler	O
;	O
const	O
Bytef	O
*	O
buf	pointer
;	O
uInt	O
len	O
;	O
{	O
unsigned	O
long	O
s1	O
=	O
adler	pointer
&	O
0xffff	pointer
;	O
unsigned	O
long	O
s2	O
=	O
(	int
adler	O
>>	O
16	O
)	O
&	O
0xffff	pointer
;	O
int	O
k	O
;	O
if	O
(	O
buf	O
==	O
Z_NULL	O
)	O
return	O
1L	int
;	O
while	O
(	O
len	O
>	O
0	O
)	O
{	O
k	O
=	O
len	int
<	O
NMAX	O
?	O
len	O
:	O
NMAX	O
;	O
len	O
-=	O
k	O
;	O
while	O
(	O
k	O
>=	O
16	O
)	O
{	O
DO16	O
(	O
buf	O
)	O
;	O
buf	O
+=	O
16	O
;	O
k	O
-=	O
16	O
;	O
}	O
if	O
(	O
k	O
!=	O
0	O
)	O
do	O
{	O
s1	O
+=	O
*	O
buf	pointer
++	O
;	O
s2	O
+=	O
s1	O
;	O
}	O
while	O
(	O
--	O
k	O
)	O
;	O
s1	O
%=	O
BASE	O
;	O
s2	O
%=	O
BASE	O
;	O
}	O
return	O
(	O
s2	O
<<	O
16	O
)	O
|	O
s1	O
;	O
}	O