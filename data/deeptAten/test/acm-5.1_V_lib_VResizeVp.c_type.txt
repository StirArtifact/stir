extern	O
void	O
VComputeClipNormals	O
(	O
Viewport	O
*	O
v	pointer
)	O
;	O
extern	O
void	O
ResizeAWindow	O
(	O
AWindow	O
*	O
w	pointer
,	O
int	O
height	int
,	O
int	O
width	int
)	O
;	O
void	O
VResizeViewport	O
(	O
Viewport	O
*	O
v	pointer
,	O
double	O
unit	O
,	O
double	O
dist	O
,	O
double	O
scale	O
,	O
int	O
width	int
,	O
int	O
height	int
)	O
{	O
VPoint	O
clip	O
[	O
4	int
]	O
;	O
v	O
->	O
width	pointer
=	O
width	int
;	O
v	O
->	O
height	pointer
=	O
height	int
;	O
if	O
(	O
v	O
->	O
flags	pointer
&	O
VPPixmap	int
)	O
{	O
XFreePixmap	O
(	O
v	pointer
->	O
dpy	pointer
,	O
v	pointer
->	O
monoPixmap	pointer
)	O
;	O
v	O
->	O
monoPixmap	pointer
=	O
XCreatePixmap	int
(	O
v	pointer
->	O
dpy	pointer
,	O
RootWindow	pointer
(	O
v	pointer
->	O
dpy	pointer
,	O
v	pointer
->	O
screen	pointer
)	O
,	O
v	pointer
->	O
width	pointer
,	O
v	int
->	O
height	pointer
,	O
DisplayPlanes	O
(	O
v	pointer
->	O
dpy	pointer
,	O
v	pointer
->	O
screen	pointer
)	O
)	O
;	O
}	O
v	O
->	O
dist	struct
=	O
dist	O
;	O
v	O
->	O
units	pointer
=	O
unit	int
;	O
v	O
->	O
Scale	pointer
.	O
x	pointer
=	O
v	int
->	O
xres	pointer
*	O
dist	O
*	O
scale	O
*	O
4	O
;	O
v	O
->	O
Scale	pointer
.	O
y	pointer
=	O
v	int
->	O
yres	pointer
*	O
dist	O
*	O
scale	O
*	O
4	O
;	O
v	O
->	O
Scale	pointer
.	O
z	pointer
=	O
1.0	int
;	O
v	O
->	O
Middl	pointer
.	O
x	int
=	O
width	int
*	O
2	O
;	O
v	O
->	O
Middl	pointer
.	O
y	int
=	O
height	int
*	O
2	O
;	O
clip	O
[	O
0	int
]	O
.	O
x	pointer
=	O
-	int
width	int
/	O
v	int
->	O
xres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	int
[	O
0	int
]	O
.	O
y	pointer
=	O
-	int
height	int
/	O
v	int
->	O
yres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	pointer
[	O
0	int
]	O
.	O
z	pointer
=	O
dist	int
;	O
clip	pointer
[	O
1	int
]	O
.	O
x	pointer
=	O
-	int
width	int
/	O
v	int
->	O
xres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	int
[	O
1	int
]	O
.	O
y	pointer
=	O
height	int
/	O
v	int
->	O
yres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	pointer
[	O
1	int
]	O
.	O
z	pointer
=	O
dist	int
;	O
clip	pointer
[	O
2	int
]	O
.	O
x	pointer
=	O
width	int
/	O
v	int
->	O
xres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	pointer
[	O
2	int
]	O
.	O
y	pointer
=	O
height	int
/	O
v	int
->	O
yres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	pointer
[	O
2	int
]	O
.	O
z	pointer
=	O
dist	int
;	O
clip	pointer
[	O
3	int
]	O
.	O
x	pointer
=	O
width	int
/	O
v	int
->	O
xres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	pointer
[	O
3	int
]	O
.	O
y	pointer
=	O
-	int
height	int
/	O
v	int
->	O
yres	pointer
/	O
2.0	int
/	O
scale	int
;	O
clip	pointer
[	O
3	int
]	O
.	O
z	pointer
=	O
dist	int
;	O
VDestroyPolygon	pointer
(	O
v	pointer
->	O
clipPoly	pointer
)	O
;	O
v	O
->	O
clipPoly	pointer
=	O
VCreatePolygon	int
(	O
4	pointer
,	O
clip	int
,	O
(	int
VColor	O
*	O
)	O
0	O
)	O
;	O
VGetPlanes	O
(	O
v	O
->	O
clipPoly	pointer
)	O
;	O
VComputeClipNormals	O
(	O
v	O
)	O
;	O
}	O