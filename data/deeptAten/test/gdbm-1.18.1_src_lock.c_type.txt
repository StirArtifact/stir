void	O
_gdbm_unlock_file	O
(	O
GDBM_FILE	O
dbf	O
)	O
{	O
struct	O
flock	struct
fl	O
;	O
switch	O
(	O
dbf	O
->	O
lock_type	pointer
)	O
{	O
case	O
LOCKING_FLOCK	O
:	O
flock	O
(	O
dbf	pointer
->	O
desc	pointer
,	O
LOCK_UN	O
)	O
;	O
break	O
;	O
case	O
LOCKING_LOCKF	O
:	O
lockf	O
(	O
dbf	pointer
->	O
desc	pointer
,	O
F_ULOCK	O
,	O
(	pointer
off_t	O
)	O
0L	O
)	O
;	O
break	O
;	O
case	O
LOCKING_FCNTL	O
:	O
fl	O
.	O
l_type	pointer
=	O
F_UNLCK	O
;	O
fl	O
.	O
l_whence	pointer
=	O
SEEK_SET	int
;	O
fl	O
.	O
l_start	pointer
=	O
fl	int
.	O
l_len	pointer
=	O
(	int
off_t	O
)	O
0L	O
;	O
fcntl	pointer
(	O
dbf	O
->	O
desc	pointer
,	O
F_SETLK	int
,	O
&	pointer
fl	pointer
)	O
;	O
break	O
;	O
case	O
LOCKING_NONE	O
:	O
break	O
;	O
}	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_NONE	O
;	O
}	O
int	O
_gdbm_lock_file	function
(	O
GDBM_FILE	O
dbf	O
)	O
{	O
struct	O
flock	struct
fl	O
;	O
int	O
lock_val	int
=	O
-	O
1	int
;	O
if	O
(	O
dbf	O
->	O
read_write	pointer
==	O
GDBM_READER	O
)	O
lock_val	O
=	O
flock	int
(	O
dbf	pointer
->	O
desc	pointer
,	O
LOCK_SH	pointer
+	O
LOCK_NB	int
)	O
;	O
else	O
lock_val	O
=	O
flock	function
(	O
dbf	pointer
->	O
desc	pointer
,	O
LOCK_EX	pointer
+	O
LOCK_NB	int
)	O
;	O
if	O
(	O
(	O
lock_val	O
==	O
-	O
1	int
)	O
&&	O
(	O
errno	O
==	O
EWOULDBLOCK	O
)	O
)	O
{	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_NONE	int
;	O
return	O
lock_val	int
;	O
}	O
else	O
if	O
(	O
lock_val	O
!=	O
-	O
1	int
)	O
{	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_FLOCK	int
;	O
return	O
lock_val	int
;	O
}	O
lock_val	O
=	O
lockf	O
(	O
dbf	O
->	O
desc	pointer
,	O
F_LOCK	pointer
,	O
(	pointer
off_t	O
)	O
0L	O
)	O
;	O
if	O
(	O
(	O
lock_val	O
==	O
-	O
1	int
)	O
&&	O
(	O
errno	O
==	O
EDEADLK	O
)	O
)	O
{	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_NONE	int
;	O
return	O
lock_val	int
;	O
}	O
else	O
if	O
(	O
lock_val	O
!=	O
-	O
1	int
)	O
{	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_LOCKF	int
;	O
return	O
lock_val	int
;	O
}	O
if	O
(	O
dbf	O
->	O
read_write	pointer
==	O
GDBM_READER	O
)	O
fl	O
.	O
l_type	pointer
=	O
F_RDLCK	int
;	O
else	pointer
fl	O
.	O
l_type	pointer
=	O
F_WRLCK	int
;	O
fl	pointer
.	O
l_whence	pointer
=	O
SEEK_SET	int
;	O
fl	O
.	O
l_start	pointer
=	O
fl	int
.	O
l_len	pointer
=	O
(	int
off_t	O
)	O
0L	O
;	O
lock_val	pointer
=	O
fcntl	O
(	O
dbf	int
->	O
desc	int
,	O
F_SETLK	int
,	O
&	pointer
fl	pointer
)	O
;	O
if	O
(	O
lock_val	O
!=	O
-	O
1	int
)	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_FCNTL	int
;	O
if	O
(	O
lock_val	O
==	O
-	O
1	int
)	O
dbf	O
->	O
lock_type	pointer
=	O
LOCKING_NONE	int
;	O
return	O
lock_val	int
;	O
}	O