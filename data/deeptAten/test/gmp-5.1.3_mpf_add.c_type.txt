void	O
mpf_add	O
(	O
mpf_ptr	O
r	O
,	O
mpf_srcptr	O
u	O
,	O
mpf_srcptr	pointer
v	O
)	O
{	O
mp_srcptr	O
up	pointer
,	O
vp	pointer
;	O
mp_ptr	O
rp	pointer
,	O
tp	pointer
;	O
mp_size_t	pointer
usize	long
,	O
vsize	pointer
,	O
rsize	pointer
;	O
mp_size_t	pointer
prec	long
;	O
mp_exp_t	long
uexp	O
;	O
mp_size_t	long
ediff	long
;	O
mp_limb_t	long
cy	long
;	O
int	O
negate	int
;	O
TMP_DECL	long
;	O
usize	O
=	O
u	int
->	O
_mp_size	long
;	O
vsize	long
=	O
v	int
->	O
_mp_size	long
;	O
if	long
(	O
usize	long
==	O
0	int
)	O
{	O
set_r_v_maybe	O
:	O
if	O
(	O
r	long
!=	O
v	int
)	O
mpf_set	O
(	O
r	pointer
,	O
v	int
)	O
;	O
return	O
;	int
}	O
if	O
(	O
vsize	O
==	O
0	O
)	O
{	O
v	O
=	O
u	int
;	O
goto	O
set_r_v_maybe	O
;	O
}	O
if	O
(	O
(	long
usize	long
^	O
vsize	O
)	O
<	O
0	int
)	O
{	O
__mpf_struct	O
v_negated	O
;	O
v_negated	O
.	O
_mp_size	long
=	O
-	int
vsize	int
;	O
v_negated	O
.	O
_mp_exp	long
=	O
v	int
->	O
_mp_exp	long
;	O
v_negated	O
.	O
_mp_d	long
=	O
v	int
->	O
_mp_d	long
;	O
mpf_sub	O
(	O
r	pointer
,	O
u	int
,	O
&	pointer
v_negated	pointer
)	O
;	O
return	O
;	int
}	O
TMP_MARK	O
;	O
negate	O
=	O
usize	int
<	O
0	int
;	O
if	long
(	O
u	long
->	O
_mp_exp	long
<	O
v	int
->	O
_mp_exp	pointer
)	O
{	O
mpf_srcptr	pointer
t	O
;	O
t	O
=	O
u	int
;	O
u	long
=	O
v	pointer
;	O
v	O
=	O
t	O
;	O
usize	O
=	O
u	int
->	O
_mp_size	pointer
;	O
vsize	O
=	O
v	pointer
->	O
_mp_size	pointer
;	O
}	O
usize	O
=	O
ABS	O
(	O
usize	pointer
)	O
;	O
vsize	O
=	O
ABS	int
(	O
vsize	pointer
)	O
;	O
up	O
=	O
u	O
->	O
_mp_d	pointer
;	O
vp	O
=	O
v	pointer
->	O
_mp_d	pointer
;	O
rp	O
=	O
r	int
->	O
_mp_d	int
;	O
prec	long
=	O
r	int
->	O
_mp_prec	int
;	O
uexp	O
=	O
u	int
->	O
_mp_exp	pointer
;	O
ediff	O
=	O
u	int
->	O
_mp_exp	pointer
-	O
v	int
->	O
_mp_exp	pointer
;	O
if	O
(	O
usize	pointer
>	O
prec	int
)	O
{	O
up	pointer
+=	O
usize	int
-	O
prec	int
;	O
usize	long
=	O
prec	int
;	O
}	O
if	O
(	O
vsize	O
+	O
ediff	int
>	O
prec	int
)	O
{	O
vp	pointer
+=	O
vsize	int
+	O
ediff	int
-	O
prec	int
;	O
vsize	long
=	O
prec	int
-	O
ediff	int
;	O
}	O
tp	O
=	O
TMP_ALLOC_LIMBS	O
(	O
prec	int
)	O
;	O
if	O
(	O
ediff	O
>=	O
prec	int
)	O
{	O
if	O
(	O
rp	O
!=	O
up	int
)	O
MPN_COPY_INCR	O
(	O
rp	pointer
,	O
up	int
,	O
usize	pointer
)	O
;	O
rsize	O
=	O
usize	int
;	O
}	pointer
else	O
{	O
if	O
(	O
usize	O
>	O
ediff	int
)	O
{	O
if	pointer
(	O
vsize	O
+	O
ediff	int
<=	O
usize	int
)	O
{	O
mp_size_t	pointer
size	O
;	O
size	O
=	O
usize	O
-	O
ediff	int
-	O
vsize	int
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
up	pointer
,	O
size	pointer
)	O
;	O
cy	O
=	O
mpn_add	O
(	O
tp	pointer
+	O
size	long
,	O
up	long
+	O
size	long
,	O
usize	pointer
-	O
size	int
,	O
vp	long
,	O
vsize	pointer
)	O
;	O
rsize	O
=	O
usize	O
;	O
}	O
else	O
{	O
mp_size_t	O
size	long
;	O
size	O
=	O
vsize	O
+	O
ediff	int
-	O
usize	int
;	O
MPN_COPY	long
(	O
tp	pointer
,	O
vp	pointer
,	O
size	pointer
)	O
;	O
cy	O
=	O
mpn_add	O
(	O
tp	pointer
+	O
size	long
,	O
up	long
,	O
usize	pointer
,	O
vp	pointer
+	O
size	long
,	O
usize	long
-	O
ediff	int
)	O
;	O
rsize	O
=	O
vsize	O
+	O
ediff	int
;	O
}	long
}	O
else	O
{	O
mp_size_t	O
size	long
;	O
size	O
=	O
vsize	O
+	O
ediff	long
-	O
usize	int
;	O
MPN_COPY	long
(	O
tp	pointer
,	O
vp	pointer
,	O
vsize	pointer
)	O
;	O
MPN_ZERO	O
(	O
tp	pointer
+	O
vsize	long
,	O
ediff	long
-	O
usize	long
)	O
;	O
MPN_COPY	O
(	O
tp	pointer
+	O
size	long
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
cy	O
=	O
0	O
;	O
rsize	long
=	O
size	O
+	O
usize	int
;	O
}	long
MPN_COPY	O
(	O
rp	pointer
,	O
tp	long
,	O
rsize	pointer
)	O
;	O
rp	O
[	O
rsize	int
]	O
=	O
cy	pointer
;	O
rsize	pointer
+=	O
cy	long
;	O
uexp	O
+=	O
cy	long
;	O
}	O
r	O
->	O
_mp_size	long
=	O
negate	int
?	O
-	int
rsize	int
:	O
rsize	O
;	O
r	O
->	O
_mp_exp	long
=	O
uexp	int
;	O
TMP_FREE	long
;	O
}	O