error_t	O
S_dir_notice_changes	O
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mach_port_t	O
notify	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_link	function
(	O
struct	O
sock_user	struct
*	O
dircred	pointer
,	O
struct	O
sock_user	struct
*	O
filecred	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
excl	int
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_lookup	function
(	O
struct	O
sock_user	struct
*	O
dircred	pointer
,	O
char	O
*	O
path	pointer
,	O
int	O
flags	int
,	O
mode_t	O
mode	O
,	O
enum	O
retry_type	O
*	O
retry	pointer
,	O
char	O
*	O
retryname	pointer
,	O
file_t	O
*	O
returned_port	pointer
,	O
mach_msg_type_name_t	O
*	O
returned_port_poly	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_mkdir	function
(	O
struct	O
sock_user	struct
*	O
dircred	pointer
,	O
char	O
*	O
name	pointer
,	O
mode_t	O
mode	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_mkfile	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
flags	O
,	O
mode_t	O
mode	O
,	O
mach_port_t	O
*	O
newnode	pointer
,	O
mach_msg_type_name_t	O
*	O
newnodetype	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_readdir	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
char	O
*	O
*	pointer
data	pointer
,	O
size_t	O
*	O
datacnt	pointer
,	O
boolean_t	O
*	O
data_dealloc	pointer
,	O
int	O
entry	O
,	O
int	O
nentries	int
,	O
vm_size_t	O
bufsiz	O
,	O
int	O
*	int
amt	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_rename	function
(	O
struct	O
sock_user	struct
*	O
fromcred	pointer
,	O
char	O
*	O
fromname	pointer
,	O
struct	O
sock_user	struct
*	O
tocred	pointer
,	O
char	O
*	O
toname	pointer
,	O
int	O
excl	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_rmdir	function
(	O
struct	O
sock_user	struct
*	O
dircred	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_dir_unlink	function
(	O
struct	O
sock_user	struct
*	O
dircred	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_chauthor	function
(	O
struct	O
sock_user	struct
*	O
user	pointer
,	O
uid_t	O
author	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_check_access	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
*	O
type	pointer
)	O
{	O
if	O
(	O
!	O
cred	pointer
)	O
return	O
EOPNOTSUPP	O
;	O
*	O
type	pointer
=	O
0	O
;	O
if	O
(	O
cred	O
->	O
sock	pointer
->	O
read_pipe	pointer
)	O
*	O
type	pointer
|=	O
O_READ	O
;	O
if	O
(	O
cred	O
->	O
sock	pointer
->	O
write_pipe	pointer
)	O
*	O
type	pointer
|=	O
O_WRITE	O
;	O
return	O
0	int
;	O
}	O
error_t	O
S_file_chflags	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
flags	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_notice_changes	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mach_port_t	O
notify	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_chmod	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mode_t	O
mode	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_chown	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
uid_t	O
uid	O
,	O
gid_t	O
gid	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_exec	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
task_t	O
task	O
,	O
int	O
flags	int
,	O
char	O
*	O
argv	pointer
,	O
size_t	O
argvlen	O
,	O
char	O
*	O
envp	pointer
,	O
size_t	O
envplen	long
,	O
mach_port_t	O
*	O
fds	pointer
,	O
size_t	O
fdslen	long
,	O
mach_port_t	O
*	O
portarray	pointer
,	O
size_t	O
portarraylen	long
,	O
int	O
*	int
intarray	pointer
,	O
size_t	O
intarraylen	long
,	O
mach_port_t	O
*	O
deallocnames	pointer
,	O
size_t	O
deallocnameslen	long
,	O
mach_port_t	O
*	O
destroynames	pointer
,	O
size_t	O
destroynameslen	long
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_get_children	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
char	O
*	O
*	pointer
children	pointer
,	O
mach_msg_type_number_t	O
*	O
children_len	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_getcontrol	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mach_port_t	O
*	O
control	pointer
,	O
mach_msg_type_name_t	O
*	O
controltype	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_getfh	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
char	O
*	O
*	pointer
fh	pointer
,	O
size_t	O
*	O
fh_len	pointer
)	O
{	O
return	O
EOPNOTSUPP	O
;	O
}	O
error_t	O
S_file_get_fs_options	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
char	O
*	O
*	pointer
data	pointer
,	O
size_t	O
*	O
data_len	pointer
)	O
{	O
return	O
EOPNOTSUPP	O
;	O
}	O
error_t	O
S_file_getlinknode	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
file_t	O
*	O
port	pointer
,	O
mach_msg_type_name_t	O
*	O
portpoly	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_get_source	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
char	O
*	O
source	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_get_storage_info	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mach_port_t	O
*	O
*	pointer
ports	pointer
,	O
mach_msg_type_name_t	O
*	O
ports_type	pointer
,	O
mach_msg_type_number_t	O
*	O
num_ports	pointer
,	O
int	O
*	int
*	pointer
ints	pointer
,	O
mach_msg_type_number_t	O
*	O
num_ints	pointer
,	O
off_t	O
*	O
*	pointer
offsets	pointer
,	O
mach_msg_type_number_t	O
*	O
num_offsets	pointer
,	O
char	O
*	O
*	pointer
data	pointer
,	O
mach_msg_type_number_t	O
*	O
data_len	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_get_translator	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
char	O
*	O
*	pointer
trans	pointer
,	O
size_t	O
*	O
translen	pointer
)	O
{	O
return	O
EOPNOTSUPP	O
;	O
}	O
error_t	O
S_file_get_translator_cntl	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mach_port_t	O
*	O
ctl	pointer
,	O
mach_msg_type_name_t	O
*	O
ctltype	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_lock	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
flags	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_lock_stat	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
*	O
mystatus	pointer
,	O
int	O
*	O
otherstatus	pointer
)	O
{	O
return	O
EOPNOTSUPP	O
;	O
}	O
error_t	O
S_file_reparent	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
mach_port_t	O
parent	O
,	O
mach_port_t	O
*	O
new	pointer
,	O
mach_msg_type_name_t	O
*	O
new_type	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_set_size	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
off_t	O
size	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_set_translator	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
passive_flags	O
,	O
int	O
active_flags	int
,	O
int	O
killtrans_flags	int
,	O
char	O
*	O
passive	pointer
,	O
size_t	O
passivelen	O
,	O
fsys_t	O
active	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_statfs	function
(	O
struct	O
sock_user	struct
*	O
file	pointer
,	O
fsys_statfsbuf_t	O
*	O
statbuf	pointer
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_sync	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
wait	O
,	O
int	O
omitmetadata	int
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_syncfs	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
int	O
wait	O
,	O
int	O
dochildren	int
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O
error_t	O
S_file_utimes	function
(	O
struct	O
sock_user	struct
*	O
cred	pointer
,	O
time_value_t	O
atime	O
,	O
time_value_t	O
mtime	O
)	O
{	O
return	O
EOPNOTSUPP	int
;	O
}	O