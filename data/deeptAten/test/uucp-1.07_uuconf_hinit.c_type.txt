const	O
char	O
_uuconf_hinit_rcsid	array
[	O
]	O
=	O
"$Id: hinit.c,v 1.9 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
static	O
const	O
char	O
abHoldconfiglib	array
[	O
]	O
=	O
OLDCONFIGLIB	O
;	O
int	O
uuconf_hdb_init	function
(	O
ppglobal	pointer
,	O
zprogram	pointer
)	O
pointer	pointer
*	O
ppglobal	pointer
;	O
const	O
char	O
*	O
zprogram	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
*	O
pqglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
*	O
)	O
ppglobal	pointer
;	O
int	O
iret	int
;	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
pointer	pointer
pblock	pointer
;	O
char	O
abdialcodes	char
[	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_DIALCODES	pointer
-	O
1	int
]	O
;	O
char	O
*	O
zsys	pointer
;	O
FILE	struct
*	O
e	pointer
;	O
if	O
(	O
*	O
pqglobal	pointer
==	O
NULL	O
)	O
{	O
iret	int
=	O
_uuconf_iinit_global	function
(	O
pqglobal	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
qglobal	pointer
=	O
*	O
pqglobal	pointer
;	O
pblock	pointer
=	O
qglobal	pointer
->	O
pblock	pointer
;	O
if	O
(	O
zprogram	pointer
==	O
NULL	O
||	O
strcmp	function
(	O
zprogram	pointer
,	O
"uucp"	pointer
)	O
==	O
0	int
)	O
zprogram	pointer
=	O
"uucico"	pointer
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
abdialcodes	char
,	O
(	O
pointer	pointer
)	O
abHoldconfiglib	array
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
abdialcodes	char
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
HDB_DIALCODES	pointer
,	O
sizeof	O
HDB_DIALCODES	pointer
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
abdialcodes	char
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzdialcodefiles	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
zsys	pointer
=	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_SYSFILES	pointer
-	O
1	int
)	O
;	O
if	O
(	O
zsys	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zsys	pointer
,	O
(	O
pointer	pointer
)	O
abHoldconfiglib	array
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
zsys	pointer
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
HDB_SYSFILES	pointer
,	O
sizeof	O
HDB_SYSFILES	pointer
)	O
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
e	pointer
=	O
fopen	function
(	O
zsys	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
uuconf_free	function
(	O
pblock	pointer
,	O
zsys	pointer
)	O
;	O
else	O
{	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
char	O
*	O
*	O
pzargs	pointer
;	O
size_t	long
cargs	int
;	O
char	O
*	O
*	O
pzcolon	pointer
;	O
size_t	long
ccolon	long
;	O
int	O
cchars	int
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
pzargs	pointer
=	O
NULL	O
;	O
cargs	int
=	O
0	int
;	O
pzcolon	pointer
=	O
NULL	O
;	O
ccolon	long
=	O
0	int
;	O
qglobal	pointer
->	O
ilineno	int
=	O
0	int
;	O
while	O
(	O
iret	int
==	O
UUCONF_SUCCESS	O
&&	O
(	O
cchars	int
=	O
_uuconf_getline	function
(	O
qglobal	pointer
,	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
)	O
>	O
0	int
)	O
{	O
int	O
ctypes	int
,	O
cnames	int
;	O
int	O
i	int
;	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
--	O
cchars	int
;	O
if	O
(	O
zline	pointer
[	O
cchars	int
]	O
==	O
'\n'	O
)	O
zline	pointer
[	O
cchars	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
zline	pointer
[	O
0	int
]	O
==	O
'#'	O
)	O
continue	O
;	O
ctypes	int
=	O
_uuconf_istrsplit	function
(	O
zline	pointer
,	O
'\0'	O
,	O
&	O
pzargs	pointer
,	O
&	O
cargs	int
)	O
;	O
if	O
(	O
ctypes	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
if	O
(	O
ctypes	int
==	O
0	int
)	O
continue	O
;	O
if	O
(	O
strncmp	function
(	O
pzargs	pointer
[	O
0	int
]	O
,	O
"service="	pointer
,	O
sizeof	O
"service="	pointer
-	O
1	int
)	O
!=	O
0	int
)	O
{	O
iret	int
=	O
UUCONF_SYNTAX_ERROR	O
;	O
break	O
;	O
}	O
pzargs	pointer
[	O
0	int
]	O
+=	O
sizeof	O
"service="	pointer
-	O
1	int
;	O
cnames	int
=	O
_uuconf_istrsplit	function
(	O
pzargs	pointer
[	O
0	int
]	O
,	O
':'	O
,	O
&	O
pzcolon	pointer
,	O
&	O
ccolon	long
)	O
;	O
if	O
(	O
cnames	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cnames	int
;	O
i	int
++	O
)	O
if	O
(	O
strcmp	function
(	O
zprogram	pointer
,	O
pzcolon	pointer
[	O
i	int
]	O
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	int
>=	O
cnames	int
)	O
continue	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
ctypes	int
&&	O
iret	int
==	O
UUCONF_SUCCESS	O
;	O
i	int
++	O
)	O
{	O
char	O
*	O
*	O
*	O
ppz	pointer
;	O
int	O
cfiles	int
,	O
ifile	int
;	O
if	O
(	O
strncmp	function
(	O
pzargs	pointer
[	O
i	int
]	O
,	O
"systems="	pointer
,	O
sizeof	O
"systems="	pointer
-	O
1	int
)	O
==	O
0	int
)	O
{	O
ppz	pointer
=	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_systems	pointer
;	O
pzargs	pointer
[	O
i	int
]	O
+=	O
sizeof	O
"systems="	pointer
-	O
1	int
;	O
}	O
else	O
if	O
(	O
strncmp	function
(	O
pzargs	pointer
[	O
i	int
]	O
,	O
"devices="	pointer
,	O
sizeof	O
"devices="	pointer
-	O
1	int
)	O
==	O
0	int
)	O
{	O
ppz	pointer
=	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_devices	pointer
;	O
pzargs	pointer
[	O
i	int
]	O
+=	O
sizeof	O
"devices="	pointer
-	O
1	int
;	O
}	O
else	O
if	O
(	O
strncmp	function
(	O
pzargs	pointer
[	O
i	int
]	O
,	O
"dialers="	pointer
,	O
sizeof	O
"dialers="	pointer
-	O
1	int
)	O
==	O
0	int
)	O
{	O
ppz	pointer
=	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_dialers	pointer
;	O
pzargs	pointer
[	O
i	int
]	O
+=	O
sizeof	O
"dialers="	pointer
-	O
1	int
;	O
}	O
else	O
{	O
iret	int
=	O
UUCONF_SYNTAX_ERROR	O
;	O
break	O
;	O
}	O
cfiles	int
=	O
_uuconf_istrsplit	function
(	O
pzargs	pointer
[	O
i	int
]	O
,	O
':'	O
,	O
&	O
pzcolon	pointer
,	O
&	O
ccolon	long
)	O
;	O
if	O
(	O
cfiles	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
for	O
(	O
ifile	int
=	O
0	int
;	O
ifile	int
<	O
cfiles	int
&&	O
iret	int
==	O
UUCONF_SUCCESS	O
;	O
ifile	int
++	O
)	O
{	O
if	O
(	O
pzcolon	pointer
[	O
ifile	int
]	O
[	O
0	int
]	O
==	O
'/'	O
)	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
pzcolon	pointer
[	O
ifile	int
]	O
,	O
TRUE	O
,	O
FALSE	O
,	O
ppz	pointer
,	O
pblock	pointer
)	O
;	O
else	O
{	O
char	O
*	O
zdir	pointer
;	O
size_t	long
clen	long
;	O
clen	long
=	O
strlen	function
(	O
pzcolon	pointer
[	O
ifile	int
]	O
)	O
;	O
zdir	pointer
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
(	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_SEPARATOR	pointer
+	O
clen	long
-	O
1	int
)	O
)	O
;	O
if	O
(	O
zdir	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zdir	pointer
,	O
(	O
pointer	pointer
)	O
abHoldconfiglib	array
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
zdir	pointer
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
HDB_SEPARATOR	pointer
,	O
sizeof	O
HDB_SEPARATOR	pointer
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
zdir	pointer
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
+	O
sizeof	O
HDB_SEPARATOR	pointer
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
pzcolon	pointer
[	O
ifile	int
]	O
,	O
clen	long
+	O
1	int
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
zdir	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
ppz	pointer
,	O
pblock	pointer
)	O
;	O
}	O
}	O
}	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
pzargs	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzargs	pointer
)	O
;	O
if	O
(	O
pzcolon	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzcolon	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
qglobal	pointer
->	O
zfilename	pointer
=	O
zsys	pointer
;	O
return	O
iret	int
|	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
}	O
if	O
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_systems	pointer
==	O
NULL	O
)	O
{	O
char	O
ab	char
[	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_SYSTEMS	pointer
-	O
1	int
]	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
ab	char
,	O
(	O
pointer	pointer
)	O
abHoldconfiglib	array
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
ab	char
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
HDB_SYSTEMS	pointer
,	O
sizeof	O
HDB_SYSTEMS	pointer
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
ab	char
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_systems	pointer
,	O
pblock	pointer
)	O
;	O
}	O
if	O
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_devices	pointer
==	O
NULL	O
&&	O
iret	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
char	O
ab	char
[	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_DEVICES	pointer
-	O
1	int
]	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
ab	char
,	O
(	O
pointer	pointer
)	O
abHoldconfiglib	array
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
ab	char
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
HDB_DEVICES	pointer
,	O
sizeof	O
HDB_DEVICES	pointer
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
ab	char
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_devices	pointer
,	O
pblock	pointer
)	O
;	O
}	O
if	O
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_dialers	pointer
==	O
NULL	O
&&	O
iret	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
char	O
ab	char
[	O
sizeof	O
OLDCONFIGLIB	O
+	O
sizeof	O
HDB_DIALERS	pointer
-	O
1	int
]	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
ab	char
,	O
(	O
pointer	pointer
)	O
abHoldconfiglib	array
,	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
ab	char
+	O
sizeof	O
OLDCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
HDB_DIALERS	pointer
,	O
sizeof	O
HDB_DIALERS	pointer
)	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
ab	char
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_dialers	pointer
,	O
pblock	pointer
)	O
;	O
}	O
return	O
iret	int
;	O
}	O
