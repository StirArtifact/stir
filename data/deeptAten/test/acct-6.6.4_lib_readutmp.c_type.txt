char	O
*	O
extract_trimmed_name	O
(	O
const	O
STRUCT_UTMP	O
*	O
ut	pointer
)	O
{	O
char	O
*	O
p	pointer
,	O
*	O
trimmed_name	pointer
;	O
trimmed_name	O
=	O
xmalloc	O
(	O
sizeof	O
(	O
UT_USER	pointer
(	O
ut	pointer
)	O
)	O
+	O
1	int
)	O
;	O
strncpy	O
(	O
trimmed_name	pointer
,	O
UT_USER	O
(	O
ut	pointer
)	O
,	O
sizeof	O
(	O
UT_USER	pointer
(	O
ut	pointer
)	O
)	O
)	O
;	O
trimmed_name	O
[	O
sizeof	O
(	O
UT_USER	pointer
(	O
ut	pointer
)	O
)	O
]	O
=	O
'\0'	pointer
;	O
for	O
(	O
p	O
=	O
trimmed_name	int
+	O
strlen	int
(	O
trimmed_name	pointer
)	O
;	O
trimmed_name	O
<	O
p	O
&&	O
p	O
[	O
-	int
1	int
]	O
==	O
' '	O
;	O
*	pointer
--	pointer
p	O
=	O
'\0'	O
)	O
continue	O
;	O
return	O
trimmed_name	int
;	O
}	O
static	O
bool	O
desirable_utmp_entry	O
(	O
STRUCT_UTMP	O
const	O
*	O
u	pointer
,	O
int	O
options	O
)	O
{	O
bool	O
user_proc	int
=	O
IS_USER_PROCESS	O
(	O
u	O
)	O
;	O
if	O
(	O
(	O
options	O
&	O
READ_UTMP_USER_PROCESS	pointer
)	O
&&	O
!	O
user_proc	O
)	O
return	O
false	O
;	O
if	O
(	O
(	O
options	O
&	O
READ_UTMP_CHECK_PIDS	pointer
)	O
&&	O
user_proc	O
&&	O
0	O
<	O
UT_PID	int
(	O
u	pointer
)	O
&&	O
(	O
kill	O
(	O
UT_PID	pointer
(	O
u	pointer
)	O
,	O
0	O
)	O
<	O
0	int
&&	O
errno	O
==	O
ESRCH	O
)	O
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
int	O
read_utmp	function
(	O
char	O
const	O
*	O
file	pointer
,	O
size_t	O
*	O
n_entries	pointer
,	O
STRUCT_UTMP	O
*	O
*	pointer
utmp_buf	pointer
,	O
int	O
options	O
)	O
{	O
size_t	O
n_read	O
=	O
0	O
;	O
size_t	O
n_alloc	O
=	O
0	pointer
;	O
STRUCT_UTMP	O
*	O
utmp	O
=	O
NULL	O
;	O
STRUCT_UTMP	O
*	O
u	O
;	O
UTMP_NAME_FUNCTION	O
(	O
file	O
)	O
;	O
SET_UTMP_ENT	O
(	O
)	O
;	O
while	O
(	O
(	O
u	O
=	O
GET_UTMP_ENT	O
(	O
)	pointer
)	O
!=	O
NULL	O
)	O
if	O
(	O
desirable_utmp_entry	O
(	O
u	pointer
,	O
options	pointer
)	O
)	O
{	O
if	O
(	O
n_read	O
==	O
n_alloc	O
)	O
utmp	O
=	O
x2nrealloc	pointer
(	O
utmp	pointer
,	O
&	O
n_alloc	pointer
,	O
sizeof	O
*	O
utmp	pointer
)	O
;	O
utmp	O
[	O
n_read	O
++	O
]	O
=	O
*	O
u	pointer
;	O
}	O
END_UTMP_ENT	O
(	O
)	O
;	O
*	O
n_entries	pointer
=	O
n_read	O
;	O
*	O
utmp_buf	pointer
=	O
utmp	O
;	O
return	O
0	int
;	O
}	O