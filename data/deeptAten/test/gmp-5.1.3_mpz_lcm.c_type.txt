void	O
mpz_lcm	O
(	O
mpz_ptr	O
r	O
,	O
mpz_srcptr	O
u	O
,	O
mpz_srcptr	pointer
v	O
)	O
{	O
mpz_t	O
g	O
;	O
mp_size_t	O
usize	O
,	O
vsize	pointer
;	O
TMP_DECL	O
;	O
usize	O
=	O
SIZ	O
(	O
u	pointer
)	O
;	O
vsize	O
=	O
SIZ	O
(	O
v	pointer
)	O
;	O
if	O
(	O
usize	O
==	O
0	O
||	O
vsize	O
==	O
0	O
)	O
{	O
SIZ	O
(	O
r	pointer
)	O
=	O
0	int
;	O
return	O
;	int
}	O
usize	O
=	O
ABS	O
(	O
usize	O
)	O
;	O
vsize	O
=	O
ABS	O
(	O
vsize	pointer
)	O
;	O
if	O
(	O
vsize	O
==	O
1	O
||	O
usize	O
==	O
1	O
)	O
{	O
mp_limb_t	O
vl	O
,	O
gl	O
,	O
c	pointer
;	O
mp_srcptr	O
up	O
;	O
mp_ptr	O
rp	O
;	O
if	pointer
(	O
usize	long
==	O
1	O
)	O
{	O
usize	O
=	O
vsize	O
;	O
MPZ_SRCPTR_SWAP	O
(	O
u	pointer
,	O
v	pointer
)	O
;	O
}	O
MPZ_REALLOC	O
(	O
r	O
,	O
usize	O
+	O
1	int
)	O
;	O
up	O
=	O
PTR	O
(	O
u	pointer
)	O
;	O
vl	O
=	O
PTR	O
(	O
v	pointer
)	O
[	O
0	int
]	O
;	O
gl	O
=	O
mpn_gcd_1	O
(	O
up	pointer
,	O
usize	pointer
,	O
vl	pointer
)	O
;	O
vl	O
/=	O
gl	O
;	O
rp	O
=	O
PTR	O
(	O
r	pointer
)	O
;	O
c	O
=	O
mpn_mul_1	O
(	O
rp	pointer
,	O
up	O
,	O
usize	pointer
,	O
vl	pointer
)	O
;	O
rp	O
[	O
usize	int
]	O
=	O
c	pointer
;	O
usize	O
+=	O
(	O
c	O
!=	O
0	O
)	O
;	O
SIZ	O
(	O
r	pointer
)	O
=	O
usize	int
;	O
return	O
;	int
}	O
TMP_MARK	O
;	O
MPZ_TMP_INIT	O
(	O
g	O
,	O
usize	pointer
)	O
;	O
mpz_gcd	O
(	O
g	pointer
,	O
u	pointer
,	O
v	pointer
)	O
;	O
mpz_divexact	O
(	O
g	O
,	O
u	O
,	O
g	pointer
)	O
;	O
mpz_mul	O
(	O
r	pointer
,	O
g	O
,	O
v	pointer
)	O
;	O
SIZ	O
(	O
r	pointer
)	O
=	O
ABS	int
(	O
SIZ	pointer
(	O
r	pointer
)	O
)	O
;	O
TMP_FREE	O
;	O
}	O