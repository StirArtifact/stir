static	O
error_t	O
_write	function
(	O
int	O
fd	int
,	O
const	O
void	O
*	O
buf	pointer
,	O
size_t	O
len	long
)	O
{	O
while	O
(	O
len	int
>	O
0	int
)	O
{	O
ssize_t	O
wr	long
=	O
write	int
(	O
fd	pointer
,	O
buf	pointer
,	O
len	int
)	O
;	O
if	O
(	O
wr	int
<	O
0	int
)	O
return	O
errno	int
;	O
else	O
if	O
(	O
wr	int
==	O
0	O
)	O
return	O
EPIPE	int
;	O
buf	O
+=	O
wr	int
;	O
len	O
-=	O
wr	int
;	O
}	long
return	O
0	int
;	O
}	O
static	O
error_t	O
_skip_write	function
(	O
int	O
fd	int
,	O
const	O
void	O
*	O
buf	pointer
,	O
size_t	O
len	long
,	O
size_t	O
*	long
skip	pointer
)	O
{	O
size_t	O
sk	long
=	O
*	pointer
skip	pointer
;	O
error_t	O
err	long
=	O
0	O
;	O
if	O
(	O
len	long
>	O
sk	int
)	O
{	O
err	O
=	O
_write	int
(	O
fd	pointer
,	O
buf	O
+	O
sk	int
,	O
len	int
-	O
sk	int
)	O
;	O
*	O
skip	pointer
=	O
0	O
;	O
}	O
else	O
*	O
skip	function
=	O
sk	O
-	O
len	int
;	O
return	O
err	int
;	O
}	O
static	O
error_t	O
_long_cmd	function
(	O
int	O
fd	int
,	O
const	O
char	O
*	O
cmd	pointer
,	O
const	O
char	O
*	O
arg	pointer
,	O
size_t	O
skip	long
)	O
{	O
error_t	O
err	int
=	O
_skip_write	int
(	O
fd	O
,	O
cmd	O
,	O
strlen	O
(	O
cmd	pointer
)	O
,	O
&	O
skip	pointer
)	O
;	O
if	O
(	O
!	O
err	O
&&	O
arg	O
)	O
{	O
err	O
=	O
_skip_write	int
(	O
fd	pointer
,	O
" "	O
,	O
1	int
,	O
&	int
skip	pointer
)	O
;	O
if	O
(	O
!	O
err	O
)	O
err	O
=	O
_skip_write	int
(	O
fd	pointer
,	O
arg	O
,	O
strlen	int
(	O
arg	pointer
)	O
,	O
&	O
skip	pointer
)	O
;	O
}	O
if	O
(	O
!	O
err	pointer
)	O
err	O
=	O
_skip_write	int
(	O
fd	pointer
,	O
"\r\n"	O
,	O
2	int
,	O
&	int
skip	pointer
)	O
;	O
return	O
err	int
;	O
}	O
error_t	O
ftp_conn_cmd	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
cmd	pointer
,	O
const	O
char	O
*	O
arg	pointer
,	O
int	O
*	int
reply	pointer
,	O
const	O
char	O
*	O
*	pointer
reply_txt	pointer
)	O
{	O
error_t	O
err	int
=	O
0	int
;	O
if	O
(	O
conn	O
->	O
control	pointer
<	O
0	pointer
)	O
err	O
=	O
EPIPE	int
;	O
else	O
{	O
char	O
buf	O
[	O
200	int
]	O
;	O
size_t	pointer
out	long
=	O
snprintf	pointer
(	O
buf	pointer
,	O
sizeof	pointer
buf	O
,	O
arg	pointer
?	O
"%s %s\r\n"	int
:	O
"%s\r\n"	pointer
,	O
cmd	pointer
,	O
arg	pointer
)	O
;	O
err	O
=	O
_write	function
(	O
conn	pointer
->	O
control	pointer
,	O
buf	pointer
,	O
out	pointer
)	O
;	O
if	O
(	O
!	pointer
err	O
&&	O
conn	O
->	O
hooks	pointer
&&	O
conn	pointer
->	O
hooks	pointer
->	O
cntl_debug	pointer
)	O
{	O
buf	pointer
[	O
out	int
-	O
2	int
]	O
=	O
'\0'	pointer
;	O
(	pointer
*	O
conn	pointer
->	O
hooks	pointer
->	O
cntl_debug	pointer
)	O
(	O
conn	pointer
,	O
FTP_CONN_CNTL_DEBUG_CMD	pointer
,	O
buf	pointer
)	O
;	O
}	O
if	O
(	O
!	pointer
err	pointer
&&	O
out	O
==	O
sizeof	O
buf	O
)	O
err	O
=	O
_long_cmd	int
(	O
conn	pointer
->	O
control	pointer
,	O
cmd	pointer
,	O
arg	pointer
,	O
sizeof	int
buf	O
)	O
;	O
}	O
if	O
(	O
!	O
err	pointer
&&	O
(	O
reply	O
||	O
reply_txt	O
)	O
)	O
err	O
=	O
ftp_conn_get_reply	int
(	O
conn	pointer
,	O
reply	pointer
,	O
reply_txt	pointer
)	O
;	O
return	O
err	int
;	O
}	O
error_t	O
ftp_conn_cmd_reopen	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
cmd	pointer
,	O
const	O
char	O
*	O
arg	pointer
,	O
int	O
*	int
reply	pointer
,	O
const	O
char	O
*	O
*	pointer
reply_txt	pointer
)	O
{	O
int	O
_reply	int
;	O
error_t	O
err	int
;	O
err	O
=	O
ftp_conn_cmd	function
(	O
conn	O
,	O
cmd	pointer
,	O
arg	pointer
,	O
&	int
_reply	pointer
,	O
reply_txt	O
)	O
;	O
if	O
(	O
err	O
==	O
EPIPE	O
||	O
(	int
!	O
err	O
&&	O
_reply	O
==	O
REPLY_CLOSED	O
)	O
)	O
{	O
err	O
=	O
ftp_conn_open	int
(	O
conn	pointer
)	O
;	O
if	O
(	O
!	O
err	O
)	O
err	O
=	O
ftp_conn_cmd	int
(	O
conn	pointer
,	O
cmd	pointer
,	O
arg	pointer
,	O
reply	int
,	O
reply_txt	int
)	O
;	O
}	O
else	O
if	O
(	O
reply	O
)	O
*	O
reply	pointer
=	O
_reply	int
;	O
return	O
err	int
;	O
}	O
void	O
ftp_conn_abort	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
)	O
{	O
if	O
(	O
conn	pointer
->	O
control	pointer
>=	O
0	pointer
)	O
{	O
static	O
const	O
char	O
ip	O
[	O
]	O
=	O
{	O
IAC	pointer
,	O
IP	pointer
,	O
IAC	pointer
}	O
;	O
static	O
const	O
char	O
abor	O
[	O
]	O
=	O
{	O
DM	O
,	O
'a'	pointer
,	O
'b'	O
,	O
'o'	O
,	O
'r'	O
,	O
'\r'	O
,	O
'\n'	O
}	O
;	O
if	O
(	O
conn	O
->	O
hooks	pointer
&&	O
conn	pointer
->	O
hooks	pointer
->	O
cntl_debug	pointer
)	O
(	O
*	pointer
conn	pointer
->	O
hooks	pointer
->	O
cntl_debug	pointer
)	O
(	O
conn	pointer
,	O
FTP_CONN_CNTL_DEBUG_CMD	pointer
,	O
"abor"	pointer
)	O
;	O
if	O
(	O
send	pointer
(	O
conn	int
->	O
control	pointer
,	O
ip	pointer
,	O
sizeof	pointer
ip	O
,	O
MSG_OOB	pointer
)	O
==	O
sizeof	int
ip	O
&&	O
write	O
(	O
conn	pointer
->	O
control	pointer
,	O
abor	pointer
,	O
sizeof	pointer
abor	O
)	O
==	O
sizeof	int
abor	O
)	O
{	O
int	O
reply	int
;	O
do	O
ftp_conn_get_raw_reply	O
(	O
conn	O
,	O
&	pointer
reply	pointer
,	O
0	O
)	O
;	O
while	O
(	O
reply	O
==	O
REPLY_ABORTED	O
)	O
;	O
if	O
(	O
reply	int
!=	O
REPLY_TRANS_OK	O
&&	O
reply	pointer
!=	O
REPLY_ABORT_OK	O
)	O
ftp_conn_close	O
(	O
conn	pointer
)	O
;	O
}	O
else	O
ftp_conn_close	O
(	O
conn	pointer
)	O
;	O
}	O
}	O