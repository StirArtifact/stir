error_t	O
cons_switch	O
(	O
vcons_t	O
vcons	O
,	O
int	O
id	int
,	O
int	O
delta	int
,	O
vcons_t	O
*	O
r_vcons	pointer
)	O
{	O
error_t	O
err	O
=	O
0	int
;	O
cons_t	O
cons	O
=	O
vcons	O
->	O
cons	pointer
;	O
vcons_list_t	O
vcons_entry	O
=	O
NULL	pointer
;	O
if	O
(	O
!	O
id	O
&&	O
!	O
delta	O
)	O
return	O
0	int
;	O
pthread_mutex_lock	O
(	O
&	O
cons	pointer
->	O
lock	pointer
)	O
;	O
if	O
(	O
id	O
)	O
{	O
vcons_entry	O
=	O
cons	O
->	O
vcons_list	pointer
;	O
while	O
(	O
vcons_entry	O
&&	O
vcons_entry	O
->	O
id	pointer
!=	O
id	O
)	O
vcons_entry	O
=	O
vcons_entry	pointer
->	O
next	pointer
;	O
}	O
else	O
if	O
(	O
delta	O
>	O
0	int
)	O
{	O
vcons_entry	O
=	O
vcons	O
->	O
vcons_entry	pointer
;	O
while	O
(	O
delta	O
--	O
>	O
0	int
)	O
{	O
vcons_entry	O
=	O
vcons_entry	O
->	O
next	pointer
;	O
if	O
(	O
!	O
vcons_entry	O
)	O
vcons_entry	O
=	O
cons	int
->	O
vcons_list	pointer
;	O
}	O
}	O
else	O
{	O
assert	O
(	O
delta	O
<	O
0	int
)	O
;	O
vcons_entry	O
=	O
vcons	O
->	O
vcons_entry	pointer
;	O
while	O
(	O
delta	O
++	O
<	O
0	int
)	O
{	O
vcons_entry	O
=	O
vcons_entry	O
->	O
prev	pointer
;	O
if	O
(	O
!	O
vcons_entry	O
)	O
vcons_entry	O
=	O
cons	int
->	O
vcons_last	pointer
;	O
}	O
}	O
if	O
(	O
!	O
vcons_entry	O
)	O
{	O
pthread_mutex_unlock	O
(	O
&	O
cons	struct
->	O
lock	struct
)	O
;	O
return	O
ESRCH	int
;	O
}	O
if	O
(	O
vcons_entry	O
->	O
vcons	pointer
)	O
{	O
*	O
r_vcons	pointer
=	O
vcons_entry	O
->	O
vcons	pointer
;	O
pthread_mutex_lock	O
(	O
&	O
vcons_entry	struct
->	O
vcons	pointer
->	O
lock	pointer
)	O
;	O
}	O
else	O
{	O
err	O
=	O
cons_vcons_open	O
(	O
cons	pointer
,	O
vcons_entry	O
,	O
r_vcons	O
)	O
;	O
if	O
(	O
!	O
err	O
)	O
vcons_entry	O
->	O
vcons	pointer
=	O
*	int
r_vcons	pointer
;	O
}	O
pthread_mutex_unlock	O
(	O
&	O
cons	struct
->	O
lock	struct
)	O
;	O
return	O
err	int
;	O
}	O