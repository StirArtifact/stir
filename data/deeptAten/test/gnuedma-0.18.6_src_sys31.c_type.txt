ESint32	O
_edma_ini_sys_table	O
(	O
EPChar	O
EdmaPath	pointer
)	O
{	O
FILE	O
*	O
f	pointer
;	O
EUint16	O
n	O
,	O
i	O
;	O
static	O
EUint32	O
Maqid	O
;	O
char	O
nom	O
[	O
32	O
]	O
;	O
EChar	O
SysFile	O
[	O
256	int
]	O
;	O
strncpy	O
(	O
SysFile	pointer
,	O
EdmaPath	pointer
,	O
256	pointer
)	O
;	O
strncat	O
(	O
SysFile	pointer
,	O
"/etc/sysdat32.cfg"	pointer
,	O
256	pointer
)	O
;	O
f	O
=	O
fopen	O
(	O
SysFile	pointer
,	O
"rt"	pointer
)	O
;	O
if	O
(	O
f	int
==	O
NULL	O
)	O
{	O
edma_print	O
(	O
"(ERROR)System File not found"	pointer
)	O
;	O
return	O
-	int
1	int
;	O
}	O
fscanf	O
(	O
f	pointer
,	O
"%s"	pointer
,	O
nom	pointer
)	O
;	O
n	O
=	O
atol	int
(	O
nom	int
)	O
;	O
n	O
--	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
fscanf	O
(	O
f	pointer
,	O
"%s"	pointer
,	O
nom	pointer
)	O
;	O
fscanf	O
(	O
f	pointer
,	O
"%ld"	pointer
,	O
&	pointer
Maqid	pointer
)	O
;	O
GVar	O
->	O
SysMaq	int
[	O
i	int
]	O
.	O
Id	pointer
=	O
Maqid	pointer
;	O
memcpy	pointer
(	O
GVar	pointer
->	O
SysMaq	pointer
[	O
i	int
]	O
.	O
Nombre	pointer
,	O
nom	pointer
,	O
strlen	pointer
(	O
nom	pointer
)	O
)	O
;	O
}	O
GVar	O
->	O
nMaqNum	pointer
=	O
n	O
;	O
fscanf	O
(	O
f	pointer
,	O
"%ld"	pointer
,	O
&	pointer
GVar	pointer
->	O
nSONum	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
GVar	int
->	O
nSONum	int
;	O
i	pointer
++	O
)	O
{	O
fscanf	O
(	O
f	pointer
,	O
"%s"	pointer
,	O
GVar	pointer
->	O
SysSO	pointer
[	O
i	int
]	O
.	O
Nombre	pointer
)	O
;	O
fscanf	O
(	O
f	pointer
,	O
"%ld"	pointer
,	O
&	pointer
GVar	pointer
->	O
SysSO	int
[	O
i	int
]	O
.	O
Id	pointer
)	O
;	O
}	O
fclose	O
(	O
f	pointer
)	O
;	O
return	O
0	int
;	O
}	O
EUint32	O
EDMAPROC	O
edma_get_so_id	function
(	O
EPChar	O
name	pointer
)	O
{	O
EUint32	O
i	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
GVar	int
->	O
nSONum	int
;	O
i	pointer
++	O
)	O
if	O
(	O
strcmp	int
(	O
GVar	pointer
->	O
SysSO	pointer
[	O
i	int
]	O
.	O
Nombre	pointer
,	O
name	pointer
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	int
==	O
GVar	int
->	O
nSONum	int
)	O
edma_print	O
(	O
"(ERROR)Operating System not found"	pointer
)	O
;	O
return	O
i	int
;	O
}	O
EUint32	O
EDMAPROC	O
edma_get_arch_id	function
(	O
EPChar	int
name	pointer
)	O
{	O
EUint32	O
i	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
GVar	int
->	O
nMaqNum	int
;	O
i	pointer
++	O
)	O
if	O
(	O
strcmp	int
(	O
GVar	pointer
->	O
SysMaq	pointer
[	O
i	int
]	O
.	O
Nombre	pointer
,	O
name	pointer
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	int
==	O
GVar	int
->	O
nMaqNum	int
)	O
edma_print	O
(	O
"(ERROR)Machine not found"	pointer
)	O
;	O
return	O
i	int
;	O
}	O
EUint32	O
EDMAPROC	O
edma_get_so_name	function
(	O
EUint32	int
id	O
,	O
EPChar	pointer
*	pointer
name	pointer
)	O
{	O
if	O
(	O
id	O
>=	O
GVar	int
->	O
nSONum	int
)	O
{	O
edma_print	O
(	O
"(ERROR)Operating System not found"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
*	O
name	function
=	O
GVar	O
->	O
SysSO	int
[	O
id	int
]	O
.	O
Nombre	pointer
;	O
return	pointer
1	int
;	O
}	O
EUint32	O
EDMAPROC	O
edma_get_arch_name	function
(	O
EUint32	O
id	O
,	O
EPChar	pointer
*	pointer
name	pointer
)	O
{	O
if	O
(	O
id	O
>=	O
GVar	int
->	O
nMaqNum	int
)	O
{	O
edma_print	O
(	O
"(ERROR)Machine not found"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
*	O
name	function
=	O
GVar	O
->	O
SysMaq	int
[	O
id	int
]	O
.	O
Nombre	pointer
;	O
return	pointer
1	int
;	O
}	O
EUint32	O
EDMAPROC	O
edma_get_so_num	function
(	O
void	O
)	O
{	O
return	O
GVar	int
->	O
nSONum	int
;	O
}	O
EUint32	O
EDMAPROC	O
edma_get_arch_num	int
(	O
void	O
)	O
{	O
return	O
GVar	int
->	O
nMaqNum	int
;	O
}	O