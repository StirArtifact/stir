static	O
const	O
char	O
revid	O
[	O
]	O
=	O
"$Id: hash_upgrade.c,v 1.4 2014/04/17 20:27:29 sebdiaz Exp $"	O
;	O
int	O
CDB___ham_30_hashmeta	int
(	O
dbp	O
,	O
real_name	int
,	O
obuf	int
)	O
DB	O
*	O
dbp	pointer
;	O
char	O
*	O
real_name	pointer
;	O
u_int8_t	O
*	O
obuf	pointer
;	O
{	O
DB_ENV	O
*	O
dbenv	pointer
;	O
HASHHDR	O
*	O
oldmeta	pointer
;	O
HMETA30	O
newmeta	O
;	O
u_int32_t	O
*	O
o_spares	pointer
,	O
*	O
n_spares	pointer
;	O
u_int32_t	O
fillf	O
,	O
maxb	O
,	O
nelem	int
;	O
int	O
i	int
,	O
non_zero	int
,	O
ret	int
;	O
dbenv	O
=	O
dbp	int
->	O
dbenv	pointer
;	O
memset	pointer
(	O
&	pointer
newmeta	pointer
,	O
0	O
,	O
sizeof	int
(	O
newmeta	O
)	O
)	O
;	O
oldmeta	O
=	O
(	int
HASHHDR	O
*	O
)	O
obuf	function
;	O
newmeta	O
.	O
dbmeta	int
.	O
lsn	int
=	O
oldmeta	int
->	O
lsn	pointer
;	O
newmeta	pointer
.	O
dbmeta	int
.	O
pgno	int
=	O
oldmeta	int
->	O
pgno	pointer
;	O
newmeta	int
.	O
dbmeta	pointer
.	O
magic	int
=	O
oldmeta	int
->	O
magic	pointer
;	O
newmeta	pointer
.	O
dbmeta	int
.	O
version	int
=	O
6	int
;	O
newmeta	pointer
.	O
dbmeta	int
.	O
pagesize	int
=	O
oldmeta	int
->	O
pagesize	pointer
;	O
newmeta	pointer
.	O
dbmeta	pointer
.	O
type	int
=	O
P_HASHMETA	int
;	O
newmeta	pointer
.	O
dbmeta	int
.	O
flags	int
=	O
oldmeta	int
->	O
flags	pointer
;	O
newmeta	O
.	O
max_bucket	int
=	O
oldmeta	int
->	O
max_bucket	pointer
;	O
newmeta	pointer
.	O
high_mask	pointer
=	O
oldmeta	int
->	O
high_mask	pointer
;	O
newmeta	pointer
.	O
low_mask	pointer
=	O
oldmeta	int
->	O
low_mask	pointer
;	O
newmeta	pointer
.	O
ffactor	pointer
=	O
oldmeta	int
->	O
ffactor	pointer
;	O
newmeta	pointer
.	O
nelem	pointer
=	O
oldmeta	int
->	O
nelem	pointer
;	O
newmeta	pointer
.	O
h_charkey	pointer
=	O
oldmeta	int
->	O
h_charkey	pointer
;	O
nelem	pointer
=	O
newmeta	int
.	O
nelem	int
;	O
fillf	pointer
=	O
newmeta	int
.	O
ffactor	int
;	O
maxb	O
=	O
newmeta	int
.	O
max_bucket	int
;	O
if	O
(	O
(	pointer
fillf	O
!=	O
0	O
&&	O
fillf	int
*	O
maxb	O
<	O
2	int
*	O
nelem	int
)	O
||	O
(	O
fillf	O
==	O
0	O
&&	O
nelem	int
>	O
0x8000000	int
)	O
)	O
newmeta	O
.	O
nelem	int
=	O
0	O
;	O
o_spares	pointer
=	O
oldmeta	int
->	O
spares	int
;	O
n_spares	O
=	O
newmeta	int
.	O
spares	int
;	O
non_zero	O
=	O
0	int
;	O
n_spares	int
[	O
0	int
]	O
=	O
1	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
NCACHED	int
;	O
i	int
++	O
)	O
{	O
non_zero	O
=	O
non_zero	int
||	O
o_spares	O
[	O
i	int
-	O
1	int
]	O
!=	O
0	O
;	O
if	int
(	O
o_spares	O
[	O
i	int
-	O
1	int
]	O
==	O
0	O
&&	O
non_zero	int
)	O
n_spares	O
[	O
i	int
]	O
=	O
0	O
;	O
else	int
n_spares	O
[	O
i	int
]	O
=	O
1	int
+	O
o_spares	int
[	O
i	int
-	O
1	int
]	O
;	O
}	O
if	O
(	O
(	O
ret	O
=	O
CDB___os_fileid	int
(	O
dbenv	int
,	O
real_name	int
,	O
1	int
,	O
newmeta	int
.	O
dbmeta	int
.	O
uid	int
)	O
)	O
!=	O
0	O
)	O
return	O
(	int
ret	O
)	O
;	O
memcpy	O
(	O
oldmeta	pointer
,	O
&	pointer
newmeta	pointer
,	O
sizeof	O
(	O
newmeta	O
)	O
)	O
;	O
return	O
(	int
0	O
)	O
;	O
}	O
int	O
CDB___ham_31_hashmeta	function
(	O
dbp	O
,	O
real_name	int
,	O
flags	int
,	O
fhp	int
,	O
h	int
,	O
dirtyp	int
)	O
DB	O
*	O
dbp	pointer
;	O
char	O
*	O
real_name	pointer
;	O
u_int32_t	O
flags	O
;	O
DB_FH	O
*	O
fhp	pointer
;	O
PAGE	O
*	O
h	pointer
;	O
int	O
*	int
dirtyp	pointer
;	O
{	O
if	O
(	O
dbp	O
||	O
real_name	int
||	O
fhp	int
)	O
{	O
}	O
HMETA31	O
*	O
newmeta	function
;	O
HMETA30	O
*	O
oldmeta	pointer
;	O
COMPQUIET	O
(	O
dbp	int
,	O
NULL	int
)	O
;	O
COMPQUIET	O
(	O
real_name	int
,	O
NULL	int
)	O
;	O
COMPQUIET	O
(	O
fhp	int
,	O
NULL	int
)	O
;	O
newmeta	O
=	O
(	int
HMETA31	O
*	O
)	O
h	pointer
;	O
oldmeta	O
=	O
(	int
HMETA30	O
*	O
)	O
h	pointer
;	O
memmove	O
(	O
newmeta	pointer
->	O
spares	pointer
,	O
oldmeta	pointer
->	O
spares	pointer
,	O
sizeof	pointer
(	O
oldmeta	pointer
->	O
spares	pointer
)	O
)	O
;	O
newmeta	O
->	O
h_charkey	pointer
=	O
oldmeta	O
->	O
h_charkey	pointer
;	O
newmeta	pointer
->	O
nelem	pointer
=	O
oldmeta	int
->	O
nelem	pointer
;	O
newmeta	pointer
->	O
ffactor	pointer
=	O
oldmeta	int
->	O
ffactor	pointer
;	O
newmeta	pointer
->	O
low_mask	pointer
=	O
oldmeta	int
->	O
low_mask	pointer
;	O
newmeta	pointer
->	O
high_mask	pointer
=	O
oldmeta	int
->	O
high_mask	pointer
;	O
newmeta	pointer
->	O
max_bucket	pointer
=	O
oldmeta	int
->	O
max_bucket	pointer
;	O
memmove	pointer
(	O
newmeta	pointer
->	O
dbmeta	pointer
.	O
uid	int
,	O
oldmeta	pointer
->	O
dbmeta	pointer
.	O
uid	int
,	O
sizeof	int
(	O
oldmeta	pointer
->	O
dbmeta	pointer
.	O
uid	int
)	O
)	O
;	O
newmeta	O
->	O
dbmeta	pointer
.	O
flags	int
=	O
oldmeta	int
->	O
dbmeta	pointer
.	O
flags	int
;	O
newmeta	pointer
->	O
dbmeta	pointer
.	O
record_count	int
=	O
0	pointer
;	O
newmeta	pointer
->	O
dbmeta	pointer
.	O
key_count	int
=	O
0	pointer
;	O
ZERO_LSN	pointer
(	O
newmeta	pointer
->	O
dbmeta	pointer
.	O
alloc_lsn	int
)	O
;	O
newmeta	O
->	O
dbmeta	pointer
.	O
version	int
=	O
7	pointer
;	O
if	pointer
(	O
LF_ISSET	pointer
(	O
DB_DUPSORT	int
)	O
)	O
F_SET	O
(	O
&	pointer
newmeta	pointer
->	O
dbmeta	pointer
,	O
DB_HASH_DUPSORT	int
)	O
;	O
*	O
dirtyp	pointer
=	O
1	O
;	O
return	O
(	int
0	O
)	O
;	O
}	O
int	O
CDB___ham_31_hash	function
(	O
dbp	O
,	O
real_name	O
,	O
flags	int
,	O
fhp	int
,	O
h	int
,	O
dirtyp	int
)	O
DB	O
*	O
dbp	pointer
;	O
char	O
*	O
real_name	pointer
;	O
u_int32_t	O
flags	O
;	O
DB_FH	O
*	O
fhp	pointer
;	O
PAGE	O
*	O
h	pointer
;	O
int	O
*	int
dirtyp	pointer
;	O
{	O
HKEYDATA	O
*	O
hk	pointer
;	O
db_pgno_t	O
pgno	O
,	O
tpgno	int
;	O
db_indx_t	O
indx	O
;	O
int	O
ret	int
;	O
COMPQUIET	O
(	O
flags	int
,	O
0	int
)	O
;	O
ret	O
=	O
0	int
;	O
for	int
(	O
indx	int
=	O
0	int
;	O
indx	int
<	O
NUM_ENT	int
(	O
h	pointer
)	O
;	O
indx	O
+=	O
2	int
)	O
{	O
hk	O
=	O
(	int
HKEYDATA	O
*	O
)	O
H_PAIRDATA	function
(	O
h	O
,	O
indx	int
)	O
;	O
if	O
(	O
HPAGE_PTYPE	int
(	O
hk	pointer
)	O
==	O
H_OFFDUP	int
)	O
{	O
memcpy	O
(	O
&	pointer
pgno	pointer
,	O
HOFFDUP_PGNO	int
(	O
hk	pointer
)	O
,	O
sizeof	O
(	O
db_pgno_t	O
)	O
)	O
;	O
tpgno	O
=	O
pgno	int
;	O
if	O
(	O
(	O
ret	O
=	O
CDB___db_31_offdup	int
(	O
dbp	int
,	O
real_name	int
,	O
fhp	int
,	O
LF_ISSET	int
(	O
DB_DUPSORT	int
)	O
?	O
1	int
:	O
0	O
,	O
&	int
tpgno	pointer
)	O
)	O
!=	O
0	O
)	O
break	O
;	O
if	O
(	O
pgno	int
!=	O
tpgno	int
)	O
{	O
*	O
dirtyp	pointer
=	O
1	int
;	O
memcpy	O
(	O
HOFFDUP_PGNO	pointer
(	O
hk	pointer
)	O
,	O
&	pointer
tpgno	pointer
,	O
sizeof	int
(	O
db_pgno_t	O
)	O
)	O
;	O
}	O
}	O
}	O
return	O
(	O
ret	O
)	O
;	O
}	O