size_t	O
dir_len	O
(	O
char	O
const	O
*	O
file	pointer
)	O
{	O
size_t	O
prefix_length	O
=	O
FILE_SYSTEM_PREFIX_LEN	pointer
(	O
file	pointer
)	O
;	O
size_t	O
length	O
;	O
prefix_length	O
+=	O
(	O
prefix_length	O
!=	O
0	O
?	O
(	O
FILE_SYSTEM_DRIVE_PREFIX_CAN_BE_RELATIVE	O
&&	O
ISSLASH	O
(	O
file	pointer
[	O
prefix_length	long
]	O
)	O
)	O
:	O
(	O
ISSLASH	O
(	O
file	pointer
[	O
0	int
]	O
)	O
?	O
(	O
(	O
DOUBLE_SLASH_IS_DISTINCT_ROOT	O
&&	O
ISSLASH	O
(	O
file	pointer
[	O
1	long
]	O
)	O
&&	O
!	O
ISSLASH	O
(	O
file	pointer
[	O
2	long
]	O
)	O
?	O
2	O
:	O
1	O
)	O
)	O
:	O
0	O
)	O
)	O
;	O
for	O
(	O
length	O
=	O
last_component	int
(	O
file	pointer
)	O
-	O
file	int
;	O
prefix_length	O
<	O
length	O
;	O
length	O
--	O
)	O
if	O
(	O
!	O
ISSLASH	O
(	O
file	pointer
[	O
length	int
-	O
1	int
]	O
)	O
)	O
break	O
;	O
return	O
length	int
;	O
}	O
char	O
*	O
mdir_name	function
(	O
char	O
const	O
*	O
file	pointer
)	O
{	O
size_t	O
length	O
=	O
dir_len	pointer
(	O
file	O
)	O
;	O
bool	O
append_dot	long
=	O
(	O
length	O
==	O
0	O
||	O
(	O
FILE_SYSTEM_DRIVE_PREFIX_CAN_BE_RELATIVE	O
&&	O
length	O
==	O
FILE_SYSTEM_PREFIX_LEN	O
(	O
file	pointer
)	O
&&	O
file	O
[	O
2	long
]	O
!=	O
'\0'	O
&&	O
!	O
ISSLASH	pointer
(	O
file	pointer
[	O
2	long
]	O
)	O
)	O
)	O
;	O
char	O
*	O
dir	O
=	O
malloc	O
(	O
length	O
+	O
append_dot	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
dir	O
)	O
return	O
NULL	O
;	O
memcpy	O
(	O
dir	pointer
,	O
file	O
,	O
length	pointer
)	O
;	O
if	O
(	O
append_dot	O
)	O
dir	O
[	O
length	int
++	O
]	O
=	O
'.'	pointer
;	O
dir	O
[	O
length	int
]	O
=	O
'\0'	pointer
;	O
return	pointer
dir	int
;	O
}	O