ESint32	O
EDMAPROC	O
EDMA_MAKE_BUILDERbuildU32Z	O
(	O
OBJID	O
IdObj	O
,	O
OBJID	pointer
id	O
,	O
EPChar	pointer
fname	pointer
)	O
{	O
FILE	O
*	O
f	pointer
;	O
EChar	O
temp	O
[	O
1024	int
]	O
;	O
EChar	pointer
ns	O
[	O
1024	int
]	O
;	O
f	pointer
=	O
fopen	pointer
(	O
fname	pointer
,	O
"wt"	pointer
)	O
;	O
if	O
(	O
f	int
==	O
NULL	O
)	O
{	O
edma_printf_obj	O
(	O
IdObj	int
,	O
"Can't Open file %s for writting"	pointer
,	O
fname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
edma_rprop3	O
(	O
id	O
,	O
"ClassName"	O
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"#\n"	pointer
"#   Copyright (C) YEAR\n"	O
"#             by Author\n"	O
"#\n"	O
"#   This program is free software: you can redistribute it and/or modify\n"	O
"#   it under the terms of the GNU General Public License as published by\n"	O
"#   the Free Software Foundation, either version 3 of the License, or\n"	O
"#   (at your option) any later version.\n"	O
"#\n"	O
"#   This program is distributed in the hope that it will be useful,\n"	O
"#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n"	O
"#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"	O
"#   GNU General Public License for more details.\n"	O
"#\n"	O
"#   You should have received a copy of the GNU General Public License\n"	O
"#   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"	O
"#\n"	O
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"#"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n# Makefile for EDMA class %s"	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n# Generated by EDMA_MAKE_BUILDER 0.1"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n#"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nCC=gcc"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nCCFLAGS=`edma-config --cflags-class`"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nLIBS=`edma-config --libs-class` "	pointer
)	O
;	O
edma_rprop3	O
(	O
id	O
,	O
"NameSpace"	pointer
,	O
ns	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nNAMESPACE = %s"	pointer
,	O
ns	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nTARGET_DIR = `edma-config --dir-impl`/edma/${NAMESPACE}"	pointer
"\bIDF_DIR = `edma-config --dir-int`/${NAMESPACE}"	O
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nlib%s.so: temp.o "	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n\t$(CC) -nostartfiles -shared -Wl,-soname,lib%s.so.1 -o $@ temp.o $(LIBS) "	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\ntemp.o: %s_imp.c "	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n	$(CC)  $(CCFLAGS) $< -o $@ "	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n.PHONY: install"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\ninstall:"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n\tcp lib%s.so `edma-config --dir-impl`"	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n\tcp %s.idf `edma-config --dir-int`"	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n\tln -s ${TARGET_DIR}/lib%s.so.0.0.0 ${TARGET_DIR}/lib%s.so.0"	pointer
,	O
temp	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n\tln -s ${TARGET_DIR}/lib%s.so.0.0.0 ${TARGET_DIR}/lib%s.so"	pointer
,	O
temp	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n.PHONY: clean"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\nclean:"	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n\trm -f lib%s.so *~ *.o core\n"	pointer
,	O
temp	pointer
)	O
;	O
fprintf	O
(	O
f	pointer
,	O
"\n"	pointer
)	O
;	O
fclose	O
(	O
f	pointer
)	O
;	O
return	O
0	int
;	O
}	O