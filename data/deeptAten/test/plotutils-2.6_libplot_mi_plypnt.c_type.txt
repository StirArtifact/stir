void	O
miDrawPoints_internal	O
(	O
miPaintedSet	O
*	O
paintedSet	pointer
,	O
const	O
miGC	O
*	O
pGC	pointer
,	O
miCoordMode	O
mode	O
,	O
int	O
npt	int
,	O
const	O
miPoint	O
*	O
pPts	pointer
)	O
{	O
unsigned	O
int	O
*	int
pwidthInit	pointer
,	O
*	O
pwidth	pointer
;	O
int	O
i	O
;	O
miPoint	O
*	O
ppt	O
=	O
(	O
miPoint	O
*	O
)	O
NULL	O
;	O
if	O
(	O
npt	O
<=	O
0	O
)	O
return	O
;	int
ppt	O
=	O
(	O
miPoint	O
*	O
)	O
mi_xmalloc	O
(	O
npt	O
*	O
sizeof	O
(	O
miPoint	O
)	O
)	O
;	O
if	O
(	O
mode	O
==	O
MI_COORD_MODE_PREVIOUS	O
)	O
{	O
ppt	O
[	O
0	O
]	O
=	O
pPts	O
[	O
0	int
]	O
;	O
for	O
(	O
i	O
=	O
1	int
;	O
i	O
<	O
npt	int
;	O
i	O
++	O
)	O
{	O
ppt	O
[	O
i	O
]	O
.	O
x	pointer
=	O
ppt	pointer
[	O
i	int
-	O
1	int
]	O
.	O
x	pointer
+	O
pPts	int
[	O
i	int
]	O
.	O
x	pointer
;	O
ppt	O
[	O
i	int
]	O
.	O
y	pointer
=	O
ppt	int
[	O
i	int
-	O
1	int
]	O
.	O
y	pointer
+	O
pPts	int
[	O
i	int
]	O
.	O
y	pointer
;	O
}	O
}	O
else	O
{	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
npt	int
;	O
i	O
++	O
)	O
ppt	O
[	O
i	int
]	O
=	O
pPts	O
[	O
i	int
]	O
;	O
}	O
pwidthInit	O
=	O
(	O
unsigned	O
int	O
*	int
)	O
mi_xmalloc	O
(	O
npt	O
*	O
sizeof	O
(	O
unsigned	O
int	O
)	int
)	O
;	O
pwidth	O
=	O
pwidthInit	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	int
<	O
npt	int
;	O
i	O
++	O
)	O
*	O
pwidth	pointer
++	O
=	O
1	O
;	O
if	O
(	O
npt	O
>	O
1	O
)	O
miQuickSortSpansY	O
(	O
ppt	pointer
,	O
pwidthInit	O
,	O
npt	O
)	O
;	O
MI_PAINT_SPANS	O
(	O
paintedSet	O
,	O
pGC	O
->	O
pixels	int
[	O
1	int
]	O
,	O
npt	O
,	O
ppt	pointer
,	O
pwidthInit	pointer
)	O
}	O