char	O
*	O
mu_get_homedir	O
(	O
void	O
)	O
{	O
char	O
*	O
homedir	pointer
=	O
getenv	O
(	O
"HOME"	pointer
)	O
;	O
if	O
(	O
homedir	pointer
)	O
homedir	O
=	O
strdup	pointer
(	O
homedir	pointer
)	O
;	O
else	O
{	O
struct	O
mu_auth_data	struct
*	O
auth	pointer
=	O
mu_get_auth_by_uid	O
(	O
geteuid	O
(	O
)	O
)	O
;	O
if	O
(	O
!	pointer
auth	O
)	O
return	O
NULL	O
;	O
homedir	O
=	O
strdup	O
(	O
auth	pointer
->	O
dir	pointer
)	O
;	O
mu_auth_data_free	O
(	O
auth	pointer
)	O
;	O
}	O
return	O
homedir	O
;	O
}	O
char	O
*	O
mu_get_full_path	function
(	O
const	O
char	O
*	O
file	pointer
)	O
{	O
char	O
*	O
p	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
file	pointer
)	O
p	O
=	O
mu_getcwd	pointer
(	O
)	pointer
;	O
else	O
if	O
(	O
*	pointer
file	pointer
!=	O
'/'	O
)	O
{	O
char	O
*	O
cwd	pointer
=	O
mu_getcwd	O
(	O
)	O
;	O
if	O
(	O
cwd	O
)	O
{	O
p	O
=	O
mu_make_file_name	O
(	O
cwd	pointer
,	O
file	pointer
)	O
;	O
free	O
(	O
cwd	pointer
)	O
;	O
}	O
}	O
else	O
p	O
=	O
strdup	function
(	O
file	pointer
)	O
;	O
return	O
p	int
;	O
}	O
char	O
*	O
mu_normalize_path	function
(	O
char	O
*	O
path	pointer
)	O
{	O
int	O
len	int
;	O
char	O
*	O
p	pointer
;	O
if	O
(	O
!	O
path	pointer
)	O
return	O
path	O
;	O
len	O
=	O
strlen	O
(	O
path	pointer
)	O
;	O
if	O
(	O
len	pointer
==	O
0	O
)	O
return	O
path	O
;	O
if	O
(	O
len	pointer
&&	O
path	O
[	O
len	int
-	O
1	int
]	O
==	O
'/'	O
)	O
path	O
[	O
len	int
-	O
1	int
]	O
=	O
0	pointer
;	O
for	pointer
(	O
p	O
=	O
strchr	int
(	O
path	pointer
,	O
'.'	pointer
)	O
;	O
p	O
;	O
p	O
=	O
strchr	O
(	O
p	pointer
,	O
'.'	pointer
)	O
)	O
{	O
if	O
(	O
p	pointer
>	O
path	int
&&	O
p	pointer
[	O
-	int
1	int
]	O
==	O
'/'	O
)	O
{	O
if	pointer
(	O
p	pointer
[	O
1	int
]	O
==	O
'.'	O
&&	O
(	pointer
p	O
[	O
2	int
]	O
==	O
0	O
||	O
p	int
[	O
2	int
]	O
==	O
'/'	O
)	O
)	O
{	O
char	O
*	O
q	pointer
,	O
*	O
s	pointer
;	O
for	O
(	O
q	int
=	O
p	pointer
-	O
2	int
;	O
*	O
q	pointer
!=	O
'/'	O
&&	O
q	pointer
>=	O
path	int
;	O
q	pointer
--	O
)	O
;	O
if	O
(	O
q	pointer
<	O
path	int
)	O
break	O
;	O
s	O
=	O
p	O
+	O
2	int
;	O
p	O
=	O
q	O
;	O
while	pointer
(	O
(	pointer
*	O
q	pointer
++	O
=	O
*	O
s	pointer
++	O
)	O
)	O
;	O
continue	O
;	O
}	O
}	O
p	O
++	O
;	O
}	O
if	O
(	O
path	O
[	O
0	int
]	O
==	O
0	O
)	O
{	O
path	O
[	O
0	int
]	O
=	O
'/'	pointer
;	O
path	pointer
[	O
1	int
]	O
=	O
0	pointer
;	O
}	pointer
return	O
path	O
;	O
}	O
char	O
*	O
mu_expand_path_pattern	function
(	O
const	O
char	O
*	O
pattern	pointer
,	O
const	O
char	O
*	O
username	pointer
)	O
{	O
const	O
char	O
*	O
p	pointer
;	O
char	O
*	O
q	pointer
;	O
char	O
*	O
path	pointer
;	O
size_t	O
len	long
=	O
0	pointer
;	O
struct	O
mu_auth_data	struct
*	O
auth	pointer
=	O
NULL	O
;	O
for	O
(	O
p	long
=	O
pattern	pointer
;	O
*	pointer
p	pointer
;	O
p	O
++	O
)	O
{	O
if	O
(	O
*	O
p	pointer
==	O
'~'	O
)	O
{	O
if	O
(	O
!	pointer
auth	O
)	O
{	O
auth	O
=	O
mu_get_auth_by_name	O
(	O
username	pointer
)	O
;	O
if	O
(	O
!	pointer
auth	O
)	O
return	O
NULL	O
;	O
}	O
len	O
+=	O
strlen	function
(	O
auth	pointer
->	O
dir	pointer
)	O
;	O
}	O
else	O
if	O
(	O
*	pointer
p	pointer
==	O
'%'	O
)	O
switch	O
(	O
*	pointer
++	pointer
p	O
)	O
{	O
case	O
'u'	O
:	O
len	O
+=	O
strlen	int
(	O
username	pointer
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
if	O
(	O
!	pointer
auth	O
)	O
{	O
auth	O
=	O
mu_get_auth_by_name	O
(	O
username	pointer
)	O
;	O
if	O
(	O
!	pointer
auth	O
)	O
return	O
NULL	O
;	O
}	O
len	O
+=	O
strlen	function
(	O
auth	pointer
->	O
dir	pointer
)	O
;	O
break	O
;	O
case	O
'%'	O
:	O
len	O
++	O
;	O
break	O
;	O
default	O
:	O
len	O
+=	O
2	int
;	O
}	O
else	O
len	O
++	O
;	O
}	O
path	O
=	O
malloc	function
(	O
len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
path	O
)	O
return	O
NULL	O
;	O
p	O
=	O
pattern	O
;	O
q	O
=	O
path	O
;	O
while	O
(	O
*	O
p	pointer
)	O
{	O
size_t	O
off	O
=	O
strcspn	pointer
(	O
p	pointer
,	O
"~%"	pointer
)	O
;	O
memcpy	O
(	O
q	pointer
,	O
p	pointer
,	O
off	pointer
)	O
;	O
q	O
+=	O
off	int
;	O
p	O
+=	O
off	int
;	O
if	O
(	O
*	pointer
p	pointer
==	O
'~'	O
)	O
{	O
strcpy	O
(	O
q	pointer
,	O
auth	pointer
->	O
dir	pointer
)	O
;	O
q	O
+=	O
strlen	int
(	O
auth	pointer
->	O
dir	pointer
)	O
;	O
p	O
++	O
;	O
}	O
else	O
if	O
(	O
*	pointer
p	pointer
==	O
'%'	O
)	O
{	O
switch	O
(	O
*	int
++	pointer
p	O
)	O
{	O
case	O
'u'	O
:	O
strcpy	O
(	O
q	pointer
,	O
username	pointer
)	O
;	O
q	O
+=	O
strlen	int
(	O
username	pointer
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
strcpy	O
(	O
q	pointer
,	O
auth	pointer
->	O
dir	pointer
)	O
;	O
q	O
+=	O
strlen	int
(	O
auth	pointer
->	O
dir	pointer
)	O
;	O
break	O
;	O
case	O
'%'	O
:	O
*	O
q	pointer
++	O
=	O
'%'	O
;	O
break	O
;	O
default	O
:	O
*	O
q	pointer
++	O
=	O
'%'	O
;	O
*	O
q	pointer
++	O
=	O
*	O
p	pointer
;	O
}	O
p	O
++	O
;	O
}	O
}	O
*	O
q	function
=	O
0	O
;	O
if	O
(	O
auth	O
)	O
mu_auth_data_free	O
(	O
auth	pointer
)	O
;	O
return	O
path	int
;	O
}	O