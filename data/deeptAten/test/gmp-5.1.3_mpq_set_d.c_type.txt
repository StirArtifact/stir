void	O
mpq_set_d	O
(	O
mpq_ptr	O
dest	O
,	O
double	pointer
d	O
)	O
{	O
int	O
negative	int
;	O
mp_exp_t	O
exp	O
;	O
mp_limb_t	O
tp	O
[	O
LIMBS_PER_DOUBLE	int
]	O
;	O
mp_ptr	O
np	pointer
,	O
dp	pointer
;	O
mp_size_t	O
nn	long
,	O
dn	pointer
;	O
int	O
c	int
;	O
DOUBLE_NAN_INF_ACTION	O
(	O
d	pointer
,	O
__gmp_invalid_operation	pointer
(	O
)	pointer
,	O
__gmp_invalid_operation	O
(	O
)	pointer
)	O
;	O
negative	O
=	O
d	O
<	O
0	int
;	O
d	int
=	O
ABS	int
(	O
d	int
)	O
;	O
exp	O
=	O
__gmp_extract_double	int
(	O
tp	pointer
,	O
d	pointer
)	O
;	O
if	O
(	O
exp	int
<=	O
1	int
)	O
{	O
if	O
(	O
d	int
==	O
0.0	O
)	O
{	O
SIZ	O
(	O
NUM	pointer
(	O
dest	pointer
)	O
)	O
=	O
0	int
;	O
SIZ	O
(	O
DEN	pointer
(	O
dest	pointer
)	O
)	O
=	O
1	int
;	O
PTR	O
(	O
DEN	pointer
(	O
dest	pointer
)	O
)	O
[	O
0	int
]	O
=	O
1	O
;	O
return	O
;	int
}	O
dn	O
=	O
-	function
exp	int
;	O
np	O
=	O
MPZ_NEWALLOC	O
(	O
NUM	O
(	O
dest	pointer
)	O
,	O
3	O
)	O
;	O
if	O
(	O
tp	O
[	O
0	int
]	O
==	O
0	O
)	O
np	O
[	O
0	int
]	O
=	O
tp	int
[	O
1	int
]	O
,	O
nn	pointer
=	O
1	pointer
;	O
else	O
np	O
[	O
1	int
]	O
=	O
tp	O
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
=	O
tp	pointer
[	O
0	int
]	O
,	O
nn	pointer
=	O
2	pointer
;	O
dn	O
+=	O
nn	int
+	O
1	int
;	O
ASSERT_ALWAYS	pointer
(	O
dn	pointer
>	O
0	int
)	O
;	O
dp	O
=	O
MPZ_NEWALLOC	int
(	O
DEN	pointer
(	O
dest	pointer
)	O
,	O
dn	O
)	O
;	O
MPN_ZERO	O
(	O
dp	pointer
,	O
dn	int
-	O
1	int
)	O
;	O
dp	O
[	O
dn	int
-	O
1	int
]	O
=	O
1	O
;	O
count_trailing_zeros	O
(	O
c	int
,	O
np	int
[	O
0	int
]	O
|	O
dp	O
[	O
0	int
]	O
)	O
;	O
if	O
(	O
c	int
!=	O
0	O
)	O
{	O
mpn_rshift	O
(	O
np	pointer
,	O
np	pointer
,	O
nn	pointer
,	O
c	pointer
)	O
;	O
nn	O
-=	O
np	O
[	O
nn	int
-	O
1	int
]	O
==	O
0	O
;	O
mpn_rshift	pointer
(	O
dp	pointer
,	O
dp	pointer
,	O
dn	pointer
,	O
c	pointer
)	O
;	O
dn	O
-=	O
dp	O
[	O
dn	int
-	O
1	int
]	O
==	O
0	O
;	O
}	pointer
SIZ	O
(	O
DEN	pointer
(	O
dest	pointer
)	O
)	O
=	O
dn	int
;	O
SIZ	O
(	O
NUM	pointer
(	O
dest	pointer
)	O
)	O
=	O
negative	int
?	O
-	O
nn	int
:	O
nn	O
;	O
}	O
else	O
{	O
nn	O
=	O
exp	O
;	O
np	O
=	O
MPZ_NEWALLOC	int
(	O
NUM	pointer
(	O
dest	pointer
)	O
,	O
nn	O
)	O
;	O
switch	O
(	O
nn	int
)	O
{	O
default	O
:	O
MPN_ZERO	O
(	O
np	pointer
,	O
nn	int
-	O
LIMBS_PER_DOUBLE	int
)	O
;	O
np	O
+=	O
nn	int
-	O
LIMBS_PER_DOUBLE	int
;	O
case	O
2	O
:	O
np	O
[	O
1	int
]	O
=	O
tp	O
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
=	O
tp	pointer
[	O
0	int
]	O
;	O
break	pointer
;	O
}	O
dp	O
=	O
PTR	int
(	O
DEN	pointer
(	O
dest	pointer
)	O
)	O
;	O
dp	O
[	O
0	int
]	O
=	O
1	O
;	O
SIZ	O
(	O
DEN	pointer
(	O
dest	pointer
)	O
)	O
=	O
1	int
;	O
SIZ	O
(	O
NUM	pointer
(	O
dest	pointer
)	O
)	O
=	O
negative	int
?	O
-	O
nn	int
:	O
nn	O
;	O
}	O
}	O