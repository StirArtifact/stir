static	O
mu_stream_t	O
base64stream	O
(	O
int	O
flg	O
)	O
{	O
mu_stream_t	O
flt	O
,	O
str	O
;	O
int	O
mode	int
;	O
switch	O
(	O
flg	O
)	O
{	O
case	O
MU_STREAM_READ	O
:	O
mode	O
=	O
MU_FILTER_DECODE	int
;	O
str	O
=	O
mu_strin	O
;	O
break	O
;	O
case	O
MU_STREAM_WRITE	O
:	O
mode	O
=	O
MU_FILTER_ENCODE	int
;	O
str	O
=	O
mu_strout	O
;	O
break	O
;	O
default	O
:	O
abort	O
(	O
)	O
;	O
}	O
MU_ASSERT	O
(	O
mu_filter_create	O
(	O
&	pointer
flt	pointer
,	O
str	O
,	O
"base64"	O
,	O
mode	O
,	O
flg	O
)	O
)	O
;	O
return	O
flt	int
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	pointer
argv	pointer
)	O
{	O
mu_stream_t	O
flt	O
,	O
input	O
,	O
output	O
;	O
char	O
const	O
*	O
iargv	pointer
[	O
]	O
=	O
{	pointer
"iconv"	pointer
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
;	O
assert	O
(	O
argc	O
==	O
3	O
)	O
;	O
iargv	O
[	O
1	int
]	O
=	O
argv	O
[	O
1	int
]	O
;	O
iargv	O
[	O
2	int
]	O
=	O
argv	pointer
[	O
2	int
]	O
;	O
mu_stdstream_setup	O
(	O
MU_STDSTREAM_RESET_NONE	pointer
)	O
;	O
input	O
=	O
base64stream	O
(	O
MU_STREAM_READ	pointer
)	O
;	O
output	O
=	O
base64stream	O
(	O
MU_STREAM_WRITE	pointer
)	O
;	O
MU_ASSERT	O
(	O
mu_filter_chain_create	O
(	O
&	pointer
flt	pointer
,	O
input	O
,	O
MU_FILTER_ENCODE	O
,	O
MU_STREAM_READ	O
,	O
MU_ARRAY_SIZE	O
(	O
iargv	pointer
)	O
-	O
1	int
,	O
(	O
char	O
*	O
*	O
)	O
iargv	O
)	O
)	O
;	O
mu_stream_unref	O
(	O
input	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	O
(	O
output	pointer
,	O
flt	pointer
,	O
0	pointer
,	O
NULL	O
)	O
)	O
;	O
mu_stream_destroy	O
(	O
&	O
flt	pointer
)	O
;	O
mu_stream_destroy	O
(	O
&	O
output	pointer
)	O
;	O
return	O
0	int
;	O
}	O