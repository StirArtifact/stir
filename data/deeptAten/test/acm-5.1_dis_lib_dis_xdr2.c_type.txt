bool_t	O
xdr_byte_opaque	O
(	O
XDR	O
*	O
xdrs	pointer
,	O
caddr_t	O
cp	O
,	O
u_int	O
cnt	O
)	O
;	O
bool_t	O
xdr_byte_long	pointer
(	O
XDR	O
*	O
xdrs	pointer
,	O
void	O
*	O
vcp	pointer
)	O
{	O
long	O
u	O
;	O
long	O
int	O
*	O
cp	pointer
=	O
(	O
long	O
int	O
*	O
)	O
vcp	O
;	O
u	O
=	O
htonl	O
(	O
*	pointer
cp	pointer
)	O
;	O
if	O
(	O
!	O
xdr_byte_opaque	pointer
(	O
xdrs	pointer
,	O
(	pointer
caddr_t	O
)	O
&	O
u	pointer
,	O
4	O
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
*	O
cp	function
=	O
ntohl	O
(	O
u	O
)	O
;	O
return	O
(	int
TRUE	O
)	O
;	O
}	O
bool_t	O
xdr_byte_u_long	function
(	O
XDR	O
*	O
xdrs	pointer
,	O
void	O
*	O
vcp	pointer
)	O
{	O
u_long	O
u	O
,	O
*	O
cp	pointer
=	O
(	O
u_long	O
*	O
)	pointer
vcp	pointer
;	O
u	O
=	O
htonl	O
(	O
*	pointer
cp	pointer
)	O
;	O
if	O
(	O
!	O
xdr_byte_opaque	pointer
(	O
xdrs	pointer
,	O
(	pointer
caddr_t	O
)	O
&	O
u	pointer
,	O
4	O
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
*	O
cp	function
=	O
ntohl	O
(	O
u	O
)	O
;	O
return	O
(	int
TRUE	O
)	O
;	O
}	O
bool_t	O
xdr_byte_short	function
(	O
XDR	O
*	O
xdrs	pointer
,	O
void	O
*	O
vcp	pointer
)	O
{	O
short	O
u	O
;	O
short	O
*	O
cp	pointer
=	O
(	O
short	O
*	O
)	pointer
vcp	pointer
;	O
u	O
=	O
htons	pointer
(	O
*	pointer
cp	pointer
)	O
;	O
if	O
(	O
!	O
xdr_byte_opaque	pointer
(	O
xdrs	pointer
,	O
(	pointer
caddr_t	O
)	O
&	O
u	pointer
,	O
2	O
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
*	O
cp	function
=	O
ntohs	O
(	O
u	pointer
)	O
;	O
return	O
(	int
TRUE	O
)	O
;	O
}	O
bool_t	O
xdr_byte_u_short	function
(	O
XDR	O
*	O
xdrs	pointer
,	O
void	O
*	O
vcp	pointer
)	O
{	O
u_short	O
u	O
;	O
u_short	O
*	O
cp	pointer
=	O
(	O
u_short	O
*	O
)	O
vcp	pointer
;	O
u	O
=	O
htons	O
(	O
*	pointer
cp	pointer
)	O
;	O
if	O
(	O
!	O
xdr_byte_opaque	pointer
(	O
xdrs	pointer
,	O
(	pointer
caddr_t	O
)	O
&	O
u	pointer
,	O
2	O
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
*	O
cp	function
=	O
ntohs	O
(	O
u	pointer
)	O
;	O
return	O
(	int
TRUE	O
)	O
;	O
}	O
bool_t	O
xdr_byte_char	function
(	O
XDR	O
*	O
xdrs	pointer
,	O
void	O
*	O
vcp	pointer
)	O
{	O
char	O
i	O
,	O
*	O
cp	pointer
=	O
(	O
char	O
*	O
)	O
vcp	pointer
;	O
i	O
=	O
(	O
*	O
cp	pointer
)	O
;	O
if	O
(	O
!	O
xdr_byte_opaque	pointer
(	O
xdrs	pointer
,	O
&	pointer
i	pointer
,	O
1	O
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
*	O
cp	function
=	O
i	O
;	O
return	O
(	int
TRUE	O
)	O
;	O
}	O
bool_t	O
xdr_byte_u_char	function
(	O
XDR	O
*	O
xdrs	pointer
,	O
void	O
*	O
vcp	pointer
)	O
{	O
u_char	O
u	O
,	O
*	pointer
cp	pointer
=	O
(	O
u_char	O
*	O
)	O
vcp	pointer
;	O
u	O
=	O
(	pointer
*	O
cp	pointer
)	O
;	O
if	O
(	O
!	O
xdr_byte_opaque	pointer
(	O
xdrs	pointer
,	O
&	pointer
u	pointer
,	O
1	O
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
*	O
cp	function
=	O
u	O
;	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
bool_t	O
xdr_byte_opaque	function
(	O
register	O
XDR	O
*	O
xdrs	pointer
,	O
caddr_t	O
cp	O
,	O
register	O
u_int	O
cnt	O
)	O
{	O
if	O
(	O
cnt	O
==	O
0	O
)	O
return	O
(	int
TRUE	O
)	O
;	O
if	O
(	O
xdrs	O
->	O
x_op	pointer
==	O
XDR_DECODE	O
)	O
{	O
if	O
(	O
!	O
XDR_GETBYTES	pointer
(	O
xdrs	pointer
,	O
cp	pointer
,	O
cnt	pointer
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
if	O
(	O
xdrs	O
->	O
x_op	pointer
==	O
XDR_ENCODE	O
)	O
{	O
if	O
(	O
!	O
XDR_PUTBYTES	pointer
(	O
xdrs	pointer
,	O
cp	pointer
,	O
cnt	pointer
)	O
)	O
{	O
return	O
(	int
FALSE	O
)	O
;	O
}	O
return	O
(	O
TRUE	O
)	O
;	O
}	O
if	O
(	O
xdrs	O
->	O
x_op	pointer
==	O
XDR_FREE	O
)	O
{	O
return	O
(	int
TRUE	O
)	O
;	O
}	O
return	O
(	O
FALSE	O
)	O
;	O
}	O