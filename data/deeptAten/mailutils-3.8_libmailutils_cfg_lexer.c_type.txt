typedef	O
int8_t	char
flex_int8_t	char
;	O
typedef	O
uint8_t	char
flex_uint8_t	char
;	O
typedef	O
int16_t	short
flex_int16_t	short
;	O
typedef	O
uint16_t	short
flex_uint16_t	short
;	O
typedef	O
int32_t	int
flex_int32_t	int
;	O
typedef	O
uint32_t	int
flex_uint32_t	int
;	O
typedef	O
struct	O
yy_buffer_state	struct
*	O
YY_BUFFER_STATE	pointer
;	O
typedef	O
size_t	long
yy_size_t	long
;	O
extern	O
yy_size_t	long
mu_cfg_yyleng	long
;	O
extern	O
FILE	struct
*	O
mu_cfg_yyin	pointer
,	O
*	O
mu_cfg_yyout	pointer
;	O
struct	O
yy_buffer_state	struct
{	O
FILE	struct
*	O
yy_input_file	pointer
;	O
char	O
*	O
yy_ch_buf	pointer
;	O
char	O
*	O
yy_buf_pos	pointer
;	O
yy_size_t	long
yy_buf_size	long
;	O
yy_size_t	long
yy_n_chars	long
;	O
int	O
yy_is_our_buffer	int
;	O
int	O
yy_is_interactive	int
;	O
int	O
yy_at_bol	int
;	O
int	O
yy_bs_lineno	int
;	O
int	O
yy_bs_column	int
;	O
int	O
yy_fill_buffer	int
;	O
int	O
yy_buffer_status	int
;	O
}	O
;	O
static	O
size_t	long
yy_buffer_stack_top	long
=	O
0	int
;	O
static	O
size_t	long
yy_buffer_stack_max	long
=	O
0	int
;	O
static	O
YY_BUFFER_STATE	pointer
*	O
yy_buffer_stack	pointer
=	O
0	int
;	O
static	O
char	O
yy_hold_char	char
;	O
static	O
yy_size_t	long
yy_n_chars	long
;	O
yy_size_t	long
mu_cfg_yyleng	long
;	O
static	O
char	O
*	O
yy_c_buf_p	pointer
=	O
(	O
char	O
*	O
)	O
0	int
;	O
static	O
int	O
yy_init	int
=	O
0	int
;	O
static	O
int	O
yy_start	int
=	O
0	int
;	O
static	O
int	O
yy_did_buffer_switch_on_eof	int
;	O
void	O
mu_cfg_yyrestart	function
(	O
FILE	struct
*	O
input_file	pointer
)	O
;	O
void	O
mu_cfg_yy_switch_to_buffer	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
;	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_create_buffer	function
(	O
FILE	struct
*	O
file	pointer
,	O
int	O
size	int
)	O
;	O
void	O
mu_cfg_yy_delete_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
;	O
void	O
mu_cfg_yy_flush_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
;	O
void	O
mu_cfg_yypush_buffer_state	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
;	O
void	O
mu_cfg_yypop_buffer_state	function
(	O
void	O
)	O
;	O
static	O
void	O
yyensure_buffer_stack	function
(	O
void	O
)	O
;	O
static	O
void	O
mu_cfg_yy_load_buffer_state	function
(	O
void	O
)	O
;	O
static	O
void	O
mu_cfg_yy_init_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
,	O
FILE	struct
*	O
file	pointer
)	O
;	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_scan_buffer	function
(	O
char	O
*	O
base	pointer
,	O
yy_size_t	long
size	int
)	O
;	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_scan_string	function
(	O
yyconst	O
char	O
*	O
yy_str	pointer
)	O
;	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_scan_bytes	function
(	O
yyconst	O
char	O
*	O
bytes	pointer
,	O
yy_size_t	long
len	long
)	O
;	O
void	O
*	O
mu_cfg_yyalloc	function
(	O
yy_size_t	long
)	O
;	O
void	O
*	O
mu_cfg_yyrealloc	function
(	O
void	O
*	O
,	O
yy_size_t	long
)	O
;	O
void	O
mu_cfg_yyfree	function
(	O
void	O
*	O
)	O
;	O
typedef	O
unsigned	O
char	O
YY_CHAR	char
;	O
FILE	struct
*	O
mu_cfg_yyin	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
,	O
*	O
mu_cfg_yyout	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
typedef	O
int	O
yy_state_type	int
;	O
extern	O
int	O
mu_cfg_yylineno	int
;	O
int	O
mu_cfg_yylineno	int
=	O
1	int
;	O
extern	O
char	O
*	O
mu_cfg_yytext	pointer
;	O
static	O
yy_state_type	int
yy_get_previous_state	function
(	O
void	O
)	O
;	O
static	O
yy_state_type	int
yy_try_NUL_trans	function
(	O
yy_state_type	int
current_state	int
)	O
;	O
static	O
int	O
yy_get_next_buffer	function
(	O
void	O
)	O
;	O
static	O
void	O
yy_fatal_error	function
(	O
yyconst	O
char	O
msg	array
[	O
]	O
)	O
;	O
struct	O
yy_trans_info	struct
{	O
flex_int32_t	int
yy_verify	int
;	O
flex_int32_t	int
yy_nxt	int
;	O
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_accept	array
[	O
94	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
2	int
,	O
2	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
31	int
,	O
29	int
,	O
26	int
,	O
27	int
,	O
29	int
,	O
8	int
,	O
28	int
,	O
12	int
,	O
12	int
,	O
29	int
,	O
12	int
,	O
2	int
,	O
4	int
,	O
3	int
,	O
30	int
,	O
25	int
,	O
30	int
,	O
30	int
,	O
18	int
,	O
30	int
,	O
26	int
,	O
0	int
,	O
13	int
,	O
0	int
,	O
8	int
,	O
7	int
,	O
8	int
,	O
12	int
,	O
1	int
,	O
10	int
,	O
0	int
,	O
11	int
,	O
2	int
,	O
3	int
,	O
3	int
,	O
5	int
,	O
0	int
,	O
25	int
,	O
0	int
,	O
18	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
16	int
,	O
14	int
,	O
15	int
,	O
8	int
,	O
10	int
,	O
9	int
,	O
10	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
17	int
,	O
8	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
8	int
,	O
0	int
,	O
0	int
,	O
21	int
,	O
0	int
,	O
0	int
,	O
8	int
,	O
0	int
,	O
0	int
,	O
19	int
,	O
0	int
,	O
8	int
,	O
0	int
,	O
24	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
20	int
,	O
8	int
,	O
6	int
,	O
0	int
,	O
22	int
,	O
0	int
,	O
0	int
,	O
23	int
,	O
0	int
}	O
;	O
static	O
yyconst	O
flex_int32_t	int
yy_ec	array
[	O
256	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
1	int
,	O
4	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
5	int
,	O
1	int
,	O
6	int
,	O
7	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
8	int
,	O
8	int
,	O
9	int
,	O
1	int
,	O
8	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
11	int
,	O
8	int
,	O
14	int
,	O
15	int
,	O
1	int
,	O
1	int
,	O
11	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
1	int
,	O
17	int
,	O
1	int
,	O
1	int
,	O
16	int
,	O
1	int
,	O
16	int
,	O
18	int
,	O
16	int
,	O
19	int
,	O
20	int
,	O
16	int
,	O
21	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
22	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
8	int
,	O
1	int
,	O
8	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
}	O
;	O
static	O
yyconst	O
flex_int32_t	int
yy_meta	array
[	O
23	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
6	int
,	O
7	int
,	O
1	int
,	O
6	int
,	O
8	int
,	O
9	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
8	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_base	array
[	O
118	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
20	int
,	O
21	int
,	O
144	int
,	O
143	int
,	O
22	int
,	O
28	int
,	O
145	int
,	O
337	int
,	O
31	int
,	O
337	int
,	O
20	int
,	O
24	int
,	O
337	int
,	O
0	int
,	O
29	int
,	O
129	int
,	O
37	int
,	O
0	int
,	O
337	int
,	O
35	int
,	O
138	int
,	O
337	int
,	O
34	int
,	O
337	int
,	O
120	int
,	O
0	int
,	O
51	int
,	O
44	int
,	O
337	int
,	O
133	int
,	O
132	int
,	O
337	int
,	O
39	int
,	O
0	int
,	O
0	int
,	O
61	int
,	O
78	int
,	O
87	int
,	O
0	int
,	O
45	int
,	O
77	int
,	O
337	int
,	O
131	int
,	O
337	int
,	O
84	int
,	O
337	int
,	O
0	int
,	O
115	int
,	O
127	int
,	O
337	int
,	O
337	int
,	O
337	int
,	O
82	int
,	O
123	int
,	O
337	int
,	O
0	int
,	O
0	int
,	O
98	int
,	O
0	int
,	O
99	int
,	O
337	int
,	O
84	int
,	O
0	int
,	O
120	int
,	O
115	int
,	O
89	int
,	O
118	int
,	O
126	int
,	O
337	int
,	O
120	int
,	O
109	int
,	O
104	int
,	O
137	int
,	O
111	int
,	O
337	int
,	O
110	int
,	O
109	int
,	O
0	int
,	O
337	int
,	O
108	int
,	O
85	int
,	O
91	int
,	O
337	int
,	O
90	int
,	O
337	int
,	O
88	int
,	O
337	int
,	O
57	int
,	O
55	int
,	O
337	int
,	O
337	int
,	O
149	int
,	O
158	int
,	O
167	int
,	O
176	int
,	O
185	int
,	O
191	int
,	O
196	int
,	O
204	int
,	O
213	int
,	O
222	int
,	O
231	int
,	O
240	int
,	O
249	int
,	O
258	int
,	O
265	int
,	O
274	int
,	O
24	int
,	O
279	int
,	O
283	int
,	O
291	int
,	O
300	int
,	O
309	int
,	O
318	int
,	O
327	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_def	array
[	O
118	int
]	O
=	O
{	O
0	int
,	O
93	int
,	O
1	int
,	O
94	int
,	O
94	int
,	O
95	int
,	O
95	int
,	O
96	int
,	O
96	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
97	int
,	O
98	int
,	O
93	int
,	O
99	int
,	O
99	int
,	O
93	int
,	O
100	int
,	O
101	int
,	O
93	int
,	O
102	int
,	O
103	int
,	O
93	int
,	O
104	int
,	O
93	int
,	O
105	int
,	O
106	int
,	O
93	int
,	O
97	int
,	O
93	int
,	O
107	int
,	O
98	int
,	O
93	int
,	O
98	int
,	O
99	int
,	O
99	int
,	O
93	int
,	O
108	int
,	O
100	int
,	O
101	int
,	O
102	int
,	O
102	int
,	O
93	int
,	O
103	int
,	O
93	int
,	O
104	int
,	O
93	int
,	O
106	int
,	O
105	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
98	int
,	O
109	int
,	O
93	int
,	O
38	int
,	O
110	int
,	O
108	int
,	O
111	int
,	O
108	int
,	O
93	int
,	O
98	int
,	O
112	int
,	O
60	int
,	O
111	int
,	O
98	int
,	O
112	int
,	O
93	int
,	O
93	int
,	O
113	int
,	O
93	int
,	O
98	int
,	O
93	int
,	O
113	int
,	O
93	int
,	O
114	int
,	O
115	int
,	O
75	int
,	O
93	int
,	O
116	int
,	O
93	int
,	O
114	int
,	O
93	int
,	O
115	int
,	O
93	int
,	O
116	int
,	O
93	int
,	O
117	int
,	O
117	int
,	O
93	int
,	O
0	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_nxt	int
[	O
360	int
]	O
=	O
{	O
0	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
11	int
,	O
11	int
,	O
13	int
,	O
14	int
,	O
15	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
17	int
,	O
16	int
,	O
18	int
,	O
16	int
,	O
19	int
,	O
10	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
21	int
,	O
21	int
,	O
26	int
,	O
31	int
,	O
34	int
,	O
27	int
,	O
22	int
,	O
22	int
,	O
26	int
,	O
65	int
,	O
29	int
,	O
27	int
,	O
29	int
,	O
29	int
,	O
32	int
,	O
37	int
,	O
28	int
,	O
48	int
,	O
38	int
,	O
34	int
,	O
35	int
,	O
43	int
,	O
28	int
,	O
36	int
,	O
44	int
,	O
36	int
,	O
36	int
,	O
31	int
,	O
49	int
,	O
36	int
,	O
29	int
,	O
93	int
,	O
29	int
,	O
29	int
,	O
93	int
,	O
92	int
,	O
55	int
,	O
92	int
,	O
32	int
,	O
56	int
,	O
56	int
,	O
57	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
58	int
,	O
58	int
,	O
58	int
,	O
58	int
,	O
58	int
,	O
56	int
,	O
58	int
,	O
58	int
,	O
56	int
,	O
58	int
,	O
58	int
,	O
58	int
,	O
58	int
,	O
58	int
,	O
59	int
,	O
34	int
,	O
43	int
,	O
34	int
,	O
60	int
,	O
44	int
,	O
48	int
,	O
89	int
,	O
34	int
,	O
87	int
,	O
85	int
,	O
62	int
,	O
36	int
,	O
90	int
,	O
36	int
,	O
36	int
,	O
64	int
,	O
49	int
,	O
36	int
,	O
66	int
,	O
59	int
,	O
93	int
,	O
68	int
,	O
34	int
,	O
93	int
,	O
93	int
,	O
74	int
,	O
89	int
,	O
87	int
,	O
85	int
,	O
77	int
,	O
62	int
,	O
93	int
,	O
70	int
,	O
71	int
,	O
79	int
,	O
70	int
,	O
78	int
,	O
72	int
,	O
77	int
,	O
75	int
,	O
93	int
,	O
57	int
,	O
73	int
,	O
70	int
,	O
71	int
,	O
63	int
,	O
70	int
,	O
51	int
,	O
72	int
,	O
46	int
,	O
34	int
,	O
54	int
,	O
51	int
,	O
73	int
,	O
80	int
,	O
81	int
,	O
46	int
,	O
80	int
,	O
39	int
,	O
82	int
,	O
93	int
,	O
24	int
,	O
24	int
,	O
93	int
,	O
83	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
23	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
30	int
,	O
93	int
,	O
30	int
,	O
30	int
,	O
30	int
,	O
30	int
,	O
30	int
,	O
30	int
,	O
30	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
41	int
,	O
93	int
,	O
41	int
,	O
93	int
,	O
41	int
,	O
41	int
,	O
41	int
,	O
41	int
,	O
41	int
,	O
42	int
,	O
93	int
,	O
42	int
,	O
42	int
,	O
42	int
,	O
42	int
,	O
42	int
,	O
42	int
,	O
42	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
45	int
,	O
47	int
,	O
93	int
,	O
47	int
,	O
47	int
,	O
47	int
,	O
47	int
,	O
47	int
,	O
47	int
,	O
47	int
,	O
50	int
,	O
93	int
,	O
93	int
,	O
50	int
,	O
50	int
,	O
50	int
,	O
50	int
,	O
50	int
,	O
50	int
,	O
52	int
,	O
93	int
,	O
52	int
,	O
52	int
,	O
52	int
,	O
52	int
,	O
52	int
,	O
52	int
,	O
52	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
53	int
,	O
61	int
,	O
93	int
,	O
61	int
,	O
93	int
,	O
93	int
,	O
61	int
,	O
61	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
56	int
,	O
67	int
,	O
93	int
,	O
67	int
,	O
67	int
,	O
69	int
,	O
93	int
,	O
69	int
,	O
69	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
76	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
9	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_chk	array
[	O
360	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
4	int
,	O
7	int
,	O
13	int
,	O
14	int
,	O
7	int
,	O
3	int
,	O
4	int
,	O
8	int
,	O
110	int
,	O
11	int
,	O
8	int
,	O
11	int
,	O
11	int
,	O
13	int
,	O
17	int
,	O
7	int
,	O
25	int
,	O
17	int
,	O
35	int
,	O
14	int
,	O
22	int
,	O
8	int
,	O
19	int
,	O
22	int
,	O
19	int
,	O
19	int
,	O
30	int
,	O
25	int
,	O
19	int
,	O
29	int
,	O
42	int
,	O
29	int
,	O
29	int
,	O
42	int
,	O
91	int
,	O
35	int
,	O
90	int
,	O
30	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
39	int
,	O
55	int
,	O
43	int
,	O
64	int
,	O
39	int
,	O
43	int
,	O
47	int
,	O
88	int
,	O
68	int
,	O
86	int
,	O
84	int
,	O
39	int
,	O
40	int
,	O
83	int
,	O
40	int
,	O
40	int
,	O
55	int
,	O
47	int
,	O
40	int
,	O
60	int
,	O
60	int
,	O
62	int
,	O
64	int
,	O
74	int
,	O
60	int
,	O
62	int
,	O
68	int
,	O
82	int
,	O
79	int
,	O
78	int
,	O
76	int
,	O
60	int
,	O
62	int
,	O
67	int
,	O
67	int
,	O
74	int
,	O
67	int
,	O
73	int
,	O
67	int
,	O
72	int
,	O
69	int
,	O
66	int
,	O
56	int
,	O
67	int
,	O
70	int
,	O
70	int
,	O
51	int
,	O
70	int
,	O
50	int
,	O
70	int
,	O
45	int
,	O
33	int
,	O
32	int
,	O
27	int
,	O
70	int
,	O
75	int
,	O
75	int
,	O
23	int
,	O
75	int
,	O
18	int
,	O
75	int
,	O
9	int
,	O
6	int
,	O
5	int
,	O
0	int
,	O
75	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
95	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
97	int
,	O
0	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
99	int
,	O
99	int
,	O
99	int
,	O
99	int
,	O
99	int
,	O
100	int
,	O
100	int
,	O
100	int
,	O
100	int
,	O
100	int
,	O
101	int
,	O
0	int
,	O
101	int
,	O
0	int
,	O
101	int
,	O
101	int
,	O
101	int
,	O
101	int
,	O
101	int
,	O
102	int
,	O
0	int
,	O
102	int
,	O
102	int
,	O
102	int
,	O
102	int
,	O
102	int
,	O
102	int
,	O
102	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
104	int
,	O
0	int
,	O
104	int
,	O
104	int
,	O
104	int
,	O
104	int
,	O
104	int
,	O
104	int
,	O
104	int
,	O
105	int
,	O
0	int
,	O
0	int
,	O
105	int
,	O
105	int
,	O
105	int
,	O
105	int
,	O
105	int
,	O
105	int
,	O
106	int
,	O
0	int
,	O
106	int
,	O
106	int
,	O
106	int
,	O
106	int
,	O
106	int
,	O
106	int
,	O
106	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
107	int
,	O
108	int
,	O
0	int
,	O
108	int
,	O
0	int
,	O
0	int
,	O
108	int
,	O
108	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
109	int
,	O
111	int
,	O
0	int
,	O
111	int
,	O
111	int
,	O
112	int
,	O
0	int
,	O
112	int
,	O
112	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
113	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
114	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
115	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
116	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
117	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
}	O
;	O
static	O
yy_state_type	int
yy_last_accepting_state	int
;	O
static	O
char	O
*	O
yy_last_accepting_cpos	pointer
;	O
extern	O
int	O
mu_cfg_yy_flex_debug	int
;	O
int	O
mu_cfg_yy_flex_debug	int
=	O
1	int
;	O
static	O
yyconst	O
flex_int16_t	short
yy_rule_linenum	array
[	O
30	int
]	O
=	O
{	O
0	int
,	O
95	int
,	O
96	int
,	O
97	int
,	O
98	int
,	O
99	int
,	O
101	int
,	O
106	int
,	O
107	int
,	O
108	int
,	O
109	int
,	O
111	int
,	O
117	int
,	O
122	int
,	O
126	int
,	O
127	int
,	O
131	int
,	O
132	int
,	O
133	int
,	O
143	int
,	O
144	int
,	O
145	int
,	O
146	int
,	O
147	int
,	O
148	int
,	O
153	int
,	O
169	int
,	O
171	int
,	O
172	int
,	O
173	int
}	O
;	O
char	O
*	O
mu_cfg_yytext	pointer
;	O
void	O
_mu_line_begin	function
(	O
void	O
)	O
;	O
void	O
_mu_line_add	function
(	O
char	O
*	O
text	pointer
,	O
size_t	long
len	long
)	O
;	O
char	O
*	O
_mu_line_finish	function
(	O
void	O
)	O
;	O
extern	O
void	O
mu_cfg_set_debug	function
(	O
void	O
)	O
;	O
static	O
void	O
mu_cfg_set_lex_debug	function
(	O
void	O
)	O
{	O
mu_cfg_yy_flex_debug	int
=	O
mu_debug_level_p	function
(	O
MU_DEBCAT_CONFIG	int
,	O
MU_DEBUG_TRACE2	int
)	O
;	O
}	O
static	O
void	O
_mu_line_add_unescape_last	function
(	O
char	O
*	O
text	pointer
,	O
size_t	long
len	long
)	O
;	O
static	O
void	O
multiline_begin	function
(	O
char	O
*	O
p	pointer
)	O
;	O
static	O
char	O
*	O
multiline_strip_tabs	function
(	O
char	O
*	O
text	pointer
)	O
;	O
static	O
void	O
multiline_add	function
(	O
char	O
*	O
s	pointer
)	O
;	O
static	O
char	O
*	O
multiline_finish	function
(	O
void	O
)	O
;	O
static	O
char	O
*	O
multiline_delimiter	pointer
;	O
static	O
size_t	long
multiline_delimiter_len	long
;	O
static	O
int	O
multiline_unescape	int
;	O
static	O
int	O
(	O
*	O
char_to_strip	pointer
)	O
(	O
char	O
)	O
;	O
static	O
int	O
isemptystr	function
(	O
int	O
off	int
)	O
;	O
static	O
mu_opool_t	pointer
pool	pointer
;	O
static	O
mu_linetrack_t	pointer
trk	pointer
;	O
static	O
struct	O
mu_locus_point	struct
string_beg	struct
;	O
static	O
int	O
yy_init_globals	function
(	O
void	O
)	O
;	O
int	O
mu_cfg_yylex_destroy	function
(	O
void	O
)	O
;	O
int	O
mu_cfg_yyget_debug	function
(	O
void	O
)	O
;	O
void	O
mu_cfg_yyset_debug	function
(	O
int	O
debug_flag	int
)	O
;	O
YY_EXTRA_TYPE	O
yyget_extra	function
(	O
void	O
)	O
;	O
void	O
yyset_extra	function
(	O
YY_EXTRA_TYPE	O
user_defined	pointer
)	O
;	O
FILE	struct
*	O
mu_cfg_yyget_in	function
(	O
void	O
)	O
;	O
void	O
mu_cfg_yyset_in	function
(	O
FILE	struct
*	O
in_str	pointer
)	O
;	O
FILE	struct
*	O
mu_cfg_yyget_out	function
(	O
void	O
)	O
;	O
void	O
mu_cfg_yyset_out	function
(	O
FILE	struct
*	O
out_str	pointer
)	O
;	O
yy_size_t	long
mu_cfg_yyget_leng	function
(	O
void	O
)	O
;	O
char	O
*	O
mu_cfg_yyget_text	function
(	O
void	O
)	O
;	O
int	O
mu_cfg_yyget_lineno	function
(	O
void	O
)	O
;	O
void	O
mu_cfg_yyset_lineno	function
(	O
int	O
line_number	int
)	O
;	O
extern	O
int	O
mu_cfg_yywrap	function
(	O
void	O
)	O
;	O
extern	O
int	O
mu_cfg_yylex	function
(	O
void	O
)	O
;	O
YY_DECL	O
{	O
register	O
yy_state_type	int
yy_current_state	int
;	O
register	O
char	O
*	O
yy_cp	pointer
,	O
*	O
yy_bp	pointer
;	O
register	O
int	O
yy_act	int
;	O
if	O
(	O
!	O
(	O
yy_init	int
)	O
)	O
{	O
(	O
yy_init	int
)	O
=	O
1	int
;	O
if	O
(	O
!	O
(	O
yy_start	int
)	O
)	O
(	O
yy_start	int
)	O
=	O
1	int
;	O
if	O
(	O
!	O
mu_cfg_yyin	pointer
)	O
mu_cfg_yyin	pointer
=	O
stdin	pointer
;	O
if	O
(	O
!	O
mu_cfg_yyout	pointer
)	O
mu_cfg_yyout	pointer
=	O
stdout	pointer
;	O
if	O
(	O
!	O
YY_CURRENT_BUFFER	O
)	O
{	O
yyensure_buffer_stack	function
(	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
mu_cfg_yy_create_buffer	function
(	O
mu_cfg_yyin	pointer
,	O
YY_BUF_SIZE	int
)	O
;	O
}	O
mu_cfg_yy_load_buffer_state	function
(	O
)	O
;	O
}	O
while	O
(	O
1	int
)	O
{	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
yy_bp	pointer
=	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
(	O
yy_start	int
)	O
;	O
yy_match	O
:	O
do	O
{	O
register	O
YY_CHAR	char
yy_c	char
=	O
yy_ec	array
[	O
YY_SC_TO_UI	O
(	O
*	O
yy_cp	pointer
)	O
]	O
;	O
if	O
(	O
yy_accept	array
[	O
yy_current_state	int
]	O
)	O
{	O
(	O
yy_last_accepting_state	int
)	O
=	O
yy_current_state	int
;	O
(	O
yy_last_accepting_cpos	pointer
)	O
=	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
94	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	int
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
++	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_base	array
[	O
yy_current_state	int
]	O
!=	O
337	int
)	O
;	O
yy_find_action	O
:	O
yy_act	int
=	O
yy_accept	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_act	int
==	O
0	int
)	O
{	O
yy_cp	pointer
=	O
(	O
yy_last_accepting_cpos	pointer
)	O
;	O
yy_current_state	int
=	O
(	O
yy_last_accepting_state	int
)	O
;	O
yy_act	int
=	O
yy_accept	array
[	O
yy_current_state	int
]	O
;	O
}	O
YY_DO_BEFORE_ACTION	O
;	O
do_action	O
:	O
if	O
(	O
mu_cfg_yy_flex_debug	int
)	O
{	O
if	O
(	O
yy_act	int
==	O
0	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"--scanner backing up\n"	pointer
)	O
;	O
else	O
if	O
(	O
yy_act	int
<	O
30	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"--accepting rule at line %ld (\"%s\")\n"	pointer
,	O
(	O
long	O
)	O
yy_rule_linenum	array
[	O
yy_act	int
]	O
,	O
mu_cfg_yytext	pointer
)	O
;	O
else	O
if	O
(	O
yy_act	int
==	O
30	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"--accepting default rule (\"%s\")\n"	pointer
,	O
mu_cfg_yytext	pointer
)	O
;	O
else	O
if	O
(	O
yy_act	int
==	O
31	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"--(end of buffer or a NUL)\n"	pointer
)	O
;	O
else	O
fprintf	function
(	O
stderr	pointer
,	O
"--EOF (start condition %d)\n"	pointer
,	O
YY_START	O
)	O
;	O
}	O
switch	O
(	O
yy_act	int
)	O
{	O
case	O
0	int
:	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
yy_cp	pointer
=	O
(	O
yy_last_accepting_cpos	pointer
)	O
;	O
yy_current_state	int
=	O
(	O
yy_last_accepting_state	int
)	O
;	O
goto	O
yy_find_action	O
;	O
case	O
1	int
:	O
YY_RULE_SETUP	O
BEGIN	O
(	O
COMMENT	int
)	O
;	O
YY_BREAK	O
case	O
2	int
:	O
YY_RULE_SETUP	O
YY_BREAK	O
case	O
3	int
:	O
YY_RULE_SETUP	O
YY_BREAK	O
case	O
4	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
5	int
:	O
YY_RULE_SETUP	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
YY_BREAK	O
case	O
6	int
:	O
YY_RULE_SETUP	O
{	O
mu_debug_parse_spec	function
(	O
mu_cfg_yytext	pointer
+	O
7	int
)	O
;	O
mu_cfg_set_debug	function
(	O
)	O
;	O
mu_cfg_set_lex_debug	function
(	O
)	O
;	O
}	O
YY_BREAK	O
case	O
7	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
8	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
9	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
10	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
11	int
:	O
YY_RULE_SETUP	O
{	O
_mu_line_begin	function
(	O
)	O
;	O
_mu_line_add	function
(	O
mu_cfg_yytext	pointer
,	O
mu_cfg_yyleng	long
)	O
;	O
mu_cfg_yylval	union
.	O
string	pointer
=	O
_mu_line_finish	function
(	O
)	O
;	O
return	O
MU_TOK_IDENT	int
;	O
}	O
YY_BREAK	O
case	O
12	int
:	O
YY_RULE_SETUP	O
{	O
_mu_line_begin	function
(	O
)	O
;	O
_mu_line_add	function
(	O
mu_cfg_yytext	pointer
,	O
mu_cfg_yyleng	long
)	O
;	O
mu_cfg_yylval	union
.	O
string	pointer
=	O
_mu_line_finish	function
(	O
)	O
;	O
return	O
MU_TOK_STRING	int
;	O
}	O
YY_BREAK	O
case	O
13	int
:	O
YY_RULE_SETUP	O
{	O
_mu_line_begin	function
(	O
)	O
;	O
_mu_line_add	function
(	O
mu_cfg_yytext	pointer
+	O
1	int
,	O
mu_cfg_yyleng	long
-	O
2	int
)	O
;	O
mu_cfg_yylval	union
.	O
string	pointer
=	O
_mu_line_finish	function
(	O
)	O
;	O
return	O
MU_TOK_QSTRING	int
;	O
}	O
YY_BREAK	O
case	O
14	int
:	O
case	O
15	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
STR	int
)	O
;	O
mu_locus_point_copy	function
(	O
&	O
string_beg	struct
,	O
&	O
mu_cfg_yylloc	struct
.	O
beg	struct
)	O
;	O
_mu_line_begin	function
(	O
)	O
;	O
_mu_line_add_unescape_last	function
(	O
mu_cfg_yytext	pointer
+	O
1	int
,	O
mu_cfg_yyleng	long
-	O
1	int
)	O
;	O
}	O
YY_BREAK	O
case	O
16	int
:	O
case	O
17	int
:	O
YY_RULE_SETUP	O
{	O
_mu_line_add_unescape_last	function
(	O
mu_cfg_yytext	pointer
,	O
mu_cfg_yyleng	long
)	O
;	O
}	O
YY_BREAK	O
case	O
18	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
if	O
(	O
mu_cfg_yyleng	long
>	O
1	int
)	O
_mu_line_add	function
(	O
mu_cfg_yytext	pointer
,	O
mu_cfg_yyleng	long
-	O
1	int
)	O
;	O
mu_cfg_yylval	union
.	O
string	pointer
=	O
_mu_line_finish	function
(	O
)	O
;	O
mu_locus_point_copy	function
(	O
&	O
mu_cfg_yylloc	struct
.	O
beg	struct
,	O
&	O
string_beg	struct
)	O
;	O
mu_locus_point_deinit	function
(	O
&	O
string_beg	struct
)	O
;	O
return	O
MU_TOK_QSTRING	int
;	O
}	O
YY_BREAK	O
case	O
19	int
:	O
case	O
20	int
:	O
case	O
21	int
:	O
case	O
22	int
:	O
case	O
23	int
:	O
case	O
24	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
ML	int
)	O
;	O
mu_locus_point_copy	function
(	O
&	O
string_beg	struct
,	O
&	O
mu_cfg_yylloc	struct
.	O
beg	struct
)	O
;	O
multiline_begin	function
(	O
mu_cfg_yytext	pointer
+	O
2	int
)	O
;	O
}	O
YY_BREAK	O
case	O
25	int
:	O
YY_RULE_SETUP	O
{	O
char	O
*	O
p	pointer
=	O
multiline_strip_tabs	function
(	O
mu_cfg_yytext	pointer
)	O
;	O
if	O
(	O
!	O
strncmp	function
(	O
p	pointer
,	O
multiline_delimiter	pointer
,	O
multiline_delimiter_len	long
)	O
&&	O
isemptystr	function
(	O
p	pointer
+	O
multiline_delimiter_len	long
-	O
mu_cfg_yytext	pointer
)	O
)	O
{	O
free	function
(	O
multiline_delimiter	pointer
)	O
;	O
multiline_delimiter	pointer
=	O
NULL	O
;	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
mu_cfg_yylval	union
.	O
string	pointer
=	O
multiline_finish	function
(	O
)	O
;	O
mu_locus_point_copy	function
(	O
&	O
mu_cfg_yylloc	struct
.	O
beg	struct
,	O
&	O
string_beg	struct
)	O
;	O
mu_locus_point_deinit	function
(	O
&	O
string_beg	struct
)	O
;	O
return	O
MU_TOK_MSTRING	int
;	O
}	O
multiline_add	function
(	O
p	pointer
)	O
;	O
}	O
YY_BREAK	O
case	O
26	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
27	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
28	int
:	O
YY_RULE_SETUP	O
return	O
mu_cfg_yytext	pointer
[	O
0	int
]	O
;	O
YY_BREAK	O
case	O
29	int
:	O
YY_RULE_SETUP	O
{	O
if	O
(	O
mu_isprint	O
(	O
mu_cfg_yytext	pointer
[	O
0	int
]	O
)	O
)	O
mu_error	function
(	O
_	O
(	O
"stray character %c"	pointer
)	O
,	O
mu_cfg_yytext	pointer
[	O
0	int
]	O
)	O
;	O
else	O
mu_error	function
(	O
_	O
(	O
"stray character \\%03o"	pointer
)	O
,	O
(	O
unsigned	O
char	O
)	O
mu_cfg_yytext	pointer
[	O
0	int
]	O
)	O
;	O
mu_cfg_error_count	long
++	O
;	O
}	O
YY_BREAK	O
case	O
30	int
:	O
YY_RULE_SETUP	O
ECHO	O
;	O
YY_BREAK	O
case	O
YY_STATE_EOF	O
(	O
INITIAL	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
COMMENT	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
ML	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
STR	int
)	O
:	O
yyterminate	O
(	O
)	O
;	O
case	O
YY_END_OF_BUFFER	int
:	O
{	O
int	O
yy_amount_of_matched_text	int
=	O
(	O
int	O
)	O
(	O
yy_cp	pointer
-	O
(	O
yytext_ptr	O
)	O
)	O
-	O
1	int
;	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
YY_RESTORE_YY_MORE_OFFSET	O
if	O
(	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
==	O
YY_BUFFER_NEW	int
)	O
{	O
(	O
yy_n_chars	long
)	O
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_input_file	pointer
=	O
mu_cfg_yyin	pointer
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NORMAL	int
;	O
}	O
if	O
(	O
(	O
yy_c_buf_p	pointer
)	O
<=	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
]	O
)	O
{	O
yy_state_type	int
yy_next_state	int
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yytext_ptr	O
)	O
+	O
yy_amount_of_matched_text	int
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_next_state	int
=	O
yy_try_NUL_trans	function
(	O
yy_current_state	int
)	O
;	O
yy_bp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
if	O
(	O
yy_next_state	int
)	O
{	O
yy_cp	pointer
=	O
++	O
(	O
yy_c_buf_p	pointer
)	O
;	O
yy_current_state	int
=	O
yy_next_state	int
;	O
goto	O
yy_match	O
;	O
}	O
else	O
{	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
goto	O
yy_find_action	O
;	O
}	O
}	O
else	O
switch	O
(	O
yy_get_next_buffer	function
(	O
)	O
)	O
{	O
case	O
EOB_ACT_END_OF_FILE	int
:	O
{	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
0	int
;	O
if	O
(	O
mu_cfg_yywrap	function
(	O
)	O
)	O
{	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
yy_act	int
=	O
YY_STATE_EOF	O
(	O
YY_START	O
)	O
;	O
goto	O
do_action	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
)	O
YY_NEW_FILE	O
;	O
}	O
break	O
;	O
}	O
case	O
EOB_ACT_CONTINUE_SCAN	int
:	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yytext_ptr	O
)	O
+	O
yy_amount_of_matched_text	int
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
yy_bp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
goto	O
yy_match	O
;	O
case	O
EOB_ACT_LAST_MATCH	int
:	O
(	O
yy_c_buf_p	pointer
)	O
=	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
]	O
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
yy_bp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
goto	O
yy_find_action	O
;	O
}	O
break	O
;	O
}	O
default	O
:	O
YY_FATAL_ERROR	O
(	O
"fatal flex scanner internal error--no action found"	pointer
)	O
;	O
}	O
}	O
}	O
static	O
int	O
yy_get_next_buffer	function
(	O
void	O
)	O
{	O
register	O
char	O
*	O
dest	pointer
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
;	O
register	O
char	O
*	O
source	pointer
=	O
(	O
yytext_ptr	O
)	O
;	O
register	O
int	O
number_to_move	int
,	O
i	int
;	O
int	O
ret_val	int
;	O
if	O
(	O
(	O
yy_c_buf_p	pointer
)	O
>	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
+	O
1	int
]	O
)	O
YY_FATAL_ERROR	O
(	O
"fatal flex scanner internal error--end of buffer missed"	pointer
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_fill_buffer	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
yy_c_buf_p	pointer
)	O
-	O
(	O
yytext_ptr	O
)	O
-	O
YY_MORE_ADJ	int
==	O
1	int
)	O
{	O
return	O
EOB_ACT_END_OF_FILE	int
;	O
}	O
else	O
{	O
return	O
EOB_ACT_LAST_MATCH	int
;	O
}	O
}	O
number_to_move	int
=	O
(	O
int	O
)	O
(	O
(	O
yy_c_buf_p	pointer
)	O
-	O
(	O
yytext_ptr	O
)	O
)	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
number_to_move	int
;	O
++	O
i	int
)	O
*	O
(	O
dest	pointer
++	O
)	O
=	O
*	O
(	O
source	pointer
++	O
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
==	O
YY_BUFFER_EOF_PENDING	int
)	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
=	O
0	int
;	O
else	O
{	O
yy_size_t	long
num_to_read	long
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_size	long
-	O
number_to_move	int
-	O
1	int
;	O
while	O
(	O
num_to_read	long
<=	O
0	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
=	O
YY_CURRENT_BUFFER_LVALUE	O
;	O
int	O
yy_c_buf_p_offset	int
=	O
(	O
int	O
)	O
(	O
(	O
yy_c_buf_p	pointer
)	O
-	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
;	O
if	O
(	O
b	pointer
->	O
yy_is_our_buffer	int
)	O
{	O
yy_size_t	long
new_size	long
=	O
b	pointer
->	O
yy_buf_size	long
*	O
2	int
;	O
if	O
(	O
new_size	long
<=	O
0	int
)	O
b	pointer
->	O
yy_buf_size	long
+=	O
b	pointer
->	O
yy_buf_size	long
/	O
8	int
;	O
else	O
b	pointer
->	O
yy_buf_size	long
*=	O
2	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
mu_cfg_yyrealloc	function
(	O
(	O
void	O
*	O
)	O
b	pointer
->	O
yy_ch_buf	pointer
,	O
b	pointer
->	O
yy_buf_size	long
+	O
2	int
)	O
;	O
}	O
else	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
0	int
;	O
if	O
(	O
!	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"fatal error - scanner input buffer overflow"	pointer
)	O
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
&	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
yy_c_buf_p_offset	int
]	O
;	O
num_to_read	long
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_size	long
-	O
number_to_move	int
-	O
1	int
;	O
}	O
if	O
(	O
num_to_read	long
>	O
YY_READ_BUF_SIZE	int
)	O
num_to_read	long
=	O
YY_READ_BUF_SIZE	int
;	O
YY_INPUT	O
(	O
(	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
number_to_move	int
]	O
)	O
,	O
(	O
yy_n_chars	long
)	O
,	O
num_to_read	long
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
;	O
}	O
if	O
(	O
(	O
yy_n_chars	long
)	O
==	O
0	int
)	O
{	O
if	O
(	O
number_to_move	int
==	O
YY_MORE_ADJ	int
)	O
{	O
ret_val	int
=	O
EOB_ACT_END_OF_FILE	int
;	O
mu_cfg_yyrestart	function
(	O
mu_cfg_yyin	pointer
)	O
;	O
}	O
else	O
{	O
ret_val	int
=	O
EOB_ACT_LAST_MATCH	int
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
=	O
YY_BUFFER_EOF_PENDING	int
;	O
}	O
}	O
else	O
ret_val	int
=	O
EOB_ACT_CONTINUE_SCAN	int
;	O
if	O
(	O
(	O
yy_size_t	long
)	O
(	O
(	O
yy_n_chars	long
)	O
+	O
number_to_move	int
)	O
>	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_size	long
)	O
{	O
yy_size_t	long
new_size	long
=	O
(	O
yy_n_chars	long
)	O
+	O
number_to_move	int
+	O
(	O
(	O
yy_n_chars	long
)	O
>>	O
1	int
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
mu_cfg_yyrealloc	function
(	O
(	O
void	O
*	O
)	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
,	O
new_size	long
)	O
;	O
if	O
(	O
!	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_get_next_buffer()"	pointer
)	O
;	O
}	O
(	O
yy_n_chars	long
)	O
+=	O
number_to_move	int
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
+	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
(	O
yytext_ptr	O
)	O
=	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
;	O
return	O
ret_val	int
;	O
}	O
static	O
yy_state_type	int
yy_get_previous_state	function
(	O
void	O
)	O
{	O
register	O
yy_state_type	int
yy_current_state	int
;	O
register	O
char	O
*	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
(	O
yy_start	int
)	O
;	O
for	O
(	O
yy_cp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
yy_cp	pointer
<	O
(	O
yy_c_buf_p	pointer
)	O
;	O
++	O
yy_cp	pointer
)	O
{	O
register	O
YY_CHAR	char
yy_c	char
=	O
(	O
*	O
yy_cp	pointer
?	O
yy_ec	array
[	O
YY_SC_TO_UI	O
(	O
*	O
yy_cp	pointer
)	O
]	O
:	O
1	int
)	O
;	O
if	O
(	O
yy_accept	array
[	O
yy_current_state	int
]	O
)	O
{	O
(	O
yy_last_accepting_state	int
)	O
=	O
yy_current_state	int
;	O
(	O
yy_last_accepting_cpos	pointer
)	O
=	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
94	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	int
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
return	O
yy_current_state	int
;	O
}	O
static	O
yy_state_type	int
yy_try_NUL_trans	function
(	O
yy_state_type	int
yy_current_state	int
)	O
{	O
register	O
int	O
yy_is_jam	int
;	O
register	O
char	O
*	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
register	O
YY_CHAR	char
yy_c	char
=	O
1	int
;	O
if	O
(	O
yy_accept	array
[	O
yy_current_state	int
]	O
)	O
{	O
(	O
yy_last_accepting_state	int
)	O
=	O
yy_current_state	int
;	O
(	O
yy_last_accepting_cpos	pointer
)	O
=	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
94	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	int
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
yy_is_jam	int
=	O
(	O
yy_current_state	int
==	O
93	int
)	O
;	O
return	O
yy_is_jam	int
?	O
0	int
:	O
yy_current_state	int
;	O
}	O
void	O
mu_cfg_yyrestart	function
(	O
FILE	struct
*	O
input_file	pointer
)	O
{	O
if	O
(	O
!	O
YY_CURRENT_BUFFER	O
)	O
{	O
yyensure_buffer_stack	function
(	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
mu_cfg_yy_create_buffer	function
(	O
mu_cfg_yyin	pointer
,	O
YY_BUF_SIZE	int
)	O
;	O
}	O
mu_cfg_yy_init_buffer	function
(	O
YY_CURRENT_BUFFER	O
,	O
input_file	pointer
)	O
;	O
mu_cfg_yy_load_buffer_state	function
(	O
)	O
;	O
}	O
void	O
mu_cfg_yy_switch_to_buffer	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
{	O
yyensure_buffer_stack	function
(	O
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
==	O
new_buffer	pointer
)	O
return	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
*	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yy_hold_char	char
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_pos	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
;	O
}	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
new_buffer	pointer
;	O
mu_cfg_yy_load_buffer_state	function
(	O
)	O
;	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
1	int
;	O
}	O
static	O
void	O
mu_cfg_yy_load_buffer_state	function
(	O
void	O
)	O
{	O
(	O
yy_n_chars	long
)	O
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
;	O
(	O
yytext_ptr	O
)	O
=	O
(	O
yy_c_buf_p	pointer
)	O
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_pos	pointer
;	O
mu_cfg_yyin	pointer
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_input_file	pointer
;	O
(	O
yy_hold_char	char
)	O
=	O
*	O
(	O
yy_c_buf_p	pointer
)	O
;	O
}	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_create_buffer	function
(	O
FILE	struct
*	O
file	pointer
,	O
int	O
size	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
b	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
mu_cfg_yyalloc	function
(	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in mu_cfg_yy_create_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_buf_size	long
=	O
size	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
mu_cfg_yyalloc	function
(	O
b	pointer
->	O
yy_buf_size	long
+	O
2	int
)	O
;	O
if	O
(	O
!	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in mu_cfg_yy_create_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
1	int
;	O
mu_cfg_yy_init_buffer	function
(	O
b	pointer
,	O
file	pointer
)	O
;	O
return	O
b	pointer
;	O
}	O
void	O
mu_cfg_yy_delete_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
{	O
if	O
(	O
!	O
b	pointer
)	O
return	O
;	O
if	O
(	O
b	pointer
==	O
YY_CURRENT_BUFFER	O
)	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
0	int
;	O
if	O
(	O
b	pointer
->	O
yy_is_our_buffer	int
)	O
mu_cfg_yyfree	function
(	O
(	O
void	O
*	O
)	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
;	O
mu_cfg_yyfree	function
(	O
(	O
void	O
*	O
)	O
b	pointer
)	O
;	O
}	O
static	O
void	O
mu_cfg_yy_init_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
,	O
FILE	struct
*	O
file	pointer
)	O
{	O
int	O
oerrno	int
=	O
errno	O
;	O
mu_cfg_yy_flush_buffer	function
(	O
b	pointer
)	O
;	O
b	pointer
->	O
yy_input_file	pointer
=	O
file	pointer
;	O
b	pointer
->	O
yy_fill_buffer	int
=	O
1	int
;	O
if	O
(	O
b	pointer
!=	O
YY_CURRENT_BUFFER	O
)	O
{	O
b	pointer
->	O
yy_bs_lineno	int
=	O
1	int
;	O
b	pointer
->	O
yy_bs_column	int
=	O
0	int
;	O
}	O
b	pointer
->	O
yy_is_interactive	int
=	O
file	pointer
?	O
(	O
isatty	function
(	O
fileno	function
(	O
file	pointer
)	O
)	O
>	O
0	int
)	O
:	O
0	int
;	O
errno	O
=	O
oerrno	int
;	O
}	O
void	O
mu_cfg_yy_flush_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
{	O
if	O
(	O
!	O
b	pointer
)	O
return	O
;	O
b	pointer
->	O
yy_n_chars	long
=	O
0	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
->	O
yy_buf_pos	pointer
=	O
&	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
;	O
b	pointer
->	O
yy_at_bol	int
=	O
1	int
;	O
b	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NEW	int
;	O
if	O
(	O
b	pointer
==	O
YY_CURRENT_BUFFER	O
)	O
mu_cfg_yy_load_buffer_state	function
(	O
)	O
;	O
}	O
void	O
mu_cfg_yypush_buffer_state	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
{	O
if	O
(	O
new_buffer	pointer
==	O
NULL	O
)	O
return	O
;	O
yyensure_buffer_stack	function
(	O
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
*	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yy_hold_char	char
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_pos	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
;	O
}	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
(	O
yy_buffer_stack_top	long
)	O
++	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
new_buffer	pointer
;	O
mu_cfg_yy_load_buffer_state	function
(	O
)	O
;	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
1	int
;	O
}	O
void	O
mu_cfg_yypop_buffer_state	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
YY_CURRENT_BUFFER	O
)	O
return	O
;	O
mu_cfg_yy_delete_buffer	function
(	O
YY_CURRENT_BUFFER	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
NULL	O
;	O
if	O
(	O
(	O
yy_buffer_stack_top	long
)	O
>	O
0	int
)	O
--	O
(	O
yy_buffer_stack_top	long
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
mu_cfg_yy_load_buffer_state	function
(	O
)	O
;	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
1	int
;	O
}	O
}	O
static	O
void	O
yyensure_buffer_stack	function
(	O
void	O
)	O
{	O
yy_size_t	long
num_to_alloc	long
;	O
if	O
(	O
!	O
(	O
yy_buffer_stack	pointer
)	O
)	O
{	O
num_to_alloc	long
=	O
1	int
;	O
(	O
yy_buffer_stack	pointer
)	O
=	O
(	O
struct	O
yy_buffer_state	struct
*	O
*	O
)	O
mu_cfg_yyalloc	function
(	O
num_to_alloc	long
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
if	O
(	O
!	O
(	O
yy_buffer_stack	pointer
)	O
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yyensure_buffer_stack()"	pointer
)	O
;	O
memset	function
(	O
(	O
yy_buffer_stack	pointer
)	O
,	O
0	int
,	O
num_to_alloc	long
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
(	O
yy_buffer_stack_max	long
)	O
=	O
num_to_alloc	long
;	O
(	O
yy_buffer_stack_top	long
)	O
=	O
0	int
;	O
return	O
;	O
}	O
if	O
(	O
(	O
yy_buffer_stack_top	long
)	O
>=	O
(	O
(	O
yy_buffer_stack_max	long
)	O
)	O
-	O
1	int
)	O
{	O
int	O
grow_size	int
=	O
8	int
;	O
num_to_alloc	long
=	O
(	O
yy_buffer_stack_max	long
)	O
+	O
grow_size	int
;	O
(	O
yy_buffer_stack	pointer
)	O
=	O
(	O
struct	O
yy_buffer_state	struct
*	O
*	O
)	O
mu_cfg_yyrealloc	function
(	O
(	O
yy_buffer_stack	pointer
)	O
,	O
num_to_alloc	long
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
if	O
(	O
!	O
(	O
yy_buffer_stack	pointer
)	O
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yyensure_buffer_stack()"	pointer
)	O
;	O
memset	function
(	O
(	O
yy_buffer_stack	pointer
)	O
+	O
(	O
yy_buffer_stack_max	long
)	O
,	O
0	int
,	O
grow_size	int
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
(	O
yy_buffer_stack_max	long
)	O
=	O
num_to_alloc	long
;	O
}	O
}	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_scan_buffer	function
(	O
char	O
*	O
base	pointer
,	O
yy_size_t	long
size	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
if	O
(	O
size	int
<	O
2	int
||	O
base	pointer
[	O
size	int
-	O
2	int
]	O
!=	O
YY_END_OF_BUFFER_CHAR	int
||	O
base	pointer
[	O
size	int
-	O
1	int
]	O
!=	O
YY_END_OF_BUFFER_CHAR	int
)	O
return	O
0	int
;	O
b	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
mu_cfg_yyalloc	function
(	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in mu_cfg_yy_scan_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_buf_size	long
=	O
size	int
-	O
2	int
;	O
b	pointer
->	O
yy_buf_pos	pointer
=	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
base	pointer
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
0	int
;	O
b	pointer
->	O
yy_input_file	pointer
=	O
0	int
;	O
b	pointer
->	O
yy_n_chars	long
=	O
b	pointer
->	O
yy_buf_size	long
;	O
b	pointer
->	O
yy_is_interactive	int
=	O
0	int
;	O
b	pointer
->	O
yy_at_bol	int
=	O
1	int
;	O
b	pointer
->	O
yy_fill_buffer	int
=	O
0	int
;	O
b	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NEW	int
;	O
mu_cfg_yy_switch_to_buffer	function
(	O
b	pointer
)	O
;	O
return	O
b	pointer
;	O
}	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_scan_string	function
(	O
yyconst	O
char	O
*	O
yystr	pointer
)	O
{	O
return	O
mu_cfg_yy_scan_bytes	function
(	O
yystr	pointer
,	O
strlen	function
(	O
yystr	pointer
)	O
)	O
;	O
}	O
YY_BUFFER_STATE	pointer
mu_cfg_yy_scan_bytes	function
(	O
yyconst	O
char	O
*	O
yybytes	pointer
,	O
yy_size_t	long
_yybytes_len	long
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
char	O
*	O
buf	array
;	O
yy_size_t	long
n	int
;	O
int	O
i	int
;	O
n	int
=	O
_yybytes_len	long
+	O
2	int
;	O
buf	array
=	O
(	O
char	O
*	O
)	O
mu_cfg_yyalloc	function
(	O
n	int
)	O
;	O
if	O
(	O
!	O
buf	array
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in mu_cfg_yy_scan_bytes()"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_yybytes_len	long
;	O
++	O
i	int
)	O
buf	array
[	O
i	int
]	O
=	O
yybytes	pointer
[	O
i	int
]	O
;	O
buf	array
[	O
_yybytes_len	long
]	O
=	O
buf	array
[	O
_yybytes_len	long
+	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
=	O
mu_cfg_yy_scan_buffer	function
(	O
buf	array
,	O
n	int
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"bad buffer in mu_cfg_yy_scan_bytes()"	pointer
)	O
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
1	int
;	O
return	O
b	pointer
;	O
}	O
static	O
void	O
yy_fatal_error	function
(	O
yyconst	O
char	O
*	O
msg	array
)	O
{	O
(	O
void	O
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s\n"	pointer
,	O
msg	array
)	O
;	O
exit	function
(	O
YY_EXIT_FAILURE	int
)	O
;	O
}	O
int	O
mu_cfg_yyget_lineno	function
(	O
void	O
)	O
{	O
return	O
mu_cfg_yylineno	int
;	O
}	O
FILE	struct
*	O
mu_cfg_yyget_in	function
(	O
void	O
)	O
{	O
return	O
mu_cfg_yyin	pointer
;	O
}	O
FILE	struct
*	O
mu_cfg_yyget_out	function
(	O
void	O
)	O
{	O
return	O
mu_cfg_yyout	pointer
;	O
}	O
yy_size_t	long
mu_cfg_yyget_leng	function
(	O
void	O
)	O
{	O
return	O
mu_cfg_yyleng	long
;	O
}	O
char	O
*	O
mu_cfg_yyget_text	function
(	O
void	O
)	O
{	O
return	O
mu_cfg_yytext	pointer
;	O
}	O
void	O
mu_cfg_yyset_lineno	function
(	O
int	O
line_number	int
)	O
{	O
mu_cfg_yylineno	int
=	O
line_number	int
;	O
}	O
void	O
mu_cfg_yyset_in	function
(	O
FILE	struct
*	O
in_str	pointer
)	O
{	O
mu_cfg_yyin	pointer
=	O
in_str	pointer
;	O
}	O
void	O
mu_cfg_yyset_out	function
(	O
FILE	struct
*	O
out_str	pointer
)	O
{	O
mu_cfg_yyout	pointer
=	O
out_str	pointer
;	O
}	O
int	O
mu_cfg_yyget_debug	function
(	O
void	O
)	O
{	O
return	O
mu_cfg_yy_flex_debug	int
;	O
}	O
void	O
mu_cfg_yyset_debug	function
(	O
int	O
bdebug	int
)	O
{	O
mu_cfg_yy_flex_debug	int
=	O
bdebug	int
;	O
}	O
static	O
int	O
yy_init_globals	function
(	O
void	O
)	O
{	O
(	O
yy_buffer_stack	pointer
)	O
=	O
0	int
;	O
(	O
yy_buffer_stack_top	long
)	O
=	O
0	int
;	O
(	O
yy_buffer_stack_max	long
)	O
=	O
0	int
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
char	O
*	O
)	O
0	int
;	O
(	O
yy_init	int
)	O
=	O
0	int
;	O
(	O
yy_start	int
)	O
=	O
0	int
;	O
mu_cfg_yyin	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
mu_cfg_yyout	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_cfg_yylex_destroy	function
(	O
void	O
)	O
{	O
while	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
mu_cfg_yy_delete_buffer	function
(	O
YY_CURRENT_BUFFER	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
NULL	O
;	O
mu_cfg_yypop_buffer_state	function
(	O
)	O
;	O
}	O
mu_cfg_yyfree	function
(	O
(	O
yy_buffer_stack	pointer
)	O
)	O
;	O
(	O
yy_buffer_stack	pointer
)	O
=	O
NULL	O
;	O
yy_init_globals	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
void	O
*	O
mu_cfg_yyalloc	function
(	O
yy_size_t	long
size	int
)	O
{	O
return	O
(	O
void	O
*	O
)	O
malloc	function
(	O
size	int
)	O
;	O
}	O
void	O
*	O
mu_cfg_yyrealloc	function
(	O
void	O
*	O
ptr	pointer
,	O
yy_size_t	long
size	int
)	O
{	O
return	O
(	O
void	O
*	O
)	O
realloc	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
,	O
size	int
)	O
;	O
}	O
void	O
mu_cfg_yyfree	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
)	O
;	O
}	O
int	O
mu_cfg_yywrap	function
(	O
)	O
{	O
return	O
1	int
;	O
}	O
static	O
void	O
unescape_to_line	function
(	O
int	O
c	int
)	O
{	O
if	O
(	O
c	int
!=	O
'\n'	O
)	O
{	O
char	O
t	char
=	O
mu_wordsplit_c_unquote_char	function
(	O
c	int
)	O
;	O
if	O
(	O
t	char
==	O
c	int
&&	O
t	char
!=	O
'\\'	O
&&	O
t	char
!=	O
'\"'	O
)	O
{	O
mu_error	function
(	O
_	O
(	O
"unknown escape sequence '\\%c'"	pointer
)	O
,	O
c	int
)	O
;	O
mu_cfg_error_count	long
++	O
;	O
}	O
mu_opool_append_char	function
(	O
pool	pointer
,	O
t	char
)	O
;	O
}	O
}	O
void	O
_mu_line_add	function
(	O
char	O
*	O
text	pointer
,	O
size_t	long
len	long
)	O
{	O
mu_opool_append	function
(	O
pool	pointer
,	O
text	pointer
,	O
len	long
)	O
;	O
}	O
void	O
_mu_line_add_unescape_last	function
(	O
char	O
*	O
text	pointer
,	O
size_t	long
len	long
)	O
{	O
mu_opool_append	function
(	O
pool	pointer
,	O
text	pointer
,	O
len	long
-	O
2	int
)	O
;	O
unescape_to_line	function
(	O
text	pointer
[	O
len	long
-	O
1	int
]	O
)	O
;	O
}	O
void	O
_mu_line_begin	function
(	O
)	O
{	O
if	O
(	O
!	O
pool	pointer
)	O
mu_opool_create	function
(	O
&	O
pool	pointer
,	O
MU_OPOOL_ENOMEMABRT	int
)	O
;	O
else	O
mu_opool_clear	function
(	O
pool	pointer
)	O
;	O
}	O
char	O
*	O
_mu_line_finish	function
(	O
)	O
{	O
mu_opool_append_char	function
(	O
pool	pointer
,	O
0	int
)	O
;	O
return	O
mu_opool_finish	function
(	O
pool	pointer
,	O
NULL	O
)	O
;	O
}	O
static	O
int	O
is_tab	function
(	O
char	O
c	int
)	O
{	O
return	O
c	int
==	O
'\t'	O
;	O
}	O
static	O
int	O
is_ws	function
(	O
char	O
c	int
)	O
{	O
return	O
c	int
==	O
'\t'	O
||	O
c	int
==	O
' '	O
;	O
}	O
static	O
int	O
isemptystr	function
(	O
int	O
off	int
)	O
{	O
for	O
(	O
;	O
mu_cfg_yytext	pointer
[	O
off	int
]	O
&&	O
mu_isspace	O
(	O
mu_cfg_yytext	pointer
[	O
off	int
]	O
)	O
;	O
off	int
++	O
)	O
;	O
if	O
(	O
mu_cfg_yytext	pointer
[	O
off	int
]	O
==	O
';'	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
off	int
+	O
1	int
;	O
mu_cfg_yytext	pointer
[	O
i	int
]	O
;	O
i	int
++	O
)	O
if	O
(	O
!	O
mu_isspace	O
(	O
mu_cfg_yytext	pointer
[	O
i	int
]	O
)	O
)	O
return	O
0	int
;	O
yyless	O
(	O
off	int
)	O
;	O
return	O
1	int
;	O
}	O
return	O
mu_cfg_yytext	pointer
[	O
off	int
]	O
==	O
0	int
;	O
}	O
static	O
void	O
multiline_begin	function
(	O
char	O
*	O
p	pointer
)	O
{	O
if	O
(	O
*	O
p	pointer
==	O
'-'	O
)	O
{	O
if	O
(	O
*	O
++	O
p	pointer
==	O
' '	O
)	O
{	O
char_to_strip	pointer
=	O
is_ws	function
;	O
p	pointer
++	O
;	O
}	O
else	O
char_to_strip	pointer
=	O
is_tab	function
;	O
}	O
else	O
char_to_strip	pointer
=	O
NULL	O
;	O
if	O
(	O
*	O
p	pointer
==	O
'\\'	O
)	O
{	O
p	pointer
++	O
;	O
multiline_unescape	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
*	O
p	pointer
==	O
'"'	O
)	O
{	O
char	O
*	O
q	pointer
;	O
p	pointer
++	O
;	O
multiline_unescape	int
=	O
0	int
;	O
q	pointer
=	O
strchr	function
(	O
p	pointer
,	O
'"'	O
)	O
;	O
multiline_delimiter_len	long
=	O
q	pointer
-	O
p	pointer
;	O
}	O
else	O
{	O
multiline_delimiter_len	long
=	O
strcspn	function
(	O
p	pointer
,	O
" \t"	pointer
)	O
;	O
multiline_unescape	int
=	O
1	int
;	O
}	O
multiline_delimiter_len	long
--	O
;	O
multiline_delimiter	pointer
=	O
mu_alloc	function
(	O
multiline_delimiter_len	long
+	O
1	int
)	O
;	O
memcpy	function
(	O
multiline_delimiter	pointer
,	O
p	pointer
,	O
multiline_delimiter_len	long
)	O
;	O
multiline_delimiter	pointer
[	O
multiline_delimiter_len	long
]	O
=	O
0	int
;	O
_mu_line_begin	function
(	O
)	O
;	O
}	O
static	O
char	O
*	O
multiline_strip_tabs	function
(	O
char	O
*	O
text	pointer
)	O
{	O
if	O
(	O
char_to_strip	pointer
)	O
for	O
(	O
;	O
*	O
text	pointer
&&	O
char_to_strip	pointer
(	O
*	O
text	pointer
)	O
;	O
text	pointer
++	O
)	O
;	O
return	O
text	pointer
;	O
}	O
static	O
void	O
multiline_add	function
(	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
multiline_unescape	int
)	O
{	O
for	O
(	O
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
{	O
if	O
(	O
*	O
s	pointer
==	O
'\\'	O
)	O
{	O
unescape_to_line	function
(	O
s	pointer
[	O
1	int
]	O
)	O
;	O
++	O
s	pointer
;	O
}	O
else	O
_mu_line_add	function
(	O
s	pointer
,	O
1	int
)	O
;	O
}	O
}	O
else	O
_mu_line_add	function
(	O
s	pointer
,	O
strlen	function
(	O
s	pointer
)	O
)	O
;	O
}	O
static	O
char	O
*	O
multiline_finish	function
(	O
)	O
{	O
return	O
_mu_line_finish	function
(	O
)	O
;	O
}	O
int	O
mu_cfg_parse_file	function
(	O
mu_cfg_tree_t	struct
*	O
*	O
return_tree	pointer
,	O
const	O
char	O
*	O
file	pointer
,	O
int	O
flags	int
)	O
{	O
struct	O
stat	struct
st	pointer
;	O
FILE	struct
*	O
fp	pointer
;	O
int	O
rc	int
;	O
char	O
*	O
full_name	pointer
=	O
mu_tilde_expansion	function
(	O
file	pointer
,	O
MU_HIERARCHY_DELIMITER	char
,	O
NULL	O
)	O
;	O
if	O
(	O
flags	int
&	O
MU_CF_VERBOSE	int
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"opening configuration file %s"	pointer
)	O
,	O
full_name	pointer
)	O
;	O
if	O
(	O
stat	struct
(	O
full_name	pointer
,	O
&	O
st	pointer
)	O
)	O
{	O
if	O
(	O
errno	O
!=	O
ENOENT	int
)	O
mu_error	function
(	O
_	O
(	O
"cannot stat `%s': %s"	pointer
)	O
,	O
full_name	pointer
,	O
mu_strerror	function
(	O
errno	O
)	O
)	O
;	O
else	O
if	O
(	O
flags	int
&	O
MU_CF_VERBOSE	int
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"configuration file %s doesn't exist"	pointer
)	O
,	O
full_name	pointer
)	O
;	O
free	function
(	O
full_name	pointer
)	O
;	O
return	O
ENOENT	int
;	O
}	O
else	O
if	O
(	O
!	O
S_ISREG	O
(	O
st	pointer
.	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
flags	int
&	O
MU_CF_VERBOSE	int
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"%s: not a regular file"	pointer
)	O
,	O
full_name	pointer
)	O
;	O
free	function
(	O
full_name	pointer
)	O
;	O
return	O
ENOENT	int
;	O
}	O
fp	pointer
=	O
fopen	function
(	O
full_name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
{	O
mu_error	function
(	O
_	O
(	O
"cannot open config file `%s': %s"	pointer
)	O
,	O
full_name	pointer
,	O
mu_strerror	function
(	O
errno	O
)	O
)	O
;	O
free	function
(	O
full_name	pointer
)	O
;	O
return	O
errno	O
;	O
}	O
if	O
(	O
flags	int
&	O
MU_CF_VERBOSE	int
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"parsing file `%s'"	pointer
)	O
,	O
full_name	pointer
)	O
;	O
mu_cfg_set_lex_debug	function
(	O
)	O
;	O
mu_linetrack_create	function
(	O
&	O
trk	pointer
,	O
full_name	pointer
,	O
2	int
)	O
;	O
memset	function
(	O
&	O
string_beg	struct
,	O
0	int
,	O
sizeof	O
string_beg	struct
)	O
;	O
mu_cfg_yyrestart	function
(	O
fp	pointer
)	O
;	O
rc	int
=	O
mu_cfg_parse	function
(	O
return_tree	pointer
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
if	O
(	O
flags	int
&	O
MU_CF_VERBOSE	int
)	O
mu_diag_output	function
(	O
MU_DIAG_INFO	O
,	O
_	O
(	O
"finished parsing file `%s'"	pointer
)	O
,	O
full_name	pointer
)	O
;	O
free	function
(	O
full_name	pointer
)	O
;	O
mu_linetrack_destroy	function
(	O
&	O
trk	pointer
)	O
;	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	int
,	O
NULL	O
)	O
;	O
return	O
rc	int
==	O
0	int
?	O
0	int
:	O
MU_ERR_FAILURE	O
;	O
}	O
mu_opool_t	pointer
mu_cfg_lexer_pool	function
(	O
void	O
)	O
{	O
mu_opool_t	pointer
p	pointer
=	O
pool	pointer
;	O
pool	pointer
=	O
NULL	O
;	O
return	O
p	pointer
;	O
}	O
