typedef	O
struct	O
{	O
EDMAT_BUFFER	struct
buf	pointer
;	O
EUint32	long
ptr	long
;	O
}	O
DtMEMORY_STREAM	struct
;	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMopenZZrS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
name	pointer
,	O
EPChar	pointer
mode	pointer
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"'open' not supported on memory streams"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMcloserS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"'close' not supported on memory streams"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMreadsAsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EDMAT_BUFFER	struct
*	O
b	pointer
,	O
EPSint32	pointer
len	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
*	O
len	int
>	O
(	O
m	pointer
->	O
buf	pointer
.	O
Size	long
-	O
m	pointer
->	O
ptr	long
)	O
)	O
*	O
len	int
=	O
m	pointer
->	O
buf	pointer
.	O
Size	long
-	O
m	pointer
->	O
ptr	long
;	O
if	O
(	O
*	O
len	int
<=	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
b	pointer
->	O
Size	long
==	O
0	int
)	O
{	O
edma_buffer_alloc	function
(	O
b	pointer
,	O
*	O
len	int
)	O
;	O
}	O
else	O
if	O
(	O
b	pointer
->	O
Size	long
<	O
*	O
len	int
)	O
{	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"** ERROR ** : Not enought space output buffer"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
memcpy	function
(	O
b	pointer
->	O
dat	pointer
,	O
m	pointer
->	O
buf	pointer
.	O
dat	pointer
+	O
m	pointer
->	O
ptr	long
,	O
*	O
len	int
)	O
;	O
m	pointer
->	O
ptr	long
+=	O
*	O
len	int
;	O
return	O
*	O
len	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMwriteAsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EDMAT_BUFFER	struct
b	pointer
,	O
EPSint32	pointer
len	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
ESint32	int
new_size	int
,	O
old_size	int
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
*	O
len	int
<=	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
*	O
len	int
>	O
b	pointer
.	O
Size	long
)	O
*	O
len	int
=	O
b	pointer
.	O
Size	long
;	O
if	O
(	O
(	O
m	pointer
->	O
buf	pointer
.	O
Size	long
-	O
m	pointer
->	O
ptr	long
)	O
<	O
*	O
len	int
)	O
{	O
old_size	int
=	O
m	pointer
->	O
buf	pointer
.	O
Size	long
;	O
new_size	int
=	O
m	pointer
->	O
ptr	long
+	O
*	O
len	int
+	O
1	int
;	O
if	O
(	O
(	O
edma_buffer_realloc	function
(	O
&	O
m	pointer
->	O
buf	pointer
,	O
new_size	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"** ERROR ** : Can't allocate more memory. Write failed"	pointer
)	O
;	O
*	O
len	int
=	O
0	int
;	O
return	O
-	O
1	int
;	O
}	O
memset	function
(	O
m	pointer
->	O
buf	pointer
.	O
dat	pointer
+	O
old_size	int
,	O
0	int
,	O
new_size	int
-	O
old_size	int
)	O
;	O
}	O
memcpy	function
(	O
m	pointer
->	O
buf	pointer
.	O
dat	pointer
+	O
m	pointer
->	O
ptr	long
,	O
b	pointer
.	O
dat	pointer
,	O
*	O
len	int
)	O
;	O
m	pointer
->	O
ptr	long
+=	O
*	O
len	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMputsZS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
s	pointer
,	O
ESint32	int
len	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMputcCS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EChar	char
c	char
,	O
ESint32	int
len	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMgetssZsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
s	pointer
,	O
EPSint32	pointer
len	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMgetcsCrS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
c	char
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMflushrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMseekS32ZrS32	function
(	O
OBJID	int
IdObj	int
,	O
ESint32	int
p	int
,	O
EPChar	pointer
pos	pointer
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMtellsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EPSint32	pointer
p	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
*	O
p	int
=	O
m	pointer
->	O
ptr	long
;	O
return	O
m	pointer
->	O
ptr	long
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMrewindrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
m	pointer
->	O
ptr	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMeofrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
m	pointer
->	O
ptr	long
==	O
(	O
m	pointer
->	O
buf	pointer
.	O
Size	long
-	O
1	int
)	O
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMerrorrS32	function
(	O
OBJID	int
IdObj	int
,	O
ESint32	int
err	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMLoadZsArS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
fname	pointer
,	O
EDMAT_BUFFER	struct
*	O
buf	pointer
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"'Load' not supported on memory streams"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMSaveZArS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
fnmae	pointer
,	O
EDMAT_BUFFER	struct
buf	pointer
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"'Save' not supported on memory streams"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMborn	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
m	pointer
->	O
ptr	long
=	O
0	int
;	O
memset	function
(	O
&	O
m	pointer
->	O
buf	pointer
,	O
0	int
,	O
sizeof	O
(	O
EDMAT_BUFFER	struct
)	O
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
MEMORY_STREAMrip	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtMEMORY_STREAM	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtMEMORY_STREAM	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_buffer_free	function
(	O
&	O
m	pointer
->	O
buf	pointer
)	O
;	O
return	O
0	int
;	O
}	O
