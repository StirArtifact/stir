int	O
osip_cseq_init	function
(	O
osip_cseq_t	struct
*	O
*	O
cseq	pointer
)	O
{	O
*	O
cseq	pointer
=	O
(	O
osip_cseq_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_cseq_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
cseq	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
(	O
*	O
cseq	pointer
)	O
->	O
method	pointer
=	O
NULL	O
;	O
(	O
*	O
cseq	pointer
)	O
->	O
number	pointer
=	O
NULL	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_cseq	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
int	O
i	int
;	O
if	O
(	O
hvalue	pointer
==	O
NULL	O
||	O
hvalue	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	pointer
->	O
cseq	pointer
!=	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_cseq_init	function
(	O
&	O
(	O
sip	pointer
->	O
cseq	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
sip	pointer
->	O
message_property	int
=	O
2	int
;	O
i	int
=	O
osip_cseq_parse	function
(	O
sip	pointer
->	O
cseq	pointer
,	O
hvalue	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_cseq_free	function
(	O
sip	pointer
->	O
cseq	pointer
)	O
;	O
sip	pointer
->	O
cseq	pointer
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_cseq_parse	function
(	O
osip_cseq_t	struct
*	O
cseq	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
char	O
*	O
method	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
end	pointer
=	O
NULL	O
;	O
if	O
(	O
cseq	pointer
==	O
NULL	O
||	O
hvalue	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
cseq	pointer
->	O
number	pointer
=	O
NULL	O
;	O
cseq	pointer
->	O
method	pointer
=	O
NULL	O
;	O
method	pointer
=	O
strchr	function
(	O
hvalue	pointer
,	O
' '	O
)	O
;	O
if	O
(	O
method	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
end	pointer
=	O
hvalue	pointer
+	O
strlen	function
(	O
hvalue	pointer
)	O
;	O
if	O
(	O
method	pointer
-	O
hvalue	pointer
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
cseq	pointer
->	O
number	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
method	pointer
-	O
hvalue	pointer
+	O
1	int
)	O
;	O
if	O
(	O
cseq	pointer
->	O
number	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_clrncpy	function
(	O
cseq	pointer
->	O
number	pointer
,	O
hvalue	pointer
,	O
method	pointer
-	O
hvalue	pointer
)	O
;	O
if	O
(	O
end	pointer
-	O
method	pointer
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
cseq	pointer
->	O
method	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
end	pointer
-	O
method	pointer
+	O
1	int
)	O
;	O
if	O
(	O
cseq	pointer
->	O
method	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_clrncpy	function
(	O
cseq	pointer
->	O
method	pointer
,	O
method	pointer
+	O
1	int
,	O
end	pointer
-	O
method	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_cseq_t	struct
*	O
osip_message_get_cseq	function
(	O
const	O
osip_message_t	struct
*	O
sip	pointer
)	O
{	O
return	O
sip	pointer
->	O
cseq	pointer
;	O
}	O
char	O
*	O
osip_cseq_get_number	function
(	O
osip_cseq_t	struct
*	O
cseq	pointer
)	O
{	O
return	O
cseq	pointer
->	O
number	pointer
;	O
}	O
char	O
*	O
osip_cseq_get_method	function
(	O
osip_cseq_t	struct
*	O
cseq	pointer
)	O
{	O
return	O
cseq	pointer
->	O
method	pointer
;	O
}	O
void	O
osip_cseq_set_number	function
(	O
osip_cseq_t	struct
*	O
cseq	pointer
,	O
char	O
*	O
number	pointer
)	O
{	O
cseq	pointer
->	O
number	pointer
=	O
(	O
char	O
*	O
)	O
number	pointer
;	O
}	O
void	O
osip_cseq_set_method	function
(	O
osip_cseq_t	struct
*	O
cseq	pointer
,	O
char	O
*	O
method	pointer
)	O
{	O
cseq	pointer
->	O
method	pointer
=	O
(	O
char	O
*	O
)	O
method	pointer
;	O
}	O
int	O
osip_cseq_to_str	function
(	O
const	O
osip_cseq_t	struct
*	O
cseq	pointer
,	O
char	O
*	O
*	O
dest	pointer
)	O
{	O
size_t	long
len	long
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
cseq	pointer
==	O
NULL	O
)	O
||	O
(	O
cseq	pointer
->	O
number	pointer
==	O
NULL	O
)	O
||	O
(	O
cseq	pointer
->	O
method	pointer
==	O
NULL	O
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
strlen	function
(	O
cseq	pointer
->	O
method	pointer
)	O
+	O
strlen	function
(	O
cseq	pointer
->	O
number	pointer
)	O
+	O
2	int
;	O
*	O
dest	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
*	O
dest	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
snprintf	function
(	O
*	O
dest	pointer
,	O
len	long
,	O
"%s %s"	pointer
,	O
cseq	pointer
->	O
number	pointer
,	O
cseq	pointer
->	O
method	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_cseq_free	function
(	O
osip_cseq_t	struct
*	O
cseq	pointer
)	O
{	O
if	O
(	O
cseq	pointer
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
cseq	pointer
->	O
method	pointer
)	O
;	O
osip_free	O
(	O
cseq	pointer
->	O
number	pointer
)	O
;	O
osip_free	O
(	O
cseq	pointer
)	O
;	O
}	O
int	O
osip_cseq_clone	function
(	O
const	O
osip_cseq_t	struct
*	O
cseq	pointer
,	O
osip_cseq_t	struct
*	O
*	O
dest	pointer
)	O
{	O
int	O
i	int
;	O
osip_cseq_t	struct
*	O
cs	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
cseq	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
cseq	pointer
->	O
method	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
cseq	pointer
->	O
number	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_cseq_init	function
(	O
&	O
cs	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_cseq_free	function
(	O
cs	pointer
)	O
;	O
return	O
i	int
;	O
}	O
cs	pointer
->	O
method	pointer
=	O
osip_strdup	function
(	O
cseq	pointer
->	O
method	pointer
)	O
;	O
cs	pointer
->	O
number	pointer
=	O
osip_strdup	function
(	O
cseq	pointer
->	O
number	pointer
)	O
;	O
*	O
dest	pointer
=	O
cs	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_cseq_match	function
(	O
osip_cseq_t	struct
*	O
cseq1	pointer
,	O
osip_cseq_t	struct
*	O
cseq2	pointer
)	O
{	O
if	O
(	O
cseq1	pointer
==	O
NULL	O
||	O
cseq2	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
cseq1	pointer
->	O
number	pointer
==	O
NULL	O
||	O
cseq2	pointer
->	O
number	pointer
==	O
NULL	O
||	O
cseq1	pointer
->	O
method	pointer
==	O
NULL	O
||	O
cseq2	pointer
->	O
method	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
0	int
==	O
strcmp	function
(	O
cseq1	pointer
->	O
number	pointer
,	O
cseq2	pointer
->	O
number	pointer
)	O
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	function
(	O
cseq2	pointer
->	O
method	pointer
,	O
"INVITE"	pointer
)	O
||	O
0	int
==	O
strcmp	function
(	O
cseq2	pointer
->	O
method	pointer
,	O
"ACK"	pointer
)	O
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	function
(	O
cseq1	pointer
->	O
method	pointer
,	O
"INVITE"	pointer
)	O
||	O
0	int
==	O
strcmp	function
(	O
cseq1	pointer
->	O
method	pointer
,	O
"ACK"	pointer
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
{	O
if	O
(	O
0	int
==	O
strcmp	function
(	O
cseq1	pointer
->	O
method	pointer
,	O
cseq2	pointer
->	O
method	pointer
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
}	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
