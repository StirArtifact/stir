static	O
ColorSegment	struct
*	O
CSOverflow	function
(	O
void	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Color Segment pool overflow\n"	pointer
)	O
;	O
return	O
(	O
ColorSegment	struct
*	O
)	O
NULL	O
;	O
}	O
static	O
__inline	O
ColorSegment	struct
*	O
mallocCS	function
(	O
AWindow	struct
*	O
w	pointer
)	O
{	O
switch	O
(	O
w	pointer
->	O
curPool	int
)	O
{	O
case	O
0	int
:	O
return	O
(	O
w	pointer
->	O
CSTop0	int
==	O
w	pointer
->	O
CSSize0	int
)	O
?	O
CSOverflow	function
(	O
)	O
:	O
&	O
(	O
w	pointer
->	O
csPool0	pointer
[	O
(	O
w	pointer
->	O
CSTop0	int
)	O
++	O
]	O
)	O
;	O
case	O
1	int
:	O
return	O
(	O
w	pointer
->	O
CSTop1	int
==	O
w	pointer
->	O
CSSize1	int
)	O
?	O
CSOverflow	function
(	O
)	O
:	O
&	O
(	O
w	pointer
->	O
csPool1	pointer
[	O
(	O
w	pointer
->	O
CSTop1	int
)	O
++	O
]	O
)	O
;	O
case	O
2	int
:	O
return	O
(	O
w	pointer
->	O
CSTop2	int
==	O
w	pointer
->	O
CSSize2	int
)	O
?	O
CSOverflow	function
(	O
)	O
:	O
&	O
(	O
w	pointer
->	O
csPool2	pointer
[	O
(	O
w	pointer
->	O
CSTop2	int
)	O
++	O
]	O
)	O
;	O
}	O
}	O
static	O
__inline	O
void	O
freeLastCS	function
(	O
AWindow	struct
*	O
w	pointer
)	O
{	O
switch	O
(	O
w	pointer
->	O
curPool	int
)	O
{	O
case	O
0	int
:	O
w	pointer
->	O
CSTop0	int
--	O
;	O
break	O
;	O
case	O
1	int
:	O
w	pointer
->	O
CSTop1	int
--	O
;	O
break	O
;	O
case	O
2	int
:	O
w	pointer
->	O
CSTop2	int
--	O
;	O
break	O
;	O
}	O
}	O
void	O
DrawScanLine	function
(	O
AWindow	struct
*	O
w	pointer
,	O
int	O
y	int
,	O
int	O
x0	pointer
,	O
int	O
x1	short
,	O
Color	short
color	short
)	O
{	O
register	O
ColorSegment	struct
*	O
p	pointer
;	O
register	O
int	O
lastx	int
;	O
if	O
(	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
count	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
p	pointer
=	O
mallocCS	function
(	O
w	pointer
)	O
)	O
!=	O
(	O
ColorSegment	struct
*	O
)	O
NULL	O
)	O
{	O
p	pointer
->	O
x	int
=	O
x0	pointer
;	O
p	pointer
->	O
length	int
=	O
x1	short
-	O
x0	pointer
+	O
1	int
;	O
p	pointer
->	O
color	short
=	O
color	short
;	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
head	pointer
=	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
tail	pointer
=	O
p	pointer
;	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
count	int
=	O
1	int
;	O
}	O
}	O
else	O
{	O
p	pointer
=	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
tail	pointer
;	O
lastx	int
=	O
p	pointer
->	O
x	int
+	O
p	pointer
->	O
length	int
-	O
1	int
;	O
if	O
(	O
lastx	int
>=	O
x0	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
color	short
==	O
color	short
)	O
p	pointer
->	O
length	int
=	O
x1	short
-	O
p	pointer
->	O
x	int
+	O
1	int
;	O
else	O
{	O
if	O
(	O
(	O
p	pointer
->	O
length	int
=	O
x0	pointer
-	O
p	pointer
->	O
x	int
)	O
>	O
0	int
)	O
{	O
if	O
(	O
(	O
p	pointer
=	O
mallocCS	function
(	O
w	pointer
)	O
)	O
!=	O
(	O
ColorSegment	struct
*	O
)	O
NULL	O
)	O
{	O
++	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
count	int
;	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
tail	pointer
=	O
p	pointer
;	O
}	O
}	O
if	O
(	O
(	O
(	O
p	pointer
-	O
1	int
)	O
->	O
color	short
==	O
color	short
)	O
&&	O
(	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
count	int
>	O
1	int
)	O
)	O
{	O
freeLastCS	function
(	O
w	pointer
)	O
;	O
p	pointer
=	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
tail	pointer
=	O
p	pointer
-	O
1	int
;	O
--	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
count	int
;	O
p	pointer
->	O
length	int
=	O
x1	short
-	O
p	pointer
->	O
x	int
+	O
1	int
;	O
}	O
else	O
{	O
p	pointer
->	O
x	int
=	O
x0	pointer
;	O
p	pointer
->	O
length	int
=	O
x1	short
-	O
x0	pointer
+	O
1	int
;	O
p	pointer
->	O
color	short
=	O
color	short
;	O
}	O
}	O
}	O
else	O
if	O
(	O
(	O
lastx	int
==	O
x0	pointer
-	O
1	int
)	O
&&	O
(	O
p	pointer
->	O
color	short
==	O
color	short
)	O
)	O
p	pointer
->	O
length	int
=	O
x1	short
-	O
p	pointer
->	O
x	int
+	O
1	int
;	O
else	O
if	O
(	O
(	O
p	pointer
=	O
mallocCS	function
(	O
w	pointer
)	O
)	O
!=	O
(	O
ColorSegment	struct
*	O
)	O
NULL	O
)	O
{	O
++	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
count	int
;	O
w	pointer
->	O
scanLine	pointer
[	O
y	int
]	O
.	O
tail	pointer
=	O
p	pointer
;	O
p	pointer
->	O
x	int
=	O
x0	pointer
;	O
p	pointer
->	O
length	int
=	O
x1	short
-	O
x0	pointer
+	O
1	int
;	O
p	pointer
->	O
color	short
=	O
color	short
;	O
}	O
}	O
}	O
