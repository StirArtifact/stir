static	O
int	O
print_out_key	function
(	O
void	O
*	O
cls	pointer
,	O
enum	O
MHD_ValueKind	enum
kind	enum
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
value	long
)	O
{	O
(	O
void	O
)	O
cls	pointer
;	O
(	O
void	O
)	O
kind	enum
;	O
printf	function
(	O
"%s: %s\n"	pointer
,	O
key	pointer
,	O
value	long
)	O
;	O
return	O
MHD_YES	int
;	O
}	O
static	O
int	O
answer_to_connection	function
(	O
void	O
*	O
cls	pointer
,	O
struct	O
MHD_Connection	O
*	O
connection	pointer
,	O
const	O
char	O
*	O
url	pointer
,	O
const	O
char	O
*	O
method	pointer
,	O
const	O
char	O
*	O
version	pointer
,	O
const	O
char	O
*	O
upload_data	pointer
,	O
size_t	long
*	O
upload_data_size	pointer
,	O
void	O
*	O
*	O
con_cls	pointer
)	O
{	O
(	O
void	O
)	O
cls	pointer
;	O
(	O
void	O
)	O
version	pointer
;	O
(	O
void	O
)	O
upload_data	pointer
;	O
(	O
void	O
)	O
upload_data_size	pointer
;	O
(	O
void	O
)	O
con_cls	pointer
;	O
printf	function
(	O
"New %s request for %s using version %s\n"	pointer
,	O
method	pointer
,	O
url	pointer
,	O
version	pointer
)	O
;	O
MHD_get_connection_values	function
(	O
connection	pointer
,	O
MHD_HEADER_KIND	int
,	O
print_out_key	function
,	O
NULL	O
)	O
;	O
return	O
MHD_NO	int
;	O
}	O
int	O
main	function
(	O
)	O
{	O
struct	O
MHD_Daemon	O
*	O
daemon	function
;	O
daemon	function
=	O
MHD_start_daemon	function
(	O
MHD_USE_INTERNAL_POLLING_THREAD	int
,	O
PORT	int
,	O
NULL	O
,	O
NULL	O
,	O
&	O
answer_to_connection	function
,	O
NULL	O
,	O
MHD_OPTION_END	int
)	O
;	O
if	O
(	O
NULL	O
==	O
daemon	function
)	O
return	O
1	int
;	O
(	O
void	O
)	O
getchar	function
(	O
)	O
;	O
MHD_stop_daemon	function
(	O
daemon	function
)	O
;	O
return	O
0	int
;	O
}	O
