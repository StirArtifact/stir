extern	O
Suser	struct
user	struct
;	O
extern	O
Sworld	struct
world	struct
;	O
extern	O
struct	O
race_list	struct
*	O
races	pointer
;	O
extern	O
char	O
libdir	array
[	O
]	O
;	O
extern	O
int	O
euid	int
,	O
ruid	int
;	O
extern	O
char	O
help_tag	array
[	O
]	O
;	O
extern	O
int	O
timeout_secs	int
,	O
slow_flag	int
;	O
extern	O
void	O
interrupt	function
(	O
)	O
,	O
alarm_interrupt	function
(	O
)	O
;	O
extern	O
int	O
debug	int
;	O
extern	O
int	O
(	O
*	O
keymap	array
[	O
128	int
]	O
)	O
(	O
)	O
;	O
extern	O
char	O
*	O
get_update_time	function
(	O
)	O
,	O
*	O
update_time	pointer
;	O
int	O
old_umask	int
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
c	char
;	O
int	O
innation	int
=	O
0	int
;	O
char	O
nation	array
[	O
NAMELEN	int
]	O
;	O
extern	O
char	O
*	O
optarg	pointer
;	O
extern	O
int	O
optind	int
;	O
extern	O
char	O
*	O
current_dir	pointer
,	O
*	O
getcwd	function
(	O
)	O
;	O
strcpy	function
(	O
help_tag	array
,	O
"Top"	pointer
)	O
;	O
ruid	int
=	O
getuid	function
(	O
)	O
;	O
euid	int
=	O
geteuid	function
(	O
)	O
;	O
old_umask	int
=	O
umask	function
(	O
077	int
)	O
;	O
current_dir	pointer
=	O
getcwd	function
(	O
NULL	O
,	O
PATHLEN	int
)	O
;	O
strcpy	function
(	O
libdir	array
,	O
DEF_LIBDIR	O
)	O
;	O
user	struct
.	O
xmode	int
=	O
0	int
;	O
while	O
(	O
(	O
c	char
=	O
getopt	function
(	O
argc	int
,	O
argv	array
,	O
"xn:d:vphcts--"	pointer
)	O
)	O
!=	O
EOF	O
)	O
switch	O
(	O
c	char
)	O
{	O
case	O
'x'	O
:	O
debug	int
=	O
1	int
;	O
break	O
;	O
case	O
'n'	O
:	O
innation	int
=	O
1	int
;	O
strcpy	function
(	O
nation	array
,	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
break	O
;	O
case	O
'd'	O
:	O
strcpy	function
(	O
libdir	array
,	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
chdir	function
(	O
libdir	array
)	O
;	O
init_screen	function
(	O
)	O
;	O
online_info	function
(	O
)	O
;	O
resetty	function
(	O
)	O
;	O
endwin	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
case	O
'p'	O
:	O
printf	function
(	O
"Dominion, version %s; prefix is\n%s\n\n"	pointer
,	O
VERSION	pointer
,	O
PREFIX	O
)	O
;	O
chdir	function
(	O
libdir	array
)	O
;	O
read_races	function
(	O
)	O
;	O
read_world	function
(	O
&	O
world	struct
,	O
WORLD_FILE	pointer
)	O
;	O
load_master_execs	function
(	O
)	O
;	O
print_nations	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
case	O
'c'	O
:	O
chdir	function
(	O
libdir	array
)	O
;	O
printf	function
(	O
"Last update at %s\n"	pointer
,	O
get_update_time	function
(	O
)	O
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
case	O
't'	O
:	O
timeout_secs	int
=	O
TIMEOUT_SECS	O
;	O
break	O
;	O
case	O
's'	O
:	O
slow_flag	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
usageerr	function
(	O
argc	int
,	O
argv	array
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
chdir	function
(	O
libdir	array
)	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Error: cannot cd to directory %s\n"	pointer
,	O
libdir	array
)	O
;	O
clean_exit	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
update_time	pointer
=	O
get_update_time	function
(	O
)	O
;	O
init	function
(	O
)	O
;	O
init_user	function
(	O
innation	int
,	O
nation	array
)	O
;	O
init_keymap	function
(	O
)	O
;	O
init_screen	function
(	O
)	O
;	O
noncritical	function
(	O
)	O
;	O
intro	function
(	O
&	O
world	struct
,	O
user	struct
.	O
np	pointer
)	O
;	O
main_loop	function
(	O
)	O
;	O
cleanup	function
(	O
)	O
;	O
clean_exit	function
(	O
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
void	O
init	function
(	O
)	O
{	O
extern	O
Sdiplo	struct
*	O
*	O
allocate_diplo	function
(	O
)	O
;	O
printf	function
(	O
"Initializing...\r\n"	pointer
)	O
;	O
if	O
(	O
is_master_lock	function
(	O
)	O
)	O
{	O
printf	function
(	O
"There is a master lock file.  You cannot play right now.\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
SRND	O
(	O
time	function
(	O
0L	int
)	O
)	O
;	O
read_races	function
(	O
)	O
;	O
read_world	function
(	O
&	O
world	struct
,	O
WORLD_FILE	pointer
)	O
;	O
initial_diplo	pointer
=	O
allocate_diplo	function
(	O
world	struct
.	O
n_nations	int
)	O
;	O
read_initial_diplo	function
(	O
initial_diplo	pointer
,	O
world	struct
.	O
n_nations	int
)	O
;	O
}	O
void	O
main_loop	function
(	O
)	O
{	O
char	O
c	char
;	O
char	O
s	array
[	O
80	int
]	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
sprintf	function
(	O
s	array
,	O
"Nation %s; money %d; Thon %d;   type %c for help"	pointer
,	O
user	struct
.	O
np	pointer
->	O
name	array
,	O
user	struct
.	O
np	pointer
->	O
money	int
,	O
world	struct
.	O
turn	int
,	O
user	struct
.	O
help_char	char
)	O
;	O
statline	function
(	O
s	array
,	O
"draw_map_regular"	pointer
)	O
;	O
if	O
(	O
user	struct
.	O
just_moved	int
)	O
{	O
draw_map	function
(	O
)	O
;	O
user	struct
.	O
just_moved	int
=	O
0	int
;	O
}	O
set_cursor	function
(	O
)	O
;	O
c	char
=	O
to_getch	function
(	O
)	O
;	O
(	O
*	O
keymap	array
[	O
c	char
%	O
128	int
]	O
)	O
(	O
)	O
;	O
(	O
void	O
)	O
re_center	function
(	O
user	struct
.	O
cursor	struct
.	O
x	int
,	O
user	struct
.	O
cursor	struct
.	O
y	int
)	O
;	O
if	O
(	O
user	struct
.	O
just_moved	int
)	O
{	O
wrap	function
(	O
&	O
user	struct
.	O
cursor	struct
)	O
;	O
if	O
(	O
!	O
army_is_in_sector	function
(	O
&	O
world	struct
.	O
map	pointer
[	O
user	struct
.	O
cursor	struct
.	O
x	int
]	O
[	O
user	struct
.	O
cursor	struct
.	O
y	int
]	O
,	O
user	struct
.	O
id	short
,	O
user	struct
.	O
current_army	int
)	O
)	O
{	O
user	struct
.	O
current_army	int
=	O
first_sect_army	function
(	O
&	O
world	struct
.	O
map	pointer
[	O
user	struct
.	O
cursor	struct
.	O
x	int
]	O
[	O
user	struct
.	O
cursor	struct
.	O
y	int
]	O
)	O
;	O
}	O
}	O
}	O
}	O
void	O
cleanup	function
(	O
)	O
{	O
statline	function
(	O
""	pointer
,	O
"cleanup"	pointer
)	O
;	O
resetty	function
(	O
)	O
;	O
endwin	function
(	O
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
gen_exec	function
(	O
NULL	O
)	O
;	O
}	O
void	O
clean_exit	function
(	O
)	O
{	O
extern	O
int	O
is_in_diplo	int
;	O
if	O
(	O
is_in_diplo	int
)	O
{	O
unlink	function
(	O
"DIPLOCK"	pointer
)	O
;	O
}	O
del_lock	function
(	O
user	struct
.	O
id	short
)	O
;	O
umask	function
(	O
old_umask	int
)	O
;	O
}	O
void	O
critical	function
(	O
)	O
{	O
signal	function
(	O
SIGINT	int
,	O
SIG_IGN	O
)	O
;	O
signal	function
(	O
SIGQUIT	int
,	O
SIG_IGN	O
)	O
;	O
signal	function
(	O
SIGHUP	int
,	O
SIG_IGN	O
)	O
;	O
signal	function
(	O
SIGALRM	int
,	O
SIG_IGN	O
)	O
;	O
signal	function
(	O
SIGTSTP	int
,	O
SIG_IGN	O
)	O
;	O
}	O
void	O
noncritical	function
(	O
)	O
{	O
signal	function
(	O
SIGINT	int
,	O
interrupt	function
)	O
;	O
signal	function
(	O
SIGQUIT	int
,	O
interrupt	function
)	O
;	O
signal	function
(	O
SIGHUP	int
,	O
interrupt	function
)	O
;	O
signal	function
(	O
SIGALRM	int
,	O
alarm_interrupt	function
)	O
;	O
signal	function
(	O
SIGTSTP	int
,	O
interrupt	function
)	O
;	O
}	O
void	O
print_nations	function
(	O
)	O
{	O
int	O
i	int
;	O
Snation	struct
*	O
np	pointer
;	O
printf	function
(	O
"%s %-14s[%s]    %-15s %-10s\n"	pointer
,	O
"Id"	pointer
,	O
"Name"	pointer
,	O
"mark"	pointer
,	O
"Leader"	pointer
,	O
"Race"	pointer
)	O
;	O
printf	function
(	O
"----------------------------------------------------------------------\n"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
world	struct
.	O
n_nations	int
;	O
++	O
i	int
)	O
{	O
np	pointer
=	O
&	O
world	struct
.	O
nations	pointer
[	O
i	int
]	O
;	O
printf	function
(	O
"%2d %-15s [%c]     %-15s %-10s %-10s %-5s\n"	pointer
,	O
i	int
,	O
np	pointer
->	O
name	array
,	O
np	pointer
->	O
mark	char
,	O
np	pointer
->	O
leader	array
,	O
np	pointer
->	O
race	struct
.	O
name	array
,	O
is_active_ntn	function
(	O
np	pointer
)	O
?	O
""	pointer
:	O
"DESTROYED"	pointer
,	O
np	pointer
->	O
cn_flag	int
?	O
"cn"	pointer
:	O
""	pointer
)	O
;	O
}	O
}	O
