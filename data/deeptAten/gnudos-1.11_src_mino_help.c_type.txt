void	O
showAboutBox	function
(	O
)	O
{	O
msgBox	function
(	O
copyrightNotice	pointer
,	O
OK	int
,	O
INFO	int
)	O
;	O
}	O
void	O
showQuickReference	function
(	O
)	O
{	O
drawBox	function
(	O
3	int
,	O
5	int
,	O
24	int
,	O
SCREEN_W	int
-	O
5	int
,	O
"Quick Reference"	pointer
,	O
YES	int
,	O
0	int
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[4;7HBasic functions:"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[5;9HArrow keys: move around"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[6;9HALT+F: Open File menu"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[7;9HALT+E: Open Edit menu"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[8;9HALT+O: Open Options menu"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[9;9HALT+H: Open Help menu"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[11;7HShortcut keys:"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[12;9HCTRL+O: Open file dialog"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[13;9HCTRL+S: Save file"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[14;9HCTRL+Q: Exit mino"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[15;9HCTRL+X: Cut selection"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[16;9HCTRL+C: Copy selection"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[17;9HCTRL+V: Paste selection"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[18;9HCTRL+Z: Undo"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[19;9HCTRL+Y: Redo"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[20;9HCTRL+A: Select All"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[21;9HCTRL+F: Find"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[22;9HCTRL+R: Find & Replace"	pointer
)	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[23;7HPress any key to continue.."	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
do	O
{	O
;	O
}	O
while	O
(	O
!	O
getKey	function
(	O
)	O
)	O
;	O
}	O
void	O
_do_show	function
(	O
int	O
readme_keybindings	int
)	O
{	O
FILE	struct
*	O
README	pointer
;	O
char	O
*	O
buf	pointer
;	O
long	O
buf_len	long
=	O
0	int
;	O
char	O
*	O
file_name	array
[	O
]	O
=	O
{	O
"/usr/share/doc/gnudos/mino/README"	pointer
,	O
"/usr/local/share/doc/gnudos/mino/README"	pointer
,	O
"/usr/share/doc/gnudos/mino/keybindings"	pointer
,	O
"/usr/local/share/doc/gnudos/mino/keybindings"	pointer
}	O
;	O
char	O
*	O
title	pointer
[	O
]	O
=	O
{	O
" README "	pointer
,	O
" KEYBINDINGS "	pointer
}	O
;	O
char	O
*	O
err	array
[	O
]	O
=	O
{	O
"Failed to read the README file!."	pointer
,	O
"Failed to read the KEYBINDINGS file!."	pointer
}	O
;	O
char	O
*	O
file1	pointer
=	O
readme_keybindings	int
?	O
file_name	array
[	O
2	int
]	O
:	O
file_name	array
[	O
0	int
]	O
;	O
char	O
*	O
file2	pointer
=	O
readme_keybindings	int
?	O
file_name	array
[	O
3	int
]	O
:	O
file_name	array
[	O
1	int
]	O
;	O
if	O
(	O
!	O
(	O
README	pointer
=	O
fopen	function
(	O
file1	pointer
,	O
"r"	pointer
)	O
)	O
)	O
{	O
if	O
(	O
!	O
(	O
README	pointer
=	O
fopen	function
(	O
file2	pointer
,	O
"r"	pointer
)	O
)	O
)	O
{	O
msgBox	function
(	O
err	array
[	O
readme_keybindings	int
]	O
,	O
OK	int
,	O
ERROR	int
)	O
;	O
refreshView	function
(	O
)	O
;	O
return	O
;	O
}	O
}	O
int	O
i	int
;	O
i	int
=	O
fseek	function
(	O
README	pointer
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
buf_len	long
=	O
ftell	function
(	O
README	pointer
)	O
;	O
rewind	function
(	O
README	pointer
)	O
;	O
if	O
(	O
i	int
==	O
-	O
1	int
||	O
buf_len	long
==	O
-	O
1	int
)	O
goto	O
return_err	O
;	O
buf_len	long
+=	O
512	int
;	O
buf	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
buf_len	long
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
goto	O
return_err	O
;	O
int	O
x	int
=	O
3	int
;	O
int	O
y	int
=	O
3	int
;	O
int	O
w	int
=	O
SCREEN_W	int
-	O
4	int
;	O
int	O
h	int
=	O
SCREEN_H	int
-	O
5	int
;	O
i	int
=	O
0	int
;	O
int	O
firstVisLine	int
=	O
0	int
;	O
char	O
moreLines	char
=	O
1	int
;	O
int	O
index	int
=	O
0	int
;	O
int	O
inc	int
;	O
long	O
total_lines	long
=	O
0	int
;	O
long	O
first_char	long
=	O
0	int
;	O
while	O
(	O
(	O
inc	int
=	O
fgetc	function
(	O
README	pointer
)	O
)	O
!=	O
EOF	O
)	O
{	O
buf	pointer
[	O
index	int
++	O
]	O
=	O
inc	int
;	O
if	O
(	O
inc	int
==	O
'\n'	O
)	O
{	O
i	int
=	O
0	int
;	O
total_lines	long
++	O
;	O
}	O
else	O
i	int
++	O
;	O
if	O
(	O
i	int
==	O
w	int
)	O
{	O
buf	pointer
[	O
index	int
++	O
]	O
=	O
'\n'	O
;	O
buf_len	long
++	O
;	O
total_lines	long
++	O
;	O
i	int
=	O
0	int
;	O
}	O
buf_len	long
++	O
;	O
}	O
if	O
(	O
!	O
total_lines	long
)	O
{	O
if	O
(	O
index	int
)	O
total_lines	long
=	O
1	int
;	O
else	O
goto	O
return_err	O
;	O
}	O
if	O
(	O
total_lines	long
<	O
h	int
)	O
moreLines	char
=	O
0	int
;	O
else	O
moreLines	char
=	O
1	int
;	O
firstVisLine	int
=	O
0	int
;	O
first_char	long
=	O
0	int
;	O
int	O
lines	array
;	O
read	O
:	O
drawBox	function
(	O
x	int
-	O
1	int
,	O
y	int
-	O
1	int
,	O
h	int
+	O
x	int
,	O
w	int
+	O
y	int
,	O
title	pointer
[	O
readme_keybindings	int
]	O
,	O
YES	int
,	O
0	int
)	O
;	O
lines	array
=	O
0	int
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[%d;%dH"	pointer
,	O
x	int
,	O
y	int
)	O
;	O
i	int
=	O
first_char	long
;	O
while	O
(	O
i	int
<	O
buf_len	long
)	O
{	O
if	O
(	O
buf	pointer
[	O
i	int
]	O
==	O
'\n'	O
)	O
{	O
lines	array
++	O
;	O
fprintf	function
(	O
stdout	pointer
,	O
"\e[%d;%dH"	pointer
,	O
x	int
+	O
lines	array
,	O
y	int
)	O
;	O
if	O
(	O
lines	array
>=	O
h	int
)	O
break	O
;	O
}	O
else	O
putchar	function
(	O
buf	pointer
[	O
i	int
]	O
)	O
;	O
i	int
++	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
}	O
if	O
(	O
firstVisLine	int
+	O
lines	array
<	O
total_lines	long
)	O
moreLines	char
=	O
1	int
;	O
else	O
moreLines	char
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
char	O
*	O
ch	pointer
=	O
getKey	function
(	O
)	O
;	O
switch	O
(	O
ch	pointer
[	O
0	int
]	O
)	O
{	O
case	O
(	O
'g'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
<	O
3	int
)	O
break	O
;	O
if	O
(	O
!	O
CTRL	int
)	O
break	O
;	O
goto	O
do_esc	O
;	O
case	O
(	O
ESC_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
)	O
break	O
;	O
do_esc	O
:	O
case	O
(	O
ENTER_KEY	int
)	O
:	O
case	O
(	O
SPACE_KEY	int
)	O
:	O
goto	O
end	int
;	O
break	O
;	O
case	O
(	O
'p'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
<	O
2	int
)	O
break	O
;	O
if	O
(	O
!	O
CTRL	int
)	O
break	O
;	O
goto	O
do_up	O
;	O
case	O
(	O
UP_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
break	O
;	O
do_up	O
:	O
if	O
(	O
firstVisLine	int
==	O
0	int
)	O
break	O
;	O
i	int
=	O
first_char	long
-	O
1	int
;	O
while	O
(	O
i	int
>=	O
0	int
)	O
{	O
i	int
--	O
;	O
if	O
(	O
buf	pointer
[	O
i	int
]	O
==	O
'\n'	O
)	O
break	O
;	O
}	O
i	int
++	O
;	O
first_char	long
=	O
i	int
;	O
firstVisLine	int
--	O
;	O
goto	O
read	O
;	O
break	O
;	O
case	O
(	O
'n'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
<	O
2	int
)	O
break	O
;	O
if	O
(	O
!	O
CTRL	int
)	O
break	O
;	O
goto	O
do_down	O
;	O
case	O
(	O
DOWN_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
break	O
;	O
do_down	O
:	O
if	O
(	O
!	O
moreLines	char
)	O
break	O
;	O
i	int
=	O
first_char	long
;	O
while	O
(	O
i	int
<	O
buf_len	long
)	O
{	O
if	O
(	O
buf	pointer
[	O
i	int
]	O
==	O
'\n'	O
||	O
buf	pointer
[	O
i	int
]	O
==	O
'\0'	O
)	O
break	O
;	O
i	int
++	O
;	O
}	O
if	O
(	O
i	int
<	O
buf_len	long
)	O
i	int
++	O
;	O
first_char	long
=	O
i	int
;	O
firstVisLine	int
++	O
;	O
goto	O
read	O
;	O
break	O
;	O
}	O
}	O
end	int
:	O
fclose	function
(	O
README	pointer
)	O
;	O
drawBox	function
(	O
2	int
,	O
1	int
,	O
SCREEN_H	int
-	O
1	int
,	O
SCREEN_W	int
,	O
documentTitle	pointer
,	O
YES	int
,	O
0	int
)	O
;	O
refreshView	function
(	O
)	O
;	O
return	O
;	O
return_err	O
:	O
fclose	function
(	O
README	pointer
)	O
;	O
msgBox	function
(	O
err	array
[	O
readme_keybindings	int
]	O
,	O
OK	int
,	O
ERROR	int
)	O
;	O
refreshView	function
(	O
)	O
;	O
return	O
;	O
}	O
void	O
showKeybindings	function
(	O
)	O
{	O
_do_show	function
(	O
1	int
)	O
;	O
}	O
void	O
showReadMe	function
(	O
)	O
{	O
_do_show	function
(	O
0	int
)	O
;	O
}	O
