char	O
*	O
program_name	pointer
;	O
int	O
debugging_enabled	int
=	O
0	int
;	O
void	O
give_usage	function
(	O
void	O
)	O
{	O
printf	function
(	O
"Usage: %s [-hrR] [-n <recs>] <files>\n          [--num <recs>] [--raw] [--reverse] [--help]\n"	pointer
,	O
program_name	pointer
)	O
;	O
print_wtmp_file_location	function
(	O
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
c	int
;	O
int	O
backwards_flag	int
=	O
0	int
;	O
long	O
num_lines_to_print	long
=	O
-	O
1	int
;	O
int	O
raw	int
=	O
0	int
;	O
program_name	pointer
=	O
argv	array
[	O
0	int
]	O
;	O
while	O
(	O
1	int
)	O
{	O
int	O
option_index	int
=	O
0	int
;	O
static	O
struct	O
option	struct
long_options	array
[	O
]	O
=	O
{	O
{	O
"reverse"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
"num"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
3	int
}	O
,	O
{	O
"raw"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
4	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
}	O
;	O
c	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	array
,	O
"rhn:R"	pointer
,	O
long_options	array
,	O
&	O
option_index	int
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
break	O
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
'r'	O
:	O
case	O
1	int
:	O
backwards_flag	int
=	O
1	int
;	O
break	O
;	O
case	O
'h'	O
:	O
case	O
2	int
:	O
give_usage	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
case	O
'n'	O
:	O
case	O
3	int
:	O
num_lines_to_print	long
=	O
strtol	function
(	O
optarg	pointer
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
num_lines_to_print	long
<	O
1	int
)	O
fatal	function
(	O
"number of lines to print must be positive and non-zero"	pointer
)	O
;	O
break	O
;	O
case	O
'R'	O
:	O
case	O
4	int
:	O
raw	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
optind	int
>=	O
argc	int
)	O
{	O
give_usage	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
utmp_init	function
(	O
backwards_flag	int
)	O
;	O
while	O
(	O
optind	int
<	O
argc	int
)	O
add_utmp_file	function
(	O
argv	array
[	O
optind	int
++	O
]	O
)	O
;	O
{	O
struct	O
utmp	struct
*	O
rec	pointer
;	O
while	O
(	O
(	O
rec	pointer
=	O
utmp_get_entry	function
(	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
raw	int
)	O
(	O
void	O
)	O
fwrite	function
(	O
rec	pointer
,	O
sizeof	O
(	O
struct	O
utmp	struct
)	O
,	O
1	int
,	O
stdout	pointer
)	O
;	O
else	O
print_utmp_record	function
(	O
rec	pointer
,	O
stdout	pointer
)	O
;	O
if	O
(	O
num_lines_to_print	long
>	O
-	O
1	int
)	O
{	O
num_lines_to_print	long
--	O
;	O
if	O
(	O
num_lines_to_print	long
==	O
0	int
)	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
}	O
}	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
