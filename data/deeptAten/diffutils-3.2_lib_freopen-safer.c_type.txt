static	O
bool	bool
protect_fd	function
(	O
int	O
fd	int
)	O
{	O
int	O
value	int
=	O
open	function
(	O
"/dev/null"	pointer
,	O
O_RDONLY	int
)	O
;	O
if	O
(	O
value	int
!=	O
fd	int
)	O
{	O
if	O
(	O
0	int
<=	O
value	int
)	O
{	O
close	pointer
(	O
value	int
)	O
;	O
errno	O
=	O
EBADF	int
;	O
}	O
return	O
false	int
;	O
}	O
return	O
true	int
;	O
}	O
FILE	struct
*	O
freopen_safer	function
(	O
char	O
const	O
*	O
name	pointer
,	O
char	O
const	O
*	O
mode	pointer
,	O
FILE	struct
*	O
f	pointer
)	O
{	O
bool	bool
protect_in	bool
=	O
false	int
;	O
bool	bool
protect_out	bool
=	O
false	int
;	O
bool	bool
protect_err	bool
=	O
false	int
;	O
int	O
saved_errno	int
;	O
switch	O
(	O
fileno	function
(	O
f	pointer
)	O
)	O
{	O
default	O
:	O
if	O
(	O
dup2	function
(	O
STDERR_FILENO	int
,	O
STDERR_FILENO	int
)	O
!=	O
STDERR_FILENO	int
)	O
protect_err	bool
=	O
true	int
;	O
case	O
STDERR_FILENO	int
:	O
if	O
(	O
dup2	function
(	O
STDOUT_FILENO	int
,	O
STDOUT_FILENO	int
)	O
!=	O
STDOUT_FILENO	int
)	O
protect_out	bool
=	O
true	int
;	O
case	O
STDOUT_FILENO	int
:	O
if	O
(	O
dup2	function
(	O
STDIN_FILENO	int
,	O
STDIN_FILENO	int
)	O
!=	O
STDIN_FILENO	int
)	O
protect_in	bool
=	O
true	int
;	O
case	O
STDIN_FILENO	int
:	O
break	O
;	O
}	O
if	O
(	O
protect_in	bool
&&	O
!	O
protect_fd	function
(	O
STDIN_FILENO	int
)	O
)	O
f	pointer
=	O
NULL	O
;	O
else	O
if	O
(	O
protect_out	bool
&&	O
!	O
protect_fd	function
(	O
STDOUT_FILENO	int
)	O
)	O
f	pointer
=	O
NULL	O
;	O
else	O
if	O
(	O
protect_err	bool
&&	O
!	O
protect_fd	function
(	O
STDERR_FILENO	int
)	O
)	O
f	pointer
=	O
NULL	O
;	O
else	O
f	pointer
=	O
freopen	function
(	O
name	pointer
,	O
mode	pointer
,	O
f	pointer
)	O
;	O
saved_errno	int
=	O
errno	O
;	O
if	O
(	O
protect_err	bool
)	O
close	pointer
(	O
STDERR_FILENO	int
)	O
;	O
if	O
(	O
protect_out	bool
)	O
close	pointer
(	O
STDOUT_FILENO	int
)	O
;	O
if	O
(	O
protect_in	bool
)	O
close	pointer
(	O
STDIN_FILENO	int
)	O
;	O
if	O
(	O
!	O
f	pointer
)	O
errno	O
=	O
saved_errno	int
;	O
return	O
f	pointer
;	O
}	O
