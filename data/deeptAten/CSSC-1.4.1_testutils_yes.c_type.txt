unsigned	O
long	O
total_len	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
unsigned	O
long	O
l	long
=	O
0u	int
;	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
++	O
i	int
)	O
l	long
+=	O
strlen	function
(	O
argv	array
[	O
i	int
]	O
)	O
;	O
return	O
l	long
;	O
}	O
void	O
concat	function
(	O
char	O
*	O
buf	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
i	int
;	O
buf	pointer
[	O
0	int
]	O
=	O
'\0'	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
++	O
i	int
)	O
strcat	function
(	O
buf	pointer
,	O
argv	array
[	O
i	int
]	O
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
char	O
*	O
msg	pointer
;	O
unsigned	O
long	O
l	long
;	O
signal	function
(	O
SIGPIPE	int
,	O
SIG_DFL	O
)	O
;	O
argv	array
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
>	O
0	int
)	O
{	O
l	long
=	O
total_len	function
(	O
argc	int
,	O
argv	array
)	O
;	O
msg	pointer
=	O
malloc	function
(	O
l	long
+	O
1u	int
)	O
;	O
if	O
(	O
NULL	O
==	O
msg	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Ran out of memory.\n"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
concat	function
(	O
msg	pointer
,	O
argc	int
,	O
argv	array
)	O
;	O
for	O
(	O
;	O
;	O
)	O
puts	function
(	O
msg	pointer
)	O
;	O
}	O
else	O
{	O
for	O
(	O
;	O
;	O
)	O
puts	function
(	O
"yes"	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
