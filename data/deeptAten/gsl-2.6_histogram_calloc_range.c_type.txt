gsl_histogram	struct
*	O
gsl_histogram_calloc_range	function
(	O
size_t	long
n	long
,	O
double	O
*	O
range	pointer
)	O
{	O
size_t	long
i	pointer
;	O
gsl_histogram	struct
*	O
h	pointer
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"histogram length n must be positive integer"	pointer
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
if	O
(	O
range	pointer
[	O
i	pointer
]	O
>=	O
range	pointer
[	O
i	pointer
+	O
1	int
]	O
)	O
{	O
GSL_ERROR_VAL	O
(	O
"histogram bin extremes  must be "	pointer
"in increasing order"	pointer
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
}	O
h	pointer
=	O
(	O
gsl_histogram	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_histogram	struct
)	O
)	O
;	O
if	O
(	O
h	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram struct"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
h	pointer
->	O
range	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
n	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
h	pointer
->	O
range	pointer
==	O
0	int
)	O
{	O
free	function
(	O
h	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram ranges"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
h	pointer
->	O
bin	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
n	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
h	pointer
->	O
bin	pointer
==	O
0	int
)	O
{	O
free	function
(	O
h	pointer
->	O
range	pointer
)	O
;	O
free	function
(	O
h	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram bins"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<=	O
n	long
;	O
i	pointer
++	O
)	O
{	O
h	pointer
->	O
range	pointer
[	O
i	pointer
]	O
=	O
range	pointer
[	O
i	pointer
]	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
h	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
=	O
0	int
;	O
}	O
h	pointer
->	O
n	long
=	O
n	long
;	O
return	O
h	pointer
;	O
}	O
