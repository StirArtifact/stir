static	O
void	O
print_param	function
(	O
const	O
char	O
*	O
prefix	array
,	O
mu_assoc_t	pointer
assoc	pointer
,	O
int	O
indent	int
)	O
{	O
mu_iterator_t	pointer
itr	pointer
;	O
int	O
i	long
;	O
mu_printf	function
(	O
"%*s%s:\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
prefix	array
)	O
;	O
if	O
(	O
!	O
assoc	pointer
)	O
return	O
;	O
indent	int
+=	O
4	int
;	O
MU_ASSERT	O
(	O
mu_assoc_get_iterator	function
(	O
assoc	pointer
,	O
&	O
itr	pointer
)	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
,	O
mu_iterator_first	function
(	O
itr	pointer
)	O
;	O
!	O
mu_iterator_is_done	function
(	O
itr	pointer
)	O
;	O
i	long
++	O
,	O
mu_iterator_next	function
(	O
itr	pointer
)	O
)	O
{	O
const	O
char	O
*	O
name	pointer
;	O
struct	O
mu_mime_param	struct
*	O
p	pointer
;	O
mu_iterator_current_kv	function
(	O
itr	pointer
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
name	pointer
,	O
(	O
void	O
*	O
*	O
)	O
&	O
p	pointer
)	O
;	O
mu_printf	function
(	O
"%*s%d: %s=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
i	long
,	O
name	pointer
,	O
p	pointer
->	O
value	pointer
)	O
;	O
}	O
mu_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
}	O
struct	O
print_data	struct
{	O
int	O
num	long
;	O
int	O
level	int
;	O
}	O
;	O
static	O
void	O
print_bs	function
(	O
struct	O
mu_bodystructure	struct
*	O
bs	pointer
,	O
int	O
level	int
)	O
;	O
static	O
int	O
print_item	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
mu_bodystructure	struct
*	O
bs	pointer
=	O
item	pointer
;	O
struct	O
print_data	struct
*	O
pd	pointer
=	O
data	pointer
;	O
mu_printf	function
(	O
"%*sPart #%d\n"	pointer
,	O
(	O
pd	pointer
->	O
level	int
-	O
1	int
)	O
<<	O
2	int
,	O
""	pointer
,	O
pd	pointer
->	O
num	long
)	O
;	O
print_bs	function
(	O
bs	pointer
,	O
pd	pointer
->	O
level	int
)	O
;	O
++	O
pd	pointer
->	O
num	long
;	O
return	O
0	int
;	O
}	O
static	O
void	O
print_address	function
(	O
const	O
char	O
*	O
title	pointer
,	O
mu_address_t	pointer
addr	int
,	O
int	O
indent	int
)	O
{	O
mu_printf	function
(	O
"%*s%s: "	pointer
,	O
indent	int
,	O
""	pointer
,	O
title	pointer
)	O
;	O
mu_stream_format_address	function
(	O
mu_strout	pointer
,	O
addr	int
)	O
;	O
mu_printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
static	O
void	O
print_imapenvelope	function
(	O
struct	O
mu_imapenvelope	struct
*	O
env	pointer
,	O
int	O
level	int
)	O
{	O
int	O
indent	int
=	O
(	O
level	int
<<	O
2	int
)	O
;	O
mu_printf	function
(	O
"%*sEnvelope:\n"	pointer
,	O
indent	int
,	O
""	pointer
)	O
;	O
indent	int
+=	O
4	int
;	O
mu_printf	function
(	O
"%*sTime: "	pointer
,	O
indent	int
,	O
""	pointer
)	O
;	O
mu_c_streamftime	function
(	O
mu_strout	pointer
,	O
"%c%n"	pointer
,	O
&	O
env	pointer
->	O
date	struct
,	O
&	O
env	pointer
->	O
tz	pointer
)	O
;	O
mu_printf	function
(	O
"%*sSubject: %s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
env	pointer
->	O
subject	pointer
)	O
)	O
;	O
print_address	function
(	O
"From"	pointer
,	O
env	pointer
->	O
from	pointer
,	O
indent	int
)	O
;	O
print_address	function
(	O
"Sender"	pointer
,	O
env	pointer
->	O
sender	pointer
,	O
indent	int
)	O
;	O
print_address	function
(	O
"Reply-to"	pointer
,	O
env	pointer
->	O
reply_to	pointer
,	O
indent	int
)	O
;	O
print_address	function
(	O
"To"	pointer
,	O
env	pointer
->	O
to	pointer
,	O
indent	int
)	O
;	O
print_address	function
(	O
"Cc"	pointer
,	O
env	pointer
->	O
cc	pointer
,	O
indent	int
)	O
;	O
print_address	function
(	O
"Bcc"	pointer
,	O
env	pointer
->	O
bcc	pointer
,	O
indent	int
)	O
;	O
mu_printf	function
(	O
"%*sIn-Reply-To: %s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
env	pointer
->	O
in_reply_to	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sMessage-ID: %s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
env	pointer
->	O
message_id	pointer
)	O
)	O
;	O
}	O
static	O
void	O
print_bs	function
(	O
struct	O
mu_bodystructure	struct
*	O
bs	pointer
,	O
int	O
level	int
)	O
{	O
int	O
indent	int
=	O
level	int
<<	O
2	int
;	O
mu_printf	function
(	O
"%*sbody_type=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_type	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sbody_subtype=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_subtype	pointer
)	O
)	O
;	O
print_param	function
(	O
"Parameters"	pointer
,	O
bs	pointer
->	O
body_param	pointer
,	O
indent	int
)	O
;	O
mu_printf	function
(	O
"%*sbody_id=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_id	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sbody_descr=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_descr	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sbody_encoding=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_encoding	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sbody_size=%lu\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
(	O
unsigned	O
long	O
)	O
bs	pointer
->	O
body_size	long
)	O
;	O
mu_printf	function
(	O
"%*sbody_md5=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_md5	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sbody_disposition=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_disposition	pointer
)	O
)	O
;	O
print_param	function
(	O
"Disposition Parameters"	pointer
,	O
bs	pointer
->	O
body_disp_param	pointer
,	O
indent	int
)	O
;	O
mu_printf	function
(	O
"%*sbody_language=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_language	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sbody_location=%s\n"	pointer
,	O
indent	int
,	O
""	pointer
,	O
mu_prstr	function
(	O
bs	pointer
->	O
body_location	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%*sType "	pointer
,	O
indent	int
,	O
""	pointer
)	O
;	O
switch	O
(	O
bs	pointer
->	O
body_message_type	enum
)	O
{	O
case	O
mu_message_other	int
:	O
mu_printf	function
(	O
"mu_message_other\n"	pointer
)	O
;	O
break	O
;	O
case	O
mu_message_text	int
:	O
mu_printf	function
(	O
"mu_message_text:\n%*sbody_lines=%lu\n"	pointer
,	O
indent	int
+	O
4	int
,	O
""	pointer
,	O
(	O
unsigned	O
long	O
)	O
bs	pointer
->	O
v	array
.	O
text	pointer
.	O
body_lines	long
)	O
;	O
break	O
;	O
case	O
mu_message_rfc822	int
:	O
mu_printf	function
(	O
"mu_message_rfc822:\n%*sbody_lines=%lu\n"	pointer
,	O
indent	int
+	O
4	int
,	O
""	pointer
,	O
(	O
unsigned	O
long	O
)	O
bs	pointer
->	O
v	array
.	O
rfc822	struct
.	O
body_lines	long
)	O
;	O
print_imapenvelope	function
(	O
bs	pointer
->	O
v	array
.	O
rfc822	struct
.	O
body_env	pointer
,	O
level	int
+	O
1	int
)	O
;	O
print_bs	function
(	O
bs	pointer
->	O
v	array
.	O
rfc822	struct
.	O
body_struct	pointer
,	O
level	int
+	O
1	int
)	O
;	O
break	O
;	O
case	O
mu_message_multipart	int
:	O
{	O
struct	O
print_data	struct
pd	pointer
;	O
pd	pointer
.	O
num	long
=	O
0	int
;	O
pd	pointer
.	O
level	int
=	O
level	int
+	O
1	int
;	O
mu_printf	function
(	O
"mu_message_multipart:\n"	pointer
)	O
;	O
mu_list_foreach	function
(	O
bs	pointer
->	O
v	array
.	O
multipart	struct
.	O
body_parts	pointer
,	O
print_item	function
,	O
&	O
pd	pointer
)	O
;	O
}	O
}	O
}	O
int	O
main	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
mu_mailbox_t	pointer
mbox	pointer
;	O
mu_message_t	pointer
mesg	pointer
;	O
struct	O
mu_bodystructure	struct
*	O
bs	pointer
;	O
if	O
(	O
argc	long
!=	O
3	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"usage: %s URL NUM\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
mu_register_all_mbox_formats	O
(	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mailbox_create	function
(	O
&	O
mbox	pointer
,	O
argv	pointer
[	O
1	int
]	O
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mailbox_open	function
(	O
mbox	pointer
,	O
MU_STREAM_READ	int
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mailbox_get_message	function
(	O
mbox	pointer
,	O
atoi	function
(	O
argv	pointer
[	O
2	int
]	O
)	O
,	O
&	O
mesg	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_message_get_bodystructure	function
(	O
mesg	pointer
,	O
&	O
bs	pointer
)	O
)	O
;	O
print_bs	function
(	O
bs	pointer
,	O
0	int
)	O
;	O
mu_bodystructure_free	function
(	O
bs	pointer
)	O
;	O
return	O
0	int
;	O
}	O
