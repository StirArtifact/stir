void	O
diskfs_console_stdio	function
(	O
)	O
{	O
if	O
(	O
getpid	function
(	O
)	O
>	O
0	int
)	O
{	O
if	O
(	O
write	pointer
(	O
2	int
,	O
""	pointer
,	O
0	int
)	O
==	O
0	int
)	O
dup2	function
(	O
2	int
,	O
1	int
)	O
;	O
else	O
{	O
int	O
fd	int
=	O
open	function
(	O
"/dev/console"	pointer
,	O
O_RDWR	int
)	O
;	O
dup2	function
(	O
fd	int
,	O
0	int
)	O
;	O
dup2	function
(	O
fd	int
,	O
1	int
)	O
;	O
dup2	function
(	O
fd	int
,	O
2	int
)	O
;	O
if	O
(	O
fd	int
>	O
2	int
)	O
close	pointer
(	O
fd	int
)	O
;	O
}	O
}	O
else	O
{	O
mach_port_t	O
dev	O
,	O
cons	O
;	O
error_t	int
err	int
;	O
if	O
(	O
diskfs_boot_filesystem	function
(	O
)	O
)	O
_diskfs_boot_privports	function
(	O
)	O
;	O
err	int
=	O
get_privileged_ports	function
(	O
NULL	O
,	O
&	O
dev	O
)	O
;	O
assert_perror	O
(	O
err	int
)	O
;	O
err	int
=	O
device_open	function
(	O
dev	O
,	O
D_READ	O
|	O
D_WRITE	O
,	O
"console"	pointer
,	O
&	O
cons	O
)	O
;	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
dev	O
)	O
;	O
assert_perror	O
(	O
err	int
)	O
;	O
stdin	pointer
=	O
mach_open_devstream	function
(	O
cons	O
,	O
"r"	pointer
)	O
;	O
stdout	pointer
=	O
stderr	pointer
=	O
mach_open_devstream	function
(	O
cons	O
,	O
"w"	pointer
)	O
;	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
cons	O
)	O
;	O
}	O
}	O
