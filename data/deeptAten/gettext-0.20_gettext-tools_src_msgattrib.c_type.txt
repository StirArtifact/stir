static	O
int	O
force_po	int
;	O
enum	O
{	O
REMOVE_UNTRANSLATED	int
=	O
1	int
<<	O
0	int
,	O
REMOVE_TRANSLATED	int
=	O
1	int
<<	O
1	int
,	O
REMOVE_FUZZY	int
=	O
1	int
<<	O
2	int
,	O
REMOVE_NONFUZZY	int
=	O
1	int
<<	O
3	int
,	O
REMOVE_OBSOLETE	int
=	O
1	int
<<	O
4	int
,	O
REMOVE_NONOBSOLETE	int
=	O
1	int
<<	O
5	int
}	O
;	O
static	O
int	O
to_remove	int
;	O
enum	O
{	O
SET_FUZZY	int
=	O
1	int
<<	O
0	int
,	O
RESET_FUZZY	int
=	O
1	int
<<	O
1	int
,	O
SET_OBSOLETE	int
=	O
1	int
<<	O
2	int
,	O
RESET_OBSOLETE	int
=	O
1	int
<<	O
3	int
,	O
REMOVE_PREV	int
=	O
1	int
<<	O
4	int
,	O
ADD_PREV	int
=	O
1	int
<<	O
5	int
,	O
REMOVE_TRANSLATION	int
=	O
1	int
<<	O
6	int
}	O
;	O
static	O
int	O
to_change	int
;	O
static	O
const	O
struct	O
option	struct
long_options	array
[	O
]	O
=	O
{	O
{	O
"add-location"	pointer
,	O
optional_argument	int
,	O
NULL	O
,	O
'n'	O
}	O
,	O
{	O
"clear-fuzzy"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
8	int
}	O
,	O
{	O
"clear-obsolete"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
10	int
}	O
,	O
{	O
"clear-previous"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
18	int
}	O
,	O
{	O
"empty"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
23	int
}	O
,	O
{	O
"color"	pointer
,	O
optional_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
19	int
}	O
,	O
{	O
"directory"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'D'	O
}	O
,	O
{	O
"escape"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'E'	O
}	O
,	O
{	O
"force-po"	pointer
,	O
no_argument	int
,	O
&	O
force_po	int
,	O
1	int
}	O
,	O
{	O
"fuzzy"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
11	int
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'h'	O
}	O
,	O
{	O
"ignore-file"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
15	int
}	O
,	O
{	O
"indent"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'i'	O
}	O
,	O
{	O
"no-escape"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'e'	O
}	O
,	O
{	O
"no-fuzzy"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
3	int
}	O
,	O
{	O
"no-location"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
22	int
}	O
,	O
{	O
"no-obsolete"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
5	int
}	O
,	O
{	O
"no-wrap"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
13	int
}	O
,	O
{	O
"obsolete"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
12	int
}	O
,	O
{	O
"only-file"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
14	int
}	O
,	O
{	O
"only-fuzzy"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
4	int
}	O
,	O
{	O
"only-obsolete"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
6	int
}	O
,	O
{	O
"output-file"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'o'	O
}	O
,	O
{	O
"previous"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
21	int
}	O
,	O
{	O
"properties-input"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'P'	O
}	O
,	O
{	O
"properties-output"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'p'	O
}	O
,	O
{	O
"set-fuzzy"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
7	int
}	O
,	O
{	O
"set-obsolete"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
9	int
}	O
,	O
{	O
"sort-by-file"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'F'	O
}	O
,	O
{	O
"sort-output"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"stringtable-input"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
16	int
}	O
,	O
{	O
"stringtable-output"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
17	int
}	O
,	O
{	O
"strict"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'S'	O
}	O
,	O
{	O
"style"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
20	int
}	O
,	O
{	O
"translated"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
1	int
}	O
,	O
{	O
"untranslated"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
CHAR_MAX	O
+	O
2	int
}	O
,	O
{	O
"version"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'V'	O
}	O
,	O
{	O
"width"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'w'	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
void	O
usage	function
(	O
int	O
status	int
)	O
__attribute__	O
(	O
(	O
noreturn	O
)	O
)	O
;	O
static	O
msgdomain_list_ty	struct
*	O
process_msgdomain_list	function
(	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
,	O
msgdomain_list_ty	struct
*	O
only_mdlp	pointer
,	O
msgdomain_list_ty	struct
*	O
ignore_mdlp	pointer
)	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
optchar	int
;	O
bool	bool
do_help	bool
;	O
bool	bool
do_version	bool
;	O
char	O
*	O
output_file	pointer
;	O
const	O
char	O
*	O
input_file	pointer
;	O
const	O
char	O
*	O
only_file	pointer
;	O
const	O
char	O
*	O
ignore_file	pointer
;	O
msgdomain_list_ty	struct
*	O
only_mdlp	pointer
;	O
msgdomain_list_ty	struct
*	O
ignore_mdlp	pointer
;	O
msgdomain_list_ty	struct
*	O
result	pointer
;	O
catalog_input_format_ty	pointer
input_syntax	pointer
=	O
&	O
input_format_po	struct
;	O
catalog_output_format_ty	pointer
output_syntax	pointer
=	O
&	O
output_format_po	struct
;	O
bool	bool
sort_by_msgid	bool
=	O
false	int
;	O
bool	bool
sort_by_filepos	bool
=	O
false	int
;	O
set_program_name	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
error_print_progname	pointer
=	O
maybe_print_progname	function
;	O
setlocale	function
(	O
LC_ALL	O
,	O
""	pointer
)	O
;	O
bindtextdomain	function
(	O
PACKAGE	pointer
,	O
relocate	O
(	O
LOCALEDIR	O
)	O
)	O
;	O
bindtextdomain	function
(	O
"bison-runtime"	pointer
,	O
relocate	O
(	O
BISON_LOCALEDIR	O
)	O
)	O
;	O
textdomain	function
(	O
PACKAGE	pointer
)	O
;	O
atexit	function
(	O
close_stdout	function
)	O
;	O
do_help	bool
=	O
false	int
;	O
do_version	bool
=	O
false	int
;	O
output_file	pointer
=	O
NULL	O
;	O
input_file	pointer
=	O
NULL	O
;	O
only_file	pointer
=	O
NULL	O
;	O
ignore_file	pointer
=	O
NULL	O
;	O
while	O
(	O
(	O
optchar	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	pointer
,	O
"D:eEFhino:pPsVw:"	pointer
,	O
long_options	array
,	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
switch	O
(	O
optchar	int
)	O
{	O
case	O
'\0'	O
:	O
break	O
;	O
case	O
'D'	O
:	O
dir_list_append	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
'e'	O
:	O
message_print_style_escape	function
(	O
false	int
)	O
;	O
break	O
;	O
case	O
'E'	O
:	O
message_print_style_escape	function
(	O
true	int
)	O
;	O
break	O
;	O
case	O
'F'	O
:	O
sort_by_filepos	bool
=	O
true	int
;	O
break	O
;	O
case	O
'h'	O
:	O
do_help	bool
=	O
true	int
;	O
break	O
;	O
case	O
'i'	O
:	O
message_print_style_indent	function
(	O
)	O
;	O
break	O
;	O
case	O
'n'	O
:	O
if	O
(	O
handle_filepos_comment_option	function
(	O
optarg	pointer
)	O
)	O
usage	function
(	O
EXIT_FAILURE	int
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
output_file	pointer
=	O
optarg	pointer
;	O
break	O
;	O
case	O
'p'	O
:	O
output_syntax	pointer
=	O
&	O
output_format_properties	struct
;	O
break	O
;	O
case	O
'P'	O
:	O
input_syntax	pointer
=	O
&	O
input_format_properties	struct
;	O
break	O
;	O
case	O
's'	O
:	O
sort_by_msgid	bool
=	O
true	int
;	O
break	O
;	O
case	O
'S'	O
:	O
message_print_style_uniforum	function
(	O
)	O
;	O
break	O
;	O
case	O
'V'	O
:	O
do_version	bool
=	O
true	int
;	O
break	O
;	O
case	O
'w'	O
:	O
{	O
int	O
value	int
;	O
char	O
*	O
endp	pointer
;	O
value	int
=	O
strtol	function
(	O
optarg	pointer
,	O
&	O
endp	pointer
,	O
10	int
)	O
;	O
if	O
(	O
endp	pointer
!=	O
optarg	pointer
)	O
message_page_width_set	function
(	O
value	int
)	O
;	O
}	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
1	int
:	O
to_remove	int
|=	O
REMOVE_UNTRANSLATED	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
2	int
:	O
to_remove	int
|=	O
REMOVE_TRANSLATED	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
3	int
:	O
to_remove	int
|=	O
REMOVE_FUZZY	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
4	int
:	O
to_remove	int
|=	O
REMOVE_NONFUZZY	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
5	int
:	O
to_remove	int
|=	O
REMOVE_OBSOLETE	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
6	int
:	O
to_remove	int
|=	O
REMOVE_NONOBSOLETE	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
7	int
:	O
to_change	int
|=	O
SET_FUZZY	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
8	int
:	O
to_change	int
|=	O
RESET_FUZZY	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
9	int
:	O
to_change	int
|=	O
SET_OBSOLETE	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
10	int
:	O
to_change	int
|=	O
RESET_OBSOLETE	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
11	int
:	O
to_remove	int
|=	O
REMOVE_NONFUZZY	int
;	O
to_change	int
|=	O
RESET_FUZZY	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
12	int
:	O
to_remove	int
|=	O
REMOVE_NONOBSOLETE	int
;	O
to_change	int
|=	O
RESET_OBSOLETE	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
13	int
:	O
message_page_width_ignore	function
(	O
)	O
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
14	int
:	O
only_file	pointer
=	O
optarg	pointer
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
15	int
:	O
ignore_file	pointer
=	O
optarg	pointer
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
16	int
:	O
input_syntax	pointer
=	O
&	O
input_format_stringtable	struct
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
17	int
:	O
output_syntax	pointer
=	O
&	O
output_format_stringtable	struct
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
18	int
:	O
to_change	int
|=	O
REMOVE_PREV	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
19	int
:	O
if	O
(	O
handle_color_option	function
(	O
optarg	pointer
)	O
||	O
color_test_mode	bool
)	O
usage	function
(	O
EXIT_FAILURE	int
)	O
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
20	int
:	O
handle_style_option	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
21	int
:	O
to_change	int
|=	O
ADD_PREV	int
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
22	int
:	O
message_print_style_filepos	function
(	O
filepos_comment_none	int
)	O
;	O
break	O
;	O
case	O
CHAR_MAX	O
+	O
23	int
:	O
to_change	int
|=	O
REMOVE_TRANSLATION	int
;	O
break	O
;	O
default	O
:	O
usage	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
if	O
(	O
do_version	bool
)	O
{	O
printf	function
(	O
"%s (GNU %s) %s\n"	pointer
,	O
basename	function
(	O
program_name	pointer
)	O
,	O
PACKAGE	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Copyright (C) %s Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n"	pointer
)	O
,	O
"2001-2019"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Written by %s.\n"	pointer
)	O
,	O
proper_name	function
(	O
"Bruno Haible"	pointer
)	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
if	O
(	O
do_help	bool
)	O
usage	function
(	O
EXIT_SUCCESS	int
)	O
;	O
if	O
(	O
optind	int
==	O
argc	int
)	O
input_file	pointer
=	O
"-"	pointer
;	O
else	O
if	O
(	O
optind	int
+	O
1	int
==	O
argc	int
)	O
input_file	pointer
=	O
argv	pointer
[	O
optind	int
]	O
;	O
else	O
{	O
error	function
(	O
EXIT_SUCCESS	int
,	O
0	int
,	O
_	O
(	O
"at most one input file allowed"	pointer
)	O
)	O
;	O
usage	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
if	O
(	O
sort_by_msgid	bool
&&	O
sort_by_filepos	bool
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
_	O
(	O
"%s and %s are mutually exclusive"	pointer
)	O
,	O
"--sort-output"	pointer
,	O
"--sort-by-file"	pointer
)	O
;	O
result	pointer
=	O
read_catalog_file	function
(	O
input_file	pointer
,	O
input_syntax	pointer
)	O
;	O
only_mdlp	pointer
=	O
(	O
only_file	pointer
!=	O
NULL	O
?	O
read_catalog_file	function
(	O
only_file	pointer
,	O
input_syntax	pointer
)	O
:	O
NULL	O
)	O
;	O
ignore_mdlp	pointer
=	O
(	O
ignore_file	pointer
!=	O
NULL	O
?	O
read_catalog_file	function
(	O
ignore_file	pointer
,	O
input_syntax	pointer
)	O
:	O
NULL	O
)	O
;	O
result	pointer
=	O
process_msgdomain_list	function
(	O
result	pointer
,	O
only_mdlp	pointer
,	O
ignore_mdlp	pointer
)	O
;	O
if	O
(	O
sort_by_filepos	bool
)	O
msgdomain_list_sort_by_filepos	function
(	O
result	pointer
)	O
;	O
else	O
if	O
(	O
sort_by_msgid	bool
)	O
msgdomain_list_sort_by_msgid	function
(	O
result	pointer
)	O
;	O
msgdomain_list_print	function
(	O
result	pointer
,	O
output_file	pointer
,	O
output_syntax	pointer
,	O
force_po	int
,	O
false	int
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
static	O
void	O
usage	function
(	O
int	O
status	int
)	O
{	O
if	O
(	O
status	int
!=	O
EXIT_SUCCESS	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"Try '%s --help' for more information.\n"	pointer
)	O
,	O
program_name	pointer
)	O
;	O
else	O
{	O
printf	function
(	O
_	O
(	O
"Usage: %s [OPTION] [INPUTFILE]\n"	pointer
)	O
,	O
program_name	pointer
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Filters the messages of a translation catalog according to their attributes,\nand manipulates the attributes.\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Mandatory arguments to long options are mandatory for short options too.\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Input file location:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  INPUTFILE                   input PO file\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -D, --directory=DIRECTORY   add DIRECTORY to list for input files search\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"If no input file is given or if it is -, standard input is read.\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Output file location:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -o, --output-file=FILE      write output to specified file\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"The results are written to standard output if no output file is specified\nor if it is -.\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Message selection:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --translated            keep translated, remove untranslated messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --untranslated          keep untranslated, remove translated messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --no-fuzzy              remove 'fuzzy' marked messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --only-fuzzy            keep 'fuzzy' marked messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --no-obsolete           remove obsolete #~ messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --only-obsolete         keep obsolete #~ messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Attribute manipulation:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --set-fuzzy             set all messages 'fuzzy'\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --clear-fuzzy           set all messages non-'fuzzy'\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --set-obsolete          set all messages obsolete\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --clear-obsolete        set all messages non-obsolete\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --previous              when setting 'fuzzy', keep previous msgids\n                              of translated messages.\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --clear-previous        remove the \"previous msgid\" from all messages\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --empty                 when removing 'fuzzy', also set msgstr empty\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --only-file=FILE.po     manipulate only entries listed in FILE.po\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --ignore-file=FILE.po   manipulate only entries not listed in FILE.po\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --fuzzy                 synonym for --only-fuzzy --clear-fuzzy\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --obsolete              synonym for --only-obsolete --clear-obsolete\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Input file syntax:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -P, --properties-input      input file is in Java .properties syntax\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --stringtable-input     input file is in NeXTstep/GNUstep .strings syntax\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Output details:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --color                 use colors and other text attributes always\n      --color=WHEN            use colors and other text attributes if WHEN.\n                              WHEN may be 'always', 'never', 'auto', or 'html'.\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --style=STYLEFILE       specify CSS style rule file for --color\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -e, --no-escape             do not use C escapes in output (default)\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -E, --escape                use C escapes in output, no extended chars\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --force-po              write PO file even if empty\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -i, --indent                write the .po file using indented style\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --no-location           do not write '#: filename:line' lines\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -n, --add-location          generate '#: filename:line' lines (default)\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --strict                write out strict Uniforum conforming .po file\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -p, --properties-output     write out a Java .properties file\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --stringtable-output    write out a NeXTstep/GNUstep .strings file\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -w, --width=NUMBER          set output page width\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"      --no-wrap               do not break long message lines, longer than\n                              the output page width, into several lines\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -s, --sort-output           generate sorted output\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -F, --sort-by-file          sort output by file location\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
_	O
(	O
"Informative output:\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -h, --help                  display this help and exit\n"	pointer
)	O
)	O
;	O
printf	function
(	O
_	O
(	O
"  -V, --version               output version information and exit\n"	pointer
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
fputs	function
(	O
_	O
(	O
"Report bugs to <bug-gnu-gettext@gnu.org>.\n"	pointer
)	O
,	O
stdout	pointer
)	O
;	O
}	O
exit	function
(	O
status	int
)	O
;	O
}	O
static	O
bool	bool
is_message_selected	function
(	O
const	O
message_ty	struct
*	O
mp	pointer
)	O
{	O
if	O
(	O
is_header	O
(	O
mp	pointer
)	O
)	O
return	O
true	int
;	O
if	O
(	O
(	O
to_remove	int
&	O
(	O
REMOVE_UNTRANSLATED	int
|	O
REMOVE_TRANSLATED	int
)	O
)	O
&&	O
(	O
mp	pointer
->	O
msgstr	pointer
[	O
0	int
]	O
==	O
'\0'	O
?	O
to_remove	int
&	O
REMOVE_UNTRANSLATED	int
:	O
to_remove	int
&	O
REMOVE_TRANSLATED	int
)	O
)	O
return	O
false	int
;	O
if	O
(	O
(	O
to_remove	int
&	O
(	O
REMOVE_FUZZY	int
|	O
REMOVE_NONFUZZY	int
)	O
)	O
&&	O
(	O
mp	pointer
->	O
is_fuzzy	bool
?	O
to_remove	int
&	O
REMOVE_FUZZY	int
:	O
to_remove	int
&	O
REMOVE_NONFUZZY	int
)	O
)	O
return	O
false	int
;	O
if	O
(	O
(	O
to_remove	int
&	O
(	O
REMOVE_OBSOLETE	int
|	O
REMOVE_NONOBSOLETE	int
)	O
)	O
&&	O
(	O
mp	pointer
->	O
obsolete	bool
?	O
to_remove	int
&	O
REMOVE_OBSOLETE	int
:	O
to_remove	int
&	O
REMOVE_NONOBSOLETE	int
)	O
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
static	O
void	O
process_message_list	function
(	O
message_list_ty	struct
*	O
mlp	pointer
,	O
message_list_ty	struct
*	O
only_mlp	pointer
,	O
message_list_ty	struct
*	O
ignore_mlp	pointer
)	O
{	O
message_list_remove_if_not	function
(	O
mlp	pointer
,	O
is_message_selected	function
)	O
;	O
if	O
(	O
to_change	int
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	pointer
->	O
nitems	long
;	O
j	long
++	O
)	O
{	O
message_ty	struct
*	O
mp	pointer
=	O
mlp	pointer
->	O
item	pointer
[	O
j	long
]	O
;	O
if	O
(	O
(	O
only_mlp	pointer
?	O
message_list_search	function
(	O
only_mlp	pointer
,	O
mp	pointer
->	O
msgctxt	pointer
,	O
mp	pointer
->	O
msgid	pointer
)	O
!=	O
NULL	O
:	O
true	int
)	O
&&	O
(	O
ignore_mlp	pointer
?	O
message_list_search	function
(	O
ignore_mlp	pointer
,	O
mp	pointer
->	O
msgctxt	pointer
,	O
mp	pointer
->	O
msgid	pointer
)	O
==	O
NULL	O
:	O
true	int
)	O
)	O
{	O
if	O
(	O
to_change	int
&	O
SET_FUZZY	int
)	O
{	O
if	O
(	O
(	O
to_change	int
&	O
ADD_PREV	int
)	O
&&	O
!	O
is_header	O
(	O
mp	pointer
)	O
&&	O
!	O
mp	pointer
->	O
is_fuzzy	bool
&&	O
mp	pointer
->	O
msgstr	pointer
[	O
0	int
]	O
!=	O
'\0'	O
)	O
{	O
mp	pointer
->	O
prev_msgctxt	pointer
=	O
(	O
mp	pointer
->	O
msgctxt	pointer
!=	O
NULL	O
?	O
xstrdup	function
(	O
mp	pointer
->	O
msgctxt	pointer
)	O
:	O
NULL	O
)	O
;	O
mp	pointer
->	O
prev_msgid	pointer
=	O
(	O
mp	pointer
->	O
msgid	pointer
!=	O
NULL	O
?	O
xstrdup	function
(	O
mp	pointer
->	O
msgid	pointer
)	O
:	O
NULL	O
)	O
;	O
mp	pointer
->	O
prev_msgid_plural	pointer
=	O
(	O
mp	pointer
->	O
msgid_plural	pointer
!=	O
NULL	O
?	O
xstrdup	function
(	O
mp	pointer
->	O
msgid_plural	pointer
)	O
:	O
NULL	O
)	O
;	O
}	O
mp	pointer
->	O
is_fuzzy	bool
=	O
true	int
;	O
}	O
if	O
(	O
to_change	int
&	O
RESET_FUZZY	int
)	O
{	O
if	O
(	O
(	O
to_change	int
&	O
REMOVE_TRANSLATION	int
)	O
&&	O
mp	pointer
->	O
is_fuzzy	bool
&&	O
!	O
mp	pointer
->	O
obsolete	bool
)	O
{	O
unsigned	O
long	O
int	O
nplurals	long
=	O
0	int
;	O
char	O
*	O
msgstr	pointer
;	O
size_t	long
pos	struct
;	O
for	O
(	O
pos	struct
=	O
0	int
;	O
pos	struct
<	O
mp	pointer
->	O
msgstr_len	long
;	O
++	O
pos	struct
)	O
if	O
(	O
!	O
mp	pointer
->	O
msgstr	pointer
[	O
pos	struct
]	O
)	O
++	O
nplurals	long
;	O
free	function
(	O
(	O
char	O
*	O
)	O
mp	pointer
->	O
msgstr	pointer
)	O
;	O
msgstr	pointer
=	O
XNMALLOC	O
(	O
nplurals	long
,	O
char	O
)	O
;	O
memset	function
(	O
msgstr	pointer
,	O
'\0'	O
,	O
nplurals	long
)	O
;	O
mp	pointer
->	O
msgstr	pointer
=	O
msgstr	pointer
;	O
mp	pointer
->	O
msgstr_len	long
=	O
nplurals	long
;	O
}	O
mp	pointer
->	O
is_fuzzy	bool
=	O
false	int
;	O
}	O
if	O
(	O
(	O
to_change	int
&	O
SET_OBSOLETE	int
)	O
&&	O
!	O
is_header	O
(	O
mp	pointer
)	O
)	O
mp	pointer
->	O
obsolete	bool
=	O
true	int
;	O
if	O
(	O
to_change	int
&	O
RESET_OBSOLETE	int
)	O
mp	pointer
->	O
obsolete	bool
=	O
false	int
;	O
if	O
(	O
to_change	int
&	O
REMOVE_PREV	int
)	O
{	O
mp	pointer
->	O
prev_msgctxt	pointer
=	O
NULL	O
;	O
mp	pointer
->	O
prev_msgid	pointer
=	O
NULL	O
;	O
mp	pointer
->	O
prev_msgid_plural	pointer
=	O
NULL	O
;	O
}	O
}	O
}	O
}	O
}	O
static	O
msgdomain_list_ty	struct
*	O
process_msgdomain_list	function
(	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
,	O
msgdomain_list_ty	struct
*	O
only_mdlp	pointer
,	O
msgdomain_list_ty	struct
*	O
ignore_mdlp	pointer
)	O
{	O
size_t	long
k	long
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
mdlp	pointer
->	O
nitems	long
;	O
k	long
++	O
)	O
process_message_list	function
(	O
mdlp	pointer
->	O
item	pointer
[	O
k	long
]	O
->	O
messages	pointer
,	O
only_mdlp	pointer
?	O
msgdomain_list_sublist	function
(	O
only_mdlp	pointer
,	O
mdlp	pointer
->	O
item	pointer
[	O
k	long
]	O
->	O
domain	pointer
,	O
true	int
)	O
:	O
NULL	O
,	O
ignore_mdlp	pointer
?	O
msgdomain_list_sublist	function
(	O
ignore_mdlp	pointer
,	O
mdlp	pointer
->	O
item	pointer
[	O
k	long
]	O
->	O
domain	pointer
,	O
false	int
)	O
:	O
NULL	O
)	O
;	O
return	O
mdlp	pointer
;	O
}	O
