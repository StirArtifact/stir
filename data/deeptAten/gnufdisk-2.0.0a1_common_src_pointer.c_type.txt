static	O
jmp_buf	array
sigsegv_jump	array
;	O
static	O
pthread_mutex_t	union
mutex	union
=	O
PTHREAD_MUTEX_INITIALIZER	O
;	O
static	O
void	O
sigsegv_handler	function
(	O
int	O
signum	int
)	O
{	O
longjmp	function
(	O
sigsegv_jump	array
,	O
signum	int
)	O
;	O
}	O
int	O
gnufdisk_check_memory	function
(	O
void	O
*	O
_p	pointer
,	O
size_t	long
_len	long
,	O
int	O
_readonly	int
)	O
{	O
int	O
err	long
;	O
int	O
ret	int
;	O
struct	O
sigaction	struct
action	struct
;	O
struct	O
sigaction	struct
old_action	struct
;	O
pthread_mutex_lock	function
(	O
&	O
mutex	union
)	O
;	O
memset	function
(	O
&	O
action	struct
,	O
0	int
,	O
sizeof	O
(	O
action	struct
)	O
)	O
;	O
action	struct
.	O
sa_handler	pointer
=	O
&	O
sigsegv_handler	function
;	O
action	struct
.	O
sa_flags	int
=	O
SA_NODEFER	int
;	O
if	O
(	O
sigaction	struct
(	O
SIGSEGV	int
,	O
&	O
action	struct
,	O
&	O
old_action	struct
)	O
!=	O
0	int
)	O
{	O
ret	int
=	O
-	O
1	int
;	O
err	long
=	O
errno	O
;	O
goto	O
lb_out	O
;	O
}	O
if	O
(	O
setjmp	function
(	O
sigsegv_jump	array
)	O
==	O
0	int
)	O
{	O
unsigned	O
char	O
*	O
start	pointer
;	O
unsigned	O
char	O
*	O
end	pointer
;	O
unsigned	O
char	O
byte	char
;	O
start	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
_p	pointer
;	O
end	pointer
=	O
start	pointer
+	O
_len	long
;	O
byte	char
=	O
*	O
start	pointer
;	O
if	O
(	O
!	O
_readonly	int
)	O
*	O
start	pointer
=	O
byte	char
;	O
byte	char
=	O
*	O
end	pointer
;	O
if	O
(	O
!	O
_readonly	int
)	O
*	O
end	pointer
=	O
byte	char
;	O
ret	int
=	O
0	int
;	O
err	long
=	O
0	int
;	O
}	O
else	O
{	O
err	long
=	O
EFAULT	int
;	O
ret	int
=	O
-	O
1	int
;	O
}	O
sigaction	struct
(	O
SIGSEGV	int
,	O
&	O
old_action	struct
,	O
NULL	O
)	O
;	O
lb_out	O
:	O
pthread_mutex_unlock	function
(	O
&	O
mutex	union
)	O
;	O
errno	O
=	O
err	long
;	O
return	O
ret	int
;	O
}	O
int	O
gnufdisk_vfprintf	function
(	O
FILE	struct
*	O
_f	pointer
,	O
const	O
char	O
*	O
_fmt	pointer
,	O
va_list	array
_args	array
)	O
{	O
int	O
err	long
;	O
int	O
ret	int
;	O
struct	O
sigaction	struct
action	struct
;	O
struct	O
sigaction	struct
old_action	struct
;	O
pthread_mutex_lock	function
(	O
&	O
mutex	union
)	O
;	O
memset	function
(	O
&	O
action	struct
,	O
0	int
,	O
sizeof	O
(	O
action	struct
)	O
)	O
;	O
action	struct
.	O
sa_handler	pointer
=	O
&	O
sigsegv_handler	function
;	O
action	struct
.	O
sa_flags	int
=	O
SA_NODEFER	int
;	O
if	O
(	O
sigaction	struct
(	O
SIGSEGV	int
,	O
&	O
action	struct
,	O
&	O
old_action	struct
)	O
!=	O
0	int
)	O
{	O
err	long
=	O
errno	O
;	O
ret	int
=	O
-	O
1	int
;	O
goto	O
lb_out	O
;	O
}	O
if	O
(	O
setjmp	function
(	O
sigsegv_jump	array
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
vfprintf	function
(	O
_f	pointer
,	O
_fmt	pointer
,	O
_args	array
)	O
)	O
<	O
0	int
)	O
{	O
ret	int
=	O
-	O
1	int
;	O
err	long
=	O
errno	O
;	O
}	O
else	O
err	long
=	O
0	int
;	O
}	O
else	O
{	O
ret	int
=	O
-	O
1	int
;	O
err	long
=	O
EFAULT	int
;	O
}	O
sigaction	struct
(	O
SIGSEGV	int
,	O
&	O
old_action	struct
,	O
NULL	O
)	O
;	O
lb_out	O
:	O
pthread_mutex_unlock	function
(	O
&	O
mutex	union
)	O
;	O
errno	O
=	O
err	long
;	O
return	O
ret	int
;	O
}	O
int	O
gnufdisk_vasprintf	function
(	O
char	O
*	O
*	O
_dest	pointer
,	O
const	O
char	O
*	O
_fmt	pointer
,	O
va_list	array
_args	array
)	O
{	O
int	O
ret	int
;	O
int	O
err	long
;	O
struct	O
sigaction	struct
action	struct
;	O
struct	O
sigaction	struct
old_action	struct
;	O
char	O
*	O
buf	pointer
;	O
pthread_mutex_lock	function
(	O
&	O
mutex	union
)	O
;	O
memset	function
(	O
&	O
action	struct
,	O
0	int
,	O
sizeof	O
(	O
action	struct
)	O
)	O
;	O
action	struct
.	O
sa_handler	pointer
=	O
&	O
sigsegv_handler	function
;	O
action	struct
.	O
sa_flags	int
=	O
SA_NODEFER	int
;	O
if	O
(	O
sigaction	struct
(	O
SIGSEGV	int
,	O
&	O
action	struct
,	O
&	O
old_action	struct
)	O
!=	O
0	int
)	O
{	O
ret	int
=	O
-	O
1	int
;	O
err	long
=	O
errno	O
;	O
goto	O
lb_out	O
;	O
}	O
buf	pointer
=	O
NULL	O
;	O
if	O
(	O
setjmp	function
(	O
sigsegv_jump	array
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
vasprintf	function
(	O
&	O
buf	pointer
,	O
_fmt	pointer
,	O
_args	array
)	O
)	O
<	O
0	int
)	O
{	O
ret	int
=	O
-	O
1	int
;	O
err	long
=	O
errno	O
;	O
}	O
else	O
{	O
*	O
_dest	pointer
=	O
buf	pointer
;	O
err	long
=	O
0	int
;	O
}	O
}	O
else	O
{	O
err	long
=	O
EFAULT	int
;	O
ret	int
=	O
-	O
1	int
;	O
if	O
(	O
buf	pointer
)	O
free	function
(	O
buf	pointer
)	O
;	O
}	O
sigaction	struct
(	O
SIGSEGV	int
,	O
&	O
old_action	struct
,	O
NULL	O
)	O
;	O
lb_out	O
:	O
pthread_mutex_unlock	function
(	O
&	O
mutex	union
)	O
;	O
errno	O
=	O
err	long
;	O
return	O
ret	int
;	O
}	O
