void	O
VSetVisibility	function
(	O
double	O
d	long
)	O
{	O
int	O
i	int
;	O
double	O
k	double
;	O
_VDefaultWorkContext	pointer
->	O
visibility	double
=	O
d	long
;	O
if	O
(	O
_VDefaultWorkContext	pointer
->	O
visTable	pointer
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
_VDefaultWorkContext	pointer
->	O
visTable	pointer
)	O
;	O
}	O
_VDefaultWorkContext	pointer
->	O
visTable	pointer
=	O
(	O
double	O
*	O
)	O
Vmalloc	function
(	O
sizeof	O
(	O
double	O
)	O
*	O
_VDefaultWorkContext	pointer
->	O
depthCueSteps	int
)	O
;	O
k	double
=	O
log	function
(	O
1.0	int
/	O
(	O
double	O
)	O
_VDefaultWorkContext	pointer
->	O
depthCueSteps	int
)	O
/	O
_VDefaultWorkContext	pointer
->	O
visibility	double
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_VDefaultWorkContext	pointer
->	O
depthCueSteps	int
-	O
1	int
;	O
++	O
i	int
)	O
{	O
_VDefaultWorkContext	pointer
->	O
visTable	pointer
[	O
i	int
]	O
=	O
log	function
(	O
1.0	int
-	O
(	O
double	O
)	O
(	O
i	int
+	O
1	int
)	O
/	O
(	O
double	O
)	O
_VDefaultWorkContext	pointer
->	O
depthCueSteps	int
)	O
/	O
k	double
;	O
}	O
}	O
int	O
VComputePolygonColor	function
(	O
Viewport	struct
*	O
v	struct
,	O
VPolygon	struct
*	O
poly	pointer
)	O
{	O
VColor	struct
*	O
c	pointer
;	O
VPoint	struct
*	O
p	pointer
;	O
int	O
i	int
;	O
double	O
d	long
;	O
if	O
(	O
poly	pointer
->	O
flags	short
&	O
PolyUseBackColor	int
)	O
{	O
c	pointer
=	O
poly	pointer
->	O
backColor	pointer
;	O
}	O
else	O
{	O
c	pointer
=	O
poly	pointer
->	O
color	pointer
;	O
}	O
if	O
(	O
(	O
v	struct
->	O
flags	short
&	O
VPDepthCueing	int
)	O
==	O
0	int
||	O
(	O
c	pointer
->	O
flags	short
&	O
ColorEnableDepthCueing	int
)	O
==	O
0	int
)	O
{	O
return	O
v	struct
->	O
pixel	long
[	O
c	pointer
->	O
cIndex	short
]	O
;	O
}	O
else	O
{	O
if	O
(	O
(	O
i	int
=	O
poly	pointer
->	O
assignedDepth	short
)	O
>	O
-	O
1	int
)	O
{	O
return	O
v	struct
->	O
pixel	long
[	O
(	O
i	int
<	O
_VDefaultWorkContext	pointer
->	O
depthCueSteps	int
-	O
1	int
)	O
?	O
c	pointer
->	O
cIndex	short
+	O
i	int
:	O
_VDefaultWorkContext	pointer
->	O
depthCueColor	pointer
->	O
cIndex	short
]	O
;	O
}	O
p	pointer
=	O
&	O
poly	pointer
->	O
vertex	pointer
[	O
0	int
]	O
;	O
d	long
=	O
sqrt	function
(	O
p	pointer
->	O
x	double
*	O
p	pointer
->	O
x	double
+	O
p	pointer
->	O
y	double
*	O
p	pointer
->	O
y	double
+	O
p	pointer
->	O
z	double
*	O
p	pointer
->	O
z	double
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_VDefaultWorkContext	pointer
->	O
depthCueSteps	int
-	O
1	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
d	long
<	O
_VDefaultWorkContext	pointer
->	O
visTable	pointer
[	O
i	int
]	O
)	O
{	O
return	O
v	struct
->	O
pixel	long
[	O
c	pointer
->	O
cIndex	short
+	O
i	int
]	O
;	O
}	O
}	O
return	O
v	struct
->	O
pixel	long
[	O
_VDefaultWorkContext	pointer
->	O
depthCueColor	pointer
->	O
cIndex	short
]	O
;	O
}	O
}	O
