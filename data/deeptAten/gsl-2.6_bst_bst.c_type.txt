static	O
void	O
*	O
bst_malloc	function
(	O
size_t	long
size	long
,	O
void	O
*	O
params	pointer
)	O
;	O
static	O
void	O
bst_free	function
(	O
void	O
*	O
block	pointer
,	O
void	O
*	O
params	pointer
)	O
;	O
static	O
const	O
gsl_bst_allocator	struct
bst_default_allocator	struct
=	O
{	O
bst_malloc	function
,	O
bst_free	function
}	O
;	O
gsl_bst_workspace	struct
*	O
gsl_bst_alloc	function
(	O
const	O
gsl_bst_type	struct
*	O
T	pointer
,	O
const	O
gsl_bst_allocator	struct
*	O
allocator	pointer
,	O
gsl_bst_cmp_function	function
*	O
compare	pointer
,	O
void	O
*	O
params	pointer
)	O
{	O
int	O
status	int
;	O
gsl_bst_workspace	struct
*	O
w	pointer
;	O
w	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
gsl_bst_workspace	struct
)	O
)	O
;	O
if	O
(	O
w	pointer
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate bst workspace"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
w	pointer
->	O
type	pointer
=	O
T	pointer
;	O
status	int
=	O
(	O
w	pointer
->	O
type	pointer
->	O
init	pointer
)	O
(	O
allocator	pointer
!=	O
NULL	O
?	O
allocator	pointer
:	O
&	O
bst_default_allocator	struct
,	O
compare	pointer
,	O
params	pointer
,	O
(	O
void	O
*	O
)	O
&	O
w	pointer
->	O
table	union
)	O
;	O
if	O
(	O
status	int
)	O
{	O
gsl_bst_free	function
(	O
w	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to initialize bst"	pointer
,	O
GSL_EFAILED	int
)	O
;	O
}	O
return	O
w	pointer
;	O
}	O
void	O
gsl_bst_free	function
(	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
gsl_bst_empty	function
(	O
w	pointer
)	O
;	O
free	function
(	O
w	pointer
)	O
;	O
}	O
int	O
gsl_bst_empty	function
(	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
(	O
w	pointer
->	O
type	pointer
->	O
empty	pointer
)	O
(	O
(	O
void	O
*	O
)	O
&	O
w	pointer
->	O
table	union
)	O
;	O
}	O
void	O
*	O
gsl_bst_insert	function
(	O
void	O
*	O
item	pointer
,	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
(	O
w	pointer
->	O
type	pointer
->	O
insert	pointer
)	O
(	O
item	pointer
,	O
(	O
void	O
*	O
)	O
&	O
w	pointer
->	O
table	union
)	O
;	O
}	O
void	O
*	O
gsl_bst_find	function
(	O
const	O
void	O
*	O
item	pointer
,	O
const	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
(	O
w	pointer
->	O
type	pointer
->	O
find	pointer
)	O
(	O
item	pointer
,	O
(	O
const	O
void	O
*	O
)	O
&	O
w	pointer
->	O
table	union
)	O
;	O
}	O
void	O
*	O
gsl_bst_remove	function
(	O
const	O
void	O
*	O
item	pointer
,	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
(	O
w	pointer
->	O
type	pointer
->	O
remove	pointer
)	O
(	O
item	pointer
,	O
(	O
void	O
*	O
)	O
&	O
w	pointer
->	O
table	union
)	O
;	O
}	O
size_t	long
gsl_bst_nodes	function
(	O
const	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
(	O
w	pointer
->	O
type	pointer
->	O
nodes	pointer
)	O
(	O
(	O
const	O
void	O
*	O
)	O
&	O
w	pointer
->	O
table	union
)	O
;	O
}	O
size_t	long
gsl_bst_node_size	function
(	O
const	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
w	pointer
->	O
type	pointer
->	O
node_size	long
;	O
}	O
const	O
char	O
*	O
gsl_bst_name	function
(	O
const	O
gsl_bst_workspace	struct
*	O
w	pointer
)	O
{	O
return	O
w	pointer
->	O
type	pointer
->	O
name	pointer
;	O
}	O
static	O
void	O
*	O
bst_malloc	function
(	O
size_t	long
size	long
,	O
void	O
*	O
params	pointer
)	O
{	O
(	O
void	O
)	O
params	pointer
;	O
return	O
malloc	function
(	O
size	long
)	O
;	O
}	O
static	O
void	O
bst_free	function
(	O
void	O
*	O
block	pointer
,	O
void	O
*	O
params	pointer
)	O
{	O
(	O
void	O
)	O
params	pointer
;	O
free	function
(	O
block	pointer
)	O
;	O
}	O
