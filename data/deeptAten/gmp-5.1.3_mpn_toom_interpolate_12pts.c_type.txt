static	O
mp_limb_t	long
DO_mpn_sublsh_n	function
(	O
mp_ptr	pointer
dst	pointer
,	O
mp_srcptr	pointer
src	pointer
,	O
mp_size_t	long
n	long
,	O
unsigned	O
int	O
s	array
,	O
mp_ptr	pointer
ws	pointer
)	O
{	O
mp_limb_t	long
__cy	long
;	O
__cy	long
=	O
mpn_lshift	O
(	O
ws	pointer
,	O
src	pointer
,	O
n	long
,	O
s	array
)	O
;	O
return	O
__cy	long
+	O
mpn_sub_n	O
(	O
dst	pointer
,	O
dst	pointer
,	O
ws	pointer
,	O
n	long
)	O
;	O
}	O
void	O
mpn_toom_interpolate_12pts	O
(	O
mp_ptr	pointer
pp	pointer
,	O
mp_ptr	pointer
r1	pointer
,	O
mp_ptr	pointer
r3	pointer
,	O
mp_ptr	pointer
r5	pointer
,	O
mp_size_t	long
n	long
,	O
mp_size_t	long
spt	long
,	O
int	O
half	int
,	O
mp_ptr	pointer
wsi	pointer
)	O
{	O
mp_limb_t	long
cy	long
;	O
mp_size_t	long
n3	long
;	O
mp_size_t	long
n3p1	long
;	O
n3	long
=	O
3	int
*	O
n	long
;	O
n3p1	long
=	O
n3	long
+	O
1	int
;	O
if	O
(	O
half	int
!=	O
0	int
)	O
{	O
cy	long
=	O
mpn_sub_n	O
(	O
r3	pointer
,	O
r3	pointer
,	O
r0	O
,	O
spt	long
)	O
;	O
MPN_DECR_U	O
(	O
r3	pointer
+	O
spt	long
,	O
n3p1	long
-	O
spt	long
,	O
cy	long
)	O
;	O
cy	long
=	O
DO_mpn_sublsh_n	function
(	O
r2	O
,	O
r0	O
,	O
spt	long
,	O
10	int
,	O
wsi	pointer
)	O
;	O
MPN_DECR_U	O
(	O
r2	O
+	O
spt	long
,	O
n3p1	long
-	O
spt	long
,	O
cy	long
)	O
;	O
DO_mpn_subrsh	O
(	O
r5	pointer
,	O
n3p1	long
,	O
r0	O
,	O
spt	long
,	O
2	int
,	O
wsi	pointer
)	O
;	O
cy	long
=	O
DO_mpn_sublsh_n	function
(	O
r1	pointer
,	O
r0	O
,	O
spt	long
,	O
20	int
,	O
wsi	pointer
)	O
;	O
MPN_DECR_U	O
(	O
r1	pointer
+	O
spt	long
,	O
n3p1	long
-	O
spt	long
,	O
cy	long
)	O
;	O
DO_mpn_subrsh	O
(	O
r4	O
,	O
n3p1	long
,	O
r0	O
,	O
spt	long
,	O
4	int
,	O
wsi	pointer
)	O
;	O
}	O
;	O
r4	O
[	O
n3	long
]	O
-=	O
DO_mpn_sublsh_n	function
(	O
r4	O
+	O
n	long
,	O
pp	pointer
,	O
2	int
*	O
n	long
,	O
20	int
,	O
wsi	pointer
)	O
;	O
DO_mpn_subrsh	O
(	O
r1	pointer
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	pointer
,	O
2	int
*	O
n	long
,	O
4	int
,	O
wsi	pointer
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_add_n	O
(	O
wsi	pointer
,	O
r1	pointer
,	O
r4	O
,	O
n3p1	long
)	O
)	O
;	O
mpn_sub_n	O
(	O
r4	O
,	O
r4	O
,	O
r1	pointer
,	O
n3p1	long
)	O
;	O
MP_PTR_SWAP	O
(	O
r1	pointer
,	O
wsi	pointer
)	O
;	O
r5	pointer
[	O
n3	long
]	O
-=	O
DO_mpn_sublsh_n	function
(	O
r5	pointer
+	O
n	long
,	O
pp	pointer
,	O
2	int
*	O
n	long
,	O
10	int
,	O
wsi	pointer
)	O
;	O
DO_mpn_subrsh	O
(	O
r2	O
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	pointer
,	O
2	int
*	O
n	long
,	O
2	int
,	O
wsi	pointer
)	O
;	O
mpn_sub_n	O
(	O
wsi	pointer
,	O
r5	pointer
,	O
r2	O
,	O
n3p1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_add_n	O
(	O
r2	O
,	O
r2	O
,	O
r5	pointer
,	O
n3p1	long
)	O
)	O
;	O
MP_PTR_SWAP	O
(	O
r5	pointer
,	O
wsi	pointer
)	O
;	O
r3	pointer
[	O
n3	long
]	O
-=	O
mpn_sub_n	O
(	O
r3	pointer
+	O
n	long
,	O
r3	pointer
+	O
n	long
,	O
pp	pointer
,	O
2	int
*	O
n	long
)	O
;	O
mpn_submul_1	O
(	O
r4	O
,	O
r5	pointer
,	O
n3p1	long
,	O
257	int
)	O
;	O
mpn_divexact_by2835x4	O
(	O
r4	O
,	O
r4	O
,	O
n3p1	long
)	O
;	O
if	O
(	O
(	O
r4	O
[	O
n3	long
]	O
&	O
(	O
GMP_NUMB_MAX	O
<<	O
(	O
GMP_NUMB_BITS	O
-	O
3	int
)	O
)	O
)	O
!=	O
0	int
)	O
r4	O
[	O
n3	long
]	O
|=	O
(	O
GMP_NUMB_MAX	O
<<	O
(	O
GMP_NUMB_BITS	O
-	O
2	int
)	O
)	O
;	O
mpn_addmul_1	O
(	O
r5	pointer
,	O
r4	O
,	O
n3p1	long
,	O
60	int
)	O
;	O
mpn_divexact_by255	O
(	O
r5	pointer
,	O
r5	pointer
,	O
n3p1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
DO_mpn_sublsh_n	function
(	O
r2	O
,	O
r3	pointer
,	O
n3p1	long
,	O
5	int
,	O
wsi	pointer
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_submul_1	O
(	O
r1	pointer
,	O
r2	O
,	O
n3p1	long
,	O
100	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
DO_mpn_sublsh_n	function
(	O
r1	pointer
,	O
r3	pointer
,	O
n3p1	long
,	O
9	int
,	O
wsi	pointer
)	O
)	O
;	O
mpn_divexact_by42525	O
(	O
r1	pointer
,	O
r1	pointer
,	O
n3p1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_submul_1	O
(	O
r2	O
,	O
r1	pointer
,	O
n3p1	long
,	O
225	int
)	O
)	O
;	O
mpn_divexact_by9x4	O
(	O
r2	O
,	O
r2	O
,	O
n3p1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r3	pointer
,	O
r3	pointer
,	O
r2	O
,	O
n3p1	long
)	O
)	O
;	O
mpn_sub_n	O
(	O
r4	O
,	O
r2	O
,	O
r4	O
,	O
n3p1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_rshift	O
(	O
r4	O
,	O
r4	O
,	O
n3p1	long
,	O
1	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r2	O
,	O
r2	O
,	O
r4	O
,	O
n3p1	long
)	O
)	O
;	O
mpn_add_n	O
(	O
r5	pointer
,	O
r5	pointer
,	O
r1	pointer
,	O
n3p1	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_rshift	O
(	O
r5	pointer
,	O
r5	pointer
,	O
n3p1	long
,	O
1	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r3	pointer
,	O
r3	pointer
,	O
r1	pointer
,	O
n3p1	long
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r1	pointer
,	O
r1	pointer
,	O
r5	pointer
,	O
n3p1	long
)	O
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
pp	pointer
+	O
n	long
,	O
pp	pointer
+	O
n	long
,	O
r5	pointer
,	O
n	long
)	O
;	O
cy	long
=	O
mpn_add_1	O
(	O
pp	pointer
+	O
2	int
*	O
n	long
,	O
r5	pointer
+	O
n	long
,	O
n	long
,	O
cy	long
)	O
;	O
cy	long
=	O
r5	pointer
[	O
n3	long
]	O
+	O
mpn_add_nc	O
(	O
pp	pointer
+	O
n3	long
,	O
pp	pointer
+	O
n3	long
,	O
r5	pointer
+	O
2	int
*	O
n	long
,	O
n	long
,	O
cy	long
)	O
;	O
MPN_INCR_U	O
(	O
pp	pointer
+	O
n3	long
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
cy	long
)	O
;	O
pp	pointer
[	O
2	int
*	O
n3	long
]	O
+=	O
mpn_add_n	O
(	O
pp	pointer
+	O
5	int
*	O
n	long
,	O
pp	pointer
+	O
5	int
*	O
n	long
,	O
r3	pointer
,	O
n	long
)	O
;	O
cy	long
=	O
mpn_add_1	O
(	O
pp	pointer
+	O
2	int
*	O
n3	long
,	O
r3	pointer
+	O
n	long
,	O
n	long
,	O
pp	pointer
[	O
2	int
*	O
n3	long
]	O
)	O
;	O
cy	long
=	O
r3	pointer
[	O
n3	long
]	O
+	O
mpn_add_nc	O
(	O
pp	pointer
+	O
7	int
*	O
n	long
,	O
pp	pointer
+	O
7	int
*	O
n	long
,	O
r3	pointer
+	O
2	int
*	O
n	long
,	O
n	long
,	O
cy	long
)	O
;	O
MPN_INCR_U	O
(	O
pp	pointer
+	O
8	int
*	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
cy	long
)	O
;	O
pp	pointer
[	O
10	int
*	O
n	long
]	O
+=	O
mpn_add_n	O
(	O
pp	pointer
+	O
9	int
*	O
n	long
,	O
pp	pointer
+	O
9	int
*	O
n	long
,	O
r1	pointer
,	O
n	long
)	O
;	O
if	O
(	O
half	int
)	O
{	O
cy	long
=	O
mpn_add_1	O
(	O
pp	pointer
+	O
10	int
*	O
n	long
,	O
r1	pointer
+	O
n	long
,	O
n	long
,	O
pp	pointer
[	O
10	int
*	O
n	long
]	O
)	O
;	O
if	O
(	O
LIKELY	O
(	O
spt	long
>	O
n	long
)	O
)	O
{	O
cy	long
=	O
r1	pointer
[	O
n3	long
]	O
+	O
mpn_add_nc	O
(	O
pp	pointer
+	O
11	int
*	O
n	long
,	O
pp	pointer
+	O
11	int
*	O
n	long
,	O
r1	pointer
+	O
2	int
*	O
n	long
,	O
n	long
,	O
cy	long
)	O
;	O
MPN_INCR_U	O
(	O
pp	pointer
+	O
4	int
*	O
n3	long
,	O
spt	long
-	O
n	long
,	O
cy	long
)	O
;	O
}	O
else	O
{	O
ASSERT_NOCARRY	O
(	O
mpn_add_nc	O
(	O
pp	pointer
+	O
11	int
*	O
n	long
,	O
pp	pointer
+	O
11	int
*	O
n	long
,	O
r1	pointer
+	O
2	int
*	O
n	long
,	O
spt	long
,	O
cy	long
)	O
)	O
;	O
}	O
}	O
else	O
{	O
ASSERT_NOCARRY	O
(	O
mpn_add_1	O
(	O
pp	pointer
+	O
10	int
*	O
n	long
,	O
r1	pointer
+	O
n	long
,	O
spt	long
,	O
pp	pointer
[	O
10	int
*	O
n	long
]	O
)	O
)	O
;	O
}	O
}	O
