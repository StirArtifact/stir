struct	O
instream_file	struct
{	O
struct	O
instream	struct
base	struct
;	O
FILE	struct
*	O
fp	pointer
;	O
dev_t	long
dev	long
;	O
ino_t	long
ino	long
;	O
}	O
;	O
static	O
ssize_t	long
instream_file_read	function
(	O
instream_t	pointer
istr	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	int
)	O
{	O
struct	O
instream_file	struct
*	O
file	pointer
=	O
(	O
struct	O
instream_file	struct
*	O
)	O
istr	pointer
;	O
return	O
fread	function
(	O
buf	pointer
,	O
1	int
,	O
size	int
,	O
file	pointer
->	O
fp	pointer
)	O
;	O
}	O
static	O
void	O
instream_file_close	function
(	O
instream_t	pointer
istr	pointer
)	O
{	O
struct	O
instream_file	struct
*	O
file	pointer
=	O
(	O
struct	O
instream_file	struct
*	O
)	O
istr	pointer
;	O
fclose	function
(	O
file	pointer
->	O
fp	pointer
)	O
;	O
free	function
(	O
file	pointer
->	O
base	struct
.	O
in_name	pointer
)	O
;	O
free	function
(	O
file	pointer
)	O
;	O
}	O
static	O
int	O
instream_file_eq	function
(	O
instream_t	pointer
a	array
,	O
instream_t	pointer
b	array
)	O
{	O
struct	O
instream_file	struct
*	O
file_a	pointer
=	O
(	O
struct	O
instream_file	struct
*	O
)	O
a	array
;	O
struct	O
instream_file	struct
*	O
file_b	pointer
=	O
(	O
struct	O
instream_file	struct
*	O
)	O
b	array
;	O
return	O
file_a	pointer
->	O
dev	long
==	O
file_b	pointer
->	O
dev	long
&&	O
file_a	pointer
->	O
ino	long
==	O
file_b	pointer
->	O
ino	long
;	O
}	O
instream_t	pointer
instream_file_create	function
(	O
char	O
const	O
*	O
name	pointer
)	O
{	O
struct	O
instream_file	struct
*	O
istr	pointer
;	O
struct	O
stat	struct
st	struct
;	O
FILE	struct
*	O
fp	pointer
;	O
if	O
(	O
stat	struct
(	O
name	pointer
,	O
&	O
st	struct
)	O
)	O
{	O
terror	function
(	O
_	O
(	O
"cannot open `%s': %s"	pointer
)	O
,	O
name	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
else	O
if	O
(	O
!	O
S_ISREG	O
(	O
st	struct
.	O
st_mode	int
)	O
)	O
{	O
terror	function
(	O
_	O
(	O
"%s is not a regular file"	pointer
)	O
,	O
name	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
fp	pointer
=	O
fopen	function
(	O
name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
{	O
terror	function
(	O
_	O
(	O
"cannot open %s for reading: %s"	pointer
)	O
,	O
name	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
istr	pointer
=	O
emalloc	function
(	O
sizeof	O
*	O
istr	pointer
)	O
;	O
istr	pointer
->	O
base	struct
.	O
in_name	pointer
=	O
estrdup	function
(	O
name	pointer
)	O
;	O
istr	pointer
->	O
base	struct
.	O
in_inter	int
=	O
0	int
;	O
istr	pointer
->	O
base	struct
.	O
in_read	pointer
=	O
instream_file_read	function
;	O
istr	pointer
->	O
base	struct
.	O
in_close	pointer
=	O
instream_file_close	function
;	O
istr	pointer
->	O
base	struct
.	O
in_eq	pointer
=	O
instream_file_eq	function
;	O
istr	pointer
->	O
fp	pointer
=	O
fp	pointer
;	O
istr	pointer
->	O
dev	long
=	O
st	struct
.	O
st_dev	long
;	O
istr	pointer
->	O
ino	long
=	O
st	struct
.	O
st_ino	long
;	O
return	O
(	O
instream_t	pointer
)	O
istr	pointer
;	O
}	O
