gsl_wavelet	struct
*	O
gsl_wavelet_alloc	function
(	O
const	O
gsl_wavelet_type	struct
*	O
T	pointer
,	O
size_t	long
k	long
)	O
{	O
int	O
status	int
;	O
gsl_wavelet	struct
*	O
w	pointer
=	O
(	O
gsl_wavelet	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_wavelet	struct
)	O
)	O
;	O
if	O
(	O
w	pointer
==	O
NULL	O
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for wavelet struct"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
;	O
w	pointer
->	O
type	pointer
=	O
T	pointer
;	O
status	int
=	O
(	O
T	pointer
->	O
init	pointer
)	O
(	O
&	O
(	O
w	pointer
->	O
h1	pointer
)	O
,	O
&	O
(	O
w	pointer
->	O
g1	pointer
)	O
,	O
&	O
(	O
w	pointer
->	O
h2	pointer
)	O
,	O
&	O
(	O
w	pointer
->	O
g2	pointer
)	O
,	O
&	O
(	O
w	pointer
->	O
nc	pointer
)	O
,	O
&	O
(	O
w	pointer
->	O
offset	pointer
)	O
,	O
k	long
)	O
;	O
if	O
(	O
status	int
)	O
{	O
free	function
(	O
w	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"invalid wavelet member"	pointer
,	O
GSL_EINVAL	int
,	O
0	int
)	O
;	O
}	O
return	O
w	pointer
;	O
}	O
void	O
gsl_wavelet_free	function
(	O
gsl_wavelet	struct
*	O
w	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
w	pointer
)	O
;	O
free	function
(	O
w	pointer
)	O
;	O
}	O
const	O
char	O
*	O
gsl_wavelet_name	function
(	O
const	O
gsl_wavelet	struct
*	O
w	pointer
)	O
{	O
return	O
w	pointer
->	O
type	pointer
->	O
name	pointer
;	O
}	O
gsl_wavelet_workspace	struct
*	O
gsl_wavelet_workspace_alloc	function
(	O
size_t	long
n	long
)	O
{	O
gsl_wavelet_workspace	struct
*	O
work	pointer
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"length n must be positive integer"	pointer
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
work	pointer
=	O
(	O
gsl_wavelet_workspace	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_wavelet_workspace	struct
)	O
)	O
;	O
if	O
(	O
work	pointer
==	O
NULL	O
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate struct"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
work	pointer
->	O
n	long
=	O
n	long
;	O
work	pointer
->	O
scratch	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
n	long
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
work	pointer
->	O
scratch	pointer
==	O
NULL	O
)	O
{	O
free	function
(	O
work	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate scratch space"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
return	O
work	pointer
;	O
}	O
void	O
gsl_wavelet_workspace_free	function
(	O
gsl_wavelet_workspace	struct
*	O
work	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
work	pointer
)	O
;	O
free	function
(	O
work	pointer
->	O
scratch	pointer
)	O
;	O
work	pointer
->	O
scratch	pointer
=	O
NULL	O
;	O
free	function
(	O
work	pointer
)	O
;	O
}	O
