int	O
wget_strcmp	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
)	O
{	O
if	O
(	O
!	O
s1	pointer
)	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
1	int
;	O
else	O
return	O
strcmp	function
(	O
s1	pointer
,	O
s2	pointer
)	O
;	O
}	O
}	O
int	O
wget_strcasecmp	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
)	O
{	O
if	O
(	O
!	O
s1	pointer
)	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
1	int
;	O
else	O
return	O
strcasecmp	function
(	O
s1	pointer
,	O
s2	pointer
)	O
;	O
}	O
}	O
int	O
wget_strcasecmp_ascii	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
)	O
{	O
if	O
(	O
!	O
s1	pointer
)	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
1	int
;	O
else	O
return	O
c_strcasecmp	function
(	O
s1	pointer
,	O
s2	pointer
)	O
;	O
}	O
}	O
int	O
wget_strncasecmp_ascii	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
s1	pointer
)	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
1	int
;	O
else	O
return	O
c_strncasecmp	function
(	O
s1	pointer
,	O
s2	pointer
,	O
n	long
)	O
;	O
}	O
}	O
char	O
*	O
wget_strtolower	function
(	O
char	O
*	O
s	long
)	O
{	O
if	O
(	O
s	long
)	O
{	O
for	O
(	O
char	O
*	O
d	pointer
=	O
s	long
;	O
*	O
d	pointer
;	O
d	pointer
++	O
)	O
{	O
if	O
(	O
c_isupper	function
(	O
*	O
d	pointer
)	O
)	O
*	O
d	pointer
=	O
(	O
char	O
)	O
c_tolower	function
(	O
*	O
d	pointer
)	O
;	O
}	O
}	O
return	O
s	long
;	O
}	O
int	O
wget_strncmp	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
s1	pointer
)	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
1	int
;	O
else	O
return	O
strncmp	function
(	O
s1	pointer
,	O
s2	pointer
,	O
n	long
)	O
;	O
}	O
}	O
int	O
wget_strncasecmp	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
s1	pointer
)	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
1	int
;	O
else	O
return	O
strncasecmp	function
(	O
s1	pointer
,	O
s2	pointer
,	O
n	long
)	O
;	O
}	O
}	O
void	O
wget_memtohex	function
(	O
const	O
unsigned	O
char	O
*	O
src	pointer
,	O
size_t	long
src_len	long
,	O
char	O
*	O
dst	pointer
,	O
size_t	long
dst_size	long
)	O
{	O
size_t	long
it	long
;	O
int	O
adjust	int
=	O
0	int
,	O
c	int
;	O
if	O
(	O
dst_size	long
==	O
0	int
||	O
!	O
dst	pointer
||	O
!	O
src	pointer
)	O
return	O
;	O
if	O
(	O
src_len	long
*	O
2	int
>=	O
dst_size	long
)	O
{	O
src_len	long
=	O
(	O
dst_size	long
-	O
1	int
)	O
/	O
2	int
;	O
adjust	int
=	O
1	int
;	O
}	O
for	O
(	O
it	long
=	O
0	int
;	O
it	long
<	O
src_len	long
;	O
it	long
++	O
,	O
src	pointer
++	O
)	O
{	O
*	O
dst	pointer
++	O
=	O
(	O
char	O
)	O
(	O
(	O
c	int
=	O
(	O
*	O
src	pointer
>>	O
4	int
)	O
)	O
>=	O
10	int
?	O
c	int
+	O
'a'	O
-	O
10	int
:	O
c	int
+	O
'0'	O
)	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
char	O
)	O
(	O
(	O
c	int
=	O
(	O
*	O
src	pointer
&	O
0xf	int
)	O
)	O
>=	O
10	int
?	O
c	int
+	O
'a'	O
-	O
10	int
:	O
c	int
+	O
'0'	O
)	O
;	O
}	O
if	O
(	O
adjust	int
&&	O
(	O
dst_size	long
&	O
1	int
)	O
==	O
0	int
)	O
*	O
dst	pointer
++	O
=	O
(	O
char	O
)	O
(	O
(	O
c	int
=	O
(	O
*	O
src	pointer
>>	O
4	int
)	O
)	O
>=	O
10	int
?	O
c	int
+	O
'a'	O
-	O
10	int
:	O
c	int
+	O
'0'	O
)	O
;	O
*	O
dst	pointer
=	O
0	int
;	O
}	O
void	O
wget_millisleep	function
(	O
int	O
ms	int
)	O
{	O
if	O
(	O
ms	int
<=	O
0	int
)	O
return	O
;	O
nanosleep	function
(	O
&	O
(	O
struct	O
timespec	struct
)	O
{	O
.	O
tv_sec	long
=	O
ms	int
/	O
1000	int
,	O
.	O
tv_nsec	long
=	O
(	O
ms	int
%	O
1000	int
)	O
*	O
1000000	int
}	O
,	O
NULL	O
)	O
;	O
}	O
long	O
long	O
wget_get_timemillis	function
(	O
void	O
)	O
{	O
struct	O
timespec	struct
ts	struct
;	O
gettime	function
(	O
&	O
ts	struct
)	O
;	O
return	O
ts	struct
.	O
tv_sec	long
*	O
1000LL	int
+	O
ts	struct
.	O
tv_nsec	long
/	O
1000000	int
;	O
}	O
WGET_GCC_CONST	O
static	O
unsigned	O
char	O
_unhex	function
(	O
unsigned	O
char	O
c	int
)	O
{	O
return	O
c	int
<=	O
'9'	O
?	O
c	int
-	O
'0'	O
:	O
(	O
c	int
<=	O
'F'	O
?	O
c	int
-	O
'A'	O
+	O
10	int
:	O
c	int
-	O
'a'	O
+	O
10	int
)	O
;	O
}	O
int	O
wget_percent_unescape	function
(	O
char	O
*	O
src	pointer
)	O
{	O
int	O
ret	int
=	O
0	int
;	O
unsigned	O
char	O
*	O
s	long
=	O
(	O
unsigned	O
char	O
*	O
)	O
src	pointer
;	O
unsigned	O
char	O
*	O
d	pointer
=	O
s	long
;	O
while	O
(	O
*	O
s	long
)	O
{	O
if	O
(	O
*	O
s	long
==	O
'%'	O
)	O
{	O
if	O
(	O
c_isxdigit	function
(	O
s	long
[	O
1	int
]	O
)	O
&&	O
c_isxdigit	function
(	O
s	long
[	O
2	int
]	O
)	O
)	O
{	O
*	O
d	pointer
++	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
_unhex	function
(	O
s	long
[	O
1	int
]	O
)	O
<<	O
4	int
)	O
|	O
_unhex	function
(	O
s	long
[	O
2	int
]	O
)	O
;	O
s	long
+=	O
3	int
;	O
ret	int
=	O
1	int
;	O
continue	O
;	O
}	O
}	O
*	O
d	pointer
++	O
=	O
*	O
s	long
++	O
;	O
}	O
*	O
d	pointer
=	O
0	int
;	O
return	O
ret	int
;	O
}	O
int	O
wget_match_tail	function
(	O
const	O
char	O
*	O
s	long
,	O
const	O
char	O
*	O
tail	pointer
)	O
{	O
size_t	long
s_len	long
,	O
tail_len	long
;	O
if	O
(	O
(	O
s_len	long
=	O
strlen	function
(	O
s	long
)	O
)	O
<	O
(	O
tail_len	long
=	O
strlen	function
(	O
tail	pointer
)	O
)	O
)	O
return	O
0	int
;	O
const	O
char	O
*	O
p	pointer
=	O
s	long
+	O
(	O
s_len	long
-	O
tail_len	long
)	O
;	O
return	O
!	O
strcmp	function
(	O
p	pointer
,	O
tail	pointer
)	O
;	O
}	O
int	O
wget_match_tail_nocase	function
(	O
const	O
char	O
*	O
s	long
,	O
const	O
char	O
*	O
tail	pointer
)	O
{	O
size_t	long
s_len	long
,	O
tail_len	long
;	O
if	O
(	O
(	O
s_len	long
=	O
strlen	function
(	O
s	long
)	O
)	O
<	O
(	O
tail_len	long
=	O
strlen	function
(	O
tail	pointer
)	O
)	O
)	O
return	O
0	int
;	O
const	O
char	O
*	O
p	pointer
=	O
s	long
+	O
(	O
s_len	long
-	O
tail_len	long
)	O
;	O
return	O
!	O
wget_strcasecmp_ascii	function
(	O
p	pointer
,	O
tail	pointer
)	O
;	O
}	O
char	O
*	O
wget_strnglob	function
(	O
const	O
char	O
*	O
str	pointer
,	O
size_t	long
n	long
,	O
int	O
flags	int
)	O
{	O
glob_t	struct
pglob	struct
;	O
char	O
*	O
expanded_str	pointer
=	O
NULL	O
;	O
char	O
*	O
globstr	pointer
=	O
wget_strmemdup	function
(	O
str	pointer
,	O
n	long
)	O
;	O
if	O
(	O
!	O
globstr	pointer
)	O
return	O
NULL	O
;	O
if	O
(	O
glob	function
(	O
globstr	pointer
,	O
flags	int
,	O
NULL	O
,	O
&	O
pglob	struct
)	O
==	O
0	int
)	O
{	O
if	O
(	O
pglob	struct
.	O
gl_pathc	long
>	O
0	int
)	O
{	O
expanded_str	pointer
=	O
wget_aprintf	function
(	O
"%s%s"	pointer
,	O
pglob	struct
.	O
gl_pathv	pointer
[	O
0	int
]	O
,	O
str	pointer
+	O
n	long
)	O
;	O
}	O
globfree	function
(	O
&	O
pglob	struct
)	O
;	O
}	O
xfree	O
(	O
globstr	pointer
)	O
;	O
return	O
expanded_str	pointer
;	O
}	O
char	O
*	O
wget_human_readable	function
(	O
char	O
*	O
buf	pointer
,	O
size_t	long
bufsize	long
,	O
uint64_t	long
n	long
)	O
{	O
static	O
const	O
char	O
powers	array
[	O
]	O
=	O
{	O
'K'	O
,	O
'M'	O
,	O
'G'	O
,	O
'T'	O
,	O
'P'	O
,	O
'E'	O
,	O
'Z'	O
,	O
'Y'	O
,	O
}	O
;	O
if	O
(	O
n	long
<	O
1024	int
)	O
{	O
wget_snprintf	function
(	O
buf	pointer
,	O
bufsize	long
,	O
"%u "	pointer
,	O
(	O
unsigned	O
int	O
)	O
n	long
)	O
;	O
return	O
buf	pointer
;	O
}	O
for	O
(	O
unsigned	O
i	int
=	O
0	int
;	O
i	int
<	O
countof	O
(	O
powers	array
)	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
n	long
/	O
1024	int
)	O
<	O
1024	int
||	O
i	int
==	O
countof	O
(	O
powers	array
)	O
-	O
1	int
)	O
{	O
double	O
val	pointer
=	O
n	long
/	O
1024.0	int
;	O
if	O
(	O
val	pointer
<	O
1000	int
)	O
wget_snprintf	function
(	O
buf	pointer
,	O
bufsize	long
,	O
"%d.%02d%c"	pointer
,	O
(	O
int	O
)	O
val	pointer
,	O
(	O
(	O
int	O
)	O
(	O
val	pointer
*	O
100	int
)	O
)	O
%	O
100	int
,	O
powers	array
[	O
i	int
]	O
)	O
;	O
else	O
wget_snprintf	function
(	O
buf	pointer
,	O
bufsize	long
,	O
"%d%c"	pointer
,	O
(	O
int	O
)	O
(	O
val	pointer
+	O
.5	int
)	O
,	O
powers	array
[	O
i	int
]	O
)	O
;	O
return	O
buf	pointer
;	O
}	O
n	long
/=	O
1024	int
;	O
}	O
return	O
NULL	O
;	O
}	O
int	O
wget_get_screen_size	function
(	O
int	O
*	O
width	pointer
,	O
int	O
*	O
height	pointer
)	O
{	O
struct	O
winsize	struct
wsz	struct
;	O
int	O
fd	array
=	O
fileno	function
(	O
stderr	pointer
)	O
;	O
if	O
(	O
ioctl	function
(	O
fd	array
,	O
TIOCGWINSZ	int
,	O
&	O
wsz	struct
)	O
>=	O
0	int
)	O
{	O
if	O
(	O
width	pointer
)	O
*	O
width	pointer
=	O
wsz	struct
.	O
ws_col	short
;	O
if	O
(	O
height	pointer
)	O
*	O
height	pointer
=	O
wsz	struct
.	O
ws_row	short
;	O
return	O
0	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
