static	O
struct	O
mu_conf_option	struct
mu_conf_option	struct
[	O
]	O
=	O
{	O
{	O
"VERSION="	pointer
VERSION	pointer
,	O
N_	O
(	O
"Version of this package"	pointer
)	O
}	O
,	O
{	O
"SYSCONFDIR="	pointer
SYSCONFDIR	O
,	O
N_	O
(	O
"System configuration directory"	pointer
)	O
}	O
,	O
{	O
"MAILSPOOLDIR="	pointer
MU_PATH_MAILDIR	O
,	O
N_	O
(	O
"Default mail spool directory"	pointer
)	O
}	O
,	O
{	O
"SCHEME="	pointer
MU_DEFAULT_SCHEME	pointer
,	O
N_	O
(	O
"Default mailbox type"	pointer
)	O
}	O
,	O
{	O
"LOG_FACILITY="	pointer
LOG_FACILITY_STRING	pointer
,	O
N_	O
(	O
"Default syslog facility"	pointer
)	O
}	O
,	O
{	O
"IPV6"	pointer
,	O
N_	O
(	O
"IPv6 support"	pointer
)	O
}	O
,	O
{	O
"WITH_PTHREAD"	pointer
,	O
N_	O
(	O
"Support for POSIX threads"	pointer
)	O
}	O
,	O
{	O
"ENABLE_VIRTUAL_DOMAINS"	pointer
,	O
N_	O
(	O
"Support for virtual mail domains"	pointer
)	O
}	O
,	O
{	O
"ENABLE_IMAP"	pointer
,	O
N_	O
(	O
"IMAP4 protocol support"	pointer
)	O
}	O
,	O
{	O
"ENABLE_POP"	pointer
,	O
N_	O
(	O
"POP3 protocol support"	pointer
)	O
}	O
,	O
{	O
"ENABLE_MH"	pointer
,	O
N_	O
(	O
"MH mail storage support"	pointer
)	O
}	O
,	O
{	O
"ENABLE_MAILDIR"	pointer
,	O
N_	O
(	O
"Maildir mail storage support"	pointer
)	O
}	O
,	O
{	O
"ENABLE_SMTP"	pointer
,	O
N_	O
(	O
"SMTP protocol support"	pointer
)	O
}	O
,	O
{	O
"ENABLE_SENDMAIL"	pointer
,	O
N_	O
(	O
"Sendmail command line interface support"	pointer
)	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
void	O
mu_format_conf_option	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
const	O
struct	O
mu_conf_option	struct
*	O
opt	pointer
,	O
int	O
verbose	int
)	O
{	O
mu_stream_printf	function
(	O
stream	pointer
,	O
"%s"	pointer
,	O
opt	pointer
->	O
name	pointer
)	O
;	O
if	O
(	O
verbose	int
&&	O
opt	pointer
->	O
descr	pointer
)	O
mu_stream_printf	function
(	O
stream	pointer
,	O
" \t- %s"	pointer
,	O
_	O
(	O
opt	pointer
->	O
descr	pointer
)	O
)	O
;	O
mu_stream_printf	function
(	O
stream	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
void	O
mu_format_options	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
int	O
verbose	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
;	O
i	int
++	O
)	O
mu_format_conf_option	function
(	O
stream	pointer
,	O
mu_conf_option	struct
+	O
i	int
,	O
verbose	int
)	O
;	O
}	O
void	O
mu_print_options	function
(	O
)	O
{	O
if	O
(	O
mu_strout	pointer
)	O
mu_stream_ref	function
(	O
mu_strout	pointer
)	O
;	O
else	O
{	O
int	O
yes	int
=	O
1	int
;	O
int	O
rc	int
=	O
mu_stdio_stream_create	function
(	O
&	O
mu_strout	pointer
,	O
MU_STDOUT_FD	int
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"mu_stdio_stream_create(%d): %s\n"	pointer
,	O
MU_STDOUT_FD	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
mu_stream_ioctl	function
(	O
mu_strout	pointer
,	O
MU_IOCTL_FD	int
,	O
MU_IOCTL_FD_SET_BORROW	int
,	O
&	O
yes	int
)	O
;	O
}	O
mu_format_options	function
(	O
mu_strout	pointer
,	O
1	int
)	O
;	O
mu_stream_unref	function
(	O
mu_strout	pointer
)	O
;	O
}	O
const	O
struct	O
mu_conf_option	struct
*	O
mu_check_option	function
(	O
char	O
*	O
name	pointer
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
;	O
i	int
++	O
)	O
{	O
int	O
len	int
;	O
char	O
*	O
q	pointer
,	O
*	O
p	pointer
=	O
strchr	function
(	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
,	O
'='	O
)	O
;	O
if	O
(	O
p	pointer
)	O
len	int
=	O
p	pointer
-	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
;	O
else	O
len	int
=	O
strlen	function
(	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
)	O
;	O
if	O
(	O
mu_c_strncasecmp	function
(	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
,	O
name	pointer
,	O
len	int
)	O
==	O
0	int
)	O
return	O
&	O
mu_conf_option	struct
[	O
i	int
]	O
;	O
else	O
if	O
(	O
(	O
q	pointer
=	O
strchr	function
(	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
,	O
'_'	O
)	O
)	O
!=	O
NULL	O
&&	O
mu_c_strncasecmp	function
(	O
q	pointer
+	O
1	int
,	O
name	pointer
,	O
len	int
-	O
(	O
q	pointer
-	O
mu_conf_option	struct
[	O
i	int
]	O
.	O
name	pointer
)	O
-	O
1	int
)	O
==	O
0	int
)	O
return	O
&	O
mu_conf_option	struct
[	O
i	int
]	O
;	O
}	O
return	O
NULL	O
;	O
}	O
