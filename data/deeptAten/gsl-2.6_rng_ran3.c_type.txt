static	O
inline	O
unsigned	O
long	O
int	O
ran3_get	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
double	O
ran3_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
void	O
ran3_set	function
(	O
void	O
*	O
state	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
;	O
typedef	O
struct	O
{	O
unsigned	O
int	O
x	double
;	O
unsigned	O
int	O
y	int
;	O
unsigned	O
long	O
int	O
buffer	array
[	O
56	int
]	O
;	O
}	O
ran3_state_t	struct
;	O
static	O
inline	O
unsigned	O
long	O
int	O
ran3_get	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
ran3_state_t	struct
*	O
state	pointer
=	O
(	O
ran3_state_t	struct
*	O
)	O
vstate	pointer
;	O
long	O
int	O
j	long
;	O
state	pointer
->	O
x	double
++	O
;	O
if	O
(	O
state	pointer
->	O
x	double
==	O
56	int
)	O
state	pointer
->	O
x	double
=	O
1	int
;	O
state	pointer
->	O
y	int
++	O
;	O
if	O
(	O
state	pointer
->	O
y	int
==	O
56	int
)	O
state	pointer
->	O
y	int
=	O
1	int
;	O
j	long
=	O
state	pointer
->	O
buffer	array
[	O
state	pointer
->	O
x	double
]	O
-	O
state	pointer
->	O
buffer	array
[	O
state	pointer
->	O
y	int
]	O
;	O
if	O
(	O
j	long
<	O
0	int
)	O
j	long
+=	O
M_BIG	int
;	O
state	pointer
->	O
buffer	array
[	O
state	pointer
->	O
x	double
]	O
=	O
j	long
;	O
return	O
j	long
;	O
}	O
static	O
double	O
ran3_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
return	O
ran3_get	function
(	O
vstate	pointer
)	O
/	O
(	O
double	O
)	O
M_BIG	int
;	O
}	O
static	O
void	O
ran3_set	function
(	O
void	O
*	O
vstate	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
{	O
ran3_state_t	struct
*	O
state	pointer
=	O
(	O
ran3_state_t	struct
*	O
)	O
vstate	pointer
;	O
int	O
i	int
,	O
i1	int
;	O
long	O
int	O
j	long
,	O
k	long
;	O
if	O
(	O
s	long
==	O
0	int
)	O
s	long
=	O
1	int
;	O
j	long
=	O
(	O
M_SEED	int
-	O
s	long
)	O
%	O
M_BIG	int
;	O
if	O
(	O
j	long
<	O
0	int
)	O
j	long
+=	O
M_BIG	int
;	O
state	pointer
->	O
buffer	array
[	O
0	int
]	O
=	O
0	int
;	O
state	pointer
->	O
buffer	array
[	O
55	int
]	O
=	O
j	long
;	O
k	long
=	O
1	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
55	int
;	O
i	int
++	O
)	O
{	O
int	O
n	long
=	O
(	O
21	int
*	O
i	int
)	O
%	O
55	int
;	O
state	pointer
->	O
buffer	array
[	O
n	long
]	O
=	O
k	long
;	O
k	long
=	O
j	long
-	O
k	long
;	O
if	O
(	O
k	long
<	O
0	int
)	O
k	long
+=	O
M_BIG	int
;	O
j	long
=	O
state	pointer
->	O
buffer	array
[	O
n	long
]	O
;	O
}	O
for	O
(	O
i1	int
=	O
0	int
;	O
i1	int
<	O
4	int
;	O
i1	int
++	O
)	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
56	int
;	O
i	int
++	O
)	O
{	O
long	O
int	O
t	long
=	O
state	pointer
->	O
buffer	array
[	O
i	int
]	O
-	O
state	pointer
->	O
buffer	array
[	O
1	int
+	O
(	O
i	int
+	O
30	int
)	O
%	O
55	int
]	O
;	O
if	O
(	O
t	long
<	O
0	int
)	O
t	long
+=	O
M_BIG	int
;	O
state	pointer
->	O
buffer	array
[	O
i	int
]	O
=	O
t	long
;	O
}	O
}	O
state	pointer
->	O
x	double
=	O
0	int
;	O
state	pointer
->	O
y	int
=	O
31	int
;	O
return	O
;	O
}	O
static	O
const	O
gsl_rng_type	struct
ran3_type	struct
=	O
{	O
"ran3"	pointer
,	O
M_BIG	int
,	O
0	int
,	O
sizeof	O
(	O
ran3_state_t	struct
)	O
,	O
&	O
ran3_set	function
,	O
&	O
ran3_get	function
,	O
&	O
ran3_get_double	function
}	O
;	O
const	O
gsl_rng_type	struct
*	O
gsl_rng_ran3	pointer
=	O
&	O
ran3_type	struct
;	O
