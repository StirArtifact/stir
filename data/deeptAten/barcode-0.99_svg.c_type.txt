int	O
Barcode_svg_print	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
FILE	struct
*	O
f	pointer
)	O
{	O
int	O
i	int
,	O
j	int
,	O
barlen	int
,	O
printable	int
=	O
1	int
;	O
double	O
f1	double
,	O
f2	double
,	O
fsav	double
=	O
0	int
;	O
int	O
mode	int
=	O
'-'	O
;	O
double	O
scalef	double
=	O
1	int
,	O
xpos	double
,	O
x0	double
,	O
y0	double
,	O
yr	double
;	O
char	O
*	O
ptr	pointer
;	O
char	O
c	char
;	O
if	O
(	O
!	O
bc	pointer
->	O
partial	pointer
||	O
!	O
bc	pointer
->	O
textinfo	pointer
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
barlen	int
=	O
bc	pointer
->	O
partial	pointer
[	O
0	int
]	O
-	O
'0'	O
;	O
for	O
(	O
ptr	pointer
=	O
bc	pointer
->	O
partial	pointer
+	O
1	int
;	O
*	O
ptr	pointer
;	O
ptr	pointer
++	O
)	O
if	O
(	O
isdigit	function
(	O
*	O
ptr	pointer
)	O
)	O
barlen	int
+=	O
(	O
*	O
ptr	pointer
-	O
'0'	O
)	O
;	O
else	O
if	O
(	O
islower	function
(	O
*	O
ptr	pointer
)	O
)	O
barlen	int
+=	O
(	O
*	O
ptr	pointer
-	O
'a'	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
bc	pointer
->	O
scalef	double
)	O
{	O
if	O
(	O
!	O
bc	pointer
->	O
width	int
)	O
bc	pointer
->	O
width	int
=	O
barlen	int
;	O
scalef	double
=	O
bc	pointer
->	O
scalef	double
=	O
(	O
double	O
)	O
bc	pointer
->	O
width	int
/	O
(	O
double	O
)	O
barlen	int
;	O
}	O
if	O
(	O
!	O
bc	pointer
->	O
width	int
)	O
bc	pointer
->	O
width	int
=	O
barlen	int
*	O
scalef	double
+	O
1	int
;	O
if	O
(	O
bc	pointer
->	O
width	int
<	O
barlen	int
*	O
scalef	double
)	O
{	O
int	O
wid	int
=	O
barlen	int
*	O
scalef	double
+	O
1	int
;	O
bc	pointer
->	O
xoff	int
-=	O
(	O
wid	int
-	O
bc	pointer
->	O
width	int
)	O
/	O
2	int
;	O
bc	pointer
->	O
width	int
=	O
wid	int
;	O
if	O
(	O
bc	pointer
->	O
xoff	int
<	O
0	int
)	O
{	O
bc	pointer
->	O
width	int
+=	O
-	O
bc	pointer
->	O
xoff	int
;	O
bc	pointer
->	O
xoff	int
=	O
0	int
;	O
}	O
}	O
if	O
(	O
!	O
bc	pointer
->	O
height	int
)	O
bc	pointer
->	O
height	int
=	O
80	int
*	O
scalef	double
;	O
i	int
=	O
5	int
+	O
10	int
*	O
(	O
(	O
bc	pointer
->	O
flags	int
&	O
BARCODE_NO_ASCII	int
)	O
==	O
0	int
)	O
;	O
if	O
(	O
bc	pointer
->	O
height	int
<	O
i	int
*	O
scalef	double
)	O
{	O
double	O
scaleg	double
=	O
(	O
(	O
double	O
)	O
bc	pointer
->	O
height	int
)	O
/	O
i	int
;	O
int	O
wid	int
=	O
bc	pointer
->	O
width	int
*	O
scaleg	double
/	O
scalef	double
;	O
bc	pointer
->	O
xoff	int
+=	O
(	O
bc	pointer
->	O
width	int
-	O
wid	int
)	O
/	O
2	int
;	O
bc	pointer
->	O
width	int
=	O
wid	int
;	O
scalef	double
=	O
scaleg	double
;	O
}	O
int	O
global_width	int
=	O
bc	pointer
->	O
xoff	int
+	O
bc	pointer
->	O
width	int
+	O
2	int
*	O
bc	pointer
->	O
margin	int
;	O
int	O
global_height	int
=	O
bc	pointer
->	O
yoff	int
+	O
bc	pointer
->	O
height	int
+	O
2	int
*	O
bc	pointer
->	O
margin	int
;	O
fprintf	function
(	O
f	pointer
,	O
"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"	pointer
)	O
;	O
fprintf	function
(	O
f	pointer
,	O
"<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"%ipt\" height=\"%ipt\">\n"	pointer
,	O
global_width	int
,	O
global_height	int
)	O
;	O
fprintf	function
(	O
f	pointer
,	O
"<rect x=\"%ipt\" y=\"%ipt\" width=\"%ipt\" height=\"%ipt\" style=\"fill:#ffffff;fill-opacity:1\" />\n"	pointer
,	O
0	int
,	O
0	int
,	O
global_width	int
,	O
global_height	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
bc	pointer
->	O
ascii	pointer
[	O
i	int
]	O
;	O
i	int
++	O
)	O
if	O
(	O
bc	pointer
->	O
ascii	pointer
[	O
i	int
]	O
<	O
' '	O
)	O
printable	int
=	O
0	int
;	O
fprintf	function
(	O
f	pointer
,	O
"<!-- Printing barcode for \"%s\", scaled %5.2f"	pointer
,	O
printable	int
?	O
bc	pointer
->	O
ascii	pointer
:	O
"unprintable string"	pointer
,	O
scalef	double
)	O
;	O
if	O
(	O
bc	pointer
->	O
encoding	pointer
)	O
fprintf	function
(	O
f	pointer
,	O
", encoded using \"%s\""	pointer
,	O
bc	pointer
->	O
encoding	pointer
)	O
;	O
fprintf	function
(	O
f	pointer
,	O
" -->\n"	pointer
)	O
;	O
fprintf	function
(	O
f	pointer
,	O
"<!-- The space/bar succession is represented "	pointer
"by the following widths (space first): "	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
strlen	function
(	O
bc	pointer
->	O
partial	pointer
)	O
;	O
i	int
++	O
)	O
{	O
unsigned	O
char	O
c	char
=	O
bc	pointer
->	O
partial	pointer
[	O
i	int
]	O
;	O
if	O
(	O
isdigit	function
(	O
c	char
)	O
)	O
putc	function
(	O
c	char
,	O
f	pointer
)	O
;	O
if	O
(	O
islower	function
(	O
c	char
)	O
)	O
putc	function
(	O
c	char
-	O
'a'	O
+	O
'1'	O
,	O
f	pointer
)	O
;	O
if	O
(	O
isupper	function
(	O
c	char
)	O
)	O
putc	function
(	O
c	char
-	O
'A'	O
+	O
'1'	O
,	O
f	pointer
)	O
;	O
}	O
fprintf	function
(	O
f	pointer
,	O
" -->\n"	pointer
)	O
;	O
xpos	double
=	O
bc	pointer
->	O
margin	int
+	O
(	O
bc	pointer
->	O
partial	pointer
[	O
0	int
]	O
-	O
'0'	O
)	O
*	O
scalef	double
;	O
for	O
(	O
ptr	pointer
=	O
bc	pointer
->	O
partial	pointer
+	O
1	int
,	O
i	int
=	O
1	int
;	O
*	O
ptr	pointer
;	O
ptr	pointer
++	O
,	O
i	int
++	O
)	O
{	O
if	O
(	O
*	O
ptr	pointer
==	O
'+'	O
||	O
*	O
ptr	pointer
==	O
'-'	O
)	O
{	O
mode	int
=	O
*	O
ptr	pointer
;	O
i	int
++	O
;	O
continue	O
;	O
}	O
if	O
(	O
isdigit	function
(	O
*	O
ptr	pointer
)	O
)	O
j	int
=	O
*	O
ptr	pointer
-	O
'0'	O
;	O
else	O
j	int
=	O
*	O
ptr	pointer
-	O
'a'	O
+	O
1	int
;	O
if	O
(	O
i	int
%	O
2	int
)	O
{	O
x0	double
=	O
bc	pointer
->	O
xoff	int
+	O
xpos	double
+	O
(	O
j	int
*	O
scalef	double
)	O
/	O
2	int
;	O
y0	double
=	O
bc	pointer
->	O
yoff	int
+	O
bc	pointer
->	O
margin	int
;	O
yr	double
=	O
bc	pointer
->	O
height	int
;	O
if	O
(	O
!	O
(	O
bc	pointer
->	O
flags	int
&	O
BARCODE_NO_ASCII	int
)	O
)	O
{	O
if	O
(	O
mode	int
==	O
'-'	O
)	O
{	O
y0	double
+=	O
(	O
isdigit	function
(	O
*	O
ptr	pointer
)	O
?	O
10	int
:	O
5	int
)	O
*	O
scalef	double
;	O
yr	double
-=	O
(	O
isdigit	function
(	O
*	O
ptr	pointer
)	O
?	O
10	int
:	O
5	int
)	O
*	O
scalef	double
;	O
}	O
else	O
{	O
y0	double
+=	O
(	O
isdigit	function
(	O
*	O
ptr	pointer
)	O
?	O
10	int
:	O
0	int
)	O
*	O
scalef	double
;	O
yr	double
-=	O
(	O
isdigit	function
(	O
*	O
ptr	pointer
)	O
?	O
20	int
:	O
10	int
)	O
*	O
scalef	double
;	O
}	O
}	O
fprintf	function
(	O
f	pointer
,	O
"<line x1=\"%fpt\" y1=\"%fpt\" x2=\"%fpt\" y2=\"%fpt\" style=\"stroke:rgb(0,0,0);stroke-width:%fpt\" />\n"	pointer
,	O
x0	double
,	O
global_height	int
-	O
y0	double
,	O
x0	double
,	O
global_height	int
-	O
(	O
y0	double
+	O
yr	double
)	O
,	O
j	int
*	O
scalef	double
-	O
SHRINK_AMOUNT	int
)	O
;	O
}	O
xpos	double
+=	O
j	int
*	O
scalef	double
;	O
}	O
mode	int
=	O
'-'	O
;	O
if	O
(	O
!	O
(	O
bc	pointer
->	O
flags	int
&	O
BARCODE_NO_ASCII	int
)	O
)	O
{	O
for	O
(	O
ptr	pointer
=	O
bc	pointer
->	O
textinfo	pointer
;	O
ptr	pointer
;	O
ptr	pointer
=	O
strchr	function
(	O
ptr	pointer
,	O
' '	O
)	O
)	O
{	O
while	O
(	O
*	O
ptr	pointer
==	O
' '	O
)	O
ptr	pointer
++	O
;	O
if	O
(	O
!	O
*	O
ptr	pointer
)	O
break	O
;	O
if	O
(	O
*	O
ptr	pointer
==	O
'+'	O
||	O
*	O
ptr	pointer
==	O
'-'	O
)	O
{	O
mode	int
=	O
*	O
ptr	pointer
;	O
continue	O
;	O
}	O
if	O
(	O
sscanf	function
(	O
ptr	pointer
,	O
"%lf:%lf:%c"	pointer
,	O
&	O
f1	double
,	O
&	O
f2	double
,	O
&	O
c	char
)	O
!=	O
3	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"barcode: impossible data: %s\n"	pointer
,	O
ptr	pointer
)	O
;	O
continue	O
;	O
}	O
fprintf	function
(	O
f	pointer
,	O
"<text x=\"%fpt\" y=\"%fpt\" fill=\"black\" style=\"font-family:Helvetica;font-size:%dpt\">%c</text>\n"	pointer
,	O
bc	pointer
->	O
xoff	int
+	O
f1	double
*	O
scalef	double
+	O
bc	pointer
->	O
margin	int
,	O
global_height	int
-	O
(	O
mode	int
==	O
'-'	O
?	O
(	O
double	O
)	O
bc	pointer
->	O
yoff	int
+	O
bc	pointer
->	O
margin	int
:	O
(	O
double	O
)	O
bc	pointer
->	O
yoff	int
+	O
bc	pointer
->	O
margin	int
+	O
bc	pointer
->	O
height	int
-	O
8	int
*	O
scalef	double
)	O
,	O
(	O
int	O
)	O
(	O
f2	double
*	O
scalef	double
)	O
,	O
c	char
)	O
;	O
fsav	double
=	O
f2	double
;	O
}	O
}	O
fprintf	function
(	O
f	pointer
,	O
"<!-- End barcode for \"%s\" -->\n\n"	pointer
,	O
printable	int
?	O
bc	pointer
->	O
ascii	pointer
:	O
"unprintable string"	pointer
)	O
;	O
fprintf	function
(	O
f	pointer
,	O
"</svg>\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
