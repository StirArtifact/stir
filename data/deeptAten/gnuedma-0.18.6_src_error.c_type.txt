ESint32	long
EDMAPROC	O
edma_error	function
(	O
)	O
{	O
return	O
edma_last_error	long
;	O
}	O
static	O
jmp_buf	array
*	O
*	O
edma_cntx	pointer
=	O
NULL	O
;	O
ESint32	long
EDMAPROC	O
edma_exception_try	function
(	O
jmp_buf	array
*	O
env	pointer
)	O
{	O
edma_in_try_block	long
++	O
;	O
if	O
(	O
edma_cntx	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
(	O
edma_cntx	pointer
=	O
(	O
jmp_buf	array
*	O
*	O
)	O
edma_palloc	function
(	O
sizeof	O
(	O
jmp_buf	array
*	O
)	O
*	O
edma_in_try_block	long
)	O
)	O
==	O
0	int
)	O
{	O
edma_printf	function
(	O
"[edma_exception_try] Can't alloc context "	pointer
"exception table"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
edma_cntx	pointer
=	O
(	O
jmp_buf	array
*	O
*	O
)	O
edma_prealloc	function
(	O
(	O
HMEM	long
)	O
edma_cntx	pointer
,	O
sizeof	O
(	O
jmp_buf	array
*	O
)	O
*	O
edma_in_try_block	long
)	O
)	O
==	O
0	int
)	O
{	O
edma_printf	function
(	O
"[edma_exception_try] Can't realloc context "	pointer
"exception table"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
edma_cntx	pointer
[	O
edma_in_try_block	long
-	O
1	int
]	O
=	O
env	pointer
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_exception_throw	function
(	O
OBJID	long
val	long
)	O
{	O
if	O
(	O
edma_in_try_block	long
)	O
{	O
_edma_stack_execution_del_obj	function
(	O
val	long
)	O
;	O
longjmp	function
(	O
*	O
edma_cntx	pointer
[	O
edma_in_try_block	long
-	O
1	int
]	O
,	O
val	long
+	O
1	int
)	O
;	O
}	O
else	O
{	O
edma_met3	function
(	O
val	long
,	O
"brief"	pointer
)	O
;	O
edma_free_obj	function
(	O
val	long
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_exception_clean	function
(	O
OBJID	long
id	long
)	O
{	O
if	O
(	O
edma_in_try_block	long
)	O
{	O
edma_in_try_block	long
--	O
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
_edma_system_exception	function
(	O
EPChar	pointer
fmt	pointer
,	O
...	O
)	O
{	O
EChar	char
msg	array
[	O
1024	int
]	O
;	O
OBJID	long
eex	long
;	O
va_list	pointer
p	pointer
;	O
va_start	O
(	O
p	pointer
,	O
fmt	pointer
)	O
;	O
vsprintf	function
(	O
msg	array
,	O
fmt	pointer
,	O
p	pointer
)	O
;	O
eex	long
=	O
edma_new_obj	function
(	O
"EDMA_EXCEPTION"	pointer
)	O
;	O
edma_met3	function
(	O
eex	long
,	O
"set"	pointer
,	O
1	int
,	O
msg	array
)	O
;	O
edma_met3	function
(	O
eex	long
,	O
"throw"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
_edma_system_exception_clean	function
(	O
)	O
{	O
edma_in_try_block	long
=	O
0	int
;	O
free	function
(	O
edma_cntx	pointer
)	O
;	O
edma_cntx	pointer
=	O
0	int
;	O
return	O
0	int
;	O
}	O
