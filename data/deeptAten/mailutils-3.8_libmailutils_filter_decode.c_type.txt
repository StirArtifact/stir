enum	O
mu_iconv_fallback_mode	enum
mu_default_fallback_mode	enum
=	O
mu_fallback_copy_octal	int
;	O
int	O
mu_set_default_fallback	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
if	O
(	O
strcmp	function
(	O
str	pointer
,	O
"none"	pointer
)	O
==	O
0	int
)	O
mu_default_fallback_mode	enum
=	O
mu_fallback_none	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
str	pointer
,	O
"copy-pass"	pointer
)	O
==	O
0	int
)	O
mu_default_fallback_mode	enum
=	O
mu_fallback_copy_pass	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
str	pointer
,	O
"copy-octal"	pointer
)	O
==	O
0	int
)	O
mu_default_fallback_mode	enum
=	O
mu_fallback_copy_octal	int
;	O
else	O
return	O
EINVAL	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_decode_filter_args	function
(	O
mu_stream_t	pointer
*	O
pfilter	pointer
,	O
mu_stream_t	pointer
input	pointer
,	O
const	O
char	O
*	O
filter_name	pointer
,	O
int	O
argc	int
,	O
const	O
char	O
*	O
*	O
argv	pointer
,	O
const	O
char	O
*	O
fromcode	pointer
,	O
const	O
char	O
*	O
tocode	pointer
)	O
{	O
int	O
xargc	int
,	O
i	int
;	O
char	O
*	O
*	O
xargv	pointer
;	O
int	O
rc	int
;	O
xargc	int
=	O
argc	int
+	O
5	int
;	O
xargv	pointer
=	O
calloc	function
(	O
xargc	int
+	O
1	int
,	O
sizeof	O
(	O
xargv	pointer
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
xargv	pointer
)	O
return	O
ENOMEM	int
;	O
i	int
=	O
0	int
;	O
if	O
(	O
filter_name	pointer
)	O
xargv	pointer
[	O
i	int
++	O
]	O
=	O
(	O
char	O
*	O
)	O
filter_name	pointer
;	O
for	O
(	O
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
xargv	pointer
[	O
i	int
]	O
=	O
(	O
char	O
*	O
)	O
argv	pointer
[	O
i	int
]	O
;	O
if	O
(	O
i	int
)	O
xargv	pointer
[	O
i	int
++	O
]	O
=	O
"+"	pointer
;	O
xargv	pointer
[	O
i	int
++	O
]	O
=	O
"ICONV"	pointer
;	O
xargv	pointer
[	O
i	int
++	O
]	O
=	O
(	O
char	O
*	O
)	O
fromcode	pointer
;	O
xargv	pointer
[	O
i	int
++	O
]	O
=	O
(	O
char	O
*	O
)	O
tocode	pointer
;	O
xargv	pointer
[	O
i	int
]	O
=	O
NULL	O
;	O
rc	int
=	O
mu_filter_chain_create	function
(	O
pfilter	pointer
,	O
input	pointer
,	O
MU_FILTER_DECODE	int
,	O
MU_STREAM_READ	int
,	O
i	int
,	O
xargv	pointer
)	O
;	O
free	function
(	O
xargv	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_decode_filter	function
(	O
mu_stream_t	pointer
*	O
pfilter	pointer
,	O
mu_stream_t	pointer
input	pointer
,	O
const	O
char	O
*	O
filter_name	pointer
,	O
const	O
char	O
*	O
fromcode	pointer
,	O
const	O
char	O
*	O
tocode	pointer
)	O
{	O
return	O
mu_decode_filter_args	function
(	O
pfilter	pointer
,	O
input	pointer
,	O
filter_name	pointer
,	O
0	int
,	O
NULL	O
,	O
fromcode	pointer
,	O
tocode	pointer
)	O
;	O
}	O
