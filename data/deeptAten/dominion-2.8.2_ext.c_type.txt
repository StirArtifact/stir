Suser	struct
user	struct
;	O
Sworld	struct
world	struct
;	O
int	O
compressed_world	int
=	O
0	int
;	O
int	O
slow_flag	int
=	O
0	int
;	O
int	O
timeout_secs	int
=	O
0	int
;	O
struct	O
race_list	struct
*	O
races	pointer
;	O
int	O
total_army_types	int
;	O
struct	O
army_type	struct
*	O
army_types	pointer
;	O
struct	O
spirit_type	struct
*	O
spirit_types	pointer
;	O
Sh_spell	struct
*	O
hanging_spells	pointer
;	O
char	O
libdir	array
[	O
200	int
]	O
;	O
char	O
*	O
current_dir	pointer
;	O
int	O
ruid	int
,	O
euid	int
;	O
char	O
help_tag	array
[	O
EXECLEN	int
]	O
;	O
int	O
is_in_diplo	int
=	O
0	int
;	O
int	O
(	O
*	O
wrapx	pointer
)	O
(	O
)	O
;	O
int	O
(	O
*	O
wrapy	pointer
)	O
(	O
)	O
;	O
int	O
(	O
*	O
keymap	array
[	O
128	int
]	O
)	O
(	O
)	O
;	O
int	O
debug	int
=	O
0	int
;	O
struct	O
s_desig_map	struct
desig_map	array
[	O
]	O
=	O
{	O
{	O
'x'	O
,	O
"none"	pointer
,	O
1000	int
,	O
30	int
,	O
0	int
,	O
7	int
}	O
,	O
{	O
'f'	O
,	O
"farm"	pointer
,	O
5000	int
,	O
100	int
,	O
10	int
,	O
500	int
}	O
,	O
{	O
'm'	O
,	O
"mtl. mine"	pointer
,	O
10000	int
,	O
100	int
,	O
10	int
,	O
800	int
}	O
,	O
{	O
'j'	O
,	O
"jwl. mine"	pointer
,	O
10000	int
,	O
100	int
,	O
10	int
,	O
800	int
}	O
,	O
{	O
'c'	O
,	O
"city"	pointer
,	O
30000	int
,	O
200	int
,	O
300	int
,	O
5000	int
}	O
,	O
{	O
'C'	O
,	O
"capital"	pointer
,	O
50000	int
,	O
300	int
,	O
300	int
,	O
7000	int
}	O
,	O
{	O
'u'	O
,	O
"university"	pointer
,	O
10000	int
,	O
30	int
,	O
200	int
,	O
1000	int
}	O
,	O
{	O
'+'	O
,	O
"temple"	pointer
,	O
5000	int
,	O
0	int
,	O
200	int
,	O
1000	int
}	O
,	O
{	O
'T'	O
,	O
"town"	pointer
,	O
10000	int
,	O
150	int
,	O
10	int
,	O
300	int
}	O
,	O
{	O
'!'	O
,	O
"fort"	pointer
,	O
10000	int
,	O
50	int
,	O
10	int
,	O
200	int
}	O
,	O
{	O
'h'	O
,	O
"hospital"	pointer
,	O
10000	int
,	O
100	int
,	O
10	int
,	O
300	int
}	O
}	O
;	O
struct	O
s_altitude_map	struct
altitude_map	array
[	O
]	O
=	O
{	O
{	O
'v'	O
,	O
"Trench"	pointer
,	O
TRENCH	O
}	O
,	O
{	O
'-'	O
,	O
"Ocean Plain"	pointer
,	O
OCEAN_PLAINS	O
}	O
,	O
{	O
'^'	O
,	O
"Sea Mountain"	pointer
,	O
SEA_MOUNT	O
}	O
,	O
{	O
'+'	O
,	O
"Cont. Shelf"	pointer
,	O
CONT_SHELF	O
}	O
,	O
{	O
'#'	O
,	O
"Shallows"	pointer
,	O
SHALLOWS	O
}	O
,	O
{	O
'~'	O
,	O
"Sea Level"	pointer
,	O
SEA_LEVEL	int
}	O
,	O
{	O
'.'	O
,	O
"Lowlands"	pointer
,	O
LOWLANDS	int
}	O
,	O
{	O
'-'	O
,	O
"Plains"	pointer
,	O
PLAINS	int
}	O
,	O
{	O
'%'	O
,	O
"Hills"	pointer
,	O
HILLS	int
}	O
,	O
{	O
'='	O
,	O
"Plateau"	pointer
,	O
PLATEAU	int
}	O
,	O
{	O
'^'	O
,	O
"Mountains"	pointer
,	O
MOUNTAINS	int
}	O
,	O
{	O
'+'	O
,	O
"Mountain Peak"	pointer
,	O
MOUNTAIN_PEAK	int
}	O
}	O
;	O
struct	O
item_map	struct
terrains	array
[	O
]	O
=	O
{	O
{	O
'O'	O
,	O
"Ocean"	pointer
}	O
,	O
{	O
'B'	O
,	O
"Bay"	pointer
}	O
,	O
{	O
'R'	O
,	O
"Reef"	pointer
}	O
,	O
{	O
'L'	O
,	O
"Lake"	pointer
}	O
,	O
{	O
'R'	O
,	O
"River"	pointer
}	O
,	O
{	O
'#'	O
,	O
"Ice"	pointer
}	O
,	O
{	O
'b'	O
,	O
"Barren"	pointer
}	O
,	O
{	O
's'	O
,	O
"Swamped"	pointer
}	O
,	O
{	O
'g'	O
,	O
"Grassy"	pointer
}	O
,	O
{	O
'B'	O
,	O
"Brush"	pointer
}	O
,	O
{	O
'f'	O
,	O
"Forested"	pointer
}	O
,	O
{	O
'j'	O
,	O
"Jungle"	pointer
}	O
}	O
;	O
struct	O
item_map	struct
climates	array
[	O
]	O
=	O
{	O
{	O
'D'	O
,	O
"Desert"	pointer
}	O
,	O
{	O
'd'	O
,	O
"Semiarid"	pointer
}	O
,	O
{	O
'h'	O
,	O
"Humid Subtropical"	pointer
}	O
,	O
{	O
't'	O
,	O
"Tropical Wet and Dry"	pointer
}	O
,	O
{	O
'T'	O
,	O
"Rainy Tropical"	pointer
}	O
,	O
{	O
's'	O
,	O
"Dry Summer Subtropical"	pointer
}	O
,	O
{	O
'm'	O
,	O
"Mid-latitude Marine"	pointer
}	O
,	O
{	O
'w'	O
,	O
"Humid Continental Warm"	pointer
}	O
,	O
{	O
'c'	O
,	O
"Humid Continental Cool"	pointer
}	O
,	O
{	O
'a'	O
,	O
"Subarctic"	pointer
}	O
,	O
{	O
'A'	O
,	O
"Polar"	pointer
}	O
}	O
;	O
char	O
*	O
dip_status	array
[	O
]	O
=	O
{	O
" SELF"	pointer
,	O
" UNMET"	pointer
,	O
"JIHAD"	pointer
,	O
"WAR"	pointer
,	O
"HOSTILE"	pointer
,	O
"UNRECOGNIZED"	pointer
,	O
"NEUTRAL"	pointer
,	O
"RECOGNIZED"	pointer
,	O
"FRIENDLY"	pointer
,	O
"ALLIED"	pointer
,	O
"TREATY"	pointer
}	O
;	O
struct	O
item_map	struct
tradeitems	array
[	O
]	O
=	O
{	O
{	O
'g'	O
,	O
"GOLD"	pointer
}	O
,	O
{	O
'm'	O
,	O
"METAL"	pointer
}	O
,	O
{	O
'j'	O
,	O
"JEWELS"	pointer
}	O
,	O
{	O
'f'	O
,	O
"FOOD"	pointer
}	O
,	O
{	O
'e'	O
,	O
"END"	pointer
}	O
}	O
;	O
struct	O
army_flags	struct
army_flags	struct
[	O
]	O
=	O
{	O
{	O
'F'	O
,	O
"This army flies"	pointer
}	O
,	O
{	O
'H'	O
,	O
"This army is hidden"	pointer
}	O
,	O
{	O
'V'	O
,	O
"This army will possess the dead"	pointer
}	O
,	O
{	O
'T'	O
,	O
"This army is in transport"	pointer
}	O
,	O
{	O
'^'	O
,	O
"This army throws missiles"	pointer
}	O
,	O
{	O
'W'	O
,	O
"This army travels in water"	pointer
}	O
,	O
{	O
'f'	O
,	O
"This army is front line"	pointer
}	O
,	O
{	O
'k'	O
,	O
"This army is kamikaze"	pointer
}	O
,	O
{	O
'm'	O
,	O
"This army is a machine"	pointer
}	O
,	O
{	O
'd'	O
,	O
"This army can disguise itself"	pointer
}	O
,	O
{	O
'w'	O
,	O
"This army can cast spells"	pointer
}	O
,	O
{	O
's'	O
,	O
"This army can do sorcery"	pointer
}	O
,	O
{	O
'c'	O
,	O
"This army can carry cargo"	pointer
}	O
,	O
{	O
'U'	O
,	O
"This army burrows underground"	pointer
}	O
,	O
{	O
'L'	O
,	O
"This army travels on land"	pointer
}	O
,	O
{	O
'I'	O
,	O
""	pointer
}	O
,	O
{	O
'u'	O
,	O
"This army is uncontrolled"	pointer
}	O
,	O
{	O
'R'	O
,	O
"This army is race-specific"	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
,	O
{	O
' '	O
,	O
""	pointer
}	O
}	O
;	O
char	O
*	O
update_time	pointer
;	O
char	O
*	O
civ_move	array
[	O
]	O
=	O
{	O
"None"	pointer
,	O
"Restricted"	pointer
,	O
"Free"	pointer
}	O
;	O
Sh_spell	struct
*	O
dead_spells	pointer
=	O
NULL	O
;	O
Sdiplo	struct
*	O
*	O
initial_diplo	pointer
;	O
