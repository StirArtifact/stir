void	O
mpz_lucnum_ui	O
(	O
mpz_ptr	pointer
ln	pointer
,	O
unsigned	O
long	O
n	long
)	O
{	O
mp_size_t	long
lalloc	long
,	O
xalloc	long
,	O
lsize	long
,	O
xsize	long
;	O
mp_ptr	pointer
lp	pointer
,	O
xp	pointer
;	O
mp_limb_t	long
c	long
;	O
int	O
zeros	int
;	O
TMP_DECL	O
;	O
TRACE	O
(	O
printf	function
(	O
"mpn_lucnum_ui n=%lu\n"	pointer
,	O
n	long
)	O
)	O
;	O
if	O
(	O
n	long
<=	O
FIB_TABLE_LUCNUM_LIMIT	int
)	O
{	O
PTR	O
(	O
ln	pointer
)	O
[	O
0	int
]	O
=	O
FIB_TABLE	O
(	O
n	long
)	O
+	O
2	int
*	O
FIB_TABLE	O
(	O
(	O
int	O
)	O
n	long
-	O
1	int
)	O
;	O
SIZ	O
(	O
ln	pointer
)	O
=	O
1	int
;	O
return	O
;	O
}	O
lalloc	long
=	O
MPN_FIB2_SIZE	O
(	O
n	long
)	O
+	O
2	int
;	O
lp	pointer
=	O
MPZ_REALLOC	O
(	O
ln	pointer
,	O
lalloc	long
)	O
;	O
TMP_MARK	O
;	O
xalloc	long
=	O
lalloc	long
;	O
xp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
xalloc	long
)	O
;	O
zeros	int
=	O
0	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
n	long
&	O
1	int
)	O
{	O
mp_size_t	long
yalloc	long
,	O
ysize	long
;	O
mp_ptr	pointer
yp	pointer
;	O
TRACE	O
(	O
printf	function
(	O
"  initial odd n=%lu\n"	pointer
,	O
n	long
)	O
)	O
;	O
yalloc	long
=	O
MPN_FIB2_SIZE	O
(	O
n	long
/	O
2	int
)	O
;	O
yp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
yalloc	long
)	O
;	O
ASSERT	O
(	O
xalloc	long
>=	O
yalloc	long
)	O
;	O
xsize	long
=	O
mpn_fib2_ui	O
(	O
xp	pointer
,	O
yp	pointer
,	O
n	long
/	O
2	int
)	O
;	O
ysize	long
=	O
xsize	long
;	O
ysize	long
-=	O
(	O
yp	pointer
[	O
ysize	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
ASSERT	O
(	O
yp	pointer
[	O
ysize	long
-	O
1	int
]	O
!=	O
0	int
)	O
;	O
c	long
=	O
mpn_addlsh1_n	O
(	O
xp	pointer
,	O
yp	pointer
,	O
xp	pointer
,	O
xsize	long
)	O
;	O
ASSERT	O
(	O
xalloc	long
>=	O
xsize	long
+	O
1	int
)	O
;	O
xp	pointer
[	O
xsize	long
]	O
=	O
c	long
;	O
xsize	long
+=	O
(	O
c	long
!=	O
0	int
)	O
;	O
ASSERT	O
(	O
xp	pointer
[	O
xsize	long
-	O
1	int
]	O
!=	O
0	int
)	O
;	O
ASSERT	O
(	O
lalloc	long
>=	O
xsize	long
+	O
ysize	long
)	O
;	O
c	long
=	O
mpn_mul	O
(	O
lp	pointer
,	O
xp	pointer
,	O
xsize	long
,	O
yp	pointer
,	O
ysize	long
)	O
;	O
lsize	long
=	O
xsize	long
+	O
ysize	long
;	O
lsize	long
-=	O
(	O
c	long
==	O
0	int
)	O
;	O
c	long
=	O
mpn_addlsh2_n	O
(	O
lp	pointer
,	O
lp	pointer
,	O
lp	pointer
,	O
lsize	long
)	O
;	O
ASSERT	O
(	O
lalloc	long
>=	O
lsize	long
+	O
1	int
)	O
;	O
lp	pointer
[	O
lsize	long
]	O
=	O
c	long
;	O
lsize	long
+=	O
(	O
c	long
!=	O
0	int
)	O
;	O
if	O
(	O
n	long
&	O
2	int
)	O
{	O
ASSERT	O
(	O
lp	pointer
[	O
0	int
]	O
<=	O
MP_LIMB_T_MAX	O
-	O
4	int
)	O
;	O
lp	pointer
[	O
0	int
]	O
+=	O
4	int
;	O
}	O
else	O
{	O
MPN_DECR_U	O
(	O
lp	pointer
,	O
lsize	long
,	O
CNST_LIMB	O
(	O
4	int
)	O
)	O
;	O
}	O
TRACE	O
(	O
mpn_trace	O
(	O
"  l"	pointer
,	O
lp	pointer
,	O
lsize	long
)	O
)	O
;	O
break	O
;	O
}	O
MP_PTR_SWAP	O
(	O
xp	pointer
,	O
lp	pointer
)	O
;	O
zeros	int
++	O
;	O
n	long
/=	O
2	int
;	O
if	O
(	O
n	long
<=	O
FIB_TABLE_LUCNUM_LIMIT	int
)	O
{	O
lp	pointer
[	O
0	int
]	O
=	O
FIB_TABLE	O
(	O
n	long
)	O
+	O
2	int
*	O
FIB_TABLE	O
(	O
(	O
int	O
)	O
n	long
-	O
1	int
)	O
;	O
lsize	long
=	O
1	int
;	O
TRACE	O
(	O
printf	function
(	O
"  initial small n=%lu\n"	pointer
,	O
n	long
)	O
;	O
mpn_trace	O
(	O
"  l"	pointer
,	O
lp	pointer
,	O
lsize	long
)	O
)	O
;	O
break	O
;	O
}	O
}	O
for	O
(	O
;	O
zeros	int
!=	O
0	int
;	O
zeros	int
--	O
)	O
{	O
TRACE	O
(	O
printf	function
(	O
"  zeros=%d\n"	pointer
,	O
zeros	int
)	O
)	O
;	O
ASSERT	O
(	O
xalloc	long
>=	O
2	int
*	O
lsize	long
)	O
;	O
mpn_sqr	O
(	O
xp	pointer
,	O
lp	pointer
,	O
lsize	long
)	O
;	O
lsize	long
*=	O
2	int
;	O
lsize	long
-=	O
(	O
xp	pointer
[	O
lsize	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
if	O
(	O
n	long
&	O
1	int
)	O
{	O
ASSERT	O
(	O
xp	pointer
[	O
0	int
]	O
<=	O
MP_LIMB_T_MAX	O
-	O
2	int
)	O
;	O
xp	pointer
[	O
0	int
]	O
+=	O
2	int
;	O
n	long
=	O
0	int
;	O
}	O
else	O
{	O
MPN_DECR_U	O
(	O
xp	pointer
,	O
lsize	long
,	O
CNST_LIMB	O
(	O
2	int
)	O
)	O
;	O
}	O
MP_PTR_SWAP	O
(	O
xp	pointer
,	O
lp	pointer
)	O
;	O
ASSERT	O
(	O
lp	pointer
[	O
lsize	long
-	O
1	int
]	O
!=	O
0	int
)	O
;	O
}	O
ASSERT	O
(	O
lp	pointer
==	O
PTR	O
(	O
ln	pointer
)	O
)	O
;	O
SIZ	O
(	O
ln	pointer
)	O
=	O
lsize	long
;	O
TMP_FREE	O
;	O
}	O
