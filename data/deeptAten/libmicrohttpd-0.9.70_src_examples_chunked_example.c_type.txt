struct	O
ResponseContentCallbackParam	struct
{	O
const	O
char	O
*	O
response_data	pointer
;	O
size_t	long
response_size	long
;	O
}	O
;	O
static	O
ssize_t	long
callback	function
(	O
void	O
*	O
cls	pointer
,	O
uint64_t	long
pos	long
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
buf_size	long
)	O
{	O
size_t	long
size_to_copy	long
;	O
struct	O
ResponseContentCallbackParam	struct
*	O
const	O
param	pointer
=	O
(	O
struct	O
ResponseContentCallbackParam	struct
*	O
)	O
cls	pointer
;	O
if	O
(	O
pos	long
>=	O
param	pointer
->	O
response_size	long
)	O
{	O
return	O
MHD_CONTENT_READER_END_OF_STREAM	O
;	O
}	O
if	O
(	O
buf_size	long
<	O
(	O
param	pointer
->	O
response_size	long
-	O
pos	long
)	O
)	O
size_to_copy	long
=	O
buf_size	long
;	O
else	O
size_to_copy	long
=	O
param	pointer
->	O
response_size	long
-	O
pos	long
;	O
memcpy	function
(	O
buf	pointer
,	O
param	pointer
->	O
response_data	pointer
+	O
pos	long
,	O
size_to_copy	long
)	O
;	O
return	O
size_to_copy	long
;	O
}	O
static	O
void	O
free_callback_param	function
(	O
void	O
*	O
cls	pointer
)	O
{	O
free	function
(	O
cls	pointer
)	O
;	O
}	O
static	O
const	O
char	O
simple_response_text	array
[	O
]	O
=	O
"<html><head><title>Simple response</title></head>"	pointer
"<body>Simple response text</body></html>"	pointer
;	O
static	O
int	O
ahc_echo	function
(	O
void	O
*	O
cls	pointer
,	O
struct	O
MHD_Connection	O
*	O
connection	pointer
,	O
const	O
char	O
*	O
url	pointer
,	O
const	O
char	O
*	O
method	pointer
,	O
const	O
char	O
*	O
version	pointer
,	O
const	O
char	O
*	O
upload_data	pointer
,	O
size_t	long
*	O
upload_data_size	pointer
,	O
void	O
*	O
*	O
ptr	pointer
)	O
{	O
static	O
int	O
aptr	int
;	O
struct	O
ResponseContentCallbackParam	struct
*	O
callback_param	pointer
;	O
struct	O
MHD_Response	O
*	O
response	pointer
;	O
int	O
ret	int
;	O
(	O
void	O
)	O
cls	pointer
;	O
(	O
void	O
)	O
url	pointer
;	O
(	O
void	O
)	O
version	pointer
;	O
(	O
void	O
)	O
upload_data	pointer
;	O
(	O
void	O
)	O
upload_data_size	pointer
;	O
if	O
(	O
0	int
!=	O
strcmp	function
(	O
method	pointer
,	O
"GET"	pointer
)	O
)	O
return	O
MHD_NO	int
;	O
if	O
(	O
&	O
aptr	int
!=	O
*	O
ptr	pointer
)	O
{	O
*	O
ptr	pointer
=	O
&	O
aptr	int
;	O
return	O
MHD_YES	int
;	O
}	O
callback_param	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
ResponseContentCallbackParam	struct
)	O
)	O
;	O
if	O
(	O
NULL	O
==	O
callback_param	pointer
)	O
return	O
MHD_NO	int
;	O
callback_param	pointer
->	O
response_data	pointer
=	O
simple_response_text	array
;	O
callback_param	pointer
->	O
response_size	long
=	O
(	O
sizeof	O
(	O
simple_response_text	array
)	O
/	O
sizeof	O
(	O
char	O
)	O
)	O
-	O
1	int
;	O
*	O
ptr	pointer
=	O
NULL	O
;	O
response	pointer
=	O
MHD_create_response_from_callback	function
(	O
MHD_SIZE_UNKNOWN	O
,	O
1024	int
,	O
&	O
callback	function
,	O
callback_param	pointer
,	O
&	O
free_callback_param	function
)	O
;	O
if	O
(	O
NULL	O
==	O
response	pointer
)	O
{	O
free	function
(	O
callback_param	pointer
)	O
;	O
return	O
MHD_NO	int
;	O
}	O
ret	int
=	O
MHD_queue_response	function
(	O
connection	pointer
,	O
MHD_HTTP_OK	int
,	O
response	pointer
)	O
;	O
MHD_destroy_response	function
(	O
response	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
const	O
*	O
argv	pointer
)	O
{	O
struct	O
MHD_Daemon	O
*	O
d	pointer
;	O
int	O
port	short
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
printf	function
(	O
"%s PORT\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
port	short
=	O
atoi	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
if	O
(	O
(	O
1	int
>	O
port	short
)	O
||	O
(	O
port	short
>	O
UINT16_MAX	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Port must be a number between 1 and 65535\n"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
d	pointer
=	O
MHD_start_daemon	function
(	O
MHD_USE_AUTO	int
|	O
MHD_USE_INTERNAL_POLLING_THREAD	int
|	O
MHD_USE_ERROR_LOG	int
,	O
(	O
uint16_t	short
)	O
port	short
,	O
NULL	O
,	O
NULL	O
,	O
&	O
ahc_echo	function
,	O
NULL	O
,	O
MHD_OPTION_CONNECTION_TIMEOUT	int
,	O
(	O
unsigned	O
int	O
)	O
120	int
,	O
MHD_OPTION_END	int
)	O
;	O
if	O
(	O
NULL	O
==	O
d	pointer
)	O
return	O
1	int
;	O
(	O
void	O
)	O
getc	function
(	O
stdin	pointer
)	O
;	O
MHD_stop_daemon	function
(	O
d	pointer
)	O
;	O
return	O
0	int
;	O
}	O
