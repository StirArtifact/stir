int	O
mu_smtp_write	function
(	O
mu_smtp_t	pointer
smtp	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
int	O
rc	int
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
rc	int
=	O
mu_stream_vprintf	function
(	O
smtp	pointer
->	O
carrier	pointer
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mu_smtp_init_mlist	function
(	O
mu_smtp_t	pointer
smtp	pointer
)	O
{	O
if	O
(	O
!	O
smtp	pointer
->	O
mlrepl	pointer
)	O
{	O
int	O
rc	int
=	O
mu_list_create	function
(	O
&	O
smtp	pointer
->	O
mlrepl	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mu_list_set_destroy_item	function
(	O
smtp	pointer
->	O
mlrepl	pointer
,	O
mu_list_free_item	function
)	O
;	O
return	O
rc	int
;	O
}	O
else	O
mu_list_clear	function
(	O
smtp	pointer
->	O
mlrepl	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_response	function
(	O
mu_smtp_t	pointer
smtp	pointer
)	O
{	O
int	O
rc	int
;	O
size_t	long
n	long
;	O
rc	int
=	O
mu_stream_getline	function
(	O
smtp	pointer
->	O
carrier	pointer
,	O
&	O
smtp	pointer
->	O
rdbuf	pointer
,	O
&	O
smtp	pointer
->	O
rdsize	long
,	O
&	O
n	long
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
rc	int
)	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
EIO	int
)	O
;	O
n	long
=	O
mu_rtrim_class	function
(	O
smtp	pointer
->	O
rdbuf	pointer
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
n	long
<	O
3	int
||	O
!	O
mu_isdigit	O
(	O
smtp	pointer
->	O
rdbuf	pointer
[	O
0	int
]	O
)	O
)	O
{	O
mu_diag_output	function
(	O
MU_DIAG_NOTICE	O
,	O
"received invalid reply from SMTP server"	pointer
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
MU_ERR_BADREPLY	O
)	O
;	O
}	O
memcpy	function
(	O
smtp	pointer
->	O
replcode	array
,	O
smtp	pointer
->	O
rdbuf	pointer
,	O
3	int
)	O
;	O
smtp	pointer
->	O
replcode	array
[	O
3	int
]	O
=	O
0	int
;	O
if	O
(	O
smtp	pointer
->	O
rdbuf	pointer
[	O
3	int
]	O
==	O
'-'	O
)	O
{	O
smtp	pointer
->	O
flags	int
|=	O
_MU_SMTP_MLREPL	int
;	O
n	long
-=	O
3	int
;	O
if	O
(	O
smtp	pointer
->	O
flsize	long
<	O
n	long
)	O
{	O
char	O
*	O
p	pointer
=	O
realloc	function
(	O
smtp	pointer
->	O
flbuf	pointer
,	O
n	long
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
ENOMEM	int
)	O
;	O
smtp	pointer
->	O
flbuf	pointer
=	O
p	pointer
;	O
smtp	pointer
->	O
flsize	long
=	O
n	long
;	O
}	O
memcpy	function
(	O
smtp	pointer
->	O
flbuf	pointer
,	O
smtp	pointer
->	O
rdbuf	pointer
+	O
4	int
,	O
n	long
-	O
1	int
)	O
;	O
smtp	pointer
->	O
flbuf	pointer
[	O
n	long
-	O
1	int
]	O
=	O
0	int
;	O
smtp	pointer
->	O
replptr	pointer
=	O
smtp	pointer
->	O
flbuf	pointer
;	O
rc	int
=	O
_mu_smtp_init_mlist	function
(	O
smtp	pointer
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
rc	int
)	O
;	O
do	O
{	O
char	O
*	O
p	pointer
;	O
rc	int
=	O
mu_stream_getline	function
(	O
smtp	pointer
->	O
carrier	pointer
,	O
&	O
smtp	pointer
->	O
rdbuf	pointer
,	O
&	O
smtp	pointer
->	O
rdsize	long
,	O
&	O
n	long
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
rc	int
)	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
EIO	int
)	O
;	O
n	long
=	O
mu_rtrim_class	function
(	O
smtp	pointer
->	O
rdbuf	pointer
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
n	long
<	O
3	int
||	O
memcmp	function
(	O
smtp	pointer
->	O
rdbuf	pointer
,	O
smtp	pointer
->	O
replcode	array
,	O
3	int
)	O
)	O
{	O
mu_diag_output	function
(	O
MU_DIAG_NOTICE	O
,	O
"received invalid reply from SMTP server"	pointer
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
MU_ERR_BADREPLY	O
)	O
;	O
}	O
p	pointer
=	O
strdup	function
(	O
smtp	pointer
->	O
rdbuf	pointer
+	O
4	int
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
ENOMEM	int
)	O
;	O
mu_list_append	function
(	O
smtp	pointer
->	O
mlrepl	pointer
,	O
p	pointer
)	O
;	O
}	O
while	O
(	O
smtp	pointer
->	O
rdbuf	pointer
[	O
3	int
]	O
==	O
'-'	O
)	O
;	O
}	O
else	O
{	O
smtp	pointer
->	O
flags	int
&=	O
~	O
_MU_SMTP_MLREPL	int
;	O
smtp	pointer
->	O
replptr	pointer
=	O
smtp	pointer
->	O
rdbuf	pointer
+	O
4	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_replcode	function
(	O
mu_smtp_t	pointer
smtp	pointer
,	O
char	O
*	O
buf	pointer
)	O
{	O
if	O
(	O
!	O
smtp	pointer
||	O
!	O
buf	pointer
)	O
return	O
EINVAL	int
;	O
strcpy	function
(	O
buf	pointer
,	O
smtp	pointer
->	O
replcode	array
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_sget_reply	function
(	O
mu_smtp_t	pointer
smtp	pointer
,	O
const	O
char	O
*	O
*	O
pbuf	pointer
)	O
{	O
if	O
(	O
!	O
smtp	pointer
||	O
!	O
pbuf	pointer
)	O
return	O
EINVAL	int
;	O
*	O
pbuf	pointer
=	O
smtp	pointer
->	O
replptr	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_get_reply_iterator	function
(	O
mu_smtp_t	pointer
smtp	pointer
,	O
mu_iterator_t	pointer
*	O
pitr	pointer
)	O
{	O
if	O
(	O
!	O
smtp	pointer
||	O
!	O
pitr	pointer
)	O
return	O
EINVAL	int
;	O
return	O
mu_list_get_iterator	function
(	O
smtp	pointer
->	O
mlrepl	pointer
,	O
pitr	pointer
)	O
;	O
}	O
