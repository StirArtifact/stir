enum	O
{	O
COPYRIGHT_YEAR	int
=	O
2005	int
}	O
;	O
void	O
version_etc_va	function
(	O
FILE	struct
*	O
stream	pointer
,	O
const	O
char	O
*	O
command_name	pointer
,	O
const	O
char	O
*	O
package	pointer
,	O
const	O
char	O
*	O
version	pointer
,	O
va_list	array
authors	array
)	O
{	O
size_t	long
n_authors	long
;	O
{	O
va_list	array
tmp_authors	array
;	O
__va_copy	O
(	O
tmp_authors	array
,	O
authors	array
)	O
;	O
n_authors	long
=	O
0	int
;	O
while	O
(	O
va_arg	O
(	O
tmp_authors	array
,	O
const	O
char	O
*	O
)	O
!=	O
NULL	O
)	O
++	O
n_authors	long
;	O
}	O
if	O
(	O
command_name	pointer
)	O
fprintf	function
(	O
stream	pointer
,	O
"%s (%s) %s\n"	pointer
,	O
command_name	pointer
,	O
package	pointer
,	O
version	pointer
)	O
;	O
else	O
fprintf	function
(	O
stream	pointer
,	O
"%s %s\n"	pointer
,	O
package	pointer
,	O
version	pointer
)	O
;	O
fprintf	function
(	O
stream	pointer
,	O
version_etc_copyright	array
,	O
_	O
(	O
"(C)"	pointer
)	O
,	O
COPYRIGHT_YEAR	int
)	O
;	O
fputs	function
(	O
_	O
(	O
"\nThis is free software.  You may redistribute copies of it under the terms of\nthe GNU General Public License <http://www.gnu.org/licenses/gpl.html>.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"	pointer
)	O
,	O
stream	pointer
)	O
;	O
switch	O
(	O
n_authors	long
)	O
{	O
case	O
0	int
:	O
abort	function
(	O
)	O
;	O
case	O
1	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
2	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s and %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
3	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, and %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
4	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\nand %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
5	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\n%s, and %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
6	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\n%s, %s, and %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
7	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
8	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
case	O
9	int
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
default	O
:	O
vfprintf	function
(	O
stream	pointer
,	O
_	O
(	O
"Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"	pointer
)	O
,	O
authors	array
)	O
;	O
break	O
;	O
}	O
va_end	O
(	O
authors	array
)	O
;	O
}	O
void	O
version_etc	function
(	O
FILE	struct
*	O
stream	pointer
,	O
const	O
char	O
*	O
command_name	pointer
,	O
const	O
char	O
*	O
package	pointer
,	O
const	O
char	O
*	O
version	pointer
,	O
...	O
)	O
{	O
va_list	array
authors	array
;	O
va_start	O
(	O
authors	array
,	O
version	pointer
)	O
;	O
version_etc_va	function
(	O
stream	pointer
,	O
command_name	pointer
,	O
package	pointer
,	O
version	pointer
,	O
authors	array
)	O
;	O
}	O
