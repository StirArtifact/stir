const	O
char	O
_uuconf_hport_rcsid	array
[	O
]	O
=	O
"$Id: hport.c,v 1.18 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
int	O
uuconf_hdb_find_port	function
(	O
pglobal	pointer
,	O
zname	pointer
,	O
ibaud	long
,	O
ihighbaud	long
,	O
pifn	pointer
,	O
pinfo	pointer
,	O
qport	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
const	O
char	O
*	O
zname	pointer
;	O
long	O
ibaud	long
;	O
long	O
ihighbaud	long
ATTRIBUTE_UNUSED	O
;	O
int	O
(	O
*	O
pifn	pointer
)	O
P	O
(	O
(	O
struct	O
uuconf_port	struct
*	O
,	O
pointer	pointer
)	O
)	O
;	O
pointer	pointer
pinfo	pointer
;	O
struct	O
uuconf_port	struct
*	O
qport	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
char	O
*	O
*	O
pzsplit	pointer
;	O
size_t	long
csplit	pointer
;	O
int	O
iret	int
;	O
char	O
*	O
*	O
pz	pointer
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
pzsplit	pointer
=	O
NULL	O
;	O
csplit	pointer
=	O
0	int
;	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
for	O
(	O
pz	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzhdb_devices	pointer
;	O
*	O
pz	pointer
!=	O
NULL	O
;	O
pz	pointer
++	O
)	O
{	O
FILE	struct
*	O
e	pointer
;	O
int	O
cchars	int
;	O
qglobal	pointer
->	O
ilineno	int
=	O
0	int
;	O
e	pointer
=	O
fopen	function
(	O
*	O
pz	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
FNO_SUCH_FILE	O
(	O
)	O
)	O
continue	O
;	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_FOPEN_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
while	O
(	O
(	O
cchars	int
=	O
_uuconf_getline	function
(	O
qglobal	pointer
,	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
)	O
>	O
0	int
)	O
{	O
int	O
ctoks	int
;	O
char	O
*	O
z	pointer
,	O
*	O
zprotos	pointer
,	O
*	O
zport	pointer
;	O
long	O
ilow	long
,	O
ihigh	long
;	O
pointer	pointer
pblock	pointer
;	O
char	O
*	O
*	O
*	O
ppzdialer	pointer
;	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
--	O
cchars	int
;	O
if	O
(	O
zline	pointer
[	O
cchars	int
]	O
==	O
'\n'	O
)	O
zline	pointer
[	O
cchars	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
isspace	function
(	O
BUCHAR	O
(	O
zline	pointer
[	O
0	int
]	O
)	O
)	O
||	O
zline	pointer
[	O
0	int
]	O
==	O
'#'	O
)	O
continue	O
;	O
ctoks	int
=	O
_uuconf_istrsplit	function
(	O
zline	pointer
,	O
'\0'	O
,	O
&	O
pzsplit	pointer
,	O
&	O
csplit	pointer
)	O
;	O
if	O
(	O
ctoks	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
if	O
(	O
ctoks	int
<	O
4	int
)	O
continue	O
;	O
zprotos	pointer
=	O
strchr	function
(	O
pzsplit	pointer
[	O
0	int
]	O
,	O
','	O
)	O
;	O
if	O
(	O
zprotos	pointer
!=	O
NULL	O
)	O
{	O
*	O
zprotos	pointer
=	O
'\0'	O
;	O
++	O
zprotos	pointer
;	O
}	O
zport	pointer
=	O
pzsplit	pointer
[	O
0	int
]	O
;	O
z	pointer
=	O
pzsplit	pointer
[	O
3	int
]	O
;	O
if	O
(	O
strcasecmp	function
(	O
z	pointer
,	O
"Any"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
z	pointer
,	O
"-"	pointer
)	O
==	O
0	int
)	O
{	O
ilow	long
=	O
0L	int
;	O
ihigh	long
=	O
0L	int
;	O
}	O
else	O
{	O
char	O
*	O
zend	pointer
;	O
while	O
(	O
*	O
z	pointer
!=	O
'\0'	O
&&	O
!	O
isdigit	function
(	O
BUCHAR	O
(	O
*	O
z	pointer
)	O
)	O
)	O
++	O
z	pointer
;	O
ilow	long
=	O
strtol	function
(	O
z	pointer
,	O
&	O
zend	pointer
,	O
10	int
)	O
;	O
if	O
(	O
*	O
zend	pointer
==	O
'-'	O
)	O
ihigh	long
=	O
strtol	function
(	O
zend	pointer
+	O
1	int
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
else	O
ihigh	long
=	O
ilow	long
;	O
if	O
(	O
z	pointer
!=	O
pzsplit	pointer
[	O
3	int
]	O
)	O
{	O
size_t	long
cclass	long
,	O
cport	long
;	O
cclass	long
=	O
z	pointer
-	O
pzsplit	pointer
[	O
3	int
]	O
;	O
cport	long
=	O
strlen	function
(	O
pzsplit	pointer
[	O
0	int
]	O
)	O
;	O
zport	pointer
=	O
malloc	function
(	O
cport	long
+	O
cclass	long
+	O
1	int
)	O
;	O
if	O
(	O
zport	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zport	pointer
,	O
(	O
pointer	pointer
)	O
pzsplit	pointer
[	O
0	int
]	O
,	O
cport	long
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
zport	pointer
+	O
cport	long
)	O
,	O
(	O
pointer	pointer
)	O
pzsplit	pointer
[	O
3	int
]	O
,	O
cclass	long
)	O
;	O
zport	pointer
[	O
cport	long
+	O
cclass	long
]	O
=	O
'\0'	O
;	O
}	O
}	O
if	O
(	O
(	O
zname	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
zport	pointer
,	O
zname	pointer
)	O
!=	O
0	int
)	O
||	O
(	O
ibaud	long
!=	O
0	int
&&	O
ilow	long
!=	O
0	int
&&	O
(	O
ilow	long
>	O
ibaud	long
||	O
ihigh	long
<	O
ibaud	long
)	O
)	O
)	O
{	O
if	O
(	O
zport	pointer
!=	O
pzsplit	pointer
[	O
0	int
]	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zport	pointer
)	O
;	O
continue	O
;	O
}	O
pzsplit	pointer
[	O
1	int
]	O
[	O
strcspn	function
(	O
pzsplit	pointer
[	O
1	int
]	O
,	O
","	pointer
)	O
]	O
=	O
'\0'	O
;	O
pblock	pointer
=	O
NULL	O
;	O
_uuconf_uclear_port	function
(	O
qport	pointer
)	O
;	O
qport	pointer
->	O
uuconf_zname	pointer
=	O
zport	pointer
;	O
qport	pointer
->	O
uuconf_zprotocols	pointer
=	O
zprotos	pointer
;	O
if	O
(	O
strcmp	function
(	O
pzsplit	pointer
[	O
0	int
]	O
,	O
"Direct"	pointer
)	O
==	O
0	int
)	O
{	O
qport	pointer
->	O
uuconf_ttype	enum
=	O
UUCONF_PORTTYPE_DIRECT	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_zdevice	pointer
=	O
pzsplit	pointer
[	O
1	int
]	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_ibaud	long
=	O
ilow	long
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_fcarrier	int
=	O
FALSE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_fhardflow	int
=	O
TRUE	O
;	O
ppzdialer	pointer
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
pzsplit	pointer
[	O
0	int
]	O
,	O
"TCP"	pointer
)	O
==	O
0	int
)	O
{	O
qport	pointer
->	O
uuconf_ttype	enum
=	O
UUCONF_PORTTYPE_TCP	int
;	O
qport	pointer
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
|	O
UUCONF_RELIABLE_SPECIFIED	O
)	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_zport	pointer
=	O
pzsplit	pointer
[	O
1	int
]	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_iversion	int
=	O
0	int
;	O
ppzdialer	pointer
=	O
&	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_pzdialer	pointer
;	O
}	O
else	O
if	O
(	O
ctoks	int
>=	O
5	int
&&	O
(	O
strcmp	function
(	O
pzsplit	pointer
[	O
4	int
]	O
,	O
"TLI"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
pzsplit	pointer
[	O
4	int
]	O
,	O
"TLIS"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
qport	pointer
->	O
uuconf_ttype	enum
=	O
UUCONF_PORTTYPE_TLI	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_zdevice	pointer
=	O
pzsplit	pointer
[	O
1	int
]	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_fstream	int
=	O
strcmp	function
(	O
pzsplit	pointer
[	O
4	int
]	O
,	O
"TLIS"	pointer
)	O
==	O
0	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_pzpush	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_zservaddr	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
|	O
UUCONF_RELIABLE_SPECIFIED	O
)	O
;	O
ppzdialer	pointer
=	O
&	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_pzdialer	pointer
;	O
}	O
else	O
{	O
qport	pointer
->	O
uuconf_ttype	enum
=	O
UUCONF_PORTTYPE_MODEM	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdevice	pointer
=	O
pzsplit	pointer
[	O
1	int
]	O
;	O
if	O
(	O
strcmp	function
(	O
pzsplit	pointer
[	O
2	int
]	O
,	O
"-"	pointer
)	O
!=	O
0	int
)	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdial_device	pointer
=	O
pzsplit	pointer
[	O
2	int
]	O
;	O
else	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdial_device	pointer
=	O
NULL	O
;	O
if	O
(	O
ilow	long
==	O
ihigh	long
)	O
{	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
=	O
ilow	long
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ilowbaud	long
=	O
0L	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ihighbaud	long
=	O
0L	int
;	O
}	O
else	O
{	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
=	O
0L	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ilowbaud	long
=	O
ilow	long
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ihighbaud	long
=	O
ihigh	long
;	O
}	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_fcarrier	int
=	O
TRUE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_fhardflow	int
=	O
TRUE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_qdialer	pointer
=	O
NULL	O
;	O
ppzdialer	pointer
=	O
&	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_pzdialer	pointer
;	O
}	O
if	O
(	O
ppzdialer	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
ctoks	int
<	O
5	int
)	O
*	O
ppzdialer	pointer
=	O
NULL	O
;	O
else	O
{	O
size_t	long
c	long
;	O
char	O
*	O
*	O
pzd	pointer
;	O
pblock	pointer
=	O
uuconf_malloc_block	function
(	O
)	O
;	O
if	O
(	O
pblock	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
c	long
=	O
(	O
ctoks	int
-	O
4	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
;	O
pzd	pointer
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
c	long
+	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
pzd	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
uuconf_free_block	function
(	O
pblock	pointer
)	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
pzd	pointer
,	O
(	O
pointer	pointer
)	O
(	O
pzsplit	pointer
+	O
4	int
)	O
,	O
c	long
)	O
;	O
pzd	pointer
[	O
ctoks	int
-	O
4	int
]	O
=	O
NULL	O
;	O
*	O
ppzdialer	pointer
=	O
pzd	pointer
;	O
}	O
}	O
if	O
(	O
pifn	pointer
!=	O
NULL	O
)	O
{	O
iret	int
=	O
(	O
*	O
pifn	pointer
)	O
(	O
qport	pointer
,	O
pinfo	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
zport	pointer
!=	O
pzsplit	pointer
[	O
0	int
]	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zport	pointer
)	O
;	O
if	O
(	O
pblock	pointer
!=	O
NULL	O
)	O
uuconf_free_block	function
(	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_NOT_FOUND	O
)	O
break	O
;	O
continue	O
;	O
}	O
}	O
if	O
(	O
pblock	pointer
==	O
NULL	O
)	O
{	O
pblock	pointer
=	O
uuconf_malloc_block	function
(	O
)	O
;	O
if	O
(	O
pblock	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
uuconf_add_block	function
(	O
pblock	pointer
,	O
zline	pointer
)	O
!=	O
0	int
||	O
(	O
zport	pointer
!=	O
pzsplit	pointer
[	O
0	int
]	O
&&	O
uuconf_add_block	function
(	O
pblock	pointer
,	O
zport	pointer
)	O
!=	O
0	int
)	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
uuconf_free_block	function
(	O
pblock	pointer
)	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
zline	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_palloc	pointer
=	O
pblock	pointer
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
break	O
;	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_NOT_FOUND	O
)	O
break	O
;	O
}	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
pzsplit	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzsplit	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
&&	O
iret	int
!=	O
UUCONF_NOT_FOUND	O
)	O
{	O
qglobal	pointer
->	O
zfilename	pointer
=	O
*	O
pz	pointer
;	O
iret	int
|=	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
return	O
iret	int
;	O
}	O
