struct	O
hashtab	struct
*	O
uid_table	pointer
=	O
NULL	O
;	O
struct	O
hashtab	struct
*	O
gid_table	pointer
=	O
NULL	O
;	O
struct	O
uid_data	struct
{	O
char	O
*	O
name	pointer
;	O
}	O
;	O
struct	O
gid_data	struct
{	O
char	O
*	O
name	pointer
;	O
}	O
;	O
char	O
*	O
uid_name	function
(	O
int	O
uid	int
)	O
{	O
struct	O
hashtab_elem	struct
*	O
he	pointer
;	O
if	O
(	O
uid_table	pointer
==	O
NULL	O
)	O
uid_table	pointer
=	O
hashtab_init	function
(	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
he	pointer
=	O
hashtab_find	function
(	O
uid_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
uid	int
,	O
sizeof	O
(	O
uid	int
)	O
)	O
;	O
if	O
(	O
he	pointer
==	O
NULL	O
)	O
{	O
struct	O
passwd	struct
*	O
thispw	pointer
=	O
getpwuid	function
(	O
uid	int
)	O
;	O
struct	O
uid_data	struct
ud	struct
;	O
if	O
(	O
thispw	pointer
!=	O
NULL	O
)	O
{	O
ud	struct
.	O
name	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
(	O
strlen	function
(	O
thispw	pointer
->	O
pw_name	pointer
)	O
+	O
1	int
)	O
)	O
;	O
(	O
void	O
)	O
strcpy	function
(	O
ud	struct
.	O
name	pointer
,	O
thispw	pointer
->	O
pw_name	pointer
)	O
;	O
}	O
else	O
{	O
int	O
digits	int
=	O
2	int
,	O
uid_copy	int
=	O
uid	int
;	O
for	O
(	O
;	O
uid_copy	int
;	O
digits	int
++	O
,	O
uid_copy	int
/=	O
10	int
)	O
;	O
ud	struct
.	O
name	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
digits	int
)	O
;	O
(	O
void	O
)	O
sprintf	function
(	O
ud	struct
.	O
name	pointer
,	O
"%d"	pointer
,	O
uid	int
)	O
;	O
}	O
he	pointer
=	O
hashtab_create	function
(	O
uid_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
uid	int
,	O
sizeof	O
(	O
uid	int
)	O
)	O
;	O
hashtab_set_value	function
(	O
he	pointer
,	O
&	O
ud	struct
,	O
sizeof	O
(	O
ud	struct
)	O
)	O
;	O
}	O
struct	O
uid_data	struct
*	O
ud	struct
=	O
hashtab_get_value	function
(	O
he	pointer
)	O
;	O
return	O
ud	struct
->	O
name	pointer
;	O
}	O
char	O
*	O
gid_name	function
(	O
int	O
gid	int
)	O
{	O
struct	O
hashtab_elem	struct
*	O
he	pointer
;	O
if	O
(	O
gid_table	pointer
==	O
NULL	O
)	O
gid_table	pointer
=	O
hashtab_init	function
(	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
he	pointer
=	O
hashtab_find	function
(	O
gid_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
gid	int
,	O
sizeof	O
(	O
gid	int
)	O
)	O
;	O
if	O
(	O
he	pointer
==	O
NULL	O
)	O
{	O
struct	O
group	struct
*	O
grp	pointer
;	O
struct	O
gid_data	struct
gd	struct
;	O
if	O
(	O
(	O
grp	pointer
=	O
getgrgid	function
(	O
gid	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
gd	struct
.	O
name	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
(	O
strlen	function
(	O
grp	pointer
->	O
gr_name	pointer
)	O
+	O
1	int
)	O
)	O
;	O
(	O
void	O
)	O
strcpy	function
(	O
gd	struct
.	O
name	pointer
,	O
grp	pointer
->	O
gr_name	pointer
)	O
;	O
}	O
else	O
{	O
int	O
digits	int
=	O
2	int
,	O
gid_copy	int
=	O
gid	int
;	O
for	O
(	O
;	O
gid_copy	int
;	O
digits	int
++	O
,	O
gid_copy	int
/=	O
10	int
)	O
;	O
gd	struct
.	O
name	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
digits	int
)	O
;	O
(	O
void	O
)	O
sprintf	function
(	O
gd	struct
.	O
name	pointer
,	O
"%d"	pointer
,	O
gid	int
)	O
;	O
}	O
he	pointer
=	O
hashtab_create	function
(	O
gid_table	pointer
,	O
(	O
void	O
*	O
)	O
&	O
gid	int
,	O
sizeof	O
(	O
gid	int
)	O
)	O
;	O
hashtab_set_value	function
(	O
he	pointer
,	O
&	O
gd	struct
,	O
sizeof	O
(	O
gd	struct
)	O
)	O
;	O
}	O
struct	O
gid_data	struct
*	O
gd	struct
=	O
hashtab_get_value	function
(	O
he	pointer
)	O
;	O
return	O
gd	struct
->	O
name	pointer
;	O
}	O
