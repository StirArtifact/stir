int	O
mu_mailbox_msgset_copy	function
(	O
mu_mailbox_t	pointer
mbox	pointer
,	O
mu_msgset_t	pointer
msgset	pointer
,	O
const	O
char	O
*	O
dest	pointer
,	O
int	O
flags	int
)	O
{	O
if	O
(	O
!	O
mbox	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
mbox	pointer
->	O
_copy	pointer
)	O
return	O
ENOSYS	int
;	O
return	O
mbox	pointer
->	O
_copy	pointer
(	O
mbox	pointer
,	O
msgset	pointer
,	O
dest	pointer
,	O
flags	int
)	O
;	O
}	O
int	O
mu_mailbox_message_copy	function
(	O
mu_mailbox_t	pointer
mbox	pointer
,	O
size_t	long
msgno	long
,	O
const	O
char	O
*	O
dest	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
mu_msgset_t	pointer
msgset	pointer
;	O
int	O
mode	int
;	O
if	O
(	O
!	O
mbox	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
mbox	pointer
->	O
_copy	pointer
)	O
return	O
ENOSYS	int
;	O
mode	int
=	O
flags	int
&	O
MU_MAILBOX_COPY_UID	int
?	O
MU_MSGSET_UID	int
:	O
MU_MSGSET_NUM	int
;	O
rc	int
=	O
mu_msgset_create	function
(	O
&	O
msgset	pointer
,	O
mbox	pointer
,	O
mode	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_msgset_add_range	function
(	O
msgset	pointer
,	O
1	int
,	O
1	int
,	O
mode	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mbox	pointer
->	O
_copy	pointer
(	O
mbox	pointer
,	O
msgset	pointer
,	O
dest	pointer
,	O
flags	int
)	O
;	O
mu_msgset_destroy	function
(	O
&	O
msgset	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
