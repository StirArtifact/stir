void	O
mpf_urandomb	O
(	O
mpf_t	array
rop	array
,	O
gmp_randstate_t	array
rstate	array
,	O
mp_bitcnt_t	long
nbits	long
)	O
{	O
mp_ptr	pointer
rp	pointer
;	O
mp_size_t	long
nlimbs	long
;	O
mp_exp_t	long
exp	int
;	O
mp_size_t	long
prec	int
;	O
rp	pointer
=	O
PTR	O
(	O
rop	array
)	O
;	O
nlimbs	long
=	O
BITS_TO_LIMBS	O
(	O
nbits	long
)	O
;	O
prec	int
=	O
PREC	O
(	O
rop	array
)	O
;	O
if	O
(	O
nlimbs	long
>	O
prec	int
+	O
1	int
||	O
nlimbs	long
==	O
0	int
)	O
{	O
nlimbs	long
=	O
prec	int
+	O
1	int
;	O
nbits	long
=	O
nlimbs	long
*	O
GMP_NUMB_BITS	O
;	O
}	O
_gmp_rand	O
(	O
rp	pointer
,	O
rstate	array
,	O
nbits	long
)	O
;	O
if	O
(	O
nbits	long
%	O
GMP_NUMB_BITS	O
!=	O
0	int
)	O
mpn_lshift	O
(	O
rp	pointer
,	O
rp	pointer
,	O
nlimbs	long
,	O
GMP_NUMB_BITS	O
-	O
nbits	long
%	O
GMP_NUMB_BITS	O
)	O
;	O
exp	int
=	O
0	int
;	O
while	O
(	O
nlimbs	long
!=	O
0	int
&&	O
rp	pointer
[	O
nlimbs	long
-	O
1	int
]	O
==	O
0	int
)	O
{	O
nlimbs	long
--	O
;	O
exp	int
--	O
;	O
}	O
EXP	O
(	O
rop	array
)	O
=	O
exp	int
;	O
SIZ	O
(	O
rop	array
)	O
=	O
nlimbs	long
;	O
}	O
