int	O
grad_set_nonblocking	function
(	O
int	O
fd	int
)	O
{	O
int	O
flags	int
;	O
if	O
(	O
(	O
flags	int
=	O
fcntl	function
(	O
fd	int
,	O
F_GETFL	int
,	O
0	int
)	O
)	O
<	O
0	int
)	O
{	O
grad_log	function
(	O
GRAD_LOG_ERR	int
|	O
GRAD_LOG_PERROR	int
,	O
"F_GETFL"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
fcntl	function
(	O
fd	int
,	O
F_SETFL	int
,	O
flags	int
|	O
FCNTL_NONBLOCK	O
)	O
<	O
0	int
)	O
{	O
grad_log	function
(	O
GRAD_LOG_ERR	int
|	O
GRAD_LOG_PERROR	int
,	O
"F_SETFL"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
grad_max_fd	function
(	O
)	O
{	O
return	O
getdtablesize	function
(	O
)	O
;	O
}	O
static	O
grad_uint32_t	int
grad_first_ip_nameindex	function
(	O
)	O
{	O
grad_uint32_t	int
ip	pointer
=	O
INADDR_ANY	O
;	O
return	O
ip	pointer
;	O
}	O
static	O
grad_uint32_t	int
grad_first_ip_hostname	function
(	O
)	O
{	O
grad_uint32_t	int
ip	pointer
=	O
INADDR_ANY	O
;	O
char	O
*	O
name	pointer
;	O
int	O
name_len	int
=	O
256	int
;	O
int	O
status	int
;	O
name	pointer
=	O
grad_emalloc	function
(	O
name_len	int
)	O
;	O
while	O
(	O
name	pointer
&&	O
(	O
status	int
=	O
gethostname	function
(	O
name	pointer
,	O
name_len	int
)	O
)	O
==	O
0	int
&&	O
!	O
memchr	function
(	O
name	pointer
,	O
0	int
,	O
name_len	int
)	O
)	O
{	O
name_len	int
*=	O
2	int
;	O
name	pointer
=	O
grad_erealloc	function
(	O
name	pointer
,	O
name_len	int
)	O
;	O
}	O
if	O
(	O
status	int
==	O
0	int
)	O
ip	pointer
=	O
grad_ip_gethostaddr	function
(	O
name	pointer
)	O
;	O
grad_free	function
(	O
name	pointer
)	O
;	O
return	O
ip	pointer
;	O
}	O
grad_uint32_t	int
grad_first_ip	function
(	O
)	O
{	O
grad_uint32_t	int
ip	pointer
=	O
INADDR_ANY	O
;	O
ip	pointer
=	O
grad_first_ip_nameindex	function
(	O
)	O
;	O
if	O
(	O
ip	pointer
==	O
INADDR_ANY	O
)	O
ip	pointer
=	O
grad_first_ip_hostname	function
(	O
)	O
;	O
return	O
ip	pointer
;	O
}	O
grad_signal_handler_t	pointer
grad_set_signal	function
(	O
int	O
sig	int
,	O
grad_signal_handler_t	pointer
sighandler	pointer
)	O
{	O
struct	O
sigaction	struct
act	struct
,	O
oact	struct
;	O
act	struct
.	O
sa_handler	pointer
=	O
sighandler	pointer
;	O
sigemptyset	function
(	O
&	O
act	struct
.	O
sa_mask	struct
)	O
;	O
act	struct
.	O
sa_flags	int
=	O
0	int
;	O
act	struct
.	O
sa_flags	int
|=	O
SA_INTERRUPT	int
;	O
if	O
(	O
sigaction	struct
(	O
sig	int
,	O
&	O
act	struct
,	O
&	O
oact	struct
)	O
<	O
0	int
)	O
return	O
SIG_ERR	O
;	O
return	O
oact	struct
.	O
sa_handler	pointer
;	O
}	O
void	O
grad_reset_signal	function
(	O
int	O
sig	int
ARG_UNUSED	O
,	O
grad_signal_handler_t	pointer
sighandler	pointer
ARG_UNUSED	O
)	O
{	O
}	O
