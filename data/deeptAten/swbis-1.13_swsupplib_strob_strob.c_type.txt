static	O
int	O
sb_close	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
swbis_free	O
(	O
strb	pointer
->	O
str_	pointer
)	O
;	O
swbis_free	O
(	O
strb	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
STROB	struct
*	O
sb_open	function
(	O
size_t	long
initial_size	long
)	O
{	O
STROB	struct
*	O
strb	pointer
;	O
strb	pointer
=	O
(	O
STROB	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
STROB	struct
)	O
)	O
;	O
if	O
(	O
strb	pointer
==	O
(	O
STROB	struct
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"strob_open: out of memory.\n"	pointer
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
return	O
(	O
STROB	struct
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
if	O
(	O
initial_size	long
<=	O
0	int
)	O
initial_size	long
=	O
STROB_INITLENGTH	int
;	O
strb	pointer
->	O
extra_	int
=	O
STROB_LENGTHINCR	int
;	O
strb	pointer
->	O
length_	int
=	O
0	int
;	O
strb	pointer
->	O
str_	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
NULL	O
;	O
strb	pointer
->	O
in_use_	char
=	O
1	int
;	O
strb	pointer
->	O
fill_charM	int
=	O
'\0'	O
;	O
strob_reopen	function
(	O
strb	pointer
,	O
initial_size	long
+	O
1	int
)	O
;	O
return	O
strb	pointer
;	O
}	O
static	O
STROB	struct
*	O
strob_reopen_if_fill_with	function
(	O
STROB	struct
*	O
strb	pointer
,	O
size_t	long
reqd_length	long
,	O
int	O
fill_char	int
)	O
{	O
if	O
(	O
(	O
int	O
)	O
reqd_length	long
>	O
strb	pointer
->	O
reserve_	int
)	O
{	O
return	O
strob_reopen_fill_with	function
(	O
strb	pointer
,	O
reqd_length	long
+	O
strb	pointer
->	O
extra_	int
,	O
fill_char	int
)	O
;	O
}	O
return	O
strb	pointer
;	O
}	O
static	O
STROB	struct
*	O
strob_reopen_if	function
(	O
STROB	struct
*	O
strb	pointer
,	O
size_t	long
reqd_length	long
)	O
{	O
if	O
(	O
(	O
int	O
)	O
reqd_length	long
>	O
strb	pointer
->	O
reserve_	int
)	O
{	O
return	O
strob_reopen	function
(	O
strb	pointer
,	O
reqd_length	long
+	O
strb	pointer
->	O
extra_	int
)	O
;	O
}	O
return	O
strb	pointer
;	O
}	O
static	O
void	O
*	O
strob_set_up	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
n	long
)	O
{	O
if	O
(	O
!	O
strob_reopen_if	function
(	O
strb	pointer
,	O
n	long
+	O
1	int
)	O
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
if	O
(	O
n	long
>	O
strb	pointer
->	O
length_	int
)	O
{	O
strb	pointer
->	O
length_	int
=	O
n	long
;	O
strb	pointer
->	O
str_	pointer
[	O
n	long
]	O
=	O
'\0'	O
;	O
}	O
return	O
strb	pointer
;	O
}	O
int	O
strob_close	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
sb_close	function
(	O
strb	pointer
)	O
;	O
}	O
STROB	struct
*	O
strob_open	function
(	O
size_t	long
initial_size	long
)	O
{	O
return	O
sb_open	function
(	O
initial_size	long
)	O
;	O
}	O
char	O
*	O
strob_release	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
char	O
*	O
x	pointer
=	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
;	O
swbis_free	O
(	O
strb	pointer
)	O
;	O
return	O
x	pointer
;	O
}	O
o__inline__	O
void	O
strob_set_reserve	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
res	int
)	O
{	O
strb	pointer
->	O
extra_	int
=	O
res	int
;	O
}	O
STROB	struct
*	O
strob_reopen_fill_with	function
(	O
STROB	struct
*	O
strb	pointer
,	O
size_t	long
new_length	long
,	O
int	O
fill_char	int
)	O
{	O
unsigned	O
char	O
*	O
tmpstr	pointer
;	O
if	O
(	O
new_length	long
<=	O
1	int
)	O
new_length	long
=	O
2	int
;	O
if	O
(	O
strb	pointer
->	O
str_	pointer
==	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
strb	pointer
->	O
str_	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
malloc	function
(	O
2	int
)	O
;	O
if	O
(	O
strb	pointer
->	O
str_	pointer
==	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"strob_reopen(loc=1): out of memory.\n"	pointer
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
}	O
tmpstr	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
SWBIS_REALLOC	O
(	O
strb	pointer
->	O
str_	pointer
,	O
(	O
size_t	long
)	O
(	O
new_length	long
)	O
,	O
strb	pointer
->	O
reserve_	int
)	O
;	O
if	O
(	O
!	O
tmpstr	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"strob_reopen(loc=2): out of memory.\n"	pointer
)	O
;	O
exit	function
(	O
22	int
)	O
;	O
return	O
(	O
STROB	struct
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
strb	pointer
->	O
str_	pointer
=	O
tmpstr	pointer
;	O
strb	pointer
->	O
reserve_	int
=	O
new_length	long
;	O
if	O
(	O
strb	pointer
->	O
reserve_	int
>	O
strb	pointer
->	O
length_	int
)	O
{	O
memset	function
(	O
strb	pointer
->	O
str_	pointer
+	O
strb	pointer
->	O
length_	int
,	O
(	O
int	O
)	O
fill_char	int
,	O
strb	pointer
->	O
reserve_	int
-	O
strb	pointer
->	O
length_	int
)	O
;	O
}	O
strb	pointer
->	O
str_	pointer
[	O
new_length	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
return	O
strb	pointer
;	O
}	O
STROB	struct
*	O
strob_reopen	function
(	O
STROB	struct
*	O
strb	pointer
,	O
size_t	long
new_length	long
)	O
{	O
return	O
strob_reopen_fill_with	function
(	O
strb	pointer
,	O
new_length	long
,	O
(	O
int	O
)	O
'\0'	O
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_get_str	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
;	O
}	O
o__inline__	O
int	O
strob_get_reserve	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strb	pointer
->	O
reserve_	int
;	O
}	O
o__inline__	O
int	O
strob_get_length	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strb	pointer
->	O
length_	int
;	O
}	O
o__inline__	O
STROB	struct
*	O
strob_trunc	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strob_reopen	function
(	O
strb	pointer
,	O
STROB_INITLENGTH	int
+	O
1	int
)	O
;	O
}	O
void	O
strob_set_length	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
len	int
)	O
{	O
strob_set_memlength	function
(	O
strb	pointer
,	O
len	int
+	O
1	int
)	O
;	O
strb	pointer
->	O
str_	pointer
[	O
len	int
]	O
=	O
'\0'	O
;	O
}	O
char	O
*	O
strob_strcpy_at_offset	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
offset	int
,	O
char	O
*	O
str	pointer
)	O
{	O
STROB	struct
*	O
strb_ret	pointer
;	O
strb_ret	pointer
=	O
strob_reopen_if	function
(	O
strb	pointer
,	O
strlen	function
(	O
str	pointer
)	O
+	O
offset	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
strb_ret	pointer
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
strb	pointer
->	O
length_	int
=	O
offset	int
+	O
strlen	function
(	O
str	pointer
)	O
;	O
memmove	function
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
,	O
str	pointer
,	O
strlen	function
(	O
str	pointer
)	O
+	O
1	int
)	O
;	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
)	O
;	O
}	O
void	O
strob_chr_index	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
index	function
,	O
int	O
ch	int
)	O
{	O
strob_reopen_if_fill_with	function
(	O
strb	pointer
,	O
index	function
+	O
2	int
,	O
strb	pointer
->	O
fill_charM	int
)	O
;	O
if	O
(	O
index	function
>=	O
strb	pointer
->	O
length_	int
)	O
{	O
memset	function
(	O
strb	pointer
->	O
str_	pointer
+	O
strb	pointer
->	O
length_	int
,	O
strb	pointer
->	O
fill_charM	int
,	O
index	function
-	O
strb	pointer
->	O
length_	int
+	O
1	int
)	O
;	O
*	O
(	O
strb	pointer
->	O
str_	pointer
+	O
index	function
+	O
1	int
)	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
index	function
>	O
strb	pointer
->	O
length_	int
-	O
1	int
)	O
{	O
strb	pointer
->	O
length_	int
=	O
index	function
+	O
1	int
;	O
*	O
(	O
strb	pointer
->	O
str_	pointer
+	O
strb	pointer
->	O
length_	int
)	O
=	O
'\0'	O
;	O
}	O
*	O
(	O
strb	pointer
->	O
str_	pointer
+	O
index	function
)	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
ch	int
)	O
;	O
}	O
int	O
strob_get_char	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
index	function
)	O
{	O
if	O
(	O
index	function
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
index	function
>=	O
strb	pointer
->	O
length_	int
)	O
return	O
-	O
1	int
;	O
return	O
(	O
int	O
)	O
strb	pointer
->	O
str_	pointer
[	O
index	function
]	O
;	O
}	O
char	O
*	O
strob_strcat_at_offset	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
offset	int
,	O
char	O
*	O
str	pointer
)	O
{	O
STROB	struct
*	O
strb_ret	pointer
;	O
strb_ret	pointer
=	O
strob_reopen_if	function
(	O
strb	pointer
,	O
strlen	function
(	O
str	pointer
)	O
+	O
offset	int
+	O
1	int
+	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
)	O
)	O
)	O
;	O
if	O
(	O
!	O
strb_ret	pointer
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
strb	pointer
->	O
length_	int
=	O
offset	int
+	O
strlen	function
(	O
str	pointer
)	O
;	O
memmove	function
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
+	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
)	O
)	O
,	O
str	pointer
,	O
strlen	function
(	O
str	pointer
)	O
+	O
1	int
)	O
;	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
)	O
;	O
}	O
o__inline__	O
STROB	struct
*	O
strob_cpy	function
(	O
STROB	struct
*	O
s	pointer
,	O
STROB	struct
*	O
ct	pointer
)	O
{	O
strob_strcpy_at_offset	function
(	O
s	pointer
,	O
0	int
,	O
(	O
char	O
*	O
)	O
(	O
ct	pointer
->	O
str_	pointer
)	O
)	O
;	O
return	O
s	pointer
;	O
}	O
STROB	struct
*	O
strob_cat	function
(	O
STROB	struct
*	O
s	pointer
,	O
STROB	struct
*	O
ct	pointer
)	O
{	O
strob_catstr	function
(	O
s	pointer
,	O
(	O
char	O
*	O
)	O
(	O
ct	pointer
->	O
str_	pointer
)	O
)	O
;	O
return	O
s	pointer
;	O
}	O
o__inline__	O
int	O
strob_cmp	function
(	O
STROB	struct
*	O
cs	pointer
,	O
STROB	struct
*	O
ct	pointer
)	O
{	O
return	O
strob_strcmp	function
(	O
cs	pointer
,	O
(	O
char	O
*	O
)	O
(	O
ct	pointer
->	O
str_	pointer
)	O
)	O
;	O
}	O
char	O
*	O
strob_chomp	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
char	O
*	O
p	pointer
;	O
char	O
*	O
s	pointer
=	O
strob_str	function
(	O
strb	pointer
)	O
;	O
if	O
(	O
(	O
p	pointer
=	O
strchr	function
(	O
s	pointer
,	O
'\n'	O
)	O
)	O
)	O
*	O
p	pointer
=	O
'\0'	O
;	O
if	O
(	O
(	O
p	pointer
=	O
strchr	function
(	O
s	pointer
,	O
'\r'	O
)	O
)	O
)	O
*	O
p	pointer
=	O
'\0'	O
;	O
return	O
s	pointer
;	O
}	O
char	O
*	O
strob_strncat	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
,	O
size_t	long
len	int
)	O
{	O
char	O
*	O
cret	pointer
;	O
STROB	struct
*	O
strb_ret	pointer
;	O
int	O
ilen	int
;	O
ilen	int
=	O
(	O
int	O
)	O
len	int
;	O
strb_ret	pointer
=	O
strob_reopen_if	function
(	O
strb	pointer
,	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
+	O
ilen	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
strb_ret	pointer
)	O
{	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
cret	pointer
=	O
strncat	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
,	O
str	pointer
,	O
ilen	int
)	O
;	O
strb	pointer
->	O
length_	int
=	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
;	O
(	O
strb	pointer
->	O
str_	pointer
)	O
[	O
strb	pointer
->	O
length_	int
]	O
=	O
'\0'	O
;	O
return	O
cret	pointer
;	O
}	O
char	O
*	O
strob_strcat	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
STROB	struct
*	O
strb_ret	pointer
;	O
strb_ret	pointer
=	O
strob_reopen_if	function
(	O
strb	pointer
,	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
+	O
strlen	function
(	O
str	pointer
)	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
strb_ret	pointer
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
strb	pointer
->	O
length_	int
=	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
+	O
strlen	function
(	O
str	pointer
)	O
;	O
return	O
strcat	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
,	O
str	pointer
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_strcpy	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
return	O
strob_strcpy_at_offset	function
(	O
strb	pointer
,	O
0	int
,	O
str	pointer
)	O
;	O
}	O
char	O
*	O
strob_charcat	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
ch	int
)	O
{	O
char	O
c	int
[	O
2	int
]	O
;	O
c	int
[	O
0	int
]	O
=	O
(	O
char	O
)	O
ch	int
;	O
c	int
[	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
ch	int
)	O
{	O
return	O
strob_strcat	function
(	O
strb	pointer
,	O
c	int
)	O
;	O
}	O
else	O
{	O
char	O
*	O
s	pointer
;	O
strob_strcat	function
(	O
strb	pointer
,	O
"X"	pointer
)	O
;	O
s	pointer
=	O
strob_str	function
(	O
strb	pointer
)	O
;	O
s	pointer
[	O
strlen	function
(	O
s	pointer
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
return	O
(	O
char	O
*	O
)	O
NULL	O
;	O
}	O
char	O
*	O
strob_strncpy	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
,	O
size_t	long
n	long
)	O
{	O
char	O
*	O
s	pointer
;	O
strob_reopen_if	function
(	O
strb	pointer
,	O
n	long
+	O
1	int
)	O
;	O
s	pointer
=	O
strncpy	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
,	O
str	pointer
,	O
n	long
)	O
;	O
strb	pointer
->	O
str_	pointer
[	O
n	long
]	O
=	O
'\0'	O
;	O
strb	pointer
->	O
length_	int
=	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
;	O
return	O
s	pointer
;	O
}	O
o__inline__	O
int	O
strob_strcmp	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
return	O
strcmp	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
,	O
str	pointer
)	O
;	O
}	O
o__inline__	O
size_t	long
strob_strlen	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
;	O
}	O
char	O
*	O
strob_strchar	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
index	function
)	O
{	O
strob_reopen_if	function
(	O
strb	pointer
,	O
index	function
+	O
1	int
)	O
;	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
+	O
index	function
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_strrchr	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
c	int
)	O
{	O
return	O
strrchr	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
,	O
c	int
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_strstr	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
return	O
strstr	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
,	O
str	pointer
)	O
;	O
}	O
o__inline__	O
void	O
strob_chr	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
ch	int
)	O
{	O
strob_chr_index	function
(	O
strb	pointer
,	O
strlen	function
(	O
(	O
char	O
*	O
)	O
(	O
strb	pointer
->	O
str_	pointer
)	O
)	O
,	O
ch	int
)	O
;	O
}	O
char	O
*	O
strob_strtok	function
(	O
STROB	struct
*	O
buf	pointer
,	O
char	O
*	O
s	pointer
,	O
const	O
char	O
*	O
delim	pointer
)	O
{	O
char	O
*	O
retval	pointer
;	O
char	O
*	O
start	pointer
;	O
char	O
*	O
p	pointer
;	O
char	O
*	O
m	pointer
;	O
char	O
*	O
end	pointer
;	O
if	O
(	O
s	pointer
)	O
{	O
if	O
(	O
s	pointer
!=	O
(	O
char	O
*	O
)	O
(	O
buf	pointer
->	O
str_	pointer
)	O
)	O
strob_strcpy	function
(	O
buf	pointer
,	O
s	pointer
)	O
;	O
buf	pointer
->	O
tok_	pointer
=	O
strob_str	function
(	O
buf	pointer
)	O
;	O
}	O
start	pointer
=	O
buf	pointer
->	O
tok_	pointer
;	O
if	O
(	O
!	O
strlen	function
(	O
start	pointer
)	O
)	O
return	O
NULL	O
;	O
p	pointer
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
p	pointer
==	O
start	pointer
)	O
start	pointer
++	O
;	O
p	pointer
=	O
strpbrk	function
(	O
start	pointer
,	O
delim	pointer
)	O
;	O
}	O
while	O
(	O
p	pointer
&&	O
p	pointer
==	O
start	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
{	O
*	O
p	pointer
=	O
'\0'	O
;	O
end	pointer
=	O
p	pointer
+	O
1	int
+	O
strlen	function
(	O
p	pointer
+	O
1	int
)	O
;	O
if	O
(	O
strlen	function
(	O
start	pointer
)	O
)	O
retval	pointer
=	O
start	pointer
;	O
else	O
retval	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
p	pointer
=	O
start	pointer
+	O
strlen	function
(	O
start	pointer
)	O
;	O
end	pointer
=	O
p	pointer
;	O
retval	pointer
=	O
start	pointer
;	O
}	O
buf	pointer
->	O
tok_	pointer
=	O
end	pointer
;	O
if	O
(	O
p	pointer
<	O
end	pointer
)	O
{	O
m	pointer
=	O
p	pointer
;	O
m	pointer
++	O
;	O
while	O
(	O
*	O
m	pointer
&&	O
strchr	function
(	O
delim	pointer
,	O
(	O
int	O
)	O
*	O
m	pointer
)	O
)	O
{	O
m	pointer
++	O
;	O
}	O
buf	pointer
->	O
tok_	pointer
=	O
m	pointer
;	O
}	O
if	O
(	O
!	O
strlen	function
(	O
retval	pointer
)	O
)	O
retval	pointer
=	O
NULL	O
;	O
return	O
retval	pointer
;	O
}	O
char	O
*	O
strob_strstrtok	function
(	O
STROB	struct
*	O
buf	pointer
,	O
char	O
*	O
s	pointer
,	O
const	O
char	O
*	O
delim	pointer
)	O
{	O
char	O
*	O
retval	pointer
;	O
char	O
*	O
start	pointer
;	O
char	O
*	O
p	pointer
;	O
char	O
*	O
m	pointer
;	O
char	O
*	O
end	pointer
;	O
int	O
dlen	int
=	O
strlen	function
(	O
delim	pointer
)	O
;	O
if	O
(	O
s	pointer
)	O
{	O
strob_strcpy	function
(	O
buf	pointer
,	O
s	pointer
)	O
;	O
buf	pointer
->	O
tok_	pointer
=	O
strob_str	function
(	O
buf	pointer
)	O
;	O
}	O
start	pointer
=	O
buf	pointer
->	O
tok_	pointer
;	O
if	O
(	O
!	O
strlen	function
(	O
start	pointer
)	O
)	O
return	O
NULL	O
;	O
p	pointer
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
p	pointer
==	O
start	pointer
)	O
start	pointer
+=	O
dlen	int
;	O
p	pointer
=	O
strstr	function
(	O
start	pointer
,	O
delim	pointer
)	O
;	O
}	O
while	O
(	O
p	pointer
&&	O
p	pointer
==	O
start	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
{	O
*	O
p	pointer
=	O
'\0'	O
;	O
end	pointer
=	O
p	pointer
+	O
dlen	int
+	O
strlen	function
(	O
p	pointer
+	O
dlen	int
)	O
;	O
if	O
(	O
strlen	function
(	O
start	pointer
)	O
)	O
retval	pointer
=	O
start	pointer
;	O
else	O
retval	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
p	pointer
=	O
start	pointer
+	O
strlen	function
(	O
start	pointer
)	O
;	O
end	pointer
=	O
p	pointer
;	O
retval	pointer
=	O
start	pointer
;	O
}	O
buf	pointer
->	O
tok_	pointer
=	O
end	pointer
;	O
if	O
(	O
p	pointer
<	O
end	pointer
)	O
{	O
m	pointer
=	O
p	pointer
;	O
m	pointer
+=	O
dlen	int
;	O
while	O
(	O
*	O
m	pointer
&&	O
strstr	function
(	O
m	pointer
,	O
delim	pointer
)	O
==	O
m	pointer
)	O
{	O
m	pointer
+=	O
dlen	int
;	O
}	O
buf	pointer
->	O
tok_	pointer
=	O
m	pointer
;	O
}	O
if	O
(	O
!	O
strlen	function
(	O
retval	pointer
)	O
)	O
retval	pointer
=	O
NULL	O
;	O
return	O
retval	pointer
;	O
}	O
void	O
strob_set_fill_char	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
ch	int
)	O
{	O
strb	pointer
->	O
fill_charM	int
=	O
ch	int
;	O
}	O
int	O
strob_get_fill_char	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strb	pointer
->	O
fill_charM	int
;	O
}	O
void	O
*	O
strob_memcpy	function
(	O
STROB	struct
*	O
strb	pointer
,	O
void	O
*	O
ct	pointer
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	function
(	O
strb	pointer
,	O
(	O
int	O
)	O
n	long
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memcpy	function
(	O
strb	pointer
->	O
str_	pointer
,	O
ct	pointer
,	O
n	long
)	O
;	O
}	O
void	O
strob_append_hidden_null	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
strob_set_up	function
(	O
strb	pointer
,	O
strb	pointer
->	O
length_	int
+	O
1	int
)	O
;	O
memcpy	function
(	O
strb	pointer
->	O
str_	pointer
+	O
strb	pointer
->	O
length_	int
,	O
"\0"	pointer
,	O
1	int
)	O
;	O
}	O
void	O
*	O
strob_memcpy_at	function
(	O
STROB	struct
*	O
strb	pointer
,	O
size_t	long
offset	int
,	O
void	O
*	O
ct	pointer
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	function
(	O
strb	pointer
,	O
(	O
int	O
)	O
n	long
+	O
(	O
int	O
)	O
offset	int
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memcpy	function
(	O
strb	pointer
->	O
str_	pointer
+	O
offset	int
,	O
ct	pointer
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memmove	function
(	O
STROB	struct
*	O
strb	pointer
,	O
void	O
*	O
ct	pointer
,	O
size_t	long
n	long
)	O
{	O
return	O
strob_memmove_to	function
(	O
strb	pointer
,	O
0	int
,	O
ct	pointer
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memmove_to	function
(	O
STROB	struct
*	O
strb	pointer
,	O
size_t	long
dst_offset	long
,	O
void	O
*	O
ct	pointer
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	function
(	O
strb	pointer
,	O
(	O
int	O
)	O
(	O
dst_offset	long
+	O
n	long
)	O
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memmove	function
(	O
strb	pointer
->	O
str_	pointer
+	O
dst_offset	long
,	O
ct	pointer
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memcat	function
(	O
STROB	struct
*	O
strb	pointer
,	O
void	O
*	O
ct	pointer
,	O
size_t	long
n	long
)	O
{	O
return	O
strob_memmove_to	function
(	O
strb	pointer
,	O
strb	pointer
->	O
length_	int
,	O
ct	pointer
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memset	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
c	int
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	function
(	O
strb	pointer
,	O
(	O
int	O
)	O
(	O
n	long
)	O
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memset	function
(	O
strb	pointer
->	O
str_	pointer
,	O
c	int
,	O
n	long
)	O
;	O
}	O
void	O
strob_set_memlength	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
len	int
)	O
{	O
strob_reopen_if	function
(	O
strb	pointer
,	O
len	int
)	O
;	O
strb	pointer
->	O
length_	int
=	O
len	int
;	O
}	O
o__inline__	O
int	O
strob_setlen	function
(	O
STROB	struct
*	O
strb	pointer
,	O
int	O
len	int
)	O
{	O
strob_set_length	function
(	O
strb	pointer
,	O
len	int
)	O
;	O
return	O
len	int
;	O
}	O
o__inline__	O
int	O
strob_length	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strob_get_length	function
(	O
strb	pointer
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_str	function
(	O
STROB	struct
*	O
strb	pointer
)	O
{	O
return	O
strob_get_str	function
(	O
strb	pointer
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_catstr	function
(	O
STROB	struct
*	O
strb	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
return	O
strob_strcat	function
(	O
strb	pointer
,	O
str	pointer
)	O
;	O
}	O
int	O
strob_vsprintf_at	function
(	O
STROB	struct
*	O
sb	pointer
,	O
int	O
at_offset	int
,	O
char	O
*	O
format	pointer
,	O
va_list	array
ap	array
)	O
{	O
int	O
added_amount	int
=	O
0	int
;	O
int	O
up_incr	int
=	O
128	int
;	O
char	O
*	O
start	pointer
;	O
va_list	array
aq	array
;	O
int	O
ret	int
;	O
int	O
len	int
;	O
char	O
*	O
oldend	pointer
=	O
NULL	O
;	O
if	O
(	O
at_offset	int
>	O
strob_get_reserve	function
(	O
sb	pointer
)	O
)	O
{	O
strob_set_memlength	function
(	O
sb	pointer
,	O
at_offset	int
+	O
up_incr	int
)	O
;	O
}	O
do	O
{	O
if	O
(	O
oldend	pointer
)	O
*	O
oldend	pointer
=	O
'\0'	O
;	O
strob_set_memlength	function
(	O
sb	pointer
,	O
strob_get_reserve	function
(	O
sb	pointer
)	O
+	O
added_amount	int
)	O
;	O
start	pointer
=	O
strob_str	function
(	O
sb	pointer
)	O
+	O
at_offset	int
;	O
len	int
=	O
strob_get_reserve	function
(	O
sb	pointer
)	O
-	O
at_offset	int
;	O
oldend	pointer
=	O
start	pointer
;	O
added_amount	int
+=	O
up_incr	int
;	O
va_copy	O
(	O
aq	array
,	O
ap	array
)	O
;	O
ret	int
=	O
vsnprintf	function
(	O
start	pointer
,	O
len	int
,	O
format	pointer
,	O
aq	array
)	O
;	O
va_end	O
(	O
aq	array
)	O
;	O
}	O
while	O
(	O
ret	int
<	O
0	int
||	O
ret	int
>=	O
len	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_vsprintf	function
(	O
STROB	struct
*	O
sb	pointer
,	O
int	O
do_append	int
,	O
char	O
*	O
format	pointer
,	O
va_list	array
ap	array
)	O
{	O
int	O
added_amount	int
=	O
0	int
;	O
int	O
up_incr	int
=	O
128	int
;	O
char	O
*	O
start	pointer
;	O
va_list	array
aq	array
;	O
int	O
ret	int
;	O
int	O
len	int
;	O
char	O
*	O
oldend	pointer
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
oldend	pointer
)	O
*	O
oldend	pointer
=	O
'\0'	O
;	O
strob_set_memlength	function
(	O
sb	pointer
,	O
strob_get_reserve	function
(	O
sb	pointer
)	O
+	O
added_amount	int
)	O
;	O
if	O
(	O
do_append	int
)	O
{	O
start	pointer
=	O
strob_str	function
(	O
sb	pointer
)	O
+	O
strlen	function
(	O
strob_str	function
(	O
sb	pointer
)	O
)	O
;	O
len	int
=	O
strob_get_reserve	function
(	O
sb	pointer
)	O
-	O
strlen	function
(	O
strob_str	function
(	O
sb	pointer
)	O
)	O
;	O
}	O
else	O
{	O
start	pointer
=	O
strob_str	function
(	O
sb	pointer
)	O
;	O
len	int
=	O
strob_get_reserve	function
(	O
sb	pointer
)	O
;	O
}	O
oldend	pointer
=	O
start	pointer
;	O
added_amount	int
+=	O
up_incr	int
;	O
va_copy	O
(	O
aq	array
,	O
ap	array
)	O
;	O
ret	int
=	O
vsnprintf	function
(	O
start	pointer
,	O
len	int
,	O
format	pointer
,	O
aq	array
)	O
;	O
va_end	O
(	O
aq	array
)	O
;	O
}	O
while	O
(	O
ret	int
<	O
0	int
||	O
ret	int
>=	O
len	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_snprintf	function
(	O
STROB	struct
*	O
sb	pointer
,	O
int	O
do_append	int
,	O
size_t	long
len	int
,	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	array
ap	array
;	O
int	O
old_len	int
;	O
char	O
*	O
s	pointer
;	O
if	O
(	O
len	int
<=	O
0	int
)	O
return	O
len	int
;	O
if	O
(	O
do_append	int
)	O
old_len	int
=	O
strob_strlen	function
(	O
sb	pointer
)	O
;	O
else	O
old_len	int
=	O
0	int
;	O
va_start	O
(	O
ap	array
,	O
format	pointer
)	O
;	O
ret	int
=	O
strob_vsprintf	function
(	O
sb	pointer
,	O
do_append	int
,	O
format	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
strob_chr_index	function
(	O
sb	pointer
,	O
old_len	int
+	O
len	int
-	O
1	int
,	O
0	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_sprintf	function
(	O
STROB	struct
*	O
sb	pointer
,	O
int	O
do_append	int
,	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	array
,	O
format	pointer
)	O
;	O
ret	int
=	O
strob_vsprintf	function
(	O
sb	pointer
,	O
do_append	int
,	O
format	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_sprintf_at	function
(	O
STROB	struct
*	O
sb	pointer
,	O
int	O
at_offset	int
,	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	array
,	O
format	pointer
)	O
;	O
ret	int
=	O
strob_vsprintf_at	function
(	O
sb	pointer
,	O
at_offset	int
,	O
format	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
ret	int
;	O
}	O
