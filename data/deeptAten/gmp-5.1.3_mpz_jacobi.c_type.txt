int	O
mpz_jacobi	O
(	O
mpz_srcptr	pointer
a	int
,	O
mpz_srcptr	pointer
b	int
)	O
{	O
mp_srcptr	pointer
asrcp	pointer
,	O
bsrcp	pointer
;	O
mp_size_t	long
asize	long
,	O
bsize	long
;	O
mp_limb_t	long
alow	long
,	O
blow	long
;	O
mp_ptr	pointer
ap	pointer
,	O
bp	pointer
;	O
unsigned	O
btwos	int
;	O
int	O
result_bit1	int
;	O
int	O
res	int
;	O
TMP_DECL	O
;	O
asize	long
=	O
SIZ	O
(	O
a	int
)	O
;	O
asrcp	pointer
=	O
PTR	O
(	O
a	int
)	O
;	O
alow	long
=	O
asrcp	pointer
[	O
0	int
]	O
;	O
bsize	long
=	O
SIZ	O
(	O
b	int
)	O
;	O
bsrcp	pointer
=	O
PTR	O
(	O
b	int
)	O
;	O
blow	long
=	O
bsrcp	pointer
[	O
0	int
]	O
;	O
if	O
(	O
bsize	long
==	O
0	int
)	O
return	O
JACOBI_LS0	O
(	O
alow	long
,	O
asize	long
)	O
;	O
if	O
(	O
asize	long
==	O
0	int
)	O
return	O
JACOBI_0LS	O
(	O
blow	long
,	O
bsize	long
)	O
;	O
if	O
(	O
(	O
(	O
(	O
alow	long
|	O
blow	long
)	O
&	O
1	int
)	O
==	O
0	int
)	O
)	O
return	O
0	int
;	O
if	O
(	O
bsize	long
<	O
0	int
)	O
{	O
result_bit1	int
=	O
(	O
asize	long
<	O
0	int
)	O
<<	O
1	int
;	O
bsize	long
=	O
-	O
bsize	long
;	O
}	O
else	O
result_bit1	int
=	O
0	int
;	O
JACOBI_STRIP_LOW_ZEROS	O
(	O
result_bit1	int
,	O
alow	long
,	O
bsrcp	pointer
,	O
bsize	long
,	O
blow	long
)	O
;	O
count_trailing_zeros	O
(	O
btwos	int
,	O
blow	long
)	O
;	O
blow	long
>>=	O
btwos	int
;	O
if	O
(	O
bsize	long
>	O
1	int
&&	O
btwos	int
>	O
0	int
)	O
{	O
mp_limb_t	long
b1	long
=	O
bsrcp	pointer
[	O
1	int
]	O
;	O
blow	long
|=	O
b1	long
<<	O
(	O
GMP_NUMB_BITS	O
-	O
btwos	int
)	O
;	O
if	O
(	O
bsize	long
==	O
2	int
&&	O
(	O
b1	long
>>	O
btwos	int
)	O
==	O
0	int
)	O
bsize	long
=	O
1	int
;	O
}	O
if	O
(	O
asize	long
<	O
0	int
)	O
{	O
result_bit1	int
^=	O
JACOBI_N1B_BIT1	O
(	O
blow	long
)	O
;	O
asize	long
=	O
-	O
asize	long
;	O
}	O
JACOBI_STRIP_LOW_ZEROS	O
(	O
result_bit1	int
,	O
blow	long
,	O
asrcp	pointer
,	O
asize	long
,	O
alow	long
)	O
;	O
if	O
(	O
asize	long
<	O
bsize	long
)	O
{	O
MPN_SRCPTR_SWAP	O
(	O
asrcp	pointer
,	O
asize	long
,	O
bsrcp	pointer
,	O
bsize	long
)	O
;	O
MP_LIMB_T_SWAP	O
(	O
alow	long
,	O
blow	long
)	O
;	O
count_trailing_zeros	O
(	O
btwos	int
,	O
blow	long
)	O
;	O
blow	long
>>=	O
btwos	int
;	O
if	O
(	O
bsize	long
>	O
1	int
&&	O
btwos	int
>	O
0	int
)	O
{	O
mp_limb_t	long
b1	long
=	O
bsrcp	pointer
[	O
1	int
]	O
;	O
blow	long
|=	O
b1	long
<<	O
(	O
GMP_NUMB_BITS	O
-	O
btwos	int
)	O
;	O
if	O
(	O
bsize	long
==	O
2	int
&&	O
(	O
b1	long
>>	O
btwos	int
)	O
==	O
0	int
)	O
bsize	long
=	O
1	int
;	O
}	O
result_bit1	int
^=	O
JACOBI_RECIP_UU_BIT1	O
(	O
alow	long
,	O
blow	long
)	O
;	O
}	O
if	O
(	O
bsize	long
==	O
1	int
)	O
{	O
result_bit1	int
^=	O
JACOBI_TWOS_U_BIT1	O
(	O
btwos	int
,	O
alow	long
)	O
;	O
if	O
(	O
blow	long
==	O
1	int
)	O
return	O
JACOBI_BIT1_TO_PN	O
(	O
result_bit1	int
)	O
;	O
if	O
(	O
asize	long
>	O
1	int
)	O
JACOBI_MOD_OR_MODEXACT_1_ODD	O
(	O
result_bit1	int
,	O
alow	long
,	O
asrcp	pointer
,	O
asize	long
,	O
blow	long
)	O
;	O
return	O
mpn_jacobi_base	O
(	O
alow	long
,	O
blow	long
,	O
result_bit1	int
)	O
;	O
}	O
TMP_MARK	O
;	O
if	O
(	O
asize	long
>=	O
2	int
*	O
bsize	long
)	O
TMP_ALLOC_LIMBS_2	O
(	O
ap	pointer
,	O
bsize	long
,	O
bp	pointer
,	O
asize	long
-	O
bsize	long
+	O
1	int
)	O
;	O
else	O
TMP_ALLOC_LIMBS_2	O
(	O
ap	pointer
,	O
bsize	long
,	O
bp	pointer
,	O
bsize	long
)	O
;	O
if	O
(	O
asize	long
>	O
bsize	long
)	O
mpn_tdiv_qr	O
(	O
bp	pointer
,	O
ap	pointer
,	O
0	int
,	O
asrcp	pointer
,	O
asize	long
,	O
bsrcp	pointer
,	O
bsize	long
)	O
;	O
else	O
MPN_COPY	O
(	O
ap	pointer
,	O
asrcp	pointer
,	O
bsize	long
)	O
;	O
if	O
(	O
btwos	int
>	O
0	int
)	O
{	O
result_bit1	int
^=	O
JACOBI_TWOS_U_BIT1	O
(	O
btwos	int
,	O
alow	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_rshift	O
(	O
bp	pointer
,	O
bsrcp	pointer
,	O
bsize	long
,	O
btwos	int
)	O
)	O
;	O
bsize	long
-=	O
(	O
ap	pointer
[	O
bsize	long
-	O
1	int
]	O
|	O
bp	pointer
[	O
bsize	long
-	O
1	int
]	O
)	O
==	O
0	int
;	O
}	O
else	O
MPN_COPY	O
(	O
bp	pointer
,	O
bsrcp	pointer
,	O
bsize	long
)	O
;	O
ASSERT	O
(	O
blow	long
==	O
bp	pointer
[	O
0	int
]	O
)	O
;	O
res	int
=	O
mpn_jacobi_n	O
(	O
ap	pointer
,	O
bp	pointer
,	O
bsize	long
,	O
mpn_jacobi_init	function
(	O
ap	pointer
[	O
0	int
]	O
,	O
blow	long
,	O
(	O
result_bit1	int
>>	O
1	int
)	O
&	O
1	int
)	O
)	O
;	O
TMP_FREE	O
;	O
return	O
res	int
;	O
}	O
