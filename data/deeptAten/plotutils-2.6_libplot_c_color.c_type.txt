void	O
_pl_c_set_pen_color	function
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
cgm_object_type	int
)	O
{	O
int	O
red_long	int
,	O
green_long	int
,	O
blue_long	int
;	O
int	O
red	int
,	O
green	int
,	O
blue	int
;	O
int	O
byte_count	pointer
,	O
data_byte_count	pointer
,	O
data_len	int
;	O
int	O
fullstrength	int
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pen_type	int
==	O
0	int
&&	O
cgm_object_type	int
!=	O
CGM_OBJECT_TEXT	int
)	O
return	O
;	O
red_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
red	int
;	O
green_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
green	int
;	O
blue_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
blue	int
;	O
switch	O
(	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
)	O
{	O
case	O
1	int
:	O
red	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
red_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
green	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
green_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
blue	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
blue_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
break	O
;	O
case	O
2	int
:	O
default	O
:	O
red	int
=	O
red_long	int
;	O
green	int
=	O
green_long	int
;	O
blue	int
=	O
blue_long	int
;	O
break	O
;	O
}	O
fullstrength	int
=	O
(	O
1	int
<<	O
(	O
8	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
)	O
)	O
-	O
1	int
;	O
if	O
(	O
(	O
red	int
!=	O
0	int
||	O
green	int
!=	O
0	int
||	O
blue	int
!=	O
0	int
)	O
&&	O
(	O
red	int
!=	O
fullstrength	int
||	O
green	int
!=	O
fullstrength	int
||	O
blue	int
!=	O
fullstrength	int
)	O
)	O
_plotter	pointer
->	O
cgm_page_need_color	enum
=	O
true	int
;	O
switch	O
(	O
cgm_object_type	int
)	O
{	O
case	O
CGM_OBJECT_OPEN	int
:	O
if	O
(	O
_plotter	pointer
->	O
cgm_line_color	struct
.	O
red	int
!=	O
red	int
||	O
_plotter	pointer
->	O
cgm_line_color	struct
.	O
green	int
!=	O
green	int
||	O
_plotter	pointer
->	O
cgm_line_color	struct
.	O
blue	int
!=	O
blue	int
)	O
{	O
data_len	int
=	O
3	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
;	O
byte_count	pointer
=	O
data_byte_count	pointer
=	O
0	int
;	O
_cgm_emit_command_header	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
CGM_ATTRIBUTE_ELEMENT	int
,	O
4	int
,	O
data_len	int
,	O
&	O
byte_count	pointer
,	O
"LINECOLR"	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
red	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
green	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
blue	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_command_terminator	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
&	O
byte_count	pointer
)	O
;	O
_plotter	pointer
->	O
cgm_line_color	struct
.	O
red	int
=	O
red	int
;	O
_plotter	pointer
->	O
cgm_line_color	struct
.	O
green	int
=	O
green	int
;	O
_plotter	pointer
->	O
cgm_line_color	struct
.	O
blue	int
=	O
blue	int
;	O
}	O
break	O
;	O
case	O
CGM_OBJECT_CLOSED	int
:	O
if	O
(	O
_plotter	pointer
->	O
cgm_edge_color	struct
.	O
red	int
!=	O
red	int
||	O
_plotter	pointer
->	O
cgm_edge_color	struct
.	O
green	int
!=	O
green	int
||	O
_plotter	pointer
->	O
cgm_edge_color	struct
.	O
blue	int
!=	O
blue	int
)	O
{	O
data_len	int
=	O
3	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
;	O
byte_count	pointer
=	O
data_byte_count	pointer
=	O
0	int
;	O
_cgm_emit_command_header	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
CGM_ATTRIBUTE_ELEMENT	int
,	O
29	int
,	O
data_len	int
,	O
&	O
byte_count	pointer
,	O
"EDGECOLR"	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
red	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
green	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
blue	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_command_terminator	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
&	O
byte_count	pointer
)	O
;	O
_plotter	pointer
->	O
cgm_edge_color	struct
.	O
red	int
=	O
red	int
;	O
_plotter	pointer
->	O
cgm_edge_color	struct
.	O
green	int
=	O
green	int
;	O
_plotter	pointer
->	O
cgm_edge_color	struct
.	O
blue	int
=	O
blue	int
;	O
}	O
break	O
;	O
case	O
CGM_OBJECT_MARKER	int
:	O
if	O
(	O
_plotter	pointer
->	O
cgm_marker_color	struct
.	O
red	int
!=	O
red	int
||	O
_plotter	pointer
->	O
cgm_marker_color	struct
.	O
green	int
!=	O
green	int
||	O
_plotter	pointer
->	O
cgm_marker_color	struct
.	O
blue	int
!=	O
blue	int
)	O
{	O
data_len	int
=	O
3	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
;	O
byte_count	pointer
=	O
data_byte_count	pointer
=	O
0	int
;	O
_cgm_emit_command_header	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
CGM_ATTRIBUTE_ELEMENT	int
,	O
8	int
,	O
data_len	int
,	O
&	O
byte_count	pointer
,	O
"MARKERCOLR"	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
red	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
green	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
blue	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_command_terminator	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
&	O
byte_count	pointer
)	O
;	O
_plotter	pointer
->	O
cgm_marker_color	struct
.	O
red	int
=	O
red	int
;	O
_plotter	pointer
->	O
cgm_marker_color	struct
.	O
green	int
=	O
green	int
;	O
_plotter	pointer
->	O
cgm_marker_color	struct
.	O
blue	int
=	O
blue	int
;	O
}	O
break	O
;	O
case	O
CGM_OBJECT_TEXT	int
:	O
if	O
(	O
_plotter	pointer
->	O
cgm_text_color	struct
.	O
red	int
!=	O
red	int
||	O
_plotter	pointer
->	O
cgm_text_color	struct
.	O
green	int
!=	O
green	int
||	O
_plotter	pointer
->	O
cgm_text_color	struct
.	O
blue	int
!=	O
blue	int
)	O
{	O
data_len	int
=	O
3	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
;	O
byte_count	pointer
=	O
data_byte_count	pointer
=	O
0	int
;	O
_cgm_emit_command_header	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
CGM_ATTRIBUTE_ELEMENT	int
,	O
14	int
,	O
data_len	int
,	O
&	O
byte_count	pointer
,	O
"TEXTCOLR"	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
red	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
green	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
blue	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_command_terminator	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
&	O
byte_count	pointer
)	O
;	O
_plotter	pointer
->	O
cgm_text_color	struct
.	O
red	int
=	O
red	int
;	O
_plotter	pointer
->	O
cgm_text_color	struct
.	O
green	int
=	O
green	int
;	O
_plotter	pointer
->	O
cgm_text_color	struct
.	O
blue	int
=	O
blue	int
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
void	O
_pl_c_set_fill_color	function
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
cgm_object_type	int
)	O
{	O
int	O
red_long	int
,	O
green_long	int
,	O
blue_long	int
;	O
int	O
red	int
,	O
green	int
,	O
blue	int
;	O
int	O
fullstrength	int
;	O
int	O
byte_count	pointer
,	O
data_byte_count	pointer
,	O
data_len	int
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fill_type	int
==	O
0	int
)	O
return	O
;	O
if	O
(	O
cgm_object_type	int
!=	O
CGM_OBJECT_OPEN	int
&&	O
cgm_object_type	int
!=	O
CGM_OBJECT_CLOSED	int
)	O
return	O
;	O
red_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
.	O
red	int
;	O
green_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
.	O
green	int
;	O
blue_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
.	O
blue	int
;	O
switch	O
(	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
)	O
{	O
case	O
1	int
:	O
red	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
red_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
green	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
green_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
blue	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
blue_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
break	O
;	O
case	O
2	int
:	O
default	O
:	O
red	int
=	O
red_long	int
;	O
green	int
=	O
green_long	int
;	O
blue	int
=	O
blue_long	int
;	O
break	O
;	O
}	O
fullstrength	int
=	O
(	O
1	int
<<	O
(	O
8	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
)	O
)	O
-	O
1	int
;	O
if	O
(	O
(	O
red	int
!=	O
0	int
||	O
green	int
!=	O
0	int
||	O
blue	int
!=	O
0	int
)	O
&&	O
(	O
red	int
!=	O
fullstrength	int
||	O
green	int
!=	O
fullstrength	int
||	O
blue	int
!=	O
fullstrength	int
)	O
)	O
_plotter	pointer
->	O
cgm_page_need_color	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
cgm_fillcolor	struct
.	O
red	int
!=	O
red	int
||	O
_plotter	pointer
->	O
cgm_fillcolor	struct
.	O
green	int
!=	O
green	int
||	O
_plotter	pointer
->	O
cgm_fillcolor	struct
.	O
blue	int
!=	O
blue	int
)	O
{	O
data_len	int
=	O
3	int
*	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
;	O
byte_count	pointer
=	O
data_byte_count	pointer
=	O
0	int
;	O
_cgm_emit_command_header	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
CGM_ATTRIBUTE_ELEMENT	int
,	O
23	int
,	O
data_len	int
,	O
&	O
byte_count	pointer
,	O
"FILLCOLR"	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
red	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
green	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_color_component	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
false	int
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
(	O
unsigned	O
int	O
)	O
blue	int
,	O
data_len	int
,	O
&	O
data_byte_count	pointer
,	O
&	O
byte_count	pointer
)	O
;	O
_cgm_emit_command_terminator	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
_plotter	pointer
->	O
cgm_encoding	int
,	O
&	O
byte_count	pointer
)	O
;	O
_plotter	pointer
->	O
cgm_fillcolor	struct
.	O
red	int
=	O
red	int
;	O
_plotter	pointer
->	O
cgm_fillcolor	struct
.	O
green	int
=	O
green	int
;	O
_plotter	pointer
->	O
cgm_fillcolor	struct
.	O
blue	int
=	O
blue	int
;	O
}	O
}	O
void	O
_pl_c_set_bg_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
int	O
red_long	int
,	O
green_long	int
,	O
blue_long	int
;	O
int	O
red	int
,	O
green	int
,	O
blue	int
;	O
red_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
.	O
red	int
;	O
green_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
.	O
green	int
;	O
blue_long	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
.	O
blue	int
;	O
switch	O
(	O
CGM_BINARY_BYTES_PER_COLOR_COMPONENT	int
)	O
{	O
case	O
1	int
:	O
red	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
red_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
green	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
green_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
blue	int
=	O
(	O
(	O
(	O
unsigned	O
int	O
)	O
blue_long	int
)	O
>>	O
8	int
)	O
&	O
0xff	int
;	O
break	O
;	O
case	O
2	int
:	O
default	O
:	O
red	int
=	O
red_long	int
;	O
green	int
=	O
green_long	int
;	O
blue	int
=	O
blue_long	int
;	O
break	O
;	O
}	O
_plotter	pointer
->	O
cgm_bgcolor	struct
.	O
red	int
=	O
red	int
;	O
_plotter	pointer
->	O
cgm_bgcolor	struct
.	O
green	int
=	O
green	int
;	O
_plotter	pointer
->	O
cgm_bgcolor	struct
.	O
blue	int
=	O
blue	int
;	O
_plotter	pointer
->	O
cgm_bgcolor_suppressed	enum
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor_suppressed	enum
;	O
}	O
