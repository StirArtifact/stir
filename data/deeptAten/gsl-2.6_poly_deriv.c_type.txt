int	O
gsl_poly_eval_derivs	function
(	O
const	O
double	O
c	array
[	O
]	O
,	O
const	O
size_t	long
lenc	long
,	O
const	O
double	O
x	double
,	O
double	O
res	array
[	O
]	O
,	O
const	O
size_t	long
lenres	long
)	O
{	O
size_t	long
i	int
,	O
n	long
,	O
nmax	long
;	O
size_t	long
k	long
,	O
l	long
,	O
lmax	long
;	O
for	O
(	O
i	int
=	O
0	int
,	O
n	long
=	O
0	int
,	O
nmax	long
=	O
0	int
;	O
i	int
<	O
lenres	long
;	O
i	int
++	O
)	O
{	O
if	O
(	O
n	long
<	O
lenc	long
)	O
{	O
res	array
[	O
i	int
]	O
=	O
c	array
[	O
lenc	long
-	O
1	int
]	O
;	O
nmax	long
=	O
n	long
;	O
n	long
++	O
;	O
}	O
else	O
res	array
[	O
i	int
]	O
=	O
0.0	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
lenc	long
-	O
1	int
;	O
i	int
++	O
)	O
{	O
k	long
=	O
(	O
lenc	long
-	O
1	int
)	O
-	O
i	int
;	O
res	array
[	O
0	int
]	O
=	O
(	O
(	O
x	double
*	O
res	array
[	O
0	int
]	O
)	O
+	O
c	array
[	O
k	long
-	O
1	int
]	O
)	O
;	O
lmax	long
=	O
(	O
nmax	long
<	O
k	long
)	O
?	O
nmax	long
:	O
k	long
-	O
1	int
;	O
for	O
(	O
l	long
=	O
1	int
;	O
l	long
<=	O
lmax	long
;	O
l	long
++	O
)	O
{	O
res	array
[	O
l	long
]	O
=	O
(	O
(	O
x	double
*	O
res	array
[	O
l	long
]	O
)	O
+	O
res	array
[	O
l	long
-	O
1	int
]	O
)	O
;	O
}	O
}	O
{	O
double	O
f	double
=	O
1.0	int
;	O
for	O
(	O
i	int
=	O
2	int
;	O
i	int
<=	O
nmax	long
;	O
i	int
++	O
)	O
{	O
f	double
*=	O
i	int
;	O
res	array
[	O
i	int
]	O
*=	O
f	double
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
