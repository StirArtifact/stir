int	O
mu_attribute_create	function
(	O
mu_attribute_t	pointer
*	O
pattr	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
mu_attribute_t	pointer
attr	pointer
;	O
if	O
(	O
pattr	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
attr	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
attr	pointer
)	O
)	O
;	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
attr	pointer
->	O
owner	pointer
=	O
owner	pointer
;	O
*	O
pattr	pointer
=	O
attr	pointer
;	O
return	O
0	int
;	O
}	O
void	O
mu_attribute_destroy	function
(	O
mu_attribute_t	pointer
*	O
pattr	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
pattr	pointer
&&	O
*	O
pattr	pointer
)	O
{	O
mu_attribute_t	pointer
attr	pointer
=	O
*	O
pattr	pointer
;	O
if	O
(	O
attr	pointer
->	O
owner	pointer
==	O
owner	pointer
)	O
free	function
(	O
*	O
pattr	pointer
)	O
;	O
*	O
pattr	pointer
=	O
NULL	O
;	O
}	O
}	O
void	O
*	O
mu_attribute_get_owner	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
(	O
attr	pointer
)	O
?	O
attr	pointer
->	O
owner	pointer
:	O
NULL	O
;	O
}	O
int	O
mu_attribute_is_modified	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
(	O
attr	pointer
)	O
?	O
attr	pointer
->	O
flags	int
&	O
MU_ATTRIBUTE_MODIFIED	int
:	O
0	int
;	O
}	O
int	O
mu_attribute_clear_modified	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
if	O
(	O
attr	pointer
)	O
attr	pointer
->	O
flags	int
&=	O
~	O
MU_ATTRIBUTE_MODIFIED	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_modified	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
if	O
(	O
attr	pointer
)	O
attr	pointer
->	O
flags	int
|=	O
MU_ATTRIBUTE_MODIFIED	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_get_flags	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
*	O
pflags	pointer
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pflags	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
attr	pointer
->	O
_get_flags	pointer
)	O
return	O
attr	pointer
->	O
_get_flags	pointer
(	O
attr	pointer
,	O
pflags	pointer
)	O
;	O
*	O
pflags	pointer
=	O
attr	pointer
->	O
flags	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_flags	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
status	int
=	O
0	int
;	O
int	O
oflags	int
=	O
0	int
;	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
oflags	int
)	O
;	O
if	O
(	O
(	O
oflags	int
&	O
flags	int
)	O
==	O
flags	int
)	O
return	O
0	int
;	O
if	O
(	O
attr	pointer
->	O
_set_flags	pointer
)	O
status	int
=	O
attr	pointer
->	O
_set_flags	pointer
(	O
attr	pointer
,	O
flags	int
)	O
;	O
else	O
attr	pointer
->	O
flags	int
|=	O
flags	int
;	O
if	O
(	O
status	int
==	O
0	int
)	O
mu_attribute_set_modified	function
(	O
attr	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_unset_flags	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
status	int
=	O
0	int
;	O
int	O
oflags	int
=	O
0	int
;	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
oflags	int
)	O
;	O
if	O
(	O
(	O
oflags	int
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
attr	pointer
->	O
_unset_flags	pointer
)	O
status	int
=	O
attr	pointer
->	O
_unset_flags	pointer
(	O
attr	pointer
,	O
flags	int
)	O
;	O
else	O
attr	pointer
->	O
flags	int
&=	O
~	O
flags	int
;	O
if	O
(	O
status	int
==	O
0	int
)	O
mu_attribute_set_modified	function
(	O
attr	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_get_flags	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
(	O
*	O
_get_flags	pointer
)	O
(	O
mu_attribute_t	pointer
,	O
int	O
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
attr	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
attr	pointer
->	O
_get_flags	pointer
=	O
_get_flags	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_set_flags	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
(	O
*	O
_set_flags	pointer
)	O
(	O
mu_attribute_t	pointer
,	O
int	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
attr	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
attr	pointer
->	O
_set_flags	pointer
=	O
_set_flags	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_unset_flags	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
(	O
*	O
_unset_flags	pointer
)	O
(	O
mu_attribute_t	pointer
,	O
int	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
attr	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
attr	pointer
->	O
_unset_flags	pointer
=	O
_unset_flags	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_userflag	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
flag	int
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
attr	pointer
->	O
user_flags	int
|=	O
flag	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_set_seen	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_set_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_SEEN	int
)	O
;	O
}	O
int	O
mu_attribute_set_answered	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_set_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_ANSWERED	int
)	O
;	O
}	O
int	O
mu_attribute_set_flagged	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_set_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_FLAGGED	int
)	O
;	O
}	O
int	O
mu_attribute_set_read	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_set_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_READ	int
)	O
;	O
}	O
int	O
mu_attribute_set_deleted	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_set_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_DELETED	int
)	O
;	O
}	O
int	O
mu_attribute_set_draft	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_set_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_DRAFT	int
)	O
;	O
}	O
int	O
mu_attribute_set_recent	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
status	int
=	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_READ	int
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
status	int
=	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_SEEN	int
)	O
;	O
return	O
status	int
;	O
}	O
int	O
mu_attribute_is_userflag	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
flag	int
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
attr	pointer
->	O
user_flags	int
&	O
flag	int
;	O
}	O
int	O
mu_attribute_is_seen	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
flags	int
&	O
MU_ATTRIBUTE_SEEN	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_is_answered	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
flags	int
&	O
MU_ATTRIBUTE_ANSWERED	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_is_flagged	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
flags	int
&	O
MU_ATTRIBUTE_FLAGGED	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_is_read	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
flags	int
&	O
MU_ATTRIBUTE_READ	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_is_deleted	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
flags	int
&	O
MU_ATTRIBUTE_DELETED	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_is_draft	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
flags	int
&	O
MU_ATTRIBUTE_DRAFT	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_is_recent	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
==	O
0	int
)	O
return	O
MU_ATTRIBUTE_IS_UNSEEN	O
(	O
flags	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_unset_userflag	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
int	O
flag	int
)	O
{	O
if	O
(	O
attr	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
attr	pointer
->	O
user_flags	int
&=	O
~	O
flag	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_unset_seen	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_SEEN	int
)	O
;	O
}	O
int	O
mu_attribute_unset_answered	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_ANSWERED	int
)	O
;	O
}	O
int	O
mu_attribute_unset_flagged	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_FLAGGED	int
)	O
;	O
}	O
int	O
mu_attribute_unset_read	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_READ	int
)	O
;	O
}	O
int	O
mu_attribute_unset_deleted	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_DELETED	int
)	O
;	O
}	O
int	O
mu_attribute_unset_draft	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_DRAFT	int
)	O
;	O
}	O
int	O
mu_attribute_unset_recent	function
(	O
mu_attribute_t	pointer
attr	pointer
)	O
{	O
return	O
mu_attribute_unset_flags	function
(	O
attr	pointer
,	O
MU_ATTRIBUTE_SEEN	int
)	O
;	O
}	O
int	O
mu_attribute_is_equal	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
mu_attribute_t	pointer
attr2	pointer
)	O
{	O
int	O
flags2	int
=	O
0	int
,	O
flags	int
=	O
0	int
;	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
;	O
mu_attribute_get_flags	function
(	O
attr2	pointer
,	O
&	O
flags2	int
)	O
;	O
return	O
flags	int
==	O
flags2	int
;	O
}	O
int	O
mu_attribute_copy	function
(	O
mu_attribute_t	pointer
dest	pointer
,	O
mu_attribute_t	pointer
src	pointer
)	O
{	O
if	O
(	O
dest	pointer
==	O
NULL	O
||	O
src	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
dest	pointer
->	O
flags	int
=	O
src	pointer
->	O
flags	int
;	O
return	O
0	int
;	O
}	O
struct	O
flagtrans	struct
{	O
int	O
flag	int
;	O
char	O
letter	char
;	O
}	O
;	O
static	O
struct	O
flagtrans	struct
flagtrans	struct
[	O
]	O
=	O
{	O
{	O
MU_ATTRIBUTE_ANSWERED	int
,	O
'A'	O
}	O
,	O
{	O
MU_ATTRIBUTE_FLAGGED	int
,	O
'F'	O
}	O
,	O
{	O
MU_ATTRIBUTE_DELETED	int
,	O
'D'	O
}	O
,	O
{	O
MU_ATTRIBUTE_DRAFT	int
,	O
'd'	O
}	O
,	O
{	O
MU_ATTRIBUTE_SEEN	int
,	O
'O'	O
}	O
,	O
{	O
MU_ATTRIBUTE_READ	int
,	O
'R'	O
}	O
,	O
{	O
0	int
}	O
}	O
;	O
mu_verify	O
(	O
MU_ARRAY_SIZE	O
(	O
flagtrans	struct
)	O
==	O
MU_STATUS_BUF_SIZE	O
)	O
;	O
int	O
mu_string_to_flags	function
(	O
const	O
char	O
*	O
buffer	pointer
,	O
int	O
*	O
pflags	pointer
)	O
{	O
const	O
char	O
*	O
sep	pointer
;	O
if	O
(	O
pflags	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
mu_c_strncasecmp	function
(	O
buffer	pointer
,	O
"Status:"	pointer
,	O
7	int
)	O
==	O
0	int
)	O
{	O
sep	pointer
=	O
strchr	function
(	O
buffer	pointer
,	O
':'	O
)	O
;	O
sep	pointer
++	O
;	O
}	O
else	O
sep	pointer
=	O
buffer	pointer
;	O
for	O
(	O
;	O
*	O
sep	pointer
;	O
sep	pointer
++	O
)	O
{	O
struct	O
flagtrans	struct
*	O
ft	pointer
;	O
for	O
(	O
ft	pointer
=	O
flagtrans	struct
;	O
ft	pointer
->	O
flag	int
;	O
ft	pointer
++	O
)	O
if	O
(	O
ft	pointer
->	O
letter	char
==	O
*	O
sep	pointer
)	O
{	O
*	O
pflags	pointer
|=	O
ft	pointer
->	O
flag	int
;	O
break	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_attribute_to_string	function
(	O
mu_attribute_t	pointer
attr	pointer
,	O
char	O
*	O
buffer	pointer
,	O
size_t	long
len	int
,	O
size_t	long
*	O
pn	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
char	O
buf	pointer
[	O
MU_STATUS_BUF_SIZE	O
]	O
;	O
int	O
i	int
;	O
int	O
rc	int
;	O
struct	O
flagtrans	struct
*	O
ft	pointer
;	O
rc	int
=	O
mu_attribute_get_flags	function
(	O
attr	pointer
,	O
&	O
flags	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
i	int
=	O
0	int
;	O
for	O
(	O
ft	pointer
=	O
flagtrans	struct
;	O
ft	pointer
->	O
flag	int
;	O
ft	pointer
++	O
)	O
if	O
(	O
ft	pointer
->	O
flag	int
&	O
flags	int
)	O
buf	pointer
[	O
i	int
++	O
]	O
=	O
ft	pointer
->	O
letter	char
;	O
buf	pointer
[	O
i	int
++	O
]	O
=	O
0	int
;	O
i	int
=	O
mu_cpystr	function
(	O
buffer	pointer
,	O
buf	pointer
,	O
i	int
)	O
;	O
if	O
(	O
pn	pointer
)	O
*	O
pn	pointer
=	O
i	int
;	O
return	O
0	int
;	O
}	O
