extern	O
time_t	long
time	function
(	O
)	O
;	O
openfile_t	pointer
esysdep_open_send	function
(	O
qsys	pointer
,	O
zfile	pointer
,	O
fcheck	int
,	O
zuser	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zfile	pointer
;	O
boolean	int
fcheck	int
;	O
const	O
char	O
*	O
zuser	pointer
;	O
{	O
struct	O
stat	struct
s	struct
;	O
openfile_t	pointer
e	pointer
;	O
int	O
o	int
;	O
if	O
(	O
fsysdep_directory	function
(	O
zfile	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: is a directory"	pointer
,	O
zfile	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
e	pointer
=	O
fopen	function
(	O
zfile	pointer
,	O
BINREAD	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fopen (%s): %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
o	int
=	O
fileno	function
(	O
e	pointer
)	O
;	O
if	O
(	O
fcntl	function
(	O
o	int
,	O
F_SETFD	int
,	O
fcntl	function
(	O
o	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fcntl (FD_CLOEXEC): %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
ffileclose	O
(	O
e	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
if	O
(	O
fstat	function
(	O
o	int
,	O
&	O
s	struct
)	O
==	O
-	O
1	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fstat: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
s	struct
.	O
st_mode	int
=	O
0666	int
;	O
}	O
if	O
(	O
fcheck	int
)	O
{	O
if	O
(	O
!	O
fsuser_access	function
(	O
&	O
s	struct
,	O
R_OK	int
,	O
zuser	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
EACCES	int
)	O
)	O
;	O
(	O
void	O
)	O
ffileclose	O
(	O
e	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
}	O
return	O
e	pointer
;	O
}	O
char	O
*	O
zsysdep_receive_temp	function
(	O
qsys	pointer
,	O
zto	pointer
,	O
ztemp	pointer
,	O
frestart	int
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zto	pointer
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
ztemp	pointer
;	O
boolean	int
frestart	int
;	O
{	O
if	O
(	O
frestart	int
&&	O
ztemp	pointer
!=	O
NULL	O
&&	O
*	O
ztemp	pointer
==	O
'D'	O
&&	O
strcmp	function
(	O
ztemp	pointer
,	O
"D.0"	pointer
)	O
!=	O
0	int
)	O
return	O
zsappend3	function
(	O
".Temp"	pointer
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
ztemp	pointer
)	O
;	O
else	O
return	O
zstemp_file	function
(	O
qsys	pointer
)	O
;	O
}	O
openfile_t	pointer
esysdep_open_receive	function
(	O
qsys	pointer
,	O
zto	pointer
,	O
ztemp	pointer
,	O
zreceive	pointer
,	O
pcrestart	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zto	pointer
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
ztemp	pointer
;	O
const	O
char	O
*	O
zreceive	pointer
;	O
long	O
*	O
pcrestart	pointer
;	O
{	O
int	O
o	int
;	O
openfile_t	pointer
e	pointer
;	O
o	int
=	O
-	O
1	int
;	O
if	O
(	O
pcrestart	pointer
!=	O
NULL	O
)	O
*	O
pcrestart	pointer
=	O
-	O
1	int
;	O
if	O
(	O
pcrestart	pointer
!=	O
NULL	O
&&	O
ztemp	pointer
!=	O
NULL	O
&&	O
*	O
ztemp	pointer
==	O
'D'	O
&&	O
strcmp	function
(	O
ztemp	pointer
,	O
"D.0"	pointer
)	O
!=	O
0	int
)	O
{	O
o	int
=	O
open	function
(	O
(	O
char	O
*	O
)	O
zreceive	pointer
,	O
O_WRONLY	int
)	O
;	O
if	O
(	O
o	int
>=	O
0	int
)	O
{	O
struct	O
stat	struct
s	struct
;	O
if	O
(	O
fstat	function
(	O
o	int
,	O
&	O
s	struct
)	O
<	O
0	int
||	O
s	struct
.	O
st_mtime	O
+	O
SECS_PER_WEEK	O
<	O
time	function
(	O
(	O
time_t	long
*	O
)	O
NULL	O
)	O
)	O
{	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
o	int
=	O
-	O
1	int
;	O
}	O
else	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_SPOOLDIR	O
,	O
"esysdep_open_receive: Reusing %s"	pointer
,	O
zreceive	pointer
)	O
;	O
*	O
pcrestart	pointer
=	O
(	O
long	O
)	O
s	struct
.	O
st_size	long
;	O
}	O
}	O
}	O
if	O
(	O
o	int
<	O
0	int
)	O
o	int
=	O
creat	function
(	O
(	O
char	O
*	O
)	O
zreceive	pointer
,	O
IPRIVATE_FILE_MODE	O
)	O
;	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	int
)	O
{	O
if	O
(	O
!	O
fsysdep_make_dirs	function
(	O
zreceive	pointer
,	O
FALSE	O
)	O
)	O
return	O
EFILECLOSED	O
;	O
o	int
=	O
creat	function
(	O
(	O
char	O
*	O
)	O
zreceive	pointer
,	O
IPRIVATE_FILE_MODE	O
)	O
;	O
}	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"creat (%s): %s"	pointer
,	O
zreceive	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
}	O
if	O
(	O
fcntl	function
(	O
o	int
,	O
F_SETFD	int
,	O
fcntl	function
(	O
o	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fcntl (FD_CLOEXEC): %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zreceive	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
e	pointer
=	O
fdopen	function
(	O
o	int
,	O
(	O
char	O
*	O
)	O
BINWRITE	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fdopen (%s): %s"	pointer
,	O
zreceive	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
zreceive	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
return	O
e	pointer
;	O
}	O
