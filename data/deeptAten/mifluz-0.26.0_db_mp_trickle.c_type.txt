static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: mp_trickle.c,v 1.3 2000/06/28 16:47:02 loic Exp $"	pointer
;	O
static	O
int	O
__memp_trick	function
__P	O
(	O
(	O
DB_ENV	struct
*	O
,	O
int	O
,	O
int	O
,	O
int	O
*	O
)	O
)	O
;	O
int	O
CDB_memp_trickle	function
(	O
dbenv	pointer
,	O
pct	int
,	O
nwrotep	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
int	O
pct	int
,	O
*	O
nwrotep	pointer
;	O
{	O
DB_MPOOL	struct
*	O
dbmp	pointer
;	O
MPOOL	struct
*	O
mp	pointer
;	O
u_int32_t	int
i	int
;	O
int	O
ret	int
;	O
PANIC_CHECK	O
(	O
dbenv	pointer
)	O
;	O
ENV_REQUIRES_CONFIG	O
(	O
dbenv	pointer
,	O
dbenv	pointer
->	O
mp_handle	pointer
,	O
DB_INIT_MPOOL	int
)	O
;	O
dbmp	pointer
=	O
dbenv	pointer
->	O
mp_handle	pointer
;	O
mp	pointer
=	O
dbmp	pointer
->	O
reginfo	pointer
[	O
0	int
]	O
.	O
primary	int
;	O
if	O
(	O
nwrotep	pointer
!=	O
NULL	O
)	O
*	O
nwrotep	pointer
=	O
0	int
;	O
if	O
(	O
pct	int
<	O
1	int
||	O
pct	int
>	O
100	int
)	O
return	O
(	O
EINVAL	int
)	O
;	O
R_LOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
for	O
(	O
ret	int
=	O
0	int
,	O
i	int
=	O
0	int
;	O
i	int
<	O
mp	pointer
->	O
nreg	int
;	O
++	O
i	int
)	O
if	O
(	O
(	O
ret	int
=	O
__memp_trick	function
(	O
dbenv	pointer
,	O
i	int
,	O
pct	int
,	O
nwrotep	pointer
)	O
)	O
!=	O
0	int
)	O
break	O
;	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
static	O
int	O
__memp_trick	function
(	O
dbenv	pointer
,	O
ncache	int
,	O
pct	int
,	O
nwrotep	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
int	O
ncache	int
,	O
pct	int
,	O
*	O
nwrotep	pointer
;	O
{	O
BH	struct
*	O
bhp	pointer
;	O
DB_MPOOL	struct
*	O
dbmp	pointer
;	O
MPOOL	struct
*	O
c_mp	pointer
;	O
MPOOLFILE	struct
*	O
mfp	pointer
;	O
db_pgno_t	int
pgno	int
;	O
u_long	long
total	long
;	O
int	O
ret	int
,	O
wrote	int
;	O
dbmp	pointer
=	O
dbenv	pointer
->	O
mp_handle	pointer
;	O
c_mp	pointer
=	O
dbmp	pointer
->	O
reginfo	pointer
[	O
ncache	int
]	O
.	O
primary	int
;	O
loop	O
:	O
total	long
=	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_clean	int
+	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_dirty	int
;	O
if	O
(	O
total	long
==	O
0	int
||	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_dirty	int
==	O
0	int
||	O
(	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_clean	int
*	O
100	int
)	O
/	O
total	long
>=	O
(	O
u_long	long
)	O
pct	int
)	O
return	O
(	O
0	int
)	O
;	O
for	O
(	O
bhp	pointer
=	O
SH_TAILQ_FIRST	O
(	O
&	O
c_mp	pointer
->	O
bhq	struct
,	O
__bh	struct
)	O
;	O
bhp	pointer
!=	O
NULL	O
;	O
bhp	pointer
=	O
SH_TAILQ_NEXT	O
(	O
bhp	pointer
,	O
q	struct
,	O
__bh	struct
)	O
)	O
{	O
if	O
(	O
bhp	pointer
->	O
ref	int
!=	O
0	int
||	O
!	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_DIRTY	int
)	O
||	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_LOCKED	int
)	O
)	O
continue	O
;	O
mfp	pointer
=	O
R_ADDR	O
(	O
dbmp	pointer
->	O
reginfo	pointer
,	O
bhp	pointer
->	O
mf_offset	int
)	O
;	O
if	O
(	O
F_ISSET	O
(	O
mfp	pointer
,	O
MP_TEMP	int
)	O
)	O
continue	O
;	O
pgno	int
=	O
bhp	pointer
->	O
pgno	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___memp_bhwrite	function
(	O
dbmp	pointer
,	O
mfp	pointer
,	O
bhp	pointer
,	O
NULL	O
,	O
&	O
wrote	int
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
!	O
wrote	int
)	O
{	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"%s: unable to flush page: %lu"	pointer
,	O
CDB___memp_fns	function
(	O
dbmp	pointer
,	O
mfp	pointer
)	O
,	O
(	O
u_long	long
)	O
pgno	int
)	O
;	O
return	O
(	O
EPERM	int
)	O
;	O
}	O
++	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_trickle	int
;	O
if	O
(	O
nwrotep	pointer
!=	O
NULL	O
)	O
++	O
*	O
nwrotep	pointer
;	O
goto	O
loop	O
;	O
}	O
return	O
(	O
0	int
)	O
;	O
}	O
