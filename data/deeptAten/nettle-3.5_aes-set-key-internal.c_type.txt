void	O
_aes_set_key	O
(	O
unsigned	O
nr	int
,	O
unsigned	O
nk	int
,	O
uint32_t	int
*	O
subkeys	pointer
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
static	O
const	O
uint8_t	char
rcon	array
[	O
10	int
]	O
=	O
{	O
0x01	int
,	O
0x02	int
,	O
0x04	int
,	O
0x08	int
,	O
0x10	int
,	O
0x20	int
,	O
0x40	int
,	O
0x80	int
,	O
0x1b	int
,	O
0x36	int
,	O
}	O
;	O
const	O
uint8_t	char
*	O
rp	pointer
;	O
unsigned	O
lastkey	int
,	O
i	int
;	O
uint32_t	int
t	int
;	O
assert	O
(	O
nk	int
!=	O
0	int
)	O
;	O
lastkey	int
=	O
(	O
AES_BLOCK_SIZE	int
/	O
4	int
)	O
*	O
(	O
nr	int
+	O
1	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
,	O
rp	pointer
=	O
rcon	array
;	O
i	int
<	O
nk	int
;	O
i	int
++	O
)	O
subkeys	pointer
[	O
i	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	pointer
+	O
i	int
*	O
4	int
)	O
;	O
for	O
(	O
i	int
=	O
nk	int
;	O
i	int
<	O
lastkey	int
;	O
i	int
++	O
)	O
{	O
t	int
=	O
subkeys	pointer
[	O
i	int
-	O
1	int
]	O
;	O
if	O
(	O
i	int
%	O
nk	int
==	O
0	int
)	O
t	int
=	O
SUBBYTE	O
(	O
ROTL32	O
(	O
24	int
,	O
t	int
)	O
,	O
aes_sbox	O
)	O
^	O
*	O
rp	pointer
++	O
;	O
else	O
if	O
(	O
nk	int
>	O
6	int
&&	O
(	O
i	int
%	O
nk	int
)	O
==	O
4	int
)	O
t	int
=	O
SUBBYTE	O
(	O
t	int
,	O
aes_sbox	O
)	O
;	O
subkeys	pointer
[	O
i	int
]	O
=	O
subkeys	pointer
[	O
i	int
-	O
nk	int
]	O
^	O
t	int
;	O
}	O
}	O
