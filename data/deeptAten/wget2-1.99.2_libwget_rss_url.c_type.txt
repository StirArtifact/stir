struct	O
_rss_context	struct
{	O
wget_vector	struct
*	O
urls	pointer
;	O
}	O
;	O
static	O
void	O
_rss_get_url	function
(	O
void	O
*	O
context	pointer
,	O
int	O
flags	int
,	O
const	O
char	O
*	O
dir	array
,	O
const	O
char	O
*	O
attr	array
,	O
const	O
char	O
*	O
val	pointer
,	O
size_t	long
len	long
,	O
size_t	long
pos	int
WGET_GCC_UNUSED	O
)	O
{	O
struct	O
_rss_context	struct
*	O
ctx	pointer
=	O
context	pointer
;	O
wget_string	struct
*	O
url	pointer
;	O
if	O
(	O
!	O
val	pointer
||	O
!	O
len	long
)	O
return	O
;	O
if	O
(	O
(	O
flags	int
&	O
XML_FLG_ATTRIBUTE	O
)	O
)	O
{	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
attr	array
,	O
"url"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
attr	array
,	O
"href"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
attr	array
,	O
"src"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
attr	array
,	O
"domain"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
attr	array
,	O
"xmlns"	pointer
)	O
||	O
!	O
wget_strncasecmp_ascii	function
(	O
attr	array
,	O
"xmlns:"	pointer
,	O
6	int
)	O
)	O
{	O
for	O
(	O
;	O
len	long
&&	O
c_isspace	function
(	O
*	O
val	pointer
)	O
;	O
val	pointer
++	O
,	O
len	long
--	O
)	O
;	O
for	O
(	O
;	O
len	long
&&	O
c_isspace	function
(	O
val	pointer
[	O
len	long
-	O
1	int
]	O
)	O
;	O
len	long
--	O
)	O
;	O
if	O
(	O
!	O
(	O
url	pointer
=	O
wget_malloc	function
(	O
sizeof	O
(	O
wget_string	struct
)	O
)	O
)	O
)	O
return	O
;	O
url	pointer
->	O
p	pointer
=	O
val	pointer
;	O
url	pointer
->	O
len	long
=	O
len	long
;	O
if	O
(	O
!	O
ctx	pointer
->	O
urls	pointer
)	O
ctx	pointer
->	O
urls	pointer
=	O
wget_vector_create	function
(	O
32	int
,	O
NULL	O
)	O
;	O
wget_vector_add	function
(	O
ctx	pointer
->	O
urls	pointer
,	O
url	pointer
)	O
;	O
}	O
}	O
else	O
if	O
(	O
(	O
flags	int
&	O
XML_FLG_CONTENT	O
)	O
)	O
{	O
const	O
char	O
*	O
elem	pointer
=	O
strrchr	function
(	O
dir	array
,	O
'/'	O
)	O
;	O
if	O
(	O
elem	pointer
)	O
{	O
elem	pointer
++	O
;	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
elem	pointer
,	O
"guid"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
elem	pointer
,	O
"link"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
elem	pointer
,	O
"comments"	pointer
)	O
||	O
!	O
wget_strcasecmp_ascii	function
(	O
elem	pointer
,	O
"docs"	pointer
)	O
)	O
{	O
for	O
(	O
;	O
len	long
&&	O
c_isspace	function
(	O
*	O
val	pointer
)	O
;	O
val	pointer
++	O
,	O
len	long
--	O
)	O
;	O
for	O
(	O
;	O
len	long
&&	O
c_isspace	function
(	O
val	pointer
[	O
len	long
-	O
1	int
]	O
)	O
;	O
len	long
--	O
)	O
;	O
if	O
(	O
!	O
(	O
url	pointer
=	O
wget_malloc	function
(	O
sizeof	O
(	O
wget_string	struct
)	O
)	O
)	O
)	O
return	O
;	O
url	pointer
->	O
p	pointer
=	O
val	pointer
;	O
url	pointer
->	O
len	long
=	O
len	long
;	O
if	O
(	O
!	O
ctx	pointer
->	O
urls	pointer
)	O
ctx	pointer
->	O
urls	pointer
=	O
wget_vector_create	function
(	O
32	int
,	O
NULL	O
)	O
;	O
wget_vector_add	function
(	O
ctx	pointer
->	O
urls	pointer
,	O
url	pointer
)	O
;	O
}	O
}	O
}	O
}	O
void	O
wget_rss_get_urls_inline	function
(	O
const	O
char	O
*	O
rss	pointer
,	O
wget_vector	struct
*	O
*	O
urls	pointer
)	O
{	O
struct	O
_rss_context	struct
context	pointer
=	O
{	O
.	O
urls	pointer
=	O
NULL	O
}	O
;	O
wget_xml_parse_buffer	function
(	O
rss	pointer
,	O
_rss_get_url	function
,	O
&	O
context	pointer
,	O
XML_HINT_REMOVE_EMPTY_CONTENT	O
)	O
;	O
*	O
urls	pointer
=	O
context	pointer
.	O
urls	pointer
;	O
}	O
