static	O
const	O
uint8_t	char
arctwo_sbox	array
[	O
]	O
=	O
{	O
0xd9	int
,	O
0x78	int
,	O
0xf9	int
,	O
0xc4	int
,	O
0x19	int
,	O
0xdd	int
,	O
0xb5	int
,	O
0xed	int
,	O
0x28	int
,	O
0xe9	int
,	O
0xfd	int
,	O
0x79	int
,	O
0x4a	int
,	O
0xa0	int
,	O
0xd8	int
,	O
0x9d	int
,	O
0xc6	int
,	O
0x7e	int
,	O
0x37	int
,	O
0x83	int
,	O
0x2b	int
,	O
0x76	int
,	O
0x53	int
,	O
0x8e	int
,	O
0x62	int
,	O
0x4c	int
,	O
0x64	int
,	O
0x88	int
,	O
0x44	int
,	O
0x8b	int
,	O
0xfb	int
,	O
0xa2	int
,	O
0x17	int
,	O
0x9a	int
,	O
0x59	int
,	O
0xf5	int
,	O
0x87	int
,	O
0xb3	int
,	O
0x4f	int
,	O
0x13	int
,	O
0x61	int
,	O
0x45	int
,	O
0x6d	int
,	O
0x8d	int
,	O
0x09	int
,	O
0x81	int
,	O
0x7d	int
,	O
0x32	int
,	O
0xbd	int
,	O
0x8f	int
,	O
0x40	int
,	O
0xeb	int
,	O
0x86	int
,	O
0xb7	int
,	O
0x7b	int
,	O
0x0b	int
,	O
0xf0	int
,	O
0x95	int
,	O
0x21	int
,	O
0x22	int
,	O
0x5c	int
,	O
0x6b	int
,	O
0x4e	int
,	O
0x82	int
,	O
0x54	int
,	O
0xd6	int
,	O
0x65	int
,	O
0x93	int
,	O
0xce	int
,	O
0x60	int
,	O
0xb2	int
,	O
0x1c	int
,	O
0x73	int
,	O
0x56	int
,	O
0xc0	int
,	O
0x14	int
,	O
0xa7	int
,	O
0x8c	int
,	O
0xf1	int
,	O
0xdc	int
,	O
0x12	int
,	O
0x75	int
,	O
0xca	int
,	O
0x1f	int
,	O
0x3b	int
,	O
0xbe	int
,	O
0xe4	int
,	O
0xd1	int
,	O
0x42	int
,	O
0x3d	int
,	O
0xd4	int
,	O
0x30	int
,	O
0xa3	int
,	O
0x3c	int
,	O
0xb6	int
,	O
0x26	int
,	O
0x6f	int
,	O
0xbf	int
,	O
0x0e	int
,	O
0xda	int
,	O
0x46	int
,	O
0x69	int
,	O
0x07	int
,	O
0x57	int
,	O
0x27	int
,	O
0xf2	int
,	O
0x1d	int
,	O
0x9b	int
,	O
0xbc	int
,	O
0x94	int
,	O
0x43	int
,	O
0x03	int
,	O
0xf8	int
,	O
0x11	int
,	O
0xc7	int
,	O
0xf6	int
,	O
0x90	int
,	O
0xef	int
,	O
0x3e	int
,	O
0xe7	int
,	O
0x06	int
,	O
0xc3	int
,	O
0xd5	int
,	O
0x2f	int
,	O
0xc8	int
,	O
0x66	int
,	O
0x1e	int
,	O
0xd7	int
,	O
0x08	int
,	O
0xe8	int
,	O
0xea	int
,	O
0xde	int
,	O
0x80	int
,	O
0x52	int
,	O
0xee	int
,	O
0xf7	int
,	O
0x84	int
,	O
0xaa	int
,	O
0x72	int
,	O
0xac	int
,	O
0x35	int
,	O
0x4d	int
,	O
0x6a	int
,	O
0x2a	int
,	O
0x96	int
,	O
0x1a	int
,	O
0xd2	int
,	O
0x71	int
,	O
0x5a	int
,	O
0x15	int
,	O
0x49	int
,	O
0x74	int
,	O
0x4b	int
,	O
0x9f	int
,	O
0xd0	int
,	O
0x5e	int
,	O
0x04	int
,	O
0x18	int
,	O
0xa4	int
,	O
0xec	int
,	O
0xc2	int
,	O
0xe0	int
,	O
0x41	int
,	O
0x6e	int
,	O
0x0f	int
,	O
0x51	int
,	O
0xcb	int
,	O
0xcc	int
,	O
0x24	int
,	O
0x91	int
,	O
0xaf	int
,	O
0x50	int
,	O
0xa1	int
,	O
0xf4	int
,	O
0x70	int
,	O
0x39	int
,	O
0x99	int
,	O
0x7c	int
,	O
0x3a	int
,	O
0x85	int
,	O
0x23	int
,	O
0xb8	int
,	O
0xb4	int
,	O
0x7a	int
,	O
0xfc	int
,	O
0x02	int
,	O
0x36	int
,	O
0x5b	int
,	O
0x25	int
,	O
0x55	int
,	O
0x97	int
,	O
0x31	int
,	O
0x2d	int
,	O
0x5d	int
,	O
0xfa	int
,	O
0x98	int
,	O
0xe3	int
,	O
0x8a	int
,	O
0x92	int
,	O
0xae	int
,	O
0x05	int
,	O
0xdf	int
,	O
0x29	int
,	O
0x10	int
,	O
0x67	int
,	O
0x6c	int
,	O
0xba	int
,	O
0xc9	int
,	O
0xd3	int
,	O
0x00	int
,	O
0xe6	int
,	O
0xcf	int
,	O
0xe1	int
,	O
0x9e	int
,	O
0xa8	int
,	O
0x2c	int
,	O
0x63	int
,	O
0x16	int
,	O
0x01	int
,	O
0x3f	int
,	O
0x58	int
,	O
0xe2	int
,	O
0x89	int
,	O
0xa9	int
,	O
0x0d	int
,	O
0x38	int
,	O
0x34	int
,	O
0x1b	int
,	O
0xab	int
,	O
0x33	int
,	O
0xff	int
,	O
0xb0	int
,	O
0xbb	int
,	O
0x48	int
,	O
0x0c	int
,	O
0x5f	int
,	O
0xb9	int
,	O
0xb1	int
,	O
0xcd	int
,	O
0x2e	int
,	O
0xc5	int
,	O
0xf3	int
,	O
0xdb	int
,	O
0x47	int
,	O
0xe5	int
,	O
0xa5	int
,	O
0x9c	int
,	O
0x77	int
,	O
0x0a	int
,	O
0xa6	int
,	O
0x20	int
,	O
0x68	int
,	O
0xfe	int
,	O
0x7f	int
,	O
0xc1	int
,	O
0xad	int
}	O
;	O
void	O
arctwo_encrypt	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	pointer
,	O
const	O
uint8_t	char
*	O
src	pointer
)	O
{	O
FOR_BLOCKS	O
(	O
length	long
,	O
dst	pointer
,	O
src	pointer
,	O
ARCTWO_BLOCK_SIZE	int
)	O
{	O
register	O
unsigned	O
i	int
;	O
uint16_t	short
w0	short
,	O
w1	short
,	O
w2	short
,	O
w3	short
;	O
w0	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
0	int
]	O
)	O
;	O
w1	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
2	int
]	O
)	O
;	O
w2	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
4	int
]	O
)	O
;	O
w3	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
6	int
]	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
16	int
;	O
i	int
++	O
)	O
{	O
register	O
unsigned	O
j	int
=	O
i	int
*	O
4	int
;	O
w0	short
+=	O
(	O
w1	short
&	O
~	O
w3	short
)	O
+	O
(	O
w2	short
&	O
w3	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
]	O
;	O
w0	short
=	O
rotl16	O
(	O
w0	short
,	O
1	int
)	O
;	O
w1	short
+=	O
(	O
w2	short
&	O
~	O
w0	short
)	O
+	O
(	O
w3	short
&	O
w0	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
+	O
1	int
]	O
;	O
w1	short
=	O
rotl16	O
(	O
w1	short
,	O
2	int
)	O
;	O
w2	short
+=	O
(	O
w3	short
&	O
~	O
w1	short
)	O
+	O
(	O
w0	short
&	O
w1	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
+	O
2	int
]	O
;	O
w2	short
=	O
rotl16	O
(	O
w2	short
,	O
3	int
)	O
;	O
w3	short
+=	O
(	O
w0	short
&	O
~	O
w2	short
)	O
+	O
(	O
w1	short
&	O
w2	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
+	O
3	int
]	O
;	O
w3	short
=	O
rotl16	O
(	O
w3	short
,	O
5	int
)	O
;	O
if	O
(	O
i	int
==	O
4	int
||	O
i	int
==	O
10	int
)	O
{	O
w0	short
+=	O
ctx	pointer
->	O
S	array
[	O
w3	short
&	O
63	int
]	O
;	O
w1	short
+=	O
ctx	pointer
->	O
S	array
[	O
w0	short
&	O
63	int
]	O
;	O
w2	short
+=	O
ctx	pointer
->	O
S	array
[	O
w1	short
&	O
63	int
]	O
;	O
w3	short
+=	O
ctx	pointer
->	O
S	array
[	O
w2	short
&	O
63	int
]	O
;	O
}	O
}	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
0	int
]	O
,	O
w0	short
)	O
;	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
2	int
]	O
,	O
w1	short
)	O
;	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
4	int
]	O
,	O
w2	short
)	O
;	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
6	int
]	O
,	O
w3	short
)	O
;	O
}	O
}	O
void	O
arctwo_decrypt	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	pointer
,	O
const	O
uint8_t	char
*	O
src	pointer
)	O
{	O
FOR_BLOCKS	O
(	O
length	long
,	O
dst	pointer
,	O
src	pointer
,	O
ARCTWO_BLOCK_SIZE	int
)	O
{	O
register	O
unsigned	O
i	int
;	O
uint16_t	short
w0	short
,	O
w1	short
,	O
w2	short
,	O
w3	short
;	O
w0	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
0	int
]	O
)	O
;	O
w1	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
2	int
]	O
)	O
;	O
w2	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
4	int
]	O
)	O
;	O
w3	short
=	O
LE_READ_UINT16	O
(	O
&	O
src	pointer
[	O
6	int
]	O
)	O
;	O
for	O
(	O
i	int
=	O
16	int
;	O
i	int
--	O
>	O
0	int
;	O
)	O
{	O
register	O
unsigned	O
j	int
=	O
i	int
*	O
4	int
;	O
w3	short
=	O
rotr16	O
(	O
w3	short
,	O
5	int
)	O
;	O
w3	short
-=	O
(	O
w0	short
&	O
~	O
w2	short
)	O
+	O
(	O
w1	short
&	O
w2	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
+	O
3	int
]	O
;	O
w2	short
=	O
rotr16	O
(	O
w2	short
,	O
3	int
)	O
;	O
w2	short
-=	O
(	O
w3	short
&	O
~	O
w1	short
)	O
+	O
(	O
w0	short
&	O
w1	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
+	O
2	int
]	O
;	O
w1	short
=	O
rotr16	O
(	O
w1	short
,	O
2	int
)	O
;	O
w1	short
-=	O
(	O
w2	short
&	O
~	O
w0	short
)	O
+	O
(	O
w3	short
&	O
w0	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
+	O
1	int
]	O
;	O
w0	short
=	O
rotr16	O
(	O
w0	short
,	O
1	int
)	O
;	O
w0	short
-=	O
(	O
w1	short
&	O
~	O
w3	short
)	O
+	O
(	O
w2	short
&	O
w3	short
)	O
+	O
ctx	pointer
->	O
S	array
[	O
j	int
]	O
;	O
if	O
(	O
i	int
==	O
5	int
||	O
i	int
==	O
11	int
)	O
{	O
w3	short
=	O
w3	short
-	O
ctx	pointer
->	O
S	array
[	O
w2	short
&	O
63	int
]	O
;	O
w2	short
=	O
w2	short
-	O
ctx	pointer
->	O
S	array
[	O
w1	short
&	O
63	int
]	O
;	O
w1	short
=	O
w1	short
-	O
ctx	pointer
->	O
S	array
[	O
w0	short
&	O
63	int
]	O
;	O
w0	short
=	O
w0	short
-	O
ctx	pointer
->	O
S	array
[	O
w3	short
&	O
63	int
]	O
;	O
}	O
}	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
0	int
]	O
,	O
w0	short
)	O
;	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
2	int
]	O
,	O
w1	short
)	O
;	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
4	int
]	O
,	O
w2	short
)	O
;	O
LE_WRITE_UINT16	O
(	O
&	O
dst	pointer
[	O
6	int
]	O
,	O
w3	short
)	O
;	O
}	O
}	O
void	O
arctwo_set_key_ekb	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
key	pointer
,	O
unsigned	O
ekb	int
)	O
{	O
size_t	long
i	int
;	O
uint8_t	char
S	array
[	O
128	int
]	O
;	O
uint8_t	char
x	char
;	O
assert	O
(	O
length	long
>=	O
ARCTWO_MIN_KEY_SIZE	int
)	O
;	O
assert	O
(	O
length	long
<=	O
ARCTWO_MAX_KEY_SIZE	int
)	O
;	O
assert	O
(	O
ekb	int
<=	O
1024	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
length	long
;	O
i	int
++	O
)	O
S	array
[	O
i	int
]	O
=	O
key	pointer
[	O
i	int
]	O
;	O
for	O
(	O
i	int
=	O
length	long
;	O
i	int
<	O
ARCTWO_MAX_KEY_SIZE	int
;	O
i	int
++	O
)	O
S	array
[	O
i	int
]	O
=	O
arctwo_sbox	array
[	O
(	O
S	array
[	O
i	int
-	O
length	long
]	O
+	O
S	array
[	O
i	int
-	O
1	int
]	O
)	O
&	O
255	int
]	O
;	O
S	array
[	O
0	int
]	O
=	O
arctwo_sbox	array
[	O
S	array
[	O
0	int
]	O
]	O
;	O
if	O
(	O
ekb	int
>	O
0	int
&&	O
ekb	int
<	O
1024	int
)	O
{	O
int	O
len	int
=	O
(	O
ekb	int
+	O
7	int
)	O
>>	O
3	int
;	O
i	int
=	O
128	int
-	O
len	int
;	O
x	char
=	O
arctwo_sbox	array
[	O
S	array
[	O
i	int
]	O
&	O
(	O
255	int
>>	O
(	O
7	int
&	O
-	O
ekb	int
)	O
)	O
]	O
;	O
S	array
[	O
i	int
]	O
=	O
x	char
;	O
while	O
(	O
i	int
--	O
)	O
{	O
x	char
=	O
arctwo_sbox	array
[	O
x	char
^	O
S	array
[	O
i	int
+	O
len	int
]	O
]	O
;	O
S	array
[	O
i	int
]	O
=	O
x	char
;	O
}	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
64	int
;	O
i	int
++	O
)	O
ctx	pointer
->	O
S	array
[	O
i	int
]	O
=	O
LE_READ_UINT16	O
(	O
S	array
+	O
i	int
*	O
2	int
)	O
;	O
}	O
void	O
arctwo_set_key	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
arctwo_set_key_ekb	O
(	O
ctx	pointer
,	O
length	long
,	O
key	pointer
,	O
8	int
*	O
length	long
)	O
;	O
}	O
void	O
arctwo_set_key_gutmann	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
arctwo_set_key_ekb	O
(	O
ctx	pointer
,	O
length	long
,	O
key	pointer
,	O
0	int
)	O
;	O
}	O
void	O
arctwo40_set_key	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
arctwo_set_key_ekb	O
(	O
ctx	pointer
,	O
5	int
,	O
key	pointer
,	O
40	int
)	O
;	O
}	O
void	O
arctwo64_set_key	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
arctwo_set_key_ekb	O
(	O
ctx	pointer
,	O
8	int
,	O
key	pointer
,	O
64	int
)	O
;	O
}	O
void	O
arctwo128_set_key	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
arctwo_set_key_ekb	O
(	O
ctx	pointer
,	O
16	int
,	O
key	pointer
,	O
128	int
)	O
;	O
}	O
void	O
arctwo128_set_key_gutmann	O
(	O
struct	O
arctwo_ctx	struct
*	O
ctx	pointer
,	O
const	O
uint8_t	char
*	O
key	pointer
)	O
{	O
arctwo_set_key_ekb	O
(	O
ctx	pointer
,	O
16	int
,	O
key	pointer
,	O
1024	int
)	O
;	O
}	O
