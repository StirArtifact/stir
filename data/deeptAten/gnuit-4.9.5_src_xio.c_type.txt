int	O
xread	function
(	O
fd	int
,	O
buf	pointer
,	O
count	long
)	O
int	O
fd	int
;	O
char	O
*	O
buf	pointer
;	O
size_t	long
count	long
;	O
{	O
int	O
chars	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
if	O
(	O
count	long
<=	O
0	int
)	O
return	O
count	long
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
chars	int
=	O
read	function
(	O
fd	int
,	O
buf	pointer
,	O
count	long
)	O
;	O
}	O
while	O
(	O
chars	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
chars	int
;	O
}	O
int	O
xwrite	function
(	O
fd	int
,	O
buf	pointer
,	O
count	long
)	O
int	O
fd	int
;	O
const	O
char	O
*	O
buf	pointer
;	O
size_t	long
count	long
;	O
{	O
int	O
chars	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
if	O
(	O
count	long
<=	O
0	int
)	O
return	O
count	long
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
chars	int
=	O
write	function
(	O
fd	int
,	O
buf	pointer
,	O
count	long
)	O
;	O
}	O
while	O
(	O
chars	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
chars	int
;	O
}	O
int	O
__xreadlink	function
(	O
path	pointer
,	O
buf	pointer
,	O
size	long
)	O
const	O
char	O
*	O
path	pointer
;	O
char	O
*	O
buf	pointer
;	O
size_t	long
size	long
;	O
{	O
int	O
chars	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
if	O
(	O
size	long
<=	O
0	int
)	O
return	O
size	long
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
chars	int
=	O
readlink	function
(	O
path	pointer
,	O
buf	pointer
,	O
size	long
)	O
;	O
}	O
while	O
(	O
chars	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
chars	int
;	O
}	O
int	O
xreadlink	function
(	O
filename	pointer
)	O
const	O
char	O
*	O
filename	pointer
;	O
{	O
int	O
size	long
=	O
100	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
*	O
buffer	pointer
=	O
xmalloc	function
(	O
size	long
)	O
;	O
int	O
nchars	int
=	O
__xreadlink	function
(	O
filename	pointer
,	O
buffer	pointer
,	O
(	O
size_t	long
)	O
size	long
)	O
;	O
if	O
(	O
nchars	int
<	O
size	long
)	O
{	O
xfree	function
(	O
buffer	pointer
)	O
;	O
return	O
nchars	int
;	O
}	O
xfree	function
(	O
buffer	pointer
)	O
;	O
size	long
*=	O
2	int
;	O
}	O
}	O
int	O
xfstat	function
(	O
filedes	int
,	O
buf	pointer
)	O
int	O
filedes	int
;	O
struct	O
stat	struct
*	O
buf	pointer
;	O
{	O
int	O
result	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
result	int
=	O
fstat	function
(	O
filedes	int
,	O
buf	pointer
)	O
;	O
}	O
while	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
result	int
;	O
}	O
int	O
xstat	function
(	O
filename	pointer
,	O
buf	pointer
)	O
const	O
char	O
*	O
filename	pointer
;	O
struct	O
stat	struct
*	O
buf	pointer
;	O
{	O
int	O
result	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
result	int
=	O
stat	struct
(	O
filename	pointer
,	O
buf	pointer
)	O
;	O
}	O
while	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
result	int
;	O
}	O
int	O
xlstat	function
(	O
filename	pointer
,	O
buf	pointer
)	O
const	O
char	O
*	O
filename	pointer
;	O
struct	O
stat	struct
*	O
buf	pointer
;	O
{	O
int	O
result	int
;	O
int	O
old_errno	int
=	O
errno	O
;	O
do	O
{	O
errno	O
=	O
old_errno	int
;	O
result	int
=	O
lstat	function
(	O
filename	pointer
,	O
buf	pointer
)	O
;	O
}	O
while	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
result	int
;	O
}	O
char	O
*	O
xgetcwd	function
(	O
)	O
{	O
char	O
*	O
result	int
;	O
char	O
*	O
cwd	pointer
;	O
errno	O
=	O
0	int
;	O
{	O
size_t	long
size	long
;	O
cwd	pointer
=	O
xmalloc	function
(	O
size	long
=	O
64	int
)	O
;	O
while	O
(	O
(	O
result	int
=	O
getcwd	function
(	O
cwd	pointer
,	O
size	long
)	O
)	O
==	O
NULL	O
&&	O
errno	O
==	O
ERANGE	int
)	O
{	O
cwd	pointer
=	O
xrealloc	function
(	O
cwd	pointer
,	O
size	long
+=	O
64	int
)	O
;	O
errno	O
=	O
0	int
;	O
}	O
}	O
if	O
(	O
result	int
==	O
NULL	O
)	O
{	O
xfree	function
(	O
cwd	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
cwd	pointer
;	O
}	O
char	O
*	O
xdirname	function
(	O
name	pointer
)	O
char	O
*	O
name	pointer
;	O
{	O
char	O
*	O
ptr	pointer
=	O
strrchr	function
(	O
name	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
)	O
return	O
xstrdup	function
(	O
"."	pointer
)	O
;	O
else	O
{	O
char	O
*	O
ptr2	pointer
=	O
xstrdup	function
(	O
name	pointer
)	O
;	O
ptr2	pointer
[	O
ptr	pointer
-	O
name	pointer
]	O
=	O
'0'	O
;	O
return	O
ptr2	pointer
;	O
}	O
}	O
char	O
*	O
xbasename	function
(	O
name	pointer
)	O
char	O
*	O
name	pointer
;	O
{	O
char	O
*	O
base	pointer
;	O
size_t	long
len	long
=	O
strlen	function
(	O
name	pointer
)	O
;	O
if	O
(	O
name	pointer
[	O
len	long
-	O
1	int
]	O
==	O
'/'	O
)	O
name	pointer
[	O
len	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
base	pointer
=	O
strrchr	function
(	O
name	pointer
,	O
'/'	O
)	O
;	O
return	O
base	pointer
?	O
base	pointer
+	O
1	int
:	O
name	pointer
;	O
}	O
