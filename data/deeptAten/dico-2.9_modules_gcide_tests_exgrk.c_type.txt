enum	O
{	O
S_INIT	int
,	O
S_OPEN	int
,	O
S_OG	int
,	O
S_OR	int
,	O
S_OK	int
,	O
S_GRK	int
}	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
c	int
;	O
int	O
state	int
=	O
S_INIT	int
;	O
while	O
(	O
(	O
c	int
=	O
getc	function
(	O
stdin	pointer
)	O
)	O
>	O
0	int
)	O
{	O
switch	O
(	O
state	int
)	O
{	O
case	O
S_INIT	int
:	O
if	O
(	O
c	int
==	O
'<'	O
)	O
state	int
=	O
S_OPEN	int
;	O
break	O
;	O
case	O
S_OPEN	int
:	O
if	O
(	O
c	int
==	O
'g'	O
)	O
state	int
=	O
S_OG	int
;	O
else	O
state	int
=	O
S_INIT	int
;	O
break	O
;	O
case	O
S_OG	int
:	O
if	O
(	O
c	int
==	O
'r'	O
)	O
state	int
=	O
S_OR	int
;	O
else	O
state	int
=	O
S_INIT	int
;	O
break	O
;	O
case	O
S_OR	int
:	O
if	O
(	O
c	int
==	O
'k'	O
)	O
state	int
=	O
S_OK	int
;	O
else	O
state	int
=	O
S_INIT	int
;	O
break	O
;	O
case	O
S_OK	int
:	O
if	O
(	O
c	int
==	O
'>'	O
)	O
state	int
=	O
S_GRK	int
;	O
else	O
state	int
=	O
S_INIT	int
;	O
break	O
;	O
case	O
S_GRK	int
:	O
if	O
(	O
c	int
==	O
'<'	O
)	O
{	O
state	int
=	O
S_INIT	int
;	O
c	int
=	O
'\n'	O
;	O
}	O
putchar	function
(	O
c	int
)	O
;	O
break	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
