static	O
Sym	struct
indirect_child	struct
;	O
void	O
alpha_find_call	function
(	O
Sym	struct
*	O
,	O
bfd_vma	long
,	O
bfd_vma	long
)	O
;	O
void	O
alpha_find_call	function
(	O
Sym	struct
*	O
parent	pointer
,	O
bfd_vma	long
p_lowpc	pointer
,	O
bfd_vma	long
p_highpc	pointer
)	O
{	O
bfd_vma	long
pc	long
,	O
dest_pc	long
;	O
unsigned	O
int	O
insn	int
;	O
Sym	struct
*	O
child	double
;	O
if	O
(	O
indirect_child	struct
.	O
name	pointer
==	O
NULL	O
)	O
{	O
sym_init	function
(	O
&	O
indirect_child	struct
)	O
;	O
indirect_child	struct
.	O
name	pointer
=	O
_	O
(	O
"<indirect child>"	pointer
)	O
;	O
indirect_child	struct
.	O
cg	struct
.	O
prop	struct
.	O
fract	double
=	O
1.0	int
;	O
indirect_child	struct
.	O
cg	struct
.	O
cyc	struct
.	O
head	pointer
=	O
&	O
indirect_child	struct
;	O
}	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	function
(	O
_	O
(	O
"[find_call] %s: 0x%lx to 0x%lx\n"	pointer
)	O
,	O
parent	pointer
->	O
name	pointer
,	O
(	O
unsigned	O
long	O
)	O
p_lowpc	pointer
,	O
(	O
unsigned	O
long	O
)	O
p_highpc	pointer
)	O
)	O
;	O
for	O
(	O
pc	long
=	O
(	O
p_lowpc	pointer
+	O
3	int
)	O
&	O
~	O
(	O
bfd_vma	long
)	O
3	int
;	O
pc	long
<	O
p_highpc	pointer
;	O
pc	long
+=	O
4	int
)	O
{	O
insn	int
=	O
bfd_get_32	O
(	O
core_bfd	pointer
,	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
core_text_space	pointer
+	O
pc	long
-	O
core_text_sect	pointer
->	O
vma	long
)	O
)	O
;	O
switch	O
(	O
insn	int
&	O
(	O
0x3fU	int
<<	O
26	int
)	O
)	O
{	O
case	O
OP_Jxx	int
<<	O
26	int
:	O
if	O
(	O
(	O
insn	int
&	O
(	O
3	int
<<	O
14	int
)	O
)	O
==	O
Jxx_FUNC_JSR	int
<<	O
14	int
||	O
(	O
insn	int
&	O
(	O
3	int
<<	O
14	int
)	O
)	O
==	O
Jxx_FUNC_JSR_COROUTINE	int
<<	O
14	int
)	O
{	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	function
(	O
_	O
(	O
"[find_call] 0x%lx: jsr%s <indirect_child>\n"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
pc	long
,	O
(	O
(	O
insn	int
&	O
(	O
3	int
<<	O
14	int
)	O
)	O
==	O
Jxx_FUNC_JSR	int
<<	O
14	int
?	O
""	pointer
:	O
"_coroutine"	pointer
)	O
)	O
)	O
;	O
arc_add	function
(	O
parent	pointer
,	O
&	O
indirect_child	struct
,	O
(	O
unsigned	O
long	O
)	O
0	int
)	O
;	O
}	O
break	O
;	O
case	O
OP_BSR	int
<<	O
26	int
:	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	function
(	O
_	O
(	O
"[find_call] 0x%lx: bsr"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
pc	long
)	O
)	O
;	O
dest_pc	long
=	O
pc	long
+	O
4	int
+	O
(	O
(	O
(	O
bfd_signed_vma	long
)	O
(	O
insn	int
&	O
0x1fffff	int
)	O
^	O
0x100000	int
)	O
-	O
0x100000	int
)	O
;	O
if	O
(	O
hist_check_address	function
(	O
dest_pc	long
)	O
)	O
{	O
child	double
=	O
sym_lookup	function
(	O
&	O
symtab	struct
,	O
dest_pc	long
)	O
;	O
if	O
(	O
child	double
)	O
{	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	function
(	O
" 0x%lx\t; name=%s, addr=0x%lx"	pointer
,	O
(	O
unsigned	O
long	O
)	O
dest_pc	long
,	O
child	double
->	O
name	pointer
,	O
(	O
unsigned	O
long	O
)	O
child	double
->	O
addr	pointer
)	O
)	O
;	O
if	O
(	O
child	double
->	O
addr	pointer
==	O
dest_pc	long
||	O
child	double
->	O
addr	pointer
==	O
dest_pc	long
-	O
8	int
)	O
{	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	function
(	O
"\n"	pointer
)	O
)	O
;	O
arc_add	function
(	O
parent	pointer
,	O
child	double
,	O
(	O
unsigned	O
long	O
)	O
0	int
)	O
;	O
continue	O
;	O
}	O
}	O
}	O
DBG	O
(	O
CALLDEBUG	O
,	O
printf	function
(	O
"\tbut it's a botch\n"	pointer
)	O
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
}	O
