char	O
*	O
program_name	pointer
;	O
void	O
print_option_error	function
(	O
void	O
)	O
;	O
void	O
print_version	function
(	O
void	O
)	O
;	O
void	O
print_help	function
(	O
void	O
)	O
;	O
void	O
print_option_error	function
(	O
void	O
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"Try '%s --help' for more information.\n"	pointer
,	O
program_name	pointer
)	O
;	O
}	O
void	O
print_version	function
(	O
void	O
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"%s: GNU Accounting Utilities (release %s)\n"	pointer
,	O
program_name	pointer
,	O
VERSION_STRING	pointer
)	O
;	O
}	O
void	O
give_usage	function
(	O
void	O
)	O
{	O
(	O
void	O
)	O
printf	function
(	O
"Usage: %s [OPTION] on|off|ACCOUNTING_FILE\n"	pointer
,	O
program_name	pointer
)	O
;	O
}	O
void	O
print_help	function
(	O
void	O
)	O
{	O
give_usage	function
(	O
)	O
;	O
printf	function
(	O
"\n          Turns process accounting on or off, or changes the file where this\n          info is saved.\n\n          OPTIONS:\n          -h, --help       Show help and exit\n          -V, --version    Show version and exit\n\n          ARGUMENTS:\n          on               Activate process accounting and use default file\n          off              Deactivate process accounting\n          ACCOUNTING_FILE  Activate (if not active) and save information in\n          this file\n\n          The system's default process accounting file is '%s'.\n\n          Report bugs to <bug-acct@gnu.org>\n"	pointer
,	O
ACCT_FILE_LOC	pointer
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
c	int
,	O
status_acct	int
,	O
number_args	int
;	O
char	O
*	O
acct_file	pointer
=	O
NULL	O
;	O
program_name	pointer
=	O
argv	array
[	O
0	int
]	O
;	O
while	O
(	O
1	int
)	O
{	O
int	O
option_index	int
=	O
0	int
;	O
static	O
struct	O
option	struct
long_options	array
[	O
]	O
=	O
{	O
{	O
"version"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
}	O
;	O
c	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	array
,	O
"hV"	pointer
,	O
long_options	array
,	O
&	O
option_index	int
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
break	O
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
'V'	O
:	O
case	O
1	int
:	O
print_version	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
'h'	O
:	O
case	O
2	int
:	O
print_help	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
default	O
:	O
give_usage	function
(	O
)	O
;	O
print_option_error	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
number_args	int
=	O
argc	int
-	O
optind	int
;	O
if	O
(	O
1	int
<	O
number_args	int
)	O
{	O
printf	function
(	O
"%s: too many arguments\n"	pointer
,	O
program_name	pointer
)	O
;	O
give_usage	function
(	O
)	O
;	O
print_option_error	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
else	O
if	O
(	O
0	int
==	O
number_args	int
)	O
{	O
printf	function
(	O
"%s: no arguments\n"	pointer
,	O
program_name	pointer
)	O
;	O
give_usage	function
(	O
)	O
;	O
print_option_error	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
else	O
{	O
acct_file	pointer
=	O
argv	array
[	O
optind	int
]	O
;	O
if	O
(	O
0	int
==	O
strcasecmp	function
(	O
acct_file	pointer
,	O
"on"	pointer
)	O
)	O
{	O
status_acct	int
=	O
acct	function
(	O
ACCT_FILE_LOC	pointer
)	O
;	O
printf	function
(	O
"Turning on process accounting, file set to the default '%s'.\n"	pointer
,	O
ACCT_FILE_LOC	pointer
)	O
;	O
}	O
else	O
if	O
(	O
0	int
==	O
strcasecmp	function
(	O
acct_file	pointer
,	O
"off"	pointer
)	O
)	O
{	O
status_acct	int
=	O
acct	function
(	O
NULL	O
)	O
;	O
printf	function
(	O
"Turning off process accounting.\n"	pointer
)	O
;	O
}	O
else	O
{	O
status_acct	int
=	O
acct	function
(	O
acct_file	pointer
)	O
;	O
printf	function
(	O
"Turning on process accounting, file set to '%s'.\n"	pointer
,	O
acct_file	pointer
)	O
;	O
}	O
if	O
(	O
-	O
1	int
==	O
status_acct	int
)	O
{	O
int	O
err	int
=	O
errno	O
;	O
perror	function
(	O
"accton"	pointer
)	O
;	O
exit	function
(	O
err	int
)	O
;	O
}	O
}	O
return	O
EXIT_SUCCESS	int
;	O
}	O
