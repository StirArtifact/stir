static	O
void	O
Gcompile	function
(	O
char	O
const	O
*	O
pattern	pointer
,	O
size_t	long
size	array
)	O
{	O
GEAcompile	function
(	O
pattern	pointer
,	O
size	array
,	O
RE_SYNTAX_GREP	O
|	O
RE_NO_EMPTY_RANGES	O
)	O
;	O
}	O
static	O
void	O
Ecompile	function
(	O
char	O
const	O
*	O
pattern	pointer
,	O
size_t	long
size	array
)	O
{	O
GEAcompile	function
(	O
pattern	pointer
,	O
size	array
,	O
RE_SYNTAX_POSIX_EGREP	O
|	O
RE_NO_EMPTY_RANGES	O
)	O
;	O
}	O
static	O
void	O
Acompile	function
(	O
char	O
const	O
*	O
pattern	pointer
,	O
size_t	long
size	array
)	O
{	O
GEAcompile	function
(	O
pattern	pointer
,	O
size	array
,	O
RE_SYNTAX_AWK	O
)	O
;	O
}	O
struct	O
matcher	struct
const	O
matchers	array
[	O
]	O
=	O
{	O
{	O
"grep"	pointer
,	O
Gcompile	function
,	O
EGexecute	function
}	O
,	O
{	O
"egrep"	pointer
,	O
Ecompile	function
,	O
EGexecute	function
}	O
,	O
{	O
"awk"	pointer
,	O
Acompile	function
,	O
EGexecute	function
}	O
,	O
{	O
"fgrep"	pointer
,	O
Fcompile	function
,	O
Fexecute	function
}	O
,	O
{	O
"perl"	pointer
,	O
Pcompile	function
,	O
Pexecute	function
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
,	O
}	O
;	O
const	O
char	O
before_options	array
[	O
]	O
=	O
N_	O
(	O
"PATTERN is, by default, a basic regular expression (BRE).\n"	pointer
)	O
;	O
const	O
char	O
after_options	array
[	O
]	O
=	O
N_	O
(	O
"`egrep' means `grep -E'.  `fgrep' means `grep -F'.\nDirect invocation as either `egrep' or `fgrep' is deprecated.\n"	pointer
)	O
;	O
