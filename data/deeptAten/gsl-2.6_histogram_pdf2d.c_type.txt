int	O
gsl_histogram2d_pdf_sample	function
(	O
const	O
gsl_histogram2d_pdf	struct
*	O
p	pointer
,	O
double	O
r1	double
,	O
double	O
r2	double
,	O
double	O
*	O
x	double
,	O
double	O
*	O
y	double
)	O
{	O
size_t	long
k	long
;	O
int	O
status	int
;	O
if	O
(	O
r2	double
==	O
1.0	int
)	O
{	O
r2	double
=	O
0.0	int
;	O
}	O
if	O
(	O
r1	double
==	O
1.0	int
)	O
{	O
r1	double
=	O
0.0	int
;	O
}	O
status	int
=	O
find	function
(	O
p	pointer
->	O
nx	long
*	O
p	pointer
->	O
ny	long
,	O
p	pointer
->	O
sum	pointer
,	O
r1	double
,	O
&	O
k	long
)	O
;	O
if	O
(	O
status	int
)	O
{	O
GSL_ERROR	O
(	O
"cannot find r1 in cumulative pdf"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
else	O
{	O
size_t	long
i	pointer
=	O
k	long
/	O
p	pointer
->	O
ny	long
;	O
size_t	long
j	pointer
=	O
k	long
-	O
(	O
i	pointer
*	O
p	pointer
->	O
ny	long
)	O
;	O
double	O
delta	double
=	O
(	O
r1	double
-	O
p	pointer
->	O
sum	pointer
[	O
k	long
]	O
)	O
/	O
(	O
p	pointer
->	O
sum	pointer
[	O
k	long
+	O
1	int
]	O
-	O
p	pointer
->	O
sum	pointer
[	O
k	long
]	O
)	O
;	O
*	O
x	double
=	O
p	pointer
->	O
xrange	pointer
[	O
i	pointer
]	O
+	O
delta	double
*	O
(	O
p	pointer
->	O
xrange	pointer
[	O
i	pointer
+	O
1	int
]	O
-	O
p	pointer
->	O
xrange	pointer
[	O
i	pointer
]	O
)	O
;	O
*	O
y	double
=	O
p	pointer
->	O
yrange	pointer
[	O
j	pointer
]	O
+	O
r2	double
*	O
(	O
p	pointer
->	O
yrange	pointer
[	O
j	pointer
+	O
1	int
]	O
-	O
p	pointer
->	O
yrange	pointer
[	O
j	pointer
]	O
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
gsl_histogram2d_pdf	struct
*	O
gsl_histogram2d_pdf_alloc	function
(	O
const	O
size_t	long
nx	long
,	O
const	O
size_t	long
ny	long
)	O
{	O
const	O
size_t	long
n	long
=	O
nx	long
*	O
ny	long
;	O
gsl_histogram2d_pdf	struct
*	O
p	pointer
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"histogram2d pdf length n must be positive integer"	pointer
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
=	O
(	O
gsl_histogram2d_pdf	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_histogram2d_pdf	struct
)	O
)	O
;	O
if	O
(	O
p	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram2d pdf struct"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
xrange	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
nx	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
p	pointer
->	O
xrange	pointer
==	O
0	int
)	O
{	O
free	function
(	O
p	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram2d pdf xranges"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
yrange	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
ny	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
p	pointer
->	O
yrange	pointer
==	O
0	int
)	O
{	O
free	function
(	O
p	pointer
->	O
xrange	pointer
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram2d pdf yranges"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
sum	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
n	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
p	pointer
->	O
sum	pointer
==	O
0	int
)	O
{	O
free	function
(	O
p	pointer
->	O
yrange	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
xrange	pointer
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram2d pdf sums"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
nx	long
=	O
nx	long
;	O
p	pointer
->	O
ny	long
=	O
ny	long
;	O
return	O
p	pointer
;	O
}	O
int	O
gsl_histogram2d_pdf_init	function
(	O
gsl_histogram2d_pdf	struct
*	O
p	pointer
,	O
const	O
gsl_histogram2d	struct
*	O
h	pointer
)	O
{	O
size_t	long
i	pointer
;	O
const	O
size_t	long
nx	long
=	O
p	pointer
->	O
nx	long
;	O
const	O
size_t	long
ny	long
=	O
p	pointer
->	O
ny	long
;	O
const	O
size_t	long
n	long
=	O
nx	long
*	O
ny	long
;	O
if	O
(	O
nx	long
!=	O
h	pointer
->	O
nx	long
||	O
ny	long
!=	O
h	pointer
->	O
ny	long
)	O
{	O
GSL_ERROR	O
(	O
"histogram2d size must match pdf size"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
if	O
(	O
h	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"histogram bins must be non-negative to compute"	pointer
"a probability distribution"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
nx	long
+	O
1	int
;	O
i	pointer
++	O
)	O
{	O
p	pointer
->	O
xrange	pointer
[	O
i	pointer
]	O
=	O
h	pointer
->	O
xrange	pointer
[	O
i	pointer
]	O
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
ny	long
+	O
1	int
;	O
i	pointer
++	O
)	O
{	O
p	pointer
->	O
yrange	pointer
[	O
i	pointer
]	O
=	O
h	pointer
->	O
yrange	pointer
[	O
i	pointer
]	O
;	O
}	O
{	O
double	O
mean	double
=	O
0	int
,	O
sum	pointer
=	O
0	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
mean	double
+=	O
(	O
h	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
-	O
mean	double
)	O
/	O
(	O
(	O
double	O
)	O
(	O
i	pointer
+	O
1	int
)	O
)	O
;	O
}	O
p	pointer
->	O
sum	pointer
[	O
0	int
]	O
=	O
0	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
n	long
;	O
i	pointer
++	O
)	O
{	O
sum	pointer
+=	O
(	O
h	pointer
->	O
bin	pointer
[	O
i	pointer
]	O
/	O
mean	double
)	O
/	O
n	long
;	O
p	pointer
->	O
sum	pointer
[	O
i	pointer
+	O
1	int
]	O
=	O
sum	pointer
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
void	O
gsl_histogram2d_pdf_free	function
(	O
gsl_histogram2d_pdf	struct
*	O
p	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
p	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
xrange	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
yrange	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
sum	pointer
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
}	O
