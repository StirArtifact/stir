kern_return_t	O
do_mach_notify_dead_name	function
(	O
struct	O
port_info	O
*	O
pi	pointer
,	O
mach_port_t	O
deadport	int
)	O
{	O
struct	O
proc	O
*	O
p	pointer
;	O
if	O
(	O
!	O
pi	pointer
)	O
return	O
EOPNOTSUPP	O
;	O
if	O
(	O
pi	pointer
->	O
port_right	O
==	O
generic_port	O
)	O
{	O
check_dead_execdata_notify	function
(	O
deadport	int
)	O
;	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
deadport	int
)	O
;	O
return	O
0	int
;	O
}	O
p	pointer
=	O
(	O
struct	O
proc	O
*	O
)	O
pi	pointer
;	O
if	O
(	O
p	pointer
->	O
p_pi	O
.	O
bucket	O
!=	O
proc_bucket	O
||	O
p	pointer
->	O
p_pi	O
.	O
class	O
!=	O
proc_class	O
)	O
return	O
EOPNOTSUPP	O
;	O
if	O
(	O
p	pointer
->	O
p_task	O
==	O
deadport	int
)	O
{	O
process_has_exited	function
(	O
p	pointer
)	O
;	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
deadport	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
EINVAL	O
;	O
}	O
}	O
kern_return_t	O
do_mach_notify_no_senders	function
(	O
struct	O
port_info	O
*	O
pi	pointer
,	O
mach_port_mscount_t	O
mscount	int
)	O
{	O
return	O
ports_do_mach_notify_no_senders	function
(	O
pi	pointer
,	O
mscount	int
)	O
;	O
}	O
kern_return_t	O
do_mach_notify_port_deleted	function
(	O
struct	O
port_info	O
*	O
pi	pointer
,	O
mach_port_t	O
name	int
)	O
{	O
return	O
0	int
;	O
}	O
kern_return_t	O
do_mach_notify_msg_accepted	function
(	O
struct	O
port_info	O
*	O
pi	pointer
,	O
mach_port_t	O
name	int
)	O
{	O
return	O
0	int
;	O
}	O
kern_return_t	O
do_mach_notify_port_destroyed	function
(	O
struct	O
port_info	O
*	O
pi	pointer
,	O
mach_port_t	O
name	int
)	O
{	O
return	O
0	int
;	O
}	O
kern_return_t	O
do_mach_notify_send_once	function
(	O
struct	O
port_info	O
*	O
pi	pointer
)	O
{	O
return	O
0	int
;	O
}	O
