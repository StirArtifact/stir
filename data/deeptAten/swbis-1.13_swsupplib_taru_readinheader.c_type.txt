void	O
taru_read_in_binary	function
(	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
int	O
in_des	int
)	O
;	O
void	O
taru_swab_array	function
(	O
char	O
*	O
ptr	pointer
,	O
int	O
count	int
)	O
;	O
static	O
int	O
set_unsigned_long_value	function
(	O
unsigned	O
long	O
*	O
al	pointer
,	O
unsigned	O
long	O
*	O
al_nsec	pointer
,	O
char	O
*	O
value	int
,	O
int	O
valuelen	int
)	O
{	O
unsigned	O
long	O
int	O
ret	long
;	O
int	O
result	pointer
;	O
char	O
*	O
endptr	pointer
;	O
if	O
(	O
al_nsec	pointer
)	O
*	O
al_nsec	pointer
=	O
0	int
;	O
ret	long
=	O
swlib_atoul	function
(	O
value	int
,	O
&	O
result	pointer
,	O
&	O
endptr	pointer
)	O
;	O
if	O
(	O
result	pointer
)	O
{	O
*	O
al	pointer
=	O
0	int
;	O
return	O
result	pointer
;	O
}	O
else	O
{	O
*	O
al	pointer
=	O
ret	long
;	O
}	O
if	O
(	O
al_nsec	pointer
&&	O
*	O
endptr	pointer
==	O
'.'	O
)	O
{	O
ret	long
=	O
swlib_atoul	function
(	O
endptr	pointer
+	O
1	int
,	O
&	O
result	pointer
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
result	pointer
)	O
{	O
return	O
result	pointer
;	O
}	O
else	O
{	O
*	O
al_nsec	pointer
=	O
ret	long
;	O
}	O
}	O
return	O
result	pointer
;	O
}	O
intmax_t	long
taru_pump_amount2	function
(	O
int	O
discharge_fd	int
,	O
int	O
suction_fd	int
,	O
intmax_t	long
amount	long
,	O
int	O
adjunct_ofd	int
)	O
{	O
intmax_t	long
ret	long
;	O
intmax_t	long
i	int
=	O
amount	long
;	O
if	O
(	O
(	O
ret	long
=	O
swlib_i_pipe_pump	function
(	O
suction_fd	int
,	O
discharge_fd	int
,	O
&	O
i	int
,	O
adjunct_ofd	int
,	O
NULL	O
,	O
taru_tape_buffered_read	function
)	O
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
i	int
;	O
}	O
intmax_t	long
taru_read_amount	function
(	O
int	O
suction_fd	int
,	O
intmax_t	long
amount	long
)	O
{	O
return	O
taru_pump_amount2	function
(	O
-	O
1	int
,	O
suction_fd	int
,	O
amount	long
,	O
-	O
1	int
)	O
;	O
}	O
ssize_t	long
taru_tape_buffered_read	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
pcount	long
)	O
{	O
int	O
taruib_fd	int
;	O
int	O
count	int
;	O
E_DEBUG	O
(	O
"ENTERING"	pointer
)	O
;	O
taruib_fd	int
=	O
taruib_get_fd	function
(	O
)	O
;	O
count	int
=	O
uxfio_sfa_read	function
(	O
fd	int
,	O
buf	pointer
,	O
pcount	long
)	O
;	O
E_DEBUG3	O
(	O
"taruib_fd=%d,  count=%d"	pointer
,	O
taruib_fd	int
,	O
(	O
int	O
)	O
count	int
)	O
;	O
if	O
(	O
taruib_fd	int
>	O
0	int
&&	O
count	int
>	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"buffer taruib"	pointer
)	O
;	O
char	O
*	O
buffer	array
=	O
taruib_get_buffer	function
(	O
)	O
;	O
int	O
data_len	pointer
=	O
taruib_get_datalen	function
(	O
)	O
;	O
int	O
buffer_reserve	int
=	O
taruib_get_nominal_reserve	function
(	O
)	O
-	O
data_len	pointer
;	O
char	O
*	O
buffer_dst	pointer
;	O
if	O
(	O
buffer_reserve	int
<	O
count	int
&&	O
taruib_get_overflow_release	function
(	O
)	O
==	O
0	int
)	O
{	O
E_DEBUG3	O
(	O
"CASE1 res %d  count %d"	pointer
,	O
buffer_reserve	int
,	O
count	int
)	O
;	O
buffer_dst	pointer
=	O
buffer	array
;	O
taruib_set_datalen	function
(	O
count	int
)	O
;	O
uxfio_write	function
(	O
taruib_fd	int
,	O
buffer_dst	pointer
,	O
data_len	pointer
)	O
;	O
}	O
else	O
{	O
E_DEBUG3	O
(	O
"CASE2 res %d  count %d"	pointer
,	O
buffer_reserve	int
,	O
count	int
)	O
;	O
if	O
(	O
data_len	pointer
+	O
(	O
int	O
)	O
pcount	long
>	O
taruib_get_reserve	function
(	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"taru_tape_buffered_read fatal error: stop, stop, stop.\n"	pointer
)	O
;	O
exit	function
(	O
2	int
)	O
;	O
}	O
buffer_dst	pointer
=	O
buffer	array
+	O
data_len	pointer
;	O
taruib_set_datalen	function
(	O
data_len	pointer
+	O
count	int
)	O
;	O
}	O
memcpy	function
(	O
buffer_dst	pointer
,	O
buf	pointer
,	O
count	int
)	O
;	O
}	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
count	int
;	O
}	O
int	O
taru_exatt_override_ustar	function
(	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
EXATT	struct
*	O
exatt	pointer
)	O
{	O
char	O
*	O
attr	pointer
;	O
char	O
*	O
value	int
;	O
int	O
ret	long
=	O
0	int
;	O
int	O
valuelen	int
;	O
if	O
(	O
strlen	function
(	O
exatt	pointer
->	O
namespaceM	array
)	O
==	O
0	int
&&	O
islower	function
(	O
(	O
int	O
)	O
(	O
*	O
(	O
(	O
char	O
*	O
)	O
strob_str	function
(	O
(	O
STROB	struct
*	O
)	O
exatt	pointer
->	O
attrnameM	pointer
)	O
)	O
)	O
)	O
)	O
{	O
exatt	pointer
->	O
is_in_useM	int
=	O
0	int
;	O
attr	pointer
=	O
strob_str	function
(	O
(	O
STROB	struct
*	O
)	O
exatt	pointer
->	O
attrnameM	pointer
)	O
;	O
value	int
=	O
strob_str	function
(	O
(	O
STROB	struct
*	O
)	O
exatt	pointer
->	O
attrvalueM	pointer
)	O
;	O
valuelen	int
=	O
exatt	pointer
->	O
lenM	int
;	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_path	pointer
)	O
==	O
0	int
)	O
{	O
ahsStaticSetTarFilename	function
(	O
file_hdr	pointer
,	O
value	int
)	O
;	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_PATH	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_linkpath	pointer
)	O
==	O
0	int
)	O
{	O
ahsStaticSetPaxLinkname	function
(	O
file_hdr	pointer
,	O
value	int
)	O
;	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_LINKPATH	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_gname	pointer
)	O
==	O
0	int
)	O
{	O
ahsStaticSetTarGroupname	function
(	O
file_hdr	pointer
,	O
value	int
)	O
;	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_GNAME	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_uname	pointer
)	O
==	O
0	int
)	O
{	O
ahsStaticSetTarUsername	function
(	O
file_hdr	pointer
,	O
value	int
)	O
;	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_UNAME	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_atime	pointer
)	O
==	O
0	int
)	O
{	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_ATIME	O
;	O
ret	long
=	O
set_unsigned_long_value	function
(	O
&	O
(	O
file_hdr	pointer
->	O
c_atime	long
)	O
,	O
&	O
(	O
file_hdr	pointer
->	O
c_atime_nsec	long
)	O
,	O
value	int
,	O
valuelen	int
)	O
;	O
if	O
(	O
ret	long
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: error evaluating attribute in extended header: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
"atime"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_mtime	pointer
)	O
==	O
0	int
)	O
{	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_MTIME	O
;	O
ret	long
=	O
set_unsigned_long_value	function
(	O
&	O
(	O
file_hdr	pointer
->	O
c_mtime	long
)	O
,	O
NULL	O
,	O
value	int
,	O
valuelen	int
)	O
;	O
if	O
(	O
ret	long
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: error evaluating attribute in extended header: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
"mtime"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_ctime	pointer
)	O
==	O
0	int
)	O
{	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_CTIME	O
;	O
ret	long
=	O
set_unsigned_long_value	function
(	O
&	O
(	O
file_hdr	pointer
->	O
c_ctime	long
)	O
,	O
&	O
(	O
file_hdr	pointer
->	O
c_ctime_nsec	long
)	O
,	O
value	int
,	O
valuelen	int
)	O
;	O
if	O
(	O
ret	long
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: error evaluating attribute in extended header: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
"ctime"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_gid	pointer
)	O
==	O
0	int
)	O
{	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_GID	O
;	O
ret	long
=	O
set_unsigned_long_value	function
(	O
&	O
(	O
file_hdr	pointer
->	O
c_gid	short
)	O
,	O
NULL	O
,	O
value	int
,	O
valuelen	int
)	O
;	O
if	O
(	O
ret	long
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: error evaluating attribute in extended header: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
"gid"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_uid	pointer
)	O
==	O
0	int
)	O
{	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_UID	O
;	O
ret	long
=	O
set_unsigned_long_value	function
(	O
&	O
(	O
file_hdr	pointer
->	O
c_uid	short
)	O
,	O
NULL	O
,	O
value	int
,	O
valuelen	int
)	O
;	O
if	O
(	O
ret	long
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: error evaluating attribute in extended header: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
"uid"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
attr	pointer
,	O
PAX_KW_size	pointer
)	O
==	O
0	int
)	O
{	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_SIZE	O
;	O
ret	long
=	O
set_unsigned_long_value	function
(	O
&	O
(	O
file_hdr	pointer
->	O
c_uid	short
)	O
,	O
NULL	O
,	O
value	int
,	O
valuelen	int
)	O
;	O
if	O
(	O
ret	long
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: error evaluating attribute in extended header: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
"size"	pointer
)	O
;	O
}	O
else	O
{	O
;	O
exatt	pointer
->	O
is_in_useM	int
=	O
1	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: warning: lower case attribute name not processed: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
attr	pointer
)	O
;	O
}	O
}	O
return	O
ret	long
;	O
}	O
char	O
*	O
taru_read_ext_header_record	function
(	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
char	O
*	O
data	pointer
,	O
int	O
*	O
errorcode	pointer
)	O
{	O
char	O
*	O
n_data	pointer
;	O
char	O
*	O
pend	pointer
;	O
char	O
*	O
pos	pointer
;	O
char	O
*	O
p	pointer
;	O
int	O
result	pointer
;	O
int	O
len	long
;	O
char	O
*	O
attr	pointer
=	O
NULL	O
;	O
char	O
*	O
value	int
=	O
NULL	O
;	O
int	O
valuelen	int
;	O
int	O
attrlen	int
;	O
int	O
retval	int
;	O
int	O
ret	long
;	O
EXATT	struct
*	O
exatt	pointer
;	O
n_data	pointer
=	O
data	pointer
;	O
len	long
=	O
swlib_atoi2	function
(	O
n_data	pointer
,	O
&	O
pend	pointer
,	O
&	O
result	pointer
)	O
;	O
pos	pointer
=	O
pend	pointer
;	O
if	O
(	O
!	O
isspace	function
(	O
*	O
pos	pointer
)	O
)	O
{	O
if	O
(	O
errorcode	pointer
)	O
*	O
errorcode	pointer
=	O
-	O
1	int
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
isspace	function
(	O
*	O
pos	pointer
)	O
)	O
{	O
pos	pointer
++	O
;	O
}	O
attr	pointer
=	O
pos	pointer
;	O
p	pointer
=	O
strchr	function
(	O
attr	pointer
,	O
'='	O
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
{	O
if	O
(	O
errorcode	pointer
)	O
*	O
errorcode	pointer
=	O
-	O
2	int
;	O
return	O
NULL	O
;	O
}	O
attrlen	int
=	O
p	pointer
-	O
attr	pointer
;	O
if	O
(	O
attrlen	int
<	O
0	int
)	O
{	O
if	O
(	O
errorcode	pointer
)	O
*	O
errorcode	pointer
=	O
-	O
3	int
;	O
return	O
NULL	O
;	O
}	O
p	pointer
++	O
;	O
value	int
=	O
p	pointer
;	O
valuelen	int
=	O
len	long
-	O
(	O
int	O
)	O
(	O
p	pointer
-	O
data	pointer
)	O
-	O
1	int
;	O
if	O
(	O
valuelen	int
<	O
0	int
)	O
{	O
if	O
(	O
errorcode	pointer
)	O
*	O
errorcode	pointer
=	O
-	O
4	int
;	O
return	O
NULL	O
;	O
}	O
exatt	pointer
=	O
taru_exattlist_get_free	function
(	O
file_hdr	pointer
)	O
;	O
retval	int
=	O
taru_exatt_parse_fqname	function
(	O
exatt	pointer
,	O
attr	pointer
,	O
attrlen	int
)	O
;	O
if	O
(	O
retval	int
<	O
0	int
)	O
{	O
if	O
(	O
errorcode	pointer
)	O
*	O
errorcode	pointer
=	O
-	O
5	int
;	O
return	O
NULL	O
;	O
}	O
strob_memcpy	function
(	O
exatt	pointer
->	O
attrvalueM	pointer
,	O
(	O
void	O
*	O
)	O
value	int
,	O
valuelen	int
)	O
;	O
strob_chr_index	function
(	O
exatt	pointer
->	O
attrvalueM	pointer
,	O
valuelen	int
,	O
(	O
int	O
)	O
'\0'	O
)	O
;	O
exatt	pointer
->	O
lenM	int
=	O
valuelen	int
;	O
exatt	pointer
->	O
is_in_useM	int
=	O
1	int
;	O
return	O
value	int
+	O
valuelen	int
+	O
1	int
;	O
}	O
int	O
taru_read_all_ext_header_records	function
(	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
char	O
*	O
data	pointer
,	O
int	O
len	long
,	O
int	O
*	O
errorcode	pointer
)	O
{	O
char	O
*	O
tarheaderdata	pointer
;	O
char	O
*	O
current_pos	pointer
;	O
char	O
*	O
retpos	pointer
;	O
int	O
current_offset	int
;	O
int	O
retval	int
;	O
int	O
num_of_records	int
;	O
tarheaderdata	pointer
=	O
data	pointer
;	O
current_pos	pointer
=	O
data	pointer
;	O
current_offset	int
=	O
0	int
;	O
retval	int
=	O
0	int
;	O
num_of_records	int
=	O
0	int
;	O
file_hdr	pointer
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_ANY	O
;	O
retpos	pointer
=	O
data	pointer
;	O
while	O
(	O
retpos	pointer
&&	O
(	O
current_pos	pointer
-	O
data	pointer
)	O
<	O
len	long
)	O
{	O
retpos	pointer
=	O
taru_read_ext_header_record	function
(	O
file_hdr	pointer
,	O
current_pos	pointer
,	O
errorcode	pointer
)	O
;	O
if	O
(	O
retpos	pointer
==	O
NULL	O
)	O
{	O
return	O
-	O
num_of_records	int
;	O
}	O
current_pos	pointer
=	O
retpos	pointer
;	O
num_of_records	int
++	O
;	O
}	O
return	O
num_of_records	int
;	O
}	O
int	O
taru_read_header	function
(	O
TARU	struct
*	O
taru	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
int	O
in_des	int
,	O
enum	O
archive_format	enum
format	pointer
,	O
int	O
*	O
eoa	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
retval	int
;	O
char	O
*	O
link_name	pointer
;	O
int	O
ret	long
;	O
E_DEBUG	O
(	O
"ENTERING"	pointer
)	O
;	O
E_DEBUG2	O
(	O
"fildes=%d"	pointer
,	O
in_des	int
)	O
;	O
ret	long
=	O
taru_read_in_header	function
(	O
taru	pointer
,	O
file_hdr	pointer
,	O
in_des	int
,	O
format	pointer
,	O
eoa	pointer
,	O
flags	int
)	O
;	O
if	O
(	O
ret	long
<	O
0	int
)	O
return	O
-	O
1	int
;	O
retval	int
=	O
ret	long
;	O
if	O
(	O
format	pointer
!=	O
arf_tar	int
&&	O
format	pointer
!=	O
arf_ustar	int
)	O
{	O
if	O
(	O
(	O
file_hdr	pointer
->	O
c_mode	short
&	O
CP_IFMT	int
)	O
==	O
CP_IFLNK	int
)	O
{	O
link_name	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
(	O
unsigned	O
int	O
)	O
file_hdr	pointer
->	O
c_filesize	long
+	O
1	int
)	O
;	O
link_name	pointer
[	O
(	O
int	O
)	O
(	O
file_hdr	pointer
->	O
c_filesize	long
)	O
]	O
=	O
'\0'	O
;	O
ret	long
=	O
taru_tape_buffered_read	function
(	O
in_des	int
,	O
link_name	pointer
,	O
(	O
size_t	long
)	O
(	O
file_hdr	pointer
->	O
c_filesize	long
)	O
)	O
;	O
if	O
(	O
ret	long
<	O
0	int
)	O
return	O
-	O
retval	int
;	O
retval	int
+=	O
ret	long
;	O
ret	long
=	O
taru_tape_skip_padding	function
(	O
in_des	int
,	O
file_hdr	pointer
->	O
c_filesize	long
,	O
format	pointer
)	O
;	O
if	O
(	O
ret	long
<	O
0	int
)	O
return	O
-	O
retval	int
;	O
retval	int
+=	O
ret	long
;	O
ahsStaticSetPaxLinkname	function
(	O
file_hdr	pointer
,	O
link_name	pointer
)	O
;	O
}	O
else	O
{	O
ahsStaticSetPaxLinkname	function
(	O
file_hdr	pointer
,	O
NULL	O
)	O
;	O
}	O
}	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
retval	int
;	O
}	O
int	O
taru_read_in_header	function
(	O
TARU	struct
*	O
taru	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
int	O
in_des	int
,	O
enum	O
archive_format	enum
archive_format_in0	enum
,	O
int	O
*	O
p_eoa	pointer
,	O
int	O
flags	int
)	O
{	O
long	O
bytes_skipped	long
=	O
0	int
;	O
int	O
ret	long
;	O
int	O
retval	int
=	O
0	int
;	O
E_DEBUG	O
(	O
"ENTERING"	pointer
)	O
;	O
if	O
(	O
archive_format_in0	enum
==	O
arf_unknown	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
" format unknown in read_in_header.\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
archive_format_in0	enum
==	O
arf_tar	int
||	O
archive_format_in0	enum
==	O
arf_ustar	int
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
(	O
retval	int
=	O
taru_read_in_tar_header2	function
(	O
taru	pointer
,	O
file_hdr	pointer
,	O
in_des	int
,	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
,	O
p_eoa	pointer
,	O
flags	int
,	O
TARRECORDSIZE	int
)	O
)	O
<	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
retval	int
;	O
}	O
}	O
ahsStaticSetPaxLinkname	function
(	O
file_hdr	pointer
,	O
NULL	O
)	O
;	O
if	O
(	O
(	O
retval	int
=	O
taru_tape_buffered_read	function
(	O
in_des	int
,	O
(	O
void	O
*	O
)	O
file_hdr	pointer
,	O
(	O
size_t	long
)	O
(	O
6	int
)	O
)	O
)	O
!=	O
6	int
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"error reading magic. retval= %d\n"	pointer
,	O
retval	int
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
archive_format_in0	enum
==	O
arf_newascii	int
&&	O
!	O
strncmp	function
(	O
(	O
char	O
*	O
)	O
file_hdr	pointer
,	O
"070701"	pointer
,	O
6	int
)	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
bytes_skipped	long
>	O
0	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"warning: skipped %ld bytes of junk"	pointer
,	O
bytes_skipped	long
)	O
;	O
if	O
(	O
(	O
ret	long
=	O
taru_read_in_new_ascii	function
(	O
taru	pointer
,	O
file_hdr	pointer
,	O
in_des	int
,	O
archive_format_in0	enum
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"error from taru_read_in_new_ascii"	pointer
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
retval	int
;	O
}	O
if	O
(	O
!	O
strcmp	function
(	O
ahsStaticGetTarFilename	function
(	O
file_hdr	pointer
)	O
,	O
CPIO_INBAND_EOA_FILENAME	pointer
)	O
)	O
if	O
(	O
p_eoa	pointer
)	O
*	O
p_eoa	pointer
=	O
1	int
;	O
retval	int
+=	O
ret	long
;	O
break	O
;	O
}	O
if	O
(	O
archive_format_in0	enum
==	O
arf_crcascii	int
&&	O
!	O
strncmp	function
(	O
(	O
char	O
*	O
)	O
file_hdr	pointer
,	O
"070702"	pointer
,	O
6	int
)	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
bytes_skipped	long
>	O
0	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"warning: skipped %ld bytes of junk"	pointer
,	O
bytes_skipped	long
)	O
;	O
if	O
(	O
(	O
ret	long
=	O
taru_read_in_new_ascii	function
(	O
taru	pointer
,	O
file_hdr	pointer
,	O
in_des	int
,	O
archive_format_in0	enum
)	O
)	O
<	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
retval	int
;	O
}	O
if	O
(	O
!	O
strcmp	function
(	O
ahsStaticGetTarFilename	function
(	O
file_hdr	pointer
)	O
,	O
CPIO_INBAND_EOA_FILENAME	pointer
)	O
)	O
if	O
(	O
p_eoa	pointer
)	O
*	O
p_eoa	pointer
=	O
1	int
;	O
retval	int
+=	O
ret	long
;	O
break	O
;	O
}	O
if	O
(	O
(	O
archive_format_in0	enum
==	O
arf_oldascii	int
||	O
archive_format_in0	enum
==	O
arf_hpoldascii	int
)	O
&&	O
!	O
strncmp	function
(	O
(	O
char	O
*	O
)	O
file_hdr	pointer
,	O
"070707"	pointer
,	O
6	int
)	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
bytes_skipped	long
>	O
0	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"warning: skipped %ld bytes of junk"	pointer
,	O
bytes_skipped	long
)	O
;	O
ret	long
=	O
taru_read_in_old_ascii2	function
(	O
taru	pointer
,	O
file_hdr	pointer
,	O
in_des	int
,	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
;	O
if	O
(	O
ret	long
<=	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
retval	int
;	O
}	O
if	O
(	O
!	O
strcmp	function
(	O
ahsStaticGetTarFilename	function
(	O
file_hdr	pointer
)	O
,	O
CPIO_INBAND_EOA_FILENAME	pointer
)	O
)	O
if	O
(	O
p_eoa	pointer
)	O
*	O
p_eoa	pointer
=	O
1	int
;	O
retval	int
+=	O
ret	long
;	O
break	O
;	O
}	O
if	O
(	O
(	O
archive_format_in0	enum
==	O
arf_binary	int
||	O
archive_format_in0	enum
==	O
arf_hpbinary	int
)	O
&&	O
(	O
file_hdr	pointer
->	O
c_magic	short
==	O
070707	int
||	O
file_hdr	pointer
->	O
c_magic	short
==	O
swab_short	O
(	O
(	O
unsigned	O
short	O
)	O
070707	int
)	O
)	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"arf_binary arf_hpbinary not supported.\n"	pointer
)	O
;	O
break	O
;	O
}	O
bytes_skipped	long
++	O
;	O
memmove	function
(	O
(	O
char	O
*	O
)	O
file_hdr	pointer
,	O
(	O
char	O
*	O
)	O
file_hdr	pointer
+	O
1	int
,	O
5	int
)	O
;	O
if	O
(	O
(	O
ret	long
=	O
taru_tape_buffered_read	function
(	O
in_des	int
,	O
(	O
void	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
file_hdr	pointer
+	O
5	int
)	O
,	O
(	O
size_t	long
)	O
(	O
1	int
)	O
)	O
)	O
<=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"error: header magic not found and subsequent read error.\n"	pointer
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
-	O
retval	int
;	O
}	O
retval	int
+=	O
ret	long
;	O
}	O
E_DEBUG	O
(	O
"LEAVING"	pointer
)	O
;	O
return	O
retval	int
;	O
}	O
