void	O
mpz_combit	O
(	O
mpz_ptr	pointer
d	long
,	O
mp_bitcnt_t	long
bit_index	long
)	O
{	O
mp_size_t	long
dsize	long
=	O
SIZ	O
(	O
d	long
)	O
;	O
mp_ptr	pointer
dp	pointer
=	O
PTR	O
(	O
d	long
)	O
;	O
mp_size_t	long
limb_index	long
=	O
bit_index	long
/	O
GMP_NUMB_BITS	O
;	O
mp_limb_t	long
bit	long
=	O
(	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
(	O
bit_index	long
%	O
GMP_NUMB_BITS	O
)	O
)	O
;	O
if	O
(	O
limb_index	long
+	O
1	int
<	O
dsize	long
)	O
dp	pointer
[	O
limb_index	long
]	O
^=	O
bit	long
;	O
else	O
if	O
(	O
limb_index	long
<	O
-	O
dsize	long
&&	O
mpn_zero_p	function
(	O
dp	pointer
,	O
limb_index	long
)	O
&&	O
(	O
dp	pointer
[	O
limb_index	long
]	O
&	O
(	O
bit	long
-	O
1	int
)	O
)	O
==	O
0	int
)	O
{	O
ASSERT	O
(	O
dsize	long
<	O
0	int
)	O
;	O
dsize	long
=	O
-	O
dsize	long
;	O
if	O
(	O
dp	pointer
[	O
limb_index	long
]	O
&	O
bit	long
)	O
{	O
dp	pointer
=	O
MPZ_REALLOC	O
(	O
d	long
,	O
1	int
+	O
dsize	long
)	O
;	O
dp	pointer
[	O
dsize	long
]	O
=	O
0	int
;	O
MPN_INCR_U	O
(	O
dp	pointer
+	O
limb_index	long
,	O
1	int
+	O
dsize	long
-	O
limb_index	long
,	O
bit	long
)	O
;	O
SIZ	O
(	O
d	long
)	O
-=	O
dp	pointer
[	O
dsize	long
]	O
;	O
}	O
else	O
{	O
MPN_DECR_U	O
(	O
dp	pointer
+	O
limb_index	long
,	O
dsize	long
-	O
limb_index	long
,	O
bit	long
)	O
;	O
MPN_NORMALIZE	O
(	O
dp	pointer
,	O
dsize	long
)	O
;	O
ASSERT	O
(	O
dsize	long
>	O
0	int
)	O
;	O
SIZ	O
(	O
d	long
)	O
=	O
-	O
dsize	long
;	O
}	O
}	O
else	O
{	O
dsize	long
=	O
ABS	O
(	O
dsize	long
)	O
;	O
if	O
(	O
limb_index	long
<	O
dsize	long
)	O
{	O
dp	pointer
[	O
limb_index	long
]	O
^=	O
bit	long
;	O
if	O
(	O
dp	pointer
[	O
dsize	long
-	O
1	int
]	O
==	O
0	int
)	O
{	O
dsize	long
--	O
;	O
MPN_NORMALIZE	O
(	O
dp	pointer
,	O
dsize	long
)	O
;	O
SIZ	O
(	O
d	long
)	O
=	O
SIZ	O
(	O
d	long
)	O
>=	O
0	int
?	O
dsize	long
:	O
-	O
dsize	long
;	O
}	O
}	O
else	O
{	O
dp	pointer
=	O
MPZ_REALLOC	O
(	O
d	long
,	O
limb_index	long
+	O
1	int
)	O
;	O
MPN_ZERO	O
(	O
dp	pointer
+	O
dsize	long
,	O
limb_index	long
-	O
dsize	long
)	O
;	O
dp	pointer
[	O
limb_index	long
++	O
]	O
=	O
bit	long
;	O
SIZ	O
(	O
d	long
)	O
=	O
SIZ	O
(	O
d	long
)	O
>=	O
0	int
?	O
limb_index	long
:	O
-	O
limb_index	long
;	O
}	O
}	O
}	O
