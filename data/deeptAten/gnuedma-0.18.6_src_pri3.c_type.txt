extern	O
EUint32	long
EDMAEnd	function
(	O
)	O
;	O
EPVoid	pointer
EDMAPROC	O
edma_get_data_ref	function
(	O
OBJID	long
IdObj	long
)	O
{	O
if	O
(	O
(	O
edma_check_obj_id	function
(	O
IdObj	long
,	O
"edma_get_data_ref"	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
NULL	O
;	O
return	O
(	O
EPVoid	pointer
)	O
gObj	O
[	O
IdObj	long
]	O
->	O
Data	pointer
;	O
}	O
static	O
ESint32	long
EDMAPROC	O
_edma_check_suicide	function
(	O
OBJID	long
IdObj	long
)	O
{	O
if	O
(	O
gObj	O
[	O
IdObj	long
]	O
&&	O
gObj	O
[	O
IdObj	long
]	O
->	O
Flag	char
==	O
OBJ_DIE	int
)	O
{	O
if	O
(	O
!	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
)	O
edma_free_obj	function
(	O
IdObj	long
)	O
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_met3	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
...	O
)	O
{	O
va_list	pointer
p	pointer
;	O
ESint32	long
ret_val	long
;	O
ESint32	long
i	long
;	O
if	O
(	O
(	O
edma_check_obj_id1	function
(	O
IdObj	long
,	O
"edma_met3"	pointer
,	O
Id1	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
Id1	pointer
==	O
NULL	O
)	O
{	O
edma_printf_err	function
(	O
"%s"	pointer
,	O
"[edma_met3] Invalid Method Name (NULL)"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
last_checked_update	long
<	O
GVar	pointer
->	O
time_last_update	long
)	O
edma_hotswap	function
(	O
NULL	O
)	O
;	O
va_start	O
(	O
p	pointer
,	O
Id1	pointer
)	O
;	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
++	O
;	O
if	O
(	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
>=	O
MAX_RECURSION	int
)	O
{	O
va_end	O
(	O
p	pointer
)	O
;	O
edma_printf	function
(	O
"FATAL ERROR :: [edma_met3] %ld recursion level achieved. "	pointer
"Probably, there is a cycle in your class diagram.\n"	pointer
"            Method %s on object %ld <%s> not executed\n"	pointer
"**** ABORTING execution"	pointer
,	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
,	O
Id1	pointer
,	O
IdObj	long
,	O
gClass	O
[	O
gObj	O
[	O
IdObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
edma_printf	function
(	O
"==== DEBUG: Max Recursion Level Object List ="	pointer
"========================"	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nMaxObj	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
gObj	O
[	O
i	long
]	O
!=	O
NULL	O
)	O
if	O
(	O
gObj	O
[	O
i	long
]	O
->	O
rlevel	long
>	O
MAX_RECURSION	int
-	O
MAX_RECURSION	int
*	O
0.1	int
)	O
edma_printf	function
(	O
"--> Object %05ld [%05ld] <%-30s> Recursion: %05ld. "	pointer
"Last Method: '%s'"	pointer
,	O
i	long
,	O
gObj	O
[	O
i	long
]	O
->	O
IdClass	long
,	O
gClass	O
[	O
gObj	O
[	O
i	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
,	O
gObj	O
[	O
i	long
]	O
->	O
rlevel	long
,	O
pClass	pointer
[	O
gObj	O
[	O
i	long
]	O
->	O
IdClass	long
]	O
->	O
Met	pointer
[	O
gObj	O
[	O
i	long
]	O
->	O
last_met	long
]	O
.	O
IdMet	array
)	O
;	O
}	O
edma_printf	function
(	O
"======================================"	pointer
"========================\n"	pointer
)	O
;	O
EDMAEnd	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ret_val	long
=	O
edma_met3_pargs	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
NULL	O
,	O
1	int
,	O
p	pointer
)	O
;	O
va_end	O
(	O
p	pointer
)	O
;	O
if	O
(	O
gObj	O
[	O
IdObj	long
]	O
)	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
--	O
;	O
_edma_check_suicide	function
(	O
IdObj	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_met3s	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EPChar	pointer
Sig	array
,	O
...	O
)	O
{	O
va_list	pointer
p	pointer
;	O
ESint32	long
ret_val	long
;	O
ESint32	long
i	long
,	O
len	long
,	O
npar	long
;	O
EChar	char
sig_ext	array
[	O
EDMA_MET_SIG_LEN	int
]	O
,	O
*	O
src	pointer
,	O
*	O
dest	pointer
;	O
OBJID	long
sObj	long
;	O
if	O
(	O
(	O
edma_check_obj_id	function
(	O
IdObj	long
,	O
"edma_met3s"	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
Id1	pointer
==	O
NULL	O
)	O
{	O
edma_printf_err	function
(	O
"%s"	pointer
,	O
"[edma_met3s] Invalid Method Name (NULL)"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
last_checked_update	long
<	O
GVar	pointer
->	O
time_last_update	long
)	O
edma_hotswap	function
(	O
NULL	O
)	O
;	O
va_start	O
(	O
p	pointer
,	O
Sig	array
)	O
;	O
src	pointer
=	O
Sig	array
;	O
dest	pointer
=	O
sig_ext	array
;	O
npar	long
=	O
0	int
;	O
while	O
(	O
*	O
src	pointer
!=	O
0	int
)	O
{	O
switch	O
(	O
*	O
src	pointer
)	O
{	O
case	O
'L'	O
:	O
{	O
src	pointer
++	O
;	O
while	O
(	O
*	O
src	pointer
!=	O
';'	O
&&	O
*	O
src	pointer
!=	O
0	int
)	O
{	O
*	O
dest	pointer
=	O
*	O
src	pointer
;	O
dest	pointer
++	O
;	O
src	pointer
++	O
;	O
}	O
dest	pointer
--	O
;	O
break	O
;	O
}	O
case	O
'X'	O
:	O
{	O
sObj	long
=	O
(	O
OBJID	long
)	O
(	O
*	O
(	O
(	O
EPUint32	pointer
)	O
p	pointer
+	O
npar	long
)	O
)	O
;	O
if	O
(	O
(	O
edma_check_obj_id	function
(	O
sObj	long
,	O
"edma_met3s"	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
len	long
=	O
strlen	function
(	O
gClass	O
[	O
gObj	O
[	O
sObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
strcpy	function
(	O
dest	pointer
,	O
gClass	O
[	O
gObj	O
[	O
sObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
len	long
--	O
;	O
dest	pointer
+=	O
len	long
;	O
break	O
;	O
}	O
default	O
:	O
{	O
*	O
dest	pointer
=	O
*	O
src	pointer
;	O
break	O
;	O
}	O
}	O
npar	long
++	O
;	O
dest	pointer
++	O
;	O
src	pointer
++	O
;	O
}	O
*	O
dest	pointer
=	O
0	int
;	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
++	O
;	O
if	O
(	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
>=	O
MAX_RECURSION	int
)	O
{	O
va_end	O
(	O
p	pointer
)	O
;	O
edma_printf	function
(	O
"FATAL ERROR :: [edma_met3] %ld recursion level achieved. "	pointer
"Probably, there is a cycle in your class diagram.\n"	pointer
"            Method %s on object %ld <%s> not executed\n"	pointer
"**** ABORTING execution"	pointer
,	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
,	O
Id1	pointer
,	O
IdObj	long
,	O
gClass	O
[	O
gObj	O
[	O
IdObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
edma_printf	function
(	O
"==== DEBUG: Max Recursion Level Object List ====="	pointer
"===================="	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nMaxObj	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
gObj	O
[	O
i	long
]	O
!=	O
NULL	O
)	O
if	O
(	O
gObj	O
[	O
i	long
]	O
->	O
rlevel	long
>	O
MAX_RECURSION	int
-	O
MAX_RECURSION	int
*	O
0.1	int
)	O
edma_printf	function
(	O
"--> Object %05ld [%05ld] <%-30s> Recursion: %05ld. "	pointer
"Last Method: '%s'"	pointer
,	O
i	long
,	O
gObj	O
[	O
i	long
]	O
->	O
IdClass	long
,	O
gClass	O
[	O
gObj	O
[	O
i	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
,	O
gObj	O
[	O
i	long
]	O
->	O
rlevel	long
,	O
pClass	pointer
[	O
gObj	O
[	O
i	long
]	O
->	O
IdClass	long
]	O
->	O
Met	pointer
[	O
gObj	O
[	O
i	long
]	O
->	O
last_met	long
]	O
.	O
IdMet	array
)	O
;	O
}	O
edma_printf	function
(	O
"======================================================"	pointer
"========\n"	pointer
)	O
;	O
EDMAEnd	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ret_val	long
=	O
edma_met3_pargs	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
sig_ext	array
,	O
1	int
,	O
p	pointer
)	O
;	O
va_end	O
(	O
p	pointer
)	O
;	O
if	O
(	O
gObj	O
[	O
IdObj	long
]	O
)	O
gObj	O
[	O
IdObj	long
]	O
->	O
rlevel	long
--	O
;	O
_edma_check_suicide	function
(	O
IdObj	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_wprop3	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
...	O
)	O
{	O
va_list	pointer
p	pointer
;	O
ESint32	long
ret_val	long
;	O
if	O
(	O
Id1	pointer
==	O
NULL	O
)	O
{	O
edma_printf_err	function
(	O
"%s"	pointer
,	O
"[edma_wprop3] Invalid Property Name (NULL)"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
va_start	O
(	O
p	pointer
,	O
Id1	pointer
)	O
;	O
ret_val	long
=	O
edma_wprop3_pargs	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
p	pointer
)	O
;	O
va_end	O
(	O
p	pointer
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_rprop3	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
...	O
)	O
{	O
va_list	pointer
p	pointer
;	O
ESint32	long
r	long
;	O
if	O
(	O
Id1	pointer
==	O
NULL	O
)	O
{	O
edma_printf_err	function
(	O
"%s"	pointer
,	O
"[edma_wprop3] Invalid Property Name (NULL)"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
va_start	O
(	O
p	pointer
,	O
Id1	pointer
)	O
;	O
r	long
=	O
edma_rprop3_pargs	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
p	pointer
)	O
;	O
va_end	O
(	O
p	pointer
)	O
;	O
return	O
r	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_sint32	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
ESint32	long
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_uint32	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EUint32	long
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_sint16	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
ESint16	short
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_uint16	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EUint16	short
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_sint8	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
ESint8	char
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_uint8	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EUint8	char
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_strz	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EPChar	pointer
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_set_prop_obj	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
OBJID	long
val	long
)	O
{	O
ESint32	long
ret_val	long
;	O
ret_val	long
=	O
edma_wprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
ret_val	long
;	O
}	O
ESint32	long
EDMAPROC	O
edma_get_prop_sint32	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
ESint32	long
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
EUint32	long
EDMAPROC	O
edma_get_prop_uint32	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
EUint32	long
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
ESint16	short
EDMAPROC	O
edma_get_prop_sint16	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
ESint16	short
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
EUint16	short
EDMAPROC	O
edma_get_prop_uint16	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
EUint16	short
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
ESint8	char
EDMAPROC	O
edma_get_prop_sint8	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
ESint8	char
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
EUint8	char
EDMAPROC	O
edma_get_prop_uint8	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
EUint8	char
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
EPChar	pointer
EDMAPROC	O
edma_get_prop_strz	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EPChar	pointer
val	long
)	O
{	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
EDMAT_BUFFER	struct
*	O
EDMAPROC	O
edma_get_prop_buffer	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EDMAT_BUFFER	struct
*	O
buf	pointer
)	O
{	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
buf	pointer
)	O
;	O
return	O
buf	pointer
;	O
}	O
OBJID	long
EDMAPROC	O
edma_get_prop_obj	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
)	O
{	O
OBJID	long
val	long
;	O
edma_rprop3	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
val	long
)	O
;	O
return	O
val	long
;	O
}	O
