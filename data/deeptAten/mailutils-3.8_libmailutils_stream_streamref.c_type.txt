static	O
int	O
_streamref_read	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
bufsize	long
,	O
size_t	long
*	O
pnread	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
int	O
rc	int
;	O
size_t	long
nread	long
;	O
mu_off_t	long
off	long
;	O
rc	int
=	O
mu_stream_seek	function
(	O
sp	pointer
->	O
transport	pointer
,	O
sp	pointer
->	O
offset	long
,	O
MU_SEEK_SET	int
,	O
&	O
off	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
sp	pointer
->	O
end	long
)	O
{	O
size_t	long
size	long
=	O
sp	pointer
->	O
end	long
-	O
off	long
+	O
1	int
;	O
if	O
(	O
size	long
<	O
bufsize	long
)	O
bufsize	long
=	O
size	long
;	O
}	O
rc	int
=	O
mu_stream_read	function
(	O
sp	pointer
->	O
transport	pointer
,	O
buf	pointer
,	O
bufsize	long
,	O
&	O
nread	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
sp	pointer
->	O
offset	long
+=	O
nread	long
;	O
*	O
pnread	pointer
=	O
nread	long
;	O
}	O
}	O
else	O
if	O
(	O
rc	int
==	O
ESPIPE	int
)	O
{	O
*	O
pnread	pointer
=	O
0	int
;	O
mu_stream_clearerr	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
return	O
0	int
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_streamref_readdelim	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
bufsize	long
,	O
int	O
delim	int
,	O
size_t	long
*	O
pnread	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
int	O
rc	int
;	O
size_t	long
nread	long
;	O
mu_off_t	long
off	long
;	O
rc	int
=	O
mu_stream_seek	function
(	O
sp	pointer
->	O
transport	pointer
,	O
sp	pointer
->	O
offset	long
,	O
MU_SEEK_SET	int
,	O
&	O
off	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
mu_stream_readdelim	function
(	O
sp	pointer
->	O
transport	pointer
,	O
buf	pointer
,	O
bufsize	long
,	O
delim	int
,	O
&	O
nread	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
sp	pointer
->	O
end	long
)	O
{	O
size_t	long
size	long
=	O
sp	pointer
->	O
end	long
-	O
off	long
+	O
1	int
;	O
if	O
(	O
nread	long
>	O
size	long
)	O
nread	long
=	O
size	long
;	O
}	O
sp	pointer
->	O
offset	long
+=	O
nread	long
;	O
*	O
pnread	pointer
=	O
nread	long
;	O
}	O
}	O
else	O
if	O
(	O
rc	int
==	O
ESPIPE	int
)	O
{	O
*	O
pnread	pointer
=	O
0	int
;	O
mu_stream_clearerr	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
return	O
0	int
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_streamref_write	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
bufsize	long
,	O
size_t	long
*	O
pnwrite	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
int	O
rc	int
;	O
size_t	long
nwrite	long
;	O
rc	int
=	O
mu_stream_seek	function
(	O
sp	pointer
->	O
transport	pointer
,	O
sp	pointer
->	O
offset	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
mu_stream_write	function
(	O
sp	pointer
->	O
transport	pointer
,	O
buf	pointer
,	O
bufsize	long
,	O
&	O
nwrite	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
sp	pointer
->	O
offset	long
+=	O
nwrite	long
;	O
*	O
pnwrite	pointer
=	O
nwrite	long
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_streamref_flush	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_flush	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_streamref_open	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_open	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_streamref_close	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_close	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
void	O
_streamref_done	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
mu_stream_unref	function
(	O
sp	pointer
->	O
transport	pointer
)	O
;	O
}	O
static	O
int	O
_streamref_seek	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
mu_off_t	long
off	long
,	O
mu_off_t	long
*	O
ppos	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
mu_off_t	long
size	long
;	O
int	O
rc	int
;	O
if	O
(	O
sp	pointer
->	O
end	long
)	O
size	long
=	O
sp	pointer
->	O
end	long
-	O
sp	pointer
->	O
start	long
+	O
1	int
;	O
else	O
{	O
rc	int
=	O
mu_stream_size	function
(	O
sp	pointer
->	O
transport	pointer
,	O
&	O
size	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
size	long
-=	O
sp	pointer
->	O
start	long
;	O
}	O
if	O
(	O
off	long
<	O
0	int
||	O
off	long
>	O
size	long
)	O
return	O
sp	pointer
->	O
stream	pointer
.	O
last_err	int
=	O
ESPIPE	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
sp	pointer
->	O
transport	pointer
,	O
sp	pointer
->	O
start	long
+	O
off	long
,	O
MU_SEEK_SET	int
,	O
&	O
sp	pointer
->	O
offset	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
ppos	pointer
=	O
sp	pointer
->	O
offset	long
-	O
sp	pointer
->	O
start	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_streamref_size	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
mu_off_t	long
*	O
psize	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
mu_off_t	long
size	long
;	O
int	O
rc	int
=	O
0	int
;	O
if	O
(	O
sp	pointer
->	O
end	long
)	O
size	long
=	O
sp	pointer
->	O
end	long
-	O
sp	pointer
->	O
start	long
+	O
1	int
;	O
else	O
{	O
rc	int
=	O
mu_stream_size	function
(	O
sp	pointer
->	O
transport	pointer
,	O
&	O
size	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
size	long
-=	O
sp	pointer
->	O
start	long
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
psize	pointer
=	O
size	long
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_streamref_ctl	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
int	O
code	int
,	O
int	O
opcode	int
,	O
void	O
*	O
arg	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
MU_IOCTL_SEEK_LIMITS	int
:	O
if	O
(	O
!	O
arg	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
mu_off_t	long
*	O
lim	pointer
=	O
arg	pointer
;	O
switch	O
(	O
opcode	int
)	O
{	O
case	O
MU_IOCTL_OP_GET	int
:	O
lim	pointer
[	O
0	int
]	O
=	O
sp	pointer
->	O
start	long
;	O
lim	pointer
[	O
1	int
]	O
=	O
sp	pointer
->	O
end	long
;	O
return	O
0	int
;	O
case	O
MU_IOCTL_OP_SET	int
:	O
sp	pointer
->	O
start	long
=	O
lim	pointer
[	O
0	int
]	O
;	O
sp	pointer
->	O
end	long
=	O
lim	pointer
[	O
1	int
]	O
;	O
return	O
0	int
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
}	O
}	O
return	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
transport	pointer
,	O
code	int
,	O
opcode	int
,	O
arg	pointer
)	O
;	O
}	O
static	O
int	O
_streamref_wait	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
int	O
*	O
pflags	pointer
,	O
struct	O
timeval	struct
*	O
tvp	pointer
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_wait	function
(	O
sp	pointer
->	O
transport	pointer
,	O
pflags	pointer
,	O
tvp	pointer
)	O
;	O
}	O
static	O
int	O
_streamref_truncate	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
mu_off_t	long
size	long
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_truncate	function
(	O
sp	pointer
->	O
transport	pointer
,	O
size	long
)	O
;	O
}	O
static	O
int	O
_streamref_shutdown	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
int	O
how	int
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
return	O
mu_stream_shutdown	function
(	O
sp	pointer
->	O
transport	pointer
,	O
how	int
)	O
;	O
}	O
static	O
const	O
char	O
*	O
_streamref_error_string	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
int	O
rc	int
)	O
{	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
str	pointer
;	O
const	O
char	O
*	O
p	pointer
=	O
mu_stream_strerror	function
(	O
sp	pointer
->	O
transport	pointer
,	O
rc	int
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
p	pointer
=	O
mu_strerror	function
(	O
rc	int
)	O
;	O
return	O
p	pointer
;	O
}	O
int	O
mu_streamref_create_abridged	function
(	O
mu_stream_t	pointer
*	O
pref	pointer
,	O
mu_stream_t	pointer
str	pointer
,	O
mu_off_t	long
start	long
,	O
mu_off_t	long
end	long
)	O
{	O
int	O
rc	int
;	O
mu_off_t	long
off	long
;	O
int	O
flags	int
;	O
struct	O
_mu_streamref	struct
*	O
sp	pointer
;	O
rc	int
=	O
mu_stream_seek	function
(	O
str	pointer
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
&	O
off	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_get_flags	function
(	O
str	pointer
,	O
&	O
flags	int
)	O
;	O
sp	pointer
=	O
(	O
struct	O
_mu_streamref	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
sp	pointer
)	O
,	O
flags	int
|	O
_MU_STR_OPEN	int
)	O
;	O
if	O
(	O
!	O
sp	pointer
)	O
return	O
ENOMEM	int
;	O
mu_stream_ref	function
(	O
str	pointer
)	O
;	O
sp	pointer
->	O
stream	pointer
.	O
read	pointer
=	O
_streamref_read	function
;	O
if	O
(	O
str	pointer
->	O
readdelim	pointer
)	O
sp	pointer
->	O
stream	pointer
.	O
readdelim	pointer
=	O
_streamref_readdelim	function
;	O
sp	pointer
->	O
stream	pointer
.	O
write	pointer
=	O
_streamref_write	function
;	O
sp	pointer
->	O
stream	pointer
.	O
flush	pointer
=	O
_streamref_flush	function
;	O
sp	pointer
->	O
stream	pointer
.	O
open	pointer
=	O
_streamref_open	function
;	O
sp	pointer
->	O
stream	pointer
.	O
close	pointer
=	O
_streamref_close	function
;	O
sp	pointer
->	O
stream	pointer
.	O
done	pointer
=	O
_streamref_done	function
;	O
sp	pointer
->	O
stream	pointer
.	O
seek	pointer
=	O
_streamref_seek	function
;	O
sp	pointer
->	O
stream	pointer
.	O
size	long
=	O
_streamref_size	function
;	O
sp	pointer
->	O
stream	pointer
.	O
ctl	pointer
=	O
_streamref_ctl	function
;	O
sp	pointer
->	O
stream	pointer
.	O
wait	pointer
=	O
_streamref_wait	function
;	O
sp	pointer
->	O
stream	pointer
.	O
truncate	pointer
=	O
_streamref_truncate	function
;	O
sp	pointer
->	O
stream	pointer
.	O
shutdown	pointer
=	O
_streamref_shutdown	function
;	O
sp	pointer
->	O
stream	pointer
.	O
error_string	pointer
=	O
_streamref_error_string	function
;	O
sp	pointer
->	O
transport	pointer
=	O
str	pointer
;	O
sp	pointer
->	O
start	long
=	O
start	long
;	O
sp	pointer
->	O
end	long
=	O
end	long
;	O
if	O
(	O
off	long
<	O
start	long
||	O
off	long
>	O
end	long
)	O
off	long
=	O
start	long
;	O
sp	pointer
->	O
offset	long
=	O
off	long
;	O
*	O
pref	pointer
=	O
(	O
mu_stream_t	pointer
)	O
sp	pointer
;	O
mu_stream_set_buffer	function
(	O
*	O
pref	pointer
,	O
mu_buffer_full	int
,	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_streamref_create	function
(	O
mu_stream_t	pointer
*	O
pref	pointer
,	O
mu_stream_t	pointer
str	pointer
)	O
{	O
return	O
mu_streamref_create_abridged	function
(	O
pref	pointer
,	O
str	pointer
,	O
0	int
,	O
0	int
)	O
;	O
}	O
