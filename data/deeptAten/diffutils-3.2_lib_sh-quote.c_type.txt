static	O
struct	O
quoting_options	O
*	O
sh_quoting_options	pointer
;	O
static	O
void	O
init_sh_quoting_options	function
(	O
void	O
)	O
{	O
sh_quoting_options	pointer
=	O
clone_quoting_options	function
(	O
NULL	O
)	O
;	O
set_quoting_style	function
(	O
sh_quoting_options	pointer
,	O
shell_quoting_style	int
)	O
;	O
}	O
size_t	long
shell_quote_length	function
(	O
const	O
char	O
*	O
string	pointer
)	O
{	O
if	O
(	O
sh_quoting_options	pointer
==	O
NULL	O
)	O
init_sh_quoting_options	function
(	O
)	O
;	O
return	O
quotearg_buffer	function
(	O
NULL	O
,	O
0	int
,	O
string	pointer
,	O
strlen	function
(	O
string	pointer
)	O
,	O
sh_quoting_options	pointer
)	O
;	O
}	O
char	O
*	O
shell_quote_copy	function
(	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
string	pointer
)	O
{	O
if	O
(	O
sh_quoting_options	pointer
==	O
NULL	O
)	O
init_sh_quoting_options	function
(	O
)	O
;	O
return	O
p	pointer
+	O
quotearg_buffer	function
(	O
p	pointer
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
string	pointer
,	O
strlen	function
(	O
string	pointer
)	O
,	O
sh_quoting_options	pointer
)	O
;	O
}	O
char	O
*	O
shell_quote	function
(	O
const	O
char	O
*	O
string	pointer
)	O
{	O
if	O
(	O
sh_quoting_options	pointer
==	O
NULL	O
)	O
init_sh_quoting_options	function
(	O
)	O
;	O
return	O
quotearg_alloc	function
(	O
string	pointer
,	O
strlen	function
(	O
string	pointer
)	O
,	O
sh_quoting_options	pointer
)	O
;	O
}	O
char	O
*	O
shell_quote_argv	function
(	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
if	O
(	O
*	O
argv	pointer
!=	O
NULL	O
)	O
{	O
char	O
*	O
*	O
argp	pointer
;	O
size_t	long
length	long
;	O
char	O
*	O
command	pointer
;	O
char	O
*	O
p	pointer
;	O
length	long
=	O
0	int
;	O
for	O
(	O
argp	pointer
=	O
argv	pointer
;	O
;	O
)	O
{	O
length	long
+=	O
shell_quote_length	function
(	O
*	O
argp	pointer
)	O
+	O
1	int
;	O
argp	pointer
++	O
;	O
if	O
(	O
*	O
argp	pointer
==	O
NULL	O
)	O
break	O
;	O
}	O
command	pointer
=	O
XNMALLOC	O
(	O
length	long
,	O
char	O
)	O
;	O
p	pointer
=	O
command	pointer
;	O
for	O
(	O
argp	pointer
=	O
argv	pointer
;	O
;	O
)	O
{	O
p	pointer
=	O
shell_quote_copy	function
(	O
p	pointer
,	O
*	O
argp	pointer
)	O
;	O
argp	pointer
++	O
;	O
if	O
(	O
*	O
argp	pointer
==	O
NULL	O
)	O
break	O
;	O
*	O
p	pointer
++	O
=	O
' '	O
;	O
}	O
*	O
p	pointer
=	O
'\0'	O
;	O
return	O
command	pointer
;	O
}	O
else	O
return	O
xstrdup	function
(	O
""	pointer
)	O
;	O
}	O
