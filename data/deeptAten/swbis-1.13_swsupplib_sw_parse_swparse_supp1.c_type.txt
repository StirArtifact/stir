int	O
swlib_is_ansi_escape	function
(	O
char	O
c	int
)	O
;	O
static	O
char	O
*	O
de_quote_it	function
(	O
char	O
*	O
src	pointer
)	O
;	O
int	O
swparse_expand_n	function
(	O
void	O
*	O
*	O
pa	pointer
,	O
int	O
*	O
newlen	pointer
,	O
char	O
*	O
src	pointer
)	O
{	O
int	O
n	long
;	O
int	O
i	int
=	O
0	int
,	O
j	int
=	O
0	int
;	O
char	O
*	O
lp	pointer
;	O
STROB	struct
*	O
store	pointer
;	O
store	pointer
=	O
strob_open	function
(	O
2	int
)	O
;	O
strob_strcpy	function
(	O
store	pointer
,	O
""	pointer
)	O
;	O
src	pointer
=	O
de_quote_it	function
(	O
src	pointer
)	O
;	O
lp	pointer
=	O
src	pointer
;	O
n	long
=	O
strlen	function
(	O
lp	pointer
)	O
;	O
strob_set_memlength	function
(	O
store	pointer
,	O
n	long
+	O
1	int
)	O
;	O
while	O
(	O
i	int
<	O
n	long
)	O
{	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
==	O
'\n'	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\\'	O
)	O
;	O
j	int
++	O
;	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'n'	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
==	O
'\\'	O
)	O
{	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
+	O
1	int
)	O
==	O
'\\'	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
)	O
;	O
i	int
++	O
;	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
+	O
1	int
)	O
==	O
'n'	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
)	O
;	O
i	int
++	O
;	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
-	O
1	int
)	O
)	O
;	O
j	int
++	O
;	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
+	O
1	int
)	O
==	O
'#'	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'#'	O
)	O
;	O
i	int
++	O
;	O
j	int
--	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
+	O
1	int
)	O
==	O
'\"'	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\"'	O
)	O
;	O
i	int
++	O
;	O
j	int
--	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
lp	pointer
+	O
i	int
+	O
1	int
)	O
==	O
'\0'	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\\'	O
)	O
;	O
j	int
++	O
;	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\\'	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
swlib_is_ansi_escape	function
(	O
*	O
(	O
lp	pointer
+	O
i	int
+	O
1	int
)	O
)	O
)	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\\'	O
)	O
;	O
j	int
++	O
;	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\\'	O
)	O
;	O
}	O
else	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
)	O
;	O
}	O
}	O
else	O
{	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
*	O
(	O
lp	pointer
+	O
i	int
)	O
)	O
;	O
}	O
i	int
++	O
;	O
}	O
strob_chr_index	function
(	O
store	pointer
,	O
i	int
+	O
j	int
,	O
'\0'	O
)	O
;	O
*	O
pa	pointer
=	O
strob_release	function
(	O
store	pointer
)	O
;	O
*	O
newlen	pointer
=	O
i	int
+	O
j	int
;	O
return	O
0	int
;	O
}	O
static	O
char	O
*	O
de_quote_it	function
(	O
char	O
*	O
src	pointer
)	O
{	O
if	O
(	O
*	O
src	pointer
!=	O
'\"'	O
)	O
return	O
src	pointer
;	O
src	pointer
++	O
;	O
if	O
(	O
!	O
strlen	function
(	O
src	pointer
)	O
)	O
{	O
return	O
--	O
src	pointer
;	O
}	O
*	O
(	O
src	pointer
+	O
strlen	function
(	O
src	pointer
)	O
-	O
1	int
)	O
=	O
'\0'	O
;	O
return	O
src	pointer
;	O
}	O
