PLIST	pointer
InitList	function
(	O
void	O
)	O
{	O
PLIST	pointer
plist	pointer
=	O
(	O
PLIST	pointer
)	O
malloc	function
(	O
sizeof	O
(	O
LIST	struct
)	O
)	O
;	O
if	O
(	O
plist	pointer
)	O
{	O
plist	pointer
->	O
pleHead	pointer
=	O
NULL	O
;	O
plist	pointer
->	O
pleTail	pointer
=	O
NULL	O
;	O
plist	pointer
->	O
iSize	int
=	O
0	int
;	O
}	O
else	O
ReportError	function
(	O
NULL	O
,	O
RE_OUTOFMEM	int
|	O
RE_FATAL	int
,	O
"InitList"	pointer
,	O
NULL	O
)	O
;	O
return	O
(	O
plist	pointer
)	O
;	O
}	O
void	O
FreeList	function
(	O
PLIST	pointer
*	O
pplist	pointer
,	O
PFV_FREELISTCALLBACK	pointer
pfvFreeData	pointer
,	O
BOOL	int
bAndData	int
)	O
{	O
PLIST	pointer
plist	pointer
=	O
*	O
pplist	pointer
;	O
if	O
(	O
!	O
plist	pointer
)	O
return	O
;	O
while	O
(	O
plist	pointer
->	O
pleHead	pointer
)	O
{	O
if	O
(	O
pfvFreeData	pointer
)	O
(	O
*	O
pfvFreeData	pointer
)	O
(	O
plist	pointer
->	O
pleHead	pointer
->	O
pData	pointer
)	O
;	O
else	O
if	O
(	O
bAndData	int
&&	O
plist	pointer
->	O
pleHead	pointer
->	O
pData	pointer
)	O
free	function
(	O
plist	pointer
->	O
pleHead	pointer
->	O
pData	pointer
)	O
;	O
plist	pointer
->	O
pleTail	pointer
=	O
plist	pointer
->	O
pleHead	pointer
;	O
plist	pointer
->	O
pleHead	pointer
=	O
plist	pointer
->	O
pleHead	pointer
->	O
pleNext	pointer
;	O
free	function
(	O
plist	pointer
->	O
pleTail	pointer
)	O
;	O
}	O
free	function
(	O
plist	pointer
)	O
;	O
*	O
pplist	pointer
=	O
NULL	O
;	O
}	O
void	O
QueueListItem	function
(	O
PLIST	pointer
plist	pointer
,	O
PVOID	pointer
pData	pointer
)	O
{	O
PLISTELEM	pointer
pNewElem	pointer
;	O
if	O
(	O
!	O
plist	pointer
)	O
return	O
;	O
if	O
(	O
!	O
(	O
pNewElem	pointer
=	O
(	O
PLISTELEM	pointer
)	O
malloc	function
(	O
sizeof	O
(	O
LISTELEM	struct
)	O
)	O
)	O
)	O
ReportError	function
(	O
NULL	O
,	O
RE_OUTOFMEM	int
|	O
RE_FATAL	int
,	O
"QueueListItem"	pointer
,	O
NULL	O
)	O
;	O
pNewElem	pointer
->	O
pData	pointer
=	O
pData	pointer
;	O
pNewElem	pointer
->	O
pleNext	pointer
=	O
NULL	O
;	O
if	O
(	O
plist	pointer
->	O
pleTail	pointer
)	O
plist	pointer
->	O
pleTail	pointer
->	O
pleNext	pointer
=	O
pNewElem	pointer
;	O
else	O
plist	pointer
->	O
pleHead	pointer
=	O
pNewElem	pointer
;	O
plist	pointer
->	O
pleTail	pointer
=	O
pNewElem	pointer
;	O
plist	pointer
->	O
iSize	int
++	O
;	O
}	O
int	O
ForAllList	function
(	O
PLIST	pointer
plist	pointer
,	O
PFI_FORLISTCALLBACK	pointer
pfiCallback	pointer
,	O
PVOID	pointer
pUserInfo	pointer
)	O
{	O
int	O
iTotal	int
=	O
0	int
;	O
PLISTELEM	pointer
ple	pointer
;	O
if	O
(	O
!	O
plist	pointer
||	O
!	O
pfiCallback	pointer
)	O
return	O
0	int
;	O
ple	pointer
=	O
plist	pointer
->	O
pleHead	pointer
;	O
while	O
(	O
ple	pointer
)	O
{	O
iTotal	int
+=	O
(	O
*	O
pfiCallback	pointer
)	O
(	O
ple	pointer
->	O
pData	pointer
,	O
pUserInfo	pointer
)	O
;	O
ple	pointer
=	O
ple	pointer
->	O
pleNext	pointer
;	O
}	O
return	O
(	O
iTotal	int
)	O
;	O
}	O
void	O
ForAllList3	function
(	O
PLIST	pointer
plist	pointer
,	O
PFI_FORLISTCALLBACK3	pointer
pfiCallback	pointer
,	O
PVOID	pointer
pUserInfo1	pointer
,	O
PVOID	pointer
pUserInfo2	pointer
,	O
PVOID	pointer
pUserInfo3	pointer
)	O
{	O
PLISTELEM	pointer
ple	pointer
;	O
if	O
(	O
!	O
plist	pointer
||	O
!	O
pfiCallback	pointer
)	O
return	O
;	O
ple	pointer
=	O
plist	pointer
->	O
pleHead	pointer
;	O
while	O
(	O
ple	pointer
)	O
{	O
(	O
*	O
pfiCallback	pointer
)	O
(	O
ple	pointer
->	O
pData	pointer
,	O
pUserInfo1	pointer
,	O
pUserInfo2	pointer
,	O
pUserInfo3	pointer
)	O
;	O
ple	pointer
=	O
ple	pointer
->	O
pleNext	pointer
;	O
}	O
}	O
