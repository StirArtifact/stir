static	O
char	O
*	O
get_value	function
(	O
char	O
*	O
output_line	pointer
,	O
int	O
*	O
value_len	pointer
,	O
int	O
do_terminate	int
)	O
{	O
char	O
*	O
ret	pointer
;	O
int	O
len	int
;	O
if	O
(	O
!	O
output_line	pointer
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
if	O
(	O
!	O
(	O
ret	pointer
=	O
swheaderline_get_keyword	function
(	O
output_line	pointer
)	O
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
swheaderline_get_type	function
(	O
output_line	pointer
)	O
==	O
SWPARSE_MD_TYPE_OBJ	char
)	O
{	O
if	O
(	O
value_len	pointer
)	O
*	O
value_len	pointer
=	O
0	int
;	O
return	O
ret	pointer
+	O
strlen	function
(	O
ret	pointer
)	O
;	O
}	O
len	int
=	O
swheaderline_get_value_length	function
(	O
output_line	pointer
)	O
;	O
if	O
(	O
value_len	pointer
)	O
*	O
value_len	pointer
=	O
len	int
;	O
if	O
(	O
do_terminate	int
)	O
*	O
(	O
ret	pointer
+	O
strlen	function
(	O
ret	pointer
)	O
+	O
1	int
+	O
len	int
)	O
=	O
'\0'	O
;	O
return	O
ret	pointer
+	O
strlen	function
(	O
ret	pointer
)	O
+	O
1	int
;	O
}	O
char	O
*	O
swheaderline_get_type_pointer	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
char	O
*	O
ret	pointer
;	O
if	O
(	O
isdigit	function
(	O
(	O
int	O
)	O
(	O
*	O
output_line	pointer
)	O
)	O
)	O
{	O
if	O
(	O
*	O
(	O
output_line	pointer
+	O
SWPARSE_MKUP_LEN_WIDTH	int
)	O
==	O
' '	O
)	O
{	O
ret	pointer
=	O
output_line	pointer
+	O
SWPARSE_MKUP_LEN_WIDTH	int
+	O
1	int
;	O
}	O
else	O
{	O
char	O
*	O
t	pointer
;	O
t	pointer
=	O
output_line	pointer
;	O
while	O
(	O
isdigit	function
(	O
(	O
int	O
)	O
(	O
*	O
t	pointer
)	O
)	O
)	O
{	O
t	pointer
++	O
;	O
}	O
if	O
(	O
*	O
t	pointer
==	O
'\0'	O
||	O
*	O
t	pointer
!=	O
' '	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"internal error in swheaderline_get_type_pointer\n"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
t	pointer
++	O
;	O
if	O
(	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_ATT	char
||	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_OBJ	char
||	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_EXT	char
||	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_FILEREF	char
||	O
0	int
)	O
{	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"internal error in swheaderline_get_keyword loc=2\n"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
ret	pointer
=	O
t	pointer
;	O
}	O
return	O
ret	pointer
;	O
}	O
else	O
{	O
return	O
output_line	pointer
;	O
}	O
}	O
int	O
swheaderline_write_to_buffer	function
(	O
STROB	struct
*	O
buf	pointer
,	O
char	O
*	O
line	pointer
)	O
{	O
char	O
*	O
keyword	pointer
;	O
char	O
*	O
value	int
;	O
int	O
type	enum
;	O
int	O
level	int
;	O
if	O
(	O
!	O
line	pointer
)	O
return	O
-	O
1	int
;	O
keyword	pointer
=	O
swheaderline_get_keyword	function
(	O
line	pointer
)	O
;	O
value	int
=	O
swheaderline_get_value	function
(	O
line	pointer
,	O
NULL	O
)	O
;	O
type	enum
=	O
(	O
int	O
)	O
swheaderline_get_type	function
(	O
line	pointer
)	O
;	O
level	int
=	O
swheaderline_get_level	function
(	O
line	pointer
)	O
;	O
if	O
(	O
keyword	pointer
&&	O
strlen	function
(	O
keyword	pointer
)	O
)	O
return	O
swdef_write_attribute_to_buffer	function
(	O
buf	pointer
,	O
keyword	pointer
,	O
value	int
,	O
level	int
,	O
(	O
int	O
)	O
type	enum
)	O
;	O
else	O
return	O
0	int
;	O
}	O
int	O
swheaderline_write	function
(	O
char	O
*	O
line	pointer
,	O
int	O
uxfio_fd	int
)	O
{	O
int	O
len	int
;	O
char	O
*	O
keyword	pointer
=	O
swheaderline_get_keyword	function
(	O
line	pointer
)	O
;	O
char	O
*	O
value	int
=	O
swheaderline_get_value	function
(	O
line	pointer
,	O
&	O
len	int
)	O
;	O
int	O
type	enum
=	O
(	O
int	O
)	O
swheaderline_get_type	function
(	O
line	pointer
)	O
;	O
int	O
level	int
=	O
swheaderline_get_level	function
(	O
line	pointer
)	O
;	O
len	int
=	O
-	O
1	int
;	O
if	O
(	O
keyword	pointer
)	O
return	O
swdef_write_attribute	function
(	O
keyword	pointer
,	O
value	int
,	O
level	int
,	O
len	int
,	O
(	O
int	O
)	O
type	enum
,	O
uxfio_fd	int
)	O
;	O
else	O
return	O
0	int
;	O
}	O
int	O
swheaderline_get_level	function
(	O
char	O
*	O
outputline	pointer
)	O
{	O
char	O
*	O
typep	pointer
;	O
typep	pointer
=	O
swheaderline_get_type_pointer	function
(	O
outputline	pointer
)	O
;	O
if	O
(	O
!	O
typep	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"internal error in swheaderline_get_level\n"	pointer
)	O
;	O
exit	function
(	O
2	int
)	O
;	O
}	O
typep	pointer
+=	O
2	int
;	O
return	O
(	O
int	O
)	O
(	O
(	O
*	O
typep	pointer
)	O
-	O
0x30	int
)	O
;	O
}	O
char	O
swheaderline_get_type	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
char	O
*	O
p	pointer
=	O
swheaderline_get_type_pointer	function
(	O
output_line	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
return	O
*	O
p	pointer
;	O
else	O
return	O
(	O
char	O
)	O
(	O
0	int
)	O
;	O
}	O
char	O
*	O
swheaderline_get_keyword	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
char	O
*	O
t	pointer
;	O
char	O
*	O
ret	pointer
;	O
if	O
(	O
!	O
output_line	pointer
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
if	O
(	O
isdigit	function
(	O
(	O
int	O
)	O
(	O
*	O
output_line	pointer
)	O
)	O
)	O
{	O
t	pointer
=	O
output_line	pointer
+	O
SWPARSE_MKUP_LEN_WIDTH	int
+	O
1	int
;	O
}	O
else	O
{	O
t	pointer
=	O
output_line	pointer
;	O
}	O
if	O
(	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_ATT	char
||	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_OBJ	char
||	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_EXT	char
||	O
t	pointer
[	O
0	int
]	O
==	O
SWPARSE_MD_TYPE_FILEREF	char
||	O
0	int
)	O
{	O
;	O
}	O
else	O
{	O
t	pointer
=	O
swheaderline_get_type_pointer	function
(	O
output_line	pointer
)	O
;	O
if	O
(	O
t	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
}	O
t	pointer
+=	O
3	int
;	O
while	O
(	O
*	O
t	pointer
&&	O
isspace	function
(	O
(	O
int	O
)	O
(	O
*	O
t	pointer
)	O
)	O
)	O
t	pointer
++	O
;	O
ret	pointer
=	O
t	pointer
;	O
while	O
(	O
*	O
t	pointer
&&	O
!	O
isspace	function
(	O
(	O
int	O
)	O
(	O
*	O
t	pointer
)	O
)	O
)	O
t	pointer
++	O
;	O
*	O
t	pointer
=	O
'\0'	O
;	O
return	O
ret	pointer
;	O
}	O
int	O
swheaderline_get_value_length	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
int	O
i	int
;	O
char	O
*	O
t	pointer
,	O
*	O
p	pointer
;	O
int	O
n	long
;	O
int	O
mytens	array
[	O
6	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
10	int
,	O
100	int
,	O
1000	int
,	O
10000	int
}	O
;	O
if	O
(	O
!	O
isdigit	function
(	O
(	O
int	O
)	O
(	O
*	O
output_line	pointer
)	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"bad parser output, value length not found\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
n	long
=	O
0	int
;	O
t	pointer
=	O
output_line	pointer
;	O
p	pointer
=	O
output_line	pointer
;	O
while	O
(	O
*	O
t	pointer
&&	O
!	O
isspace	function
(	O
(	O
int	O
)	O
(	O
*	O
t	pointer
)	O
)	O
)	O
t	pointer
++	O
;	O
for	O
(	O
i	int
=	O
(	O
int	O
)	O
(	O
t	pointer
-	O
output_line	pointer
)	O
;	O
i	int
>	O
0	int
;	O
i	int
--	O
)	O
{	O
if	O
(	O
!	O
isdigit	function
(	O
*	O
p	pointer
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"internal error in swheaderline_get_value_length [%s]\n"	pointer
,	O
output_line	pointer
)	O
;	O
}	O
n	long
+=	O
(	O
(	O
int	O
)	O
(	O
(	O
int	O
)	O
(	O
*	O
p	pointer
)	O
-	O
48	int
)	O
)	O
*	O
mytens	array
[	O
i	int
]	O
;	O
p	pointer
++	O
;	O
}	O
return	O
n	long
;	O
}	O
char	O
*	O
swheaderline_strdup	function
(	O
char	O
*	O
outputline	pointer
)	O
{	O
int	O
value_length	int
=	O
0	int
;	O
char	O
*	O
value	int
=	O
swheaderline_get_value	function
(	O
outputline	pointer
,	O
&	O
value_length	int
)	O
;	O
int	O
len	int
=	O
(	O
int	O
)	O
(	O
value	int
-	O
outputline	pointer
)	O
+	O
value_length	int
+	O
1	int
;	O
char	O
*	O
dup	function
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
len	int
+	O
1	int
)	O
;	O
*	O
(	O
dup	function
+	O
len	int
)	O
=	O
'\0'	O
;	O
memcpy	function
(	O
dup	function
,	O
outputline	pointer
,	O
len	int
+	O
1	int
)	O
;	O
return	O
dup	function
;	O
}	O
char	O
*	O
swheaderline_get_value_pointer	function
(	O
char	O
*	O
output_line	pointer
,	O
int	O
*	O
value_len	pointer
)	O
{	O
return	O
get_value	function
(	O
output_line	pointer
,	O
value_len	pointer
,	O
0	int
)	O
;	O
}	O
char	O
*	O
swheaderline_get_value	function
(	O
char	O
*	O
output_line	pointer
,	O
int	O
*	O
value_len	pointer
)	O
{	O
return	O
get_value	function
(	O
output_line	pointer
,	O
value_len	pointer
,	O
1	int
)	O
;	O
}	O
void	O
swheaderline_set_flag1	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
*	O
(	O
output_line	pointer
+	O
1	int
)	O
=	O
'0'	O
;	O
}	O
void	O
swheaderline_clear_flag1	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
*	O
(	O
output_line	pointer
+	O
1	int
)	O
=	O
' '	O
;	O
}	O
int	O
swheaderline_get_flag1	function
(	O
char	O
*	O
output_line	pointer
)	O
{	O
return	O
*	O
(	O
output_line	pointer
+	O
1	int
)	O
==	O
' '	O
?	O
0	int
:	O
1	int
;	O
}	O
