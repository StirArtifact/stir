static	O
unsigned	O
int	O
loglevel	int
;	O
static	O
unsigned	O
int	O
cur_ver	int
=	O
0	int
;	O
static	O
Bit_Chain	struct
pdat	struct
=	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
;	O
static	O
int	O
dwg_free_UNKNOWN_ENT	function
(	O
Bit_Chain	struct
*	O
restrict	O
dat	pointer
,	O
Dwg_Object	struct
*	O
restrict	O
obj	pointer
)	O
;	O
static	O
int	O
dwg_free_UNKNOWN_OBJ	function
(	O
Bit_Chain	struct
*	O
restrict	O
dat	pointer
,	O
Dwg_Object	struct
*	O
restrict	O
obj	pointer
)	O
;	O
static	O
void	O
dwg_free_common_entity_data	function
(	O
Dwg_Object	struct
*	O
obj	pointer
)	O
{	O
Dwg_Data	struct
*	O
dwg	pointer
=	O
obj	pointer
->	O
parent	pointer
;	O
Bit_Chain	struct
*	O
dat	pointer
=	O
&	O
pdat	struct
;	O
Bit_Chain	struct
*	O
hdl_dat	pointer
=	O
&	O
pdat	struct
;	O
Dwg_Object_Entity	struct
*	O
_obj	pointer
;	O
Dwg_Object_Entity	struct
*	O
ent	pointer
;	O
BITCODE_BL	int
vcount	int
;	O
int	O
error	int
=	O
0	int
;	O
ent	pointer
=	O
obj	pointer
->	O
tio	union
.	O
entity	long
;	O
if	O
(	O
!	O
ent	pointer
)	O
return	O
;	O
_obj	pointer
=	O
ent	pointer
;	O
FREE_IF	O
(	O
ent	pointer
->	O
preview	pointer
)	O
;	O
SINCE	O
(	O
R_13	int
)	O
{	O
}	O
}	O
static	O
void	O
dwg_free_xdata	function
(	O
Dwg_Object_XRECORD	struct
*	O
obj	pointer
,	O
int	O
size	char
)	O
{	O
dwg_free_xdata_resbuf	function
(	O
obj	pointer
->	O
xdata	pointer
)	O
;	O
obj	pointer
->	O
xdata	pointer
=	O
NULL	O
;	O
}	O
EXPORT	O
void	O
dwg_free_eed	function
(	O
Dwg_Object	struct
*	O
obj	pointer
)	O
{	O
BITCODE_BL	int
i	int
;	O
if	O
(	O
obj	pointer
->	O
supertype	enum
==	O
DWG_SUPERTYPE_ENTITY	int
)	O
{	O
Dwg_Object_Entity	struct
*	O
_obj	pointer
=	O
obj	pointer
->	O
tio	union
.	O
entity	long
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_obj	pointer
->	O
num_eed	int
;	O
i	int
++	O
)	O
{	O
FREE_IF	O
(	O
_obj	pointer
->	O
eed	pointer
[	O
i	int
]	O
.	O
raw	pointer
)	O
;	O
FREE_IF	O
(	O
_obj	pointer
->	O
eed	pointer
[	O
i	int
]	O
.	O
data	pointer
)	O
;	O
}	O
FREE_IF	O
(	O
_obj	pointer
->	O
eed	pointer
)	O
;	O
_obj	pointer
->	O
num_eed	int
=	O
0	int
;	O
}	O
else	O
{	O
Dwg_Object_Object	struct
*	O
_obj	pointer
=	O
obj	pointer
->	O
tio	union
.	O
object	pointer
;	O
if	O
(	O
!	O
_obj	pointer
||	O
!	O
_obj	pointer
->	O
eed	pointer
)	O
return	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_obj	pointer
->	O
num_eed	int
;	O
i	int
++	O
)	O
{	O
FREE_IF	O
(	O
_obj	pointer
->	O
eed	pointer
[	O
i	int
]	O
.	O
raw	pointer
)	O
;	O
FREE_IF	O
(	O
_obj	pointer
->	O
eed	pointer
[	O
i	int
]	O
.	O
data	pointer
)	O
;	O
}	O
FREE_IF	O
(	O
_obj	pointer
->	O
eed	pointer
)	O
;	O
_obj	pointer
->	O
num_eed	int
=	O
0	int
;	O
}	O
}	O
static	O
int	O
dwg_free_variable_type	function
(	O
Dwg_Data	struct
*	O
restrict	O
dwg	pointer
,	O
Dwg_Object	struct
*	O
restrict	O
obj	pointer
)	O
{	O
const	O
int	O
i	int
=	O
obj	pointer
->	O
type	short
-	O
500	int
;	O
Dwg_Class	struct
*	O
klass	pointer
;	O
Bit_Chain	struct
*	O
dat	pointer
=	O
&	O
pdat	struct
;	O
if	O
(	O
i	int
<	O
0	int
||	O
i	int
>=	O
(	O
int	O
)	O
dwg	pointer
->	O
num_classes	short
)	O
return	O
DWG_ERR_INVALIDTYPE	int
;	O
klass	pointer
=	O
&	O
dwg	pointer
->	O
dwg_class	pointer
[	O
i	int
]	O
;	O
if	O
(	O
!	O
klass	pointer
||	O
!	O
klass	pointer
->	O
dxfname	pointer
)	O
return	O
DWG_ERR_INTERNALERROR	int
;	O
if	O
(	O
strNE	O
(	O
obj	pointer
->	O
dxfname	pointer
,	O
klass	pointer
->	O
dxfname	pointer
)	O
)	O
{	O
LOG_ERROR	O
(	O
"Wrong %s.type %d for obj [%d]: != %s"	pointer
,	O
obj	pointer
->	O
dxfname	pointer
,	O
obj	pointer
->	O
type	short
,	O
obj	pointer
->	O
index	short
,	O
klass	pointer
->	O
dxfname	pointer
)	O
;	O
return	O
DWG_ERR_INVALIDTYPE	int
;	O
}	O
return	O
DWG_ERR_UNHANDLEDCLASS	int
;	O
}	O
void	O
dwg_free_object	function
(	O
Dwg_Object	struct
*	O
obj	pointer
)	O
{	O
int	O
error	int
=	O
0	int
;	O
long	O
unsigned	O
int	O
j	long
;	O
Dwg_Data	struct
*	O
dwg	pointer
;	O
Bit_Chain	struct
*	O
dat	pointer
=	O
&	O
pdat	struct
;	O
if	O
(	O
obj	pointer
&&	O
obj	pointer
->	O
parent	pointer
)	O
{	O
dwg	pointer
=	O
obj	pointer
->	O
parent	pointer
;	O
dat	pointer
->	O
version	short
=	O
dwg	pointer
->	O
header	struct
.	O
version	short
;	O
dat	pointer
->	O
from_version	enum
=	O
dwg	pointer
->	O
header	struct
.	O
from_version	enum
;	O
}	O
else	O
return	O
;	O
if	O
(	O
obj	pointer
->	O
type	short
==	O
DWG_TYPE_FREED	int
||	O
obj	pointer
->	O
tio	union
.	O
object	pointer
==	O
NULL	O
)	O
return	O
;	O
switch	O
(	O
obj	pointer
->	O
type	short
)	O
{	O
case	O
DWG_TYPE_TEXT	int
:	O
dwg_free_TEXT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_ATTRIB	int
:	O
dwg_free_ATTRIB	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_ATTDEF	int
:	O
dwg_free_ATTDEF	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_BLOCK	int
:	O
dwg_free_BLOCK	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_ENDBLK	int
:	O
dwg_free_ENDBLK	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_SEQEND	int
:	O
dwg_free_SEQEND	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_INSERT	int
:	O
dwg_free_INSERT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_MINSERT	int
:	O
dwg_free_MINSERT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VERTEX_2D	int
:	O
dwg_free_VERTEX_2D	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VERTEX_3D	int
:	O
dwg_free_VERTEX_3D	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VERTEX_MESH	int
:	O
dwg_free_VERTEX_MESH	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VERTEX_PFACE	int
:	O
dwg_free_VERTEX_PFACE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VERTEX_PFACE_FACE	int
:	O
dwg_free_VERTEX_PFACE_FACE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_POLYLINE_2D	int
:	O
dwg_free_POLYLINE_2D	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_POLYLINE_3D	int
:	O
dwg_free_POLYLINE_3D	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_ARC	int
:	O
dwg_free_ARC	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_CIRCLE	int
:	O
dwg_free_CIRCLE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LINE	int
:	O
dwg_free_LINE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_ORDINATE	int
:	O
dwg_free_DIMENSION_ORDINATE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_LINEAR	int
:	O
dwg_free_DIMENSION_LINEAR	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_ALIGNED	int
:	O
dwg_free_DIMENSION_ALIGNED	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_ANG3PT	int
:	O
dwg_free_DIMENSION_ANG3PT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_ANG2LN	int
:	O
dwg_free_DIMENSION_ANG2LN	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_RADIUS	int
:	O
dwg_free_DIMENSION_RADIUS	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMENSION_DIAMETER	int
:	O
dwg_free_DIMENSION_DIAMETER	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_POINT	int
:	O
dwg_free_POINT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE__3DFACE	int
:	O
dwg_free__3DFACE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_POLYLINE_PFACE	int
:	O
dwg_free_POLYLINE_PFACE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_POLYLINE_MESH	int
:	O
dwg_free_POLYLINE_MESH	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_SOLID	int
:	O
dwg_free_SOLID	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_TRACE	int
:	O
dwg_free_TRACE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_SHAPE	int
:	O
dwg_free_SHAPE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VIEWPORT	int
:	O
dwg_free_VIEWPORT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_ELLIPSE	int
:	O
dwg_free_ELLIPSE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_SPLINE	int
:	O
dwg_free_SPLINE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_REGION	int
:	O
dwg_free_REGION	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE__3DSOLID	int
:	O
dwg_free__3DSOLID	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_BODY	int
:	O
dwg_free_BODY	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_RAY	int
:	O
dwg_free_RAY	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_XLINE	int
:	O
dwg_free_XLINE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DICTIONARY	int
:	O
dwg_free_DICTIONARY	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_MTEXT	int
:	O
dwg_free_MTEXT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LEADER	int
:	O
dwg_free_LEADER	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_TOLERANCE	int
:	O
dwg_free_TOLERANCE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_MLINE	int
:	O
dwg_free_MLINE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_BLOCK_CONTROL	int
:	O
dwg_free_BLOCK_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_BLOCK_HEADER	int
:	O
dwg_free_BLOCK_HEADER	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LAYER_CONTROL	int
:	O
dwg_free_LAYER_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LAYER	int
:	O
dwg_free_LAYER	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_STYLE_CONTROL	int
:	O
dwg_free_STYLE_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_STYLE	int
:	O
dwg_free_STYLE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LTYPE_CONTROL	int
:	O
dwg_free_LTYPE_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LTYPE	int
:	O
dwg_free_LTYPE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VIEW_CONTROL	int
:	O
dwg_free_VIEW_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VIEW	int
:	O
dwg_free_VIEW	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_UCS_CONTROL	int
:	O
dwg_free_UCS_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_UCS	int
:	O
dwg_free_UCS	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VPORT_CONTROL	int
:	O
dwg_free_VPORT_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VPORT	int
:	O
dwg_free_VPORT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_APPID_CONTROL	int
:	O
dwg_free_APPID_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_APPID	int
:	O
dwg_free_APPID	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMSTYLE_CONTROL	int
:	O
dwg_free_DIMSTYLE_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DIMSTYLE	int
:	O
dwg_free_DIMSTYLE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VPORT_ENTITY_CONTROL	int
:	O
dwg_free_VPORT_ENTITY_CONTROL	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_VPORT_ENTITY_HEADER	int
:	O
dwg_free_VPORT_ENTITY_HEADER	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_GROUP	int
:	O
dwg_free_GROUP	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_MLINESTYLE	int
:	O
dwg_free_MLINESTYLE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_OLE2FRAME	int
:	O
dwg_free_OLE2FRAME	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_DUMMY	int
:	O
dwg_free_DUMMY	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LONG_TRANSACTION	int
:	O
dwg_free_LONG_TRANSACTION	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LWPOLYLINE	int
:	O
dwg_free_LWPOLYLINE	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_HATCH	int
:	O
dwg_free_HATCH	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_XRECORD	int
:	O
dwg_free_XRECORD	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_PLACEHOLDER	int
:	O
dwg_free_PLACEHOLDER	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_OLEFRAME	int
:	O
dwg_free_OLEFRAME	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_LAYOUT	int
:	O
dwg_free_LAYOUT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_PROXY_ENTITY	int
:	O
dwg_free_PROXY_ENTITY	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
case	O
DWG_TYPE_PROXY_OBJECT	int
:	O
dwg_free_PROXY_OBJECT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
break	O
;	O
default	O
:	O
if	O
(	O
obj	pointer
->	O
type	short
==	O
obj	pointer
->	O
parent	pointer
->	O
layout_type	int
&&	O
obj	pointer
->	O
fixedtype	enum
==	O
DWG_TYPE_LAYOUT	int
)	O
{	O
SINCE	O
(	O
R_13	int
)	O
{	O
dwg_free_LAYOUT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
}	O
}	O
else	O
if	O
(	O
(	O
error	int
=	O
dwg_free_variable_type	function
(	O
obj	pointer
->	O
parent	pointer
,	O
obj	pointer
)	O
)	O
&	O
DWG_ERR_UNHANDLEDCLASS	int
)	O
{	O
if	O
(	O
obj	pointer
->	O
fixedtype	enum
==	O
DWG_TYPE_UNKNOWN_ENT	int
)	O
dwg_free_UNKNOWN_ENT	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
else	O
if	O
(	O
obj	pointer
->	O
fixedtype	enum
==	O
DWG_TYPE_UNKNOWN_OBJ	int
)	O
dwg_free_UNKNOWN_OBJ	function
(	O
dat	pointer
,	O
obj	pointer
)	O
;	O
}	O
}	O
if	O
(	O
dwg	pointer
->	O
opts	int
&	O
DWG_OPTS_INDXF	int
)	O
FREE_IF	O
(	O
obj	pointer
->	O
dxfname	pointer
)	O
;	O
obj	pointer
->	O
type	short
=	O
DWG_TYPE_FREED	int
;	O
}	O
static	O
int	O
dwg_free_header_vars	function
(	O
Dwg_Data	struct
*	O
dwg	pointer
)	O
{	O
Dwg_Header_Variables	struct
*	O
_obj	pointer
=	O
&	O
dwg	pointer
->	O
header_vars	struct
;	O
Dwg_Object	struct
*	O
obj	pointer
=	O
NULL	O
;	O
Bit_Chain	struct
*	O
dat	pointer
=	O
&	O
pdat	struct
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dwg_free_summaryinfo	function
(	O
Dwg_Data	struct
*	O
dwg	pointer
)	O
{	O
struct	O
Dwg_SummaryInfo	struct
*	O
_obj	pointer
=	O
&	O
dwg	pointer
->	O
summaryinfo	struct
;	O
Dwg_Object	struct
*	O
obj	pointer
=	O
NULL	O
;	O
Bit_Chain	struct
*	O
dat	pointer
=	O
&	O
pdat	struct
;	O
BITCODE_RL	int
rcount1	int
,	O
rcount2	int
;	O
return	O
0	int
;	O
}	O
void	O
dwg_free	function
(	O
Dwg_Data	struct
*	O
dwg	pointer
)	O
{	O
BITCODE_BL	int
i	int
;	O
if	O
(	O
dwg	pointer
)	O
{	O
pdat	struct
.	O
version	short
=	O
dwg	pointer
->	O
header	struct
.	O
version	short
;	O
pdat	struct
.	O
from_version	enum
=	O
dwg	pointer
->	O
header	struct
.	O
from_version	enum
;	O
if	O
(	O
dwg	pointer
->	O
opts	int
)	O
{	O
loglevel	int
=	O
dwg	pointer
->	O
opts	int
&	O
DWG_OPTS_LOGLEVEL	int
;	O
pdat	struct
.	O
opts	int
=	O
dwg	pointer
->	O
opts	int
;	O
}	O
LOG_INFO	O
(	O
"\n============\ndwg_free\n"	pointer
)	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dwg	pointer
->	O
num_objects	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
!	O
dwg_obj_is_control	function
(	O
&	O
dwg	pointer
->	O
object	pointer
[	O
i	int
]	O
)	O
)	O
dwg_free_object	function
(	O
&	O
dwg	pointer
->	O
object	pointer
[	O
i	int
]	O
)	O
;	O
}	O
FREE_IF	O
(	O
dwg	pointer
->	O
header	struct
.	O
section	pointer
)	O
;	O
dwg_free_header_vars	function
(	O
dwg	pointer
)	O
;	O
dwg_free_summaryinfo	function
(	O
dwg	pointer
)	O
;	O
FREE_IF	O
(	O
dwg	pointer
->	O
thumbnail	struct
.	O
chain	pointer
)	O
;	O
if	O
(	O
dwg	pointer
->	O
header	struct
.	O
section_infohdr	struct
.	O
num_desc	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dwg	pointer
->	O
header	struct
.	O
section_infohdr	struct
.	O
num_desc	int
;	O
++	O
i	int
)	O
FREE_IF	O
(	O
dwg	pointer
->	O
header	struct
.	O
section_info	pointer
[	O
i	int
]	O
.	O
sections	pointer
)	O
;	O
FREE_IF	O
(	O
dwg	pointer
->	O
header	struct
.	O
section_info	pointer
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dwg	pointer
->	O
second_header	struct
.	O
num_handlers	short
;	O
i	int
++	O
)	O
FREE_IF	O
(	O
dwg	pointer
->	O
second_header	struct
.	O
handlers	array
[	O
i	int
]	O
.	O
data	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dwg	pointer
->	O
num_objects	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
dwg_obj_is_control	function
(	O
&	O
dwg	pointer
->	O
object	pointer
[	O
i	int
]	O
)	O
)	O
dwg_free_object	function
(	O
&	O
dwg	pointer
->	O
object	pointer
[	O
i	int
]	O
)	O
;	O
}	O
if	O
(	O
dwg	pointer
->	O
num_classes	short
&&	O
dwg	pointer
->	O
dwg_class	pointer
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dwg	pointer
->	O
num_classes	short
;	O
++	O
i	int
)	O
{	O
FREE_IF	O
(	O
dwg	pointer
->	O
dwg_class	pointer
[	O
i	int
]	O
.	O
appname	pointer
)	O
;	O
FREE_IF	O
(	O
dwg	pointer
->	O
dwg_class	pointer
[	O
i	int
]	O
.	O
cppname	pointer
)	O
;	O
FREE_IF	O
(	O
dwg	pointer
->	O
dwg_class	pointer
[	O
i	int
]	O
.	O
dxfname	pointer
)	O
;	O
if	O
(	O
dwg	pointer
->	O
header	struct
.	O
from_version	enum
>=	O
R_2007	int
)	O
FREE_IF	O
(	O
dwg	pointer
->	O
dwg_class	pointer
[	O
i	int
]	O
.	O
dxfname_u	pointer
)	O
;	O
}	O
FREE_IF	O
(	O
dwg	pointer
->	O
dwg_class	pointer
)	O
;	O
}	O
if	O
(	O
dwg	pointer
->	O
object_ref	pointer
)	O
{	O
LOG_HANDLE	O
(	O
"free %d global refs\n"	pointer
,	O
dwg	pointer
->	O
num_object_refs	int
)	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
dwg	pointer
->	O
num_object_refs	int
;	O
++	O
i	int
)	O
{	O
FREE_IF	O
(	O
dwg	pointer
->	O
object_ref	pointer
[	O
i	int
]	O
)	O
;	O
}	O
}	O
FREE_IF	O
(	O
dwg	pointer
->	O
object_ref	pointer
)	O
;	O
FREE_IF	O
(	O
dwg	pointer
->	O
object	pointer
)	O
;	O
if	O
(	O
dwg	pointer
->	O
object_map	pointer
)	O
hash_free	function
(	O
dwg	pointer
->	O
object_map	pointer
)	O
;	O
}	O
}	O
