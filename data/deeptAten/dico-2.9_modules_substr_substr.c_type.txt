static	O
int	O
substr_sel	function
(	O
int	O
cmd	int
,	O
struct	O
dico_key	struct
*	O
key	pointer
,	O
const	O
char	O
*	O
dict_word	pointer
)	O
{	O
unsigned	O
*	O
sample	pointer
;	O
unsigned	O
*	O
tmp	pointer
;	O
int	O
res	int
;	O
switch	O
(	O
cmd	int
)	O
{	O
case	O
DICO_SELECT_BEGIN	int
:	O
if	O
(	O
utf8_mbstr_to_wc	function
(	O
key	pointer
->	O
word	pointer
,	O
&	O
sample	pointer
,	O
NULL	O
)	O
)	O
return	O
1	int
;	O
utf8_wc_strupper	function
(	O
sample	pointer
)	O
;	O
key	pointer
->	O
call_data	pointer
=	O
sample	pointer
;	O
break	O
;	O
case	O
DICO_SELECT_RUN	int
:	O
sample	pointer
=	O
key	pointer
->	O
call_data	pointer
;	O
if	O
(	O
utf8_mbstr_to_wc	function
(	O
dict_word	pointer
,	O
&	O
tmp	pointer
,	O
NULL	O
)	O
)	O
return	O
0	int
;	O
utf8_wc_strupper	function
(	O
tmp	pointer
)	O
;	O
res	int
=	O
!	O
!	O
utf8_wc_strstr	function
(	O
tmp	pointer
,	O
sample	pointer
)	O
;	O
free	function
(	O
tmp	pointer
)	O
;	O
return	O
res	int
;	O
case	O
DICO_SELECT_END	int
:	O
free	function
(	O
key	pointer
->	O
call_data	pointer
)	O
;	O
break	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
struct	O
dico_strategy	struct
substr_strat	struct
=	O
{	O
"substr"	pointer
,	O
"Match a substring anywhere in the headword"	pointer
,	O
substr_sel	function
}	O
;	O
static	O
int	O
substr_init	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
dico_strategy_add	function
(	O
&	O
substr_strat	struct
)	O
;	O
return	O
0	int
;	O
}	O
static	O
unsigned	O
*	O
strtowc	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
unsigned	O
*	O
buf	pointer
;	O
if	O
(	O
utf8_mbstr_to_wc	function
(	O
str	pointer
,	O
&	O
buf	pointer
,	O
NULL	O
)	O
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot convert \"%s\""	pointer
,	O
str	pointer
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
return	O
buf	pointer
;	O
}	O
static	O
int	O
substr_run_test	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
unsigned	O
const	O
*	O
p	pointer
;	O
int	O
ret	int
;	O
argc	int
--	O
;	O
argv	pointer
++	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"bad argument list for substr test"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
p	pointer
=	O
utf8_wc_strstr	function
(	O
wa	pointer
,	O
wb	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
{	O
ret	int
=	O
0	int
;	O
printf	function
(	O
"%td\n"	pointer
,	O
p	pointer
-	O
wa	pointer
)	O
;	O
}	O
else	O
ret	int
=	O
1	int
;	O
free	function
(	O
wa	pointer
)	O
;	O
free	function
(	O
wb	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
struct	O
dico_database_module	struct
DICO_EXPORT	O
(	O
substr	O
,	O
module	O
)	O
=	O
{	O
.	O
dico_version	int
=	O
DICO_MODULE_VERSION	int
,	O
.	O
dico_capabilities	int
=	O
DICO_CAPA_NODB	int
,	O
.	O
dico_init	pointer
=	O
substr_init	function
,	O
.	O
dico_run_test	pointer
=	O
substr_run_test	function
}	O
;	O
