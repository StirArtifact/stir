typedef	O
struct	O
{	O
ESint32	int
s	int
;	O
}	O
DtSOCKET_RAW	struct
;	O
ESint32	int
EDMAPROC	O
SOCKET_RAWinitZ	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
proto_name	pointer
)	O
{	O
DtSOCKET_RAW	struct
*	O
m	pointer
;	O
ESint32	int
proto	int
;	O
m	pointer
=	O
(	O
DtSOCKET_RAW	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
proto	int
=	O
-	O
1	int
;	O
if	O
(	O
strcmp	function
(	O
proto_name	pointer
,	O
"TCP"	pointer
)	O
==	O
0	int
)	O
{	O
proto	int
=	O
IPPROTO_TCP	int
;	O
}	O
if	O
(	O
strcmp	function
(	O
proto_name	pointer
,	O
"UDP"	pointer
)	O
==	O
0	int
)	O
{	O
proto	int
=	O
IPPROTO_UDP	int
;	O
}	O
if	O
(	O
strcmp	function
(	O
proto_name	pointer
,	O
"ICMP"	pointer
)	O
==	O
0	int
)	O
{	O
proto	int
=	O
IPPROTO_ICMP	int
;	O
}	O
if	O
(	O
strcmp	function
(	O
proto_name	pointer
,	O
"IP"	pointer
)	O
==	O
0	int
)	O
proto	int
=	O
IPPROTO_IP	int
;	O
if	O
(	O
proto	int
!=	O
-	O
1	int
)	O
{	O
m	pointer
->	O
s	int
=	O
socket	function
(	O
PF_INET	int
,	O
SOCK_RAW	int
,	O
proto	int
)	O
;	O
}	O
else	O
return	O
-	O
1	int
;	O
if	O
(	O
m	pointer
->	O
s	int
==	O
-	O
1	int
)	O
{	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"[ERROR] Can't create %s raw socket"	pointer
,	O
proto_name	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
SOCKET_RAWreadsAsS32	function
(	O
OBJID	int
IdObj	int
,	O
EDMAT_BUFFER	struct
datos	struct
,	O
EPSint32	pointer
len	int
)	O
{	O
DtSOCKET_RAW	struct
*	O
m	pointer
;	O
ESint32	int
r	int
;	O
m	pointer
=	O
(	O
DtSOCKET_RAW	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
memset	function
(	O
datos	struct
.	O
dat	pointer
,	O
0	int
,	O
datos	struct
.	O
Size	long
)	O
;	O
r	int
=	O
read	function
(	O
m	pointer
->	O
s	int
,	O
datos	struct
.	O
dat	pointer
,	O
datos	struct
.	O
Size	long
)	O
;	O
*	O
len	int
=	O
r	int
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
*	O
len	int
=	O
-	O
1	int
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"[Error] read: Can't read data"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
SOCKET_RAWclose	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtSOCKET_RAW	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtSOCKET_RAW	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
close	function
(	O
m	pointer
->	O
s	int
)	O
;	O
return	O
0	int
;	O
}	O
