static	O
PyObject	O
*	O
_repr	function
(	O
PyObject	O
*	O
self	pointer
)	O
{	O
char	O
buf	pointer
[	O
80	int
]	O
;	O
sprintf	O
(	O
buf	pointer
,	O
"<"	pointer
PY_MODULE	pointer
"."	pointer
PY_CSNAME	pointer
" instance at %p>"	pointer
,	O
self	pointer
)	O
;	O
return	O
PyString_FromString	function
(	O
buf	pointer
)	O
;	O
}	O
static	O
PyTypeObject	O
PyBodyType	int
=	O
{	O
PyObject_HEAD_INIT	function
(	O
NULL	O
)	O
0	int
,	O
PY_MODULE	pointer
"."	pointer
PY_CSNAME	pointer
,	O
sizeof	O
(	O
PyBody	O
)	O
,	O
0	int
,	O
(	O
destructor	O
)	O
_py_dealloc	function
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
_repr	function
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
_repr	function
,	O
0	int
,	O
0	int
,	O
0	int
,	O
Py_TPFLAGS_DEFAULT	O
,	O
""	pointer
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
}	O
;	O
PyBody	O
*	O
PyBody_NEW	function
(	O
)	O
{	O
return	O
(	O
PyBody	O
*	O
)	O
PyObject_NEW	O
(	O
PyBody	O
,	O
&	O
PyBodyType	int
)	O
;	O
}	O
static	O
PyObject	O
*	O
api_body_size	function
(	O
PyObject	O
*	O
self	pointer
,	O
PyObject	O
*	O
args	pointer
)	O
{	O
int	O
status	int
;	O
size_t	int
size	O
;	O
PyBody	O
*	O
py_body	O
;	O
if	O
(	O
!	O
PyArg_ParseTuple	function
(	O
args	pointer
,	O
"O!"	pointer
,	O
&	O
PyBodyType	int
,	O
&	O
py_body	O
)	O
)	O
return	O
NULL	O
;	O
status	int
=	O
mu_body_size	function
(	O
py_body	O
->	O
body	O
,	O
&	O
size	O
)	O
;	O
return	O
status_object	function
(	O
status	int
,	O
PyInt_FromSize_t	function
(	O
size	O
)	O
)	O
;	O
}	O
static	O
PyObject	O
*	O
api_body_lines	function
(	O
PyObject	O
*	O
self	pointer
,	O
PyObject	O
*	O
args	pointer
)	O
{	O
int	O
status	int
;	O
size_t	int
lines	O
;	O
PyBody	O
*	O
py_body	O
;	O
if	O
(	O
!	O
PyArg_ParseTuple	function
(	O
args	pointer
,	O
"O!"	pointer
,	O
&	O
PyBodyType	int
,	O
&	O
py_body	O
)	O
)	O
return	O
NULL	O
;	O
status	int
=	O
mu_body_lines	function
(	O
py_body	O
->	O
body	O
,	O
&	O
lines	O
)	O
;	O
return	O
status_object	function
(	O
status	int
,	O
PyInt_FromSize_t	function
(	O
lines	O
)	O
)	O
;	O
}	O
static	O
PyObject	O
*	O
api_body_get_stream	function
(	O
PyObject	O
*	O
self	pointer
,	O
PyObject	O
*	O
args	pointer
)	O
{	O
int	O
status	int
;	O
PyBody	O
*	O
py_body	O
;	O
PyStream	O
*	O
py_stm	O
=	O
PyStream_NEW	function
(	O
)	O
;	O
if	O
(	O
!	O
PyArg_ParseTuple	function
(	O
args	pointer
,	O
"O!"	pointer
,	O
&	O
PyBodyType	int
,	O
&	O
py_body	O
)	O
)	O
return	O
NULL	O
;	O
Py_INCREF	function
(	O
py_stm	O
)	O
;	O
status	int
=	O
mu_body_get_streamref	function
(	O
py_body	O
->	O
body	O
,	O
&	O
py_stm	O
->	O
stm	O
)	O
;	O
return	O
status_object	function
(	O
status	int
,	O
(	O
PyObject	O
*	O
)	O
py_stm	O
)	O
;	O
}	O
static	O
PyMethodDef	O
methods	pointer
[	O
]	O
=	O
{	O
{	O
"size"	pointer
,	O
(	O
PyCFunction	O
)	O
api_body_size	function
,	O
METH_VARARGS	O
,	O
"Retrieve 'body' size."	pointer
}	O
,	O
{	O
"lines"	pointer
,	O
(	O
PyCFunction	O
)	O
api_body_lines	function
,	O
METH_VARARGS	O
,	O
"Retrieve 'body' number of lines."	pointer
}	O
,	O
{	O
"get_stream"	pointer
,	O
(	O
PyCFunction	O
)	O
api_body_get_stream	function
,	O
METH_VARARGS	O
,	O
""	pointer
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
int	O
mu_py_init_body	function
(	O
void	O
)	O
{	O
PyBodyType	int
.	O
tp_new	O
=	O
PyType_GenericNew	O
;	O
return	O
PyType_Ready	function
(	O
&	O
PyBodyType	int
)	O
;	O
}	O
void	O
_mu_py_attach_body	function
(	O
void	O
)	O
{	O
PyObject	O
*	O
m	O
;	O
if	O
(	O
(	O
m	O
=	O
_mu_py_attach_module	function
(	O
PY_MODULE	pointer
,	O
methods	pointer
)	O
)	O
)	O
{	O
Py_INCREF	function
(	O
&	O
PyBodyType	int
)	O
;	O
PyModule_AddObject	function
(	O
m	O
,	O
PY_CSNAME	pointer
,	O
(	O
PyObject	O
*	O
)	O
&	O
PyBodyType	int
)	O
;	O
}	O
}	O
