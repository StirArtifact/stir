OM_uint32	int
gss_import_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_buffer_t	pointer
input_name_buffer	pointer
,	O
const	O
gss_OID	pointer
input_name_type	pointer
,	O
gss_name_t	pointer
*	O
output_name	pointer
)	O
{	O
if	O
(	O
!	O
output_name	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_NAME	O
|	O
GSS_S_CALL_INACCESSIBLE_WRITE	O
;	O
}	O
*	O
output_name	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
*	O
output_name	pointer
)	O
)	O
;	O
if	O
(	O
!	O
*	O
output_name	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
(	O
*	O
output_name	pointer
)	O
->	O
length	int
=	O
input_name_buffer	pointer
->	O
length	int
;	O
(	O
*	O
output_name	pointer
)	O
->	O
value	pointer
=	O
malloc	function
(	O
input_name_buffer	pointer
->	O
length	int
)	O
;	O
if	O
(	O
!	O
(	O
*	O
output_name	pointer
)	O
->	O
value	pointer
)	O
{	O
free	function
(	O
*	O
output_name	pointer
)	O
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
memcpy	function
(	O
(	O
*	O
output_name	pointer
)	O
->	O
value	pointer
,	O
input_name_buffer	pointer
->	O
value	pointer
,	O
input_name_buffer	pointer
->	O
length	int
)	O
;	O
(	O
*	O
output_name	pointer
)	O
->	O
type	pointer
=	O
input_name_type	pointer
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_display_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
input_name	pointer
,	O
gss_buffer_t	pointer
output_name_buffer	pointer
,	O
gss_OID	pointer
*	O
output_name_type	pointer
)	O
{	O
if	O
(	O
!	O
input_name	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_NAME	O
;	O
}	O
output_name_buffer	pointer
->	O
length	int
=	O
input_name	pointer
->	O
length	int
;	O
output_name_buffer	pointer
->	O
value	pointer
=	O
malloc	function
(	O
input_name	pointer
->	O
length	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
output_name_buffer	pointer
->	O
value	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
if	O
(	O
input_name	pointer
->	O
value	pointer
)	O
memcpy	function
(	O
output_name_buffer	pointer
->	O
value	pointer
,	O
input_name	pointer
->	O
value	pointer
,	O
input_name	pointer
->	O
length	int
)	O
;	O
if	O
(	O
output_name_type	pointer
)	O
*	O
output_name_type	pointer
=	O
input_name	pointer
->	O
type	pointer
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_compare_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
name1	pointer
,	O
const	O
gss_name_t	pointer
name2	pointer
,	O
int	O
*	O
name_equal	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
if	O
(	O
!	O
name1	pointer
||	O
!	O
name2	pointer
)	O
return	O
GSS_S_BAD_NAME	O
|	O
GSS_S_CALL_INACCESSIBLE_READ	O
;	O
if	O
(	O
!	O
gss_oid_equal	function
(	O
name1	pointer
->	O
type	pointer
,	O
name2	pointer
->	O
type	pointer
)	O
)	O
return	O
GSS_S_BAD_NAMETYPE	O
;	O
if	O
(	O
name_equal	pointer
)	O
*	O
name_equal	pointer
=	O
(	O
name1	pointer
->	O
length	int
==	O
name2	pointer
->	O
length	int
)	O
&&	O
memcmp	function
(	O
name1	pointer
->	O
value	pointer
,	O
name2	pointer
->	O
value	pointer
,	O
name1	pointer
->	O
length	int
)	O
==	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_release_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
gss_name_t	pointer
*	O
name	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
if	O
(	O
!	O
name	pointer
)	O
return	O
GSS_S_BAD_NAME	O
|	O
GSS_S_CALL_INACCESSIBLE_READ	O
;	O
if	O
(	O
*	O
name	pointer
!=	O
GSS_C_NO_NAME	O
)	O
{	O
if	O
(	O
(	O
*	O
name	pointer
)	O
->	O
value	pointer
)	O
free	function
(	O
(	O
*	O
name	pointer
)	O
->	O
value	pointer
)	O
;	O
free	function
(	O
*	O
name	pointer
)	O
;	O
*	O
name	pointer
=	O
GSS_C_NO_NAME	O
;	O
}	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_inquire_names_for_mech	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_OID	pointer
mechanism	pointer
,	O
gss_OID_set	pointer
*	O
name_types	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
_gss_mech_api_t	pointer
mech	pointer
;	O
int	O
i	int
;	O
mech	pointer
=	O
_gss_find_mech	function
(	O
mechanism	pointer
)	O
;	O
maj_stat	int
=	O
gss_create_empty_oid_set	function
(	O
minor_status	pointer
,	O
name_types	pointer
)	O
;	O
if	O
(	O
maj_stat	int
!=	O
GSS_S_COMPLETE	int
)	O
return	O
maj_stat	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
mech	pointer
->	O
name_types	pointer
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
maj_stat	int
=	O
gss_add_oid_set_member	function
(	O
minor_status	pointer
,	O
mech	pointer
->	O
name_types	pointer
[	O
i	int
]	O
,	O
name_types	pointer
)	O
;	O
if	O
(	O
maj_stat	int
!=	O
GSS_S_COMPLETE	int
)	O
{	O
gss_release_oid_set	function
(	O
minor_status	pointer
,	O
name_types	pointer
)	O
;	O
return	O
maj_stat	int
;	O
}	O
}	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
static	O
OM_uint32	int
_gss_inquire_mechs_for_name3	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
gss_OID	pointer
mech	pointer
,	O
gss_OID	pointer
name_type	pointer
,	O
gss_OID_set	pointer
*	O
mech_types	pointer
)	O
{	O
gss_OID_set	pointer
oids	pointer
;	O
int	O
supported	int
;	O
OM_uint32	int
maj_stat	int
;	O
maj_stat	int
=	O
gss_inquire_names_for_mech	function
(	O
minor_status	pointer
,	O
mech	pointer
,	O
&	O
oids	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
maj_stat	int
=	O
gss_test_oid_set_member	function
(	O
minor_status	pointer
,	O
name_type	pointer
,	O
oids	pointer
,	O
&	O
supported	int
)	O
;	O
gss_release_oid_set	function
(	O
minor_status	pointer
,	O
&	O
oids	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
if	O
(	O
supported	int
)	O
{	O
maj_stat	int
=	O
gss_add_oid_set_member	function
(	O
minor_status	pointer
,	O
mech	pointer
,	O
mech_types	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
static	O
OM_uint32	int
_gss_inquire_mechs_for_name2	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
gss_OID	pointer
name_type	pointer
,	O
gss_OID_set	pointer
*	O
out_mech_types	pointer
,	O
gss_OID_set	pointer
supported_mech_types	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
size_t	long
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
supported_mech_types	pointer
->	O
count	long
;	O
i	int
++	O
)	O
{	O
maj_stat	int
=	O
_gss_inquire_mechs_for_name3	function
(	O
minor_status	pointer
,	O
&	O
(	O
supported_mech_types	pointer
->	O
elements	pointer
)	O
[	O
i	int
]	O
,	O
name_type	pointer
,	O
out_mech_types	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
static	O
OM_uint32	int
_gss_inquire_mechs_for_name1	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
gss_OID	pointer
name_type	pointer
,	O
gss_OID_set	pointer
*	O
out_mech_types	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
gss_OID_set	pointer
supported_mech_types	pointer
;	O
maj_stat	int
=	O
gss_indicate_mechs	function
(	O
minor_status	pointer
,	O
&	O
supported_mech_types	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
maj_stat	int
=	O
_gss_inquire_mechs_for_name2	function
(	O
minor_status	pointer
,	O
name_type	pointer
,	O
out_mech_types	pointer
,	O
supported_mech_types	pointer
)	O
;	O
gss_release_oid_set	function
(	O
minor_status	pointer
,	O
&	O
supported_mech_types	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_inquire_mechs_for_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
input_name	pointer
,	O
gss_OID_set	pointer
*	O
mech_types	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
input_name	pointer
==	O
GSS_C_NO_NAME	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_NAME	O
|	O
GSS_S_CALL_INACCESSIBLE_READ	O
;	O
}	O
maj_stat	int
=	O
gss_create_empty_oid_set	function
(	O
minor_status	pointer
,	O
mech_types	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
maj_stat	int
=	O
_gss_inquire_mechs_for_name1	function
(	O
minor_status	pointer
,	O
input_name	pointer
->	O
type	pointer
,	O
mech_types	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
{	O
gss_release_oid_set	function
(	O
minor_status	pointer
,	O
mech_types	pointer
)	O
;	O
return	O
maj_stat	int
;	O
}	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_export_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
input_name	pointer
,	O
gss_buffer_t	pointer
exported_name	pointer
)	O
{	O
OM_uint32	int
maj_stat	int
;	O
gss_OID_set	pointer
mechs	pointer
;	O
_gss_mech_api_t	pointer
mech	pointer
;	O
maj_stat	int
=	O
gss_inquire_mechs_for_name	function
(	O
minor_status	pointer
,	O
input_name	pointer
,	O
&	O
mechs	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
if	O
(	O
mechs	pointer
->	O
count	long
==	O
0	int
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_NAMETYPE	O
;	O
}	O
mech	pointer
=	O
_gss_find_mech	function
(	O
mechs	pointer
->	O
elements	pointer
)	O
;	O
if	O
(	O
mech	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
return	O
mech	pointer
->	O
export_name	pointer
(	O
minor_status	pointer
,	O
input_name	pointer
,	O
exported_name	pointer
)	O
;	O
}	O
OM_uint32	int
gss_canonicalize_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
input_name	pointer
,	O
const	O
gss_OID	pointer
mech_type	pointer
,	O
gss_name_t	pointer
*	O
output_name	pointer
)	O
{	O
_gss_mech_api_t	pointer
mech	pointer
;	O
mech	pointer
=	O
_gss_find_mech	function
(	O
mech_type	pointer
)	O
;	O
if	O
(	O
mech	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
return	O
mech	pointer
->	O
canonicalize_name	pointer
(	O
minor_status	pointer
,	O
input_name	pointer
,	O
mech_type	pointer
,	O
output_name	pointer
)	O
;	O
}	O
OM_uint32	int
gss_duplicate_name	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
src_name	pointer
,	O
gss_name_t	pointer
*	O
dest_name	pointer
)	O
{	O
if	O
(	O
src_name	pointer
==	O
GSS_C_NO_NAME	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_NAME	O
;	O
}	O
if	O
(	O
!	O
dest_name	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_FAILURE	O
|	O
GSS_S_CALL_INACCESSIBLE_WRITE	O
;	O
}	O
*	O
dest_name	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
*	O
dest_name	pointer
)	O
)	O
;	O
if	O
(	O
!	O
*	O
dest_name	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
(	O
*	O
dest_name	pointer
)	O
->	O
type	pointer
=	O
src_name	pointer
->	O
type	pointer
;	O
(	O
*	O
dest_name	pointer
)	O
->	O
length	int
=	O
src_name	pointer
->	O
length	int
;	O
(	O
*	O
dest_name	pointer
)	O
->	O
value	pointer
=	O
malloc	function
(	O
src_name	pointer
->	O
length	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
(	O
*	O
dest_name	pointer
)	O
->	O
value	pointer
)	O
{	O
free	function
(	O
*	O
dest_name	pointer
)	O
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
memcpy	function
(	O
(	O
*	O
dest_name	pointer
)	O
->	O
value	pointer
,	O
src_name	pointer
->	O
value	pointer
,	O
src_name	pointer
->	O
length	int
)	O
;	O
(	O
*	O
dest_name	pointer
)	O
->	O
value	pointer
[	O
src_name	pointer
->	O
length	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
