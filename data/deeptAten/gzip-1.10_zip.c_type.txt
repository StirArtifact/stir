local	O
ulg	long
crc	long
;	O
off_t	long
header_bytes	long
;	O
int	O
zip	function
(	O
in	int
,	O
out	int
)	O
int	O
in	int
,	O
out	int
;	O
{	O
uch	char
flags	pointer
=	O
0	int
;	O
ush	short
attr	pointer
=	O
0	int
;	O
ush	short
deflate_flags	short
=	O
0	int
;	O
ulg	long
stamp	long
;	O
ifd	int
=	O
in	int
;	O
ofd	int
=	O
out	int
;	O
outcnt	int
=	O
0	int
;	O
method	int
=	O
DEFLATED	int
;	O
put_byte	O
(	O
GZIP_MAGIC	pointer
[	O
0	int
]	O
)	O
;	O
put_byte	O
(	O
GZIP_MAGIC	pointer
[	O
1	int
]	O
)	O
;	O
put_byte	O
(	O
DEFLATED	int
)	O
;	O
if	O
(	O
save_orig_name	int
)	O
{	O
flags	pointer
|=	O
ORIG_NAME	int
;	O
}	O
put_byte	O
(	O
flags	pointer
)	O
;	O
if	O
(	O
time_stamp	struct
.	O
tv_nsec	long
<	O
0	int
)	O
stamp	long
=	O
0	int
;	O
else	O
if	O
(	O
0	int
<	O
time_stamp	struct
.	O
tv_sec	long
&&	O
time_stamp	struct
.	O
tv_sec	long
<=	O
0xffffffff	int
)	O
stamp	long
=	O
time_stamp	struct
.	O
tv_sec	long
;	O
else	O
{	O
warning	function
(	O
"file timestamp out of range for gzip format"	pointer
)	O
;	O
stamp	long
=	O
0	int
;	O
}	O
put_long	O
(	O
stamp	long
)	O
;	O
crc	long
=	O
updcrc	function
(	O
0	int
,	O
0	int
)	O
;	O
bi_init	function
(	O
out	int
)	O
;	O
ct_init	function
(	O
&	O
attr	pointer
,	O
&	O
method	int
)	O
;	O
lm_init	function
(	O
level	int
,	O
&	O
deflate_flags	short
)	O
;	O
put_byte	O
(	O
(	O
uch	char
)	O
deflate_flags	short
)	O
;	O
put_byte	O
(	O
OS_CODE	int
)	O
;	O
if	O
(	O
save_orig_name	int
)	O
{	O
char	O
*	O
p	pointer
=	O
gzip_base_name	function
(	O
ifname	array
)	O
;	O
do	O
{	O
put_byte	O
(	O
*	O
p	pointer
)	O
;	O
}	O
while	O
(	O
*	O
p	pointer
++	O
)	O
;	O
}	O
header_bytes	long
=	O
(	O
off_t	long
)	O
outcnt	int
;	O
(	O
void	O
)	O
deflate	function
(	O
)	O
;	O
if	O
(	O
ifile_size	long
!=	O
-	O
1L	int
&&	O
bytes_in	long
!=	O
ifile_size	long
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: %s: file size changed while zipping\n"	pointer
,	O
program_name	pointer
,	O
ifname	array
)	O
;	O
}	O
put_long	O
(	O
crc	long
)	O
;	O
put_long	O
(	O
(	O
ulg	long
)	O
bytes_in	long
)	O
;	O
header_bytes	long
+=	O
2	int
*	O
4	int
;	O
flush_outbuf	function
(	O
)	O
;	O
return	O
OK	int
;	O
}	O
int	O
file_read	function
(	O
buf	pointer
,	O
size	int
)	O
char	O
*	O
buf	pointer
;	O
unsigned	O
size	int
;	O
{	O
unsigned	O
len	int
;	O
Assert	O
(	O
insize	int
==	O
0	int
,	O
"inbuf not empty"	pointer
)	O
;	O
len	int
=	O
read_buffer	function
(	O
ifd	int
,	O
buf	pointer
,	O
size	int
)	O
;	O
if	O
(	O
len	int
==	O
0	int
)	O
return	O
(	O
int	O
)	O
len	int
;	O
if	O
(	O
len	int
==	O
(	O
unsigned	O
)	O
-	O
1	int
)	O
{	O
read_error	function
(	O
)	O
;	O
}	O
crc	long
=	O
updcrc	function
(	O
(	O
uch	char
*	O
)	O
buf	pointer
,	O
len	int
)	O
;	O
bytes_in	long
+=	O
(	O
off_t	long
)	O
len	int
;	O
return	O
(	O
int	O
)	O
len	int
;	O
}	O
