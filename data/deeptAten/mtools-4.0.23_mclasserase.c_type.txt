static	O
void	O
usage	function
(	O
int	O
ret	int
)	O
NORETURN	O
;	O
static	O
void	O
usage	function
(	O
int	O
ret	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Mtools version %s, dated %s\n"	pointer
,	O
mversion	pointer
,	O
mdate	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s [-d] drive:\n"	pointer
,	O
progname	pointer
)	O
;	O
exit	function
(	O
ret	int
)	O
;	O
}	O
static	O
void	O
do_mclasserase	function
(	O
char	O
drive	char
,	O
int	O
debug	int
)	O
NORETURN	O
;	O
static	O
void	O
do_mclasserase	function
(	O
char	O
drive	char
,	O
int	O
debug	int
)	O
{	O
struct	O
device	struct
dev	pointer
;	O
union	O
bootsector	union
boot	struct
;	O
int	O
media	char
;	O
char	O
name	pointer
[	O
EXPAND_BUF	int
]	O
;	O
Stream_t	struct
*	O
Stream	pointer
;	O
struct	O
label_blk_t	struct
*	O
labelBlock	struct
;	O
FILE	struct
*	O
fDevice	pointer
;	O
char	O
cCardType	array
[	O
12	int
]	O
;	O
char	O
drivel	array
[	O
3	int
]	O
;	O
int	O
i	int
=	O
0	int
;	O
char	O
dummy	array
[	O
2	int
]	O
;	O
int	O
icount	int
=	O
0	int
;	O
int	O
iTotalErase	int
=	O
0	int
;	O
unsigned	O
char	O
odat	array
[	O
CYCLES	int
]	O
;	O
odat	array
[	O
0	int
]	O
=	O
0xff	int
;	O
odat	array
[	O
1	int
]	O
=	O
0x00	int
;	O
odat	array
[	O
2	int
]	O
=	O
0xff	int
;	O
if	O
(	O
debug	int
==	O
1	int
)	O
printf	function
(	O
"cycles: %i, odats: %i,%i,%i\n"	pointer
,	O
CYCLES	int
,	O
odat	array
[	O
0	int
]	O
,	O
odat	array
[	O
1	int
]	O
,	O
odat	array
[	O
2	int
]	O
)	O
;	O
if	O
(	O
!	O
(	O
Stream	pointer
=	O
find_device	function
(	O
drive	char
,	O
O_RDONLY	int
,	O
&	O
dev	pointer
,	O
&	O
boot	struct
,	O
name	pointer
,	O
&	O
media	char
,	O
0	int
,	O
NULL	O
)	O
)	O
)	O
exit	function
(	O
1	int
)	O
;	O
FREE	O
(	O
&	O
Stream	pointer
)	O
;	O
labelBlock	struct
=	O
&	O
boot	struct
.	O
boot	struct
.	O
ext	array
.	O
old	struct
.	O
labelBlock	struct
;	O
sprintf	function
(	O
cCardType	array
,	O
"%11.11s"	pointer
,	O
labelBlock	struct
->	O
label	array
)	O
;	O
if	O
(	O
debug	int
==	O
1	int
)	O
{	O
printf	function
(	O
"Using Device: %s\n"	pointer
,	O
name	pointer
)	O
;	O
printf	function
(	O
"Card-Type detected: %s\n"	pointer
,	O
cCardType	array
)	O
;	O
}	O
sprintf	function
(	O
drivel	array
,	O
"%c:"	pointer
,	O
ch_tolower	function
(	O
drive	char
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
CYCLES	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
debug	int
==	O
1	int
)	O
{	O
printf	function
(	O
"Erase Cycle %i, writing data: 0x%2.2x...\n"	pointer
,	O
i	int
+	O
1	int
,	O
odat	array
[	O
i	int
]	O
)	O
;	O
}	O
fDevice	pointer
=	O
fopen	function
(	O
name	pointer
,	O
"ab+"	pointer
)	O
;	O
if	O
(	O
fDevice	pointer
==	O
0	int
)	O
{	O
perror	function
(	O
"Error opening device"	pointer
)	O
;	O
exit	function
(	O
-	O
1	int
)	O
;	O
}	O
if	O
(	O
debug	int
==	O
1	int
)	O
{	O
printf	function
(	O
"Open successful...\n"	pointer
)	O
;	O
printf	function
(	O
"Flushing device after 32 kBytes of data...\n"	pointer
)	O
;	O
printf	function
(	O
"Erasing:"	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
}	O
while	O
(	O
(	O
feof	function
(	O
fDevice	pointer
)	O
==	O
0	int
)	O
&&	O
(	O
ferror	function
(	O
fDevice	pointer
)	O
==	O
0	int
)	O
)	O
{	O
fputc	function
(	O
odat	array
[	O
i	int
]	O
,	O
fDevice	pointer
)	O
;	O
icount	int
++	O
;	O
if	O
(	O
icount	int
>	O
(	O
32	int
*	O
1024	int
)	O
)	O
{	O
fflush	function
(	O
fDevice	pointer
)	O
;	O
iTotalErase	int
+=	O
icount	int
;	O
if	O
(	O
debug	int
==	O
1	int
)	O
{	O
printf	function
(	O
"."	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
}	O
icount	int
=	O
0	int
;	O
}	O
}	O
if	O
(	O
debug	int
==	O
1	int
)	O
{	O
printf	function
(	O
"\nPress <ENTER> to continue\n"	pointer
)	O
;	O
printf	function
(	O
"Press <x> and <ENTER> to abort\n"	pointer
)	O
;	O
if	O
(	O
scanf	function
(	O
"%c"	pointer
,	O
dummy	array
)	O
<	O
1	int
)	O
printf	function
(	O
"Input error\n"	pointer
)	O
;	O
fflush	function
(	O
stdin	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
dummy	array
,	O
"x"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"exiting.\n"	pointer
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
}	O
fclose	function
(	O
fDevice	pointer
)	O
;	O
}	O
if	O
(	O
debug	int
==	O
0	int
)	O
{	O
if	O
(	O
dup2	function
(	O
open	function
(	O
"/dev/null"	pointer
,	O
O_WRONLY	int
)	O
,	O
STDERR_FILENO	int
)	O
!=	O
STDERR_FILENO	int
)	O
printf	function
(	O
"Error with dup2() stdout\n"	pointer
)	O
;	O
if	O
(	O
dup2	function
(	O
open	function
(	O
"/dev/null"	pointer
,	O
O_WRONLY	int
)	O
,	O
STDOUT_FILENO	int
)	O
!=	O
STDOUT_FILENO	int
)	O
printf	function
(	O
"Error with dup2() stdout\n"	pointer
)	O
;	O
}	O
if	O
(	O
debug	int
==	O
1	int
)	O
printf	function
(	O
"Calling amuFormat.sh with args: %s,%s\n"	pointer
,	O
cCardType	array
,	O
drivel	array
)	O
;	O
execlp	function
(	O
"amuFormat.sh"	pointer
,	O
""	pointer
,	O
cCardType	array
,	O
drivel	array
,	O
NULL	O
)	O
;	O
exit	function
(	O
-	O
1	int
)	O
;	O
}	O
void	O
mclasserase	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
NORETURN	O
;	O
void	O
mclasserase	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
{	O
int	O
c	int
;	O
int	O
debug	int
=	O
0	int
;	O
char	O
drive	char
=	O
'a'	O
;	O
extern	O
int	O
optind	int
;	O
destroy_privs	function
(	O
)	O
;	O
if	O
(	O
helpFlag	function
(	O
argc	int
,	O
argv	pointer
)	O
)	O
usage	function
(	O
0	int
)	O
;	O
if	O
(	O
(	O
argc	int
!=	O
2	int
)	O
&	O
(	O
argc	int
!=	O
3	int
)	O
&	O
(	O
argc	int
!=	O
4	int
)	O
)	O
{	O
printf	function
(	O
"mclasserase: wrong num of args\n"	pointer
)	O
;	O
usage	function
(	O
1	int
)	O
;	O
}	O
else	O
{	O
while	O
(	O
(	O
c	int
=	O
getopt	function
(	O
argc	int
,	O
argv	pointer
,	O
"+p:dh"	pointer
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
c	int
)	O
{	O
case	O
'd'	O
:	O
printf	function
(	O
"=============\n"	pointer
)	O
;	O
printf	function
(	O
"Debug Mode...\n"	pointer
)	O
;	O
printf	function
(	O
"=============\n"	pointer
)	O
;	O
debug	int
=	O
1	int
;	O
break	O
;	O
case	O
'p'	O
:	O
printf	function
(	O
"option -p not implemented yet\n"	pointer
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
usage	function
(	O
0	int
)	O
;	O
case	O
'?'	O
:	O
usage	function
(	O
1	int
)	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
for	O
(	O
;	O
optind	int
<	O
argc	int
;	O
optind	int
++	O
)	O
{	O
if	O
(	O
!	O
argv	pointer
[	O
optind	int
]	O
[	O
0	int
]	O
||	O
argv	pointer
[	O
optind	int
]	O
[	O
1	int
]	O
!=	O
':'	O
)	O
{	O
usage	function
(	O
1	int
)	O
;	O
}	O
drive	char
=	O
ch_toupper	function
(	O
argv	pointer
[	O
optind	int
]	O
[	O
0	int
]	O
)	O
;	O
}	O
}	O
do_mclasserase	function
(	O
drive	char
,	O
debug	int
)	O
;	O
}	O
