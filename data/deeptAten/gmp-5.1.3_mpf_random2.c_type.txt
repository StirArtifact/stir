void	O
mpf_random2	O
(	O
mpf_ptr	pointer
x	pointer
,	O
mp_size_t	long
xs	long
,	O
mp_exp_t	long
exp	int
)	O
{	O
mp_size_t	long
xn	long
;	O
mp_size_t	long
prec	int
;	O
mp_limb_t	long
elimb	long
;	O
xn	long
=	O
ABS	O
(	O
xs	long
)	O
;	O
prec	int
=	O
PREC	O
(	O
x	pointer
)	O
;	O
if	O
(	O
xn	long
==	O
0	int
)	O
{	O
EXP	O
(	O
x	pointer
)	O
=	O
0	int
;	O
SIZ	O
(	O
x	pointer
)	O
=	O
0	int
;	O
return	O
;	O
}	O
if	O
(	O
xn	long
>	O
prec	int
+	O
1	int
)	O
xn	long
=	O
prec	int
+	O
1	int
;	O
mpn_random2	O
(	O
PTR	O
(	O
x	pointer
)	O
,	O
xn	long
)	O
;	O
_gmp_rand	O
(	O
&	O
elimb	long
,	O
RANDS	O
,	O
GMP_NUMB_BITS	O
)	O
;	O
exp	int
=	O
ABS	O
(	O
exp	int
)	O
;	O
exp	int
=	O
elimb	long
%	O
(	O
2	int
*	O
exp	int
+	O
1	int
)	O
-	O
exp	int
;	O
EXP	O
(	O
x	pointer
)	O
=	O
exp	int
;	O
SIZ	O
(	O
x	pointer
)	O
=	O
xs	long
<	O
0	int
?	O
-	O
xn	long
:	O
xn	long
;	O
}	O
