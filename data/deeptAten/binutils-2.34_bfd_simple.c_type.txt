static	O
void	O
simple_dummy_warning	function
(	O
struct	O
bfd_link_info	struct
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
warning	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
symbol	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
address	long
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
static	O
void	O
simple_dummy_undefined_symbol	function
(	O
struct	O
bfd_link_info	struct
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
name	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
address	long
ATTRIBUTE_UNUSED	O
,	O
bfd_boolean	int
fatal	int
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
static	O
void	O
simple_dummy_reloc_overflow	function
(	O
struct	O
bfd_link_info	struct
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
,	O
struct	O
bfd_link_hash_entry	struct
*	O
entry	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
name	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
reloc_name	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
addend	long
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
address	long
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
static	O
void	O
simple_dummy_reloc_dangerous	function
(	O
struct	O
bfd_link_info	struct
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
message	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
address	long
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
static	O
void	O
simple_dummy_unattached_reloc	function
(	O
struct	O
bfd_link_info	struct
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
,	O
const	O
char	O
*	O
name	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
address	long
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
static	O
void	O
simple_dummy_multiple_definition	function
(	O
struct	O
bfd_link_info	struct
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
,	O
struct	O
bfd_link_hash_entry	struct
*	O
h	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
nbfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
nsec	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_vma	long
nval	long
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
static	O
void	O
simple_dummy_einfo	function
(	O
const	O
char	O
*	O
fmt	pointer
ATTRIBUTE_UNUSED	O
,	O
...	O
)	O
{	O
}	O
struct	O
saved_output_info	struct
{	O
bfd_vma	long
offset	long
;	O
asection	struct
*	O
section	pointer
;	O
}	O
;	O
struct	O
saved_offsets	struct
{	O
unsigned	O
int	O
section_count	int
;	O
struct	O
saved_output_info	struct
*	O
sections	pointer
;	O
}	O
;	O
static	O
void	O
simple_save_output_info	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
,	O
void	O
*	O
ptr	pointer
)	O
{	O
struct	O
saved_offsets	struct
*	O
saved_offsets	struct
=	O
(	O
struct	O
saved_offsets	struct
*	O
)	O
ptr	pointer
;	O
struct	O
saved_output_info	struct
*	O
output_info	pointer
;	O
output_info	pointer
=	O
&	O
saved_offsets	struct
->	O
sections	pointer
[	O
section	pointer
->	O
index	function
]	O
;	O
output_info	pointer
->	O
offset	long
=	O
section	pointer
->	O
output_offset	long
;	O
output_info	pointer
->	O
section	pointer
=	O
section	pointer
->	O
output_section	pointer
;	O
if	O
(	O
(	O
section	pointer
->	O
flags	int
&	O
SEC_DEBUGGING	int
)	O
!=	O
0	int
||	O
section	pointer
->	O
output_section	pointer
==	O
NULL	O
)	O
{	O
section	pointer
->	O
output_offset	long
=	O
0	int
;	O
section	pointer
->	O
output_section	pointer
=	O
section	pointer
;	O
}	O
}	O
static	O
void	O
simple_restore_output_info	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
section	pointer
,	O
void	O
*	O
ptr	pointer
)	O
{	O
struct	O
saved_offsets	struct
*	O
saved_offsets	struct
=	O
(	O
struct	O
saved_offsets	struct
*	O
)	O
ptr	pointer
;	O
struct	O
saved_output_info	struct
*	O
output_info	pointer
;	O
if	O
(	O
section	pointer
->	O
index	function
>=	O
saved_offsets	struct
->	O
section_count	int
)	O
return	O
;	O
output_info	pointer
=	O
&	O
saved_offsets	struct
->	O
sections	pointer
[	O
section	pointer
->	O
index	function
]	O
;	O
section	pointer
->	O
output_offset	long
=	O
output_info	pointer
->	O
offset	long
;	O
section	pointer
->	O
output_section	pointer
=	O
output_info	pointer
->	O
section	pointer
;	O
}	O
bfd_byte	char
*	O
bfd_simple_get_relocated_section_contents	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
asection	struct
*	O
sec	pointer
,	O
bfd_byte	char
*	O
outbuf	pointer
,	O
asymbol	struct
*	O
*	O
symbol_table	pointer
)	O
{	O
struct	O
bfd_link_info	struct
link_info	pointer
;	O
struct	O
bfd_link_order	struct
link_order	pointer
;	O
struct	O
bfd_link_callbacks	struct
callbacks	pointer
;	O
bfd_byte	char
*	O
contents	pointer
,	O
*	O
data	pointer
;	O
int	O
storage_needed	int
;	O
struct	O
saved_offsets	struct
saved_offsets	struct
;	O
bfd	struct
*	O
link_next	pointer
;	O
if	O
(	O
(	O
abfd	pointer
->	O
flags	int
&	O
(	O
HAS_RELOC	int
|	O
EXEC_P	int
|	O
DYNAMIC	int
)	O
)	O
!=	O
HAS_RELOC	int
||	O
!	O
(	O
sec	pointer
->	O
flags	int
&	O
SEC_RELOC	int
)	O
)	O
{	O
contents	pointer
=	O
outbuf	pointer
;	O
if	O
(	O
!	O
bfd_get_full_section_contents	function
(	O
abfd	pointer
,	O
sec	pointer
,	O
&	O
contents	pointer
)	O
)	O
return	O
NULL	O
;	O
return	O
contents	pointer
;	O
}	O
memset	function
(	O
&	O
link_info	pointer
,	O
0	int
,	O
sizeof	O
(	O
link_info	pointer
)	O
)	O
;	O
link_info	pointer
.	O
output_bfd	pointer
=	O
abfd	pointer
;	O
link_info	pointer
.	O
input_bfds	pointer
=	O
abfd	pointer
;	O
link_info	pointer
.	O
input_bfds_tail	pointer
=	O
&	O
abfd	pointer
->	O
link	function
.	O
next	pointer
;	O
link_next	pointer
=	O
abfd	pointer
->	O
link	function
.	O
next	pointer
;	O
abfd	pointer
->	O
link	function
.	O
next	pointer
=	O
NULL	O
;	O
link_info	pointer
.	O
hash	long
=	O
_bfd_generic_link_hash_table_create	function
(	O
abfd	pointer
)	O
;	O
link_info	pointer
.	O
callbacks	pointer
=	O
&	O
callbacks	pointer
;	O
callbacks	pointer
.	O
warning	pointer
=	O
simple_dummy_warning	function
;	O
callbacks	pointer
.	O
undefined_symbol	pointer
=	O
simple_dummy_undefined_symbol	function
;	O
callbacks	pointer
.	O
reloc_overflow	pointer
=	O
simple_dummy_reloc_overflow	function
;	O
callbacks	pointer
.	O
reloc_dangerous	pointer
=	O
simple_dummy_reloc_dangerous	function
;	O
callbacks	pointer
.	O
unattached_reloc	pointer
=	O
simple_dummy_unattached_reloc	function
;	O
callbacks	pointer
.	O
multiple_definition	pointer
=	O
simple_dummy_multiple_definition	function
;	O
callbacks	pointer
.	O
einfo	pointer
=	O
simple_dummy_einfo	function
;	O
memset	function
(	O
&	O
link_order	pointer
,	O
0	int
,	O
sizeof	O
(	O
link_order	pointer
)	O
)	O
;	O
link_order	pointer
.	O
next	pointer
=	O
NULL	O
;	O
link_order	pointer
.	O
type	enum
=	O
bfd_indirect_link_order	int
;	O
link_order	pointer
.	O
offset	long
=	O
0	int
;	O
link_order	pointer
.	O
size	long
=	O
sec	pointer
->	O
size	long
;	O
link_order	pointer
.	O
u	union
.	O
indirect	struct
.	O
section	pointer
=	O
sec	pointer
;	O
data	pointer
=	O
NULL	O
;	O
if	O
(	O
outbuf	pointer
==	O
NULL	O
)	O
{	O
bfd_size_type	long
amt	long
=	O
sec	pointer
->	O
rawsize	long
>	O
sec	pointer
->	O
size	long
?	O
sec	pointer
->	O
rawsize	long
:	O
sec	pointer
->	O
size	long
;	O
data	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
bfd_malloc	function
(	O
amt	long
)	O
;	O
if	O
(	O
data	pointer
==	O
NULL	O
)	O
{	O
_bfd_generic_link_hash_table_free	function
(	O
abfd	pointer
)	O
;	O
abfd	pointer
->	O
link	function
.	O
next	pointer
=	O
link_next	pointer
;	O
return	O
NULL	O
;	O
}	O
outbuf	pointer
=	O
data	pointer
;	O
}	O
saved_offsets	struct
.	O
section_count	int
=	O
abfd	pointer
->	O
section_count	int
;	O
saved_offsets	struct
.	O
sections	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
saved_offsets	struct
.	O
sections	pointer
)	O
*	O
saved_offsets	struct
.	O
section_count	int
)	O
;	O
if	O
(	O
saved_offsets	struct
.	O
sections	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
data	pointer
)	O
free	function
(	O
data	pointer
)	O
;	O
_bfd_generic_link_hash_table_free	function
(	O
abfd	pointer
)	O
;	O
abfd	pointer
->	O
link	function
.	O
next	pointer
=	O
link_next	pointer
;	O
return	O
NULL	O
;	O
}	O
bfd_map_over_sections	function
(	O
abfd	pointer
,	O
simple_save_output_info	function
,	O
&	O
saved_offsets	struct
)	O
;	O
if	O
(	O
symbol_table	pointer
==	O
NULL	O
)	O
{	O
_bfd_generic_link_add_symbols	function
(	O
abfd	pointer
,	O
&	O
link_info	pointer
)	O
;	O
storage_needed	int
=	O
bfd_get_symtab_upper_bound	O
(	O
abfd	pointer
)	O
;	O
symbol_table	pointer
=	O
(	O
asymbol	struct
*	O
*	O
)	O
bfd_malloc	function
(	O
storage_needed	int
)	O
;	O
bfd_canonicalize_symtab	O
(	O
abfd	pointer
,	O
symbol_table	pointer
)	O
;	O
}	O
else	O
storage_needed	int
=	O
0	int
;	O
contents	pointer
=	O
bfd_get_relocated_section_contents	function
(	O
abfd	pointer
,	O
&	O
link_info	pointer
,	O
&	O
link_order	pointer
,	O
outbuf	pointer
,	O
0	int
,	O
symbol_table	pointer
)	O
;	O
if	O
(	O
contents	pointer
==	O
NULL	O
&&	O
data	pointer
!=	O
NULL	O
)	O
free	function
(	O
data	pointer
)	O
;	O
bfd_map_over_sections	function
(	O
abfd	pointer
,	O
simple_restore_output_info	function
,	O
&	O
saved_offsets	struct
)	O
;	O
free	function
(	O
saved_offsets	struct
.	O
sections	pointer
)	O
;	O
_bfd_generic_link_hash_table_free	function
(	O
abfd	pointer
)	O
;	O
abfd	pointer
->	O
link	function
.	O
next	pointer
=	O
link_next	pointer
;	O
return	O
contents	pointer
;	O
}	O
