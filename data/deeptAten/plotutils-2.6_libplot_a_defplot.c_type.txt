const	O
Plotter	struct
_pl_a_default_plotter	struct
=	O
{	O
_pl_a_initialize	function
,	O
_pl_a_terminate	function
,	O
_pl_a_begin_page	function
,	O
_pl_a_erase_page	function
,	O
_pl_a_end_page	function
,	O
_pl_g_push_state	function
,	O
_pl_g_pop_state	function
,	O
_pl_a_paint_path	function
,	O
_pl_a_paint_paths	function
,	O
_pl_g_path_is_flushable	function
,	O
_pl_g_maybe_prepaint_segments	function
,	O
_pl_g_paint_marker	function
,	O
_pl_a_paint_point	function
,	O
_pl_g_paint_text_string_with_escapes	function
,	O
_pl_a_paint_text_string	function
,	O
_pl_g_get_text_width	function
,	O
_pl_g_retrieve_font	function
,	O
_pl_g_flush_output	function
,	O
_pl_g_warning	function
,	O
_pl_g_error	function
,	O
}	O
;	O
void	O
_pl_a_initialize	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
_pl_g_initialize	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
type	enum
=	O
PL_AI	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
output_model	enum
=	O
PL_OUTPUT_ONE_PAGE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_wide_lines	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_dash_array	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_solid_fill	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_odd_winding_fill	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_nonzero_winding_fill	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_settable_bg	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_escaped_string_support	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_ps_fonts	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_pcl_fonts	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_stick_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_extra_stick_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_other_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
default_font_type	int
=	O
PL_F_POSTSCRIPT	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
pcl_before_ps	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
issue_font_warning	enum
=	O
true	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_horizontal_justification	enum
=	O
true	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_vertical_justification	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
=	O
true	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_arc_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_quad_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_cubic_scaling	enum
=	O
AS_ANY	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_box_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_circle_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellipse_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
display_model_type	int
=	O
(	O
int	O
)	O
DISP_MODEL_PHYSICAL	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
=	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
flipped_y	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
imin	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
imax	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
jmin	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
jmax	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymin	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymax	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
=	O
(	O
plPageData	struct
*	O
)	O
NULL	O
;	O
_plotter	pointer
->	O
ai_version	int
=	O
AI_VERSION_5	int
;	O
_plotter	pointer
->	O
ai_pen_cyan	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
ai_pen_magenta	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
ai_pen_yellow	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
ai_pen_black	double
=	O
1.0	int
;	O
_plotter	pointer
->	O
ai_fill_cyan	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
ai_fill_magenta	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
ai_fill_yellow	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
ai_fill_black	double
=	O
1.0	int
;	O
_plotter	pointer
->	O
ai_cyan_used	enum
=	O
false	int
;	O
_plotter	pointer
->	O
ai_magenta_used	enum
=	O
false	int
;	O
_plotter	pointer
->	O
ai_yellow_used	enum
=	O
false	int
;	O
_plotter	pointer
->	O
ai_black_used	enum
=	O
false	int
;	O
_plotter	pointer
->	O
ai_cap_style	int
=	O
AI_LINE_CAP_BUTT	int
;	O
_plotter	pointer
->	O
ai_join_style	int
=	O
AI_LINE_JOIN_MITER	int
;	O
_plotter	pointer
->	O
ai_miter_limit	double
=	O
4.0	int
;	O
_plotter	pointer
->	O
ai_line_type	int
=	O
PL_L_SOLID	int
;	O
_plotter	pointer
->	O
ai_line_width	double
=	O
1.0	int
;	O
_plotter	pointer
->	O
ai_fill_rule_type	int
=	O
0	int
;	O
{	O
const	O
char	O
*	O
version_s	pointer
;	O
version_s	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_get_plot_param	function
(	O
_plotter	pointer
->	O
data	pointer
,	O
"AI_VERSION"	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
version_s	pointer
,	O
"3"	pointer
)	O
==	O
0	int
)	O
_plotter	pointer
->	O
ai_version	int
=	O
AI_VERSION_3	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
version_s	pointer
,	O
"5"	pointer
)	O
==	O
0	int
)	O
_plotter	pointer
->	O
ai_version	int
=	O
AI_VERSION_5	int
;	O
else	O
{	O
version_s	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_get_default_plot_param	function
(	O
"AI_VERSION"	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
version_s	pointer
,	O
"3"	pointer
)	O
==	O
0	int
)	O
_plotter	pointer
->	O
ai_version	int
=	O
AI_VERSION_3	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
version_s	pointer
,	O
"5"	pointer
)	O
==	O
0	int
)	O
_plotter	pointer
->	O
ai_version	int
=	O
AI_VERSION_5	int
;	O
}	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
==	O
AI_VERSION_3	int
)	O
_plotter	pointer
->	O
data	pointer
->	O
have_odd_winding_fill	int
=	O
0	int
;	O
{	O
_set_page_type	function
(	O
_plotter	pointer
->	O
data	pointer
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
=	O
72	int
*	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_xorigin	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_xoffset	double
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	double
=	O
72	int
*	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_xorigin	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_xoffset	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_xsize	double
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymin	double
=	O
72	int
*	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_yorigin	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_yoffset	double
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymax	double
=	O
72	int
*	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_yorigin	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_yoffset	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
viewport_ysize	double
)	O
;	O
}	O
_compute_ndc_to_device_map	function
(	O
_plotter	pointer
->	O
data	pointer
)	O
;	O
}	O
void	O
_pl_a_terminate	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
_pl_g_terminate	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
}	O
