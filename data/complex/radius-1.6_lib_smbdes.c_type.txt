static	O
int	O
perm1	array(int)
[	O
56	int
]	O
=	O
{	O
57	int
,	O
49	int
,	O
41	int
,	O
33	int
,	O
25	int
,	O
17	int
,	O
9	int
,	O
1	int
,	O
58	int
,	O
50	int
,	O
42	int
,	O
34	int
,	O
26	int
,	O
18	int
,	O
10	int
,	O
2	int
,	O
59	int
,	O
51	int
,	O
43	int
,	O
35	int
,	O
27	int
,	O
19	int
,	O
11	int
,	O
3	int
,	O
60	int
,	O
52	int
,	O
44	int
,	O
36	int
,	O
63	int
,	O
55	int
,	O
47	int
,	O
39	int
,	O
31	int
,	O
23	int
,	O
15	int
,	O
7	int
,	O
62	int
,	O
54	int
,	O
46	int
,	O
38	int
,	O
30	int
,	O
22	int
,	O
14	int
,	O
6	int
,	O
61	int
,	O
53	int
,	O
45	int
,	O
37	int
,	O
29	int
,	O
21	int
,	O
13	int
,	O
5	int
,	O
28	int
,	O
20	int
,	O
12	int
,	O
4	int
}	O
;	O
static	O
int	O
perm2	array(int)
[	O
48	int
]	O
=	O
{	O
14	int
,	O
17	int
,	O
11	int
,	O
24	int
,	O
1	int
,	O
5	int
,	O
3	int
,	O
28	int
,	O
15	int
,	O
6	int
,	O
21	int
,	O
10	int
,	O
23	int
,	O
19	int
,	O
12	int
,	O
4	int
,	O
26	int
,	O
8	int
,	O
16	int
,	O
7	int
,	O
27	int
,	O
20	int
,	O
13	int
,	O
2	int
,	O
41	int
,	O
52	int
,	O
31	int
,	O
37	int
,	O
47	int
,	O
55	int
,	O
30	int
,	O
40	int
,	O
51	int
,	O
45	int
,	O
33	int
,	O
48	int
,	O
44	int
,	O
49	int
,	O
39	int
,	O
56	int
,	O
34	int
,	O
53	int
,	O
46	int
,	O
42	int
,	O
50	int
,	O
36	int
,	O
29	int
,	O
32	int
}	O
;	O
static	O
int	O
perm3	array(int)
[	O
64	int
]	O
=	O
{	O
58	int
,	O
50	int
,	O
42	int
,	O
34	int
,	O
26	int
,	O
18	int
,	O
10	int
,	O
2	int
,	O
60	int
,	O
52	int
,	O
44	int
,	O
36	int
,	O
28	int
,	O
20	int
,	O
12	int
,	O
4	int
,	O
62	int
,	O
54	int
,	O
46	int
,	O
38	int
,	O
30	int
,	O
22	int
,	O
14	int
,	O
6	int
,	O
64	int
,	O
56	int
,	O
48	int
,	O
40	int
,	O
32	int
,	O
24	int
,	O
16	int
,	O
8	int
,	O
57	int
,	O
49	int
,	O
41	int
,	O
33	int
,	O
25	int
,	O
17	int
,	O
9	int
,	O
1	int
,	O
59	int
,	O
51	int
,	O
43	int
,	O
35	int
,	O
27	int
,	O
19	int
,	O
11	int
,	O
3	int
,	O
61	int
,	O
53	int
,	O
45	int
,	O
37	int
,	O
29	int
,	O
21	int
,	O
13	int
,	O
5	int
,	O
63	int
,	O
55	int
,	O
47	int
,	O
39	int
,	O
31	int
,	O
23	int
,	O
15	int
,	O
7	int
}	O
;	O
static	O
int	O
perm4	array(int)
[	O
48	int
]	O
=	O
{	O
32	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
13	int
,	O
12	int
,	O
13	int
,	O
14	int
,	O
15	int
,	O
16	int
,	O
17	int
,	O
16	int
,	O
17	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
21	int
,	O
20	int
,	O
21	int
,	O
22	int
,	O
23	int
,	O
24	int
,	O
25	int
,	O
24	int
,	O
25	int
,	O
26	int
,	O
27	int
,	O
28	int
,	O
29	int
,	O
28	int
,	O
29	int
,	O
30	int
,	O
31	int
,	O
32	int
,	O
1	int
}	O
;	O
static	O
int	O
perm5	array(int)
[	O
32	int
]	O
=	O
{	O
16	int
,	O
7	int
,	O
20	int
,	O
21	int
,	O
29	int
,	O
12	int
,	O
28	int
,	O
17	int
,	O
1	int
,	O
15	int
,	O
23	int
,	O
26	int
,	O
5	int
,	O
18	int
,	O
31	int
,	O
10	int
,	O
2	int
,	O
8	int
,	O
24	int
,	O
14	int
,	O
32	int
,	O
27	int
,	O
3	int
,	O
9	int
,	O
19	int
,	O
13	int
,	O
30	int
,	O
6	int
,	O
22	int
,	O
11	int
,	O
4	int
,	O
25	int
}	O
;	O
static	O
int	O
perm6	array(int)
[	O
64	int
]	O
=	O
{	O
40	int
,	O
8	int
,	O
48	int
,	O
16	int
,	O
56	int
,	O
24	int
,	O
64	int
,	O
32	int
,	O
39	int
,	O
7	int
,	O
47	int
,	O
15	int
,	O
55	int
,	O
23	int
,	O
63	int
,	O
31	int
,	O
38	int
,	O
6	int
,	O
46	int
,	O
14	int
,	O
54	int
,	O
22	int
,	O
62	int
,	O
30	int
,	O
37	int
,	O
5	int
,	O
45	int
,	O
13	int
,	O
53	int
,	O
21	int
,	O
61	int
,	O
29	int
,	O
36	int
,	O
4	int
,	O
44	int
,	O
12	int
,	O
52	int
,	O
20	int
,	O
60	int
,	O
28	int
,	O
35	int
,	O
3	int
,	O
43	int
,	O
11	int
,	O
51	int
,	O
19	int
,	O
59	int
,	O
27	int
,	O
34	int
,	O
2	int
,	O
42	int
,	O
10	int
,	O
50	int
,	O
18	int
,	O
58	int
,	O
26	int
,	O
33	int
,	O
1	int
,	O
41	int
,	O
9	int
,	O
49	int
,	O
17	int
,	O
57	int
,	O
25	int
}	O
;	O
static	O
int	O
sc	array(int)
[	O
16	int
]	O
=	O
{	O
1	int
,	O
1	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
}	O
;	O
static	O
int	O
sbox	array(array(array(int)))
[	O
8	int
]	O
[	O
4	int
]	O
[	O
16	int
]	O
=	O
{	O
{	O
{	O
14	int
,	O
4	int
,	O
13	int
,	O
1	int
,	O
2	int
,	O
15	int
,	O
11	int
,	O
8	int
,	O
3	int
,	O
10	int
,	O
6	int
,	O
12	int
,	O
5	int
,	O
9	int
,	O
0	int
,	O
7	int
}	O
,	O
{	O
0	int
,	O
15	int
,	O
7	int
,	O
4	int
,	O
14	int
,	O
2	int
,	O
13	int
,	O
1	int
,	O
10	int
,	O
6	int
,	O
12	int
,	O
11	int
,	O
9	int
,	O
5	int
,	O
3	int
,	O
8	int
}	O
,	O
{	O
4	int
,	O
1	int
,	O
14	int
,	O
8	int
,	O
13	int
,	O
6	int
,	O
2	int
,	O
11	int
,	O
15	int
,	O
12	int
,	O
9	int
,	O
7	int
,	O
3	int
,	O
10	int
,	O
5	int
,	O
0	int
}	O
,	O
{	O
15	int
,	O
12	int
,	O
8	int
,	O
2	int
,	O
4	int
,	O
9	int
,	O
1	int
,	O
7	int
,	O
5	int
,	O
11	int
,	O
3	int
,	O
14	int
,	O
10	int
,	O
0	int
,	O
6	int
,	O
13	int
}	O
}	O
,	O
{	O
{	O
15	int
,	O
1	int
,	O
8	int
,	O
14	int
,	O
6	int
,	O
11	int
,	O
3	int
,	O
4	int
,	O
9	int
,	O
7	int
,	O
2	int
,	O
13	int
,	O
12	int
,	O
0	int
,	O
5	int
,	O
10	int
}	O
,	O
{	O
3	int
,	O
13	int
,	O
4	int
,	O
7	int
,	O
15	int
,	O
2	int
,	O
8	int
,	O
14	int
,	O
12	int
,	O
0	int
,	O
1	int
,	O
10	int
,	O
6	int
,	O
9	int
,	O
11	int
,	O
5	int
}	O
,	O
{	O
0	int
,	O
14	int
,	O
7	int
,	O
11	int
,	O
10	int
,	O
4	int
,	O
13	int
,	O
1	int
,	O
5	int
,	O
8	int
,	O
12	int
,	O
6	int
,	O
9	int
,	O
3	int
,	O
2	int
,	O
15	int
}	O
,	O
{	O
13	int
,	O
8	int
,	O
10	int
,	O
1	int
,	O
3	int
,	O
15	int
,	O
4	int
,	O
2	int
,	O
11	int
,	O
6	int
,	O
7	int
,	O
12	int
,	O
0	int
,	O
5	int
,	O
14	int
,	O
9	int
}	O
}	O
,	O
{	O
{	O
10	int
,	O
0	int
,	O
9	int
,	O
14	int
,	O
6	int
,	O
3	int
,	O
15	int
,	O
5	int
,	O
1	int
,	O
13	int
,	O
12	int
,	O
7	int
,	O
11	int
,	O
4	int
,	O
2	int
,	O
8	int
}	O
,	O
{	O
13	int
,	O
7	int
,	O
0	int
,	O
9	int
,	O
3	int
,	O
4	int
,	O
6	int
,	O
10	int
,	O
2	int
,	O
8	int
,	O
5	int
,	O
14	int
,	O
12	int
,	O
11	int
,	O
15	int
,	O
1	int
}	O
,	O
{	O
13	int
,	O
6	int
,	O
4	int
,	O
9	int
,	O
8	int
,	O
15	int
,	O
3	int
,	O
0	int
,	O
11	int
,	O
1	int
,	O
2	int
,	O
12	int
,	O
5	int
,	O
10	int
,	O
14	int
,	O
7	int
}	O
,	O
{	O
1	int
,	O
10	int
,	O
13	int
,	O
0	int
,	O
6	int
,	O
9	int
,	O
8	int
,	O
7	int
,	O
4	int
,	O
15	int
,	O
14	int
,	O
3	int
,	O
11	int
,	O
5	int
,	O
2	int
,	O
12	int
}	O
}	O
,	O
{	O
{	O
7	int
,	O
13	int
,	O
14	int
,	O
3	int
,	O
0	int
,	O
6	int
,	O
9	int
,	O
10	int
,	O
1	int
,	O
2	int
,	O
8	int
,	O
5	int
,	O
11	int
,	O
12	int
,	O
4	int
,	O
15	int
}	O
,	O
{	O
13	int
,	O
8	int
,	O
11	int
,	O
5	int
,	O
6	int
,	O
15	int
,	O
0	int
,	O
3	int
,	O
4	int
,	O
7	int
,	O
2	int
,	O
12	int
,	O
1	int
,	O
10	int
,	O
14	int
,	O
9	int
}	O
,	O
{	O
10	int
,	O
6	int
,	O
9	int
,	O
0	int
,	O
12	int
,	O
11	int
,	O
7	int
,	O
13	int
,	O
15	int
,	O
1	int
,	O
3	int
,	O
14	int
,	O
5	int
,	O
2	int
,	O
8	int
,	O
4	int
}	O
,	O
{	O
3	int
,	O
15	int
,	O
0	int
,	O
6	int
,	O
10	int
,	O
1	int
,	O
13	int
,	O
8	int
,	O
9	int
,	O
4	int
,	O
5	int
,	O
11	int
,	O
12	int
,	O
7	int
,	O
2	int
,	O
14	int
}	O
}	O
,	O
{	O
{	O
2	int
,	O
12	int
,	O
4	int
,	O
1	int
,	O
7	int
,	O
10	int
,	O
11	int
,	O
6	int
,	O
8	int
,	O
5	int
,	O
3	int
,	O
15	int
,	O
13	int
,	O
0	int
,	O
14	int
,	O
9	int
}	O
,	O
{	O
14	int
,	O
11	int
,	O
2	int
,	O
12	int
,	O
4	int
,	O
7	int
,	O
13	int
,	O
1	int
,	O
5	int
,	O
0	int
,	O
15	int
,	O
10	int
,	O
3	int
,	O
9	int
,	O
8	int
,	O
6	int
}	O
,	O
{	O
4	int
,	O
2	int
,	O
1	int
,	O
11	int
,	O
10	int
,	O
13	int
,	O
7	int
,	O
8	int
,	O
15	int
,	O
9	int
,	O
12	int
,	O
5	int
,	O
6	int
,	O
3	int
,	O
0	int
,	O
14	int
}	O
,	O
{	O
11	int
,	O
8	int
,	O
12	int
,	O
7	int
,	O
1	int
,	O
14	int
,	O
2	int
,	O
13	int
,	O
6	int
,	O
15	int
,	O
0	int
,	O
9	int
,	O
10	int
,	O
4	int
,	O
5	int
,	O
3	int
}	O
}	O
,	O
{	O
{	O
12	int
,	O
1	int
,	O
10	int
,	O
15	int
,	O
9	int
,	O
2	int
,	O
6	int
,	O
8	int
,	O
0	int
,	O
13	int
,	O
3	int
,	O
4	int
,	O
14	int
,	O
7	int
,	O
5	int
,	O
11	int
}	O
,	O
{	O
10	int
,	O
15	int
,	O
4	int
,	O
2	int
,	O
7	int
,	O
12	int
,	O
9	int
,	O
5	int
,	O
6	int
,	O
1	int
,	O
13	int
,	O
14	int
,	O
0	int
,	O
11	int
,	O
3	int
,	O
8	int
}	O
,	O
{	O
9	int
,	O
14	int
,	O
15	int
,	O
5	int
,	O
2	int
,	O
8	int
,	O
12	int
,	O
3	int
,	O
7	int
,	O
0	int
,	O
4	int
,	O
10	int
,	O
1	int
,	O
13	int
,	O
11	int
,	O
6	int
}	O
,	O
{	O
4	int
,	O
3	int
,	O
2	int
,	O
12	int
,	O
9	int
,	O
5	int
,	O
15	int
,	O
10	int
,	O
11	int
,	O
14	int
,	O
1	int
,	O
7	int
,	O
6	int
,	O
0	int
,	O
8	int
,	O
13	int
}	O
}	O
,	O
{	O
{	O
4	int
,	O
11	int
,	O
2	int
,	O
14	int
,	O
15	int
,	O
0	int
,	O
8	int
,	O
13	int
,	O
3	int
,	O
12	int
,	O
9	int
,	O
7	int
,	O
5	int
,	O
10	int
,	O
6	int
,	O
1	int
}	O
,	O
{	O
13	int
,	O
0	int
,	O
11	int
,	O
7	int
,	O
4	int
,	O
9	int
,	O
1	int
,	O
10	int
,	O
14	int
,	O
3	int
,	O
5	int
,	O
12	int
,	O
2	int
,	O
15	int
,	O
8	int
,	O
6	int
}	O
,	O
{	O
1	int
,	O
4	int
,	O
11	int
,	O
13	int
,	O
12	int
,	O
3	int
,	O
7	int
,	O
14	int
,	O
10	int
,	O
15	int
,	O
6	int
,	O
8	int
,	O
0	int
,	O
5	int
,	O
9	int
,	O
2	int
}	O
,	O
{	O
6	int
,	O
11	int
,	O
13	int
,	O
8	int
,	O
1	int
,	O
4	int
,	O
10	int
,	O
7	int
,	O
9	int
,	O
5	int
,	O
0	int
,	O
15	int
,	O
14	int
,	O
2	int
,	O
3	int
,	O
12	int
}	O
}	O
,	O
{	O
{	O
13	int
,	O
2	int
,	O
8	int
,	O
4	int
,	O
6	int
,	O
15	int
,	O
11	int
,	O
1	int
,	O
10	int
,	O
9	int
,	O
3	int
,	O
14	int
,	O
5	int
,	O
0	int
,	O
12	int
,	O
7	int
}	O
,	O
{	O
1	int
,	O
15	int
,	O
13	int
,	O
8	int
,	O
10	int
,	O
3	int
,	O
7	int
,	O
4	int
,	O
12	int
,	O
5	int
,	O
6	int
,	O
11	int
,	O
0	int
,	O
14	int
,	O
9	int
,	O
2	int
}	O
,	O
{	O
7	int
,	O
11	int
,	O
4	int
,	O
1	int
,	O
9	int
,	O
12	int
,	O
14	int
,	O
2	int
,	O
0	int
,	O
6	int
,	O
10	int
,	O
13	int
,	O
15	int
,	O
3	int
,	O
5	int
,	O
8	int
}	O
,	O
{	O
2	int
,	O
1	int
,	O
14	int
,	O
7	int
,	O
4	int
,	O
10	int
,	O
8	int
,	O
13	int
,	O
15	int
,	O
12	int
,	O
9	int
,	O
0	int
,	O
3	int
,	O
5	int
,	O
6	int
,	O
11	int
}	O
}	O
}	O
;	O
static	O
void	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
char	O
*	O
out	*(char)
,	O
char	O
*	O
in	*(char)
,	O
int	O
*	O
p	*(int)
,	O
int	O
n	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
out	*(char)
[	O
i	int
]	O
=	O
in	*(char)
[	O
p	*(int)
[	O
i	int
]	O
-	O
1	int
]	O
;	O
}	O
static	O
void	O
lshift	(*(char),int,int)->(void)
(	O
char	O
*	O
d	*(char)
,	O
int	O
count	int
,	O
int	O
n	int
)	O
{	O
char	O
out	*(char)
[	O
64	int
]	O
;	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
out	*(char)
[	O
i	int
]	O
=	O
d	*(char)
[	O
(	O
i	int
+	O
count	int
)	O
%	O
n	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
d	*(char)
[	O
i	int
]	O
=	O
out	*(char)
[	O
i	int
]	O
;	O
}	O
static	O
void	O
concat	(*(char),*(char),*(char),int,int)->(void)
(	O
char	O
*	O
out	*(char)
,	O
char	O
*	O
in1	*(char)
,	O
char	O
*	O
in2	*(char)
,	O
int	O
l1	int
,	O
int	O
l2	int
)	O
{	O
while	O
(	O
l1	int
--	O
)	O
*	O
out	*(char)
++	O
=	O
*	O
in1	*(char)
++	O
;	O
while	O
(	O
l2	int
--	O
)	O
*	O
out	*(char)
++	O
=	O
*	O
in2	*(char)
++	O
;	O
}	O
static	O
void	O
xor	(*(char),*(char),*(char),int)->(void)
(	O
char	O
*	O
out	*(char)
,	O
char	O
*	O
in1	*(char)
,	O
char	O
*	O
in2	*(char)
,	O
int	O
n	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
out	*(char)
[	O
i	int
]	O
=	O
in1	*(char)
[	O
i	int
]	O
^	O
in2	*(char)
[	O
i	int
]	O
;	O
}	O
static	O
void	O
dohash	(*(char),*(char),*(char))->(void)
(	O
char	O
*	O
out	*(char)
,	O
char	O
*	O
in	*(char)
,	O
char	O
*	O
key	*(char)
)	O
{	O
int	O
i	int
,	O
j	int
,	O
k	int
;	O
char	O
pk1	array(char)
[	O
56	int
]	O
;	O
char	O
c	array(char)
[	O
28	int
]	O
;	O
char	O
d	*(char)
[	O
28	int
]	O
;	O
char	O
cd	array(char)
[	O
56	int
]	O
;	O
char	O
ki	array(array(char))
[	O
16	int
]	O
[	O
48	int
]	O
;	O
char	O
pd1	array(char)
[	O
64	int
]	O
;	O
char	O
l	array(char)
[	O
32	int
]	O
,	O
r	array(char)
[	O
32	int
]	O
;	O
char	O
rl	array(char)
[	O
64	int
]	O
;	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
pk1	array(char)
,	O
key	*(char)
,	O
perm1	array(int)
,	O
56	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
28	int
;	O
i	int
++	O
)	O
c	array(char)
[	O
i	int
]	O
=	O
pk1	array(char)
[	O
i	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
28	int
;	O
i	int
++	O
)	O
d	*(char)
[	O
i	int
]	O
=	O
pk1	array(char)
[	O
i	int
+	O
28	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
16	int
;	O
i	int
++	O
)	O
{	O
lshift	(*(char),int,int)->(void)
(	O
c	array(char)
,	O
sc	array(int)
[	O
i	int
]	O
,	O
28	int
)	O
;	O
lshift	(*(char),int,int)->(void)
(	O
d	*(char)
,	O
sc	array(int)
[	O
i	int
]	O
,	O
28	int
)	O
;	O
concat	(*(char),*(char),*(char),int,int)->(void)
(	O
cd	array(char)
,	O
c	array(char)
,	O
d	*(char)
,	O
28	int
,	O
28	int
)	O
;	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
ki	array(array(char))
[	O
i	int
]	O
,	O
cd	array(char)
,	O
perm2	array(int)
,	O
48	int
)	O
;	O
}	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
pd1	array(char)
,	O
in	*(char)
,	O
perm3	array(int)
,	O
64	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
32	int
;	O
j	int
++	O
)	O
{	O
l	array(char)
[	O
j	int
]	O
=	O
pd1	array(char)
[	O
j	int
]	O
;	O
r	array(char)
[	O
j	int
]	O
=	O
pd1	array(char)
[	O
j	int
+	O
32	int
]	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
16	int
;	O
i	int
++	O
)	O
{	O
char	O
er	array(char)
[	O
48	int
]	O
;	O
char	O
erk	array(char)
[	O
48	int
]	O
;	O
char	O
b	array(array(char))
[	O
8	int
]	O
[	O
6	int
]	O
;	O
char	O
cb	array(char)
[	O
32	int
]	O
;	O
char	O
pcb	array(char)
[	O
32	int
]	O
;	O
char	O
r2	array(char)
[	O
32	int
]	O
;	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
er	array(char)
,	O
r	array(char)
,	O
perm4	array(int)
,	O
48	int
)	O
;	O
xor	(*(char),*(char),*(char),int)->(void)
(	O
erk	array(char)
,	O
er	array(char)
,	O
ki	array(array(char))
[	O
i	int
]	O
,	O
48	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
8	int
;	O
j	int
++	O
)	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
6	int
;	O
k	int
++	O
)	O
b	array(array(char))
[	O
j	int
]	O
[	O
k	int
]	O
=	O
erk	array(char)
[	O
j	int
*	O
6	int
+	O
k	int
]	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
8	int
;	O
j	int
++	O
)	O
{	O
int	O
m	int
,	O
n	int
;	O
m	int
=	O
(	O
b	array(array(char))
[	O
j	int
]	O
[	O
0	int
]	O
<<	O
1	int
)	O
|	O
b	array(array(char))
[	O
j	int
]	O
[	O
5	int
]	O
;	O
n	int
=	O
(	O
b	array(array(char))
[	O
j	int
]	O
[	O
1	int
]	O
<<	O
3	int
)	O
|	O
(	O
b	array(array(char))
[	O
j	int
]	O
[	O
2	int
]	O
<<	O
2	int
)	O
|	O
(	O
b	array(array(char))
[	O
j	int
]	O
[	O
3	int
]	O
<<	O
1	int
)	O
|	O
b	array(array(char))
[	O
j	int
]	O
[	O
4	int
]	O
;	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
4	int
;	O
k	int
++	O
)	O
b	array(array(char))
[	O
j	int
]	O
[	O
k	int
]	O
=	O
(	O
sbox	array(array(array(int)))
[	O
j	int
]	O
[	O
m	int
]	O
[	O
n	int
]	O
&	O
(	O
1	int
<<	O
(	O
3	int
-	O
k	int
)	O
)	O
)	O
?	O
1	int
:	O
0	int
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
8	int
;	O
j	int
++	O
)	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
4	int
;	O
k	int
++	O
)	O
cb	array(char)
[	O
j	int
*	O
4	int
+	O
k	int
]	O
=	O
b	array(array(char))
[	O
j	int
]	O
[	O
k	int
]	O
;	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
pcb	array(char)
,	O
cb	array(char)
,	O
perm5	array(int)
,	O
32	int
)	O
;	O
xor	(*(char),*(char),*(char),int)->(void)
(	O
r2	array(char)
,	O
l	array(char)
,	O
pcb	array(char)
,	O
32	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
32	int
;	O
j	int
++	O
)	O
l	array(char)
[	O
j	int
]	O
=	O
r	array(char)
[	O
j	int
]	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
32	int
;	O
j	int
++	O
)	O
r	array(char)
[	O
j	int
]	O
=	O
r2	array(char)
[	O
j	int
]	O
;	O
}	O
concat	(*(char),*(char),*(char),int,int)->(void)
(	O
rl	array(char)
,	O
r	array(char)
,	O
l	array(char)
,	O
32	int
,	O
32	int
)	O
;	O
permute	(*(char),*(char),*(int),int)->(void)
(	O
out	*(char)
,	O
rl	array(char)
,	O
perm6	array(int)
,	O
64	int
)	O
;	O
}	O
static	O
void	O
str_to_key	(*(char),*(char))->(void)
(	O
unsigned	O
char	O
*	O
str	*(char)
,	O
unsigned	O
char	O
*	O
key	*(char)
)	O
{	O
int	O
i	int
;	O
key	*(char)
[	O
0	int
]	O
=	O
str	*(char)
[	O
0	int
]	O
>>	O
1	int
;	O
key	*(char)
[	O
1	int
]	O
=	O
(	O
(	O
str	*(char)
[	O
0	int
]	O
&	O
0x01	int
)	O
<<	O
6	int
)	O
|	O
(	O
str	*(char)
[	O
1	int
]	O
>>	O
2	int
)	O
;	O
key	*(char)
[	O
2	int
]	O
=	O
(	O
(	O
str	*(char)
[	O
1	int
]	O
&	O
0x03	int
)	O
<<	O
5	int
)	O
|	O
(	O
str	*(char)
[	O
2	int
]	O
>>	O
3	int
)	O
;	O
key	*(char)
[	O
3	int
]	O
=	O
(	O
(	O
str	*(char)
[	O
2	int
]	O
&	O
0x07	int
)	O
<<	O
4	int
)	O
|	O
(	O
str	*(char)
[	O
3	int
]	O
>>	O
4	int
)	O
;	O
key	*(char)
[	O
4	int
]	O
=	O
(	O
(	O
str	*(char)
[	O
3	int
]	O
&	O
0x0F	int
)	O
<<	O
3	int
)	O
|	O
(	O
str	*(char)
[	O
4	int
]	O
>>	O
5	int
)	O
;	O
key	*(char)
[	O
5	int
]	O
=	O
(	O
(	O
str	*(char)
[	O
4	int
]	O
&	O
0x1F	int
)	O
<<	O
2	int
)	O
|	O
(	O
str	*(char)
[	O
5	int
]	O
>>	O
6	int
)	O
;	O
key	*(char)
[	O
6	int
]	O
=	O
(	O
(	O
str	*(char)
[	O
5	int
]	O
&	O
0x3F	int
)	O
<<	O
1	int
)	O
|	O
(	O
str	*(char)
[	O
6	int
]	O
>>	O
7	int
)	O
;	O
key	*(char)
[	O
7	int
]	O
=	O
str	*(char)
[	O
6	int
]	O
&	O
0x7F	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
8	int
;	O
i	int
++	O
)	O
{	O
key	*(char)
[	O
i	int
]	O
=	O
(	O
key	*(char)
[	O
i	int
]	O
<<	O
1	int
)	O
;	O
}	O
}	O
static	O
void	O
smbhash	(*(char),*(char),*(char))->(void)
(	O
unsigned	O
char	O
*	O
out	*(char)
,	O
const	O
unsigned	O
char	O
*	O
in	*(char)
,	O
unsigned	O
char	O
*	O
key	*(char)
)	O
{	O
int	O
i	int
;	O
char	O
outb	array(char)
[	O
64	int
]	O
;	O
char	O
inb	array(char)
[	O
64	int
]	O
;	O
char	O
keyb	array(char)
[	O
64	int
]	O
;	O
unsigned	O
char	O
key2	array(char)
[	O
8	int
]	O
;	O
str_to_key	(*(char),*(char))->(void)
(	O
key	*(char)
,	O
key2	array(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
64	int
;	O
i	int
++	O
)	O
{	O
inb	array(char)
[	O
i	int
]	O
=	O
(	O
in	*(char)
[	O
i	int
/	O
8	int
]	O
&	O
(	O
1	int
<<	O
(	O
7	int
-	O
(	O
i	int
%	O
8	int
)	O
)	O
)	O
)	O
?	O
1	int
:	O
0	int
;	O
keyb	array(char)
[	O
i	int
]	O
=	O
(	O
key2	array(char)
[	O
i	int
/	O
8	int
]	O
&	O
(	O
1	int
<<	O
(	O
7	int
-	O
(	O
i	int
%	O
8	int
)	O
)	O
)	O
)	O
?	O
1	int
:	O
0	int
;	O
outb	array(char)
[	O
i	int
]	O
=	O
0	int
;	O
}	O
dohash	(*(char),*(char),*(char))->(void)
(	O
outb	array(char)
,	O
inb	array(char)
,	O
keyb	array(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
8	int
;	O
i	int
++	O
)	O
{	O
out	*(char)
[	O
i	int
]	O
=	O
0	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
64	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
outb	array(char)
[	O
i	int
]	O
)	O
out	*(char)
[	O
i	int
/	O
8	int
]	O
|=	O
(	O
1	int
<<	O
(	O
7	int
-	O
(	O
i	int
%	O
8	int
)	O
)	O
)	O
;	O
}	O
}	O
void	O
grad_lmpwdhash	(*(char),*(char))->(void)
(	O
const	O
unsigned	O
char	O
*	O
password	*(char)
,	O
unsigned	O
char	O
*	O
lmhash	*(char)
)	O
{	O
int	O
i	int
;	O
unsigned	O
char	O
p14	array(char)
[	O
14	int
]	O
;	O
static	O
unsigned	O
char	O
sp8	array(char)
[	O
8	int
]	O
=	O
{	O
0x4b	int
,	O
0x47	int
,	O
0x53	int
,	O
0x21	int
,	O
0x40	int
,	O
0x23	int
,	O
0x24	int
,	O
0x25	int
}	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
p14	array(char)
,	O
0	int
,	O
sizeof	O
(	O
p14	array(char)
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
14	int
&&	O
password	*(char)
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
p14	array(char)
[	O
i	int
]	O
=	O
toupper	(int)->(int)
(	O
(	O
int	O
)	O
password	*(char)
[	O
i	int
]	O
)	O
;	O
}	O
smbhash	(*(char),*(char),*(char))->(void)
(	O
lmhash	*(char)
,	O
sp8	array(char)
,	O
p14	array(char)
)	O
;	O
smbhash	(*(char),*(char),*(char))->(void)
(	O
lmhash	*(char)
+	O
8	int
,	O
sp8	array(char)
,	O
p14	array(char)
+	O
7	int
)	O
;	O
}	O
void	O
grad_mschap	(*(char),*(char),*(char))->(void)
(	O
const	O
unsigned	O
char	O
*	O
win_password	*(char)
,	O
const	O
unsigned	O
char	O
*	O
challenge	*(char)
,	O
unsigned	O
char	O
*	O
response	*(char)
)	O
{	O
unsigned	O
char	O
p21	array(char)
[	O
21	int
]	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
p21	array(char)
,	O
0	int
,	O
sizeof	O
(	O
p21	array(char)
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p21	array(char)
,	O
win_password	*(char)
,	O
16	int
)	O
;	O
smbhash	(*(char),*(char),*(char))->(void)
(	O
response	*(char)
,	O
challenge	*(char)
,	O
p21	array(char)
)	O
;	O
smbhash	(*(char),*(char),*(char))->(void)
(	O
response	*(char)
+	O
8	int
,	O
challenge	*(char)
,	O
p21	array(char)
+	O
7	int
)	O
;	O
smbhash	(*(char),*(char),*(char))->(void)
(	O
response	*(char)
+	O
16	int
,	O
challenge	*(char)
,	O
p21	array(char)
+	O
14	int
)	O
;	O
}	O
