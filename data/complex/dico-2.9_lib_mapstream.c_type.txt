struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
{	O
char	O
*	O
filename	*(char)
;	O
int	O
fd	int
;	O
int	O
flags	int
;	O
char	O
*	O
start	*(int)
;	O
size_t	long
size	long
;	O
off_t	long
offset	long
;	O
}	O
;	O
static	O
int	O
_mapfile_close	(*(void))->(int)
(	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
mfs	*(struct(*(char),int,int,*(char),long,long))
=	O
data	*(void)
;	O
if	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
)	O
{	O
munmap	(*(void),long)->(int)
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
,	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
)	O
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
=	O
NULL	O
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
=	O
0	int
;	O
}	O
close	(int)->(int)
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
)	O
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
=	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
_mapfile_destroy	(*(void))->(int)
(	O
void	O
*	O
data	*(void)
)	O
{	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
str	*(struct)
=	O
data	*(void)
;	O
free	(*(void))->(void)
(	O
str	*(struct)
->	O
filename	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
str	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
_mapfile_open	(*(void),int)->(int)
(	O
void	O
*	O
data	*(void)
,	O
int	O
flags	int
)	O
{	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
mfs	*(struct(*(char),int,int,*(char),long,long))
=	O
data	*(void)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
int	O
mflags	int
=	O
0	int
,	O
oflags	int
=	O
0	int
;	O
_mapfile_close	(*(void))->(int)
(	O
data	*(void)
)	O
;	O
if	O
(	O
flags	int
&	O
DICO_STREAM_READ	int
)	O
mflags	int
|=	O
PROT_READ	int
;	O
if	O
(	O
flags	int
&	O
DICO_STREAM_WRITE	int
)	O
mflags	int
|=	O
PROT_WRITE	int
;	O
if	O
(	O
(	O
flags	int
&	O
(	O
DICO_STREAM_READ	int
|	O
DICO_STREAM_WRITE	int
)	O
)	O
==	O
(	O
DICO_STREAM_READ	int
|	O
DICO_STREAM_WRITE	int
)	O
)	O
oflags	int
=	O
O_RDWR	int
;	O
else	O
if	O
(	O
flags	int
&	O
DICO_STREAM_READ	int
)	O
oflags	int
=	O
O_RDONLY	int
;	O
else	O
oflags	int
=	O
O_WRONLY	int
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
filename	*(char)
,	O
oflags	int
)	O
;	O
if	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
<	O
0	int
)	O
return	O
errno	O
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
int	O
err	int
=	O
errno	O
;	O
close	(int)->(int)
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
)	O
;	O
return	O
err	int
;	O
}	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
;	O
if	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
)	O
{	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
=	O
mmap	(*(void),long,int,int,int,long)->(*(void))
(	O
NULL	O
,	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
,	O
mflags	int
,	O
MAP_SHARED	int
,	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
,	O
0	int
)	O
;	O
if	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
==	O
MAP_FAILED	O
)	O
{	O
int	O
err	int
=	O
errno	O
;	O
close	(int)->(int)
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
fd	int
)	O
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
=	O
NULL	O
;	O
return	O
err	int
;	O
}	O
}	O
else	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
=	O
NULL	O
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
flags	int
=	O
mflags	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mapfile_seek	(*(void),long,int,*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
off_t	long
needle	*(int)
,	O
int	O
whence	int
,	O
off_t	long
*	O
presult	*(long)
)	O
{	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
str	*(struct)
=	O
data	*(void)
;	O
off_t	long
offset	long
;	O
switch	O
(	O
whence	int
)	O
{	O
case	O
DICO_SEEK_SET	int
:	O
offset	long
=	O
needle	*(int)
;	O
break	O
;	O
case	O
DICO_SEEK_CUR	int
:	O
offset	long
=	O
str	*(struct)
->	O
offset	long
+	O
needle	*(int)
;	O
break	O
;	O
case	O
DICO_SEEK_END	int
:	O
offset	long
=	O
str	*(struct)
->	O
size	long
+	O
needle	*(int)
;	O
break	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
if	O
(	O
offset	long
<	O
0	int
||	O
offset	long
>	O
str	*(struct)
->	O
size	long
)	O
return	O
EINVAL	int
;	O
str	*(struct)
->	O
offset	long
=	O
offset	long
;	O
*	O
presult	*(long)
=	O
offset	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mapfile_size	(*(void),*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
off_t	long
*	O
presult	*(long)
)	O
{	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
mfs	*(struct(*(char),int,int,*(char),long,long))
=	O
data	*(void)
;	O
if	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
*	O
presult	*(long)
=	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_mapfile_read	(*(void),*(char),long,*(long))->(int)
(	O
void	O
*	O
data	*(void)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	*(*(void))
)	O
{	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
mfs	*(struct(*(char),int,int,*(char),long,long))
=	O
data	*(void)
;	O
size_t	long
n	long
;	O
if	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
n	long
=	O
(	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
offset	long
+	O
size	long
>	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
)	O
?	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
size	long
-	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
offset	long
:	O
size	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(void)
,	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
start	*(int)
+	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
offset	long
,	O
n	long
)	O
;	O
mfs	*(struct(*(char),int,int,*(char),long,long))
->	O
offset	long
+=	O
n	long
;	O
*	O
pret	*(*(void))
=	O
n	long
;	O
return	O
0	int
;	O
}	O
dico_stream_t	*(struct)
dico_mapfile_stream_create	(*(char),int)->(*(struct))
(	O
const	O
char	O
*	O
filename	*(char)
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
dico_stream_t	*(struct)
str	*(struct)
;	O
struct	O
_mapfile_stream	struct(*(char),int,int,*(char),long,long)
*	O
s	*(char)
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
s	*(char)
)	O
)	O
;	O
if	O
(	O
flags	int
&	O
DICO_STREAM_WRITE	int
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
!	O
s	*(char)
)	O
return	O
NULL	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
s	*(char)
,	O
0	int
,	O
sizeof	O
(	O
*	O
s	*(char)
)	O
)	O
;	O
s	*(char)
->	O
fd	int
=	O
-	O
1	int
;	O
s	*(char)
->	O
filename	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
filename	*(char)
)	O
;	O
if	O
(	O
!	O
s	*(char)
->	O
filename	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
s	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
rc	int
=	O
dico_stream_create	(*(*(struct)),int,*(void))->(int)
(	O
&	O
str	*(struct)
,	O
flags	int
,	O
s	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	(*(void))->(void)
(	O
s	*(char)
->	O
filename	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
s	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
dico_stream_set_open	(*(struct),*((*(void),int)->(int)))->(void)
(	O
str	*(struct)
,	O
_mapfile_open	(*(void),int)->(int)
)	O
;	O
dico_stream_set_seek	(*(struct),*((*(void),long,int,*(long))->(int)))->(void)
(	O
str	*(struct)
,	O
_mapfile_seek	(*(void),long,int,*(long))->(int)
)	O
;	O
dico_stream_set_size	(*(struct),*((*(void),*(long))->(int)))->(void)
(	O
str	*(struct)
,	O
_mapfile_size	(*(void),*(long))->(int)
)	O
;	O
dico_stream_set_read	(*(struct),*((*(void),*(char),long,*(long))->(int)))->(void)
(	O
str	*(struct)
,	O
_mapfile_read	(*(void),*(char),long,*(long))->(int)
)	O
;	O
dico_stream_set_close	(*(struct),*((*(void))->(int)))->(void)
(	O
str	*(struct)
,	O
_mapfile_close	(*(void))->(int)
)	O
;	O
dico_stream_set_destroy	(*(struct),*((*(void))->(int)))->(void)
(	O
str	*(struct)
,	O
_mapfile_destroy	(*(void))->(int)
)	O
;	O
return	O
str	*(struct)
;	O
}	O
