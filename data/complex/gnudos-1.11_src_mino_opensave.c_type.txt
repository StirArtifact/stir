static	O
int	O
one	(*(struct(long,long,short,char,array(char))))->(int)
(	O
const	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
unused	*(struct(long,long,short,char,array(char)))
)	O
{	O
return	O
1	int
;	O
}	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pass	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
int	O
numVisDirs	int
,	O
firstVisDir	int
,	O
selectedDir	int
,	O
totalDirs	*(int)
;	O
int	O
numVisFiles	int
,	O
firstVisFile	int
,	O
selectedFile	int
,	O
totalFiles	*(int)
;	O
char	O
*	O
*	O
dirs	*(*(*(char)))
;	O
char	O
*	O
*	O
files	*(*(*(char)))
;	O
struct	O
linestruct	struct(*(char),int,int,int,int)
*	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
MAX_LINES	int
]	O
;	O
FILE	struct
*	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
void	O
initDirView	()->(void)
(	O
)	O
{	O
numVisDirs	int
=	O
SCREEN_H	int
-	O
9	int
;	O
firstVisDir	int
=	O
0	int
;	O
selectedDir	int
=	O
-	O
1	int
;	O
totalDirs	*(int)
=	O
0	int
;	O
MAX_DIR_NAME_LEN	int
=	O
(	O
SCREEN_W	int
/	O
2	int
)	O
-	O
8	int
;	O
}	O
char	O
*	O
pathAppend	(*(char),*(char))->(*(char))
(	O
char	O
*	O
head	*(char)
,	O
char	O
*	O
tail	*(char)
)	O
{	O
if	O
(	O
!	O
tail	*(char)
)	O
return	O
NULL	O
;	O
int	O
len	int
;	O
char	O
*	O
str	*(char)
;	O
if	O
(	O
!	O
head	*(char)
)	O
{	O
if	O
(	O
tail	*(char)
[	O
0	int
]	O
!=	O
'/'	O
)	O
return	O
NULL	O
;	O
goto	O
tail_only	O
;	O
}	O
else	O
if	O
(	O
tail	*(char)
[	O
0	int
]	O
==	O
'/'	O
)	O
{	O
goto	O
tail_only	O
;	O
}	O
else	O
{	O
len	int
=	O
strlen	(*(char))->(long)
(	O
head	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
tail	*(char)
)	O
;	O
str	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
len	int
+	O
2	int
)	O
;	O
if	O
(	O
!	O
str	*(char)
)	O
return	O
NULL	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
str	*(char)
,	O
head	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
str	*(char)
,	O
"/"	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
str	*(char)
,	O
tail	*(char)
)	O
;	O
}	O
return	O
str	*(char)
;	O
tail_only	O
:	O
len	int
=	O
strlen	(*(char))->(long)
(	O
tail	*(char)
)	O
;	O
str	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
len	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
str	*(char)
)	O
return	O
NULL	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
str	*(char)
,	O
tail	*(char)
)	O
;	O
return	O
str	*(char)
;	O
}	O
char	O
*	O
createDocTitle	(*(char))->(*(char))
(	O
char	O
*	O
open_file_name	*(char)
)	O
{	O
char	O
*	O
name	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
open_file_name	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
!	O
name	*(char)
)	O
name	*(char)
=	O
open_file_name	*(char)
;	O
else	O
name	*(char)
++	O
;	O
if	O
(	O
documentTitle	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
documentTitle	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
return	O
documentTitle	*(char)
;	O
if	O
(	O
documentTitle	*(char)
)	O
free	(*(void))->(void)
(	O
documentTitle	*(char)
)	O
;	O
documentTitle	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
documentTitle	*(char)
)	O
{	O
msgBox	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
documentTitle	*(char)
,	O
name	*(char)
)	O
;	O
return	O
documentTitle	*(char)
;	O
}	O
char	O
*	O
openSaveFile	(enum(int,int),int,*(char))->(*(char))
(	O
OPEN_SAVE	enum(int,int)
openSave	enum(int,int)
,	O
int	O
showDialog	int
,	O
char	O
*	O
open_file_name	*(char)
)	O
{	O
x	int
=	O
2	int
;	O
y	int
=	O
2	int
;	O
h	int
=	O
SCREEN_H	int
-	O
1	int
;	O
w	int
=	O
SCREEN_W	int
-	O
1	int
;	O
char	O
inputName	O
[	O
MAX_DIR_NAME_LEN	int
]	O
;	O
int	O
selChar	int
;	O
int	O
sel	int
;	O
char	O
*	O
slash	*(char)
=	O
NULL	O
;	O
char	O
*	O
name	*(char)
;	O
switch	O
(	O
showDialog	int
)	O
{	O
case	O
(	O
YES	int
)	O
:	O
if	O
(	O
dirs	*(*(*(char)))
)	O
{	O
free	(*(void))->(void)
(	O
dirs	*(*(*(char)))
)	O
;	O
dirs	*(*(*(char)))
=	O
NULL	O
;	O
}	O
if	O
(	O
files	*(*(*(char)))
)	O
{	O
free	(*(void))->(void)
(	O
files	*(*(*(char)))
)	O
;	O
files	*(*(*(char)))
=	O
NULL	O
;	O
}	O
totalDirs	*(int)
=	O
0	int
;	O
totalFiles	*(int)
=	O
0	int
;	O
if	O
(	O
open_file_name	*(char)
)	O
slash	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
open_file_name	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
open_file_name	*(char)
&&	O
slash	*(char)
)	O
{	O
char	O
*	O
tmp	*(char)
;	O
tmp	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
slash	*(char)
-	O
open_file_name	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
!	O
tmp	*(char)
)	O
{	O
msgBox	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
tmp	*(char)
,	O
open_file_name	*(char)
,	O
slash	*(char)
-	O
open_file_name	*(char)
)	O
;	O
tmp	*(char)
[	O
slash	*(char)
-	O
open_file_name	*(char)
]	O
=	O
'\0'	O
;	O
int	O
res	int
=	O
scanDir	(*(char),*(*(*(char))),*(*(*(char))),*(int),*(int))->(int)
(	O
tmp	*(char)
,	O
&	O
dirs	*(*(*(char)))
,	O
&	O
files	*(*(*(char)))
,	O
&	O
totalDirs	*(int)
,	O
&	O
totalFiles	*(int)
)	O
;	O
free	(*(void))->(void)
(	O
tmp	*(char)
)	O
;	O
if	O
(	O
!	O
res	int
)	O
return	O
NULL	O
;	O
}	O
else	O
if	O
(	O
(	O
pass	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
geteuid	()->(int)
(	O
)	O
)	O
)	O
)	O
{	O
if	O
(	O
!	O
scanDir	(*(char),*(*(*(char))),*(*(*(char))),*(int),*(int))->(int)
(	O
pass	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_dir	*(char)
,	O
&	O
dirs	*(*(*(char)))
,	O
&	O
files	*(*(*(char)))
,	O
&	O
totalDirs	*(int)
,	O
&	O
totalFiles	*(int)
)	O
)	O
return	O
NULL	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
scanDir	(*(char),*(*(*(char))),*(*(*(char))),*(int),*(int))->(int)
(	O
"."	*(char)
,	O
&	O
dirs	*(*(*(char)))
,	O
&	O
files	*(*(*(char)))
,	O
&	O
totalDirs	*(int)
,	O
&	O
totalFiles	*(int)
)	O
)	O
return	O
NULL	O
;	O
}	O
sel	int
=	O
(	O
openSave	enum(int,int)
==	O
SAVE	int
)	O
?	O
1	int
:	O
0	int
;	O
if	O
(	O
openSave	enum(int,int)
==	O
OPEN	int
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
""	*(char)
)	O
;	O
else	O
{	O
if	O
(	O
documentTitle	*(char)
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
documentTitle	*(char)
)	O
;	O
else	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
DEFAULT_TITLE	*(char)
)	O
;	O
}	O
selChar	int
=	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
;	O
numVisDirs	int
=	O
h	int
-	O
x	int
-	O
3	int
;	O
firstVisDir	int
=	O
0	int
;	O
selectedDir	int
=	O
0	int
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
printf	(*(char))->(int)
(	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
printf	(*(char))->(int)
(	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
(	O
int	O
)	O
(	O
y	int
+	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
+	O
7	int
)	O
)	O
;	O
if	O
(	O
openSave	enum(int,int)
==	O
OPEN	int
)	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
int	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
WRAP_DIR_OUTPUT	O
;	O
}	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
while	O
(	O
1	int
)	O
{	O
char	O
*	O
ch	*(char)
=	O
getKey	()->(*(char))
(	O
)	O
;	O
switch	O
(	O
ch	*(char)
[	O
0	int
]	O
)	O
{	O
case	O
(	O
'a'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
&&	O
CTRL	int
)	O
goto	O
do_home	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
HOME_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
)	O
break	O
;	O
do_home	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
selChar	int
=	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
break	O
;	O
case	O
(	O
'e'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
&&	O
CTRL	int
)	O
goto	O
do_end	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
END_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
)	O
break	O
;	O
do_end	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
selChar	int
=	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
;	O
if	O
(	O
sel	int
>	O
w	int
-	O
y	int
-	O
9	int
)	O
sel	int
--	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
break	O
;	O
case	O
(	O
'd'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
3	int
&&	O
CTRL	int
)	O
goto	O
do_del	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
DEL_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
3	int
)	O
break	O
;	O
do_del	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
if	O
(	O
selChar	int
==	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
)	O
break	O
;	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
selChar	int
;	O
i	int
<	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
1	int
;	O
i	int
++	O
)	O
inputName	O
[	O
i	int
]	O
=	O
inputName	O
[	O
i	int
+	O
1	int
]	O
;	O
inputName	O
[	O
i	int
]	O
=	O
'\0'	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*s"	*(char)
,	O
w	int
-	O
y	int
-	O
9	int
,	O
" "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
inputName	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
break	O
;	O
case	O
(	O
BACKSPACE_KEY	int
)	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
if	O
(	O
selChar	int
==	O
0	int
)	O
break	O
;	O
int	O
i	int
;	O
if	O
(	O
selChar	int
==	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
)	O
{	O
i	int
=	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
1	int
;	O
}	O
else	O
{	O
for	O
(	O
i	int
=	O
selChar	int
;	O
i	int
<=	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
;	O
i	int
++	O
)	O
inputName	O
[	O
i	int
-	O
1	int
]	O
=	O
inputName	O
[	O
i	int
]	O
;	O
}	O
inputName	O
[	O
i	int
]	O
=	O
'\0'	O
;	O
selChar	int
--	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*s"	*(char)
,	O
w	int
-	O
y	int
-	O
9	int
,	O
" "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
inputName	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
break	O
;	O
case	O
(	O
TAB_KEY	int
)	O
:	O
sel	int
=	O
(	O
sel	int
==	O
0	int
)	O
?	O
1	int
:	O
0	int
;	O
int	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
}	O
else	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
}	O
break	O
;	O
case	O
(	O
'b'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
&&	O
CTRL	int
)	O
goto	O
do_left	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
LEFT_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
break	O
;	O
do_left	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
if	O
(	O
selChar	int
==	O
0	int
)	O
break	O
;	O
selChar	int
--	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
selectedDir	int
>=	O
numVisDirs	int
)	O
{	O
int	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
selectedDir	int
-=	O
numVisDirs	int
;	O
pos	int
-=	O
numVisDirs	int
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
if	O
(	O
pos	int
>=	O
totalDirs	*(int)
)	O
{	O
OUTPUT_NAME	O
(	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
}	O
else	O
{	O
OUTPUT_NAME	O
(	O
dirs	*(*(*(char)))
[	O
pos	int
]	O
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
firstVisDir	int
==	O
0	int
)	O
break	O
;	O
selectedDir	int
+=	O
numVisDirs	int
;	O
firstVisDir	int
-=	O
numVisDirs	int
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
}	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
(	O
'f'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
&&	O
CTRL	int
)	O
goto	O
do_right	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
RIGHT_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
break	O
;	O
do_right	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
if	O
(	O
selChar	int
==	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
)	O
break	O
;	O
if	O
(	O
selChar	int
>=	O
w	int
-	O
y	int
-	O
9	int
)	O
break	O
;	O
selChar	int
++	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
selectedDir	int
<	O
numVisDirs	int
)	O
{	O
int	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
selectedDir	int
+=	O
numVisDirs	int
;	O
pos	int
+=	O
numVisDirs	int
;	O
if	O
(	O
pos	int
>=	O
(	O
totalDirs	*(int)
+	O
totalFiles	*(int)
)	O
)	O
{	O
int	O
h	int
=	O
(	O
totalDirs	*(int)
+	O
totalFiles	*(int)
)	O
-	O
pos	int
-	O
1	int
;	O
pos	int
+=	O
h	int
;	O
selectedDir	int
+=	O
h	int
;	O
}	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
if	O
(	O
pos	int
>=	O
totalDirs	*(int)
)	O
{	O
OUTPUT_NAME	O
(	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
}	O
else	O
{	O
OUTPUT_NAME	O
(	O
dirs	*(*(*(char)))
[	O
pos	int
]	O
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
firstVisDir	int
+	O
(	O
numVisDirs	int
*	O
2	int
)	O
)	O
>=	O
(	O
totalDirs	*(int)
+	O
totalFiles	*(int)
)	O
)	O
break	O
;	O
selectedDir	int
-=	O
numVisDirs	int
;	O
firstVisDir	int
+=	O
numVisDirs	int
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
}	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
(	O
'g'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
&&	O
CTRL	int
)	O
goto	O
do_esc	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
ESC_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
)	O
break	O
;	O
do_esc	O
:	O
refreshView	()->(void)
(	O
)	O
;	O
return	O
0	int
;	O
break	O
;	O
case	O
(	O
ENTER_KEY	int
)	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
if	O
(	O
openSave	enum(int,int)
==	O
SAVE	int
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
int	O
x	int
=	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
inputName	O
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
if	O
(	O
x	int
!=	O
-	O
1	int
&&	O
S_ISDIR	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
int	O
i	int
=	O
msgBox	(*(char),int,enum(int,int,int))->(int)
(	O
"File already exists. Overwrite?"	*(char)
,	O
YES	int
|	O
NO	int
,	O
CONFIRM	int
)	O
;	O
if	O
(	O
i	int
==	O
NO	int
)	O
{	O
refreshDirView	()->(void)
(	O
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
printf	(*(char))->(int)
(	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
}	O
}	O
goto	O
saveFileAnGo	O
;	O
}	O
else	O
{	O
goto	O
openFileAndGo	O
;	O
}	O
}	O
int	O
index	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
if	O
(	O
index	int
<	O
totalDirs	*(int)
)	O
{	O
scanDir	(*(char),*(*(*(char))),*(*(*(char))),*(int),*(int))->(int)
(	O
dirs	*(*(*(char)))
[	O
index	int
]	O
,	O
&	O
dirs	*(*(*(char)))
,	O
&	O
files	*(*(*(char)))
,	O
&	O
totalDirs	*(int)
,	O
&	O
totalFiles	*(int)
)	O
;	O
firstVisDir	int
=	O
0	int
;	O
selectedDir	int
=	O
0	int
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
printf	(*(char))->(int)
(	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
{	O
if	O
(	O
openSave	enum(int,int)
==	O
OPEN	int
)	O
goto	O
openFileAndGo	O
;	O
else	O
{	O
int	O
i	int
=	O
msgBox	(*(char),int,enum(int,int,int))->(int)
(	O
"File already exists. Overwrite?"	*(char)
,	O
YES	int
|	O
NO	int
,	O
CONFIRM	int
)	O
;	O
if	O
(	O
i	int
==	O
NO	int
)	O
{	O
refreshDirView	()->(void)
(	O
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
printf	(*(char))->(int)
(	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
}	O
}	O
goto	O
saveFileAnGo	O
;	O
}	O
break	O
;	O
case	O
(	O
'p'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
&&	O
CTRL	int
)	O
goto	O
do_up	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
UP_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
break	O
;	O
do_up	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
break	O
;	O
if	O
(	O
selectedDir	int
==	O
0	int
)	O
{	O
if	O
(	O
firstVisDir	int
==	O
0	int
)	O
break	O
;	O
firstVisDir	int
-=	O
numVisDirs	int
;	O
selectedDir	int
=	O
numVisDirs	int
-	O
1	int
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
}	O
else	O
{	O
int	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
selectedDir	int
--	O
;	O
pos	int
--	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
if	O
(	O
pos	int
>=	O
totalDirs	*(int)
)	O
{	O
OUTPUT_NAME	O
(	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
}	O
else	O
{	O
OUTPUT_NAME	O
(	O
dirs	*(*(*(char)))
[	O
pos	int
]	O
)	O
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
(	O
'n'	O
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
&&	O
CTRL	int
)	O
goto	O
do_down	O
;	O
goto	O
do_enter_char	O
;	O
break	O
;	O
case	O
(	O
DOWN_KEY	int
)	O
:	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
break	O
;	O
do_down	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
break	O
;	O
if	O
(	O
selectedDir	int
==	O
(	O
numVisDirs	int
*	O
2	int
)	O
-	O
1	int
)	O
{	O
if	O
(	O
(	O
firstVisDir	int
+	O
(	O
numVisDirs	int
*	O
2	int
)	O
)	O
<	O
(	O
totalDirs	*(int)
+	O
totalFiles	*(int)
)	O
)	O
{	O
firstVisDir	int
+=	O
numVisDirs	int
;	O
selectedDir	int
=	O
numVisDirs	int
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
if	O
(	O
openSave	enum(int,int)
==	O
SAVE	int
)	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"File: "	*(char)
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
}	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
}	O
}	O
else	O
{	O
int	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
if	O
(	O
pos	int
>=	O
(	O
totalDirs	*(int)
+	O
totalFiles	*(int)
-	O
1	int
)	O
)	O
break	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
WRAP_DIR_OUTPUT	O
;	O
selectedDir	int
++	O
;	O
pos	int
++	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
if	O
(	O
pos	int
>=	O
totalDirs	*(int)
)	O
{	O
OUTPUT_NAME	O
(	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
files	*(*(*(char)))
[	O
pos	int
-	O
totalDirs	*(int)
]	O
)	O
;	O
}	O
else	O
{	O
OUTPUT_NAME	O
(	O
dirs	*(*(*(char)))
[	O
pos	int
]	O
)	O
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
if	O
(	O
sel	int
==	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
default	O
:	O
do_enter_char	O
:	O
if	O
(	O
sel	int
==	O
1	int
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
>=	O
w	int
-	O
y	int
-	O
9	int
)	O
break	O
;	O
int	O
i	int
;	O
inputName	O
[	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
+	O
1	int
]	O
=	O
'\0'	O
;	O
for	O
(	O
i	int
=	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
;	O
i	int
>	O
selChar	int
;	O
i	int
--	O
)	O
inputName	O
[	O
i	int
]	O
=	O
inputName	O
[	O
i	int
-	O
1	int
]	O
;	O
inputName	O
[	O
selChar	int
++	O
]	O
=	O
(	O
CAPS	int
||	O
SHIFT	int
)	O
?	O
ch	*(char)
[	O
0	int
]	O
-	O
32	int
:	O
ch	*(char)
[	O
0	int
]	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
7	int
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%*s"	*(char)
,	O
inputName	O
,	O
(	O
int	O
)	O
(	O
w	int
-	O
y	int
-	O
strlen	(*(char))->(long)
(	O
inputName	O
)	O
-	O
9	int
)	O
,	O
" "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
selChar	int
+	O
7	int
)	O
;	O
}	O
break	O
;	O
}	O
}	O
break	O
;	O
case	O
(	O
NO	int
)	O
:	O
strcpy	(*(char),*(char))->(*(char))
(	O
inputName	O
,	O
open_file_name	*(char)
)	O
;	O
if	O
(	O
!	O
cwd	*(char)
)	O
cwd	*(char)
=	O
getcwd	(*(char),long)->(*(char))
(	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
openSave	enum(int,int)
==	O
OPEN	int
)	O
goto	O
openFileAndGo	O
;	O
else	O
goto	O
saveFileAnGo	O
;	O
break	O
;	O
}	O
saveFileAnGo	O
:	O
name	*(char)
=	O
pathAppend	(*(char),*(char))->(*(char))
(	O
cwd	*(char)
,	O
inputName	O
)	O
;	O
if	O
(	O
!	O
_saveFile	(*(char))->(int)
(	O
name	*(char)
)	O
)	O
{	O
free	(*(void))->(void)
(	O
name	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
FILE_STATE	enum(int,int,int,int,int)
=	O
SAVED	int
;	O
NEW_FILE	int
=	O
0	int
;	O
free	(*(void))->(void)
(	O
name	*(char)
)	O
;	O
return	O
open_file_name	*(char)
;	O
openFileAndGo	O
:	O
name	*(char)
=	O
pathAppend	(*(char),*(char))->(*(char))
(	O
cwd	*(char)
,	O
inputName	O
)	O
;	O
if	O
(	O
!	O
_openFile	(*(char))->(int)
(	O
name	*(char)
)	O
)	O
{	O
free	(*(void))->(void)
(	O
name	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
FILE_STATE	enum(int,int,int,int,int)
=	O
OPENED	int
;	O
NEW_FILE	int
=	O
0	int
;	O
free	(*(void))->(void)
(	O
name	*(char)
)	O
;	O
return	O
open_file_name	*(char)
;	O
}	O
void	O
refreshDirView	()->(void)
(	O
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
cwd	*(char)
)	O
>	O
w	int
-	O
y	int
-	O
5	int
)	O
{	O
char	O
*	O
tmp	*(char)
;	O
tmp	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
w	int
-	O
y	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
tmp	*(char)
)	O
{	O
msgBox	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
int	O
i	int
,	O
k	int
,	O
j	int
=	O
w	int
-	O
y	int
-	O
5	int
;	O
for	O
(	O
i	int
=	O
strlen	(*(char))->(long)
(	O
cwd	*(char)
)	O
,	O
k	int
=	O
j	int
;	O
k	int
>	O
1	int
;	O
i	int
--	O
,	O
k	int
--	O
)	O
tmp	*(char)
[	O
k	int
]	O
=	O
cwd	*(char)
[	O
i	int
]	O
;	O
tmp	*(char)
[	O
0	int
]	O
=	O
'.'	O
;	O
tmp	*(char)
[	O
1	int
]	O
=	O
'.'	O
;	O
drawBox	(int,int,int,int,*(char),int,int)->(void)
(	O
x	int
,	O
y	int
,	O
h	int
,	O
w	int
,	O
tmp	*(char)
,	O
YES	int
,	O
0	int
)	O
;	O
free	(*(void))->(void)
(	O
tmp	*(char)
)	O
;	O
}	O
else	O
drawBox	(int,int,int,int,*(char),int,int)->(void)
(	O
x	int
,	O
y	int
,	O
h	int
,	O
w	int
,	O
cwd	*(char)
,	O
YES	int
,	O
0	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
1	int
,	O
y	int
+	O
1	int
)	O
;	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
2	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"[ENTER]: Open dir/file [C-p C-n C-f C-b]: Navigate [C-g]: Cancel"	*(char)
)	O
;	O
else	O
if	O
(	O
GNU_DOS_LEVEL	int
>	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"[ENTER]: Open dir/file [C-p C-n C-f C-b]: Navigate [ESC]: Cancel"	*(char)
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"[ENTER]: Open dir/file  [ARROWS]: Navigate  [ESC]: Cancel"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
2	int
,	O
y	int
+	O
1	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"File: "	*(char)
)	O
;	O
int	O
i	int
=	O
firstVisDir	int
;	O
int	O
j	int
=	O
0	int
;	O
int	O
k	int
=	O
0	int
;	O
int	O
curX	int
,	O
curY	int
;	O
while	O
(	O
i	int
<	O
totalDirs	*(int)
)	O
{	O
if	O
(	O
(	O
i	int
-	O
firstVisDir	int
)	O
==	O
selectedDir	int
)	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
selectedDir	int
=	O
j	int
;	O
OUTPUT_NAME	O
(	O
dirs	*(*(*(char)))
[	O
i	int
]	O
)	O
;	O
curX	int
=	O
(	O
j	int
>=	O
numVisDirs	int
)	O
?	O
j	int
-	O
numVisDirs	int
+	O
3	int
:	O
j	int
+	O
3	int
;	O
curY	int
=	O
(	O
j	int
>=	O
numVisDirs	int
)	O
?	O
x	int
+	O
MAX_DIR_NAME_LEN	int
+	O
strlen	(*(char))->(long)
(	O
dirs	*(*(*(char)))
[	O
i	int
]	O
)	O
:	O
x	int
+	O
strlen	(*(char))->(long)
(	O
dirs	*(*(*(char)))
[	O
i	int
]	O
)	O
;	O
curY	int
+=	O
3	int
;	O
}	O
else	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
selectedDir	int
=	O
j	int
;	O
OUTPUT_NAME	O
(	O
dirs	*(*(*(char)))
[	O
i	int
]	O
)	O
;	O
}	O
if	O
(	O
j	int
>=	O
(	O
numVisDirs	int
*	O
2	int
)	O
-	O
1	int
)	O
break	O
;	O
i	int
++	O
;	O
j	int
++	O
;	O
k	int
++	O
;	O
}	O
if	O
(	O
(	O
i	int
>=	O
totalDirs	*(int)
)	O
&&	O
(	O
j	int
<	O
numVisDirs	int
*	O
2	int
)	O
)	O
{	O
if	O
(	O
firstVisDir	int
>	O
totalDirs	*(int)
)	O
j	int
=	O
firstVisDir	int
-	O
totalDirs	*(int)
;	O
else	O
j	int
=	O
0	int
;	O
while	O
(	O
j	int
<	O
totalFiles	*(int)
)	O
{	O
if	O
(	O
(	O
i	int
-	O
firstVisDir	int
)	O
==	O
selectedDir	int
)	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_HIGHLIGHT_TEXT	int
)	O
;	O
selectedDir	int
=	O
k	int
;	O
OUTPUT_NAME	O
(	O
files	*(*(*(char)))
[	O
j	int
]	O
)	O
;	O
curX	int
=	O
(	O
j	int
>=	O
numVisDirs	int
)	O
?	O
j	int
-	O
numVisDirs	int
+	O
3	int
:	O
j	int
+	O
3	int
;	O
curY	int
=	O
(	O
j	int
>=	O
numVisDirs	int
)	O
?	O
x	int
+	O
MAX_DIR_NAME_LEN	int
+	O
strlen	(*(char))->(long)
(	O
files	*(*(*(char)))
[	O
j	int
]	O
)	O
:	O
x	int
+	O
strlen	(*(char))->(long)
(	O
files	*(*(*(char)))
[	O
j	int
]	O
)	O
;	O
curY	int
+=	O
3	int
;	O
}	O
else	O
{	O
setScreenColorsI	(int)->(void)
(	O
COLOR_WINDOW	int
)	O
;	O
selectedDir	int
=	O
k	int
;	O
OUTPUT_NAME	O
(	O
files	*(*(*(char)))
[	O
j	int
]	O
)	O
;	O
}	O
if	O
(	O
j	int
>=	O
totalFiles	*(int)
)	O
break	O
;	O
if	O
(	O
k	int
>=	O
(	O
numVisDirs	int
*	O
2	int
)	O
-	O
1	int
)	O
break	O
;	O
i	int
++	O
;	O
j	int
++	O
;	O
k	int
++	O
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
curX	int
,	O
curY	int
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
int	O
_saveFile	(*(char))->(int)
(	O
char	O
*	O
open_file_name	*(char)
)	O
{	O
if	O
(	O
!	O
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
open_file_name	*(char)
,	O
"w+"	*(char)
)	O
)	O
)	O
{	O
return	O
0	int
;	O
}	O
int	O
i	int
,	O
j	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalLines	int
;	O
i	int
++	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
->	O
text	*(char)
)	O
;	O
}	O
FILE_STATE	enum(int,int,int,int,int)
=	O
SAVED	int
;	O
if	O
(	O
!	O
createDocTitle	(*(char))->(*(char))
(	O
open_file_name	*(char)
)	O
)	O
return	O
0	int
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
checkFileExtension	(*(char))->(void)
(	O
open_file_name	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
int	O
copyBufToLine	(int,int,*(char),int)->(int)
(	O
int	O
i	int
,	O
int	O
k	int
,	O
char	O
*	O
buffer	*(char)
,	O
int	O
linked	int
)	O
{	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
=	O
allocLineStructB	(int)->(*(struct(*(char),int,int,int,int)))
(	O
k	int
)	O
;	O
if	O
(	O
!	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
)	O
return	O
0	int
;	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
->	O
linkedToNext	int
=	O
linked	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
->	O
text	*(char)
,	O
buffer	*(char)
,	O
k	int
)	O
;	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
->	O
text	*(char)
[	O
k	int
]	O
=	O
'\0'	O
;	O
calcTotalCharsInLine	(int)->(void)
(	O
i	int
)	O
;	O
return	O
1	int
;	O
}	O
char	O
buf	array(char)
[	O
4096	int
]	O
;	O
int	O
_openFile	(*(char))->(int)
(	O
char	O
*	O
open_file_name	*(char)
)	O
{	O
if	O
(	O
!	O
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
open_file_name	*(char)
,	O
"r"	*(char)
)	O
)	O
)	O
{	O
return	O
0	int
;	O
}	O
int	O
i	int
;	O
int	O
j	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalLines	int
;	O
i	int
++	O
)	O
{	O
free	(*(void))->(void)
(	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
->	O
text	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
i	int
]	O
)	O
;	O
}	O
totalLines	int
=	O
0	int
;	O
i	int
=	O
0	int
;	O
int	O
k	int
=	O
0	int
,	O
l	int
=	O
0	int
;	O
while	O
(	O
!	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
totalLines	int
>=	O
MAX_LINES	int
)	O
break	O
;	O
j	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
j	int
==	O
-	O
1	int
)	O
break	O
;	O
if	O
(	O
l	int
>=	O
MAX_CHARS_PER_LINE	int
)	O
{	O
if	O
(	O
!	O
copyBufToLine	(int,int,*(char),int)->(int)
(	O
i	int
,	O
k	int
,	O
buf	array(char)
,	O
1	int
)	O
)	O
return	O
0	int
;	O
i	int
++	O
;	O
k	int
=	O
0	int
;	O
l	int
=	O
0	int
;	O
totalLines	int
++	O
;	O
}	O
buf	array(char)
[	O
k	int
++	O
]	O
=	O
j	int
;	O
if	O
(	O
j	int
==	O
'\n'	O
)	O
{	O
if	O
(	O
!	O
copyBufToLine	(int,int,*(char),int)->(int)
(	O
i	int
,	O
k	int
,	O
buf	array(char)
,	O
0	int
)	O
)	O
return	O
0	int
;	O
i	int
++	O
;	O
k	int
=	O
0	int
;	O
l	int
=	O
0	int
;	O
totalLines	int
++	O
;	O
}	O
else	O
if	O
(	O
j	int
==	O
'\t'	O
)	O
{	O
l	int
+=	O
TABSPACES	O
(	O
l	int
+	O
1	int
)	O
+	O
1	int
;	O
}	O
else	O
{	O
if	O
(	O
(	O
j	int
&	O
0xc0	int
)	O
!=	O
0x80	int
)	O
l	int
++	O
;	O
}	O
}	O
if	O
(	O
k	int
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
copyBufToLine	(int,int,*(char),int)->(int)
(	O
i	int
,	O
k	int
,	O
buf	array(char)
,	O
0	int
)	O
)	O
return	O
0	int
;	O
totalLines	int
++	O
;	O
}	O
if	O
(	O
!	O
createDocTitle	(*(char))->(*(char))
(	O
open_file_name	*(char)
)	O
)	O
return	O
0	int
;	O
firstVisLine	int
=	O
0	int
;	O
selectedLine	int
=	O
0	int
;	O
selectedChar	int
=	O
0	int
;	O
checkFileExtension	(*(char))->(void)
(	O
open_file_name	*(char)
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
open_file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
return	O
1	int
;	O
}	O
void	O
checkFileExtension	(*(char))->(void)
(	O
char	O
*	O
open_file_name	*(char)
)	O
{	O
AUTO_HIGHLIGHTING	int
=	O
0	int
;	O
char	O
*	O
ext	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
open_file_name	*(char)
,	O
'.'	O
)	O
;	O
if	O
(	O
ext	*(char)
!=	O
NULL	O
)	O
{	O
ext	*(char)
++	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
NUM_MODULES	int
;	O
i	int
++	O
)	O
{	O
for	O
(	O
int	O
j	int
=	O
0	int
;	O
j	int
<	O
module	array(*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char)))
[	O
i	int
]	O
->	O
extsCount	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ext	*(char)
,	O
module	array(*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char)))
[	O
i	int
]	O
->	O
exts	*(*(char))
[	O
j	int
]	O
)	O
==	O
0	int
)	O
{	O
AUTO_HIGHLIGHTING	int
=	O
1	int
;	O
BG_COLOR	array(int)
[	O
COLOR_WINDOW	int
]	O
=	O
COLOR_HWINDOW	int
;	O
HIGHLIGHT_MODE	enum(int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
j	int
;	O
curmodule	*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char))
=	O
module	array(*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char)))
[	O
i	int
]	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
AUTO_HIGHLIGHTING	int
)	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
AUTO_HIGHLIGHTING	int
)	O
{	O
char	O
*	O
line	*(struct(*(char),int,int,int,int))
=	O
lines	array(*(struct(*(char),int,int,int,int)))
[	O
0	int
]	O
->	O
text	*(char)
;	O
if	O
(	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(struct(*(char),int,int,int,int))
,	O
"/bin/csh"	*(char)
)	O
)	O
||	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(struct(*(char),int,int,int,int))
,	O
"/bin/ksh"	*(char)
)	O
)	O
||	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(struct(*(char),int,int,int,int))
,	O
"/bin/sh"	*(char)
)	O
)	O
||	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(struct(*(char),int,int,int,int))
,	O
"/bin/bash"	*(char)
)	O
)	O
)	O
{	O
AUTO_HIGHLIGHTING	int
=	O
1	int
;	O
BG_COLOR	array(int)
[	O
COLOR_WINDOW	int
]	O
=	O
COLOR_HWINDOW	int
;	O
HIGHLIGHT_MODE	enum(int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
SHELL_MODE	int
;	O
curmodule	*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char))
=	O
module	array(*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char)))
[	O
SHELL_MODE	int
]	O
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(struct(*(char),int,int,int,int))
,	O
"/bin/perl"	*(char)
)	O
)	O
{	O
AUTO_HIGHLIGHTING	int
=	O
1	int
;	O
BG_COLOR	array(int)
[	O
COLOR_WINDOW	int
]	O
=	O
COLOR_HWINDOW	int
;	O
HIGHLIGHT_MODE	enum(int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
PERL_MODE	int
;	O
curmodule	*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char))
=	O
module	array(*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char)))
[	O
PERL_MODE	int
]	O
;	O
}	O
else	O
{	O
BG_COLOR	array(int)
[	O
COLOR_WINDOW	int
]	O
=	O
old_window_color	int
;	O
HIGHLIGHT_MODE	enum(int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NO_MODE	int
;	O
curmodule	*(struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char))
=	O
&	O
dummyModule	struct(int,*(*(char)),int,*(*(char)),*(char),*(char),*(char),char)
;	O
}	O
}	O
}	O
