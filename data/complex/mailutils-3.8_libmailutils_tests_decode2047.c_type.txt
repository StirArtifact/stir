void	O
print	(*(char),int)->(void)
(	O
char	O
*	O
p	*(char)
,	O
int	O
printable	*(char)
)	O
{	O
for	O
(	O
;	O
*	O
p	*(char)
;	O
p	*(char)
++	O
)	O
{	O
if	O
(	O
printable	*(char)
&&	O
*	O
p	*(char)
!=	O
'\n'	O
&&	O
!	O
ISPRINT	O
(	O
*	O
p	*(char)
)	O
)	O
printf	(*(char))->(int)
(	O
"\\%03o"	*(char)
,	O
*	O
(	O
unsigned	O
char	O
*	O
)	O
p	*(char)
)	O
;	O
else	O
putchar	(int)->(int)
(	O
*	O
p	*(char)
)	O
;	O
}	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
argv	*(*(char))
[	O
]	O
)	O
{	O
char	O
buf	*(char)
[	O
256	int
]	O
;	O
int	O
c	char
,	O
printable	*(char)
=	O
0	int
;	O
char	O
*	O
charset	*(char)
=	O
"iso-8859-1"	*(char)
;	O
while	O
(	O
(	O
c	char
=	O
getopt	(int,*(*(char)),*(char))->(int)
(	O
argc	long
,	O
argv	*(*(char))
,	O
"c:p"	*(char)
)	O
)	O
!=	O
EOF	O
)	O
switch	O
(	O
c	char
)	O
{	O
case	O
'c'	O
:	O
charset	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'p'	O
:	O
printable	*(char)
=	O
1	int
;	O
break	O
;	O
default	O
:	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(char)
,	O
sizeof	O
(	O
buf	*(char)
)	O
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
char	O
*	O
p	*(char)
=	O
NULL	O
;	O
int	O
rc	int
,	O
len	long
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
buf	*(char)
)	O
;	O
if	O
(	O
len	long
>	O
0	int
&&	O
buf	*(char)
[	O
len	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
buf	*(char)
[	O
len	long
-	O
1	int
]	O
=	O
0	int
;	O
rc	int
=	O
mu_rfc2047_decode	(*(char),*(char),*(*(char)))->(int)
(	O
charset	*(char)
,	O
buf	*(char)
,	O
&	O
p	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
else	O
if	O
(	O
p	*(char)
)	O
print	(*(char),int)->(void)
(	O
p	*(char)
,	O
printable	*(char)
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
free	(*(void))->(void)
(	O
p	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
