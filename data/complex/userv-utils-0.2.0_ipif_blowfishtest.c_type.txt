int	O
main	()->(int)
(	O
void	O
)	O
{	O
char	O
buf	*(char)
[	O
200	int
]	O
,	O
keybuf	array(char)
[	O
200	int
]	O
,	O
plainbuf	array(char)
[	O
200	int
]	O
,	O
cipherbuf	array(char)
[	O
200	int
]	O
,	O
comparebuf	array(char)
[	O
200	int
]	O
,	O
ivbuf	array(char)
[	O
200	int
]	O
;	O
char	O
keytxt	array(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
+	O
1	int
]	O
,	O
plaintxt	array(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
+	O
1	int
]	O
,	O
ciphertxt	array(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
+	O
1	int
]	O
;	O
uint8_t	char
key	*(char)
[	O
BLOWFISH_MAXKEYBYTES	int
*	O
2	int
]	O
,	O
plain	array(char)
[	O
100	int
]	O
,	O
cipher	array(char)
[	O
100	int
]	O
,	O
compare	array(char)
[	O
100	int
]	O
;	O
uint8_t	char
iv	array(char)
[	O
BLOWFISH_BLOCKBYTES	int
]	O
;	O
int	O
keysz	int
,	O
plainsz	int
,	O
ciphersz	int
,	O
cskey	int
,	O
csiv	int
,	O
csplain	int
,	O
i	int
;	O
struct	O
blowfish_expandedkey	struct(array(int),array(array(int)))
ek	*(struct(array(int),array(array(int))))
;	O
struct	O
blowfish_cbc_state	struct(struct(array(int),array(array(int))),int,int)
cs	*(struct(struct(array(int),array(array(int))),int,int))
;	O
setvbuf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,long)->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
0	int
,	O
_IOLBF	int
,	O
BUFSIZ	int
)	O
;	O
buf	*(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
-	O
2	int
]	O
=	O
0	int
;	O
keytxt	array(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
]	O
=	O
0	int
;	O
plaintxt	array(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
]	O
=	O
0	int
;	O
ciphertxt	array(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
]	O
=	O
0	int
;	O
cskey	int
=	O
csiv	int
=	O
csplain	int
=	O
0	int
;	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(char)
,	O
sizeof	O
(	O
buf	*(char)
)	O
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
buf	*(char)
[	O
sizeof	O
(	O
buf	*(char)
)	O
-	O
2	int
]	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"line too long %s...\n"	*(char)
,	O
buf	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"ecb %s %s %s\n"	*(char)
,	O
keytxt	array(char)
,	O
plaintxt	array(char)
,	O
ciphertxt	array(char)
)	O
==	O
3	int
)	O
{	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"ecb key"	*(char)
,	O
keytxt	array(char)
,	O
key	*(char)
,	O
&	O
keysz	int
,	O
1	int
,	O
sizeof	O
(	O
key	*(char)
)	O
)	O
;	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"ecb plain"	*(char)
,	O
plaintxt	array(char)
,	O
plain	array(char)
,	O
0	int
,	O
BLOWFISH_BLOCKBYTES	int
,	O
BLOWFISH_BLOCKBYTES	int
)	O
;	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"ecb cipher"	*(char)
,	O
ciphertxt	array(char)
,	O
cipher	array(char)
,	O
0	int
,	O
BLOWFISH_BLOCKBYTES	int
,	O
BLOWFISH_BLOCKBYTES	int
)	O
;	O
printf	(*(char))->(int)
(	O
"ecb %s %s %s\n"	*(char)
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
key	*(char)
,	O
keysz	int
,	O
keybuf	array(char)
)	O
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
plain	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
,	O
plainbuf	array(char)
)	O
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
cipher	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
,	O
cipherbuf	array(char)
)	O
)	O
;	O
blowfish_loadkey	(*(struct(array(int),array(array(int)))),*(char),int)->(void)
(	O
&	O
ek	*(struct(array(int),array(array(int))))
,	O
key	*(char)
,	O
keysz	int
)	O
;	O
blowfish_encrypt	(*(struct(array(int),array(array(int)))),array(char),array(char))->(void)
(	O
&	O
ek	*(struct(array(int),array(array(int))))
,	O
plain	array(char)
,	O
compare	array(char)
)	O
;	O
if	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
cipher	array(char)
,	O
compare	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"encryption mismatch - got %s\n"	*(char)
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
compare	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
,	O
comparebuf	array(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
blowfish_decrypt	(*(struct(array(int),array(array(int)))),array(char),array(char))->(void)
(	O
&	O
ek	*(struct(array(int),array(array(int))))
,	O
cipher	array(char)
,	O
compare	array(char)
)	O
;	O
if	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
plain	array(char)
,	O
compare	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"decryption mismatch - got %s\n"	*(char)
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
compare	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
,	O
comparebuf	array(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"key %s\n"	*(char)
,	O
keytxt	array(char)
)	O
)	O
{	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"key"	*(char)
,	O
keytxt	array(char)
,	O
key	*(char)
,	O
&	O
keysz	int
,	O
1	int
,	O
sizeof	O
(	O
key	*(char)
)	O
)	O
;	O
blowfish_loadkey	(*(struct(array(int),array(array(int)))),*(char),int)->(void)
(	O
&	O
cs	*(struct(struct(array(int),array(array(int))),int,int))
.	O
ek	*(struct(array(int),array(array(int))))
,	O
key	*(char)
,	O
keysz	int
)	O
;	O
cskey	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"iv %s\n"	*(char)
,	O
keytxt	array(char)
)	O
)	O
{	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"iv"	*(char)
,	O
keytxt	array(char)
,	O
iv	array(char)
,	O
0	int
,	O
BLOWFISH_BLOCKBYTES	int
,	O
BLOWFISH_BLOCKBYTES	int
)	O
;	O
csiv	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"plain %s\n"	*(char)
,	O
plaintxt	array(char)
)	O
)	O
{	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"plain"	*(char)
,	O
plaintxt	array(char)
,	O
plain	array(char)
,	O
&	O
plainsz	int
,	O
0	int
,	O
sizeof	O
(	O
plain	array(char)
)	O
)	O
;	O
csplain	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"cbc %s\n"	*(char)
,	O
ciphertxt	array(char)
)	O
)	O
{	O
if	O
(	O
!	O
cskey	int
||	O
!	O
csiv	int
||	O
!	O
csplain	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"failed to specify%s%s%s\n"	*(char)
,	O
cskey	int
?	O
""	*(char)
:	O
" key"	*(char)
,	O
csiv	int
?	O
""	*(char)
:	O
" iv"	*(char)
,	O
csplain	int
?	O
""	*(char)
:	O
" plain"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
unhex	(*(char),*(char),*(char),*(int),int,int)->(void)
(	O
"cbc cipher"	*(char)
,	O
ciphertxt	array(char)
,	O
cipher	array(char)
,	O
&	O
ciphersz	int
,	O
0	int
,	O
sizeof	O
(	O
cipher	array(char)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"key %s\niv %s\nplain %s\ncipher %s\n"	*(char)
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
key	*(char)
,	O
keysz	int
,	O
keybuf	array(char)
)	O
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
iv	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
,	O
ivbuf	array(char)
)	O
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
plain	array(char)
,	O
plainsz	int
,	O
plainbuf	array(char)
)	O
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
cipher	array(char)
,	O
ciphersz	int
,	O
cipherbuf	array(char)
)	O
)	O
;	O
if	O
(	O
plainsz	int
%	O
BLOWFISH_BLOCKBYTES	int
||	O
ciphersz	int
%	O
BLOWFISH_BLOCKBYTES	int
||	O
plainsz	int
!=	O
ciphersz	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"size mismatch plain=%d cipher=%d block=%d\n"	*(char)
,	O
plainsz	int
,	O
ciphersz	int
,	O
BLOWFISH_BLOCKBYTES	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
blowfish_cbc_setiv	(*(struct(struct(array(int),array(array(int))),int,int)),array(char))->(void)
(	O
&	O
cs	*(struct(struct(array(int),array(array(int))),int,int))
,	O
iv	array(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
plainsz	int
;	O
i	int
+=	O
BLOWFISH_BLOCKBYTES	int
)	O
blowfish_cbc_decrypt	(*(struct(struct(array(int),array(array(int))),int,int)),array(char),array(char))->(void)
(	O
&	O
cs	*(struct(struct(array(int),array(array(int))),int,int))
,	O
cipher	array(char)
+	O
i	int
,	O
compare	array(char)
+	O
i	int
)	O
;	O
if	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
plain	array(char)
,	O
compare	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"decryption mismatch - got %s\n"	*(char)
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
compare	array(char)
,	O
plainsz	int
,	O
comparebuf	array(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
blowfish_cbc_setiv	(*(struct(struct(array(int),array(array(int))),int,int)),array(char))->(void)
(	O
&	O
cs	*(struct(struct(array(int),array(array(int))),int,int))
,	O
iv	array(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
plainsz	int
;	O
i	int
+=	O
BLOWFISH_BLOCKBYTES	int
)	O
blowfish_cbc_encrypt	(*(struct(struct(array(int),array(array(int))),int,int)),array(char),array(char))->(void)
(	O
&	O
cs	*(struct(struct(array(int),array(array(int))),int,int))
,	O
plain	array(char)
+	O
i	int
,	O
compare	array(char)
+	O
i	int
)	O
;	O
if	O
(	O
memcmp	(*(void),*(void),long)->(int)
(	O
cipher	array(char)
,	O
compare	array(char)
,	O
BLOWFISH_BLOCKBYTES	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"encryption mismatch - got %s\n"	*(char)
,	O
tohex	(*(char),int,*(char))->(*(char))
(	O
compare	array(char)
,	O
plainsz	int
,	O
comparebuf	array(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
buf	*(char)
[	O
0	int
]	O
==	O
'#'	O
||	O
buf	*(char)
[	O
0	int
]	O
==	O
'\n'	O
)	O
{	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"huh ? %s"	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
"stdin"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
