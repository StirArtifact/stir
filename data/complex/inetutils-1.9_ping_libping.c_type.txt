static	O
size_t	long
_ping_packetsize	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))->(long)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
;	O
size_t	long
_ping_packetsize	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))->(long)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
{	O
if	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_type	int
==	O
ICMP_TIMESTAMP	int
||	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_type	int
==	O
ICMP_TIMESTAMPREPLY	int
)	O
return	O
20	int
;	O
return	O
8	int
+	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_datalen	long
;	O
}	O
PING	struct
*	O
ping_init	(int,int)->(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))
(	O
int	O
type	enum(int,int,int,int)
,	O
int	O
ident	int
)	O
{	O
int	O
fd	int
;	O
struct	O
protoent	struct(*(char),*(*(char)),int)
*	O
proto	*(struct(*(char),*(*(char)),int))
;	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
;	O
proto	*(struct(*(char),*(*(char)),int))
=	O
getprotobyname	(*(char))->(*(struct(*(char),*(*(char)),int)))
(	O
"icmp"	*(char)
)	O
;	O
if	O
(	O
!	O
proto	*(struct(*(char),*(*(char)),int))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"ping: unknown protocol icmp.\n"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
fd	int
=	O
socket	(int,int,int)->(int)
(	O
AF_INET	O
,	O
SOCK_RAW	int
,	O
proto	*(struct(*(char),*(*(char)),int))
->	O
p_proto	int
)	O
;	O
if	O
(	O
fd	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EPERM	int
||	O
errno	O
==	O
EACCES	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"ping: ping must run as root\n"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
)	O
;	O
if	O
(	O
!	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
{	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
return	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
0	int
,	O
sizeof	O
(	O
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
)	O
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_fd	int
=	O
fd	int
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_type	int
=	O
type	enum(int,int,int,int)
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_count	long
=	O
0	int
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_interval	long
=	O
PING_DEFAULT_INTERVAL	int
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_datalen	long
=	O
sizeof	O
(	O
icmphdr_t	struct
)	O
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
=	O
ident	int
&	O
0xFFFF	int
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_cktab_size	int
=	O
PING_CKTABSIZE	int
;	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_start_time	struct(long,long)
,	O
NULL	O
)	O
;	O
return	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
;	O
}	O
void	O
ping_reset	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))->(void)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
{	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
=	O
0	int
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_recv	long
=	O
0	int
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_rept	long
=	O
0	int
;	O
}	O
void	O
ping_set_type	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),int)->(void)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
int	O
type	enum(int,int,int,int)
)	O
{	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_type	int
=	O
type	enum(int,int,int,int)
;	O
}	O
int	O
ping_xmit	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))->(int)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
{	O
int	O
i	int
,	O
buflen	int
;	O
if	O
(	O
_ping_setbuf	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),bool)->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
USE_IPV6	bool
)	O
)	O
return	O
-	O
1	int
;	O
buflen	int
=	O
_ping_packetsize	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))->(long)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
;	O
_PING_CLR	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
)	O
;	O
switch	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_type	int
)	O
{	O
case	O
ICMP_ECHO	int
:	O
icmp_echo_encode	(*(char),long,int,int)->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
buflen	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
)	O
;	O
break	O
;	O
case	O
ICMP_TIMESTAMP	int
:	O
icmp_timestamp_encode	(*(char),long,int,int)->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
buflen	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
)	O
;	O
break	O
;	O
case	O
ICMP_ADDRESS	int
:	O
icmp_address_encode	(*(char),long,int,int)->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
buflen	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
)	O
;	O
break	O
;	O
default	O
:	O
icmp_generic_encode	(*(char),long,int,int,int)->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
buflen	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_type	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
)	O
;	O
break	O
;	O
}	O
i	int
=	O
sendto	(int,*(void),long,int,union(*(struct(short,array(char))),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct)),int)->(long)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_fd	int
,	O
(	O
char	O
*	O
)	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
buflen	int
,	O
0	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_dest	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
,	O
sizeof	O
(	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
)	O
)	O
;	O
if	O
(	O
i	int
<	O
0	int
)	O
perror	(*(char))->(void)
(	O
"ping: sendto"	*(char)
)	O
;	O
else	O
{	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_xmit	long
++	O
;	O
if	O
(	O
i	int
!=	O
buflen	int
)	O
printf	(*(char))->(int)
(	O
"ping: wrote %s %d chars, ret=%d\n"	*(char)
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_hostname	*(char)
,	O
buflen	int
,	O
i	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
my_echo_reply	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))->(int)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
icmphdr_t	struct
*	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
)	O
{	O
struct	O
ip	struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))
*	O
orig_ip	*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int)))
=	O
&	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
->	O
icmp_ip	O
;	O
icmphdr_t	struct
*	O
orig_icmp	*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),long,array(char))))
=	O
(	O
icmphdr_t	struct
*	O
)	O
(	O
orig_ip	*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int)))
+	O
1	int
)	O
;	O
return	O
(	O
orig_ip	*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int)))
->	O
ip_dst	struct(int)
.	O
s_addr	int
==	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_dest	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
.	O
s_addr	int
&&	O
orig_ip	*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int)))
->	O
ip_p	char
==	O
IPPROTO_ICMP	int
&&	O
orig_icmp	*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),long,array(char))))
->	O
icmp_type	char
==	O
ICMP_ECHO	int
&&	O
orig_icmp	*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),long,array(char))))
->	O
icmp_id	O
==	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
)	O
;	O
}	O
int	O
ping_recv	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)))->(int)
(	O
PING	struct
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
)	O
{	O
socklen_t	int
fromlen	int
=	O
sizeof	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_from	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
)	O
;	O
int	O
n	int
,	O
rc	int
;	O
icmphdr_t	struct
*	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
;	O
struct	O
ip	struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))
*	O
ip	struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))
;	O
int	O
dupflag	int
;	O
n	int
=	O
recvfrom	(int,*(void),long,int,union(*(struct(short,array(char))),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct)),*(int))->(long)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_fd	int
,	O
(	O
char	O
*	O
)	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
_PING_BUFLEN	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
USE_IPV6	bool
)	O
,	O
0	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_from	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
,	O
&	O
fromlen	int
)	O
;	O
if	O
(	O
n	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
rc	int
=	O
icmp_generic_decode	(*(char),long,*(*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int)))),*(*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char))))))->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_buffer	*(char)
,	O
n	int
,	O
&	O
ip	struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))
,	O
&	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
)	O
;	O
if	O
(	O
rc	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"packet too short (%d bytes) from %s\n"	*(char)
,	O
n	int
,	O
inet_ntoa	(struct(int))->(*(char))
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_from	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
switch	O
(	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
->	O
icmp_type	char
)	O
{	O
case	O
ICMP_ECHOREPLY	int
:	O
case	O
ICMP_TIMESTAMPREPLY	int
:	O
case	O
ICMP_ADDRESSREPLY	int
:	O
if	O
(	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
->	O
icmp_id	O
!=	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_ident	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
rc	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"checksum mismatch from %s\n"	*(char)
,	O
inet_ntoa	(struct(int))->(*(char))
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_from	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
)	O
)	O
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_recv	long
++	O
;	O
if	O
(	O
_PING_TST	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
->	O
icmp_seq	O
)	O
)	O
{	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_rept	long
++	O
;	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_num_recv	long
--	O
;	O
dupflag	int
=	O
1	int
;	O
}	O
else	O
{	O
_PING_SET	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
->	O
icmp_seq	O
)	O
;	O
dupflag	int
=	O
0	int
;	O
}	O
if	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_event	union(*((int,*(void),*(struct(short,short,int,struct`,int)),*(struct(short,short,int,struct`,int)),*(struct(char,char,short,union`)),int)->(int)),*((int,*(void),*(struct(short,short,struct`,array(char))),*(struct(short,short,struct`,array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),*(struct(char,char,short,union`,union`)),int)->(int)))
.	O
handler	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
)	O
(	O
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_event	union(*((int,*(void),*(struct(short,short,int,struct`,int)),*(struct(short,short,int,struct`,int)),*(struct(char,char,short,union`)),int)->(int)),*((int,*(void),*(struct(short,short,struct`,array(char))),*(struct(short,short,struct`,array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),*(struct(char,char,short,union`,union`)),int)->(int)))
.	O
handler	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
)	O
(	O
dupflag	int
?	O
PEV_DUPLICATE	int
:	O
PEV_RESPONSE	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_closure	*(void)
,	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_dest	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
,	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_from	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
,	O
ip	struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))
,	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
,	O
n	int
)	O
;	O
break	O
;	O
case	O
ICMP_ECHO	int
:	O
case	O
ICMP_TIMESTAMP	int
:	O
case	O
ICMP_ADDRESS	int
:	O
return	O
-	O
1	int
;	O
default	O
:	O
if	O
(	O
!	O
my_echo_reply	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))->(int)
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_event	union(*((int,*(void),*(struct(short,short,int,struct`,int)),*(struct(short,short,int,struct`,int)),*(struct(char,char,short,union`)),int)->(int)),*((int,*(void),*(struct(short,short,struct`,array(char))),*(struct(short,short,struct`,array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),*(struct(char,char,short,union`,union`)),int)->(int)))
.	O
handler	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
)	O
(	O
*	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_event	union(*((int,*(void),*(struct(short,short,int,struct`,int)),*(struct(short,short,int,struct`,int)),*(struct(char,char,short,union`)),int)->(int)),*((int,*(void),*(struct(short,short,struct`,array(char))),*(struct(short,short,struct`,array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),*(struct(char,char,short,union`,union`)),int)->(int)))
.	O
handler	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
)	O
(	O
PEV_NOECHO	int
,	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_closure	*(void)
,	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_dest	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
,	O
&	O
p	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_from	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
,	O
ip	struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))
,	O
icmp	*(*(struct(char,char,short,union(char,struct(int),struct(short,short),int,struct(short,short),struct(char,char,short)),union(struct(int,int,int),struct(struct`),long,array(char)))))
,	O
n	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
void	O
ping_set_event_handler	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),*((int,*(void),*(struct(short,short,struct`,array(char))),*(struct(short,short,struct`,array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),*(struct(char,char,short,union`,union`)),int)->(int)),*(void))->(void)
(	O
PING	struct
*	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
ping_efp	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
pf	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
,	O
void	O
*	O
closure	*(void)
)	O
{	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_event	union(*((int,*(void),*(struct(short,short,int,struct`,int)),*(struct(short,short,int,struct`,int)),*(struct(char,char,short,union`)),int)->(int)),*((int,*(void),*(struct(short,short,struct`,array(char))),*(struct(short,short,struct`,array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct`,struct`)),*(struct(char,char,short,union`,union`)),int)->(int)))
.	O
handler	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
=	O
pf	*((int,*(void),*(struct(short,short,struct(int),array(char))),*(struct(short,short,struct(int),array(char))),*(struct(int,int,char,short,short,short,char,char,short,struct(int),struct(int))),*(struct(char,char,short,union(char,struct`,struct`,int,struct`,struct`),union(struct`,struct`,long,array(char)))),int)->(int))
;	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_closure	*(void)
=	O
closure	*(void)
;	O
}	O
void	O
ping_set_packetsize	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),long)->(void)
(	O
PING	struct
*	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
size_t	long
size	long
)	O
{	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_datalen	long
=	O
size	long
;	O
}	O
int	O
ping_set_dest	(*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct`,array(char)),struct(short,short,int,struct`,int)),long,long,long)),*(char))->(int)
(	O
PING	struct
*	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
,	O
char	O
*	O
host	*(char)
)	O
{	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
*	O
s_in	*(struct(short,short,struct(int),array(char)))
=	O
&	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_dest	union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
ping_sockaddr	struct(short,short,struct(int),array(char))
;	O
s_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_family	short
=	O
AF_INET	O
;	O
if	O
(	O
inet_aton	(*(char),*(struct(int)))->(int)
(	O
host	*(char)
,	O
&	O
s_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
)	O
)	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_hostname	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
host	*(char)
)	O
;	O
else	O
{	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
=	O
gethostbyname	(*(char))->(*(struct(*(char),*(*(char)),int,int,*(*(char)))))
(	O
host	*(char)
)	O
;	O
if	O
(	O
!	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
)	O
return	O
1	int
;	O
s_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_family	short
=	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addrtype	int
;	O
if	O
(	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_length	int
>	O
(	O
int	O
)	O
sizeof	O
(	O
s_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
)	O
)	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_length	int
=	O
sizeof	O
(	O
s_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
s_in	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
,	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addr	O
,	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_length	int
)	O
;	O
ping	*(struct(int,int,long,struct(long,long),long,union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),*(char),long,int,union(*((int,*`,*`,*`,*`,int)->(int)),*((int,*`,*`,*`,*`,*`,int)->(int))),*(void),int,*(char),*(char),union(struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union`),int)),long,long,long))
->	O
ping_hostname	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_name	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
