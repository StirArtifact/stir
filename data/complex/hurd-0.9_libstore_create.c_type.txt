error_t	(*(int))->(int)
store_create	(int,int,*(*(struct(enum,*(char),*((*`,int,int,int,*`,*`)->(int)),int,*((*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,int,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int))))),*(*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void)))))->(int)
(	O
file_t	O
source	int
,	O
int	O
flags	int
,	O
const	O
struct	O
store_class	struct(enum,*(char),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),int,int,int,*(*(void)),*(int))->(int)),int,*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),int)->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),*(struct))->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),*(struct))->(int)),*((*(struct),*(*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(*(struct(int,*`,int,int,int,int,*`,int,int,int,int,int,int,int,*`,int,*`,*`,int,*`))))->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),int)->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),int)->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))))->(void)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))))->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),*(struct(int,int)),int,*(*(struct(int,*`,int,int,int,int,*`,int,int,int,int,int,int,int,*`,int,*`,*`,int,*`))))->(int)),*((*(char),int,*(*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(*(struct(int,*`,int,int,int,int,*`,int,int,int,int,int,int,int,*`,int,*`,*`,int,*`))))->(int)),*((*(char),*(*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))))->(int)),*((*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void))),int,*(int))->(int)))
*	O
const	O
*	O
classes	*(*(struct(enum,*(char),*((*`,int,int,int,*`,*`)->(int)),int,*((*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))))
,	O
struct	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
*	O
*	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
)	O
{	O
error_t	(*(int))->(int)
err	(*(int))->(int)
;	O
struct	O
store_enc	struct(*(int),*(int),*(int),*(char),int,int,int,int,int,int,int,int,*(int),*(int),*(int),*(char))
enc	*(struct)
;	O
mach_port_t	O
inline_ports	O
[	O
10	int
]	O
;	O
int	O
inline_ints	array(int)
[	O
60	int
]	O
;	O
off_t	O
inline_offsets	O
[	O
60	int
]	O
;	O
char	O
inline_data	array(char)
[	O
100	int
]	O
;	O
store_enc_init	(*(struct(*(int),*(int),*(int),*(char),int,int,int,int,int,int,int,int,*(int),*(int),*(int),*(char))),*(int),int,*(int),int,*(int),int,*(char),int)->(void)
(	O
&	O
enc	*(struct)
,	O
inline_ports	O
,	O
10	int
,	O
inline_ints	array(int)
,	O
60	int
,	O
inline_offsets	O
,	O
60	int
,	O
inline_data	array(char)
,	O
100	int
)	O
;	O
err	(*(int))->(int)
=	O
file_get_storage_info	()->(int)
(	O
source	int
,	O
&	O
enc	*(struct)
.	O
ports	*(int)
,	O
&	O
enc	*(struct)
.	O
num_ports	int
,	O
&	O
enc	*(struct)
.	O
ints	*(int)
,	O
&	O
enc	*(struct)
.	O
num_ints	int
,	O
&	O
enc	*(struct)
.	O
offsets	*(int)
,	O
&	O
enc	*(struct)
.	O
num_offsets	int
,	O
&	O
enc	*(struct)
.	O
data	*(char)
,	O
&	O
enc	*(struct)
.	O
data_len	int
)	O
;	O
if	O
(	O
err	(*(int))->(int)
)	O
return	O
err	(*(int))->(int)
;	O
err	(*(int))->(int)
=	O
store_decode	(*(struct(*(int),*(int),*(int),*(char),int,int,int,int,int,int,int,int,*(int),*(int),*(int),*(char))),*(*(struct(enum,*(char),*((*`,int,int,int,*`,*`)->(int)),int,*((*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,int,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int))))),*(*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void)))))->(int)
(	O
&	O
enc	*(struct)
,	O
classes	*(*(struct(enum,*(char),*((*`,int,int,int,*`,*`)->(int)),int,*((*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))))
,	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
)	O
;	O
if	O
(	O
!	O
err	(*(int))->(int)
)	O
{	O
if	O
(	O
flags	int
&	O
STORE_INACTIVE	int
)	O
flags	int
&=	O
~	O
STORE_INACTIVE	int
;	O
else	O
if	O
(	O
(	O
*	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
)	O
->	O
flags	int
&	O
STORE_INACTIVE	int
)	O
err	(*(int))->(int)
=	O
store_clear_flags	(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*(struct`)),int,*(void))),int)->(int)
(	O
*	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
,	O
STORE_INACTIVE	int
)	O
;	O
if	O
(	O
!	O
err	(*(int))->(int)
&&	O
flags	int
)	O
err	(*(int))->(int)
=	O
store_set_flags	(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*(struct`)),int,*(void))),int)->(int)
(	O
*	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
,	O
flags	int
)	O
;	O
if	O
(	O
err	(*(int))->(int)
)	O
store_free	(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*(struct`)),int,*(void))))->(void)
(	O
*	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
)	O
;	O
}	O
else	O
if	O
(	O
err	(*(int))->(int)
==	O
EINVAL	O
&&	O
(	O
flags	int
&	O
~	O
STORE_INACTIVE	int
)	O
==	O
STORE_NO_FILEIO	int
)	O
err	(*(int))->(int)
=	O
store_unknown_decode	(*(struct),*(*(struct(enum,*(char),*((*`,int,int,int,*`,*`)->(int)),int,*((*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,int,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int))))),*(*(struct(int,*(struct`),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct`),*(*`),int,*(void)))))->(int)
(	O
&	O
enc	*(struct)
,	O
classes	*(*(struct(enum,*(char),*((*`,int,int,int,*`,*`)->(int)),int,*((*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)))))
,	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
)	O
;	O
store_enc_dealloc	(*(struct(*(int),*(int),*(int),*(char),int,int,int,int,int,int,int,int,*(int),*(int),*(int),*(char))))->(void)
(	O
&	O
enc	*(struct)
)	O
;	O
if	O
(	O
!	O
err	(*(int))->(int)
)	O
(	O
*	O
store	struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct(int,*(struct(int,int)),int,int,int,int,*(char),int,int,int,int,int,int,int,*(void),int,*(struct),*(*(struct`)),int,*(void)))),int,*(void))
)	O
->	O
source	int
=	O
source	int
;	O
return	O
err	(*(int))->(int)
;	O
}	O
