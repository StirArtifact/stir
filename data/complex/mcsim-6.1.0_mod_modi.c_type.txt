KM	struct(*(char),int,int)
vrgkmKeywordMap	array(struct(*(char),int,int))
[	O
]	O
=	O
{	O
{	O
"States"	*(char)
,	O
KM_STATES	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Inputs"	*(char)
,	O
KM_INPUTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Forcings"	*(char)
,	O
KM_INPUTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Outputs"	*(char)
,	O
KM_OUTPUTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Compartments"	*(char)
,	O
KM_COMPARTMENTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Dynamics"	*(char)
,	O
KM_DYNAMICS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Initialize"	*(char)
,	O
KM_SCALE	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Scale"	*(char)
,	O
KM_SCALE	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Jacobian"	*(char)
,	O
KM_JACOB	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Jacob"	*(char)
,	O
KM_JACOB	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Events"	*(char)
,	O
KM_EVENTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"Roots"	*(char)
,	O
KM_ROOTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"CalcOutputs"	*(char)
,	O
KM_CALCOUTPUTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"dt"	*(char)
,	O
KM_DXDT	int
,	O
CN_DYNAMICS	int
|	O
CN_INPUTDEF	int
}	O
,	O
{	O
"Inline"	*(char)
,	O
KM_INLINE	int
,	O
CN_ALL	int
}	O
,	O
{	O
"SBMLModels"	*(char)
,	O
KM_SBMLMODELS	int
,	O
CN_GLOBAL	int
|	O
CN_TEMPLATE_DEFINED	int
}	O
,	O
{	O
"PKTemplate"	*(char)
,	O
KM_PKTEMPLATE	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"End"	*(char)
,	O
KM_END	int
,	O
CN_GLOBAL	int
|	O
CN_TEMPLATE_DEFINED	int
}	O
,	O
{	O
""	*(char)
,	O
0	int
,	O
CN_ALL	int
}	O
}	O
;	O
PSTR	*(char)
GetKeyword	(int)->(*(char))
(	O
int	O
iCode	int
)	O
{	O
PKM	*(struct(*(char),int,int))
pkm	*(struct(*(char),int,int))
=	O
&	O
vrgkmKeywordMap	array(struct(*(char),int,int))
[	O
0	int
]	O
;	O
while	O
(	O
*	O
pkm	*(struct(*(char),int,int))
->	O
szKeyword	*(char)
&&	O
pkm	*(struct(*(char),int,int))
->	O
iKWCode	int
!=	O
iCode	int
)	O
pkm	*(struct(*(char),int,int))
++	O
;	O
return	O
(	O
pkm	*(struct(*(char),int,int))
->	O
szKeyword	*(char)
)	O
;	O
}	O
int	O
GetKeywordCode	(*(char),*(int))->(int)
(	O
PSTR	*(char)
szKeyword	*(char)
,	O
PINT	*(int)
pfContext	*(int)
)	O
{	O
PKM	*(struct(*(char),int,int))
pkm	*(struct(*(char),int,int))
=	O
&	O
vrgkmKeywordMap	array(struct(*(char),int,int))
[	O
0	int
]	O
;	O
while	O
(	O
*	O
pkm	*(struct(*(char),int,int))
->	O
szKeyword	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
szKeyword	*(char)
,	O
pkm	*(struct(*(char),int,int))
->	O
szKeyword	*(char)
)	O
)	O
pkm	*(struct(*(char),int,int))
++	O
;	O
if	O
(	O
pfContext	*(int)
)	O
*	O
pfContext	*(int)
=	O
pkm	*(struct(*(char),int,int))
->	O
fContext	int
;	O
return	O
(	O
pkm	*(struct(*(char),int,int))
->	O
iKWCode	int
)	O
;	O
}	O
void	O
GetVarList	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
int	O
iKWCode	int
)	O
{	O
int	O
iLexType	int
,	O
iErr	int
=	O
0	int
;	O
long	O
i	long
,	O
iLB	long
,	O
iUB	long
;	O
PSTRLEX	array(char)
szPunct	array(char)
,	O
szTmp	array(char)
;	O
do	O
{	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
&	O
iLexType	int
)	O
;	O
if	O
(	O
iLexType	int
&	O
LX_IDENTIFIER	int
)	O
{	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'['	O
)	O
)	O
{	O
GetArrayBounds	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(long),*(long))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
iLB	long
,	O
&	O
iUB	long
)	O
;	O
for	O
(	O
i	long
=	O
iLB	long
;	O
i	long
<	O
iUB	long
;	O
i	long
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	array(char)
,	O
"%s_%ld"	*(char)
,	O
szLex	*(char)
,	O
i	long
)	O
;	O
DeclareModelVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmp	array(char)
,	O
iKWCode	int
)	O
;	O
}	O
}	O
else	O
{	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
--	O
;	O
DeclareModelVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
iKWCode	int
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
szLex	*(char)
[	O
0	int
]	O
!=	O
','	O
)	O
&&	O
(	O
szLex	*(char)
[	O
0	int
]	O
!=	O
CH_RBRACE	O
)	O
)	O
{	O
iErr	int
=	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_RBRACE	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
szPunct	array(char)
,	O
"* List must be comma-delimited and end with }."	*(char)
)	O
;	O
}	O
}	O
}	O
while	O
(	O
(	O
szLex	*(char)
[	O
0	int
]	O
!=	O
CH_RBRACE	O
)	O
&&	O
(	O
!	O
iErr	int
)	O
)	O
;	O
}	O
void	O
ProcessDTStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PSTR	*(char)
szEqn	*(char)
,	O
int	O
iKWCode	int
)	O
{	O
PSTRLEX	array(char)
szPunct	array(char)
,	O
szTmp	array(char)
;	O
PSTREQN	array(char)
szEqnU	*(char)
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
int	O
iArgType	int
=	O
LX_IDENTIFIER	int
;	O
long	O
i	long
,	O
iLB	long
,	O
iUB	long
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
if	O
(	O
!	O
GetFuncArgs	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,array(int),*(char),array(long),array(long))->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
1	int
,	O
&	O
iArgType	int
,	O
szLex	*(char)
,	O
&	O
iLB	long
,	O
&	O
iUB	long
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_BADSTATE	O
|	O
RE_FATAL	int
,	O
szLex	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'='	O
)	O
)	O
{	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_LEXEXPECTED	int
,	O
"="	*(char)
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
iUB	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
GetVarType	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(int)
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szLex	*(char)
)	O
!=	O
ID_STATE	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_BADSTATE	O
|	O
RE_FATAL	int
,	O
szLex	*(char)
,	O
NULL	O
)	O
;	O
GetStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
UnrollEquation	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
0	int
,	O
szEqn	*(char)
,	O
szEqnU	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
szEqnU	*(char)
,	O
iKWCode	int
)	O
;	O
}	O
else	O
{	O
GetStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
for	O
(	O
i	long
=	O
iLB	long
;	O
i	long
<	O
iUB	long
;	O
i	long
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	array(char)
,	O
"%s_%ld"	*(char)
,	O
szLex	*(char)
,	O
i	long
)	O
;	O
if	O
(	O
GetVarType	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(int)
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szTmp	array(char)
)	O
!=	O
ID_STATE	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	array(char)
,	O
"%s[%ld]"	*(char)
,	O
szLex	*(char)
,	O
i	long
)	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_BADSTATE	O
|	O
RE_FATAL	int
,	O
szTmp	array(char)
,	O
NULL	O
)	O
;	O
}	O
UnrollEquation	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
i	long
,	O
szEqn	*(char)
,	O
szEqnU	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmp	array(char)
,	O
szEqnU	*(char)
,	O
iKWCode	int
)	O
;	O
}	O
}	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
CH_STMTTERM	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
";"	*(char)
,	O
NULL	O
)	O
;	O
}	O
void	O
ProcessIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PSTR	*(char)
szEqn	*(char)
,	O
int	O
iKWCode	int
)	O
{	O
PSTRLEX	array(char)
szPunct	array(char)
,	O
szTmp	array(char)
;	O
PSTREQN	array(char)
szEqnU	*(char)
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
long	O
i	long
,	O
iLB	long
,	O
iUB	long
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
if	O
(	O
(	O
i	long
=	O
strlen	(*(char))->(long)
(	O
szLex	*(char)
)	O
)	O
>	O
MAX_NAME	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_NAMETOOLONG	O
|	O
RE_FATAL	int
,	O
szLex	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'['	O
)	O
)	O
{	O
if	O
(	O
szPunct	array(char)
[	O
0	int
]	O
==	O
'='	O
)	O
{	O
GetStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
UnrollEquation	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
0	int
,	O
szEqn	*(char)
,	O
szEqnU	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
szEqnU	*(char)
,	O
iKWCode	int
)	O
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
CH_STMTTERM	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
";"	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
szPunct	array(char)
[	O
0	int
]	O
==	O
CH_STMTTERM	O
)	O
{	O
if	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
==	O
CN_GLOBAL	int
)	O
{	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
"0\0"	*(char)
,	O
iKWCode	int
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_LEXEXPECTED	int
|	O
RE_FATAL	int
,	O
"= or ["	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_LEXEXPECTED	int
|	O
RE_FATAL	int
,	O
"=, [ or ;"	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
{	O
GetArrayBounds	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(long),*(long))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
iLB	long
,	O
&	O
iUB	long
)	O
;	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'='	O
)	O
)	O
{	O
GetStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
for	O
(	O
i	long
=	O
iLB	long
;	O
i	long
<	O
iUB	long
;	O
i	long
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	array(char)
,	O
"%s_%ld"	*(char)
,	O
szLex	*(char)
,	O
i	long
)	O
;	O
UnrollEquation	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
i	long
,	O
szEqn	*(char)
,	O
szEqnU	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmp	array(char)
,	O
szEqnU	*(char)
,	O
iKWCode	int
)	O
;	O
}	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
CH_STMTTERM	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
";"	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
szPunct	array(char)
[	O
0	int
]	O
==	O
CH_STMTTERM	O
)	O
{	O
if	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
==	O
CN_GLOBAL	int
)	O
{	O
for	O
(	O
i	long
=	O
iLB	long
;	O
i	long
<	O
iUB	long
;	O
i	long
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	array(char)
,	O
"%s_%ld"	*(char)
,	O
szLex	*(char)
,	O
i	long
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmp	array(char)
,	O
"0\0"	*(char)
,	O
iKWCode	int
)	O
;	O
}	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_LEXEXPECTED	int
|	O
RE_FATAL	int
,	O
"= or ["	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_LEXEXPECTED	int
|	O
RE_FATAL	int
,	O
"= or ;"	*(char)
,	O
NULL	O
)	O
;	O
}	O
}	O
void	O
ProcessInlineStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PSTR	*(char)
szEqn	*(char)
,	O
int	O
iKWCode	int
)	O
{	O
GetStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
szEqn	*(char)
=	O
szEqn	*(char)
+	O
1	int
;	O
szEqn	*(char)
[	O
strlen	(*(char))->(long)
(	O
szEqn	*(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
CH_STMTTERM	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
";"	*(char)
,	O
NULL	O
)	O
;	O
}	O
void	O
ProcessWord	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szLex	*(char)
,	O
PSTR	*(char)
szEqn	*(char)
)	O
{	O
int	O
iErr	int
=	O
0	int
;	O
int	O
iKWCode	int
,	O
fContext	int
;	O
PSTRLEX	array(char)
szPunct	array(char)
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
static	O
BOOL	int
bCalcOutputsDefined	int
=	O
FALSE	int
;	O
static	O
BOOL	int
bDynamicsDefined	int
=	O
FALSE	int
;	O
static	O
BOOL	int
bInitializeDefined	int
=	O
FALSE	int
;	O
static	O
BOOL	int
bJacobianDefined	int
=	O
FALSE	int
;	O
if	O
(	O
!	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
||	O
!	O
szLex	*(char)
||	O
!	O
szLex	*(char)
[	O
0	int
]	O
||	O
!	O
szEqn	*(char)
)	O
return	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
iKWCode	int
=	O
GetKeywordCode	(*(char),*(int))->(int)
(	O
szLex	*(char)
,	O
&	O
fContext	int
)	O
;	O
assert	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
!=	O
CN_END	int
)	O
;	O
if	O
(	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
==	O
CN_END	int
)	O
||	O
(	O
iKWCode	int
&&	O
!	O
(	O
fContext	int
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
)	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_BADCONTEXT	O
|	O
RE_FATAL	int
,	O
szLex	*(char)
,	O
NULL	O
)	O
;	O
else	O
{	O
switch	O
(	O
iKWCode	int
)	O
{	O
case	O
KM_END	int
:	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_END	int
;	O
break	O
;	O
case	O
KM_STATES	int
:	O
case	O
KM_INPUTS	int
:	O
case	O
KM_OUTPUTS	int
:	O
case	O
KM_COMPARTMENTS	int
:	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'='	O
)	O
)	O
{	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
GetVarList	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
iKWCode	int
)	O
;	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
"{"	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
"="	*(char)
,	O
NULL	O
)	O
;	O
break	O
;	O
case	O
KM_CALCOUTPUTS	int
:	O
if	O
(	O
bCalcOutputsDefined	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_DUPSECT	O
|	O
RE_FATAL	int
,	O
"CalcOutputs"	*(char)
,	O
NULL	O
)	O
;	O
bCalcOutputsDefined	int
=	O
TRUE	int
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_LBRACE	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
szPunct	array(char)
,	O
"* Section must be delimited by curly braces."	*(char)
)	O
;	O
}	O
else	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
KM_TO_CN	O
(	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_JACOB	int
:	O
if	O
(	O
bJacobianDefined	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_DUPSECT	O
|	O
RE_FATAL	int
,	O
"Jacobian"	*(char)
,	O
NULL	O
)	O
;	O
bJacobianDefined	int
=	O
TRUE	int
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_LBRACE	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
szPunct	array(char)
,	O
"* Section must be delimited by curly braces."	*(char)
)	O
;	O
}	O
else	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
KM_TO_CN	O
(	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_SCALE	int
:	O
if	O
(	O
bInitializeDefined	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_DUPSECT	O
|	O
RE_FATAL	int
,	O
"Initialize"	*(char)
,	O
NULL	O
)	O
;	O
bInitializeDefined	int
=	O
TRUE	int
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_LBRACE	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
szPunct	array(char)
,	O
"* Section must be delimited by curly braces."	*(char)
)	O
;	O
}	O
else	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
KM_TO_CN	O
(	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_EVENTS	int
:	O
case	O
KM_ROOTS	int
:	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_LBRACE	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
szPunct	array(char)
,	O
"* Section must be delimited by curly braces."	*(char)
)	O
;	O
}	O
else	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
KM_TO_CN	O
(	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_DYNAMICS	int
:	O
if	O
(	O
bDynamicsDefined	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_DUPSECT	O
|	O
RE_FATAL	int
,	O
"Dynamics"	*(char)
,	O
NULL	O
)	O
;	O
bDynamicsDefined	int
=	O
TRUE	int
;	O
if	O
(	O
!	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_LBRACE	O
;	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
szPunct	array(char)
,	O
"* Section must be delimited by curly braces."	*(char)
)	O
;	O
}	O
else	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
KM_TO_CN	O
(	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_DXDT	int
:	O
ProcessDTStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_INLINE	int
:	O
ProcessInlineStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
break	O
;	O
case	O
KM_SBMLMODELS	int
:	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'='	O
)	O
)	O
{	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
ReadSBMLModels	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
"{"	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
"="	*(char)
,	O
NULL	O
)	O
;	O
break	O
;	O
case	O
KM_PKTEMPLATE	int
:	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
'='	O
)	O
)	O
{	O
if	O
(	O
GetPunct	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),char)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
CH_LBRACE	O
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
"\nreading pharmacokinetic template "	*(char)
)	O
;	O
ReadPKTemplate	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
"{"	*(char)
,	O
NULL	O
)	O
;	O
}	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
RE_EXPECTED	int
|	O
RE_FATAL	int
,	O
"="	*(char)
,	O
NULL	O
)	O
;	O
break	O
;	O
default	O
:	O
ProcessIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
,	O
szEqn	*(char)
,	O
iKWCode	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
iErr	int
)	O
EatStatement	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
}	O
int	O
FindEnd	(*(char),long)->(int)
(	O
PBUF	*(char)
pBuf	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
long	O
N	long
)	O
{	O
char	O
*	O
c	*(char)
,	O
*	O
end	*(char)
;	O
c	*(char)
=	O
pBuf	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
;	O
end	*(char)
=	O
pBuf	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
+	O
N	long
;	O
while	O
(	O
c	*(char)
<	O
end	*(char)
)	O
{	O
if	O
(	O
*	O
c	*(char)
==	O
CH_EOLN	O
)	O
{	O
c	*(char)
++	O
;	O
while	O
(	O
(	O
c	*(char)
<	O
end	*(char)
)	O
&&	O
(	O
isspace	(int)->(int)
(	O
*	O
c	*(char)
)	O
)	O
)	O
c	*(char)
++	O
;	O
if	O
(	O
c	*(char)
<	O
end	*(char)
)	O
{	O
if	O
(	O
(	O
(	O
c	*(char)
+	O
2	int
)	O
<	O
end	*(char)
)	O
&&	O
(	O
*	O
c	*(char)
==	O
'E'	O
)	O
&&	O
(	O
*	O
(	O
c	*(char)
+	O
1	int
)	O
==	O
'n'	O
)	O
&&	O
(	O
*	O
(	O
c	*(char)
+	O
2	int
)	O
==	O
'd'	O
)	O
)	O
return	O
(	O
1	int
)	O
;	O
}	O
}	O
c	*(char)
++	O
;	O
}	O
return	O
(	O
0	int
)	O
;	O
}	O
void	O
ReadModel	(*(struct(int,int,int,int,*(char),*(char),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)))),*(struct(int,int,int,int,*(char),*(char),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)),*(struct(*`,*`,long,*`)))),*(char))->(void)
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
,	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
,	O
PSTR	*(char)
szFileIn	*(char)
)	O
{	O
INPUTBUF	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
;	O
PSTRLEX	array(char)
szLex	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
iLexType	int
;	O
if	O
(	O
!	O
InitBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char))->(int)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
-	O
1	int
,	O
szFileIn	*(char)
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_INIT	int
|	O
RE_FATAL	int
,	O
"ReadModel"	*(char)
,	O
NULL	O
)	O
;	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pInfo	*(void)
=	O
(	O
PVOID	*(void)
)	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pTempInfo	*(void)
=	O
(	O
PVOID	*(void)
)	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
if	O
(	O
FindEnd	(*(char),long)->(int)
(	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
,	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
lBufSize	long
)	O
==	O
0	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
NULL	O
,	O
RE_NOEND	O
|	O
RE_FATAL	int
,	O
szFileIn	*(char)
,	O
NULL	O
)	O
;	O
do	O
{	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
szLex	*(char)
,	O
&	O
iLexType	int
)	O
;	O
switch	O
(	O
iLexType	int
)	O
{	O
case	O
LX_NULL	int
:	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_END	int
;	O
break	O
;	O
case	O
LX_IDENTIFIER	int
:	O
ProcessWord	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char))->(void)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
szLex	*(char)
,	O
szEqn	*(char)
)	O
;	O
break	O
;	O
case	O
LX_PUNCT	int
:	O
case	O
LX_EQNPUNCT	int
:	O
if	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
CH_STMTTERM	O
)	O
{	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
CH_RBRACE	O
&&	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
&	O
(	O
CN_DYNAMICS	int
|	O
CN_JACOB	int
|	O
CN_SCALE	int
)	O
)	O
)	O
{	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_GLOBAL	int
;	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
CH_COMMENT	O
)	O
{	O
SkipComment	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
;	O
break	O
;	O
}	O
}	O
}	O
default	O
:	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_UNEXPECTED	int
,	O
szLex	*(char)
,	O
"* Ignoring"	*(char)
)	O
;	O
break	O
;	O
case	O
LX_INTEGER	int
:	O
case	O
LX_FLOAT	int
:	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_UNEXPNUMBER	int
,	O
szLex	*(char)
,	O
"* Ignoring"	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
while	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
!=	O
CN_END	int
)	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_END	int
;	O
if	O
(	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
)	O
free	(*(void))->(void)
(	O
ibIn	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
)	O
;	O
}	O
