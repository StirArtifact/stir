struct	O
obstack	O
cond_obstack	O
;	O
struct	O
file_line	O
{	O
const	O
char	O
*	O
file	*(void)
;	O
unsigned	O
int	O
line	O
;	O
}	O
;	O
struct	O
conditional_frame	O
{	O
struct	O
file_line	O
if_file_line	O
;	O
struct	O
file_line	O
else_file_line	O
;	O
struct	O
conditional_frame	O
*	O
previous_cframe	O
;	O
int	O
else_seen	O
;	O
int	O
ignoring	O
;	O
int	O
dead_tree	O
;	O
int	O
macro_nest	O
;	O
}	O
;	O
static	O
void	O
initialize_cframe	O
(	O
struct	O
conditional_frame	O
*	O
cframe	O
)	O
;	O
static	O
char	O
*	O
get_mri_string	O
(	O
int	O
,	O
int	O
*	O
)	O
;	O
static	O
struct	O
conditional_frame	O
*	O
current_cframe	O
=	O
NULL	O
;	O
void	O
s_ifdef	O
(	O
int	O
test_defined	O
)	O
{	O
char	O
*	O
name	*(char)
;	O
symbolS	O
*	O
symbolP	O
;	O
struct	O
conditional_frame	O
cframe	O
;	O
char	O
c	O
;	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
name	*(char)
=	O
input_line_pointer	O
;	O
if	O
(	O
!	O
is_name_beginner	O
(	O
*	O
name	*(char)
)	O
&&	O
*	O
name	*(char)
!=	O
'"'	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
"invalid identifier for \".ifdef\""	*(char)
)	O
)	O
;	O
obstack_1grow	O
(	O
&	O
cond_obstack	O
,	O
0	int
)	O
;	O
ignore_rest_of_line	O
(	O
)	O
;	O
return	O
;	O
}	O
c	O
=	O
get_symbol_name	O
(	O
&	O
name	*(char)
)	O
;	O
symbolP	O
=	O
symbol_find	O
(	O
name	*(char)
)	O
;	O
(	O
void	O
)	O
restore_line_pointer	O
(	O
c	O
)	O
;	O
initialize_cframe	O
(	O
&	O
cframe	O
)	O
;	O
if	O
(	O
cframe	O
.	O
dead_tree	O
)	O
cframe	O
.	O
ignoring	O
=	O
1	int
;	O
else	O
{	O
int	O
is_defined	O
;	O
is_defined	O
=	O
symbolP	O
!=	O
NULL	O
&&	O
(	O
S_IS_DEFINED	O
(	O
symbolP	O
)	O
||	O
symbol_equated_p	O
(	O
symbolP	O
)	O
)	O
&&	O
S_GET_SEGMENT	O
(	O
symbolP	O
)	O
!=	O
reg_section	O
;	O
cframe	O
.	O
ignoring	O
=	O
!	O
(	O
test_defined	O
^	O
is_defined	O
)	O
;	O
}	O
current_cframe	O
=	O
(	O
struct	O
conditional_frame	O
*	O
)	O
obstack_alloc	O
(	O
&	O
cond_obstack	O
,	O
sizeof	O
cframe	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
current_cframe	O
,	O
&	O
cframe	O
,	O
sizeof	O
cframe	O
)	O
;	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
cframe	O
.	O
ignoring	O
&&	O
(	O
cframe	O
.	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
cframe	O
.	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
listing_list	O
(	O
2	int
)	O
;	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
void	O
s_if	O
(	O
int	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
{	O
expressionS	O
operand	O
;	O
struct	O
conditional_frame	O
cframe	O
;	O
int	O
t	O
;	O
char	O
*	O
stop	O
=	O
NULL	O
;	O
char	O
stopc	O
=	O
0	int
;	O
if	O
(	O
flag_mri	O
)	O
stop	O
=	O
mri_comment_field	O
(	O
&	O
stopc	O
)	O
;	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
if	O
(	O
current_cframe	O
!=	O
NULL	O
&&	O
current_cframe	O
->	O
ignoring	O
)	O
{	O
operand	O
.	O
X_add_number	O
=	O
0	int
;	O
while	O
(	O
!	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
)	O
++	O
input_line_pointer	O
;	O
}	O
else	O
{	O
expression_and_evaluate	O
(	O
&	O
operand	O
)	O
;	O
if	O
(	O
operand	O
.	O
X_op	O
!=	O
O_constant	O
)	O
as_bad	O
(	O
_	O
(	O
"non-constant expression in \".if\" statement"	*(char)
)	O
)	O
;	O
}	O
switch	O
(	O
(	O
operatorT	O
)	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
{	O
case	O
O_eq	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
==	O
0	int
;	O
break	O
;	O
case	O
O_ne	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
!=	O
0	int
;	O
break	O
;	O
case	O
O_lt	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
<	O
0	int
;	O
break	O
;	O
case	O
O_le	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
<=	O
0	int
;	O
break	O
;	O
case	O
O_ge	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
>=	O
0	int
;	O
break	O
;	O
case	O
O_gt	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
>	O
0	int
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
return	O
;	O
}	O
initialize_cframe	O
(	O
&	O
cframe	O
)	O
;	O
cframe	O
.	O
ignoring	O
=	O
cframe	O
.	O
dead_tree	O
||	O
!	O
t	O
;	O
current_cframe	O
=	O
(	O
struct	O
conditional_frame	O
*	O
)	O
obstack_alloc	O
(	O
&	O
cond_obstack	O
,	O
sizeof	O
cframe	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
current_cframe	O
,	O
&	O
cframe	O
,	O
sizeof	O
cframe	O
)	O
;	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
cframe	O
.	O
ignoring	O
&&	O
(	O
cframe	O
.	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
cframe	O
.	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
listing_list	O
(	O
2	int
)	O
;	O
if	O
(	O
flag_mri	O
)	O
mri_comment_end	O
(	O
stop	O
,	O
stopc	O
)	O
;	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
void	O
s_ifb	O
(	O
int	O
test_blank	O
)	O
{	O
struct	O
conditional_frame	O
cframe	O
;	O
initialize_cframe	O
(	O
&	O
cframe	O
)	O
;	O
if	O
(	O
cframe	O
.	O
dead_tree	O
)	O
cframe	O
.	O
ignoring	O
=	O
1	int
;	O
else	O
{	O
int	O
is_eol	O
;	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
is_eol	O
=	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
;	O
cframe	O
.	O
ignoring	O
=	O
(	O
test_blank	O
==	O
!	O
is_eol	O
)	O
;	O
}	O
current_cframe	O
=	O
(	O
struct	O
conditional_frame	O
*	O
)	O
obstack_alloc	O
(	O
&	O
cond_obstack	O
,	O
sizeof	O
cframe	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
current_cframe	O
,	O
&	O
cframe	O
,	O
sizeof	O
cframe	O
)	O
;	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
cframe	O
.	O
ignoring	O
&&	O
(	O
cframe	O
.	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
cframe	O
.	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
listing_list	O
(	O
2	int
)	O
;	O
ignore_rest_of_line	O
(	O
)	O
;	O
}	O
static	O
char	O
*	O
get_mri_string	O
(	O
int	O
terminator	O
,	O
int	O
*	O
len	long
)	O
{	O
char	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
char	O
*	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
;	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
=	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
input_line_pointer	O
;	O
if	O
(	O
*	O
input_line_pointer	O
==	O
'\''	O
)	O
{	O
++	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
;	O
++	O
input_line_pointer	O
;	O
while	O
(	O
!	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
)	O
{	O
*	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
++	O
=	O
*	O
input_line_pointer	O
++	O
;	O
if	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
-	O
1	int
]	O
==	O
'\''	O
)	O
{	O
if	O
(	O
*	O
input_line_pointer	O
!=	O
'\''	O
)	O
break	O
;	O
++	O
input_line_pointer	O
;	O
}	O
}	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
}	O
else	O
{	O
while	O
(	O
*	O
input_line_pointer	O
!=	O
terminator	O
&&	O
!	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
)	O
++	O
input_line_pointer	O
;	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
=	O
input_line_pointer	O
;	O
while	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
>	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
&&	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
-	O
1	int
]	O
==	O
' '	O
||	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
-	O
1	int
]	O
==	O
'\t'	O
)	O
)	O
--	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
;	O
}	O
*	O
len	long
=	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
-	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
return	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
}	O
void	O
s_ifc	O
(	O
int	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
{	O
char	O
*	O
stop	O
=	O
NULL	O
;	O
char	O
stopc	O
=	O
0	int
;	O
char	O
*	O
s1	O
,	O
*	O
s2	O
;	O
int	O
len1	O
,	O
len2	O
;	O
int	O
res	O
;	O
struct	O
conditional_frame	O
cframe	O
;	O
if	O
(	O
flag_mri	O
)	O
stop	O
=	O
mri_comment_field	O
(	O
&	O
stopc	O
)	O
;	O
s1	O
=	O
get_mri_string	O
(	O
','	O
,	O
&	O
len1	O
)	O
;	O
if	O
(	O
*	O
input_line_pointer	O
!=	O
','	O
)	O
as_bad	O
(	O
_	O
(	O
"bad format for ifc or ifnc"	*(char)
)	O
)	O
;	O
else	O
++	O
input_line_pointer	O
;	O
s2	O
=	O
get_mri_string	O
(	O
';'	O
,	O
&	O
len2	O
)	O
;	O
res	O
=	O
len1	O
==	O
len2	O
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
s1	O
,	O
s2	O
,	O
len1	O
)	O
==	O
0	int
;	O
initialize_cframe	O
(	O
&	O
cframe	O
)	O
;	O
cframe	O
.	O
ignoring	O
=	O
cframe	O
.	O
dead_tree	O
||	O
!	O
(	O
res	O
^	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
;	O
current_cframe	O
=	O
(	O
struct	O
conditional_frame	O
*	O
)	O
obstack_alloc	O
(	O
&	O
cond_obstack	O
,	O
sizeof	O
cframe	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
current_cframe	O
,	O
&	O
cframe	O
,	O
sizeof	O
cframe	O
)	O
;	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
cframe	O
.	O
ignoring	O
&&	O
(	O
cframe	O
.	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
cframe	O
.	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
listing_list	O
(	O
2	int
)	O
;	O
if	O
(	O
flag_mri	O
)	O
mri_comment_end	O
(	O
stop	O
,	O
stopc	O
)	O
;	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
void	O
s_elseif	O
(	O
int	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
{	O
if	O
(	O
current_cframe	O
==	O
NULL	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
"\".elseif\" without matching \".if\""	*(char)
)	O
)	O
;	O
}	O
else	O
if	O
(	O
current_cframe	O
->	O
else_seen	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
"\".elseif\" after \".else\""	*(char)
)	O
)	O
;	O
as_bad_where	O
(	O
current_cframe	O
->	O
else_file_line	O
.	O
file	*(void)
,	O
current_cframe	O
->	O
else_file_line	O
.	O
line	O
,	O
_	O
(	O
"here is the previous \".else\""	*(char)
)	O
)	O
;	O
as_bad_where	O
(	O
current_cframe	O
->	O
if_file_line	O
.	O
file	*(void)
,	O
current_cframe	O
->	O
if_file_line	O
.	O
line	O
,	O
_	O
(	O
"here is the previous \".if\""	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
current_cframe	O
->	O
else_file_line	O
.	O
file	*(void)
=	O
as_where	O
(	O
&	O
current_cframe	O
->	O
else_file_line	O
.	O
line	O
)	O
;	O
current_cframe	O
->	O
dead_tree	O
|=	O
!	O
current_cframe	O
->	O
ignoring	O
;	O
current_cframe	O
->	O
ignoring	O
=	O
current_cframe	O
->	O
dead_tree	O
;	O
}	O
if	O
(	O
current_cframe	O
==	O
NULL	O
||	O
current_cframe	O
->	O
ignoring	O
)	O
{	O
while	O
(	O
!	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
)	O
++	O
input_line_pointer	O
;	O
if	O
(	O
current_cframe	O
==	O
NULL	O
)	O
return	O
;	O
}	O
else	O
{	O
expressionS	O
operand	O
;	O
int	O
t	O
;	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
expression_and_evaluate	O
(	O
&	O
operand	O
)	O
;	O
if	O
(	O
operand	O
.	O
X_op	O
!=	O
O_constant	O
)	O
as_bad	O
(	O
_	O
(	O
"non-constant expression in \".elseif\" statement"	*(char)
)	O
)	O
;	O
switch	O
(	O
(	O
operatorT	O
)	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
{	O
case	O
O_eq	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
==	O
0	int
;	O
break	O
;	O
case	O
O_ne	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
!=	O
0	int
;	O
break	O
;	O
case	O
O_lt	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
<	O
0	int
;	O
break	O
;	O
case	O
O_le	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
<=	O
0	int
;	O
break	O
;	O
case	O
O_ge	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
>=	O
0	int
;	O
break	O
;	O
case	O
O_gt	O
:	O
t	O
=	O
operand	O
.	O
X_add_number	O
>	O
0	int
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
return	O
;	O
}	O
current_cframe	O
->	O
ignoring	O
=	O
current_cframe	O
->	O
dead_tree	O
||	O
!	O
t	O
;	O
}	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
(	O
current_cframe	O
->	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
current_cframe	O
->	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
{	O
if	O
(	O
!	O
current_cframe	O
->	O
ignoring	O
)	O
listing_list	O
(	O
1	int
)	O
;	O
else	O
listing_list	O
(	O
2	int
)	O
;	O
}	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
void	O
s_endif	O
(	O
int	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
ATTRIBUTE_UNUSED	O
)	O
{	O
struct	O
conditional_frame	O
*	O
hold	O
;	O
if	O
(	O
current_cframe	O
==	O
NULL	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
"\".endif\" without \".if\""	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
current_cframe	O
->	O
ignoring	O
&&	O
(	O
current_cframe	O
->	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
current_cframe	O
->	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
listing_list	O
(	O
1	int
)	O
;	O
hold	O
=	O
current_cframe	O
;	O
current_cframe	O
=	O
current_cframe	O
->	O
previous_cframe	O
;	O
obstack_free	O
(	O
&	O
cond_obstack	O
,	O
hold	O
)	O
;	O
}	O
if	O
(	O
flag_mri	O
)	O
{	O
while	O
(	O
!	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
)	O
++	O
input_line_pointer	O
;	O
}	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
void	O
s_else	O
(	O
int	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
ATTRIBUTE_UNUSED	O
)	O
{	O
if	O
(	O
current_cframe	O
==	O
NULL	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
"\".else\" without matching \".if\""	*(char)
)	O
)	O
;	O
}	O
else	O
if	O
(	O
current_cframe	O
->	O
else_seen	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
"duplicate \".else\""	*(char)
)	O
)	O
;	O
as_bad_where	O
(	O
current_cframe	O
->	O
else_file_line	O
.	O
file	*(void)
,	O
current_cframe	O
->	O
else_file_line	O
.	O
line	O
,	O
_	O
(	O
"here is the previous \".else\""	*(char)
)	O
)	O
;	O
as_bad_where	O
(	O
current_cframe	O
->	O
if_file_line	O
.	O
file	*(void)
,	O
current_cframe	O
->	O
if_file_line	O
.	O
line	O
,	O
_	O
(	O
"here is the previous \".if\""	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
current_cframe	O
->	O
else_file_line	O
.	O
file	*(void)
=	O
as_where	O
(	O
&	O
current_cframe	O
->	O
else_file_line	O
.	O
line	O
)	O
;	O
current_cframe	O
->	O
ignoring	O
=	O
current_cframe	O
->	O
dead_tree	O
|	O
!	O
current_cframe	O
->	O
ignoring	O
;	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
(	O
current_cframe	O
->	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
current_cframe	O
->	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
{	O
if	O
(	O
!	O
current_cframe	O
->	O
ignoring	O
)	O
listing_list	O
(	O
1	int
)	O
;	O
else	O
listing_list	O
(	O
2	int
)	O
;	O
}	O
current_cframe	O
->	O
else_seen	O
=	O
1	int
;	O
}	O
if	O
(	O
flag_mri	O
)	O
{	O
while	O
(	O
!	O
is_end_of_line	O
[	O
(	O
unsigned	O
char	O
)	O
*	O
input_line_pointer	O
]	O
)	O
++	O
input_line_pointer	O
;	O
}	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
void	O
s_ifeqs	O
(	O
int	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
{	O
char	O
*	O
s1	O
,	O
*	O
s2	O
;	O
int	O
len1	O
,	O
len2	O
;	O
int	O
res	O
;	O
struct	O
conditional_frame	O
cframe	O
;	O
s1	O
=	O
demand_copy_C_string	O
(	O
&	O
len1	O
)	O
;	O
SKIP_WHITESPACE	O
(	O
)	O
;	O
if	O
(	O
*	O
input_line_pointer	O
!=	O
','	O
)	O
{	O
as_bad	O
(	O
_	O
(	O
".ifeqs syntax error"	*(char)
)	O
)	O
;	O
ignore_rest_of_line	O
(	O
)	O
;	O
return	O
;	O
}	O
++	O
input_line_pointer	O
;	O
s2	O
=	O
demand_copy_C_string	O
(	O
&	O
len2	O
)	O
;	O
res	O
=	O
len1	O
==	O
len2	O
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
s1	O
,	O
s2	O
,	O
len1	O
)	O
==	O
0	int
;	O
initialize_cframe	O
(	O
&	O
cframe	O
)	O
;	O
cframe	O
.	O
ignoring	O
=	O
cframe	O
.	O
dead_tree	O
||	O
!	O
(	O
res	O
^	O
arg	*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(char))->(int)),*((long,int,int)->(*(void))),*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,*(char),*(char),int,int,*((*`,*`)->(*`)),*((*`,*`)->(int)),*((long,int,int)->(*`)),*(struct`),int)),int))
)	O
;	O
current_cframe	O
=	O
(	O
struct	O
conditional_frame	O
*	O
)	O
obstack_alloc	O
(	O
&	O
cond_obstack	O
,	O
sizeof	O
cframe	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
current_cframe	O
,	O
&	O
cframe	O
,	O
sizeof	O
cframe	O
)	O
;	O
if	O
(	O
LISTING_SKIP_COND	O
(	O
)	O
&&	O
cframe	O
.	O
ignoring	O
&&	O
(	O
cframe	O
.	O
previous_cframe	O
==	O
NULL	O
||	O
!	O
cframe	O
.	O
previous_cframe	O
->	O
ignoring	O
)	O
)	O
listing_list	O
(	O
2	int
)	O
;	O
demand_empty_rest_of_line	O
(	O
)	O
;	O
}	O
int	O
ignore_input	O
(	O
void	O
)	O
{	O
char	O
*	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
;	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
=	O
input_line_pointer	O
;	O
if	O
(	O
NO_PSEUDO_DOT	O
||	O
flag_m68k_mri	O
)	O
{	O
if	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
-	O
1	int
]	O
!=	O
'.'	O
)	O
--	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
;	O
}	O
else	O
{	O
if	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
-	O
1	int
]	O
!=	O
'.'	O
)	O
return	O
(	O
current_cframe	O
!=	O
NULL	O
)	O
&&	O
(	O
current_cframe	O
->	O
ignoring	O
)	O
;	O
}	O
if	O
(	O
(	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
0	int
]	O
==	O
'i'	O
||	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
0	int
]	O
==	O
'I'	O
)	O
&&	O
(	O
!	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
,	O
"if"	*(char)
,	O
2	int
)	O
||	O
!	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
,	O
"ifdef"	*(char)
,	O
5	int
)	O
||	O
!	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
,	O
"ifndef"	*(char)
,	O
6	int
)	O
)	O
)	O
||	O
(	O
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
0	int
]	O
==	O
'e'	O
||	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
[	O
0	int
]	O
==	O
'E'	O
)	O
&&	O
(	O
!	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
,	O
"else"	*(char)
,	O
4	int
)	O
||	O
!	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
,	O
"endif"	*(char)
,	O
5	int
)	O
||	O
!	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct))))
,	O
"endc"	*(char)
,	O
4	int
)	O
)	O
)	O
)	O
return	O
0	int
;	O
return	O
(	O
current_cframe	O
!=	O
NULL	O
)	O
&&	O
(	O
current_cframe	O
->	O
ignoring	O
)	O
;	O
}	O
static	O
void	O
initialize_cframe	O
(	O
struct	O
conditional_frame	O
*	O
cframe	O
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
cframe	O
,	O
0	int
,	O
sizeof	O
(	O
*	O
cframe	O
)	O
)	O
;	O
cframe	O
->	O
if_file_line	O
.	O
file	*(void)
=	O
as_where	O
(	O
&	O
cframe	O
->	O
if_file_line	O
.	O
line	O
)	O
;	O
cframe	O
->	O
previous_cframe	O
=	O
current_cframe	O
;	O
cframe	O
->	O
dead_tree	O
=	O
current_cframe	O
!=	O
NULL	O
&&	O
current_cframe	O
->	O
ignoring	O
;	O
cframe	O
->	O
macro_nest	O
=	O
macro_nest	O
;	O
}	O
void	O
cond_finish_check	O
(	O
int	O
nest	O
)	O
{	O
if	O
(	O
current_cframe	O
!=	O
NULL	O
&&	O
current_cframe	O
->	O
macro_nest	O
>=	O
nest	O
)	O
{	O
if	O
(	O
nest	O
>=	O
0	int
)	O
as_bad	O
(	O
_	O
(	O
"end of macro inside conditional"	*(char)
)	O
)	O
;	O
else	O
as_bad	O
(	O
_	O
(	O
"end of file inside conditional"	*(char)
)	O
)	O
;	O
as_bad_where	O
(	O
current_cframe	O
->	O
if_file_line	O
.	O
file	*(void)
,	O
current_cframe	O
->	O
if_file_line	O
.	O
line	O
,	O
_	O
(	O
"here is the start of the unterminated conditional"	*(char)
)	O
)	O
;	O
if	O
(	O
current_cframe	O
->	O
else_seen	O
)	O
as_bad_where	O
(	O
current_cframe	O
->	O
else_file_line	O
.	O
file	*(void)
,	O
current_cframe	O
->	O
else_file_line	O
.	O
line	O
,	O
_	O
(	O
"here is the \"else\" of the unterminated conditional"	*(char)
)	O
)	O
;	O
}	O
}	O
void	O
cond_exit_macro	O
(	O
int	O
nest	O
)	O
{	O
while	O
(	O
current_cframe	O
!=	O
NULL	O
&&	O
current_cframe	O
->	O
macro_nest	O
>=	O
nest	O
)	O
{	O
struct	O
conditional_frame	O
*	O
hold	O
;	O
hold	O
=	O
current_cframe	O
;	O
current_cframe	O
=	O
current_cframe	O
->	O
previous_cframe	O
;	O
obstack_free	O
(	O
&	O
cond_obstack	O
,	O
hold	O
)	O
;	O
}	O
}	O
