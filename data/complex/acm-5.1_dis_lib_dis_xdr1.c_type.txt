bool_t	int
xdr_dis_variable_datum	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))))->(int)
(	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
dis_variable_datum	struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char)))
*	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
{	O
static	O
char	O
pad	array(char)
[	O
8	int
]	O
;	O
int	O
padbytes	int
;	O
if	O
(	O
!	O
xdr_u_long	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
datum_id	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_u_long	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value_length	long
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
switch	O
(	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
datum_id	long
)	O
{	O
case	O
DatumGeocentricCoordinatesX	int
:	O
case	O
DatumGeocentricCoordinatesY	int
:	O
case	O
DatumGeocentricCoordinatesZ	int
:	O
if	O
(	O
!	O
xdr_double	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(double))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value	int
.	O
double_value	double
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
default	O
:	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value	int
.	O
ptr_value	*(char)
,	O
(	O
unsigned	O
int	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value_length	long
/	O
8	int
,	O
sizeof	O
(	O
char	O
)	O
,	O
(	O
xdrproc_t	*((*(struct(enum(int,int,int),*(struct`),*(char),*(char),*(char),int)),*(void))->(int))
)	O
xdr_u_char	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
}	O
padbytes	int
=	O
8	int
-	O
(	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value_length	long
%	O
8	int
)	O
;	O
if	O
(	O
padbytes	int
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
xdr_vector	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,int,*((*(struct(enum(int,int,int),*`,*`,*`,*`,int)),*(void))->(int)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
pad	array(char)
,	O
padbytes	int
,	O
sizeof	O
(	O
char	O
)	O
,	O
(	O
xdrproc_t	*((*(struct(enum(int,int,int),*(struct`),*(char),*(char),*(char),int)),*(void))->(int))
)	O
xdr_char	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char))->(int)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
bool_t	int
xdr_dis_articulation_parm	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))->(int)
(	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
*	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
{	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
type	int
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_u_char	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
change	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_short	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
id	char
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_byte_long	()->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
char	O
*	O
)	O
&	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
type	int
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
switch	O
(	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
type	int
)	O
{	O
default	O
:	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value	int
.	O
l	array(long)
[	O
0	int
]	O
=	O
0	int
;	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
value	int
.	O
l	array(long)
[	O
1	int
]	O
=	O
0	int
;	O
}	O
return	O
TRUE	O
;	O
}	O
bool_t	int
xdr_dis_timestamp	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(int,int)))->(int)
(	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
dis_timestamp	struct(int,int)
*	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
{	O
if	O
(	O
!	O
xdr_u_long	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(long))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
unsigned	O
long	O
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
bool_t	int
xdr_dis_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
{	O
u_long	long
pos	struct(double,double,double)
;	O
if	O
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
->	O
x_op	enum(int,int,int)
==	O
XDR_DECODE	int
)	O
{	O
pos	struct(double,double,double)
=	O
xdr_getpos	O
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
)	O
;	O
if	O
(	O
!	O
xdr_dis_pdu_header	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(char,char,char,char,struct(int,int),short,short)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_pdu_header	struct(char,char,char,char,struct(int,int),short,short)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
!	O
xdr_setpos	O
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
pos	struct(double,double,double)
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
}	O
switch	O
(	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
->	O
hdr	struct(char,char,char,char,struct(int,int),short,short)
.	O
pdu_type	char
)	O
{	O
case	O
PDUTypeEntityState	int
:	O
if	O
(	O
!	O
xdr_dis_entity_state_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_entity_state_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeCollision	int
:	O
if	O
(	O
!	O
xdr_dis_collision_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_collision_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float))
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeFire	int
:	O
if	O
(	O
!	O
xdr_dis_fire_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_fire_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeDetonation	int
:	O
if	O
(	O
!	O
xdr_dis_detonation_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_detonation_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeCreateEntity	int
:	O
if	O
(	O
!	O
xdr_dis_create_entity_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_create_entity_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeRemoveEntity	int
:	O
if	O
(	O
!	O
xdr_dis_remove_entity_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_remove_entity_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeStopFreeze	int
:	O
if	O
(	O
!	O
xdr_dis_stop_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_stop_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeStartResume	int
:	O
if	O
(	O
!	O
xdr_dis_start_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_start_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeEmission	int
:	O
if	O
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
->	O
x_op	enum(int,int,int)
==	O
XDR_DECODE	int
)	O
{	O
(	O
(	O
dis_em_emission_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct`))))))
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
->	O
system	(*(char))->(int)
=	O
NULL	O
;	O
}	O
if	O
(	O
!	O
xdr_dis_em_emission_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct`,struct`,*`)))))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_em_emission_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct(char,char,short,struct(float,float,float,float,float,float,float,float,float,float),char,char,char,char,long,*(struct`))))))
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeTransferControl	int
:	O
if	O
(	O
!	O
xdr_dis_transfer_control_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_transfer_control_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
case	O
PDUTypeAcknowledge	int
:	O
if	O
(	O
!	O
xdr_dis_acknowledge_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long)))->(int)
(	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
(	O
dis_acknowledge_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long)
*	O
)	O
objp	*(struct(long,long,union(double,struct(char,char,short,char,char,char,char),*(char))))
)	O
)	O
{	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
break	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
