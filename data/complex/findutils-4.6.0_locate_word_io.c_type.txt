enum	O
{	O
WORDBYTES	int
=	O
4	int
}	O
;	O
static	O
int	O
decode_value	(array(char),int,*(enum(int,int,int)),*(char))->(int)
(	O
const	O
unsigned	O
char	O
data	array(char)
[	O
]	O
,	O
int	O
limit	int
,	O
GetwordEndianState	enum(int,int,int)
*	O
endian_state_flag	*(enum(int,int,int))
,	O
const	O
char	O
*	O
filename	*(char)
)	O
{	O
int	O
swapped	int
;	O
union	O
{	O
int	O
ival	int
;	O
unsigned	O
char	O
data	array(char)
[	O
WORDBYTES	int
]	O
;	O
}	O
u	union(int,array(char))
;	O
u	union(int,array(char))
.	O
ival	int
=	O
0	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
u	union(int,array(char))
.	O
data	array(char)
,	O
data	array(char)
,	O
WORDBYTES	int
)	O
;	O
swapped	int
=	O
bswap_32	O
(	O
u	union(int,array(char))
.	O
ival	int
)	O
;	O
if	O
(	O
*	O
endian_state_flag	*(enum(int,int,int))
==	O
GetwordEndianStateInitial	int
)	O
{	O
if	O
(	O
u	union(int,array(char))
.	O
ival	int
<=	O
limit	int
)	O
{	O
if	O
(	O
swapped	int
>	O
limit	int
)	O
{	O
*	O
endian_state_flag	*(enum(int,int,int))
=	O
GetwordEndianStateNative	int
;	O
}	O
return	O
u	union(int,array(char))
.	O
ival	int
;	O
}	O
else	O
{	O
if	O
(	O
swapped	int
<=	O
limit	int
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"WARNING: locate database %s was "	*(char)
"built with a different byte order"	*(char)
)	O
,	O
quotearg_n_style	(int,enum(int,int,int,int,int,int,int,int,int,int,int),*(char))->(*(char))
(	O
0	int
,	O
locale_quoting_style	int
,	O
filename	*(char)
)	O
)	O
;	O
*	O
endian_state_flag	*(enum(int,int,int))
=	O
GetwordEndianStateSwab	int
;	O
return	O
swapped	int
;	O
}	O
else	O
{	O
return	O
u	union(int,array(char))
.	O
ival	int
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
*	O
endian_state_flag	*(enum(int,int,int))
==	O
GetwordEndianStateSwab	int
)	O
return	O
swapped	int
;	O
else	O
return	O
u	union(int,array(char))
.	O
ival	int
;	O
}	O
}	O
int	O
getword	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,long,*(enum(int,int,int)))->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
const	O
char	O
*	O
filename	*(char)
,	O
size_t	long
minvalue	long
,	O
size_t	long
maxvalue	long
,	O
GetwordEndianState	enum(int,int,int)
*	O
endian_state_flag	*(enum(int,int,int))
)	O
{	O
unsigned	O
char	O
data	array(char)
[	O
4	int
]	O
;	O
size_t	long
bytes_read	long
;	O
clearerr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
bytes_read	long
=	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
data	array(char)
,	O
WORDBYTES	int
,	O
1	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
bytes_read	long
!=	O
1	int
)	O
{	O
const	O
char	O
*	O
quoted_name	*(char)
=	O
quotearg_n_style	(int,enum(int,int,int,int,int,int,int,int,int,int,int),*(char))->(*(char))
(	O
0	int
,	O
locale_quoting_style	int
,	O
filename	*(char)
)	O
;	O
if	O
(	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
_	O
(	O
"unexpected EOF in %s"	*(char)
)	O
,	O
quoted_name	*(char)
)	O
;	O
else	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"error reading a word from %s"	*(char)
)	O
,	O
quoted_name	*(char)
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
else	O
{	O
return	O
decode_value	(array(char),int,*(enum(int,int,int)),*(char))->(int)
(	O
data	array(char)
,	O
maxvalue	long
,	O
endian_state_flag	*(enum(int,int,int))
,	O
filename	*(char)
)	O
;	O
}	O
}	O
bool	bool
putword	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,enum(int,int,int))->(bool)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
word	int
,	O
GetwordEndianState	enum(int,int,int)
endian_state_flag	*(enum(int,int,int))
)	O
{	O
size_t	long
items_written	long
;	O
assert	O
(	O
endian_state_flag	*(enum(int,int,int))
!=	O
GetwordEndianStateInitial	int
)	O
;	O
if	O
(	O
GetwordEndianStateSwab	int
==	O
endian_state_flag	*(enum(int,int,int))
)	O
{	O
word	int
=	O
bswap_32	O
(	O
word	int
)	O
;	O
}	O
items_written	long
=	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
word	int
,	O
sizeof	O
(	O
word	int
)	O
,	O
1	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
1	int
==	O
items_written	long
)	O
return	O
true	int
;	O
else	O
return	O
false	int
;	O
}	O
