int	O
mu_imapio_send_qstring_unfold	(*(struct),*(char),int)->(int)
(	O
struct	O
_mu_imapio	struct(*(struct),*(char),long,long,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,int,int,int,int)
*	O
io	*(struct)
,	O
const	O
char	O
*	O
buffer	*(char)
,	O
int	O
unfold	int
)	O
{	O
int	O
len	long
;	O
if	O
(	O
buffer	*(char)
==	O
NULL	O
)	O
return	O
mu_imapio_printf	(*(struct),*(char))->(int)
(	O
io	*(struct)
,	O
"NIL"	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
[	O
len	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
buffer	*(char)
,	O
"\r\n"	*(char)
)	O
]	O
)	O
{	O
if	O
(	O
unfold	int
)	O
{	O
int	O
rc	int
;	O
size_t	long
size	long
=	O
strlen	(*(char))->(long)
(	O
buffer	*(char)
)	O
;	O
rc	int
=	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"{%lu}\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
size	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
while	O
(	O
1	int
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
buffer	*(char)
,	O
len	long
,	O
NULL	O
)	O
;	O
buffer	*(char)
+=	O
len	long
;	O
if	O
(	O
*	O
buffer	*(char)
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
" "	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
buffer	*(char)
=	O
mu_str_skip_class	(*(char),int)->(*(char))
(	O
buffer	*(char)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
len	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
buffer	*(char)
,	O
"\r\n"	*(char)
)	O
;	O
}	O
else	O
break	O
;	O
}	O
}	O
else	O
mu_imapio_send_literal_string	(*(struct),*(char))->(int)
(	O
io	*(struct)
,	O
buffer	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_escape	array(*(char))
[	O
MU_WRDSX_QUOTE	O
]	O
&&	O
buffer	*(char)
[	O
len	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
buffer	*(char)
,	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_escape	array(*(char))
[	O
MU_WRDSX_QUOTE	O
]	O
)	O
]	O
)	O
{	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"\""	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
while	O
(	O
1	int
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
buffer	*(char)
,	O
len	long
,	O
NULL	O
)	O
;	O
buffer	*(char)
+=	O
len	long
;	O
if	O
(	O
*	O
buffer	*(char)
)	O
{	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"\\"	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
buffer	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
buffer	*(char)
++	O
;	O
len	long
=	O
strcspn	(*(char),*(char))->(long)
(	O
buffer	*(char)
,	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_escape	array(*(char))
[	O
MU_WRDSX_QUOTE	O
]	O
)	O
;	O
}	O
else	O
break	O
;	O
}	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"\""	*(char)
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
buffer	*(char)
[	O
0	int
]	O
==	O
0	int
||	O
buffer	*(char)
[	O
strcspn	(*(char),*(char))->(long)
(	O
buffer	*(char)
,	O
io	*(struct)
->	O
_imap_ws	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
.	O
ws_delim	*(char)
)	O
]	O
)	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
"\"%s\""	*(char)
,	O
buffer	*(char)
)	O
;	O
else	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
buffer	*(char)
,	O
len	long
,	O
NULL	O
)	O
;	O
return	O
mu_stream_last_error	(*(struct))->(int)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
)	O
;	O
}	O
int	O
mu_imapio_send_qstring	(*(struct),*(char))->(int)
(	O
struct	O
_mu_imapio	struct(*(struct),*(char),long,long,struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*`,long,long,int,int,long,long,*`,*`,array(*(char)),*`,*`,*`,*`,*`,long,long,*`,long,*`,long,long,*`,*`,*`,*`,long,long,int,*`,*`,*`,*`,array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int),int,int,int,int,int)
*	O
io	*(struct)
,	O
const	O
char	O
*	O
buffer	*(char)
)	O
{	O
return	O
mu_imapio_send_qstring_unfold	(*(struct),*(char),int)->(int)
(	O
io	*(struct)
,	O
buffer	*(char)
,	O
0	int
)	O
;	O
}	O
