struct	O
datbuf	struct(*(char),long)
{	O
unsigned	O
char	O
*	O
buffer	*(char)
;	O
size_t	long
size	int
;	O
}	O
;	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
size_t	long
line	*(long)
;	O
char	O
*	O
linebuf	*(char)
;	O
size_t	long
lbsize	long
;	O
size_t	long
lblevel	long
;	O
char	O
*	O
buffer	*(char)
;	O
size_t	long
bufsize	long
;	O
size_t	long
buflevel	long
;	O
size_t	long
parmc	long
;	O
struct	O
datbuf	struct(*(char),long)
data	*(void)
[	O
2	int
]	O
;	O
char	O
*	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
;	O
}	O
;	O
static	O
void	O
dump_file_free	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(void)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
{	O
free	(*(void))->(void)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
data	*(void)
[	O
0	int
]	O
.	O
buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
data	*(void)
[	O
1	int
]	O
.	O
buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
)	O
;	O
}	O
static	O
const	O
char	O
*	O
getparm	(*(char),*(char))->(*(char))
(	O
const	O
char	O
*	O
buf	*(void)
,	O
const	O
char	O
*	O
parm	*(char)
)	O
{	O
if	O
(	O
!	O
buf	*(void)
)	O
return	O
NULL	O
;	O
while	O
(	O
*	O
buf	*(void)
)	O
{	O
const	O
char	O
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
parm	*(char)
;	O
*	O
p	*(char)
==	O
*	O
buf	*(void)
;	O
p	*(char)
++	O
,	O
buf	*(void)
++	O
)	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
0	int
&&	O
*	O
buf	*(void)
==	O
'='	O
)	O
return	O
buf	*(void)
+	O
1	int
;	O
buf	*(void)
+=	O
strlen	(*(char))->(long)
(	O
buf	*(void)
)	O
+	O
1	int
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
size_t	long
get_dump_line	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(long)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
{	O
char	O
buf	*(void)
[	O
80	int
]	O
;	O
if	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
==	O
0	int
)	O
{	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(void)
,	O
sizeof	O
buf	*(void)
,	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
size_t	long
n	int
=	O
strlen	(*(char))->(long)
(	O
buf	*(void)
)	O
;	O
if	O
(	O
buf	*(void)
[	O
n	int
-	O
1	int
]	O
==	O
'\n'	O
)	O
{	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
line	*(long)
++	O
;	O
--	O
n	int
;	O
}	O
if	O
(	O
n	int
+	O
1	int
+	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
>	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lbsize	long
)	O
{	O
size_t	long
s	long
=	O
(	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
+	O
n	int
+	O
_GDBM_MAX_DUMP_LINE_LEN	int
)	O
/	O
_GDBM_MAX_DUMP_LINE_LEN	int
)	O
*	O
_GDBM_MAX_DUMP_LINE_LEN	int
;	O
char	O
*	O
newp	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
,	O
s	long
)	O
;	O
if	O
(	O
!	O
newp	*(char)
)	O
return	O
GDBM_MALLOC_ERROR	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
=	O
newp	*(char)
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lbsize	long
=	O
s	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
+	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
,	O
buf	*(void)
,	O
n	int
)	O
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
+=	O
n	int
;	O
if	O
(	O
buf	*(void)
[	O
n	int
]	O
)	O
{	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
]	O
=	O
0	int
;	O
break	O
;	O
}	O
}	O
}	O
return	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
;	O
}	O
static	O
int	O
get_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
{	O
size_t	long
n	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
=	O
0	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
parmc	long
=	O
0	int
;	O
while	O
(	O
(	O
n	int
=	O
get_dump_line	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(long)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
)	O
)	O
{	O
if	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
[	O
0	int
]	O
==	O
'#'	O
)	O
return	O
0	int
;	O
if	O
(	O
n	int
+	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
>	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
bufsize	long
)	O
{	O
size_t	long
s	long
=	O
(	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
+	O
n	int
+	O
_GDBM_MAX_DUMP_LINE_LEN	int
-	O
1	int
)	O
/	O
_GDBM_MAX_DUMP_LINE_LEN	int
)	O
*	O
_GDBM_MAX_DUMP_LINE_LEN	int
;	O
char	O
*	O
newp	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
,	O
s	long
)	O
;	O
if	O
(	O
!	O
newp	*(char)
)	O
return	O
GDBM_MALLOC_ERROR	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
=	O
newp	*(char)
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
bufsize	long
=	O
s	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
+	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
,	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
,	O
n	int
)	O
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
+=	O
n	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
=	O
0	int
;	O
}	O
return	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
?	O
GDBM_FILE_READ_ERROR	int
:	O
0	int
;	O
}	O
static	O
int	O
get_parms	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
{	O
size_t	long
n	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
=	O
0	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
parmc	long
=	O
0	int
;	O
while	O
(	O
(	O
n	int
=	O
get_dump_line	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(long)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
)	O
)	O
{	O
char	O
*	O
p	*(char)
;	O
p	*(char)
=	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
linebuf	*(char)
;	O
if	O
(	O
*	O
p	*(char)
!=	O
'#'	O
)	O
return	O
0	int
;	O
if	O
(	O
n	int
==	O
0	int
||	O
*	O
++	O
p	*(char)
!=	O
':'	O
)	O
{	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
=	O
0	int
;	O
continue	O
;	O
}	O
if	O
(	O
--	O
n	int
==	O
0	int
)	O
{	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
=	O
0	int
;	O
continue	O
;	O
}	O
if	O
(	O
n	int
+	O
1	int
+	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
>	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
bufsize	long
)	O
{	O
size_t	long
s	long
=	O
(	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
+	O
n	int
+	O
_GDBM_MAX_DUMP_LINE_LEN	int
)	O
/	O
_GDBM_MAX_DUMP_LINE_LEN	int
)	O
*	O
_GDBM_MAX_DUMP_LINE_LEN	int
;	O
char	O
*	O
newp	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
,	O
s	long
)	O
;	O
if	O
(	O
!	O
newp	*(char)
)	O
return	O
GDBM_MALLOC_ERROR	int
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
=	O
newp	*(char)
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
bufsize	long
=	O
s	long
;	O
}	O
while	O
(	O
*	O
p	*(char)
)	O
{	O
p	*(char)
++	O
;	O
while	O
(	O
*	O
p	*(char)
==	O
' '	O
||	O
*	O
p	*(char)
==	O
'\t'	O
)	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
{	O
while	O
(	O
*	O
p	*(char)
&&	O
*	O
p	*(char)
!=	O
'='	O
)	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
++	O
]	O
=	O
*	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
'='	O
)	O
{	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
++	O
]	O
=	O
*	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
'"'	O
)	O
{	O
p	*(char)
++	O
;	O
while	O
(	O
*	O
p	*(char)
&&	O
*	O
p	*(char)
!=	O
'"'	O
)	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
++	O
]	O
=	O
*	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
'"'	O
)	O
p	*(char)
++	O
;	O
}	O
else	O
{	O
while	O
(	O
!	O
(	O
*	O
p	*(char)
==	O
0	int
||	O
*	O
p	*(char)
==	O
','	O
)	O
)	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
++	O
]	O
=	O
*	O
p	*(char)
++	O
;	O
}	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
parmc	long
++	O
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
++	O
]	O
=	O
0	int
;	O
}	O
else	O
return	O
GDBM_ILLEGAL_DATA	int
;	O
}	O
else	O
break	O
;	O
}	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
lblevel	long
=	O
0	int
;	O
}	O
if	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
)	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
[	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
]	O
=	O
0	int
;	O
return	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
?	O
GDBM_FILE_READ_ERROR	int
:	O
0	int
;	O
}	O
int	O
get_len	(*(char),*(long))->(int)
(	O
const	O
char	O
*	O
param	*(char)
,	O
size_t	long
*	O
plen	*(long)
)	O
{	O
unsigned	O
long	O
n	int
;	O
const	O
char	O
*	O
p	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
param	*(char)
,	O
"len"	*(char)
)	O
;	O
char	O
*	O
end	*(char)
;	O
if	O
(	O
!	O
p	*(char)
)	O
return	O
GDBM_ITEM_NOT_FOUND	int
;	O
errno	O
=	O
0	int
;	O
n	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
,	O
&	O
end	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
end	*(char)
==	O
0	int
&&	O
errno	O
==	O
0	int
)	O
{	O
*	O
plen	*(long)
=	O
n	int
;	O
return	O
0	int
;	O
}	O
return	O
GDBM_ILLEGAL_DATA	int
;	O
}	O
int	O
read_record	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(char),int,*(struct(*(char),int)))->(int)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
,	O
char	O
*	O
param	*(char)
,	O
int	O
n	int
,	O
datum	struct(*(char),int)
*	O
dat	*(struct(*(char),int))
)	O
{	O
int	O
rc	int
;	O
size_t	long
len	long
,	O
consumed_size	long
,	O
decoded_size	long
;	O
if	O
(	O
!	O
param	*(char)
)	O
{	O
rc	int
=	O
get_parms	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
parmc	long
==	O
0	int
)	O
return	O
GDBM_ITEM_NOT_FOUND	int
;	O
param	*(char)
=	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
;	O
}	O
rc	int
=	O
get_len	(*(char),*(long))->(int)
(	O
param	*(char)
,	O
&	O
len	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
dat	*(struct(*(char),int))
->	O
dsize	int
=	O
len	long
;	O
rc	int
=	O
get_data	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
_gdbm_base64_decode	(*(char),long,*(*(char)),*(long),*(long),*(long))->(int)
(	O
(	O
unsigned	O
char	O
*	O
)	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
,	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
,	O
&	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
data	*(void)
[	O
n	int
]	O
.	O
buffer	*(char)
,	O
&	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
data	*(void)
[	O
n	int
]	O
.	O
size	int
,	O
&	O
consumed_size	long
,	O
&	O
decoded_size	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
consumed_size	long
!=	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
||	O
decoded_size	long
!=	O
len	long
)	O
return	O
GDBM_ILLEGAL_DATA	int
;	O
dat	*(struct(*(char),int))
->	O
dptr	*(char)
=	O
(	O
void	O
*	O
)	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
data	*(void)
[	O
n	int
]	O
.	O
buffer	*(char)
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_set_gdbm_meta_info	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(char),int)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
char	O
*	O
param	*(char)
,	O
int	O
meta_mask	int
)	O
{	O
unsigned	O
long	O
n	int
;	O
uid_t	int
owner_uid	int
;	O
uid_t	int
owner_gid	int
;	O
mode_t	int
mode	int
;	O
int	O
meta_flags	int
=	O
0	int
;	O
const	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
end	*(char)
;	O
if	O
(	O
!	O
(	O
meta_mask	int
&	O
GDBM_META_MASK_OWNER	int
)	O
)	O
{	O
p	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
param	*(char)
,	O
"user"	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
p	*(char)
)	O
;	O
if	O
(	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
owner_uid	int
=	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
;	O
meta_flags	int
|=	O
META_UID	int
;	O
}	O
}	O
if	O
(	O
!	O
(	O
meta_flags	int
&	O
META_UID	int
)	O
&&	O
(	O
p	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
param	*(char)
,	O
"uid"	*(char)
)	O
)	O
)	O
{	O
errno	O
=	O
0	int
;	O
n	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
,	O
&	O
end	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
end	*(char)
==	O
0	int
&&	O
errno	O
==	O
0	int
)	O
{	O
owner_uid	int
=	O
n	int
;	O
meta_flags	int
|=	O
META_UID	int
;	O
}	O
}	O
p	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
param	*(char)
,	O
"group"	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
gr	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrnam	(*(char))->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
p	*(char)
)	O
;	O
if	O
(	O
gr	*(struct(*(char),*(char),int,*(*(char))))
)	O
{	O
owner_gid	int
=	O
gr	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_gid	int
;	O
meta_flags	int
|=	O
META_GID	int
;	O
}	O
}	O
if	O
(	O
!	O
(	O
meta_flags	int
&	O
META_GID	int
)	O
&&	O
(	O
p	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
param	*(char)
,	O
"gid"	*(char)
)	O
)	O
)	O
{	O
errno	O
=	O
0	int
;	O
n	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
,	O
&	O
end	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
end	*(char)
==	O
0	int
&&	O
errno	O
==	O
0	int
)	O
{	O
owner_gid	int
=	O
n	int
;	O
meta_flags	int
|=	O
META_GID	int
;	O
}	O
}	O
}	O
if	O
(	O
!	O
(	O
meta_mask	int
&	O
GDBM_META_MASK_MODE	int
)	O
)	O
{	O
p	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
param	*(char)
,	O
"mode"	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
errno	O
=	O
0	int
;	O
n	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
,	O
&	O
end	*(char)
,	O
8	int
)	O
;	O
if	O
(	O
*	O
end	*(char)
==	O
0	int
&&	O
errno	O
==	O
0	int
)	O
{	O
mode	int
=	O
n	int
&	O
0777	int
;	O
meta_flags	int
|=	O
META_MODE	int
;	O
}	O
}	O
}	O
if	O
(	O
meta_flags	int
)	O
{	O
int	O
fd	int
=	O
gdbm_fdesc	(*(struct))->(int)
(	O
dbf	*(struct)
)	O
;	O
if	O
(	O
getuid	()->(int)
(	O
)	O
==	O
0	int
&&	O
(	O
meta_flags	int
&	O
(	O
META_UID	int
|	O
META_GID	int
)	O
)	O
)	O
{	O
if	O
(	O
(	O
meta_flags	int
&	O
(	O
META_UID	int
|	O
META_GID	int
)	O
)	O
!=	O
(	O
META_UID	int
|	O
META_GID	int
)	O
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_STAT_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
!	O
(	O
meta_flags	int
&	O
META_UID	int
)	O
)	O
owner_uid	int
=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_uid	int
;	O
if	O
(	O
!	O
(	O
meta_flags	int
&	O
META_GID	int
)	O
)	O
owner_gid	int
=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_gid	int
;	O
}	O
if	O
(	O
fchown	(int,int,int)->(int)
(	O
fd	int
,	O
owner_uid	int
,	O
owner_gid	int
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_ERR_FILE_OWNER	int
,	O
FALSE	int
)	O
;	O
return	O
1	int
;	O
}	O
}	O
if	O
(	O
(	O
meta_flags	int
&	O
META_MODE	int
)	O
&&	O
fchmod	(int,int)->(int)
(	O
fd	int
,	O
mode	int
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_ERR_FILE_OWNER	int
,	O
FALSE	int
)	O
;	O
return	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
_gdbm_load_file	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long))),int,int)->(int)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
,	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
GDBM_FILE	*(struct)
*	O
ofp	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
int	O
replace	int
,	O
int	O
meta_mask	int
)	O
{	O
char	O
*	O
param	*(char)
=	O
NULL	O
;	O
int	O
rc	int
;	O
GDBM_FILE	*(struct)
tmp	*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*(char))->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long))))),*(long),*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),int,int,int,int,long,*(void),long,long,long))
=	O
NULL	O
;	O
rc	int
=	O
get_parms	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
parmc	long
)	O
{	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
=	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buffer	*(char)
=	O
NULL	O
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
bufsize	long
=	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
buflevel	long
=	O
0	int
;	O
}	O
else	O
return	O
GDBM_ILLEGAL_DATA	int
;	O
if	O
(	O
!	O
dbf	*(struct)
)	O
{	O
const	O
char	O
*	O
filename	*(char)
=	O
getparm	(*(char),*(char))->(*(char))
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
,	O
"file"	*(char)
)	O
;	O
if	O
(	O
!	O
filename	*(char)
)	O
return	O
GDBM_NO_DBNAME	int
;	O
tmp	*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*(char))->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long))))),*(long),*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),int,int,int,int,long,*(void),long,long,long))
=	O
gdbm_open	(*(char),int,int,int,*((*(char))->(void)))->(*(struct))
(	O
filename	*(char)
,	O
0	int
,	O
replace	int
?	O
GDBM_WRCREAT	int
:	O
GDBM_NEWDB	int
,	O
0600	int
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
tmp	*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*(char))->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long))))),*(long),*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),int,int,int,int,long,*(void),long,long,long))
)	O
return	O
gdbm_errno	O
;	O
dbf	*(struct)
=	O
tmp	*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*(char))->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long))))),*(long),*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),int,int,int,int,long,*(void),long,long,long))
;	O
}	O
param	*(char)
=	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
;	O
while	O
(	O
1	int
)	O
{	O
datum	struct(*(char),int)
key	struct(*(char),int)
,	O
content	struct(*(char),int)
;	O
rc	int
=	O
read_record	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(char),int,*(struct(*(char),int)))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
,	O
param	*(char)
,	O
0	int
,	O
&	O
key	struct(*(char),int)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
rc	int
==	O
GDBM_ITEM_NOT_FOUND	int
&&	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
rc	int
=	O
0	int
;	O
break	O
;	O
}	O
param	*(char)
=	O
NULL	O
;	O
rc	int
=	O
read_record	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(char),int,*(struct(*(char),int)))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
,	O
NULL	O
,	O
1	int
,	O
&	O
content	struct(*(char),int)
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
if	O
(	O
gdbm_store	(*(struct),struct(*(char),int),struct(*(char),int),int)->(int)
(	O
dbf	*(struct)
,	O
key	struct(*(char),int)
,	O
content	struct(*(char),int)
,	O
replace	int
)	O
)	O
{	O
rc	int
=	O
gdbm_errno	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
_set_gdbm_meta_info	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(char),int)->(int)
(	O
dbf	*(struct)
,	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
header	*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long)))))
,	O
meta_mask	int
)	O
;	O
*	O
ofp	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
=	O
dbf	*(struct)
;	O
}	O
else	O
if	O
(	O
tmp	*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*(char))->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long))))),*(long),*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),int,int,int,int,long,*(void),long,long,long))
)	O
gdbm_close	(*(struct))->(int)
(	O
tmp	*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*(char))->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct(int,int,long,array(struct(int,long))))),*(long),*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*(struct`),long,char,struct(int,int,int,*`,long,int))),int,int,int,int,long,*(void),long,long,long))
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
read_bdb_header	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
{	O
char	O
buf	*(void)
[	O
256	int
]	O
;	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
line	*(long)
=	O
1	int
;	O
if	O
(	O
!	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buf	*(void)
,	O
"VERSION=3\n"	*(char)
)	O
)	O
return	O
-	O
1	int
;	O
while	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
++	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
line	*(long)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
buf	*(void)
,	O
"HEADER=END\n"	*(char)
)	O
==	O
0	int
)	O
return	O
0	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
static	O
int	O
c2x	(int)->(int)
(	O
int	O
c	int
)	O
{	O
static	O
char	O
xdig	array(char)
[	O
]	O
=	O
"0123456789abcdef"	*(char)
;	O
char	O
*	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
xdig	array(char)
,	O
c	int
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
return	O
-	O
1	int
;	O
return	O
p	*(char)
-	O
xdig	array(char)
;	O
}	O
static	O
int	O
xdatum_read	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),int)),*(long))->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
datum	struct(*(char),int)
*	O
d	*(struct(*(char),int))
,	O
size_t	long
*	O
pdmax	*(long)
)	O
{	O
int	O
c	int
;	O
size_t	long
dmax	long
=	O
*	O
pdmax	*(long)
;	O
d	*(struct(*(char),int))
->	O
dsize	int
=	O
0	int
;	O
while	O
(	O
(	O
c	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
!=	O
EOF	O
&&	O
c	int
!=	O
'\n'	O
)	O
{	O
int	O
t	int
,	O
n	int
;	O
t	int
=	O
c2x	(int)->(int)
(	O
c	int
)	O
;	O
if	O
(	O
t	int
==	O
-	O
1	int
)	O
return	O
EOF	O
;	O
t	int
<<=	O
4	int
;	O
if	O
(	O
(	O
c	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
EOF	O
)	O
break	O
;	O
n	int
=	O
c2x	(int)->(int)
(	O
c	int
)	O
;	O
if	O
(	O
n	int
==	O
-	O
1	int
)	O
return	O
EOF	O
;	O
t	int
+=	O
n	int
;	O
if	O
(	O
d	*(struct(*(char),int))
->	O
dsize	int
==	O
dmax	long
)	O
{	O
char	O
*	O
np	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
d	*(struct(*(char),int))
->	O
dptr	*(char)
,	O
dmax	long
+	O
DINCR	int
)	O
;	O
if	O
(	O
!	O
np	*(char)
)	O
return	O
GDBM_MALLOC_ERROR	int
;	O
d	*(struct(*(char),int))
->	O
dptr	*(char)
=	O
np	*(char)
;	O
dmax	long
+=	O
DINCR	int
;	O
}	O
d	*(struct(*(char),int))
->	O
dptr	*(char)
[	O
d	*(struct(*(char),int))
->	O
dsize	int
++	O
]	O
=	O
t	int
;	O
}	O
*	O
pdmax	*(long)
=	O
dmax	long
;	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
return	O
0	int
;	O
return	O
c	int
;	O
}	O
int	O
gdbm_load_bdb_dump	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),int)->(int)
(	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
*	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
,	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
int	O
replace	int
)	O
{	O
datum	struct(*(char),int)
xd	array(struct(*(char),int))
[	O
2	int
]	O
;	O
size_t	long
xs	array(long)
[	O
2	int
]	O
;	O
int	O
rc	int
,	O
c	int
;	O
int	O
i	int
;	O
if	O
(	O
read_bdb_header	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
)	O
)	O
return	O
-	O
1	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
xd	array(struct(*(char),int))
,	O
0	int
,	O
sizeof	O
(	O
xd	array(struct(*(char),int))
)	O
)	O
;	O
xs	array(long)
[	O
0	int
]	O
=	O
xs	array(long)
[	O
1	int
]	O
=	O
0	int
;	O
i	int
=	O
0	int
;	O
rc	int
=	O
0	int
;	O
while	O
(	O
(	O
c	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
' '	O
)	O
{	O
rc	int
=	O
xdatum_read	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),int)),*(long))->(int)
(	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
xd	array(struct(*(char),int))
[	O
i	int
]	O
,	O
&	O
xs	array(long)
[	O
i	int
]	O
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
++	O
file	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char)))
->	O
line	*(long)
;	O
if	O
(	O
i	int
==	O
1	int
)	O
{	O
if	O
(	O
gdbm_store	(*(struct),struct(*(char),int),struct(*(char),int),int)->(int)
(	O
dbf	*(struct)
,	O
xd	array(struct(*(char),int))
[	O
0	int
]	O
,	O
xd	array(struct(*(char),int))
[	O
1	int
]	O
,	O
replace	int
)	O
)	O
return	O
gdbm_errno	O
;	O
}	O
i	int
=	O
!	O
i	int
;	O
}	O
free	(*(void))->(void)
(	O
xd	array(struct(*(char),int))
[	O
0	int
]	O
.	O
dptr	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
xd	array(struct(*(char),int))
[	O
1	int
]	O
.	O
dptr	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
i	int
)	O
rc	int
=	O
EOF	O
;	O
return	O
rc	int
;	O
}	O
int	O
gdbm_load_from_file	(*(*(struct)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int,*(long))->(int)
(	O
GDBM_FILE	*(struct)
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
replace	int
,	O
int	O
meta_mask	int
,	O
unsigned	O
long	O
*	O
line	*(long)
)	O
{	O
struct	O
dump_file	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
||	O
!	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
rc	int
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
rc	int
==	O
'!'	O
)	O
{	O
if	O
(	O
line	*(long)
)	O
*	O
line	*(long)
=	O
0	int
;	O
if	O
(	O
!	O
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_NO_DBNAME	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
gdbm_import_from_file	(*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(int)
(	O
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
replace	int
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
,	O
0	int
,	O
sizeof	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
)	O
;	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
.	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
if	O
(	O
rc	int
==	O
'V'	O
)	O
{	O
if	O
(	O
!	O
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_NO_DBNAME	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
gdbm_load_bdb_dump	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),int)->(int)
(	O
&	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
,	O
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
replace	int
)	O
;	O
}	O
else	O
rc	int
=	O
_gdbm_load_file	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))),*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct`),*(long),*(struct`),long,long,*(struct`),int,*(struct`),int,int,int,int,long,*(void),long,long,long))),int,int)->(int)
(	O
&	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
,	O
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
replace	int
,	O
meta_mask	int
)	O
;	O
dump_file_free	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))))->(void)
(	O
&	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
line	*(long)
)	O
*	O
line	*(long)
=	O
df	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,*(char),long,long,*(char),long,long,long,array(struct(*(char),long)),*(char))
.	O
line	*(long)
;	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
rc	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
gdbm_load	(*(*(struct)),*(char),int,int,*(long))->(int)
(	O
GDBM_FILE	*(struct)
*	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
const	O
char	O
*	O
filename	*(char)
,	O
int	O
replace	int
,	O
int	O
meta_mask	int
,	O
unsigned	O
long	O
*	O
line	*(long)
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
rc	int
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
!	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
gdbm_load_from_file	(*(*(struct)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int,*(long))->(int)
(	O
pdbf	*(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)))
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
replace	int
,	O
meta_mask	int
,	O
line	*(long)
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
rc	int
;	O
}	O
