OM_uint32	int
gss_get_mic	(*(int),*(struct),int,*(struct(long,*(void))),*(struct(long,*(void))))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_ctx_id_t	*(struct)
context_handle	*(*(struct))
,	O
gss_qop_t	int
qop_req	int
,	O
const	O
gss_buffer_t	*(struct(long,*(void)))
message_buffer	*(struct(long,*(void)))
,	O
gss_buffer_t	*(struct(long,*(void)))
message_token	*(struct(long,*(void)))
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
if	O
(	O
!	O
context_handle	*(*(struct))
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_NO_CONTEXT	O
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
context_handle	*(*(struct))
->	O
mech	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
return	O
mech	*(struct(int,*(void)))
->	O
get_mic	*((*(int),*(struct(*(struct`))),int,*(struct(long,*(void))),*(struct(long,*(void))))->(int))
(	O
minor_status	*(int)
,	O
context_handle	*(*(struct))
,	O
qop_req	int
,	O
message_buffer	*(struct(long,*(void)))
,	O
message_token	*(struct(long,*(void)))
)	O
;	O
}	O
OM_uint32	int
gss_verify_mic	(*(int),*(struct),*(struct(long,*(void))),*(struct(long,*(void))),*(int))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_ctx_id_t	*(struct)
context_handle	*(*(struct))
,	O
const	O
gss_buffer_t	*(struct(long,*(void)))
message_buffer	*(struct(long,*(void)))
,	O
const	O
gss_buffer_t	*(struct(long,*(void)))
token_buffer	*(struct(long,*(void)))
,	O
gss_qop_t	int
*	O
qop_state	*(int)
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
if	O
(	O
!	O
context_handle	*(*(struct))
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_NO_CONTEXT	O
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
context_handle	*(*(struct))
->	O
mech	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
return	O
mech	*(struct(int,*(void)))
->	O
verify_mic	*((*(int),*(struct(*(struct`))),*(struct(long,*(void))),*(struct(long,*(void))),*(int))->(int))
(	O
minor_status	*(int)
,	O
context_handle	*(*(struct))
,	O
message_buffer	*(struct(long,*(void)))
,	O
token_buffer	*(struct(long,*(void)))
,	O
qop_state	*(int)
)	O
;	O
}	O
OM_uint32	int
gss_wrap	(*(int),*(struct),int,int,*(struct(long,*(void))),*(int),*(struct(long,*(void))))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_ctx_id_t	*(struct)
context_handle	*(*(struct))
,	O
int	O
conf_req_flag	int
,	O
gss_qop_t	int
qop_req	int
,	O
const	O
gss_buffer_t	*(struct(long,*(void)))
input_message_buffer	*(struct(long,*(void)))
,	O
int	O
*	O
conf_state	*(int)
,	O
gss_buffer_t	*(struct(long,*(void)))
output_message_buffer	*(struct(long,*(void)))
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
if	O
(	O
!	O
context_handle	*(*(struct))
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_NO_CONTEXT	O
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
context_handle	*(*(struct))
->	O
mech	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
return	O
mech	*(struct(int,*(void)))
->	O
wrap	*((*(int),*(struct(*(struct`))),int,int,*(struct(long,*(void))),*(int),*(struct(long,*(void))))->(int))
(	O
minor_status	*(int)
,	O
context_handle	*(*(struct))
,	O
conf_req_flag	int
,	O
qop_req	int
,	O
input_message_buffer	*(struct(long,*(void)))
,	O
conf_state	*(int)
,	O
output_message_buffer	*(struct(long,*(void)))
)	O
;	O
}	O
OM_uint32	int
gss_unwrap	(*(int),*(struct),*(struct(long,*(void))),*(struct(long,*(void))),*(int),*(int))->(int)
(	O
OM_uint32	int
*	O
minor_status	*(int)
,	O
const	O
gss_ctx_id_t	*(struct)
context_handle	*(*(struct))
,	O
const	O
gss_buffer_t	*(struct(long,*(void)))
input_message_buffer	*(struct(long,*(void)))
,	O
gss_buffer_t	*(struct(long,*(void)))
output_message_buffer	*(struct(long,*(void)))
,	O
int	O
*	O
conf_state	*(int)
,	O
gss_qop_t	int
*	O
qop_state	*(int)
)	O
{	O
_gss_mech_api_t	*(struct(*(struct(int,*(void))),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*(int),*(struct`),*(*`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(*`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),*(struct`),*(*`))->(int)),*((*(int),*(struct`),*(struct`))->(int)),*((*(int),*(struct`),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int),*(int))->(int)),*((*(int),*(struct`),int,*(struct`),*(struct`))->(int)),*((*(int),*(struct`),*(struct`),*(struct`),*(int))->(int)),*((*(int),int,int,*(struct`),*(int),*(struct`))->(int)),*((*(int),*(struct`),int,*(struct`),int,*(*`),*(*`),*(int))->(int)),*((*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`),*(struct`),*(struct`),*(*`),*(*`),*(struct`),*(int),*(int),*(*`))->(int)),*((*(int),*(*`),*(struct`))->(int)),*((*(int),*(struct`),*(int))->(int)),*((*(int),*(struct`),*(*`),*(int),*(int),*(*`))->(int)),*((*(int),*(struct`),*(struct`),*(*`),*(int),*(int),*(int))->(int))))
mech	*(struct(int,*(void)))
;	O
if	O
(	O
!	O
context_handle	*(*(struct))
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_NO_CONTEXT	O
;	O
}	O
mech	*(struct(int,*(void)))
=	O
_gss_find_mech	(*(struct(int,*(void))))->(*(struct(*(struct(int,*`)),*(char),*(char),*(char),array(*(struct(int,*(void)))),*((*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,int,int,*`,*`,*`)->(int)),*((*`,*`,int,*`,int,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`,*`)->(int)))))
(	O
context_handle	*(*(struct))
->	O
mech	*(struct(int,*(void)))
)	O
;	O
if	O
(	O
mech	*(struct(int,*(void)))
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	*(int)
)	O
*	O
minor_status	*(int)
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
return	O
mech	*(struct(int,*(void)))
->	O
unwrap	*((*(int),*(struct(*(struct`))),*(struct(long,*(void))),*(struct(long,*(void))),*(int),*(int))->(int))
(	O
minor_status	*(int)
,	O
context_handle	*(*(struct))
,	O
input_message_buffer	*(struct(long,*(void)))
,	O
output_message_buffer	*(struct(long,*(void)))
,	O
conf_state	*(int)
,	O
qop_state	*(int)
)	O
;	O
}	O
