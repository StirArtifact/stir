union	O
value	union(*(char),int,int)
{	O
char	O
*	O
string	*(char)
;	O
int	O
bool	int
;	O
int	O
num	int
;	O
}	O
;	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
{	O
char	O
*	O
name	*(char)
;	O
int	O
type	int
;	O
int	O
flags	int
;	O
union	O
value	union(*(char),int,int)
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
;	O
int	O
(	O
*	O
hook	*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int))
)	O
(	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
,	O
union	O
value	union(*(char),int,int)
*	O
)	O
;	O
}	O
;	O
static	O
int	O
open_hook	(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)
(	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
,	O
union	O
value	union(*(char),int,int)
*	O
)	O
;	O
static	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
[	O
]	O
=	O
{	O
{	O
"ps1"	*(char)
,	O
VART_STRING	int
,	O
VARF_INIT	int
,	O
{	O
.	O
string	*(char)
=	O
"%p>%_"	*(char)
}	O
}	O
,	O
{	O
"ps2"	*(char)
,	O
VART_STRING	int
,	O
VARF_INIT	int
,	O
{	O
.	O
string	*(char)
=	O
"%_>%_"	*(char)
}	O
}	O
,	O
{	O
"delim1"	*(char)
,	O
VART_STRING	int
,	O
VARF_INIT	int
|	O
VARF_PROT	int
,	O
{	O
.	O
string	*(char)
=	O
","	*(char)
}	O
}	O
,	O
{	O
"delim2"	*(char)
,	O
VART_STRING	int
,	O
VARF_INIT	int
|	O
VARF_PROT	int
,	O
{	O
.	O
string	*(char)
=	O
","	*(char)
}	O
}	O
,	O
{	O
"confirm"	*(char)
,	O
VART_BOOL	int
,	O
VARF_INIT	int
,	O
{	O
.	O
bool	int
=	O
1	int
}	O
}	O
,	O
{	O
"cachesize"	*(char)
,	O
VART_INT	int
,	O
VARF_DFL	int
}	O
,	O
{	O
"blocksize"	*(char)
,	O
VART_INT	int
,	O
VARF_DFL	int
}	O
,	O
{	O
"open"	*(char)
,	O
VART_STRING	int
,	O
VARF_DFL	int
,	O
{	O
NULL	O
}	O
,	O
open_hook	(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)
}	O
,	O
{	O
"lock"	*(char)
,	O
VART_BOOL	int
,	O
VARF_INIT	int
,	O
{	O
.	O
bool	int
=	O
1	int
}	O
}	O
,	O
{	O
"mmap"	*(char)
,	O
VART_BOOL	int
,	O
VARF_INIT	int
,	O
{	O
.	O
bool	int
=	O
1	int
}	O
}	O
,	O
{	O
"sync"	*(char)
,	O
VART_BOOL	int
,	O
VARF_INIT	int
,	O
{	O
.	O
bool	int
=	O
0	int
}	O
}	O
,	O
{	O
"coalesce"	*(char)
,	O
VART_BOOL	int
,	O
VARF_INIT	int
,	O
{	O
.	O
bool	int
=	O
0	int
}	O
}	O
,	O
{	O
"centfree"	*(char)
,	O
VART_BOOL	int
,	O
VARF_INIT	int
,	O
{	O
.	O
bool	int
=	O
0	int
}	O
}	O
,	O
{	O
"filemode"	*(char)
,	O
VART_INT	int
,	O
VARF_INIT	int
|	O
VARF_OCTAL	int
|	O
VARF_PROT	int
,	O
{	O
.	O
num	int
=	O
0644	int
}	O
}	O
,	O
{	O
"pager"	*(char)
,	O
VART_STRING	int
,	O
VARF_DFL	int
}	O
,	O
{	O
"quiet"	*(char)
,	O
VART_BOOL	int
,	O
VARF_DFL	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
static	O
int	O
open_hook	(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)
(	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
var	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
union	O
value	union(*(char),int,int)
*	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
)	O
{	O
static	O
struct	O
{	O
char	O
*	O
s	*(char)
;	O
int	O
t	int
;	O
}	O
trans	array(struct(*(char),int))
[	O
]	O
=	O
{	O
{	O
"newdb"	*(char)
,	O
GDBM_NEWDB	int
}	O
,	O
{	O
"wrcreat"	*(char)
,	O
GDBM_WRCREAT	int
}	O
,	O
{	O
"rw"	*(char)
,	O
GDBM_WRCREAT	int
}	O
,	O
{	O
"reader"	*(char)
,	O
GDBM_READER	int
}	O
,	O
{	O
"readonly"	*(char)
,	O
GDBM_READER	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
int	O
i	int
;	O
if	O
(	O
!	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
)	O
return	O
VAR_ERR_BADVALUE	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
trans	array(struct(*(char),int))
[	O
i	int
]	O
.	O
s	*(char)
;	O
i	int
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
trans	array(struct(*(char),int))
[	O
i	int
]	O
.	O
s	*(char)
,	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
->	O
string	*(char)
)	O
==	O
0	int
)	O
{	O
open_mode	int
=	O
trans	array(struct(*(char),int))
[	O
i	int
]	O
.	O
t	int
;	O
return	O
VAR_OK	int
;	O
}	O
return	O
VAR_ERR_BADVALUE	int
;	O
}	O
static	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
varfind	(*(char))->(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
;	O
for	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
=	O
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
return	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
;	O
return	O
NULL	O
;	O
}	O
typedef	O
int	O
(	O
*	O
setvar_t	*((*(union(*(char),int,int)),*(void),int)->(int))
)	O
(	O
union	O
value	union(*(char),int,int)
*	O
,	O
void	O
*	O
,	O
int	O
)	O
;	O
static	O
int	O
s2s	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
string	*(char)
=	O
estrdup	(*(char))->(*(char))
(	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
b2s	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
string	*(char)
=	O
estrdup	(*(char))->(*(char))
(	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
?	O
"true"	*(char)
:	O
"false"	*(char)
)	O
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
i2s	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
char	O
buf	*(void)
[	O
128	int
]	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(void)
,	O
sizeof	O
buf	*(void)
,	O
"%d"	*(char)
,	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
string	*(char)
=	O
estrdup	(*(char))->(*(char))
(	O
buf	*(void)
)	O
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
s2b	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
static	O
char	O
*	O
trueval	array(*(char))
[	O
]	O
=	O
{	O
"on"	*(char)
,	O
"true"	*(char)
,	O
"yes"	*(char)
,	O
NULL	O
}	O
;	O
static	O
char	O
*	O
falseval	array(*(char))
[	O
]	O
=	O
{	O
"off"	*(char)
,	O
"false"	*(char)
,	O
"no"	*(char)
,	O
NULL	O
}	O
;	O
int	O
i	int
;	O
unsigned	O
long	O
n	int
;	O
char	O
*	O
p	*(char)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
trueval	array(*(char))
[	O
i	int
]	O
;	O
i	int
++	O
)	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
trueval	array(*(char))
[	O
i	int
]	O
,	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
==	O
0	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
bool	int
=	O
1	int
;	O
return	O
VAR_OK	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
falseval	array(*(char))
[	O
i	int
]	O
;	O
i	int
++	O
)	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
falseval	array(*(char))
[	O
i	int
]	O
,	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
==	O
0	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
bool	int
=	O
0	int
;	O
return	O
VAR_OK	int
;	O
}	O
n	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
&	O
p	*(char)
,	O
0	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
return	O
VAR_ERR_BADTYPE	int
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
bool	int
=	O
!	O
!	O
n	int
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
s2i	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
char	O
*	O
p	*(char)
;	O
int	O
n	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
&	O
p	*(char)
,	O
(	O
flags	int
&	O
VARF_OCTAL	int
)	O
?	O
8	int
:	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
return	O
VAR_ERR_BADTYPE	int
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
num	int
=	O
n	int
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
b2b	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
bool	int
=	O
!	O
!	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
b2i	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
num	int
=	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
i2i	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
num	int
=	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
i2b	(*(union(*(char),int,int)),*(void),int)->(int)
(	O
union	O
value	union(*(char),int,int)
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
int	O
flags	int
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
bool	int
=	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
;	O
return	O
VAR_OK	int
;	O
}	O
static	O
setvar_t	*((*(union(*(char),int,int)),*(void),int)->(int))
setvar	array(array(*((*(union(*(char),int,int)),*(void),int)->(int))))
[	O
3	int
]	O
[	O
3	int
]	O
=	O
{	O
{	O
s2s	(*(union(*(char),int,int)),*(void),int)->(int)
,	O
b2s	(*(union(*(char),int,int)),*(void),int)->(int)
,	O
i2s	(*(union(*(char),int,int)),*(void),int)->(int)
}	O
,	O
{	O
s2b	(*(union(*(char),int,int)),*(void),int)->(int)
,	O
b2b	(*(union(*(char),int,int)),*(void),int)->(int)
,	O
i2b	(*(union(*(char),int,int)),*(void),int)->(int)
}	O
,	O
{	O
s2i	(*(union(*(char),int,int)),*(void),int)->(int)
,	O
b2i	(*(union(*(char),int,int)),*(void),int)->(int)
,	O
i2i	(*(union(*(char),int,int)),*(void),int)->(int)
}	O
}	O
;	O
int	O
variable_set	(*(char),int,*(void))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
type	int
,	O
void	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
{	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
=	O
varfind	(*(char))->(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))))
(	O
name	*(char)
)	O
;	O
int	O
rc	int
;	O
union	O
value	union(*(char),int,int)
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
,	O
*	O
valp	*(union(*(char),int,int))
;	O
if	O
(	O
!	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
return	O
VAR_ERR_NOTDEF	int
;	O
if	O
(	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
,	O
0	int
,	O
sizeof	O
(	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
)	O
)	O
;	O
rc	int
=	O
setvar	array(array(*((*(union(*(char),int,int)),*(void),int)->(int))))
[	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
type	int
]	O
[	O
type	int
]	O
(	O
&	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
,	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
valp	*(union(*(char),int,int))
=	O
&	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
;	O
}	O
else	O
{	O
if	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&	O
VARF_PROT	int
)	O
return	O
VAR_ERR_BADVALUE	int
;	O
valp	*(union(*(char),int,int))
=	O
NULL	O
;	O
}	O
if	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
hook	*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int))
&&	O
(	O
rc	int
=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
hook	*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int))
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
valp	*(union(*(char),int,int))
)	O
)	O
!=	O
VAR_OK	int
)	O
return	O
rc	int
;	O
if	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
type	int
==	O
VART_STRING	int
&&	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&	O
VARF_SET	int
)	O
)	O
free	(*(void))->(void)
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
string	*(char)
)	O
;	O
if	O
(	O
!	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&=	O
(	O
VARF_INIT	int
|	O
VARF_SET	int
)	O
;	O
}	O
else	O
{	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
=	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&=	O
~	O
VARF_INIT	int
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
|=	O
VARF_SET	int
;	O
}	O
return	O
VAR_OK	int
;	O
}	O
int	O
variable_unset	(*(char))->(int)
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
=	O
varfind	(*(char))->(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))))
(	O
name	*(char)
)	O
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
return	O
VAR_ERR_NOTDEF	int
;	O
if	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&	O
VARF_PROT	int
)	O
return	O
VAR_ERR_BADVALUE	int
;	O
if	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
hook	*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int))
&&	O
(	O
rc	int
=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
hook	*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int))
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
,	O
NULL	O
)	O
)	O
!=	O
VAR_OK	int
)	O
return	O
rc	int
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&=	O
~	O
(	O
VARF_INIT	int
|	O
VARF_SET	int
)	O
;	O
return	O
VAR_OK	int
;	O
}	O
int	O
variable_get	(*(char),int,*(*(void)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
type	int
,	O
void	O
*	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
)	O
{	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
=	O
varfind	(*(char))->(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
return	O
VAR_ERR_NOTDEF	int
;	O
if	O
(	O
type	int
!=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
type	int
)	O
return	O
VAR_ERR_BADTYPE	int
;	O
if	O
(	O
!	O
VAR_IS_SET	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
)	O
return	O
VAR_ERR_NOTSET	int
;	O
switch	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
type	int
)	O
{	O
case	O
VART_STRING	int
:	O
*	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
string	*(char)
;	O
break	O
;	O
case	O
VART_BOOL	int
:	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
bool	int
;	O
break	O
;	O
case	O
VART_INT	int
:	O
*	O
(	O
int	O
*	O
)	O
val	union(*(char),*(struct(*(struct(*`,*`)),*(char))))
=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
num	int
;	O
break	O
;	O
}	O
return	O
VAR_OK	int
;	O
}	O
static	O
int	O
varcmp	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	array(int)
,	O
const	O
void	O
*	O
b	array(int)
)	O
{	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
(	O
(	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
const	O
*	O
)	O
a	array(int)
)	O
->	O
name	*(char)
,	O
(	O
(	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
const	O
*	O
)	O
b	array(int)
)	O
->	O
name	*(char)
)	O
;	O
}	O
void	O
variable_print_all	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
;	O
char	O
*	O
s	*(char)
;	O
static	O
int	O
sorted	int
;	O
if	O
(	O
!	O
sorted	int
)	O
{	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
,	O
sizeof	O
(	O
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
)	O
/	O
sizeof	O
(	O
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
[	O
0	int
]	O
)	O
-	O
1	int
,	O
sizeof	O
(	O
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
[	O
0	int
]	O
)	O
,	O
varcmp	(*(void),*(void))->(int)
)	O
;	O
sorted	int
=	O
1	int
;	O
}	O
for	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
=	O
vartab	array(struct(*(char),int,int,union(*(char),int,int),*((*(struct(*`,int,int,union`,*`)),*(union(*`,int,int)))->(int))))
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
;	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
++	O
)	O
{	O
if	O
(	O
!	O
VAR_IS_SET	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"# %s is unset"	*(char)
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
)	O
;	O
}	O
else	O
{	O
switch	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
type	int
)	O
{	O
case	O
VART_INT	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
flags	int
&	O
VARF_OCTAL	int
)	O
?	O
"%s=%03o"	*(char)
:	O
"%s=%d"	*(char)
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
num	int
)	O
;	O
break	O
;	O
case	O
VART_BOOL	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s%s"	*(char)
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
bool	int
?	O
""	*(char)
:	O
"no"	*(char)
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
)	O
;	O
break	O
;	O
case	O
VART_STRING	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s=\""	*(char)
,	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
name	*(char)
)	O
;	O
for	O
(	O
s	*(char)
=	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
->	O
v	union(*(char),struct(*(char),int),*(struct(*(struct(*`,int,struct`,*`,union`)),int,struct(struct(*`,int,int),struct(*`,int,int)),*(char),union(*(char),*(struct`)))))
.	O
string	*(char)
;	O
*	O
s	*(char)
;	O
s	*(char)
++	O
)	O
{	O
int	O
c	int
;	O
if	O
(	O
isprint	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
*	O
s	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
(	O
c	int
=	O
escape	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\\%c"	*(char)
,	O
c	int
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\\%03o"	*(char)
,	O
*	O
s	*(char)
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\""	*(char)
)	O
;	O
}	O
}	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
int	O
variable_is_set	(*(char))->(int)
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
struct	O
variable	struct(*(char),int,int,union(*(char),int,int),*((*(struct(*(char),int,int,union(*`,int,int),*((*`,*`)->(int)))),*(union(*(char),int,int)))->(int)))
*	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
=	O
varfind	(*(char))->(*(struct(*(char),int,int,union(*(char),int,int),*((*`,*`)->(int)))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
return	O
0	int
;	O
return	O
VAR_IS_SET	O
(	O
vp	*(struct(*(char),int,int,union(*(char),int,int),*((*(struct`),*(union`))->(int))))
)	O
;	O
}	O
int	O
variable_is_true	(*(char))->(int)
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
int	O
n	int
;	O
if	O
(	O
variable_get	(*(char),int,*(*(void)))->(int)
(	O
name	*(char)
,	O
VART_BOOL	int
,	O
(	O
void	O
*	O
*	O
)	O
&	O
n	int
)	O
==	O
VAR_OK	int
)	O
return	O
n	int
;	O
return	O
0	int
;	O
}	O
