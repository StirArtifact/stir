const	O
char	O
chat_rcsid	array(char)
[	O
]	O
=	O
"$Id: chat.c,v 1.50 2002/03/05 19:10:41 ian Rel $"	*(char)
;	O
static	O
int	O
icexpect	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,*(*(char)),*(long),int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
int	O
cstrings	int
,	O
char	O
*	O
*	O
azstrings	*(*(char))
,	O
size_t	long
*	O
aclens	*(long)
,	O
int	O
ctimeout	int
,	O
boolean	int
fstrip	int
)	O
)	O
;	O
static	O
boolean	int
fcsend	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(char),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),int,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
pointer	*(void)
puuconf	*(void)
,	O
const	O
char	O
*	O
zsend	*(char)
,	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
,	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
const	O
char	O
*	O
zphone	*(char)
,	O
boolean	int
ftranslate	int
,	O
boolean	int
fstrip	int
)	O
)	O
;	O
static	O
boolean	int
fcecho_send_strip	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
z	*(char)
,	O
size_t	long
clen	long
)	O
)	O
;	O
static	O
boolean	int
fcecho_send_nostrip	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
z	*(char)
,	O
size_t	long
clen	long
)	O
)	O
;	O
static	O
boolean	int
fcecho_send	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
z	*(char)
,	O
size_t	long
clen	long
,	O
boolean	int
fstrip	int
)	O
)	O
;	O
static	O
boolean	int
fcphone	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*((*(struct(*`,*`,*`)),*(char),long)->(int)),int,*(int))->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
pointer	*(void)
puuconf	*(void)
,	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
const	O
char	O
*	O
zphone	*(char)
,	O
boolean	int
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qc	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
zwrite	*(char)
,	O
size_t	long
cwrite	long
)	O
)	O
,	O
boolean	int
ftranslate	int
,	O
boolean	int
*	O
pfquote	*(int)
)	O
)	O
;	O
static	O
boolean	int
fctranslate	(*(void),*(char),*(*(char)),*(*(char)))->(int)
P	O
(	O
(	O
pointer	*(void)
puuconf	*(void)
,	O
const	O
char	O
*	O
zphone	*(char)
,	O
const	O
char	O
*	O
*	O
pzprefix	*(*(char))
,	O
const	O
char	O
*	O
*	O
pzsuffix	*(*(char))
)	O
)	O
;	O
static	O
boolean	int
fcprogram	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*(char),long)->(int)
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
pointer	*(void)
puuconf	*(void)
,	O
char	O
*	O
*	O
pzprogram	*(*(char))
,	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
,	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
const	O
char	O
*	O
zphone	*(char)
,	O
const	O
char	O
*	O
zport	*(char)
,	O
long	O
ibaud	long
)	O
)	O
;	O
boolean	int
fchat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(*(char)),*(*(char)),int,*(*(char)),int)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),int,*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
,	O
qsys	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
ftranslate	int
,	O
zport	*(char)
,	O
ibaud	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
pointer	*(void)
puuconf	*(void)
;	O
const	O
struct	O
uuconf_chat	struct(*(*(char)),*(*(char)),int,*(*(char)),int)
*	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
;	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
const	O
char	O
*	O
zphone	*(char)
;	O
boolean	int
ftranslate	int
;	O
const	O
char	O
*	O
zport	*(char)
;	O
long	O
ibaud	long
;	O
{	O
int	O
cstrings	int
;	O
char	O
*	O
*	O
azstrings	*(*(char))
;	O
size_t	long
*	O
aclens	*(long)
;	O
char	O
*	O
*	O
pzchat	*(*(char))
;	O
char	O
*	O
zbuf	*(char)
;	O
size_t	long
cbuflen	long
;	O
boolean	int
fret	int
;	O
int	O
i	int
;	O
if	O
(	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzprogram	*(*(char))
!=	O
NULL	O
)	O
{	O
if	O
(	O
!	O
fcprogram	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzprogram	*(*(char))
,	O
qsys	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
zport	*(char)
,	O
ibaud	long
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzchat	*(*(char))
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
if	O
(	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzfail	*(*(char))
==	O
NULL	O
)	O
{	O
cstrings	int
=	O
1	int
;	O
azstrings	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
aclens	*(long)
=	O
(	O
size_t	long
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
}	O
else	O
{	O
char	O
*	O
*	O
pz	*(*(char))
;	O
cstrings	int
=	O
1	int
;	O
for	O
(	O
pz	*(*(char))
=	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzfail	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
++	O
cstrings	int
;	O
azstrings	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
cstrings	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
aclens	*(long)
=	O
(	O
size_t	long
*	O
)	O
xmalloc	(long)->(*(void))
(	O
cstrings	int
*	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
for	O
(	O
cstrings	int
=	O
1	int
,	O
pz	*(*(char))
=	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzfail	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
cstrings	int
++	O
,	O
pz	*(*(char))
++	O
)	O
{	O
azstrings	*(*(char))
[	O
cstrings	int
]	O
=	O
zbufcpy	(*(char))->(*(char))
(	O
*	O
pz	*(*(char))
)	O
;	O
aclens	*(long)
[	O
cstrings	int
]	O
=	O
cescape	(*(char))->(long)
(	O
azstrings	*(*(char))
[	O
cstrings	int
]	O
)	O
;	O
}	O
}	O
cbuflen	long
=	O
0	int
;	O
zbuf	*(char)
=	O
NULL	O
;	O
fret	int
=	O
TRUE	O
;	O
pzchat	*(*(char))
=	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzchat	*(*(char))
;	O
while	O
(	O
*	O
pzchat	*(*(char))
!=	O
NULL	O
)	O
{	O
size_t	long
clen	long
;	O
while	O
(	O
TRUE	O
)	O
{	O
char	O
*	O
ztimeout	*(char)
;	O
int	O
ctimeout	int
;	O
clen	long
=	O
strlen	(*(char))->(long)
(	O
*	O
pzchat	*(*(char))
)	O
;	O
if	O
(	O
clen	long
>=	O
cbuflen	long
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zbuf	*(char)
)	O
;	O
zbuf	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
clen	long
+	O
1	int
)	O
;	O
cbuflen	long
=	O
clen	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zbuf	*(char)
,	O
*	O
pzchat	*(*(char))
,	O
clen	long
+	O
1	int
)	O
;	O
azstrings	*(*(char))
[	O
0	int
]	O
=	O
zbuf	*(char)
;	O
if	O
(	O
azstrings	*(*(char))
[	O
0	int
]	O
[	O
0	int
]	O
==	O
'-'	O
)	O
++	O
azstrings	*(*(char))
[	O
0	int
]	O
;	O
ctimeout	int
=	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_ctimeout	int
;	O
ztimeout	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
azstrings	*(*(char))
[	O
0	int
]	O
,	O
'\\'	O
)	O
;	O
if	O
(	O
ztimeout	*(char)
!=	O
NULL	O
&&	O
ztimeout	*(char)
[	O
1	int
]	O
==	O
'W'	O
)	O
{	O
char	O
*	O
zend	*(char)
;	O
int	O
cval	int
;	O
cval	int
=	O
(	O
int	O
)	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
ztimeout	*(char)
+	O
2	int
,	O
&	O
zend	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
zend	*(char)
!=	O
ztimeout	*(char)
+	O
2	int
&&	O
*	O
zend	*(char)
==	O
'\0'	O
)	O
{	O
ctimeout	int
=	O
cval	int
;	O
*	O
ztimeout	*(char)
=	O
'\0'	O
;	O
}	O
}	O
aclens	*(long)
[	O
0	int
]	O
=	O
cescape	(*(char))->(long)
(	O
azstrings	*(*(char))
[	O
0	int
]	O
)	O
;	O
if	O
(	O
aclens	*(long)
[	O
0	int
]	O
==	O
0	int
||	O
(	O
aclens	*(long)
[	O
0	int
]	O
==	O
2	int
&&	O
strcmp	(*(char),*(char))->(int)
(	O
azstrings	*(*(char))
[	O
0	int
]	O
,	O
"\"\""	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
if	O
(	O
pzchat	*(*(char))
[	O
1	int
]	O
==	O
NULL	O
||	O
pzchat	*(*(char))
[	O
1	int
]	O
[	O
0	int
]	O
!=	O
'-'	O
)	O
break	O
;	O
}	O
else	O
{	O
int	O
istr	int
;	O
istr	int
=	O
icexpect	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,*(*(char)),*(long),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cstrings	int
,	O
azstrings	*(*(char))
,	O
aclens	*(long)
,	O
ctimeout	int
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_fstrip	int
)	O
;	O
if	O
(	O
istr	int
==	O
0	int
)	O
break	O
;	O
if	O
(	O
istr	int
<	O
-	O
1	int
)	O
{	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
istr	int
>	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Chat script failed: Got \"%s\""	*(char)
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_pzfail	*(*(char))
[	O
istr	int
-	O
1	int
]	O
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
pzchat	*(*(char))
[	O
1	int
]	O
==	O
NULL	O
||	O
pzchat	*(*(char))
[	O
1	int
]	O
[	O
0	int
]	O
!=	O
'-'	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Timed out in chat script"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
}	O
++	O
pzchat	*(*(char))
;	O
if	O
(	O
!	O
fcsend	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(char),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
*	O
pzchat	*(*(char))
+	O
1	int
,	O
qsys	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
ftranslate	int
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_fstrip	int
)	O
)	O
{	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
pzchat	*(*(char))
[	O
1	int
]	O
==	O
NULL	O
||	O
pzchat	*(*(char))
[	O
1	int
]	O
[	O
0	int
]	O
!=	O
'-'	O
)	O
break	O
;	O
++	O
pzchat	*(*(char))
;	O
}	O
if	O
(	O
!	O
fret	int
)	O
break	O
;	O
do	O
{	O
++	O
pzchat	*(*(char))
;	O
}	O
while	O
(	O
*	O
pzchat	*(*(char))
!=	O
NULL	O
&&	O
(	O
*	O
pzchat	*(*(char))
)	O
[	O
0	int
]	O
==	O
'-'	O
)	O
;	O
if	O
(	O
*	O
pzchat	*(*(char))
==	O
NULL	O
)	O
break	O
;	O
if	O
(	O
*	O
*	O
pzchat	*(*(char))
!=	O
'\0'	O
)	O
{	O
if	O
(	O
!	O
fcsend	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(char),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
*	O
pzchat	*(*(char))
,	O
qsys	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
ftranslate	int
,	O
qchat	*(struct(*(*(char)),*(*(char)),int,*(*(char)),int))
->	O
uuconf_fstrip	int
)	O
)	O
{	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
}	O
++	O
pzchat	*(*(char))
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zbuf	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
cstrings	int
;	O
i	int
++	O
)	O
ubuffree	(*(char))->(void)
(	O
azstrings	*(*(char))
[	O
i	int
]	O
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
azstrings	*(*(char))
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
aclens	*(long)
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
int	O
icexpect	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,*(*(char)),*(long),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
cstrings	int
,	O
azstrings	*(*(char))
,	O
aclens	*(long)
,	O
ctimeout	int
,	O
fstrip	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
int	O
cstrings	int
;	O
char	O
*	O
*	O
azstrings	*(*(char))
;	O
size_t	long
*	O
aclens	*(long)
;	O
int	O
ctimeout	int
;	O
boolean	int
fstrip	int
;	O
{	O
int	O
i	int
;	O
size_t	long
cmax	int
;	O
char	O
*	O
zhave	*(char)
;	O
size_t	long
chave	long
;	O
long	O
iendtime	long
;	O
int	O
cchars	int
;	O
int	O
iolddebug	int
;	O
cmax	int
=	O
aclens	*(long)
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
cstrings	int
;	O
i	int
++	O
)	O
if	O
(	O
cmax	int
<	O
aclens	*(long)
[	O
i	int
]	O
)	O
cmax	int
=	O
aclens	*(long)
[	O
i	int
]	O
;	O
zhave	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
cmax	int
)	O
;	O
chave	long
=	O
0	int
;	O
iendtime	long
=	O
ixsysdep_time	(*(long))->(long)
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
+	O
ctimeout	int
;	O
cchars	int
=	O
0	int
;	O
iolddebug	int
=	O
iDebug	int
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
{	O
udebug_buffer	(*(char),*(char),long)->(void)
(	O
"icexpect: Looking for"	*(char)
,	O
azstrings	*(*(char))
[	O
0	int
]	O
,	O
aclens	*(long)
[	O
0	int
]	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_START	int
,	O
"icexpect: Got \""	*(char)
)	O
;	O
iDebug	int
&=	O
~	O
(	O
DEBUG_INCOMING	O
|	O
DEBUG_PORT	O
)	O
;	O
}	O
while	O
(	O
TRUE	O
)	O
{	O
int	O
bchar	int
;	O
if	O
(	O
ctimeout	int
<=	O
0	int
)	O
{	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"\" (timed out)"	*(char)
)	O
;	O
iDebug	int
=	O
iolddebug	int
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zhave	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
chave	long
>=	O
cmax	int
)	O
{	O
size_t	long
imove	long
;	O
for	O
(	O
imove	long
=	O
0	int
;	O
imove	long
<	O
cmax	int
-	O
1	int
;	O
imove	long
++	O
)	O
zhave	*(char)
[	O
imove	long
]	O
=	O
zhave	*(char)
[	O
imove	long
+	O
1	int
]	O
;	O
--	O
chave	long
;	O
}	O
bchar	int
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
ctimeout	int
,	O
TRUE	O
)	O
;	O
if	O
(	O
bchar	int
<	O
0	int
)	O
{	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"\" (%s)"	*(char)
,	O
bchar	int
==	O
-	O
1	int
?	O
"timed out"	*(char)
:	O
"error"	*(char)
)	O
;	O
iDebug	int
=	O
iolddebug	int
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zhave	*(char)
)	O
;	O
return	O
bchar	int
;	O
}	O
if	O
(	O
fstrip	int
)	O
bchar	int
&=	O
0x7f	int
;	O
zhave	*(char)
[	O
chave	long
]	O
=	O
(	O
char	O
)	O
bchar	int
;	O
++	O
chave	long
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
{	O
char	O
ab	array(char)
[	O
5	int
]	O
;	O
++	O
cchars	int
;	O
if	O
(	O
cchars	int
>	O
60	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"\""	*(char)
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_START	int
,	O
"icexpect: Got \""	*(char)
)	O
;	O
cchars	int
=	O
0	int
;	O
}	O
(	O
void	O
)	O
cdebug_char	(*(char),int)->(long)
(	O
ab	array(char)
,	O
bchar	int
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_CONTINUE	int
,	O
"%s"	*(char)
,	O
ab	array(char)
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cstrings	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
aclens	*(long)
[	O
i	int
]	O
<=	O
chave	long
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
zhave	*(char)
+	O
chave	long
-	O
aclens	*(long)
[	O
i	int
]	O
,	O
azstrings	*(*(char))
[	O
i	int
]	O
,	O
aclens	*(long)
[	O
i	int
]	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
{	O
if	O
(	O
i	int
==	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"\" (found it)"	*(char)
)	O
;	O
else	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"\""	*(char)
)	O
;	O
udebug_buffer	(*(char),*(char),long)->(void)
(	O
"icexpect: Found"	*(char)
,	O
azstrings	*(*(char))
[	O
i	int
]	O
,	O
aclens	*(long)
[	O
i	int
]	O
)	O
;	O
}	O
iDebug	int
=	O
iolddebug	int
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zhave	*(char)
)	O
;	O
return	O
i	int
;	O
}	O
}	O
ctimeout	int
=	O
(	O
int	O
)	O
(	O
iendtime	long
-	O
ixsysdep_time	(*(long))->(long)
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
)	O
;	O
}	O
}	O
static	O
size_t	long
cCsend_chars	long
;	O
static	O
int	O
iColddebug	int
;	O
static	O
boolean	int
fcsend_debug	(int,long,*(char))->(int)
P	O
(	O
(	O
boolean	int
,	O
size_t	long
,	O
const	O
char	O
*	O
)	O
)	O
;	O
static	O
boolean	int
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
clen	long
,	O
zbuf	*(char)
)	O
boolean	int
fquote	int
;	O
size_t	long
clen	long
;	O
const	O
char	O
*	O
zbuf	*(char)
;	O
{	O
size_t	long
cwas	long
;	O
if	O
(	O
!	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
return	O
TRUE	O
;	O
cwas	long
=	O
cCsend_chars	long
;	O
if	O
(	O
clen	long
>	O
0	int
)	O
cCsend_chars	long
+=	O
clen	long
;	O
else	O
cCsend_chars	long
+=	O
strlen	(*(char))->(long)
(	O
zbuf	*(char)
)	O
;	O
if	O
(	O
cCsend_chars	long
>	O
60	int
&&	O
cwas	long
>	O
10	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"%s"	*(char)
,	O
fquote	int
?	O
"\""	*(char)
:	O
""	*(char)
)	O
;	O
fquote	int
=	O
FALSE	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_START	int
,	O
"fcsend: Writing"	*(char)
)	O
;	O
cCsend_chars	long
=	O
0	int
;	O
}	O
if	O
(	O
clen	long
==	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_CONTINUE	int
,	O
"%s %s"	*(char)
,	O
fquote	int
?	O
"\""	*(char)
:	O
""	*(char)
,	O
zbuf	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
size_t	long
i	int
;	O
if	O
(	O
!	O
fquote	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_CONTINUE	int
,	O
" \""	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
clen	long
;	O
i	int
++	O
)	O
{	O
char	O
ab	array(char)
[	O
5	int
]	O
;	O
(	O
void	O
)	O
cdebug_char	(*(char),int)->(long)
(	O
ab	array(char)
,	O
zbuf	*(char)
[	O
i	int
]	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_CONTINUE	int
,	O
"%s"	*(char)
,	O
ab	array(char)
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
}	O
static	O
void	O
ucsend_debug_end	(int,int)->(void)
P	O
(	O
(	O
boolean	int
,	O
boolean	int
)	O
)	O
;	O
static	O
void	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
ferr	int
)	O
boolean	int
fquote	int
;	O
boolean	int
ferr	int
;	O
{	O
if	O
(	O
!	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
return	O
;	O
if	O
(	O
fquote	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_CONTINUE	int
,	O
"\""	*(char)
)	O
;	O
if	O
(	O
ferr	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_CONTINUE	int
,	O
" (error)"	*(char)
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_END	int
,	O
"%s"	*(char)
,	O
""	*(char)
)	O
;	O
iDebug	int
=	O
iColddebug	int
;	O
}	O
static	O
boolean	int
fcsend	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(char),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
z	*(char)
,	O
qsys	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
ftranslate	int
,	O
fstrip	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
pointer	*(void)
puuconf	*(void)
;	O
const	O
char	O
*	O
z	*(char)
;	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
const	O
char	O
*	O
zphone	*(char)
;	O
boolean	int
ftranslate	int
;	O
boolean	int
fstrip	int
;	O
{	O
boolean	int
fnocr	int
;	O
boolean	int
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
,	O
const	O
char	O
*	O
,	O
size_t	long
)	O
)	O
;	O
char	O
*	O
zcallout_login	*(char)
;	O
char	O
*	O
zcallout_pass	*(char)
;	O
boolean	int
fquote	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
z	*(char)
,	O
"\"\""	*(char)
)	O
==	O
0	int
)	O
return	O
TRUE	O
;	O
fnocr	int
=	O
FALSE	O
;	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
=	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
;	O
zcallout_login	*(char)
=	O
NULL	O
;	O
zcallout_pass	*(char)
=	O
NULL	O
;	O
if	O
(	O
FDEBUGGING	O
(	O
DEBUG_CHAT	O
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_DEBUG_START	int
,	O
"fcsend: Writing"	*(char)
)	O
;	O
fquote	int
=	O
FALSE	O
;	O
cCsend_chars	long
=	O
0	int
;	O
iColddebug	int
=	O
iDebug	int
;	O
iDebug	int
&=	O
~	O
(	O
DEBUG_OUTGOING	O
|	O
DEBUG_PORT	O
)	O
;	O
}	O
while	O
(	O
*	O
z	*(char)
!=	O
'\0'	O
)	O
{	O
const	O
char	O
*	O
zlook	*(char)
;	O
boolean	int
fsend	int
;	O
char	O
bsend	char
;	O
zlook	*(char)
=	O
z	*(char)
+	O
strcspn	(*(char),*(char))->(long)
(	O
(	O
char	O
*	O
)	O
z	*(char)
,	O
"\\BE"	*(char)
)	O
;	O
if	O
(	O
zlook	*(char)
>	O
z	*(char)
)	O
{	O
size_t	long
c	long
;	O
c	long
=	O
zlook	*(char)
-	O
z	*(char)
;	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
c	long
,	O
z	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
z	*(char)
,	O
c	long
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
*	O
zlook	*(char)
==	O
'\0'	O
)	O
break	O
;	O
z	*(char)
=	O
zlook	*(char)
;	O
fsend	int
=	O
FALSE	O
;	O
switch	O
(	O
*	O
z	*(char)
)	O
{	O
case	O
'B'	O
:	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
z	*(char)
,	O
"BREAK"	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"break"	*(char)
)	O
;	O
if	O
(	O
!	O
fconn_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
fnocr	int
=	O
TRUE	O
;	O
z	*(char)
+=	O
5	int
;	O
}	O
else	O
{	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'B'	O
;	O
++	O
z	*(char)
;	O
}	O
break	O
;	O
case	O
'E'	O
:	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
z	*(char)
,	O
"EOT"	*(char)
,	O
3	int
)	O
==	O
0	int
)	O
{	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\004'	O
;	O
fnocr	int
=	O
TRUE	O
;	O
z	*(char)
+=	O
3	int
;	O
}	O
else	O
{	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'E'	O
;	O
++	O
z	*(char)
;	O
}	O
break	O
;	O
case	O
'\\'	O
:	O
++	O
z	*(char)
;	O
switch	O
(	O
*	O
z	*(char)
)	O
{	O
case	O
'-'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'-'	O
;	O
break	O
;	O
case	O
'b'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\b'	O
;	O
break	O
;	O
case	O
'c'	O
:	O
fnocr	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'd'	O
:	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"sleep"	*(char)
)	O
;	O
usysdep_sleep	(int)->(void)
(	O
1	int
)	O
;	O
break	O
;	O
case	O
'e'	O
:	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"echo-check-off"	*(char)
)	O
;	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
=	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
;	O
break	O
;	O
case	O
'E'	O
:	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"echo-check-on"	*(char)
)	O
;	O
if	O
(	O
fstrip	int
)	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
=	O
fcecho_send_strip	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
;	O
else	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
=	O
fcecho_send_nostrip	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
;	O
break	O
;	O
case	O
'K'	O
:	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"break"	*(char)
)	O
;	O
if	O
(	O
!	O
fconn_break	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
break	O
;	O
case	O
'n'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\n'	O
;	O
break	O
;	O
case	O
'N'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\0'	O
;	O
break	O
;	O
case	O
'p'	O
:	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"pause"	*(char)
)	O
;	O
usysdep_pause	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
'r'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\r'	O
;	O
break	O
;	O
case	O
's'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
' '	O
;	O
break	O
;	O
case	O
't'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\t'	O
;	O
break	O
;	O
case	O
'\0'	O
:	O
--	O
z	*(char)
;	O
case	O
'\\'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
'\\'	O
;	O
break	O
;	O
case	O
'0'	O
:	O
case	O
'1'	O
:	O
case	O
'2'	O
:	O
case	O
'3'	O
:	O
case	O
'4'	O
:	O
case	O
'5'	O
:	O
case	O
'6'	O
:	O
case	O
'7'	O
:	O
case	O
'8'	O
:	O
case	O
'9'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
*	O
z	*(char)
-	O
'0'	O
;	O
if	O
(	O
z	*(char)
[	O
1	int
]	O
>=	O
'0'	O
&&	O
z	*(char)
[	O
1	int
]	O
<=	O
'7'	O
)	O
bsend	char
=	O
(	O
char	O
)	O
(	O
8	int
*	O
bsend	char
+	O
*	O
++	O
z	*(char)
-	O
'0'	O
)	O
;	O
if	O
(	O
z	*(char)
[	O
1	int
]	O
>=	O
'0'	O
&&	O
z	*(char)
[	O
1	int
]	O
<=	O
'7'	O
)	O
bsend	char
=	O
(	O
char	O
)	O
(	O
8	int
*	O
bsend	char
+	O
*	O
++	O
z	*(char)
-	O
'0'	O
)	O
;	O
break	O
;	O
case	O
'x'	O
:	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
0	int
;	O
while	O
(	O
isxdigit	(int)->(int)
(	O
BUCHAR	O
(	O
z	*(char)
[	O
1	int
]	O
)	O
)	O
)	O
{	O
if	O
(	O
isdigit	(int)->(int)
(	O
BUCHAR	O
(	O
z	*(char)
[	O
1	int
]	O
)	O
)	O
)	O
bsend	char
=	O
(	O
char	O
)	O
(	O
16	int
*	O
bsend	char
+	O
*	O
++	O
z	*(char)
-	O
'0'	O
)	O
;	O
else	O
if	O
(	O
isupper	(int)->(int)
(	O
BUCHAR	O
(	O
z	*(char)
[	O
1	int
]	O
)	O
)	O
)	O
bsend	char
=	O
(	O
char	O
)	O
(	O
16	int
*	O
bsend	char
+	O
*	O
++	O
z	*(char)
-	O
'A'	O
+	O
10	int
)	O
;	O
else	O
bsend	char
=	O
(	O
char	O
)	O
(	O
16	int
*	O
bsend	char
+	O
*	O
++	O
z	*(char)
-	O
'a'	O
+	O
10	int
)	O
;	O
}	O
break	O
;	O
case	O
'L'	O
:	O
{	O
const	O
char	O
*	O
zlog	*(char)
;	O
char	O
*	O
zcopy	*(char)
;	O
size_t	long
clen	long
;	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Illegal use of \\L"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
zlog	*(char)
=	O
qsys	*(struct)
->	O
uuconf_zcall_login	*(char)
;	O
if	O
(	O
zlog	*(char)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"No login defined"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
zlog	*(char)
[	O
0	int
]	O
==	O
'*'	O
&&	O
zlog	*(char)
[	O
1	int
]	O
==	O
'\0'	O
)	O
{	O
if	O
(	O
zcallout_login	*(char)
==	O
NULL	O
)	O
{	O
int	O
iuuconf	int
;	O
iuuconf	int
=	O
uuconf_callout	(*(void),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
qsys	*(struct)
,	O
&	O
zcallout_login	*(char)
,	O
&	O
zcallout_pass	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
||	O
zcallout_login	*(char)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"No login defined"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
zlog	*(char)
=	O
zcallout_login	*(char)
;	O
}	O
zcopy	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zlog	*(char)
)	O
;	O
clen	long
=	O
cescape	(*(char))->(long)
(	O
zcopy	*(char)
)	O
;	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"login"	*(char)
)	O
;	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
clen	long
,	O
zcopy	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zcopy	*(char)
,	O
clen	long
)	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zcopy	*(char)
)	O
;	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zcopy	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
'P'	O
:	O
{	O
const	O
char	O
*	O
zpass	*(char)
;	O
char	O
*	O
zcopy	*(char)
;	O
size_t	long
clen	long
;	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Illegal use of \\P"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
zpass	*(char)
=	O
qsys	*(struct)
->	O
uuconf_zcall_password	*(char)
;	O
if	O
(	O
zpass	*(char)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"No password defined"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
zpass	*(char)
[	O
0	int
]	O
==	O
'*'	O
&&	O
zpass	*(char)
[	O
1	int
]	O
==	O
'\0'	O
)	O
{	O
if	O
(	O
zcallout_pass	*(char)
==	O
NULL	O
)	O
{	O
int	O
iuuconf	int
;	O
iuuconf	int
=	O
uuconf_callout	(*(void),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
qsys	*(struct)
,	O
&	O
zcallout_login	*(char)
,	O
&	O
zcallout_pass	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
||	O
zcallout_pass	*(char)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"No password defined"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
zpass	*(char)
=	O
zcallout_pass	*(char)
;	O
}	O
zcopy	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zpass	*(char)
)	O
;	O
clen	long
=	O
cescape	(*(char))->(long)
(	O
zcopy	*(char)
)	O
;	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"password"	*(char)
)	O
;	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
clen	long
,	O
zcopy	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zcopy	*(char)
,	O
clen	long
)	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zcopy	*(char)
)	O
;	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zcopy	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
'D'	O
:	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
NULL	O
||	O
zphone	*(char)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Illegal use of \\D"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"\\D"	*(char)
)	O
;	O
if	O
(	O
!	O
fcphone	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*((*(struct(*`,*`,*`)),*(char),long)->(int)),int,*(int))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
,	O
ftranslate	int
,	O
&	O
fquote	int
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
break	O
;	O
case	O
'T'	O
:	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
NULL	O
||	O
zphone	*(char)
==	O
NULL	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Illegal use of \\T"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"\\T"	*(char)
)	O
;	O
if	O
(	O
!	O
fcphone	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*((*(struct(*`,*`,*`)),*(char),long)->(int)),int,*(int))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
,	O
TRUE	O
,	O
&	O
fquote	int
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
break	O
;	O
case	O
'M'	O
:	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"ignore-carrier"	*(char)
)	O
;	O
if	O
(	O
!	O
fconn_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
FALSE	O
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
break	O
;	O
case	O
'm'	O
:	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
NULL	O
||	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_fcarrier	int
)	O
{	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
0	int
,	O
"need-carrier"	*(char)
)	O
;	O
if	O
(	O
!	O
fconn_carrier	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
TRUE	O
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Unrecognized escape sequence \\%c in send string"	*(char)
,	O
*	O
z	*(char)
)	O
;	O
fsend	int
=	O
TRUE	O
;	O
bsend	char
=	O
*	O
z	*(char)
;	O
break	O
;	O
}	O
++	O
z	*(char)
;	O
break	O
;	O
default	O
:	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"fcsend: Can't happen"	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
fsend	int
)	O
{	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
1	int
,	O
&	O
bsend	char
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
&	O
bsend	char
,	O
(	O
size_t	long
)	O
1	int
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zcallout_login	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zcallout_pass	*(char)
)	O
;	O
if	O
(	O
!	O
fnocr	int
)	O
{	O
char	O
b	char
;	O
b	char
=	O
'\r'	O
;	O
fquote	int
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
fquote	int
,	O
(	O
size_t	long
)	O
1	int
,	O
&	O
b	char
)	O
;	O
if	O
(	O
!	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
&	O
b	char
,	O
(	O
size_t	long
)	O
1	int
)	O
)	O
{	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
TRUE	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
ucsend_debug_end	(int,int)->(void)
(	O
fquote	int
,	O
FALSE	O
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fcphone	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*((*(struct(*`,*`,*`)),*(char),long)->(int)),int,*(int))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
,	O
ftranslate	int
,	O
pfquote	*(int)
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
pointer	*(void)
puuconf	*(void)
;	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
const	O
char	O
*	O
zphone	*(char)
;	O
boolean	int
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
P	O
(	O
(	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qc	*(struct(*(struct(*((*`)->(void)),*((*`,int,int)->(int)),*((*`)->(int)),*((*`,long,int,int)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,long,int,int)->(int)),*((*`,*`,long)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`)->(int)),*((*`,enum(int,int,int,int,int,int),enum(int,int,int),enum(int,int,int))->(int)),*((*`,int)->(int)),*((*`,*`)->(int)),*((*`)->(long)))),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
const	O
char	O
*	O
zwrite	*(char)
,	O
size_t	long
cwrite	long
)	O
)	O
;	O
boolean	int
ftranslate	int
;	O
boolean	int
*	O
pfquote	*(int)
;	O
{	O
const	O
char	O
*	O
zprefix	*(char)
,	O
*	O
zsuffix	*(char)
;	O
if	O
(	O
ftranslate	int
)	O
{	O
if	O
(	O
!	O
fctranslate	(*(void),*(char),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
zphone	*(char)
,	O
&	O
zprefix	*(char)
,	O
&	O
zsuffix	*(char)
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
zprefix	*(char)
=	O
zphone	*(char)
;	O
zsuffix	*(char)
=	O
NULL	O
;	O
}	O
while	O
(	O
zprefix	*(char)
!=	O
NULL	O
)	O
{	O
while	O
(	O
TRUE	O
)	O
{	O
const	O
char	O
*	O
z	*(char)
;	O
const	O
char	O
*	O
zstr	*(char)
;	O
z	*(char)
=	O
zprefix	*(char)
+	O
strcspn	(*(char),*(char))->(long)
(	O
(	O
char	O
*	O
)	O
zprefix	*(char)
,	O
"=-"	*(char)
)	O
;	O
if	O
(	O
z	*(char)
>	O
zprefix	*(char)
)	O
{	O
size_t	long
clen	long
;	O
clen	long
=	O
z	*(char)
-	O
zprefix	*(char)
;	O
*	O
pfquote	*(int)
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
*	O
pfquote	*(int)
,	O
clen	long
,	O
zprefix	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zprefix	*(char)
,	O
clen	long
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
*	O
z	*(char)
==	O
'='	O
)	O
zstr	*(char)
=	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_zdialtone	*(char)
;	O
else	O
if	O
(	O
*	O
z	*(char)
==	O
'-'	O
)	O
zstr	*(char)
=	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
->	O
uuconf_zpause	*(char)
;	O
else	O
break	O
;	O
if	O
(	O
zstr	*(char)
!=	O
NULL	O
)	O
{	O
*	O
pfquote	*(int)
=	O
fcsend_debug	(int,long,*(char))->(int)
(	O
*	O
pfquote	*(int)
,	O
strlen	(*(char))->(long)
(	O
zstr	*(char)
)	O
,	O
zstr	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pfwrite	*((*(struct(*(struct`),*(void),*(struct`))),*(char),long)->(int))
)	O
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zstr	*(char)
,	O
strlen	(*(char))->(long)
(	O
zstr	*(char)
)	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
zprefix	*(char)
=	O
z	*(char)
+	O
1	int
;	O
}	O
zprefix	*(char)
=	O
zsuffix	*(char)
;	O
zsuffix	*(char)
=	O
NULL	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fctranslate	(*(void),*(char),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
zphone	*(char)
,	O
pzprefix	*(*(char))
,	O
pzsuffix	*(*(char))
)	O
pointer	*(void)
puuconf	*(void)
;	O
const	O
char	O
*	O
zphone	*(char)
;	O
const	O
char	O
*	O
*	O
pzprefix	*(*(char))
;	O
const	O
char	O
*	O
*	O
pzsuffix	*(*(char))
;	O
{	O
int	O
iuuconf	int
;	O
char	O
*	O
zdialcode	*(char)
,	O
*	O
zto	*(char)
;	O
const	O
char	O
*	O
zfrom	*(char)
;	O
char	O
*	O
ztrans	*(char)
;	O
*	O
pzprefix	*(*(char))
=	O
zphone	*(char)
;	O
*	O
pzsuffix	*(*(char))
=	O
NULL	O
;	O
zdialcode	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
strlen	(*(char))->(long)
(	O
zphone	*(char)
)	O
+	O
1	int
)	O
;	O
zfrom	*(char)
=	O
zphone	*(char)
;	O
zto	*(char)
=	O
zdialcode	*(char)
;	O
while	O
(	O
*	O
zfrom	*(char)
!=	O
'\0'	O
&&	O
isalpha	(int)->(int)
(	O
BUCHAR	O
(	O
*	O
zfrom	*(char)
)	O
)	O
)	O
*	O
zto	*(char)
++	O
=	O
*	O
zfrom	*(char)
++	O
;	O
*	O
zto	*(char)
=	O
'\0'	O
;	O
if	O
(	O
*	O
zdialcode	*(char)
==	O
'\0'	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zdialcode	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
iuuconf	int
=	O
uuconf_dialcode	(*(void),*(char),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
zdialcode	*(char)
,	O
&	O
ztrans	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zdialcode	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
return	O
TRUE	O
;	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
*	O
pzprefix	*(*(char))
=	O
ztrans	*(char)
;	O
*	O
pzsuffix	*(*(char))
=	O
zfrom	*(char)
;	O
return	O
TRUE	O
;	O
}	O
}	O
static	O
boolean	int
fcecho_send_strip	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zwrite	*(char)
,	O
cwrite	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
const	O
char	O
*	O
zwrite	*(char)
;	O
size_t	long
cwrite	long
;	O
{	O
return	O
fcecho_send	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zwrite	*(char)
,	O
cwrite	long
,	O
TRUE	O
)	O
;	O
}	O
static	O
boolean	int
fcecho_send_nostrip	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zwrite	*(char)
,	O
cwrite	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
const	O
char	O
*	O
zwrite	*(char)
;	O
size_t	long
cwrite	long
;	O
{	O
return	O
fcecho_send	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zwrite	*(char)
,	O
cwrite	long
,	O
FALSE	O
)	O
;	O
}	O
static	O
boolean	int
fcecho_send	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
zwrite	*(char)
,	O
cwrite	long
,	O
fstrip	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
const	O
char	O
*	O
zwrite	*(char)
;	O
size_t	long
cwrite	long
;	O
boolean	int
fstrip	int
;	O
{	O
const	O
char	O
*	O
zend	*(char)
;	O
zend	*(char)
=	O
zwrite	*(char)
+	O
cwrite	long
;	O
for	O
(	O
;	O
zwrite	*(char)
<	O
zend	*(char)
;	O
zwrite	*(char)
++	O
)	O
{	O
int	O
b	char
;	O
char	O
bwrite	char
;	O
bwrite	char
=	O
*	O
zwrite	*(char)
;	O
if	O
(	O
!	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
&	O
bwrite	char
,	O
(	O
size_t	long
)	O
1	int
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
fstrip	int
)	O
bwrite	char
&=	O
0x7f	int
;	O
do	O
{	O
b	char
=	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
5	int
,	O
TRUE	O
)	O
;	O
if	O
(	O
b	char
<	O
0	int
)	O
{	O
if	O
(	O
b	char
==	O
-	O
1	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Character not echoed"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fstrip	int
)	O
b	char
&=	O
0x7f	int
;	O
}	O
while	O
(	O
b	char
!=	O
BUCHAR	O
(	O
bwrite	char
)	O
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fcprogram	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(void),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(struct(*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,struct(*(*`),*(*`),int,*(*`),int),struct(*(*`),*(*`),int,*(*`),int),*(struct(int,*`)),int,*(void))),*(char),*(char),long)->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
puuconf	*(void)
,	O
pzprogram	*(*(char))
,	O
qsys	*(struct)
,	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
,	O
zphone	*(char)
,	O
zport	*(char)
,	O
ibaud	long
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
;	O
pointer	*(void)
puuconf	*(void)
;	O
char	O
*	O
*	O
pzprogram	*(*(char))
;	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
const	O
struct	O
uuconf_dialer	struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct(int,*(*`))))),int,*(void))
*	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
;	O
const	O
char	O
*	O
zphone	*(char)
;	O
const	O
char	O
*	O
zport	*(char)
;	O
long	O
ibaud	long
;	O
{	O
size_t	long
cargs	long
;	O
char	O
*	O
*	O
pzpass	*(*(char))
,	O
*	O
*	O
pzarg	*(*(char))
;	O
char	O
*	O
*	O
pz	*(*(char))
;	O
char	O
*	O
zcallout_login	*(char)
;	O
char	O
*	O
zcallout_pass	*(char)
;	O
boolean	int
fret	int
;	O
cargs	long
=	O
1	int
;	O
for	O
(	O
pz	*(*(char))
=	O
pzprogram	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
++	O
cargs	long
;	O
pzpass	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
cargs	long
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
zcallout_login	*(char)
=	O
NULL	O
;	O
zcallout_pass	*(char)
=	O
NULL	O
;	O
fret	int
=	O
TRUE	O
;	O
for	O
(	O
pz	*(*(char))
=	O
pzprogram	*(*(char))
,	O
pzarg	*(*(char))
=	O
pzpass	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
,	O
pzarg	*(*(char))
++	O
)	O
{	O
const	O
char	O
*	O
zfrom	*(char)
;	O
size_t	long
calc	long
,	O
clen	long
;	O
char	O
*	O
zto	*(char)
;	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
*	O
pz	*(*(char))
,	O
'\\'	O
)	O
==	O
NULL	O
)	O
{	O
*	O
pzarg	*(*(char))
=	O
zbufcpy	(*(char))->(*(char))
(	O
*	O
pz	*(*(char))
)	O
;	O
continue	O
;	O
}	O
*	O
pzarg	*(*(char))
=	O
NULL	O
;	O
zto	*(char)
=	O
NULL	O
;	O
calc	long
=	O
0	int
;	O
clen	long
=	O
0	int
;	O
for	O
(	O
zfrom	*(char)
=	O
*	O
pz	*(*(char))
;	O
*	O
zfrom	*(char)
!=	O
'\0'	O
;	O
zfrom	*(char)
++	O
)	O
{	O
const	O
char	O
*	O
zadd	*(char)
=	O
NULL	O
;	O
char	O
*	O
zfree	*(char)
=	O
NULL	O
;	O
size_t	long
cadd	long
;	O
char	O
abadd	array(char)
[	O
15	int
]	O
;	O
if	O
(	O
*	O
zfrom	*(char)
!=	O
'\\'	O
)	O
{	O
if	O
(	O
clen	long
+	O
2	int
>	O
calc	long
)	O
{	O
char	O
*	O
znew	*(char)
;	O
calc	long
=	O
clen	long
+	O
50	int
;	O
znew	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
calc	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
znew	*(char)
,	O
*	O
pzarg	*(*(char))
,	O
clen	long
)	O
;	O
ubuffree	(*(char))->(void)
(	O
*	O
pzarg	*(*(char))
)	O
;	O
*	O
pzarg	*(*(char))
=	O
znew	*(char)
;	O
zto	*(char)
=	O
znew	*(char)
+	O
clen	long
;	O
}	O
*	O
zto	*(char)
++	O
=	O
*	O
zfrom	*(char)
;	O
++	O
clen	long
;	O
continue	O
;	O
}	O
++	O
zfrom	*(char)
;	O
switch	O
(	O
*	O
zfrom	*(char)
)	O
{	O
case	O
'\0'	O
:	O
--	O
zfrom	*(char)
;	O
case	O
'\\'	O
:	O
zadd	*(char)
=	O
"\\"	*(char)
;	O
break	O
;	O
case	O
'L'	O
:	O
{	O
const	O
char	O
*	O
zlog	*(char)
;	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\L"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
zlog	*(char)
=	O
qsys	*(struct)
->	O
uuconf_zcall_login	*(char)
;	O
if	O
(	O
zlog	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: No login defined"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
zlog	*(char)
[	O
0	int
]	O
==	O
'*'	O
&&	O
zlog	*(char)
[	O
1	int
]	O
==	O
'\0'	O
)	O
{	O
if	O
(	O
zcallout_login	*(char)
==	O
NULL	O
)	O
{	O
int	O
iuuconf	int
;	O
iuuconf	int
=	O
uuconf_callout	(*(void),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
qsys	*(struct)
,	O
&	O
zcallout_login	*(char)
,	O
&	O
zcallout_pass	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
||	O
zcallout_login	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: No login defined"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
}	O
zlog	*(char)
=	O
zcallout_login	*(char)
;	O
}	O
zfree	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zlog	*(char)
)	O
;	O
(	O
void	O
)	O
cescape	(*(char))->(long)
(	O
zfree	*(char)
)	O
;	O
zadd	*(char)
=	O
zfree	*(char)
;	O
}	O
break	O
;	O
case	O
'P'	O
:	O
{	O
const	O
char	O
*	O
zpass	*(char)
;	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\P"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
zpass	*(char)
=	O
qsys	*(struct)
->	O
uuconf_zcall_password	*(char)
;	O
if	O
(	O
zpass	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: No password defined"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
zpass	*(char)
[	O
0	int
]	O
==	O
'*'	O
&&	O
zpass	*(char)
[	O
1	int
]	O
==	O
'\0'	O
)	O
{	O
if	O
(	O
zcallout_pass	*(char)
==	O
NULL	O
)	O
{	O
int	O
iuuconf	int
;	O
iuuconf	int
=	O
uuconf_callout	(*(void),*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
qsys	*(struct)
,	O
&	O
zcallout_login	*(char)
,	O
&	O
zcallout_pass	*(char)
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
||	O
zcallout_pass	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: No password defined"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	(enum(int,int,int,int,int,int,int),*(void),int)->(void)
(	O
LOG_ERROR	int
,	O
puuconf	*(void)
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
}	O
zpass	*(char)
=	O
zcallout_pass	*(char)
;	O
}	O
zfree	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zpass	*(char)
)	O
;	O
(	O
void	O
)	O
cescape	(*(char))->(long)
(	O
zfree	*(char)
)	O
;	O
zadd	*(char)
=	O
zfree	*(char)
;	O
}	O
break	O
;	O
case	O
'D'	O
:	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
NULL	O
||	O
zphone	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\D"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
zadd	*(char)
=	O
zphone	*(char)
;	O
break	O
;	O
case	O
'T'	O
:	O
{	O
const	O
char	O
*	O
zprefix	*(char)
,	O
*	O
zsuffix	*(char)
;	O
if	O
(	O
qdial	*(struct(*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,struct(*(*(char)),*(*(char)),int,*(*(char)),int),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(struct(int,*(struct`))),int,*(void)))
==	O
NULL	O
||	O
zphone	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\T"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
!	O
fctranslate	(*(void),*(char),*(*(char)),*(*(char)))->(int)
(	O
puuconf	*(void)
,	O
zphone	*(char)
,	O
&	O
zprefix	*(char)
,	O
&	O
zsuffix	*(char)
)	O
)	O
{	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
zsuffix	*(char)
==	O
NULL	O
)	O
zadd	*(char)
=	O
zprefix	*(char)
;	O
else	O
{	O
size_t	long
cprefix	long
;	O
cprefix	long
=	O
strlen	(*(char))->(long)
(	O
zprefix	*(char)
)	O
;	O
if	O
(	O
clen	long
+	O
cprefix	long
+	O
1	int
>	O
calc	long
)	O
{	O
char	O
*	O
znew	*(char)
;	O
calc	long
=	O
clen	long
+	O
cprefix	long
+	O
20	int
;	O
znew	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
calc	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
znew	*(char)
,	O
*	O
pzarg	*(*(char))
,	O
clen	long
)	O
;	O
ubuffree	(*(char))->(void)
(	O
*	O
pzarg	*(*(char))
)	O
;	O
*	O
pzarg	*(*(char))
=	O
znew	*(char)
;	O
zto	*(char)
=	O
znew	*(char)
+	O
clen	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zto	*(char)
,	O
zprefix	*(char)
,	O
cprefix	long
)	O
;	O
zto	*(char)
+=	O
cprefix	long
;	O
clen	long
+=	O
cprefix	long
;	O
zadd	*(char)
=	O
zsuffix	*(char)
;	O
}	O
}	O
break	O
;	O
case	O
'Y'	O
:	O
if	O
(	O
zLdevice	*(char)
==	O
NULL	O
&&	O
zport	*(char)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\Y"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
zadd	*(char)
=	O
zLdevice	*(char)
;	O
if	O
(	O
zadd	*(char)
==	O
NULL	O
)	O
zadd	*(char)
=	O
zport	*(char)
;	O
break	O
;	O
case	O
'Z'	O
:	O
if	O
(	O
qsys	*(struct)
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\Z"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
zadd	*(char)
=	O
qsys	*(struct)
->	O
uuconf_zname	*(char)
;	O
break	O
;	O
case	O
'S'	O
:	O
{	O
if	O
(	O
ibaud	long
==	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Illegal use of \\S"	*(char)
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
abadd	array(char)
,	O
"%ld"	*(char)
,	O
ibaud	long
)	O
;	O
zadd	*(char)
=	O
abadd	array(char)
;	O
}	O
break	O
;	O
default	O
:	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"chat-program: Unrecognized escape sequence \\%c"	*(char)
,	O
*	O
zfrom	*(char)
)	O
;	O
abadd	array(char)
[	O
0	int
]	O
=	O
*	O
zfrom	*(char)
;	O
abadd	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
zadd	*(char)
=	O
abadd	array(char)
;	O
}	O
break	O
;	O
}	O
if	O
(	O
!	O
fret	int
)	O
break	O
;	O
cadd	long
=	O
strlen	(*(char))->(long)
(	O
zadd	*(char)
)	O
;	O
if	O
(	O
clen	long
+	O
cadd	long
+	O
1	int
>	O
calc	long
)	O
{	O
char	O
*	O
znew	*(char)
;	O
calc	long
=	O
clen	long
+	O
cadd	long
+	O
20	int
;	O
znew	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
calc	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
znew	*(char)
,	O
*	O
pzarg	*(*(char))
,	O
clen	long
)	O
;	O
ubuffree	(*(char))->(void)
(	O
*	O
pzarg	*(*(char))
)	O
;	O
*	O
pzarg	*(*(char))
=	O
znew	*(char)
;	O
zto	*(char)
=	O
znew	*(char)
+	O
clen	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
zto	*(char)
,	O
zadd	*(char)
,	O
cadd	long
+	O
1	int
)	O
;	O
zto	*(char)
+=	O
cadd	long
;	O
clen	long
+=	O
cadd	long
;	O
ubuffree	(*(char))->(void)
(	O
zfree	*(char)
)	O
;	O
}	O
if	O
(	O
!	O
fret	int
)	O
break	O
;	O
*	O
zto	*(char)
++	O
=	O
'\0'	O
;	O
++	O
clen	long
;	O
}	O
*	O
pzarg	*(*(char))
=	O
NULL	O
;	O
if	O
(	O
fret	int
)	O
fret	int
=	O
fconn_run_chat	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(*(char)))->(int)
(	O
qconn	*(struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct`),int,*(char),*(void),union(struct`,struct`,struct`,struct`,struct`,struct`)))))
,	O
pzpass	*(*(char))
)	O
;	O
for	O
(	O
pz	*(*(char))
=	O
pzpass	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
ubuffree	(*(char))->(void)
(	O
*	O
pz	*(*(char))
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzpass	*(*(char))
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zcallout_login	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zcallout_pass	*(char)
)	O
;	O
return	O
fret	int
;	O
}	O
