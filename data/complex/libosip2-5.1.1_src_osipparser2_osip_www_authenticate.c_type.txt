int	O
osip_www_authenticate_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
osip_www_authenticate_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
*	O
dest	*(char)
=	O
(	O
osip_www_authenticate_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_www_authenticate_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
*	O
dest	*(char)
,	O
0	int
,	O
sizeof	O
(	O
osip_www_authenticate_t	struct
)	O
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_www_authenticate	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
int	O
i	int
;	O
if	O
(	O
hvalue	*(char)
==	O
NULL	O
||	O
hvalue	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_www_authenticate_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
&	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
i	int
=	O
osip_www_authenticate_parse	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(int)
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
hvalue	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
i	int
;	O
}	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
2	int
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
www_authenticates	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
const	O
char	O
*	O
str	*(char)
,	O
char	O
*	O
*	O
result	*(*(char))
,	O
const	O
char	O
*	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
str	*(char)
;	O
if	O
(	O
*	O
result	*(*(char))
!=	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
while	O
(	O
(	O
' '	O
==	O
*	O
str	*(char)
)	O
||	O
(	O
'\t'	O
==	O
*	O
str	*(char)
)	O
||	O
(	O
','	O
==	O
*	O
str	*(char)
)	O
)	O
if	O
(	O
*	O
str	*(char)
)	O
str	*(char)
++	O
;	O
else	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
osip_strncasecmp	(*(char),*(char),long)->(int)
(	O
name	*(char)
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
)	O
==	O
0	int
)	O
{	O
const	O
char	O
*	O
quote1	*(char)
;	O
const	O
char	O
*	O
quote2	*(char)
;	O
const	O
char	O
*	O
tmp	*(char)
;	O
const	O
char	O
*	O
hack	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(char)
,	O
'='	O
)	O
;	O
if	O
(	O
hack	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
while	O
(	O
' '	O
==	O
*	O
(	O
hack	*(char)
-	O
1	int
)	O
)	O
hack	*(char)
--	O
;	O
if	O
(	O
(	O
size_t	long
)	O
(	O
hack	*(char)
-	O
str	*(char)
)	O
!=	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
)	O
{	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
str	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
quote1	*(char)
=	O
__osip_quote_find	(*(char))->(*(char))
(	O
str	*(char)
)	O
;	O
if	O
(	O
quote1	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
quote2	*(char)
=	O
__osip_quote_find	(*(char))->(*(char))
(	O
quote1	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
quote2	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
quote2	*(char)
-	O
quote1	*(char)
==	O
1	int
)	O
{	O
tmp	*(char)
=	O
quote2	*(char)
+	O
1	int
;	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
" \t"	*(char)
)	O
;	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
"\n\r"	*(char)
)	O
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
if	O
(	O
*	O
tmp	*(char)
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
*	O
tmp	*(char)
!=	O
'\t'	O
&&	O
*	O
tmp	*(char)
!=	O
' '	O
)	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
tmp	*(char)
;	O
else	O
{	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
" \t"	*(char)
)	O
;	O
if	O
(	O
*	O
tmp	*(char)
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
tmp	*(char)
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
*	O
result	*(*(char))
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
quote2	*(char)
-	O
quote1	*(char)
+	O
3	int
)	O
;	O
if	O
(	O
*	O
result	*(*(char))
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
*	O
result	*(*(char))
,	O
quote1	*(char)
,	O
quote2	*(char)
-	O
quote1	*(char)
+	O
1	int
)	O
;	O
tmp	*(char)
=	O
quote2	*(char)
+	O
1	int
;	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
" \t"	*(char)
)	O
;	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
"\n\r"	*(char)
)	O
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
if	O
(	O
*	O
tmp	*(char)
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
*	O
tmp	*(char)
!=	O
'\t'	O
&&	O
*	O
tmp	*(char)
!=	O
' '	O
)	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
tmp	*(char)
;	O
else	O
{	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
" \t"	*(char)
)	O
;	O
if	O
(	O
*	O
tmp	*(char)
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
tmp	*(char)
;	O
}	O
}	O
else	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
str	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_token_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
const	O
char	O
*	O
str	*(char)
,	O
char	O
*	O
*	O
result	*(*(char))
,	O
const	O
char	O
*	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
const	O
char	O
*	O
beg	*(char)
;	O
const	O
char	O
*	O
tmp	*(char)
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
str	*(char)
;	O
if	O
(	O
*	O
result	*(*(char))
!=	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
beg	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(char)
,	O
'='	O
)	O
;	O
if	O
(	O
beg	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
<	O
6	int
)	O
return	O
OSIP_SUCCESS	int
;	O
while	O
(	O
(	O
' '	O
==	O
*	O
str	*(char)
)	O
||	O
(	O
'\t'	O
==	O
*	O
str	*(char)
)	O
||	O
(	O
','	O
==	O
*	O
str	*(char)
)	O
)	O
if	O
(	O
*	O
str	*(char)
)	O
str	*(char)
++	O
;	O
else	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
osip_strncasecmp	(*(char),*(char),long)->(int)
(	O
name	*(char)
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
)	O
==	O
0	int
)	O
{	O
const	O
char	O
*	O
end	*(char)
;	O
end	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
str	*(char)
,	O
','	O
)	O
;	O
if	O
(	O
end	*(char)
==	O
NULL	O
)	O
end	*(char)
=	O
str	*(char)
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
if	O
(	O
end	*(char)
-	O
beg	*(char)
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
*	O
result	*(*(char))
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
end	*(char)
-	O
beg	*(char)
)	O
;	O
if	O
(	O
*	O
result	*(*(char))
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_clrncpy	(*(char),*(char),long)->(*(char))
(	O
*	O
result	*(*(char))
,	O
beg	*(char)
+	O
1	int
,	O
end	*(char)
-	O
beg	*(char)
-	O
1	int
)	O
;	O
tmp	*(char)
=	O
(	O
*	O
end	*(char)
)	O
?	O
(	O
end	*(char)
+	O
1	int
)	O
:	O
end	*(char)
;	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
" \t"	*(char)
)	O
;	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
"\n\r"	*(char)
)	O
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
if	O
(	O
*	O
tmp	*(char)
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
*	O
tmp	*(char)
!=	O
'\t'	O
&&	O
*	O
tmp	*(char)
!=	O
' '	O
)	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
tmp	*(char)
;	O
else	O
{	O
tmp	*(char)
+=	O
strspn	(*(char),*(char))->(long)
(	O
tmp	*(char)
,	O
" \t"	*(char)
)	O
;	O
if	O
(	O
*	O
tmp	*(char)
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
tmp	*(char)
;	O
}	O
}	O
else	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
str	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_www_authenticate_parse	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(int)
(	O
osip_www_authenticate_t	struct
*	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
const	O
char	O
*	O
space	*(char)
;	O
const	O
char	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
int	O
i	int
;	O
space	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
hvalue	*(char)
,	O
' '	O
)	O
;	O
if	O
(	O
space	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
space	*(char)
-	O
hvalue	*(char)
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
space	*(char)
-	O
hvalue	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
,	O
hvalue	*(char)
,	O
space	*(char)
-	O
hvalue	*(char)
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
parse_ok	int
=	O
0	int
;	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"realm"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"domain"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"nonce"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"opaque"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"stale"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"algorithm"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"qop"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"version"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"targetname"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"gssapi-data"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
if	O
(	O
0	int
==	O
parse_ok	int
)	O
{	O
const	O
char	O
*	O
quote1	*(char)
,	O
*	O
quote2	*(char)
,	O
*	O
tmp	*(char)
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
space	*(char)
)	O
<	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
tmp	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
space	*(char)
+	O
1	int
,	O
','	O
)	O
;	O
if	O
(	O
tmp	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
quote1	*(char)
=	O
__osip_quote_find	(*(char))->(*(char))
(	O
space	*(char)
)	O
;	O
if	O
(	O
(	O
quote1	*(char)
!=	O
NULL	O
)	O
&&	O
(	O
quote1	*(char)
<	O
tmp	*(char)
)	O
)	O
{	O
quote2	*(char)
=	O
__osip_quote_find	(*(char))->(*(char))
(	O
quote1	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
quote2	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
tmp	*(char)
<	O
quote2	*(char)
)	O
space	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
quote2	*(char)
,	O
','	O
)	O
;	O
else	O
space	*(char)
=	O
tmp	*(char)
;	O
if	O
(	O
space	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
space	*(char)
=	O
tmp	*(char)
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_www_authenticate	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int,*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
int	O
pos	int
,	O
osip_www_authenticate_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
www_authenticates	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<=	O
pos	int
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
=	O
(	O
osip_www_authenticate_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
www_authenticates	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
*	O
dest	*(char)
=	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
return	O
pos	int
;	O
}	O
char	O
*	O
osip_www_authenticate_get_auth_type	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_auth_type	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
auth_type	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
=	O
(	O
char	O
*	O
)	O
auth_type	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_realm	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_realm	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
realm	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
=	O
(	O
char	O
*	O
)	O
realm	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_domain	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_domain	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
domain	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
=	O
(	O
char	O
*	O
)	O
domain	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_nonce	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_nonce	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
nonce	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
=	O
(	O
char	O
*	O
)	O
nonce	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_stale	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_stale	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
stale	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
=	O
(	O
char	O
*	O
)	O
stale	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_opaque	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_opaque	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
opaque	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
=	O
(	O
char	O
*	O
)	O
opaque	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_algorithm	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_algorithm	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
algorithm	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
=	O
(	O
char	O
*	O
)	O
algorithm	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_qop_options	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_qop_options	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
qop_options	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
=	O
(	O
char	O
*	O
)	O
qop_options	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_version	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_version	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
version	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
=	O
(	O
char	O
*	O
)	O
version	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_targetname	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_targetname	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
targetname	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
=	O
(	O
char	O
*	O
)	O
targetname	*(char)
;	O
}	O
char	O
*	O
osip_www_authenticate_get_gssapi_data	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
;	O
}	O
void	O
osip_www_authenticate_set_gssapi_data	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
gssapi_data	*(char)
)	O
{	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
=	O
(	O
char	O
*	O
)	O
gssapi_data	*(char)
;	O
}	O
int	O
osip_www_authenticate_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
(	O
const	O
osip_www_authenticate_t	struct
*	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
size_t	long
len	long
;	O
char	O
*	O
tmp	*(char)
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
||	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
==	O
NULL	O
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
+	O
1	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
+	O
7	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
)	O
+	O
8	int
;	O
len	long
=	O
len	long
+	O
2	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
)	O
+	O
9	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
+	O
9	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
)	O
+	O
8	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
)	O
+	O
12	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
+	O
6	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
+	O
10	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
+	O
13	int
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
)	O
+	O
14	int
;	O
tmp	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
tmp	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
*	O
dest	*(char)
=	O
tmp	*(char)
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
" realm="	*(char)
,	O
7	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", domain="	*(char)
,	O
9	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", nonce="	*(char)
,	O
8	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", opaque="	*(char)
,	O
9	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", stale="	*(char)
,	O
8	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", algorithm="	*(char)
,	O
12	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", qop="	*(char)
,	O
6	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", version="	*(char)
,	O
10	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", targetname="	*(char)
,	O
13	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", gssapi-data="	*(char)
,	O
14	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
)	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
==	O
NULL	O
)	O
{	O
len	long
=	O
strlen	(*(char))->(long)
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
if	O
(	O
(	O
*	O
dest	*(char)
)	O
[	O
len	long
]	O
==	O
','	O
)	O
(	O
*	O
dest	*(char)
)	O
[	O
len	long
]	O
=	O
' '	O
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
)	O
;	O
osip_free	O
(	O
www_authenticate	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
int	O
osip_www_authenticate_clone	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
const	O
osip_www_authenticate_t	struct
*	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
osip_www_authenticate_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
int	O
i	int
;	O
osip_www_authenticate_t	struct
*	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_www_authenticate_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
&	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
domain	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
stale	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
algorithm	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
version	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
)	O
;	O
if	O
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
==	O
NULL	O
&&	O
wwwa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
gssapi_data	*(char)
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
*	O
dest	*(char)
=	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
