XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_init	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_init	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"unused, unused2"	*(char)
)	O
;	O
{	O
int	O
unused	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
ST	O
(	O
0	int
)	O
)	O
;	O
char	O
*	O
unused2	O
=	O
(	O
char	O
*	O
)	O
SvPV_nolen	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
int	O
RETVAL	O
;	O
dXSTARG	O
;	O
RETVAL	O
=	O
xspara_init	O
(	O
unused	O
,	O
unused2	O
)	O
;	O
XSprePUSH	O
;	O
PUSHi	O
(	O
(	O
IV	long
)	O
RETVAL	O
)	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_state	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_state	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"state"	*(char)
)	O
;	O
{	O
SV	struct
*	O
state	*(int)
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	O
(	O
state	*(int)
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_new	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_new	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
<	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"class, ..."	*(char)
)	O
;	O
{	O
SV	struct
*	O
class	O
=	O
ST	O
(	O
0	int
)	O
;	O
HV	struct
*	O
pkg	O
;	O
HV	struct
*	O
conf	O
=	O
0	int
;	O
int	O
id	O
;	O
SV	struct
*	O
RETVAL	O
;	O
items	O
--	O
;	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
if	O
(	O
SvROK	O
(	O
ST	O
(	O
1	int
)	O
)	O
&&	O
SvTYPE	O
(	O
SvRV	O
(	O
ST	O
(	O
1	int
)	O
)	O
)	O
==	O
SVt_PVHV	int
)	O
conf	O
=	O
(	O
HV	struct
*	O
)	O
SvRV	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
}	O
id	O
=	O
xspara_new	O
(	O
conf	O
)	O
;	O
pkg	O
=	O
gv_stashpv	O
(	O
"Texinfo::Convert::XSParagraph::XSParagraph"	*(char)
,	O
0	int
)	O
;	O
RETVAL	O
=	O
newSViv	O
(	O
id	O
)	O
;	O
RETVAL	O
=	O
sv_2mortal	O
(	O
RETVAL	O
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line_count	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line_count	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
int	O
RETVAL	O
;	O
dXSTARG	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
RETVAL	O
=	O
xspara_end_line_count	O
(	O
)	O
;	O
XSprePUSH	O
;	O
PUSHi	O
(	O
(	O
IV	long
)	O
RETVAL	O
)	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph__end_line	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph__end_line	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
xspara__end_line	O
(	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
RETVAL	O
;	O
dXSTARG	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
RETVAL	O
=	O
xspara_end_line	O
(	O
)	O
;	O
sv_setpv	O
(	O
TARG	O
,	O
RETVAL	O
)	O
;	O
XSprePUSH	O
;	O
PUSHTARG	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_get_pending	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_get_pending	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
RETVAL	O
;	O
dXSTARG	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
RETVAL	O
=	O
xspara_get_pending	O
(	O
)	O
;	O
sv_setpv	O
(	O
TARG	O
,	O
RETVAL	O
)	O
;	O
XSprePUSH	O
;	O
PUSHTARG	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_pending_word	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_pending_word	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
<	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph, ..."	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
int	O
add_spaces	O
=	O
0	int
;	O
char	O
*	O
retval	O
;	O
SV	struct
*	O
RETVAL	O
;	O
items	O
-=	O
1	int
;	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
if	O
(	O
SvOK	O
(	O
ST	O
(	O
1	int
)	O
)	O
)	O
{	O
add_spaces	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
;	O
}	O
}	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
retval	O
=	O
xspara_add_pending_word	O
(	O
add_spaces	O
)	O
;	O
RETVAL	O
=	O
newSVpv	O
(	O
retval	O
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	O
)	O
;	O
RETVAL	O
=	O
sv_2mortal	O
(	O
RETVAL	O
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
retval	O
;	O
SV	struct
*	O
RETVAL	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
retval	O
=	O
xspara_end	O
(	O
)	O
;	O
RETVAL	O
=	O
newSVpv	O
(	O
retval	O
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	O
)	O
;	O
RETVAL	O
=	O
sv_2mortal	O
(	O
RETVAL	O
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_text	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_text	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph, text_in"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
text_in	O
=	O
ST	O
(	O
1	int
)	O
;	O
char	O
*	O
text	O
;	O
char	O
*	O
retval	O
;	O
SV	struct
*	O
RETVAL	O
;	O
if	O
(	O
!	O
SvUTF8	O
(	O
text_in	O
)	O
)	O
sv_utf8_upgrade	O
(	O
text_in	O
)	O
;	O
text	O
=	O
SvPV_nolen	O
(	O
text_in	O
)	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
retval	O
=	O
xspara_add_text	O
(	O
text	O
)	O
;	O
RETVAL	O
=	O
newSVpv	O
(	O
retval	O
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	O
)	O
;	O
RETVAL	O
=	O
sv_2mortal	O
(	O
RETVAL	O
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_next	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_next	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
<	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph, text_in, ..."	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
text_in	O
=	O
ST	O
(	O
1	int
)	O
;	O
char	O
*	O
text	O
;	O
STRLEN	long
text_len	O
;	O
char	O
*	O
retval	O
;	O
SV	struct
*	O
arg_in	O
;	O
int	O
transparent	O
=	O
0	int
;	O
SV	struct
*	O
RETVAL	O
;	O
items	O
-=	O
2	int
;	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
items	O
--	O
;	O
arg_in	O
=	O
ST	O
(	O
2	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	O
)	O
)	O
transparent	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	O
)	O
;	O
}	O
if	O
(	O
!	O
SvUTF8	O
(	O
text_in	O
)	O
)	O
sv_utf8_upgrade	O
(	O
text_in	O
)	O
;	O
text	O
=	O
SvPV	O
(	O
text_in	O
,	O
text_len	O
)	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
retval	O
=	O
xspara_add_next	O
(	O
text	O
,	O
text_len	O
,	O
transparent	O
)	O
;	O
RETVAL	O
=	O
newSVpv	O
(	O
retval	O
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	O
)	O
;	O
RETVAL	O
=	O
sv_2mortal	O
(	O
RETVAL	O
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_remove_end_sentence	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_remove_end_sentence	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
xspara_remove_end_sentence	O
(	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_end_sentence	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_end_sentence	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph, value"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
value	*(struct(*(void),int,int,union(*(char),long,long,double,*(struct(*`,int,int,union`)),*(*(struct`)),*(*(struct`)),*(struct),*(*(struct`)))))
=	O
ST	O
(	O
1	int
)	O
;	O
int	O
intvalue	O
=	O
0	int
;	O
if	O
(	O
SvOK	O
(	O
value	*(struct(*(void),int,int,union(*(char),long,long,double,*(struct(*`,int,int,union`)),*(*(struct`)),*(*(struct`)),*(struct),*(*(struct`)))))
)	O
)	O
intvalue	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
value	*(struct(*(void),int,int,union(*(char),long,long,double,*(struct(*`,int,int,union`)),*(*(struct`)),*(*(struct`)),*(struct),*(*(struct`)))))
)	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
xspara_add_end_sentence	O
(	O
intvalue	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_allow_end_sentence	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_allow_end_sentence	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph"	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
xspara_allow_end_sentence	O
(	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_space_protection	O
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_space_protection	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
<	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"paragraph, space_protection_in, ..."	*(char)
)	O
;	O
{	O
SV	struct
*	O
paragraph	O
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
space_protection_in	O
=	O
ST	O
(	O
1	int
)	O
;	O
int	O
space_protection	O
=	O
-	O
1	int
;	O
int	O
ignore_columns	O
=	O
-	O
1	int
;	O
int	O
keep_end_lines	O
=	O
-	O
1	int
;	O
int	O
french_spacing	O
=	O
-	O
1	int
;	O
int	O
double_width_no_break	O
=	O
-	O
1	int
;	O
SV	struct
*	O
arg_in	O
;	O
char	O
*	O
RETVAL	O
;	O
dXSTARG	O
;	O
if	O
(	O
SvOK	O
(	O
space_protection_in	O
)	O
)	O
space_protection	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
space_protection_in	O
)	O
;	O
items	O
-=	O
2	int
;	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
items	O
--	O
;	O
arg_in	O
=	O
ST	O
(	O
2	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	O
)	O
)	O
ignore_columns	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	O
)	O
;	O
}	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
items	O
--	O
;	O
arg_in	O
=	O
ST	O
(	O
3	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	O
)	O
)	O
keep_end_lines	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	O
)	O
;	O
}	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
items	O
--	O
;	O
arg_in	O
=	O
ST	O
(	O
4	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	O
)	O
)	O
french_spacing	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	O
)	O
;	O
}	O
if	O
(	O
items	O
>	O
0	int
)	O
{	O
items	O
--	O
;	O
arg_in	O
=	O
ST	O
(	O
5	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	O
)	O
)	O
double_width_no_break	O
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	O
)	O
;	O
}	O
xspara_set_state	O
(	O
paragraph	O
)	O
;	O
RETVAL	O
=	O
xspara_set_space_protection	O
(	O
space_protection	O
,	O
ignore_columns	O
,	O
keep_end_lines	O
,	O
french_spacing	O
,	O
double_width_no_break	O
)	O
;	O
sv_setpv	O
(	O
TARG	O
,	O
RETVAL	O
)	O
;	O
XSprePUSH	O
;	O
PUSHTARG	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EXTERNAL	O
(	O
boot_Texinfo__XS__XSParagraph	O
)	O
;	O
XS_EXTERNAL	O
(	O
boot_Texinfo__XS__XSParagraph	O
)	O
{	O
dVAR	O
;	O
dXSBOOTARGSXSAPIVERCHK	O
;	O
const	O
char	O
*	O
file	O
=	O
__FILE__	O
;	O
PERL_UNUSED_VAR	O
(	O
file	O
)	O
;	O
PERL_UNUSED_VAR	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
)	O
;	O
PERL_UNUSED_VAR	O
(	O
items	O
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::init"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_init	O
,	O
file	O
,	O
"$$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::set_state"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_set_state	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::new"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_new	O
,	O
file	O
,	O
"$;@"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::end_line_count"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_end_line_count	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::_end_line"	*(char)
,	O
XS_Texinfo__XS__XSParagraph__end_line	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::end_line"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_end_line	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::get_pending"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_get_pending	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_pending_word"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_add_pending_word	O
,	O
file	O
,	O
"$;@"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::end"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_end	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_text"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_add_text	O
,	O
file	O
,	O
"$$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_next"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_add_next	O
,	O
file	O
,	O
"$$;@"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::remove_end_sentence"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_remove_end_sentence	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_end_sentence"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_add_end_sentence	O
,	O
file	O
,	O
"$$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::allow_end_sentence"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_allow_end_sentence	O
,	O
file	O
,	O
"$"	*(char)
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::set_space_protection"	*(char)
,	O
XS_Texinfo__XS__XSParagraph_set_space_protection	O
,	O
file	O
,	O
"$$;@"	*(char)
)	O
;	O
Perl_xs_boot_epilog	O
(	O
aTHX_	O
ax	O
)	O
;	O
}	O
