static	O
error_t	int
add_one	(int,*(char))->(int)
(	O
cons_t	O
cons	int
,	O
char	O
*	O
name	*(char)
)	O
{	O
unsigned	O
long	O
int	O
nr	long
;	O
char	O
*	O
tail	*(char)
;	O
errno	O
=	O
0	int
;	O
nr	long
=	O
strtoul	O
(	O
name	*(char)
,	O
&	O
tail	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
!	O
errno	O
&&	O
*	O
tail	*(char)
==	O
'\0'	O
&&	O
nr	long
>	O
0	int
)	O
{	O
vcons_list_t	O
vcons_entry	*(int)
;	O
return	O
cons_lookup	()->(int)
(	O
cons	int
,	O
nr	long
,	O
1	int
,	O
&	O
vcons_entry	*(int)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
error_t	int
lookup_one	(int,*(char),*(int))->(int)
(	O
cons_t	O
cons	int
,	O
char	O
*	O
name	*(char)
,	O
vcons_list_t	O
*	O
vcons_entry	*(int)
)	O
{	O
unsigned	O
long	O
int	O
nr	long
;	O
char	O
*	O
tail	*(char)
;	O
errno	O
=	O
0	int
;	O
nr	long
=	O
strtoul	O
(	O
name	*(char)
,	O
&	O
tail	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
!	O
errno	O
&&	O
*	O
tail	*(char)
==	O
'\0'	O
&&	O
nr	long
>	O
0	int
)	O
return	O
cons_lookup	()->(int)
(	O
cons	int
,	O
nr	long
,	O
0	int
,	O
vcons_entry	*(int)
)	O
;	O
return	O
0	int
;	O
}	O
kern_return_t	O
cons_S_dir_changed	(int,int,int,int)->(int)
(	O
cons_notify_t	O
notify	int
,	O
natural_t	O
tickno	int
,	O
dir_changed_type_t	O
change	int
,	O
string_t	O
name	*(char)
)	O
{	O
error_t	int
err	int
;	O
cons_t	O
cons	int
;	O
if	O
(	O
!	O
notify	int
||	O
!	O
notify	int
->	O
cons	int
)	O
return	O
EOPNOTSUPP	int
;	O
cons	int
=	O
notify	int
->	O
cons	int
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cons	int
->	O
lock	O
)	O
;	O
switch	O
(	O
change	int
)	O
{	O
case	O
DIR_CHANGED_NULL	O
:	O
{	O
DIR	struct
*	O
dir	*(struct)
=	O
cons	int
->	O
dir	*(struct)
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
dent	*(struct(long,long,short,char,array(char)))
;	O
do	O
{	O
errno	O
=	O
0	int
;	O
dent	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
dir	*(struct)
)	O
;	O
if	O
(	O
!	O
dent	*(struct(long,long,short,char,array(char)))
&&	O
errno	O
)	O
err	int
=	O
errno	O
;	O
else	O
if	O
(	O
dent	*(struct(long,long,short,char,array(char)))
)	O
err	int
=	O
add_one	(int,*(char))->(int)
(	O
cons	int
,	O
dent	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
}	O
while	O
(	O
dent	*(struct(long,long,short,char,array(char)))
&&	O
!	O
err	int
)	O
;	O
if	O
(	O
err	int
)	O
assert	O
(	O
"Unexpected error"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
DIR_CHANGED_NEW	O
:	O
{	O
err	int
=	O
add_one	(int,*(char))->(int)
(	O
cons	int
,	O
name	*(char)
)	O
;	O
if	O
(	O
err	int
)	O
assert	O
(	O
"Unexpected error"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
DIR_CHANGED_UNLINK	O
:	O
{	O
vcons_list_t	O
vcons_entry	*(int)
;	O
err	int
=	O
lookup_one	(int,*(char),*(int))->(int)
(	O
cons	int
,	O
name	*(char)
,	O
&	O
vcons_entry	*(int)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
{	O
cons_vcons_remove	()->(int)
(	O
cons	int
,	O
vcons_entry	*(int)
)	O
;	O
if	O
(	O
vcons_entry	*(int)
->	O
prev	O
)	O
vcons_entry	*(int)
->	O
prev	O
->	O
next	O
=	O
vcons_entry	*(int)
->	O
next	O
;	O
else	O
cons	int
->	O
vcons_list	O
=	O
vcons_entry	*(int)
->	O
next	O
;	O
if	O
(	O
vcons_entry	*(int)
->	O
next	O
)	O
vcons_entry	*(int)
->	O
next	O
->	O
prev	O
=	O
vcons_entry	*(int)
->	O
prev	O
;	O
else	O
cons	int
->	O
vcons_last	O
=	O
vcons_entry	*(int)
->	O
prev	O
;	O
free	()->(int)
(	O
vcons_entry	*(int)
)	O
;	O
}	O
}	O
break	O
;	O
case	O
DIR_CHANGED_RENUMBER	O
:	O
default	O
:	O
assert	O
(	O
"Unexpected dir-changed type."	*(char)
)	O
;	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cons	int
->	O
lock	O
)	O
;	O
return	O
EINVAL	int
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cons	int
->	O
lock	O
)	O
;	O
return	O
0	int
;	O
}	O
