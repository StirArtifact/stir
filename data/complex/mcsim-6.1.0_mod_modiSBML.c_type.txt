typedef	O
enum	O
{	O
product	int
,	O
reactant	int
,	O
parameter	int
}	O
VARTYPES	enum(int,int,int)
;	O
typedef	O
enum	O
{	O
plus	int
,	O
minus	int
}	O
OPSIGNS	enum(int,int)
;	O
typedef	O
struct	O
tagFORSV	struct(*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`))))))
{	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
;	O
PSTR	*(char)
szName	*(char)
;	O
PSTR	*(char)
szVal	*(char)
;	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pTarget	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
}	O
FORSV	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
,	O
*	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
;	O
KM	struct(*(char),int,int)
vrgSBMLKW	array(struct(*(char),int,int))
[	O
]	O
=	O
{	O
{	O
"sbml"	*(char)
,	O
KM_SBML	int
,	O
CN_SBML	int
}	O
,	O
{	O
"model"	*(char)
,	O
KM_MODEL	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfFunctionDefinitions"	*(char)
,	O
KM_FUNCLIST	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"functionDefinition"	*(char)
,	O
KM_FUNC	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfCompartments"	*(char)
,	O
KM_CPTLIST	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"compartment"	*(char)
,	O
KM_CPT	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfSpecies"	*(char)
,	O
KM_SPECIESLIST	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"specie"	*(char)
,	O
KM_SPECIES	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"species"	*(char)
,	O
KM_SPECIES	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfParameters"	*(char)
,	O
KM_PARAMS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"parameter"	*(char)
,	O
KM_PARAM	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfRules"	*(char)
,	O
KM_RULESLIST	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"rateRule"	*(char)
,	O
KM_RATERULE	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfReactions"	*(char)
,	O
KM_REACTIONS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"reaction"	*(char)
,	O
KM_REACTION	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfReactants"	*(char)
,	O
KM_REACTANTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"listOfProducts"	*(char)
,	O
KM_PRODUCTS	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"specieReference"	*(char)
,	O
KM_SPECIES_REF	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"speciesReference"	*(char)
,	O
KM_SPECIES_REF	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"stoichiometry"	*(char)
,	O
KM_STOICHIO	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"kineticLaw"	*(char)
,	O
KM_LAW	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"math"	*(char)
,	O
KM_MATH	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"apply"	*(char)
,	O
KM_APPLY	int
,	O
CN_GLOBAL	int
}	O
,	O
{	O
"plus"	*(char)
,	O
KM_PLUS	int
,	O
CN_APPLY	int
}	O
,	O
{	O
"minus"	*(char)
,	O
KM_MINUS	int
,	O
CN_APPLY	int
}	O
,	O
{	O
"times"	*(char)
,	O
KM_TIMES	int
,	O
CN_APPLY	int
}	O
,	O
{	O
"divide"	*(char)
,	O
KM_DIVIDE	int
,	O
CN_APPLY	int
}	O
,	O
{	O
"power"	*(char)
,	O
KM_POWER	int
,	O
CN_APPLY	int
}	O
,	O
{	O
"ci"	*(char)
,	O
KM_CI	int
,	O
CN_APPLY	int
}	O
,	O
{	O
""	*(char)
,	O
0	int
,	O
CN_ALL	int
}	O
}	O
;	O
void	O
AugmentEquation	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char),*(char),enum(int,int))->(void)
(	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
PSTR	*(char)
szEqn	*(char)
,	O
PSTR	*(char)
szStoi	*(char)
,	O
OPSIGNS	enum(int,int)
sign	enum(int,int)
)	O
{	O
PSTR	*(char)
szBuf	*(char)
;	O
PSTRLEX	array(char)
szSymbol	array(char)
;	O
if	O
(	O
!	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
||	O
!	O
szEqn	*(char)
||	O
!	O
szStoi	*(char)
)	O
return	O
;	O
if	O
(	O
sign	enum(int,int)
==	O
plus	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szSymbol	array(char)
,	O
" + "	*(char)
)	O
;	O
if	O
(	O
sign	enum(int,int)
==	O
minus	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szSymbol	array(char)
,	O
" - "	*(char)
)	O
;	O
if	O
(	O
(	O
szBuf	*(char)
=	O
(	O
PSTR	*(char)
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
szSymbol	array(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
szStoi	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
szEqn	*(char)
)	O
+	O
5	int
)	O
)	O
)	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
szStoi	*(char)
,	O
"1"	*(char)
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
szBuf	*(char)
,	O
"%s%s%s"	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
,	O
szSymbol	array(char)
,	O
szEqn	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szBuf	*(char)
,	O
"%s%s %s * %s"	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
,	O
szSymbol	array(char)
,	O
szStoi	*(char)
,	O
szEqn	*(char)
)	O
;	O
else	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
NULL	O
,	O
RE_OUTOFMEM	int
|	O
RE_FATAL	int
,	O
szEqn	*(char)
,	O
"* .. defining equation in AugmentEquation"	*(char)
)	O
;	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
)	O
free	(*(void))->(void)
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
)	O
;	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
=	O
szBuf	*(char)
;	O
}	O
void	O
ConstructEqn	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),enum(int,int,int))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szRName	*(char)
,	O
VARTYPES	enum(int,int,int)
eType	enum(int,int,int)
)	O
{	O
int	O
iLexType	int
;	O
HANDLE	long
hType	long
;	O
PSTRLEX	array(char)
szSName	array(char)
;	O
PSTRLEX	array(char)
szStoichio	array(char)
;	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szSName	array(char)
)	O
;	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
while	O
(	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
!=	O
'"'	O
)	O
&&	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
!=	O
'>'	O
)	O
)	O
{	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
;	O
}	O
if	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
==	O
'"'	O
)	O
{	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
;	O
GetNumber	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szStoichio	array(char)
,	O
&	O
iLexType	int
)	O
;	O
}	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szStoichio	array(char)
,	O
"1"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s stoichio: %s\n"	*(char)
,	O
szSName	array(char)
,	O
szStoichio	array(char)
)	O
;	O
if	O
(	O
!	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szSName	array(char)
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
szSName	array(char)
,	O
"%s_%s"	*(char)
,	O
szSName	array(char)
,	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmLocalCpts	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
hType	long
=	O
GetVarType	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(int)
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szSName	array(char)
)	O
;	O
if	O
(	O
hType	long
==	O
ID_STATE	int
)	O
{	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmDynEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szSName	array(char)
)	O
;	O
if	O
(	O
!	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
)	O
{	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szSName	array(char)
,	O
""	*(char)
,	O
KM_DXDT	int
)	O
;	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmDynEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szSName	array(char)
)	O
;	O
}	O
AugmentEquation	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char),*(char),enum(int,int))->(void)
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szRName	*(char)
,	O
szStoichio	array(char)
,	O
(	O
eType	enum(int,int,int)
==	O
reactant	int
?	O
minus	int
:	O
plus	int
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
hType	long
!=	O
ID_PARM	int
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
NULL	O
,	O
RE_BADSTATE	O
|	O
RE_FATAL	int
,	O
szSName	array(char)
,	O
NULL	O
)	O
;	O
}	O
}	O
long	O
CountLines	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
PFILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
nLines	int
=	O
0	int
;	O
char	O
szDummy	array(char)
[	O
2	int
]	O
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*[^\n]"	*(char)
)	O
;	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
while	O
(	O
!	O
(	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
if	O
(	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%1s"	*(char)
,	O
szDummy	array(char)
)	O
>	O
0	int
)	O
nLines	int
++	O
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*[^\n]"	*(char)
)	O
;	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
rewind	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
pFileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
(	O
nLines	int
)	O
;	O
}	O
int	O
GetSBMLKeywordCode	(*(char))->(int)
(	O
PSTR	*(char)
szKeyword	*(char)
)	O
{	O
PKM	*(struct(*(char),int,int))
pkm	*(struct(*(char),int,int))
=	O
&	O
vrgSBMLKW	array(struct(*(char),int,int))
[	O
0	int
]	O
;	O
while	O
(	O
*	O
pkm	*(struct(*(char),int,int))
->	O
szKeyword	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
szKeyword	*(char)
,	O
pkm	*(struct(*(char),int,int))
->	O
szKeyword	*(char)
)	O
)	O
pkm	*(struct(*(char),int,int))
++	O
;	O
return	O
(	O
pkm	*(struct(*(char),int,int))
->	O
iKWCode	int
)	O
;	O
}	O
int	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
int	O
iEnding	int
,	O
int	O
iKWCode	int
)	O
{	O
PSTRLEX	array(char)
szLex	*(char)
;	O
char	O
c	char
;	O
BOOL	int
bDone	int
=	O
FALSE	int
;	O
BOOL	int
bFound	int
=	O
FALSE	int
;	O
if	O
(	O
!	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
return	O
(	O
0	int
)	O
;	O
if	O
(	O
!	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
)	O
return	O
(	O
0	int
)	O
;	O
while	O
(	O
!	O
bDone	int
)	O
{	O
c	char
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
;	O
if	O
(	O
c	char
==	O
'<'	O
)	O
{	O
szLex	*(char)
[	O
0	int
]	O
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
;	O
c	char
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
;	O
if	O
(	O
(	O
c	char
==	O
'!'	O
)	O
||	O
(	O
c	char
==	O
'?'	O
)	O
||	O
(	O
c	char
==	O
'/'	O
)	O
)	O
{	O
if	O
(	O
c	char
==	O
'/'	O
)	O
{	O
szLex	*(char)
[	O
0	int
]	O
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
bDone	int
=	O
(	O
GetSBMLKeywordCode	(*(char))->(int)
(	O
szLex	*(char)
)	O
==	O
iEnding	int
)	O
;	O
}	O
else	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
else	O
{	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
bFound	int
=	O
(	O
iKWCode	int
==	O
GetSBMLKeywordCode	(*(char))->(int)
(	O
szLex	*(char)
)	O
)	O
;	O
bDone	int
=	O
bFound	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
c	char
==	O
0	int
)	O
bDone	int
=	O
TRUE	int
;	O
else	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
}	O
}	O
return	O
(	O
bFound	int
)	O
;	O
}	O
void	O
SetVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),long)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PSTR	*(char)
szName	*(char)
,	O
PSTR	*(char)
szVal	*(char)
,	O
HANDLE	long
hType	long
)	O
{	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
int	O
iKWCode	int
;	O
if	O
(	O
!	O
(	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
)	O
)	O
)	O
{	O
iKWCode	int
=	O
(	O
(	O
hType	long
==	O
ID_STATE	int
?	O
KM_STATES	int
:	O
(	O
hType	long
==	O
ID_INPUT	int
?	O
KM_INPUTS	int
:	O
(	O
hType	long
==	O
ID_OUTPUT	int
?	O
KM_OUTPUTS	int
:	O
KM_NULL	int
)	O
)	O
)	O
)	O
;	O
if	O
(	O
(	O
hType	long
==	O
ID_PARM	int
)	O
||	O
(	O
hType	long
==	O
(	O
ID_LOCALDYN	int
|	O
ID_SPACEFLAG	int
)	O
)	O
||	O
(	O
hType	long
==	O
(	O
ID_LOCALCALCOUT	int
|	O
ID_SPACEFLAG	int
)	O
)	O
||	O
(	O
hType	long
==	O
(	O
ID_LOCALSCALE	int
|	O
ID_SPACEFLAG	int
)	O
)	O
)	O
{	O
AddEquation	(*(*(struct(*(char),*(char),long,*(struct`)))),*(char),*(char),long)->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
,	O
szVal	*(char)
,	O
hType	long
)	O
;	O
if	O
(	O
hType	long
==	O
ID_PARM	int
)	O
printf	(*(char))->(int)
(	O
"param.   %s = %s\n"	*(char)
,	O
szName	*(char)
,	O
szVal	*(char)
)	O
;	O
}	O
else	O
{	O
DeclareModelVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szName	*(char)
,	O
iKWCode	int
)	O
;	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
)	O
;	O
DefineGlobalVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char),*(char),long)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
,	O
szVal	*(char)
,	O
hType	long
)	O
;	O
if	O
(	O
hType	long
==	O
ID_STATE	int
)	O
printf	(*(char))->(int)
(	O
"species  %s = %s\n"	*(char)
,	O
szName	*(char)
,	O
szVal	*(char)
)	O
;	O
if	O
(	O
hType	long
==	O
ID_INPUT	int
)	O
printf	(*(char))->(int)
(	O
"input    %s = %s\n"	*(char)
,	O
szName	*(char)
,	O
szVal	*(char)
)	O
;	O
if	O
(	O
hType	long
==	O
ID_OUTPUT	int
)	O
printf	(*(char))->(int)
(	O
"output   %s = %s\n"	*(char)
,	O
szName	*(char)
,	O
szVal	*(char)
)	O
;	O
}	O
}	O
}	O
int	O
Create1Var	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
(	O
PFILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
pfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
PVOID	*(void)
pInfo	*(void)
)	O
{	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pInfo	*(void)
;	O
PSTRLEX	array(char)
szTmp	array(char)
;	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
[	O
0	int
]	O
==	O
'_'	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmp	array(char)
,	O
"%s%s"	*(char)
,	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
==	O
(	O
ID_LOCALDYN	int
|	O
ID_SPACEFLAG	int
)	O
)	O
SetVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),long)->(void)
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmp	array(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
)	O
;	O
else	O
SetVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),long)->(void)
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmp	array(char)
,	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
szVal	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
)	O
;	O
}	O
else	O
SetVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),long)->(void)
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
)	O
;	O
return	O
(	O
1	int
)	O
;	O
}	O
int	O
Transcribe1AlgEqn	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
(	O
PFILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
pfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
PVOID	*(void)
pInfo	*(void)
)	O
{	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pInfo	*(void)
;	O
PSTRLEX	array(char)
szTmpName	array(char)
=	O
""	*(char)
;	O
PSTREQN	array(char)
szTmpEq	array(char)
=	O
""	*(char)
;	O
INPUTBUF	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
;	O
PSTRLEX	array(char)
szLex	*(char)
;	O
int	O
iType	int
;	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
[	O
0	int
]	O
==	O
'_'	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpName	array(char)
,	O
"%s%s"	*(char)
,	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
}	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpName	array(char)
,	O
"%s"	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
MakeStringBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
NULL	O
,	O
&	O
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
)	O
;	O
while	O
(	O
!	O
EOB	O
(	O
&	O
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
)	O
{	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
&	O
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
szLex	*(char)
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
(	O
iType	int
==	O
LX_IDENTIFIER	int
)	O
&&	O
!	O
(	O
IsMathFunc	(*(char))->(int)
(	O
szLex	*(char)
)	O
)	O
&&	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
'_'	O
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpEq	array(char)
,	O
"%s%s%s"	*(char)
,	O
szTmpEq	array(char)
,	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
,	O
szLex	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpEq	array(char)
,	O
"%s%s"	*(char)
,	O
szTmpEq	array(char)
,	O
szLex	*(char)
)	O
;	O
}	O
if	O
(	O
!	O
(	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pTarget	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szTmpName	array(char)
)	O
)	O
)	O
{	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
<	O
ID_DERIV	int
)	O
{	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmpName	array(char)
,	O
szTmpEq	array(char)
,	O
KM_NULL	int
)	O
;	O
printf	(*(char))->(int)
(	O
"local v. %s = %s\n"	*(char)
,	O
szTmpName	array(char)
,	O
szTmpEq	array(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
==	O
ID_INLINE	int
)	O
{	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmpName	array(char)
,	O
szTmpEq	array(char)
,	O
KM_INLINE	int
)	O
;	O
printf	(*(char))->(int)
(	O
"inline   %s\n"	*(char)
,	O
szTmpEq	array(char)
)	O
;	O
}	O
}	O
}	O
return	O
(	O
1	int
)	O
;	O
}	O
int	O
Transcribe1DiffEqn	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
(	O
PFILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
pfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
PVOID	*(void)
pInfo	*(void)
)	O
{	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PFORSV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pInfo	*(void)
;	O
PSTRLEX	array(char)
szTmpName	array(char)
=	O
""	*(char)
;	O
PSTREQN	array(char)
szTmpEq	array(char)
=	O
""	*(char)
;	O
INPUTBUF	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
;	O
PSTRLEX	array(char)
szLex	*(char)
;	O
int	O
iType	int
;	O
if	O
(	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
hType	long
&	O
ID_TYPEMASK	int
)	O
!=	O
ID_DERIV	int
)	O
return	O
(	O
0	int
)	O
;	O
if	O
(	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
[	O
0	int
]	O
==	O
'_'	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpName	array(char)
,	O
"%s%s"	*(char)
,	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
}	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpName	array(char)
,	O
"%s"	*(char)
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
MakeStringBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
NULL	O
,	O
&	O
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szEqn	*(char)
)	O
;	O
while	O
(	O
!	O
EOB	O
(	O
&	O
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
)	O
{	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
&	O
ibDummy	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
szLex	*(char)
,	O
&	O
iType	int
)	O
;	O
if	O
(	O
(	O
iType	int
==	O
LX_IDENTIFIER	int
)	O
&&	O
!	O
(	O
IsMathFunc	(*(char))->(int)
(	O
szLex	*(char)
)	O
)	O
&&	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
'_'	O
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpEq	array(char)
,	O
"%s%s%s"	*(char)
,	O
szTmpEq	array(char)
,	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
,	O
szLex	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szTmpEq	array(char)
,	O
"%s%s"	*(char)
,	O
szTmpEq	array(char)
,	O
szLex	*(char)
)	O
;	O
}	O
if	O
(	O
!	O
(	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pTarget	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szTmpName	array(char)
)	O
)	O
)	O
{	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pV	*(struct(*(struct(*(struct`),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szTmpName	array(char)
,	O
szTmpEq	array(char)
,	O
KM_DXDT	int
)	O
;	O
printf	(*(char))->(int)
(	O
"template ODE term for %s = %s\n"	*(char)
,	O
szTmpName	array(char)
,	O
szTmpEq	array(char)
)	O
;	O
}	O
return	O
(	O
1	int
)	O
;	O
}	O
void	O
ReadCpt	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
BOOL	int
bTell	int
)	O
{	O
PSTRLEX	array(char)
szName	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
iLexType	int
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_GLOBAL	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szName	*(char)
)	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
szName	*(char)
,	O
"compartment"	*(char)
)	O
)	O
return	O
;	O
if	O
(	O
!	O
(	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmLocalCpts	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
)	O
)	O
)	O
{	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetNumber	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
&	O
iLexType	int
)	O
;	O
if	O
(	O
!	O
iLexType	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"0.0"	*(char)
)	O
;	O
AddEquation	(*(*(struct(*(char),*(char),long,*(struct`)))),*(char),*(char),long)->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmLocalCpts	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
,	O
szEqn	*(char)
,	O
ID_COMPARTMENT	int
)	O
;	O
if	O
(	O
bTell	int
)	O
printf	(*(char))->(int)
(	O
"compart. %s = %s\n"	*(char)
,	O
szName	*(char)
,	O
szEqn	*(char)
)	O
;	O
}	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
ReadCpts	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
BOOL	int
bTell	int
)	O
{	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmLocalCpts	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
NULL	O
;	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_CPTLIST	int
,	O
KM_CPT	int
)	O
)	O
ReadCpt	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
bTell	int
)	O
;	O
}	O
void	O
ReadFunction	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTRLEX	array(char)
szRName	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
bInited	*(int)
=	O
FALSE	int
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_DYNAMICS	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_SBML	int
,	O
KM_APPLY	int
)	O
;	O
ReadApply	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(int),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
bInited	*(int)
,	O
szEqn	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"rate for %s = %s\n"	*(char)
,	O
szRName	*(char)
,	O
szEqn	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
,	O
szEqn	*(char)
,	O
KM_DXDT	int
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
ReadFunctions	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
int	O
iSBML_level	int
)	O
{	O
if	O
(	O
iSBML_level	int
==	O
1	int
)	O
printf	(*(char))->(int)
(	O
"mod: ignoring function definitions in level 1...\n"	*(char)
)	O
;	O
else	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_FUNCLIST	int
,	O
KM_FUNC	int
)	O
)	O
ReadFunction	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
ReadDifferentials	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTRLEX	array(char)
szRName	*(char)
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_DYNAMICS	int
;	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_SBML	int
,	O
KM_REACTION	int
)	O
)	O
{	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_REACTION	int
,	O
KM_REACTANTS	int
)	O
;	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_REACTANTS	int
,	O
KM_SPECIES_REF	int
)	O
)	O
{	O
ConstructEqn	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),enum(int,int,int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
,	O
reactant	int
)	O
;	O
}	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_REACTION	int
,	O
KM_PRODUCTS	int
)	O
;	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_PRODUCTS	int
,	O
KM_SPECIES_REF	int
)	O
)	O
{	O
ConstructEqn	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),enum(int,int,int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
,	O
product	int
)	O
;	O
}	O
}	O
}	O
void	O
ReadParameter	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTRLEX	array(char)
szName	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
iLexType	int
;	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
HANDLE	long
hType	long
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_GLOBAL	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szName	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
hType	long
=	O
GetVarType	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(int)
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
)	O
)	O
)	O
{	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetNumber	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
&	O
iLexType	int
)	O
;	O
if	O
(	O
!	O
iLexType	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"0.0"	*(char)
)	O
;	O
}	O
DefineGlobalVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char),*(char),long)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
,	O
szEqn	*(char)
,	O
hType	long
)	O
;	O
printf	(*(char))->(int)
(	O
"param.   %s = %s\n"	*(char)
,	O
szName	*(char)
,	O
szEqn	*(char)
)	O
;	O
}	O
else	O
{	O
printf	(*(char))->(int)
(	O
"***Error: redeclaration of parameter %s\n"	*(char)
,	O
szName	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Exiting...\n\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
ReadParameters	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_PARAMS	int
,	O
KM_PARAM	int
)	O
)	O
ReadParameter	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
ReadReaction_L1	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTRLEX	array(char)
szRName	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_DYNAMICS	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_SBML	int
,	O
KM_LAW	int
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
-	O
1	int
;	O
GetaString	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"reaction %s = %s\n"	*(char)
,	O
szRName	*(char)
,	O
szEqn	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
,	O
szEqn	*(char)
,	O
0	int
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
TranscribeOpSymbol	(*(char))->(void)
(	O
PSTR	*(char)
szOp	*(char)
)	O
{	O
switch	O
(	O
GetSBMLKeywordCode	(*(char))->(int)
(	O
szOp	*(char)
)	O
)	O
{	O
case	O
KM_PLUS	int
:	O
sprintf	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"%s"	*(char)
,	O
"+"	*(char)
)	O
;	O
break	O
;	O
case	O
KM_MINUS	int
:	O
sprintf	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"%s"	*(char)
,	O
"-"	*(char)
)	O
;	O
break	O
;	O
case	O
KM_TIMES	int
:	O
sprintf	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"%s"	*(char)
,	O
"*"	*(char)
)	O
;	O
break	O
;	O
case	O
KM_DIVIDE	int
:	O
sprintf	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"%s"	*(char)
,	O
"/"	*(char)
)	O
;	O
break	O
;	O
case	O
KM_POWER	int
:	O
sprintf	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"%s"	*(char)
,	O
"pow"	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
printf	(*(char))->(int)
(	O
"***Error: unknown mathXML operation '%s' - exiting...\n\n"	*(char)
,	O
szOp	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
}	O
void	O
ReadApply	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(int),*(char))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PINT	*(int)
bInited	*(int)
,	O
PSTR	*(char)
szEqn	*(char)
)	O
{	O
PSTRLEX	array(char)
szOp	*(char)
;	O
PSTRLEX	array(char)
szLex	*(char)
;	O
int	O
iKw	int
;	O
int	O
ithTerm	int
=	O
0	int
;	O
BOOL	int
bDone	int
=	O
FALSE	int
;	O
char	O
c	char
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
if	O
(	O
*	O
bInited	*(int)
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s("	*(char)
,	O
szEqn	*(char)
)	O
;	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"("	*(char)
)	O
;	O
*	O
bInited	*(int)
=	O
TRUE	int
;	O
}	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'<'	O
)	O
;	O
c	char
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
;	O
if	O
(	O
c	char
==	O
'!'	O
)	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'<'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szOp	*(char)
)	O
;	O
TranscribeOpSymbol	(*(char))->(void)
(	O
szOp	*(char)
)	O
;	O
do	O
{	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'<'	O
)	O
;	O
c	char
=	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
;	O
if	O
(	O
c	char
==	O
'/'	O
)	O
{	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
iKw	int
=	O
GetSBMLKeywordCode	(*(char))->(int)
(	O
szLex	*(char)
)	O
;	O
if	O
(	O
(	O
iKw	int
==	O
KM_APPLY	int
)	O
||	O
(	O
iKw	int
==	O
KM_MATH	int
)	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s)"	*(char)
,	O
szEqn	*(char)
)	O
;	O
return	O
;	O
}	O
}	O
else	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
szLex	*(char)
,	O
"apply"	*(char)
)	O
)	O
{	O
ithTerm	int
++	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"pow"	*(char)
)	O
)	O
{	O
if	O
(	O
ithTerm	int
>	O
1	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s)"	*(char)
,	O
szEqn	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s%s(,"	*(char)
,	O
szEqn	*(char)
,	O
szOp	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
ithTerm	int
>	O
1	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s%s"	*(char)
,	O
szEqn	*(char)
,	O
szOp	*(char)
)	O
;	O
}	O
ReadApply	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(int),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
bInited	*(int)
,	O
szEqn	*(char)
)	O
;	O
}	O
else	O
{	O
do	O
{	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
SkipWhitespace	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
if	O
(	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
bTemplateInUse	int
)	O
&&	O
(	O
!	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szLex	*(char)
)	O
)	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
szLex	*(char)
,	O
"%s_%s"	*(char)
,	O
szLex	*(char)
,	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmLocalCpts	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
->	O
szName	*(char)
)	O
;	O
ithTerm	int
++	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
szOp	*(char)
,	O
"pow"	*(char)
)	O
)	O
{	O
if	O
(	O
ithTerm	int
>	O
1	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s%s)"	*(char)
,	O
szEqn	*(char)
,	O
szLex	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s%s(%s,"	*(char)
,	O
szEqn	*(char)
,	O
szOp	*(char)
,	O
szLex	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
ithTerm	int
>	O
1	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s%s%s"	*(char)
,	O
szEqn	*(char)
,	O
szOp	*(char)
,	O
szLex	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s%s"	*(char)
,	O
szEqn	*(char)
,	O
szLex	*(char)
)	O
;	O
}	O
}	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_APPLY	int
,	O
KM_CI	int
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"%s)"	*(char)
,	O
szEqn	*(char)
)	O
;	O
return	O
;	O
}	O
}	O
while	O
(	O
!	O
bDone	int
)	O
;	O
}	O
void	O
ReadReaction_L2	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTRLEX	array(char)
szRName	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
bInited	*(int)
=	O
FALSE	int
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_DYNAMICS	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_SBML	int
,	O
KM_APPLY	int
)	O
;	O
ReadApply	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(int),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
bInited	*(int)
,	O
szEqn	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"reaction %s = %s\n"	*(char)
,	O
szRName	*(char)
,	O
szEqn	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
,	O
szEqn	*(char)
,	O
0	int
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
ReadReactions	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
int	O
iSBML_level	int
)	O
{	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_REACTIONS	int
,	O
KM_REACTION	int
)	O
)	O
{	O
if	O
(	O
iSBML_level	int
==	O
1	int
)	O
ReadReaction_L1	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
else	O
ReadReaction_L2	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
}	O
void	O
ReadRule	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTRLEX	array(char)
szRName	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
bInited	*(int)
=	O
FALSE	int
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_DYNAMICS	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_SBML	int
,	O
KM_APPLY	int
)	O
;	O
ReadApply	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(int),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
bInited	*(int)
,	O
szEqn	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"rate for %s = %s\n"	*(char)
,	O
szRName	*(char)
,	O
szEqn	*(char)
)	O
;	O
DefineVariable	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szRName	*(char)
,	O
szEqn	*(char)
,	O
KM_DXDT	int
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
ReadRules	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
int	O
iSBML_level	int
)	O
{	O
if	O
(	O
iSBML_level	int
==	O
1	int
)	O
printf	(*(char))->(int)
(	O
"mod: ignoring rate rules definitions in level 1...\n"	*(char)
)	O
;	O
else	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_RULESLIST	int
,	O
KM_RATERULE	int
)	O
)	O
ReadRule	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
}	O
int	O
ReadSBMLLevel	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(int)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
iLexType	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetNumber	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
&	O
iLexType	int
)	O
;	O
if	O
(	O
!	O
iLexType	int
)	O
{	O
printf	(*(char))->(int)
(	O
"***Error: cannot read the sbml level - exiting...\n\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
switch	O
(	O
szEqn	*(char)
[	O
0	int
]	O
)	O
{	O
case	O
'1'	O
:	O
printf	(*(char))->(int)
(	O
"sbml level 1\n"	*(char)
)	O
;	O
return	O
(	O
1	int
)	O
;	O
case	O
'2'	O
:	O
printf	(*(char))->(int)
(	O
"sbml level 2\n"	*(char)
)	O
;	O
return	O
(	O
2	int
)	O
;	O
default	O
:	O
printf	(*(char))->(int)
(	O
"***Error: unknown sbml level %s - exiting...\n\n"	*(char)
,	O
szEqn	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
}	O
void	O
Read1Species	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
BOOL	int
bProcessPK_ODEs	int
)	O
{	O
PSTRLEX	array(char)
szName	*(char)
;	O
PSTRLEX	array(char)
szBoundary	array(char)
;	O
PSTRLEX	array(char)
szCpt	array(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
iLexType	int
;	O
BOOL	int
bBoundary	int
;	O
FORSV	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
;	O
HANDLE	long
hType	long
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pTempInfo	*(void)
;	O
PVMMAPSTRCT	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_GLOBAL	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szName	*(char)
)	O
;	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szBoundary	array(char)
)	O
;	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
bBoundary	int
=	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
szBoundary	array(char)
,	O
"true"	*(char)
)	O
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetNumber	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szEqn	*(char)
,	O
&	O
iLexType	int
)	O
;	O
if	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
bTemplateInUse	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"0"	*(char)
)	O
;	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
+	O
1	int
;	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'"'	O
)	O
;	O
GetIdentifier	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szCpt	array(char)
)	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
szCpt	array(char)
,	O
"compartment"	*(char)
)	O
)	O
{	O
if	O
(	O
!	O
(	O
GetVarPTR	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
(	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmCpts	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szCpt	array(char)
)	O
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
"***Error: template did not defined"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
" compartment '%s' - exiting...\n\n"	*(char)
,	O
szCpt	array(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
szName	*(char)
,	O
"%s_%s"	*(char)
,	O
szName	*(char)
,	O
szCpt	array(char)
)	O
;	O
if	O
(	O
bBoundary	int
)	O
{	O
if	O
(	O
!	O
(	O
hType	long
=	O
GetVarType	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(int)
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
)	O
)	O
)	O
{	O
DefineGlobalVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char),*(char),long)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
,	O
szEqn	*(char)
,	O
hType	long
)	O
;	O
printf	(*(char))->(int)
(	O
"param.   %s = %s  (was boundary species)\n"	*(char)
,	O
szName	*(char)
,	O
szEqn	*(char)
)	O
;	O
}	O
}	O
else	O
SetVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),long)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szName	*(char)
,	O
szEqn	*(char)
,	O
ID_STATE	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
bBoundary	int
)	O
{	O
printf	(*(char))->(int)
(	O
"***Error: Species %s is set to boundary;\n"	*(char)
,	O
szName	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"          It has to be inside a meaningful compartment -"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"exiting.\n\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
.	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
;	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
.	O
szName	*(char)
=	O
szName	*(char)
;	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
.	O
szVal	*(char)
=	O
szEqn	*(char)
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Create1Var	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_NULL	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_DYNAMICS	int
;	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
.	O
pTarget	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmDynEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Create1Var	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_LOCALDYN	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmDynEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Transcribe1AlgEqn	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_NULL	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
if	O
(	O
bProcessPK_ODEs	int
)	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmDynEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Transcribe1DiffEqn	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_NULL	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_SCALE	int
;	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
.	O
pTarget	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmScaleEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Create1Var	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_LOCALSCALE	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmScaleEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Transcribe1AlgEqn	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_NULL	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_CALCOUTPUTS	int
;	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
.	O
pTarget	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
=	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmCalcOutEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Create1Var	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_LOCALCALCOUT	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
ForAllVar	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*((*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(*`,*`,long,*`)),*(void))->(int)),long,*(void))->(int)
(	O
NULL	O
,	O
ptempinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmCalcOutEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
&	O
Transcribe1AlgEqn	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(void))->(int)
,	O
ID_NULL	int
,	O
(	O
PVOID	*(void)
)	O
&	O
sVar	struct(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))))
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
iLexType	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
szEqn	*(char)
,	O
"0.0"	*(char)
)	O
;	O
if	O
(	O
bBoundary	int
)	O
{	O
if	O
(	O
!	O
(	O
hType	long
=	O
GetVarType	(*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char))->(int)
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
)	O
)	O
)	O
{	O
DefineGlobalVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(struct(*(char),*(char),long,*(struct(*`,*`,long,*`)))),*(char),*(char),long)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
pvm	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
,	O
szName	*(char)
,	O
szEqn	*(char)
,	O
hType	long
)	O
;	O
printf	(*(char))->(int)
(	O
"param.   %s = %s  (was boundary species)\n"	*(char)
,	O
szName	*(char)
,	O
szEqn	*(char)
)	O
;	O
}	O
}	O
else	O
SetVar	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char),long)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szName	*(char)
,	O
szEqn	*(char)
,	O
ID_STATE	int
)	O
;	O
}	O
while	O
(	O
*	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
++	O
!=	O
'>'	O
)	O
;	O
}	O
void	O
ReadSpecies	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
int	O
iSBML_level	int
,	O
BOOL	int
bProcessPK_ODEs	int
)	O
{	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
KM_SPECIESLIST	int
,	O
KM_SPECIES	int
)	O
)	O
Read1Species	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
bProcessPK_ODEs	int
)	O
;	O
}	O
void	O
ReadFileNames	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(long),*(*(*(char))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
PLONG	*(long)
nFiles	*(long)
,	O
PSTR	*(char)
*	O
*	O
pszNames	*(*(*(char)))
)	O
{	O
long	O
i	long
;	O
int	O
iLexType	int
,	O
iErr	int
=	O
0	int
;	O
char	O
szLex	*(char)
[	O
MAX_FILENAMESIZE	int
]	O
;	O
PSTRLEX	array(char)
szPunct	array(char)
;	O
PSTR	*(char)
pbufStore	*(char)
;	O
pbufStore	*(char)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
;	O
do	O
{	O
GetaString	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
*	O
nFiles	*(long)
=	O
*	O
nFiles	*(long)
+	O
1	int
;	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
&	O
iLexType	int
)	O
;	O
SkipWhitespace	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
!	O
(	O
iLexType	int
&	O
LX_IDENTIFIER	int
)	O
)	O
{	O
if	O
(	O
(	O
szPunct	array(char)
[	O
0	int
]	O
!=	O
','	O
)	O
&&	O
(	O
szPunct	array(char)
[	O
0	int
]	O
!=	O
CH_RBRACE	O
)	O
)	O
iErr	int
=	O
szPunct	array(char)
[	O
1	int
]	O
=	O
CH_RBRACE	O
;	O
}	O
}	O
while	O
(	O
(	O
szPunct	array(char)
[	O
0	int
]	O
!=	O
CH_RBRACE	O
)	O
&&	O
(	O
!	O
iErr	int
)	O
)	O
;	O
if	O
(	O
!	O
(	O
*	O
pszNames	*(*(*(char)))
=	O
(	O
PSTR	*(char)
*	O
)	O
malloc	(long)->(*(void))
(	O
*	O
nFiles	*(long)
*	O
sizeof	O
(	O
PSTR	*(char)
)	O
)	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
NULL	O
,	O
RE_OUTOFMEM	int
|	O
RE_FATAL	int
,	O
"ReadJModels"	*(char)
,	O
NULL	O
)	O
;	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pbufCur	*(char)
=	O
pbufStore	*(char)
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
*	O
nFiles	*(long)
;	O
i	long
++	O
)	O
{	O
GetaString	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szLex	*(char)
)	O
;	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
szPunct	array(char)
,	O
&	O
iLexType	int
)	O
;	O
SkipWhitespace	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(int)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
!	O
(	O
(	O
*	O
pszNames	*(*(*(char)))
)	O
[	O
i	long
]	O
=	O
(	O
PSTR	*(char)
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
szLex	*(char)
)	O
+	O
1	int
)	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
NULL	O
,	O
RE_OUTOFMEM	int
|	O
RE_FATAL	int
,	O
"ReadFileNames"	*(char)
,	O
NULL	O
)	O
;	O
else	O
strcpy	(*(char),*(char))->(*(char))
(	O
(	O
*	O
pszNames	*(*(*(char)))
)	O
[	O
i	long
]	O
,	O
szLex	*(char)
)	O
;	O
}	O
}	O
void	O
ReadSBMLModels	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
long	O
i	long
,	O
nFiles	*(long)
=	O
0	int
;	O
PSTR	*(char)
*	O
pszFileNames	*(*(char))
=	O
NULL	O
;	O
INPUTBUF	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
;	O
int	O
iSBML_level	int
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
ReadFileNames	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(long),*(*(*(char))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
nFiles	*(long)
,	O
&	O
pszFileNames	*(*(char))
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nFiles	*(long)
;	O
i	long
++	O
)	O
{	O
printf	(*(char))->(int)
(	O
"\nreading model %s\n"	*(char)
,	O
pszFileNames	*(*(char))
[	O
i	long
]	O
)	O
;	O
if	O
(	O
!	O
InitBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char))->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
-	O
1	int
,	O
pszFileNames	*(*(char))
[	O
i	long
]	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_INIT	int
|	O
RE_FATAL	int
,	O
"ReadJModels"	*(char)
,	O
NULL	O
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pInfo	*(void)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pTempInfo	*(void)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pTempInfo	*(void)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_SBML	int
)	O
)	O
iSBML_level	int
=	O
ReadSBMLLevel	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
;	O
if	O
(	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
bTemplateInUse	int
)	O
&&	O
(	O
iSBML_level	int
<	O
2	int
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
"***Error: use of a PK template requires "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"SBML level 2 - exiting.\n\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
if	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
bTemplateInUse	int
)	O
{	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_CPTLIST	int
)	O
)	O
ReadCpts	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
TRUE	int
)	O
;	O
}	O
else	O
{	O
printf	(*(char))->(int)
(	O
"no PK template given: ignoring SBML compartments\n"	*(char)
)	O
;	O
}	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_FUNCLIST	int
)	O
)	O
ReadFunctions	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
iSBML_level	int
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
while	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_PARAMS	int
)	O
)	O
ReadParameters	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_SPECIESLIST	int
)	O
)	O
ReadSpecies	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
iSBML_level	int
,	O
FALSE	int
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_RULESLIST	int
)	O
)	O
ReadRules	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
iSBML_level	int
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_REACTIONS	int
)	O
)	O
ReadReactions	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
iSBML_level	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nFiles	*(long)
;	O
i	long
++	O
)	O
{	O
if	O
(	O
!	O
InitBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char))->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
-	O
1	int
,	O
pszFileNames	*(*(char))
[	O
i	long
]	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_INIT	int
|	O
RE_FATAL	int
,	O
"ReadJModels"	*(char)
,	O
NULL	O
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pInfo	*(void)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pTempInfo	*(void)
=	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pTempInfo	*(void)
;	O
if	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
bTemplateInUse	int
)	O
{	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_CPTLIST	int
)	O
)	O
ReadCpts	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
FALSE	int
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"\nmod: reading differentials in model %s\n"	*(char)
,	O
pszFileNames	*(*(char))
[	O
i	long
]	O
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
=	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufOrg	*(char)
;	O
if	O
(	O
GetSBMLLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
KM_SBML	int
,	O
KM_SPECIESLIST	int
)	O
)	O
ReadSpecies	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,int)->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
iSBML_level	int
,	O
TRUE	int
)	O
;	O
ReadDifferentials	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nFiles	*(long)
;	O
i	long
++	O
)	O
free	(*(void))->(void)
(	O
pszFileNames	*(*(char))
[	O
i	long
]	O
)	O
;	O
free	(*(void))->(void)
(	O
pszFileNames	*(*(char))
)	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_END	int
;	O
}	O
void	O
ReadPKTemplate	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
PINPUTBUF	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
)	O
{	O
INPUTBUF	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
;	O
PSTRLEX	array(char)
szLex	*(char)
;	O
PSTREQN	array(char)
szEqn	*(char)
;	O
int	O
iLexType	int
;	O
long	O
nFiles	*(long)
=	O
0	int
;	O
PSTR	*(char)
*	O
pszFileNames	*(*(char))
;	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pTempInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_GLOBAL	int
;	O
ReadFileNames	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(long),*(*(*(char))))->(void)
(	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
,	O
&	O
nFiles	*(long)
,	O
&	O
pszFileNames	*(*(char))
)	O
;	O
if	O
(	O
nFiles	*(long)
>	O
1	int
)	O
printf	(*(char))->(int)
(	O
"mod: cannot use more that one template - using only the 1st\n\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
pszFileNames	*(*(char))
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
InitBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long,*(char))->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
BUFFER_SIZE	int
,	O
pszFileNames	*(*(char))
[	O
0	int
]	O
)	O
)	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_INIT	int
|	O
RE_FATAL	int
,	O
"ReadModel"	*(char)
,	O
NULL	O
)	O
;	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pInfo	*(void)
=	O
(	O
PVOID	*(void)
)	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
;	O
do	O
{	O
NextLex	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),array(char),*(int))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
szLex	*(char)
,	O
&	O
iLexType	int
)	O
;	O
switch	O
(	O
iLexType	int
)	O
{	O
case	O
LX_NULL	int
:	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_END	int
;	O
break	O
;	O
case	O
LX_IDENTIFIER	int
:	O
ProcessWord	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),*(char),*(char))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
szLex	*(char)
,	O
szEqn	*(char)
)	O
;	O
break	O
;	O
case	O
LX_PUNCT	int
:	O
case	O
LX_EQNPUNCT	int
:	O
if	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
CH_STMTTERM	O
)	O
{	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
CH_RBRACE	O
&&	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
&	O
(	O
CN_DYNAMICS	int
|	O
CN_JACOB	int
|	O
CN_SCALE	int
)	O
)	O
)	O
{	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_GLOBAL	int
;	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
szLex	*(char)
[	O
0	int
]	O
==	O
CH_COMMENT	O
)	O
{	O
SkipComment	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
)	O
;	O
break	O
;	O
}	O
}	O
}	O
default	O
:	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_UNEXPECTED	int
,	O
szLex	*(char)
,	O
"* Ignoring"	*(char)
)	O
;	O
break	O
;	O
case	O
LX_INTEGER	int
:	O
case	O
LX_FLOAT	int
:	O
ReportError	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),int,*(char),*(char))->(void)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
RE_UNEXPNUMBER	int
,	O
szLex	*(char)
,	O
"* Ignoring"	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
while	O
(	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
!=	O
CN_END	int
&&	O
(	O
*	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pbufCur	*(char)
||	O
FillBuffer	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))),long)->(int)
(	O
&	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
,	O
BUFFER_SIZE	int
)	O
!=	O
EOF	O
)	O
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ibInLocal	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void))
.	O
pfileIn	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
ReversePointers	(*(*(struct(*(char),*(char),long,*(struct`)))))->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmGloVars	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
)	O
;	O
ReversePointers	(*(*(struct(*(char),*(char),long,*(struct`)))))->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmDynEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
)	O
;	O
ReversePointers	(*(*(struct(*(char),*(char),long,*(struct`)))))->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmScaleEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
)	O
;	O
ReversePointers	(*(*(struct(*(char),*(char),long,*(struct`)))))->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmCalcOutEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
)	O
;	O
ReversePointers	(*(*(struct(*(char),*(char),long,*(struct`)))))->(void)
(	O
&	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
pvmJacobEqns	*(struct(*(char),*(char),long,*(struct(*(char),*(char),long,*(struct`)))))
)	O
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
=	O
(	O
PINPUTINFO	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
)	O
pibIn	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(char),long,*(char),int,int,int,*(void),*(void)))
->	O
pInfo	*(void)
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
wContext	int
=	O
CN_TEMPLATE_DEFINED	int
;	O
pinfo	*(struct(int,int,int,int,*(char),*(char),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`))),*(struct(*(char),*(char),long,*(struct`)))))
->	O
bTemplateInUse	int
=	O
TRUE	int
;	O
}	O
