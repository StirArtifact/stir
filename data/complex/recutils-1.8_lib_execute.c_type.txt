int	O
execute	(*(char),*(char),*(*(char)),bool,bool,bool,bool,bool,bool,*(int))->(int)
(	O
const	O
char	O
*	O
progname	*(char)
,	O
const	O
char	O
*	O
prog_path	*(char)
,	O
char	O
*	O
*	O
prog_argv	*(*(char))
,	O
bool	bool
ignore_sigpipe	bool
,	O
bool	bool
null_stdin	bool
,	O
bool	bool
null_stdout	bool
,	O
bool	bool
null_stderr	bool
,	O
bool	bool
slave_process	bool
,	O
bool	bool
exit_on_error	bool
,	O
int	O
*	O
termsigp	*(int)
)	O
{	O
sigset_t	struct(array(long))
blocked_signals	struct(array(long))
;	O
posix_spawn_file_actions_t	struct(int,int,*(struct),array(int))
actions	struct(int,int,*(struct),array(int))
;	O
bool	bool
actions_allocated	bool
;	O
posix_spawnattr_t	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
;	O
bool	bool
attrs_allocated	bool
;	O
int	O
err	long
;	O
pid_t	int
child	int
;	O
if	O
(	O
slave_process	bool
)	O
{	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_SETMASK	int
,	O
NULL	O
,	O
&	O
blocked_signals	struct(array(long))
)	O
;	O
block_fatal_signals	()->(void)
(	O
)	O
;	O
}	O
actions_allocated	bool
=	O
false	int
;	O
attrs_allocated	bool
=	O
false	int
;	O
if	O
(	O
(	O
err	long
=	O
posix_spawn_file_actions_init	(*(struct(int,int,*(struct),array(int))))->(int)
(	O
&	O
actions	struct(int,int,*(struct),array(int))
)	O
)	O
!=	O
0	int
||	O
(	O
actions_allocated	bool
=	O
true	int
,	O
(	O
null_stdin	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addopen	(*(struct(int,int,*(struct),array(int))),int,*(char),int,int)->(int)
(	O
&	O
actions	struct(int,int,*(struct),array(int))
,	O
STDIN_FILENO	int
,	O
"/dev/null"	*(char)
,	O
O_RDONLY	int
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
null_stdout	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addopen	(*(struct(int,int,*(struct),array(int))),int,*(char),int,int)->(int)
(	O
&	O
actions	struct(int,int,*(struct),array(int))
,	O
STDOUT_FILENO	int
,	O
"/dev/null"	*(char)
,	O
O_RDWR	int
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
null_stderr	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addopen	(*(struct(int,int,*(struct),array(int))),int,*(char),int,int)->(int)
(	O
&	O
actions	struct(int,int,*(struct),array(int))
,	O
STDERR_FILENO	int
,	O
"/dev/null"	*(char)
,	O
O_RDWR	int
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
slave_process	bool
&&	O
(	O
(	O
err	long
=	O
posix_spawnattr_init	(*(struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))))->(int)
(	O
&	O
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
)	O
)	O
!=	O
0	int
||	O
(	O
attrs_allocated	bool
=	O
true	int
,	O
(	O
err	long
=	O
posix_spawnattr_setsigmask	(*(struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))),*(struct(array(long))))->(int)
(	O
&	O
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
,	O
&	O
blocked_signals	struct(array(long))
)	O
)	O
!=	O
0	int
||	O
(	O
err	long
=	O
posix_spawnattr_setflags	(*(struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))),short)->(int)
(	O
&	O
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
,	O
POSIX_SPAWN_SETSIGMASK	int
)	O
)	O
!=	O
0	int
)	O
)	O
)	O
||	O
(	O
err	long
=	O
posix_spawnp	(*(int),*(char),*(struct(int,int,*(struct),array(int))),*(struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))),array(*(char)),array(*(char)))->(int)
(	O
&	O
child	int
,	O
prog_path	*(char)
,	O
&	O
actions	struct(int,int,*(struct),array(int))
,	O
attrs_allocated	bool
?	O
&	O
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
:	O
NULL	O
,	O
prog_argv	*(*(char))
,	O
environ	*(*(char))
)	O
)	O
!=	O
0	int
)	O
)	O
{	O
if	O
(	O
actions_allocated	bool
)	O
posix_spawn_file_actions_destroy	(*(struct(int,int,*(struct),array(int))))->(int)
(	O
&	O
actions	struct(int,int,*(struct),array(int))
)	O
;	O
if	O
(	O
attrs_allocated	bool
)	O
posix_spawnattr_destroy	(*(struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))))->(int)
(	O
&	O
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
)	O
;	O
if	O
(	O
slave_process	bool
)	O
unblock_fatal_signals	()->(void)
(	O
)	O
;	O
if	O
(	O
termsigp	*(int)
!=	O
NULL	O
)	O
*	O
termsigp	*(int)
=	O
0	int
;	O
if	O
(	O
exit_on_error	bool
||	O
!	O
null_stderr	bool
)	O
error	(int,int,*(char))->(void)
(	O
exit_on_error	bool
?	O
EXIT_FAILURE	int
:	O
0	int
,	O
err	long
,	O
_	O
(	O
"%s subprocess failed"	*(char)
)	O
,	O
progname	*(char)
)	O
;	O
return	O
127	int
;	O
}	O
posix_spawn_file_actions_destroy	(*(struct(int,int,*(struct),array(int))))->(int)
(	O
&	O
actions	struct(int,int,*(struct),array(int))
)	O
;	O
if	O
(	O
attrs_allocated	bool
)	O
posix_spawnattr_destroy	(*(struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))))->(int)
(	O
&	O
attrs	struct(short,int,struct(array(long)),struct(array(long)),struct(int),int,array(int))
)	O
;	O
if	O
(	O
slave_process	bool
)	O
{	O
register_slave_subprocess	(int)->(void)
(	O
child	int
)	O
;	O
unblock_fatal_signals	()->(void)
(	O
)	O
;	O
}	O
return	O
wait_subprocess	(int,*(char),bool,bool,bool,bool,*(int))->(int)
(	O
child	int
,	O
progname	*(char)
,	O
ignore_sigpipe	bool
,	O
null_stderr	bool
,	O
slave_process	bool
,	O
exit_on_error	bool
,	O
termsigp	*(int)
)	O
;	O
}	O
