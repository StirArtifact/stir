void	O
die	(*(char))->(void)
(	O
const	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
format	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
void	O
*	O
xalloc	(long)->(*(void))
(	O
size_t	long
size	long
)	O
{	O
void	O
*	O
p	*(void)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
if	O
(	O
size	long
&&	O
!	O
p	*(void)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Virtual memory exhausted.\n"	*(char)
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
return	O
p	*(void)
;	O
}	O
static	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
tstring_first	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
NULL	O
;	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
tstring_alloc	(long)->(*(struct(*(struct(*`,long,array(char))),long,array(char))))
(	O
size_t	long
length	long
)	O
{	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
xalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
)	O
+	O
length	long
)	O
;	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
=	O
length	long
;	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
next	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
tstring_first	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
[	O
length	long
]	O
=	O
'\0'	O
;	O
tstring_first	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
return	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
}	O
void	O
tstring_clear	()->(void)
(	O
void	O
)	O
{	O
while	O
(	O
tstring_first	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
tstring_first	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
tstring_first	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
next	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
free	(*(void))->(void)
(	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
}	O
}	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
tstring_data	(long,*(char))->(*(struct(*(struct(*`,long,array(char))),long,array(char))))
(	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	array(char)
)	O
{	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
tstring_alloc	(long)->(*(struct(*(struct(*`,long,array(char))),long,array(char))))
(	O
length	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
data	array(char)
,	O
length	long
)	O
;	O
return	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
}	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
tstring_hex	(*(char))->(*(struct(*(struct(*`,long,array(char))),long,array(char))))
(	O
const	O
char	O
*	O
hex	*(char)
)	O
{	O
struct	O
base16_decode_ctx	struct(char,char)
ctx	*(void)
;	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
size_t	long
length	long
=	O
strlen	(*(char))->(long)
(	O
hex	*(char)
)	O
;	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
tstring_alloc	(long)->(*(struct(*(struct(*`,long,array(char))),long,array(char))))
(	O
BASE16_DECODE_LENGTH	O
(	O
length	long
)	O
)	O
;	O
base16_decode_init	O
(	O
&	O
ctx	*(void)
)	O
;	O
ASSERT	O
(	O
base16_decode_update	O
(	O
&	O
ctx	*(void)
,	O
&	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
length	long
,	O
hex	*(char)
)	O
)	O
;	O
ASSERT	O
(	O
base16_decode_final	O
(	O
&	O
ctx	*(void)
)	O
)	O
;	O
return	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
;	O
}	O
void	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
print_hex	(long,*(char))->(void)
(	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
s	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
}	O
void	O
print_hex	(long,*(char))->(void)
(	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	array(char)
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
length	long
;	O
i	long
++	O
)	O
{	O
switch	O
(	O
i	long
%	O
16	int
)	O
{	O
default	O
:	O
break	O
;	O
case	O
0	int
:	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
break	O
;	O
case	O
8	int
:	O
printf	(*(char))->(int)
(	O
" "	*(char)
)	O
;	O
break	O
;	O
}	O
printf	(*(char))->(int)
(	O
"%02x"	*(char)
,	O
data	array(char)
[	O
i	long
]	O
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
int	O
verbose	int
=	O
0	int
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
if	O
(	O
argc	int
>	O
1	int
)	O
{	O
if	O
(	O
argc	int
==	O
2	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"-v"	*(char)
)	O
)	O
verbose	int
=	O
1	int
;	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Invalid argument `%s', only accepted option is `-v'.\n"	*(char)
,	O
argv	*(*(char))
[	O
1	int
]	O
)	O
;	O
return	O
1	int
;	O
}	O
}	O
test_main	()->(void)
(	O
)	O
;	O
tstring_clear	()->(void)
(	O
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
void	O
test_cipher	(*(struct(*(char),int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_cipher	struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)))
*	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
key	*(char)
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
size_t	long
length	long
;	O
ASSERT	O
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
length	long
=	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
;	O
ASSERT	O
(	O
key	*(char)
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
key_size	int
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
(	O
ctx	*(void)
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Encrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_decrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
decrypt	*((*(void),long,*(char),*(char))->(void))
(	O
ctx	*(void)
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
}	O
void	O
test_cipher_cbc	(*(struct(*(char),int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_cipher	struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)))
*	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
key	*(char)
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
;	O
uint8_t	char
*	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
size_t	long
length	long
;	O
ASSERT	O
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
length	long
=	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
;	O
ASSERT	O
(	O
key	*(char)
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
key_size	int
)	O
;	O
ASSERT	O
(	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cbc_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CBC encrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_decrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cbc_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
decrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CBC decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
free	(*(void))->(void)
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
}	O
void	O
test_cipher_cfb	(*(struct(*(char),int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_cipher	struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)))
*	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
key	*(char)
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
,	O
*	O
data2	*(char)
;	O
uint8_t	char
*	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
size_t	long
length	long
;	O
ASSERT	O
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
length	long
=	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
;	O
ASSERT	O
(	O
key	*(char)
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
key_size	int
)	O
;	O
ASSERT	O
(	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
data2	*(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB encrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data2	*(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data2	*(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data2	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
length	long
)	O
;	O
cfb_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB inplace encrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB inplace decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
length	long
-=	O
1	int
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB encrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data2	*(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data2	*(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB decrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data2	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
length	long
)	O
;	O
cfb_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB inplace encrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB inplace decrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
free	(*(void))->(void)
(	O
data2	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
}	O
void	O
test_cipher_cfb8	(*(struct(*(char),int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_cipher	struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)))
*	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
key	*(char)
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
,	O
*	O
data2	*(char)
;	O
uint8_t	char
*	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
size_t	long
length	long
;	O
ASSERT	O
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
length	long
=	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
;	O
ASSERT	O
(	O
key	*(char)
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
key_size	int
)	O
;	O
ASSERT	O
(	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
data2	*(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb8_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 encrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb8_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data2	*(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data2	*(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data2	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
length	long
)	O
;	O
cfb8_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 inplace encrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb8_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 inplace decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
length	long
-=	O
1	int
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb8_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 encrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb8_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data2	*(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data2	*(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 decrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data2	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
length	long
)	O
;	O
cfb8_encrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 inplace encrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
iiv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
cfb8_decrypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CFB8 inplace decrypt failed:\nInput:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
free	(*(void))->(void)
(	O
data2	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
iv	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
}	O
void	O
test_cipher_ctr	(*(struct(*(char),int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_cipher	struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)))
*	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
key	*(char)
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ictr	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
;	O
uint8_t	char
*	O
ctr	*(char)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
uint8_t	char
*	O
octr	*(char)
=	O
xalloc	(long)->(*(void))
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
size_t	long
length	long
,	O
nblocks	long
;	O
unsigned	O
low	int
;	O
size_t	long
i	long
;	O
ASSERT	O
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
length	long
=	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
;	O
ASSERT	O
(	O
key	*(char)
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
key_size	int
)	O
;	O
ASSERT	O
(	O
ictr	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
nblocks	long
=	O
(	O
length	long
+	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
-	O
1	int
)	O
/	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
;	O
ASSERT	O
(	O
nblocks	long
<	O
0x100	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
octr	*(char)
,	O
ictr	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
-	O
1	int
)	O
;	O
low	int
=	O
ictr	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
[	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
-	O
1	int
]	O
+	O
nblocks	long
;	O
octr	*(char)
[	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
-	O
1	int
]	O
=	O
low	int
;	O
if	O
(	O
low	int
>=	O
0x100	int
)	O
INCREMENT	O
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
-	O
1	int
,	O
octr	*(char)
)	O
;	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
length	long
;	O
i	long
++	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctr	*(char)
,	O
ictr	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
data	array(char)
,	O
17	int
,	O
length	long
)	O
;	O
ctr_crypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
ctr	*(char)
,	O
i	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
i	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
||	O
(	O
i	long
<	O
length	long
&&	O
data	array(char)
[	O
i	long
]	O
!=	O
17	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CTR encrypt failed (length %d of %d):\nInput:"	*(char)
,	O
(	O
int	O
)	O
i	long
,	O
(	O
int	O
)	O
length	long
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
}	O
ASSERT	O
(	O
MEMEQ	O
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
ctr	*(char)
,	O
octr	*(char)
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctr	*(char)
,	O
ictr	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
)	O
;	O
ctr_crypt	O
(	O
ctx	*(void)
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
,	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
ctr	*(char)
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
if	O
(	O
!	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"CTR decrypt failed:\nInput:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nOutput: "	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
length	long
,	O
data	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:"	*(char)
)	O
;	O
tstring_print_hex	(*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
FAIL	O
(	O
)	O
;	O
}	O
ASSERT	O
(	O
MEMEQ	O
(	O
cipher	*(struct(*(char),int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void))))
->	O
block_size	int
,	O
ctr	*(char)
,	O
octr	*(char)
)	O
)	O
;	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
free	(*(void))->(void)
(	O
octr	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
ctr	*(char)
)	O
;	O
}	O
void	O
test_aead	(*(struct(*(char),int,int,int,int,int,*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`,*`)->(void)),*((*`,long,*`)->(void)))),*((*(void),long,*(char))->(void)),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_aead	struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void)))
*	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
,	O
nettle_hash_update_func	(*(void),long,*(char))->(void)
*	O
set_nonce	*((*(void),*(char))->(void))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
key	*(char)
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
digest	*((*(void),long,*(char))->(void))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
;	O
uint8_t	char
*	O
buffer	*(char)
=	O
xalloc	(long)->(*(void))
(	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
size_t	long
length	long
;	O
ASSERT	O
(	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
==	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
length	long
=	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
;	O
ASSERT	O
(	O
key	*(char)
->	O
length	long
==	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
key_size	int
)	O
;	O
ASSERT	O
(	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
<=	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
buffer	*(char)
,	O
0	int
,	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
set_encrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
if	O
(	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
!=	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
nonce_size	int
)	O
{	O
ASSERT	O
(	O
set_nonce	*((*(void),*(char))->(void))
)	O
;	O
set_nonce	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
}	O
else	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
set_nonce	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
length	long
)	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
encrypt	*((*(void),long,*(char),*(char))->(void))
(	O
ctx	*(void)
,	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
,	O
buffer	*(char)
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
ciphertext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
,	O
buffer	*(char)
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
buffer	*(char)
,	O
0	int
,	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
set_decrypt_key	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
key	*(char)
->	O
data	array(char)
)	O
;	O
if	O
(	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
!=	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
nonce_size	int
)	O
{	O
ASSERT	O
(	O
set_nonce	*((*(void),*(char))->(void))
)	O
;	O
set_nonce	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
}	O
else	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
set_nonce	*((*(void),*(char))->(void))
(	O
ctx	*(void)
,	O
nonce	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
authtext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
if	O
(	O
length	long
)	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
decrypt	*((*(void),long,*(char),*(char))->(void))
(	O
ctx	*(void)
,	O
length	long
,	O
data	array(char)
,	O
data	array(char)
)	O
;	O
aead	*(struct(*(char),int,int,int,int,int,*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),*(char))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char),*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
,	O
buffer	*(char)
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
length	long
,	O
data	array(char)
,	O
cleartext	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
,	O
buffer	*(char)
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
)	O
)	O
;	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
free	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
}	O
void	O
test_hash	(*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),*(struct(*(struct(*`,long,array(char))),long,array(char))),*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_hash	struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))
*	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
digest	*((*(void),long,*(char))->(void))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
buffer	*(char)
=	O
xalloc	(long)->(*(void))
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
uint8_t	char
*	O
input	*(char)
;	O
unsigned	O
offset	int
;	O
ASSERT	O
(	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
==	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
init	*((*(void))->(void))
(	O
ctx	*(void)
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
buffer	*(char)
)	O
;	O
if	O
(	O
MEMEQ	O
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
,	O
buffer	*(char)
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nGot:\n"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
buffer	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:\n"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
buffer	*(char)
,	O
0	int
,	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
-	O
1	int
,	O
buffer	*(char)
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
-	O
1	int
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
,	O
buffer	*(char)
)	O
)	O
;	O
ASSERT	O
(	O
buffer	*(char)
[	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
-	O
1	int
]	O
==	O
0	int
)	O
;	O
input	*(char)
=	O
xalloc	(long)->(*(void))
(	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
+	O
16	int
)	O
;	O
for	O
(	O
offset	int
=	O
0	int
;	O
offset	int
<	O
16	int
;	O
offset	int
++	O
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
input	*(char)
,	O
0	int
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
+	O
16	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
input	*(char)
+	O
offset	int
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
data	array(char)
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
msg	*(struct(*(struct(*(struct`),long,array(char))),long,array(char)))
->	O
length	long
,	O
input	*(char)
+	O
offset	int
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
buffer	*(char)
)	O
;	O
if	O
(	O
MEMEQ	O
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
,	O
buffer	*(char)
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"hash input address: %p\nGot:\n"	*(char)
,	O
input	*(char)
+	O
offset	int
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
buffer	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nExpected:\n"	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
input	*(char)
)	O
;	O
}	O
void	O
test_hash_large	(*(struct(*(char),int,int,int,*((*`)->(void)),*((*`,long,*`)->(void)),*((*`,long,*`)->(void)))),long,long,char,*(struct(*(struct(*`,long,array(char))),long,array(char))))->(void)
(	O
const	O
struct	O
nettle_hash	struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))
*	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
,	O
size_t	long
count	long
,	O
size_t	long
length	long
,	O
uint8_t	char
c	int
,	O
const	O
struct	O
tstring	struct(*(struct(*(struct(*(struct`),long,array(char))),long,array(char))),long,array(char))
*	O
digest	*((*(void),long,*(char))->(void))
)	O
{	O
void	O
*	O
ctx	*(void)
=	O
xalloc	(long)->(*(void))
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
context_size	int
)	O
;	O
uint8_t	char
*	O
buffer	*(char)
=	O
xalloc	(long)->(*(void))
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
uint8_t	char
*	O
data	array(char)
=	O
xalloc	(long)->(*(void))
(	O
length	long
)	O
;	O
size_t	long
i	long
;	O
ASSERT	O
(	O
digest	*((*(void),long,*(char))->(void))
->	O
length	long
==	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
data	array(char)
,	O
c	int
,	O
length	long
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
init	*((*(void))->(void))
(	O
ctx	*(void)
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
count	long
;	O
i	long
++	O
)	O
{	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
update	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
length	long
,	O
data	array(char)
)	O
;	O
if	O
(	O
i	long
%	O
(	O
count	long
/	O
50	int
)	O
==	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"."	*(char)
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest	*((*(void),long,*(char))->(void))
(	O
ctx	*(void)
,	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
buffer	*(char)
)	O
;	O
print_hex	(long,*(char))->(void)
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
buffer	*(char)
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
hash	*(struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void))))
->	O
digest_size	int
,	O
digest	*((*(void),long,*(char))->(void))
->	O
data	array(char)
,	O
buffer	*(char)
)	O
)	O
;	O
free	(*(void))->(void)
(	O
ctx	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
data	array(char)
)	O
;	O
}	O
void	O
test_armor	(*(struct(*(char),int,int,int,*((*`)->(void)),*((long)->(long)),*((*`,*`,long,*`)->(long)),*((*`,*`)->(long)),*((*`)->(void)),*((long)->(long)),*((*`,*`,*`,long,*`)->(int)),*((*`)->(int)))),long,*(char),*(char))->(void)
(	O
const	O
struct	O
nettle_armor	struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int)))
*	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
,	O
size_t	long
data_length	long
,	O
const	O
uint8_t	char
*	O
data	array(char)
,	O
const	O
char	O
*	O
ascii	*(char)
)	O
{	O
size_t	long
ascii_length	long
=	O
strlen	(*(char))->(long)
(	O
ascii	*(char)
)	O
;	O
char	O
*	O
buffer	*(char)
=	O
xalloc	(long)->(*(void))
(	O
1	int
+	O
ascii_length	long
)	O
;	O
uint8_t	char
*	O
check	*(char)
=	O
xalloc	(long)->(*(void))
(	O
1	int
+	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_length	*((long)->(long))
(	O
ascii_length	long
)	O
)	O
;	O
void	O
*	O
encode	*(void)
=	O
xalloc	(long)->(*(void))
(	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_context_size	int
)	O
;	O
void	O
*	O
decode	*(void)
=	O
xalloc	(long)->(*(void))
(	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_context_size	int
)	O
;	O
size_t	long
done	long
;	O
ASSERT	O
(	O
ascii_length	long
<=	O
(	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_length	*((long)->(long))
(	O
data_length	long
)	O
+	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_final_length	int
)	O
)	O
;	O
ASSERT	O
(	O
data_length	long
<=	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_length	*((long)->(long))
(	O
ascii_length	long
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
buffer	*(char)
,	O
0x33	int
,	O
1	int
+	O
ascii_length	long
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
check	*(char)
,	O
0x55	int
,	O
1	int
+	O
data_length	long
)	O
;	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_init	*((*(void))->(void))
(	O
encode	*(void)
)	O
;	O
done	long
=	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_update	*((*(void),*(char),long,*(char))->(long))
(	O
encode	*(void)
,	O
buffer	*(char)
,	O
data_length	long
,	O
data	array(char)
)	O
;	O
done	long
+=	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
encode_final	*((*(void),*(char))->(long))
(	O
encode	*(void)
,	O
buffer	*(char)
+	O
done	long
)	O
;	O
ASSERT	O
(	O
done	long
==	O
ascii_length	long
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
ascii_length	long
,	O
buffer	*(char)
,	O
ascii	*(char)
)	O
)	O
;	O
ASSERT	O
(	O
0x33	int
==	O
buffer	*(char)
[	O
strlen	(*(char))->(long)
(	O
ascii	*(char)
)	O
]	O
)	O
;	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_init	*((*(void))->(void))
(	O
decode	*(void)
)	O
;	O
done	long
=	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_length	*((long)->(long))
(	O
ascii_length	long
)	O
;	O
ASSERT	O
(	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_update	*((*(void),*(long),*(char),long,*(char))->(int))
(	O
decode	*(void)
,	O
&	O
done	long
,	O
check	*(char)
,	O
ascii_length	long
,	O
buffer	*(char)
)	O
)	O
;	O
ASSERT	O
(	O
done	long
==	O
data_length	long
)	O
;	O
ASSERT	O
(	O
armor	*(struct(*(char),int,int,int,*((*(void))->(void)),*((long)->(long)),*((*(void),*(char),long,*(char))->(long)),*((*(void),*(char))->(long)),*((*(void))->(void)),*((long)->(long)),*((*(void),*(long),*(char),long,*(char))->(int)),*((*(void))->(int))))
->	O
decode_final	*((*(void))->(int))
(	O
decode	*(void)
)	O
)	O
;	O
ASSERT	O
(	O
MEMEQ	O
(	O
data_length	long
,	O
check	*(char)
,	O
data	array(char)
)	O
)	O
;	O
ASSERT	O
(	O
0x55	int
==	O
check	*(char)
[	O
data_length	long
]	O
)	O
;	O
free	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
check	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
encode	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
decode	*(void)
)	O
;	O
}	O
