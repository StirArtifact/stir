void	O
*	O
__gmp_tmp_reentrant_alloc	(*(*(struct(*(struct`),long))),long)->(*(void))
(	O
struct	O
tmp_reentrant_t	struct(*(struct(*(struct(*(struct`),long)),long)),long)
*	O
*	O
markp	*(*(struct(*(struct(*`,long)),long)))
,	O
size_t	long
size	long
)	O
{	O
char	O
*	O
p	*(char)
;	O
size_t	long
total_size	long
;	O
total_size	long
=	O
size	long
+	O
HSIZ	O
;	O
p	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
*	O
__gmp_allocate_func	*((long)->(*(void)))
)	O
(	O
total_size	long
)	O
;	O
P	O
->	O
size	long
=	O
total_size	long
;	O
P	O
->	O
next	*(struct(*(struct(*(struct`),long)),long))
=	O
*	O
markp	*(*(struct(*(struct(*`,long)),long)))
;	O
*	O
markp	*(*(struct(*(struct(*`,long)),long)))
=	O
P	O
;	O
return	O
p	*(char)
+	O
HSIZ	O
;	O
}	O
void	O
__gmp_tmp_reentrant_free	(*(struct(*(struct(*`,long)),long)))->(void)
(	O
struct	O
tmp_reentrant_t	struct(*(struct(*(struct(*(struct`),long)),long)),long)
*	O
mark	*(struct(*(struct(*(struct`),long)),long))
)	O
{	O
struct	O
tmp_reentrant_t	struct(*(struct(*(struct(*(struct`),long)),long)),long)
*	O
next	*(struct(*(struct(*(struct`),long)),long))
;	O
while	O
(	O
mark	*(struct(*(struct(*(struct`),long)),long))
!=	O
NULL	O
)	O
{	O
next	*(struct(*(struct(*(struct`),long)),long))
=	O
mark	*(struct(*(struct(*(struct`),long)),long))
->	O
next	*(struct(*(struct(*(struct`),long)),long))
;	O
(	O
*	O
__gmp_free_func	*((*(void),long)->(void))
)	O
(	O
(	O
char	O
*	O
)	O
mark	*(struct(*(struct(*(struct`),long)),long))
,	O
mark	*(struct(*(struct(*(struct`),long)),long))
->	O
size	long
)	O
;	O
mark	*(struct(*(struct(*(struct`),long)),long))
=	O
next	*(struct(*(struct(*(struct`),long)),long))
;	O
}	O
}	O
