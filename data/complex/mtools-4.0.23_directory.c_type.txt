struct	O
directory	struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
dir_read	(*(struct(*(struct(*`,int,*`,*`)),int,struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(int),int,int)),*(int))->(*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))
(	O
direntry_t	struct(*(struct(*(struct(*((*`,*`,long,long)->(int)),*((*`,*`,long,long)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`,int,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(*`)),*((*`)->(int)))),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),int,struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(int),int,int)
*	O
entry	int
,	O
int	O
*	O
error	*(int)
)	O
{	O
int	O
n	*(struct)
;	O
*	O
error	*(int)
=	O
0	int
;	O
if	O
(	O
(	O
n	*(struct)
=	O
force_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),long,long)->(int)
(	O
entry	int
->	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
(	O
char	O
*	O
)	O
(	O
&	O
entry	int
->	O
dir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
,	O
(	O
mt_off_t	long
)	O
entry	int
->	O
entry	int
*	O
MDIR_SIZE	int
,	O
MDIR_SIZE	int
)	O
)	O
!=	O
MDIR_SIZE	int
)	O
{	O
if	O
(	O
n	*(struct)
<	O
0	int
)	O
{	O
*	O
error	*(int)
=	O
-	O
1	int
;	O
}	O
return	O
NULL	O
;	O
}	O
return	O
&	O
entry	int
->	O
dir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
;	O
}	O
int	O
dir_grow	(*(struct(*(struct),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),int)->(int)
(	O
Stream_t	struct(*(struct),int,*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))))
*	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
int	O
size	array(char)
)	O
{	O
Stream_t	struct(*(struct),int,*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))))
*	O
Stream	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
=	O
GetFs	(*(struct(*(struct),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(*(struct(*(struct),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
(	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
)	O
;	O
DeclareThis	O
(	O
FsPublic_t	struct(*(struct(*((*(struct`),*(char),long,long)->(int)),*((*(struct`),*(char),long,long)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`),int,*(union`))->(int)),*((*(struct`),*(long),*(long),*(int),*(int))->(int)),*((*(struct`),long)->(int)),*((*(struct`))->(*(struct`))),*((*(struct`))->(int)))),int,*(struct(*(struct(*((*`,*`,long,long)->(int)),*((*`,*`,long,long)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`,int,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(*`)),*((*`)->(int)))),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),*(struct(*(struct(*((*`,*`,long,long)->(int)),*((*`,*`,long,long)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`,int,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(*`)),*((*`)->(int)))),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),int,long,int,int)
)	O
;	O
int	O
ret	int
;	O
unsigned	O
int	O
buflen	int
;	O
char	O
*	O
buffer	*(char)
;	O
if	O
(	O
!	O
getfreeMinClusters	(*(struct(*(struct),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),long)->(int)
(	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
1	int
)	O
)	O
return	O
-	O
1	int
;	O
buflen	int
=	O
This	*(struct(*(struct(*((*`,*`,long,long)->(int)),*((*`,*`,long,long)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`,int,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(*`)),*((*`)->(int)))),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
->	O
cluster_size	int
*	O
This	*(struct(*(struct(*((*`,*`,long,long)->(int)),*((*`,*`,long,long)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`,int,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(*`)),*((*`)->(int)))),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
->	O
sector_size	int
;	O
if	O
(	O
!	O
(	O
buffer	*(char)
=	O
malloc	(long)->(*(void))
(	O
buflen	int
)	O
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
"dir_grow: malloc"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
(	O
char	O
*	O
)	O
buffer	*(char)
,	O
'\0'	O
,	O
buflen	int
)	O
;	O
ret	int
=	O
force_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),long,long)->(int)
(	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
buffer	*(char)
,	O
(	O
mt_off_t	long
)	O
size	array(char)
*	O
MDIR_SIZE	int
,	O
buflen	int
)	O
;	O
free	(*(void))->(void)
(	O
buffer	*(char)
)	O
;	O
if	O
(	O
ret	int
<	O
(	O
int	O
)	O
buflen	int
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
void	O
low_level_dir_write	(*(struct(*(struct(*`,int,*`,*`)),int,struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(int),int,int)))->(void)
(	O
direntry_t	struct(*(struct(*(struct(*((*`,*`,long,long)->(int)),*((*`,*`,long,long)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`,*`,int,*`)->(int)),*((*`,*`,*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`)->(*`)),*((*`)->(int)))),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),int,struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(int),int,int)
*	O
entry	int
)	O
{	O
force_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),long,long)->(int)
(	O
entry	int
->	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
(	O
char	O
*	O
)	O
(	O
&	O
entry	int
->	O
dir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
,	O
(	O
mt_off_t	long
)	O
entry	int
->	O
entry	int
*	O
MDIR_SIZE	int
,	O
MDIR_SIZE	int
)	O
;	O
}	O
void	O
low_level_dir_write_end	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),int)->(void)
(	O
Stream_t	struct(*(struct),int,*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))),*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`))))))
*	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
int	O
entry	int
)	O
{	O
char	O
zero	char
=	O
ENDMARK	O
;	O
force_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),long,long)->(int)
(	O
Dir	*(struct(*(struct),int,*(struct(*(struct`),int,*(struct`),*(struct`))),*(struct(*(struct`),int,*(struct`),*(struct`)))))
,	O
&	O
zero	char
,	O
(	O
mt_off_t	long
)	O
entry	int
*	O
MDIR_SIZE	int
,	O
1	int
)	O
;	O
}	O
struct	O
directory	struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
mk_entry	(*(struct),char,int,long,long,*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))->(*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))
(	O
const	O
dos_name_t	struct
*	O
dn	*(struct)
,	O
unsigned	O
char	O
attr	char
,	O
unsigned	O
int	O
fat	int
,	O
size_t	long
size	array(char)
,	O
time_t	long
date	array(char)
,	O
struct	O
directory	struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
now	*(long)
;	O
time_t	long
date2	long
=	O
date	array(char)
;	O
unsigned	O
char	O
hour	char
,	O
min_hi	char
,	O
min_low	char
,	O
sec	char
;	O
unsigned	O
char	O
year	char
,	O
month_hi	char
,	O
month_low	char
,	O
day	char
;	O
now	*(long)
=	O
localtime	(*(long))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
date2	long
)	O
;	O
dosnameToDirentry	(*(struct),*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))->(void)
(	O
dn	*(struct)
,	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
;	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
attr	char
=	O
attr	char
;	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
ctime_ms	char
=	O
0	int
;	O
hour	char
=	O
now	*(long)
->	O
tm_hour	int
<<	O
3	int
;	O
min_hi	char
=	O
now	*(long)
->	O
tm_min	int
>>	O
3	int
;	O
min_low	char
=	O
now	*(long)
->	O
tm_min	int
<<	O
5	int
;	O
sec	char
=	O
now	*(long)
->	O
tm_sec	int
/	O
2	int
;	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
ctime	(*(long))->(*(char))
[	O
1	int
]	O
=	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
time	struct(long,long)
[	O
1	int
]	O
=	O
hour	char
+	O
min_hi	char
;	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
ctime	(*(long))->(*(char))
[	O
0	int
]	O
=	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
time	struct(long,long)
[	O
0	int
]	O
=	O
min_low	char
+	O
sec	char
;	O
year	char
=	O
(	O
now	*(long)
->	O
tm_year	int
-	O
80	int
)	O
<<	O
1	int
;	O
month_hi	char
=	O
(	O
now	*(long)
->	O
tm_mon	int
+	O
1	int
)	O
>>	O
3	int
;	O
month_low	char
=	O
(	O
now	*(long)
->	O
tm_mon	int
+	O
1	int
)	O
<<	O
5	int
;	O
day	char
=	O
now	*(long)
->	O
tm_mday	int
;	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
adate	array(char)
[	O
1	int
]	O
=	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
cdate	array(char)
[	O
1	int
]	O
=	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
date	array(char)
[	O
1	int
]	O
=	O
year	char
+	O
month_hi	char
;	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
adate	array(char)
[	O
0	int
]	O
=	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
cdate	array(char)
[	O
0	int
]	O
=	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
date	array(char)
[	O
0	int
]	O
=	O
month_low	char
+	O
day	char
;	O
set_word	(*(char),short)->(void)
(	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
start	array(char)
,	O
fat	int
&	O
0xffff	int
)	O
;	O
set_word	(*(char),short)->(void)
(	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
startHi	array(char)
,	O
fat	int
>>	O
16	int
)	O
;	O
set_dword	(*(char),int)->(void)
(	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
->	O
size	array(char)
,	O
size	array(char)
)	O
;	O
return	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
;	O
}	O
struct	O
directory	struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
mk_entry_from_base	(*(char),char,int,long,long,*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))->(*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))
(	O
const	O
char	O
*	O
base	int
,	O
unsigned	O
char	O
attr	char
,	O
unsigned	O
int	O
fat	int
,	O
size_t	long
size	array(char)
,	O
time_t	long
date	array(char)
,	O
struct	O
directory	struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
{	O
struct	O
dos_name_t	struct
dn	*(struct)
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
dn	*(struct)
.	O
base	int
,	O
base	int
,	O
8	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
dn	*(struct)
.	O
ext	array(char)
,	O
"   "	*(char)
,	O
3	int
)	O
;	O
return	O
mk_entry	(*(struct),char,int,long,long,*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))->(*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))))
(	O
&	O
dn	*(struct)
,	O
attr	char
,	O
fat	int
,	O
size	array(char)
,	O
date	array(char)
,	O
ndir	*(struct(array(char),array(char),char,char,char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)))
)	O
;	O
}	O
