const	O
char	O
work_rcsid	array(char)
[	O
]	O
=	O
"$Id: work.c,v 1.24 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
static	O
char	O
*	O
zswork_directory	(*(char))->(*(char))
P	O
(	O
(	O
const	O
char	O
*	O
zsystem	*(char)
)	O
)	O
;	O
static	O
boolean	int
fswork_file	(*(char),*(char),*(char))->(int)
P	O
(	O
(	O
const	O
char	O
*	O
zsystem	*(char)
,	O
const	O
char	O
*	O
zfile	*(char)
,	O
char	O
*	O
pbgrade	*(char)
)	O
)	O
;	O
static	O
int	O
iswork_cmp	(*(void),*(void))->(int)
P	O
(	O
(	O
constpointer	*(void)
pkey	*(void)
,	O
constpointer	*(void)
pdatum	*(void)
)	O
)	O
;	O
struct	O
ssfilename	struct(*(char),char,char)
{	O
char	O
*	O
zfile	*(char)
;	O
char	O
bgrade	char
;	O
char	O
bdummy	char
;	O
}	O
;	O
struct	O
ssline	struct(*(char),*(struct),*(char))
{	O
char	O
*	O
zline	*(char)
;	O
struct	O
ssfile	O
*	O
qfile	*(struct)
;	O
char	O
*	O
ztemp	*(char)
;	O
}	O
;	O
struct	O
ssfile	O
{	O
char	O
*	O
zfile	*(char)
;	O
char	O
bgrade	char
;	O
char	O
bdummy	char
;	O
int	O
clines	O
;	O
int	O
cdid	O
;	O
struct	O
ssline	struct(*(char),*(struct),*(char))
aslines	O
[	O
CFILELINES	O
]	O
;	O
}	O
;	O
static	O
struct	O
ssfilename	struct(*(char),char,char)
*	O
asSwork_files	O
;	O
static	O
size_t	long
cSwork_files	O
;	O
static	O
size_t	long
iSwork_file	O
;	O
static	O
struct	O
ssfile	O
*	O
qSwork_file	O
;	O
static	O
char	O
*	O
zswork_directory	(*(char))->(*(char))
(	O
zsystem	*(char)
)	O
const	O
char	O
*	O
zsystem	*(char)
;	O
{	O
return	O
zsysdep_in_dir	(*(char),*(char))->(*(char))
(	O
zsystem	*(char)
,	O
"C."	*(char)
)	O
;	O
}	O
static	O
boolean	int
fswork_file	(*(char),*(char),*(char))->(int)
(	O
zsystem	*(char)
,	O
zfile	*(char)
,	O
pbgrade	*(char)
)	O
const	O
char	O
*	O
zsystem	*(char)
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zfile	*(char)
;	O
char	O
*	O
pbgrade	*(char)
;	O
{	O
*	O
pbgrade	*(char)
=	O
zfile	*(char)
[	O
2	int
]	O
;	O
return	O
(	O
zfile	*(char)
[	O
0	int
]	O
==	O
'C'	O
&&	O
zfile	*(char)
[	O
1	int
]	O
==	O
'.'	O
&&	O
zfile	*(char)
[	O
2	int
]	O
!=	O
'\0'	O
)	O
;	O
}	O
static	O
int	O
iswork_cmp	(*(void),*(void))->(int)
(	O
pkey	*(void)
,	O
pdatum	*(void)
)	O
constpointer	*(void)
pkey	*(void)
;	O
constpointer	*(void)
pdatum	*(void)
;	O
{	O
const	O
struct	O
ssfilename	struct(*(char),char,char)
*	O
qkey	O
=	O
(	O
const	O
struct	O
ssfilename	struct(*(char),char,char)
*	O
)	O
pkey	*(void)
;	O
const	O
struct	O
ssfilename	struct(*(char),char,char)
*	O
qdatum	O
=	O
(	O
const	O
struct	O
ssfilename	struct(*(char),char,char)
*	O
)	O
pdatum	*(void)
;	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
qkey	O
->	O
zfile	*(char)
,	O
qdatum	O
->	O
zfile	*(char)
)	O
;	O
}	O
boolean	int
fsysdep_has_work	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))))->(int)
(	O
qsys	*(struct)
)	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
{	O
char	O
*	O
zdir	*(char)
;	O
DIR	struct
*	O
qdir	O
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
qentry	O
;	O
zdir	*(char)
=	O
zswork_directory	(*(char))->(*(char))
(	O
qsys	*(struct)
->	O
uuconf_zname	*(char)
)	O
;	O
if	O
(	O
zdir	*(char)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
qdir	O
=	O
opendir	(*(char))->(*(struct))
(	O
(	O
char	O
*	O
)	O
zdir	*(char)
)	O
;	O
if	O
(	O
qdir	O
==	O
NULL	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
while	O
(	O
(	O
qentry	O
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
qdir	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
char	O
bgrade	char
;	O
if	O
(	O
fswork_file	(*(char),*(char),*(char))->(int)
(	O
qsys	*(struct)
->	O
uuconf_zname	*(char)
,	O
qentry	O
->	O
d_name	array(char)
,	O
&	O
bgrade	char
)	O
)	O
{	O
closedir	(*(struct))->(int)
(	O
qdir	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
closedir	(*(struct))->(int)
(	O
qdir	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
boolean	int
fsysdep_get_work_init	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),int,int)->(int)
(	O
qsys	*(struct)
,	O
bgrade	char
,	O
cmax	int
)	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
int	O
bgrade	char
;	O
unsigned	O
int	O
cmax	int
;	O
{	O
char	O
*	O
zdir	*(char)
;	O
DIR	struct
*	O
qdir	O
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
qentry	O
;	O
size_t	long
chad	O
;	O
size_t	long
callocated	O
;	O
zdir	*(char)
=	O
zswork_directory	(*(char))->(*(char))
(	O
qsys	*(struct)
->	O
uuconf_zname	*(char)
)	O
;	O
if	O
(	O
zdir	*(char)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
qdir	O
=	O
opendir	(*(char))->(*(struct))
(	O
zdir	*(char)
)	O
;	O
if	O
(	O
qdir	O
==	O
NULL	O
)	O
{	O
boolean	int
fret	O
;	O
if	O
(	O
errno	O
==	O
ENOENT	O
)	O
fret	O
=	O
TRUE	O
;	O
else	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"opendir (%s): %s"	*(char)
,	O
zdir	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
fret	O
=	O
FALSE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
fret	O
;	O
}	O
chad	O
=	O
cSwork_files	O
;	O
callocated	O
=	O
cSwork_files	O
;	O
if	O
(	O
chad	O
>	O
0	int
)	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
(	O
pointer	*(void)
)	O
asSwork_files	O
,	O
chad	O
,	O
sizeof	O
(	O
struct	O
ssfilename	struct(*(char),char,char)
)	O
,	O
iswork_cmp	(*(void),*(void))->(int)
)	O
;	O
while	O
(	O
(	O
qentry	O
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
qdir	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
char	O
bfilegrade	O
;	O
char	O
*	O
zname	*(char)
;	O
struct	O
ssfilename	struct(*(char),char,char)
slook	O
;	O
zname	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
qentry	O
->	O
d_name	array(char)
)	O
;	O
slook	O
.	O
zfile	*(char)
=	O
zname	*(char)
;	O
if	O
(	O
!	O
fswork_file	(*(char),*(char),*(char))->(int)
(	O
qsys	*(struct)
->	O
uuconf_zname	*(char)
,	O
qentry	O
->	O
d_name	array(char)
,	O
&	O
bfilegrade	O
)	O
||	O
UUCONF_GRADE_CMP	O
(	O
bgrade	char
,	O
bfilegrade	O
)	O
<	O
0	int
||	O
(	O
asSwork_files	O
!=	O
NULL	O
&&	O
bsearch	(*(void),*(void),long,long,*((*(void),*(void))->(int)))->(*(void))
(	O
(	O
pointer	*(void)
)	O
&	O
slook	O
,	O
(	O
pointer	*(void)
)	O
asSwork_files	O
,	O
chad	O
,	O
sizeof	O
(	O
struct	O
ssfilename	struct(*(char),char,char)
)	O
,	O
iswork_cmp	(*(void),*(void))->(int)
)	O
!=	O
NULL	O
)	O
)	O
ubuffree	(*(char))->(void)
(	O
zname	*(char)
)	O
;	O
else	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_SPOOLDIR	O
,	O
"fsysdep_get_work_init: Found %s"	*(char)
,	O
zname	*(char)
)	O
;	O
if	O
(	O
cSwork_files	O
>=	O
callocated	O
)	O
{	O
callocated	O
+=	O
CWORKFILES	O
;	O
asSwork_files	O
=	O
(	O
(	O
struct	O
ssfilename	struct(*(char),char,char)
*	O
)	O
xrealloc	(*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
asSwork_files	O
,	O
(	O
callocated	O
*	O
sizeof	O
(	O
struct	O
ssfilename	struct(*(char),char,char)
)	O
)	O
)	O
)	O
;	O
}	O
asSwork_files	O
[	O
cSwork_files	O
]	O
.	O
zfile	*(char)
=	O
zname	*(char)
;	O
asSwork_files	O
[	O
cSwork_files	O
]	O
.	O
bgrade	char
=	O
bfilegrade	O
;	O
++	O
cSwork_files	O
;	O
if	O
(	O
cmax	int
!=	O
0	int
&&	O
cSwork_files	O
-	O
chad	O
>	O
cmax	int
)	O
break	O
;	O
}	O
}	O
closedir	(*(struct))->(int)
(	O
qdir	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
if	O
(	O
cSwork_files	O
>	O
iSwork_file	O
)	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
(	O
pointer	*(void)
)	O
(	O
asSwork_files	O
+	O
iSwork_file	O
)	O
,	O
cSwork_files	O
-	O
iSwork_file	O
,	O
sizeof	O
(	O
struct	O
ssfilename	struct(*(char),char,char)
)	O
,	O
iswork_cmp	(*(void),*(void))->(int)
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fsysdep_get_work	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),int,int,*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long)))->(int)
(	O
qsys	*(struct)
,	O
bgrade	char
,	O
cmax	int
,	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
)	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
int	O
bgrade	char
ATTRIBUTE_UNUSED	O
;	O
unsigned	O
int	O
cmax	int
ATTRIBUTE_UNUSED	O
;	O
struct	O
scmd	struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long)
*	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
;	O
{	O
char	O
*	O
zdir	*(char)
;	O
if	O
(	O
qSwork_file	O
!=	O
NULL	O
&&	O
qSwork_file	O
->	O
cdid	O
>=	O
qSwork_file	O
->	O
clines	O
)	O
qSwork_file	O
=	O
NULL	O
;	O
if	O
(	O
asSwork_files	O
==	O
NULL	O
)	O
{	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
bcmd	char
=	O
'H'	O
;	O
return	O
TRUE	O
;	O
}	O
zdir	*(char)
=	O
NULL	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
qSwork_file	O
==	O
NULL	O
)	O
{	O
FILE	struct
*	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
struct	O
ssfile	O
*	O
qfile	*(struct)
;	O
int	O
iline	O
,	O
callocated	O
;	O
char	O
*	O
zline	*(char)
;	O
size_t	long
cline	O
;	O
char	O
*	O
zname	*(char)
;	O
char	O
bfilegrade	O
;	O
do	O
{	O
if	O
(	O
iSwork_file	O
>=	O
cSwork_files	O
)	O
{	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
bcmd	char
=	O
'H'	O
;	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
zdir	*(char)
==	O
NULL	O
)	O
{	O
zdir	*(char)
=	O
zswork_directory	(*(char))->(*(char))
(	O
qsys	*(struct)
->	O
uuconf_zname	*(char)
)	O
;	O
if	O
(	O
zdir	*(char)
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
zname	*(char)
=	O
zsysdep_in_dir	(*(char),*(char))->(*(char))
(	O
zdir	*(char)
,	O
asSwork_files	O
[	O
iSwork_file	O
]	O
.	O
zfile	*(char)
)	O
;	O
bfilegrade	O
=	O
asSwork_files	O
[	O
iSwork_file	O
]	O
.	O
bgrade	char
;	O
++	O
iSwork_file	O
;	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
zname	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fopen (%s): %s"	*(char)
,	O
zname	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zname	*(char)
)	O
;	O
}	O
}	O
while	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
;	O
qfile	*(struct)
=	O
(	O
struct	O
ssfile	O
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
ssfile	O
)	O
)	O
;	O
callocated	O
=	O
CFILELINES	O
;	O
iline	O
=	O
0	int
;	O
zline	*(char)
=	O
NULL	O
;	O
cline	O
=	O
0	int
;	O
while	O
(	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
zline	*(char)
,	O
&	O
cline	O
,	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
>	O
0	int
)	O
{	O
if	O
(	O
iline	O
>=	O
callocated	O
)	O
{	O
qfile	*(struct)
=	O
(	O
(	O
struct	O
ssfile	O
*	O
)	O
xrealloc	(*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
qfile	*(struct)
,	O
(	O
sizeof	O
(	O
struct	O
ssfile	O
)	O
+	O
(	O
callocated	O
*	O
sizeof	O
(	O
struct	O
ssline	struct(*(char),*(struct),*(char))
)	O
)	O
)	O
)	O
)	O
;	O
callocated	O
+=	O
CFILELINES	O
;	O
}	O
qfile	*(struct)
->	O
aslines	O
[	O
iline	O
]	O
.	O
zline	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
zline	*(char)
)	O
;	O
qfile	*(struct)
->	O
aslines	O
[	O
iline	O
]	O
.	O
qfile	*(struct)
=	O
NULL	O
;	O
qfile	*(struct)
->	O
aslines	O
[	O
iline	O
]	O
.	O
ztemp	*(char)
=	O
NULL	O
;	O
iline	O
++	O
;	O
}	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zline	*(char)
)	O
;	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"fclose: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
iline	O
==	O
0	int
)	O
{	O
qfile	*(struct)
->	O
aslines	O
[	O
0	int
]	O
.	O
zline	*(char)
=	O
zbufcpy	(*(char))->(*(char))
(	O
"P"	*(char)
)	O
;	O
qfile	*(struct)
->	O
aslines	O
[	O
0	int
]	O
.	O
qfile	*(struct)
=	O
NULL	O
;	O
qfile	*(struct)
->	O
aslines	O
[	O
0	int
]	O
.	O
ztemp	*(char)
=	O
NULL	O
;	O
iline	O
=	O
1	int
;	O
}	O
qfile	*(struct)
->	O
zfile	*(char)
=	O
zname	*(char)
;	O
qfile	*(struct)
->	O
bgrade	char
=	O
bfilegrade	O
;	O
qfile	*(struct)
->	O
clines	O
=	O
iline	O
;	O
qfile	*(struct)
->	O
cdid	O
=	O
0	int
;	O
qSwork_file	O
=	O
qfile	*(struct)
;	O
}	O
while	O
(	O
TRUE	O
)	O
{	O
int	O
iline	O
;	O
if	O
(	O
qSwork_file	O
->	O
cdid	O
>=	O
qSwork_file	O
->	O
clines	O
)	O
{	O
qSwork_file	O
=	O
NULL	O
;	O
break	O
;	O
}	O
iline	O
=	O
qSwork_file	O
->	O
cdid	O
;	O
++	O
qSwork_file	O
->	O
cdid	O
;	O
if	O
(	O
!	O
fparse_cmd	(*(char),*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long)))->(int)
(	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
zline	*(char)
,	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
)	O
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"Bad line in command file %s"	*(char)
,	O
qSwork_file	O
->	O
zfile	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
zline	*(char)
)	O
;	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
zline	*(char)
=	O
NULL	O
;	O
continue	O
;	O
}	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
bgrade	char
=	O
qSwork_file	O
->	O
bgrade	char
;	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
qfile	*(struct)
=	O
qSwork_file	O
;	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
pseq	*(void)
=	O
(	O
pointer	*(void)
)	O
(	O
&	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
)	O
;	O
if	O
(	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
bcmd	char
==	O
'S'	O
||	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
bcmd	char
==	O
'E'	O
)	O
{	O
char	O
*	O
zreal	O
;	O
zreal	O
=	O
zsysdep_spool_file_name	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),*(void))->(*(char))
(	O
qsys	*(struct)
,	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
ztemp	*(char)
,	O
qcmd	*(struct(char,char,*(void),*(char),*(char),*(char),*(char),*(char),int,*(char),long,*(char),long))
->	O
pseq	*(void)
)	O
;	O
if	O
(	O
zreal	O
==	O
NULL	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
zline	*(char)
)	O
;	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
zline	*(char)
=	O
NULL	O
;	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
qSwork_file	O
->	O
aslines	O
[	O
iline	O
]	O
.	O
ztemp	*(char)
=	O
zreal	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
zdir	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
}	O
boolean	int
fsysdep_did_work	(*(void))->(int)
(	O
pseq	*(void)
)	O
pointer	*(void)
pseq	*(void)
;	O
{	O
struct	O
ssfile	O
*	O
qfile	*(struct)
;	O
struct	O
ssline	struct(*(char),*(struct),*(char))
*	O
qline	O
;	O
int	O
i	O
;	O
qline	O
=	O
(	O
struct	O
ssline	struct(*(char),*(struct),*(char))
*	O
)	O
pseq	*(void)
;	O
ubuffree	(*(char))->(void)
(	O
qline	O
->	O
zline	*(char)
)	O
;	O
qline	O
->	O
zline	*(char)
=	O
NULL	O
;	O
qfile	*(struct)
=	O
qline	O
->	O
qfile	*(struct)
;	O
qline	O
->	O
qfile	*(struct)
=	O
NULL	O
;	O
if	O
(	O
qline	O
->	O
ztemp	*(char)
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
remove	(*(char))->(int)
(	O
qline	O
->	O
ztemp	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
qline	O
->	O
ztemp	*(char)
)	O
;	O
qline	O
->	O
ztemp	*(char)
=	O
NULL	O
;	O
}	O
if	O
(	O
qfile	*(struct)
->	O
cdid	O
<	O
qfile	*(struct)
->	O
clines	O
)	O
return	O
TRUE	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
qfile	*(struct)
->	O
clines	O
;	O
i	O
++	O
)	O
if	O
(	O
qfile	*(struct)
->	O
aslines	O
[	O
i	O
]	O
.	O
qfile	*(struct)
!=	O
NULL	O
)	O
return	O
TRUE	O
;	O
if	O
(	O
remove	(*(char))->(int)
(	O
qfile	*(struct)
->	O
zfile	*(char)
)	O
!=	O
0	int
)	O
{	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"remove (%s): %s"	*(char)
,	O
qfile	*(struct)
->	O
zfile	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	(*(char))->(void)
(	O
qfile	*(struct)
->	O
zfile	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
qfile	*(struct)
)	O
;	O
if	O
(	O
qfile	*(struct)
==	O
qSwork_file	O
)	O
qSwork_file	O
=	O
NULL	O
;	O
return	O
TRUE	O
;	O
}	O
void	O
usysdep_get_work_free	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))))->(void)
(	O
qsys	*(struct)
)	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
ATTRIBUTE_UNUSED	O
;	O
{	O
if	O
(	O
asSwork_files	O
!=	O
NULL	O
)	O
{	O
size_t	long
i	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
cSwork_files	O
;	O
i	O
++	O
)	O
ubuffree	(*(char))->(void)
(	O
(	O
pointer	*(void)
)	O
asSwork_files	O
[	O
i	O
]	O
.	O
zfile	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
asSwork_files	O
)	O
;	O
asSwork_files	O
=	O
NULL	O
;	O
cSwork_files	O
=	O
0	int
;	O
iSwork_file	O
=	O
0	int
;	O
}	O
if	O
(	O
qSwork_file	O
!=	O
NULL	O
)	O
{	O
int	O
i	O
;	O
ubuffree	(*(char))->(void)
(	O
qSwork_file	O
->	O
zfile	*(char)
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
qSwork_file	O
->	O
cdid	O
;	O
i	O
++	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
qSwork_file	O
->	O
aslines	O
[	O
i	O
]	O
.	O
zline	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
qSwork_file	O
->	O
aslines	O
[	O
i	O
]	O
.	O
ztemp	*(char)
)	O
;	O
}	O
for	O
(	O
i	O
=	O
qSwork_file	O
->	O
cdid	O
;	O
i	O
<	O
qSwork_file	O
->	O
clines	O
;	O
i	O
++	O
)	O
ubuffree	(*(char))->(void)
(	O
qSwork_file	O
->	O
aslines	O
[	O
i	O
]	O
.	O
zline	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
qSwork_file	O
)	O
;	O
qSwork_file	O
=	O
NULL	O
;	O
}	O
}	O
const	O
char	O
*	O
zsysdep_save_temp_file	(*(void))->(*(char))
(	O
pseq	*(void)
)	O
pointer	*(void)
pseq	*(void)
;	O
{	O
struct	O
ssline	struct(*(char),*(struct),*(char))
*	O
qline	O
=	O
(	O
struct	O
ssline	struct(*(char),*(struct),*(char))
*	O
)	O
pseq	*(void)
;	O
char	O
*	O
zto	*(char)
,	O
*	O
zslash	O
;	O
size_t	long
cwant	O
;	O
static	O
char	O
*	O
zbuf	*(char)
;	O
static	O
size_t	long
cbuf	long
;	O
if	O
(	O
!	O
fsysdep_file_exists	(*(char))->(int)
(	O
qline	O
->	O
ztemp	*(char)
)	O
)	O
return	O
NULL	O
;	O
zslash	O
=	O
strrchr	(*(char),int)->(*(char))
(	O
qline	O
->	O
ztemp	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
zslash	O
==	O
NULL	O
)	O
zslash	O
=	O
qline	O
->	O
ztemp	*(char)
;	O
else	O
++	O
zslash	O
;	O
zto	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
sizeof	O
PRESERVEDIR	O
+	O
sizeof	O
"/"	*(char)
+	O
strlen	(*(char))->(long)
(	O
zslash	O
)	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
zto	*(char)
,	O
"%s/%s"	*(char)
,	O
PRESERVEDIR	O
,	O
zslash	O
)	O
;	O
if	O
(	O
!	O
fsysdep_move_file	(*(char),*(char),int,int,int,*(char))->(int)
(	O
qline	O
->	O
ztemp	*(char)
,	O
zto	*(char)
,	O
TRUE	O
,	O
FALSE	O
,	O
FALSE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
return	O
"Could not move file to preservation directory"	*(char)
;	O
}	O
cwant	O
=	O
sizeof	O
"File saved as\n\t/"	*(char)
+	O
strlen	(*(char))->(long)
(	O
zSspooldir	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
zto	*(char)
)	O
;	O
if	O
(	O
cwant	O
>	O
cbuf	long
)	O
{	O
ubuffree	(*(char))->(void)
(	O
zbuf	*(char)
)	O
;	O
zbuf	*(char)
=	O
zbufalc	(long)->(*(char))
(	O
cwant	O
)	O
;	O
cbuf	long
=	O
cwant	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
zbuf	*(char)
,	O
"File saved as\n\t%s/%s"	*(char)
,	O
zSspooldir	*(char)
,	O
zto	*(char)
)	O
;	O
ubuffree	(*(char))->(void)
(	O
zto	*(char)
)	O
;	O
return	O
zbuf	*(char)
;	O
}	O
char	O
*	O
zsysdep_jobid	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(void))->(*(char))
(	O
qsys	*(struct)
,	O
pseq	*(void)
)	O
const	O
struct	O
uuconf_system	struct(*(char),*(*(char)),*(struct(*(char),*(*(char)),*(struct(*(char),*(*`),*(struct`),*(char),int,int,*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),long,long,*(char),*(struct`),*(char),struct(*`,*`,int,*`,int),*(char),*(char),*(char),int,int,*(char),*(struct`),struct(*`,*`,int,*`,int),*(char),*(char),int,int,int,int,*(*`),*(*`),*(*`),*(*`),*(*`),*(*`),long,*(*`),*(*`),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),int,int,*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),*(struct(*(struct`),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct`))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),int,int,*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),*(struct(*(struct(*(struct`),int,int,long,int)),int,int,long,int)),long,long,*(char),*(struct),*(char),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*(struct(int,*(*`))))),struct(*(*(char)),*(*(char)),int,*(*(char)),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))
*	O
qsys	*(struct)
;	O
pointer	*(void)
pseq	*(void)
;	O
{	O
return	O
zsfile_to_jobid	(*(struct(*(char),*(*(char)),*(struct(*`,*`,*`,*`,int,int,*`,*`,*`,int,int,*`,*`,*`,*`,long,long,*`,*`,*`,struct`,*`,*`,*`,int,int,*`,*`,struct`,*`,*`,int,int,int,int,*`,*`,*`,*`,*`,*`,long,*`,*`,*`,*`,long,*`)),*(char),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),int,int,*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),*(struct(*`,int,int,long,int)),long,long,*(char),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(char),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),*(char),int,int,*(char),*(struct(int,*`)),struct(*(*`),*(*`),int,*(*`),int),*(char),*(char),int,int,int,int,*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),*(*(char)),long,*(*(char)),*(*(char)),*(char),*(char),long,*(void))),*(char),int)->(*(char))
(	O
qsys	*(struct)
,	O
(	O
(	O
struct	O
ssline	struct(*(char),*(struct),*(char))
*	O
)	O
pseq	*(void)
)	O
->	O
qfile	*(struct)
->	O
zfile	*(char)
,	O
bsgrade	(*(void))->(int)
(	O
pseq	*(void)
)	O
)	O
;	O
}	O
int	O
bsgrade	(*(void))->(int)
(	O
pseq	*(void)
)	O
pointer	*(void)
pseq	*(void)
;	O
{	O
const	O
char	O
*	O
zfile	*(char)
;	O
char	O
bgrade	char
;	O
if	O
(	O
pseq	*(void)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
zfile	*(char)
=	O
(	O
(	O
struct	O
ssline	struct(*(char),*(struct),*(char))
*	O
)	O
pseq	*(void)
)	O
->	O
qfile	*(struct)
->	O
zfile	*(char)
;	O
bgrade	char
=	O
*	O
(	O
strrchr	(*(char),int)->(*(char))
(	O
zfile	*(char)
,	O
'/'	O
)	O
+	O
3	int
)	O
;	O
return	O
bgrade	char
;	O
}	O
