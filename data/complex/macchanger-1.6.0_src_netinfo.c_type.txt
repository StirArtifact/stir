net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
mc_net_info_new	(*(char))->(*(struct(int,struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
(	O
const	O
char	O
*	O
device	*(char)
)	O
{	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
=	O
(	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
)	O
;	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
sock	int
=	O
socket	(int,int,int)->(int)
(	O
AF_INET	O
,	O
SOCK_DGRAM	int
,	O
0	int
)	O
;	O
if	O
(	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
sock	int
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"[ERROR] Socket"	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
dev	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
.	O
ifr_name	O
,	O
device	*(char)
)	O
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
sock	int
,	O
SIOCGIFHWADDR	int
,	O
&	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
dev	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"[ERROR] Set device name"	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
;	O
}	O
void	O
mc_net_info_free	(*(struct(int,struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))->(void)
(	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
)	O
{	O
close	(int)->(int)
(	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
sock	int
)	O
;	O
free	(*(void))->(void)
(	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
)	O
;	O
}	O
mac_t	struct(array(char))
*	O
mc_net_info_get_mac	(*(struct(int,struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))->(*(struct(array(char))))
(	O
const	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
)	O
{	O
int	O
i	int
;	O
mac_t	struct(array(char))
*	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
=	O
(	O
mac_t	struct(array(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
mac_t	struct(array(char))
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
6	int
;	O
i	int
++	O
)	O
{	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
byte	array(char)
[	O
i	int
]	O
=	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
dev	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
.	O
ifr_hwaddr	O
.	O
sa_data	array(char)
[	O
i	int
]	O
&	O
0xFF	int
;	O
}	O
return	O
new	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
;	O
}	O
int	O
mc_net_info_set_mac	(*(struct(int,struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))),*(struct(array(char))))->(int)
(	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
,	O
const	O
mac_t	struct(array(char))
*	O
mac	*(struct(array(char)))
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
6	int
;	O
i	int
++	O
)	O
{	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
dev	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
.	O
ifr_hwaddr	O
.	O
sa_data	array(char)
[	O
i	int
]	O
=	O
mac	*(struct(array(char)))
->	O
byte	array(char)
[	O
i	int
]	O
;	O
}	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
sock	int
,	O
SIOCSIFHWADDR	int
,	O
&	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
dev	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"[ERROR] Could not change MAC: interface up or insufficient permissions"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
mac_t	struct(array(char))
*	O
mc_net_info_get_permanent_mac	(*(struct(int,struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))->(*(struct(array(char))))
(	O
const	O
net_info_t	struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
*	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
)	O
{	O
int	O
i	int
;	O
struct	O
ifreq	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
req	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
;	O
struct	O
ethtool_perm_addr	struct(int,int,array(char))
*	O
epa	*(struct(int,int,array(char)))
;	O
mac_t	struct(array(char))
*	O
newmac	*(struct(array(char)))
;	O
newmac	*(struct(array(char)))
=	O
(	O
mac_t	struct(array(char))
*	O
)	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
mac_t	struct(array(char))
)	O
)	O
;	O
epa	*(struct(int,int,array(char)))
=	O
(	O
struct	O
ethtool_perm_addr	struct(int,int,array(char))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
ethtool_perm_addr	struct(int,int,array(char))
)	O
+	O
IFHWADDRLEN	int
)	O
;	O
epa	*(struct(int,int,array(char)))
->	O
cmd	int
=	O
ETHTOOL_GPERMADDR	int
;	O
epa	*(struct(int,int,array(char)))
->	O
size	int
=	O
IFHWADDRLEN	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
req	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
,	O
&	O
(	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
dev	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
)	O
,	O
sizeof	O
(	O
struct	O
ifreq	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
)	O
)	O
;	O
req	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
.	O
ifr_data	O
=	O
(	O
caddr_t	*(char)
)	O
epa	*(struct(int,int,array(char)))
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
net	*(struct(int,struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))))
->	O
sock	int
,	O
SIOCETHTOOL	int
,	O
&	O
req	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"[ERROR] Could not read permanent MAC"	*(char)
)	O
;	O
}	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
6	int
;	O
i	int
++	O
)	O
{	O
newmac	*(struct(array(char)))
->	O
byte	array(char)
[	O
i	int
]	O
=	O
epa	*(struct(int,int,array(char)))
->	O
data	int
[	O
i	int
]	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
epa	*(struct(int,int,array(char)))
)	O
;	O
return	O
newmac	*(struct(array(char)))
;	O
}	O
