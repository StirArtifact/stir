static	O
int	O
sb_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
swbis_free	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
;	O
swbis_free	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
0	int
;	O
}	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
sb_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
size_t	long
initial_size	long
)	O
{	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
=	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
)	O
)	O
;	O
if	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
==	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"strob_open: out of memory.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
22	int
)	O
;	O
return	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
if	O
(	O
initial_size	long
<=	O
0	int
)	O
initial_size	long
=	O
STROB_INITLENGTH	int
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
extra_	int
=	O
STROB_LENGTHINCR	int
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
0	int
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
NULL	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
in_use_	char
=	O
1	int
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
fill_charM	int
=	O
'\0'	O
;	O
strob_reopen	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
initial_size	long
+	O
1	int
)	O
;	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_reopen_if_fill_with	(*(struct(*(char),*(char),int,int,int,char,int)),long,int)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
reqd_length	long
,	O
int	O
fill_char	int
)	O
{	O
if	O
(	O
(	O
int	O
)	O
reqd_length	long
>	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
)	O
{	O
return	O
strob_reopen_fill_with	(*(struct(*(char),*(char),int,int,int,char,int)),long,int)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
reqd_length	long
+	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
extra_	int
,	O
fill_char	int
)	O
;	O
}	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
reqd_length	long
)	O
{	O
if	O
(	O
(	O
int	O
)	O
reqd_length	long
>	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
)	O
{	O
return	O
strob_reopen	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
reqd_length	long
+	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
extra_	int
)	O
;	O
}	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
static	O
void	O
*	O
strob_set_up	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
n	long
)	O
{	O
if	O
(	O
!	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
+	O
1	int
)	O
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
if	O
(	O
n	long
>	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
)	O
{	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
n	long
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
[	O
n	long
]	O
=	O
'\0'	O
;	O
}	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
int	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
sb_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
size_t	long
initial_size	long
)	O
{	O
return	O
sb_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
initial_size	long
)	O
;	O
}	O
char	O
*	O
strob_release	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
char	O
*	O
x	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
;	O
swbis_free	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
x	*(char)
;	O
}	O
o__inline__	O
void	O
strob_set_reserve	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
res	int
)	O
{	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
extra_	int
=	O
res	int
;	O
}	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_reopen_fill_with	(*(struct(*(char),*(char),int,int,int,char,int)),long,int)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
new_length	long
,	O
int	O
fill_char	int
)	O
{	O
unsigned	O
char	O
*	O
tmpstr	*(char)
;	O
if	O
(	O
new_length	long
<=	O
1	int
)	O
new_length	long
=	O
2	int
;	O
if	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
==	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
2	int
)	O
;	O
if	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
==	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
NULL	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"strob_reopen(loc=1): out of memory.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
22	int
)	O
;	O
}	O
tmpstr	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
SWBIS_REALLOC	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
,	O
(	O
size_t	long
)	O
(	O
new_length	long
)	O
,	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
)	O
;	O
if	O
(	O
!	O
tmpstr	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"strob_reopen(loc=2): out of memory.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
22	int
)	O
;	O
return	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
=	O
tmpstr	*(char)
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
=	O
new_length	long
;	O
if	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
>	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
,	O
(	O
int	O
)	O
fill_char	int
,	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
-	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
)	O
;	O
}	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
[	O
new_length	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_reopen	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
new_length	long
)	O
{	O
return	O
strob_reopen_fill_with	(*(struct(*(char),*(char),int,int,int,char,int)),long,int)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
new_length	long
,	O
(	O
int	O
)	O
'\0'	O
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_get_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
;	O
}	O
o__inline__	O
int	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
reserve_	int
;	O
}	O
o__inline__	O
int	O
strob_get_length	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
;	O
}	O
o__inline__	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_trunc	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strob_reopen	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB_INITLENGTH	int
+	O
1	int
)	O
;	O
}	O
void	O
strob_set_length	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
len	int
)	O
{	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
len	int
+	O
1	int
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
[	O
len	int
]	O
=	O
'\0'	O
;	O
}	O
char	O
*	O
strob_strcpy_at_offset	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
offset	int
,	O
char	O
*	O
str	*(char)
)	O
{	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
offset	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
offset	int
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
1	int
)	O
;	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
)	O
;	O
}	O
void	O
strob_chr_index	(*(struct(*(char),*(char),int,int,int,char,int)),int,int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
index	(*(char),int)->(*(char))
,	O
int	O
ch	int
)	O
{	O
strob_reopen_if_fill_with	(*(struct(*(char),*(char),int,int,int,char,int)),long,int)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
index	(*(char),int)->(*(char))
+	O
2	int
,	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
fill_charM	int
)	O
;	O
if	O
(	O
index	(*(char),int)->(*(char))
>=	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
,	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
fill_charM	int
,	O
index	(*(char),int)->(*(char))
-	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
+	O
1	int
)	O
;	O
*	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
index	(*(char),int)->(*(char))
+	O
1	int
)	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
index	(*(char),int)->(*(char))
>	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
-	O
1	int
)	O
{	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
index	(*(char),int)->(*(char))
+	O
1	int
;	O
*	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
)	O
=	O
'\0'	O
;	O
}	O
*	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
index	(*(char),int)->(*(char))
)	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
ch	int
)	O
;	O
}	O
int	O
strob_get_char	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
index	(*(char),int)->(*(char))
)	O
{	O
if	O
(	O
index	(*(char),int)->(*(char))
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
index	(*(char),int)->(*(char))
>=	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
)	O
return	O
-	O
1	int
;	O
return	O
(	O
int	O
)	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
[	O
index	(*(char),int)->(*(char))
]	O
;	O
}	O
char	O
*	O
strob_strcat_at_offset	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
offset	int
,	O
char	O
*	O
str	*(char)
)	O
{	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
offset	int
+	O
1	int
+	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
)	O
)	O
)	O
;	O
if	O
(	O
!	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
offset	int
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
+	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
)	O
)	O
,	O
str	*(char)
,	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
1	int
)	O
;	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
)	O
;	O
}	O
o__inline__	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_cpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_strcpy_at_offset	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(*(char))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
(	O
char	O
*	O
)	O
(	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
;	O
return	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strob_cat	(*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_catstr	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
char	O
*	O
)	O
(	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
;	O
return	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
o__inline__	O
int	O
strob_cmp	(*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
cs	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strob_strcmp	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
cs	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
char	O
*	O
)	O
(	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
;	O
}	O
char	O
*	O
strob_chomp	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
(	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
'\n'	O
)	O
)	O
)	O
*	O
p	*(char)
=	O
'\0'	O
;	O
if	O
(	O
(	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
'\r'	O
)	O
)	O
)	O
*	O
p	*(char)
=	O
'\0'	O
;	O
return	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
char	O
*	O
strob_strncat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),long)->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
,	O
size_t	long
len	int
)	O
{	O
char	O
*	O
cret	*(char)
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
ilen	int
;	O
ilen	int
=	O
(	O
int	O
)	O
len	int
;	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
+	O
ilen	int
+	O
1	int
)	O
;	O
if	O
(	O
!	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
}	O
cret	*(char)
=	O
strncat	(*(char),*(char),long)->(*(char))
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
,	O
str	*(char)
,	O
ilen	int
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
;	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
[	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
]	O
=	O
'\0'	O
;	O
return	O
cret	*(char)
;	O
}	O
char	O
*	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
)	O
{	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
strb_ret	*(struct(*(char),*(char),int,int,int,char,int))
)	O
return	O
(	O
char	O
*	O
)	O
(	O
NULL	O
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
return	O
strcat	(*(char),*(char))->(*(char))
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
,	O
str	*(char)
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
strob_strcpy_at_offset	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
str	*(char)
)	O
;	O
}	O
char	O
*	O
strob_charcat	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
ch	int
)	O
{	O
char	O
c	int
[	O
2	int
]	O
;	O
c	int
[	O
0	int
]	O
=	O
(	O
char	O
)	O
ch	int
;	O
c	int
[	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
ch	int
)	O
{	O
return	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
c	int
)	O
;	O
}	O
else	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"X"	*(char)
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
[	O
strlen	(*(char))->(long)
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
return	O
(	O
char	O
*	O
)	O
NULL	O
;	O
}	O
char	O
*	O
strob_strncpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),long)->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
,	O
size_t	long
n	long
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
+	O
1	int
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
,	O
str	*(char)
,	O
n	long
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
[	O
n	long
]	O
=	O
'\0'	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
;	O
return	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
o__inline__	O
int	O
strob_strcmp	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
,	O
str	*(char)
)	O
;	O
}	O
o__inline__	O
size_t	long
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
;	O
}	O
char	O
*	O
strob_strchar	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
index	(*(char),int)->(*(char))
)	O
{	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
index	(*(char),int)->(*(char))
+	O
1	int
)	O
;	O
return	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
index	(*(char),int)->(*(char))
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_strrchr	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
c	int
)	O
{	O
return	O
strrchr	(*(char),int)->(*(char))
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
,	O
c	int
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_strstr	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
strstr	(*(char),*(char))->(*(char))
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
,	O
str	*(char)
)	O
;	O
}	O
o__inline__	O
void	O
strob_chr	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
ch	int
)	O
{	O
strob_chr_index	(*(struct(*(char),*(char),int,int,int,char,int)),int,int)->(void)
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
,	O
ch	int
)	O
;	O
}	O
char	O
*	O
strob_strtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
const	O
char	O
*	O
delim	*(char)
)	O
{	O
char	O
*	O
retval	*(char)
;	O
char	O
*	O
start	*(char)
;	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
m	*(char)
;	O
char	O
*	O
end	*(char)
;	O
if	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
if	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
!=	O
(	O
char	O
*	O
)	O
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
)	O
)	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
start	*(char)
=	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
;	O
if	O
(	O
!	O
strlen	(*(char))->(long)
(	O
start	*(char)
)	O
)	O
return	O
NULL	O
;	O
p	*(char)
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
p	*(char)
==	O
start	*(char)
)	O
start	*(char)
++	O
;	O
p	*(char)
=	O
strpbrk	(*(char),*(char))->(*(char))
(	O
start	*(char)
,	O
delim	*(char)
)	O
;	O
}	O
while	O
(	O
p	*(char)
&&	O
p	*(char)
==	O
start	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
*	O
p	*(char)
=	O
'\0'	O
;	O
end	*(char)
=	O
p	*(char)
+	O
1	int
+	O
strlen	(*(char))->(long)
(	O
p	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
start	*(char)
)	O
)	O
retval	*(char)
=	O
start	*(char)
;	O
else	O
retval	*(char)
=	O
NULL	O
;	O
}	O
else	O
{	O
p	*(char)
=	O
start	*(char)
+	O
strlen	(*(char))->(long)
(	O
start	*(char)
)	O
;	O
end	*(char)
=	O
p	*(char)
;	O
retval	*(char)
=	O
start	*(char)
;	O
}	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
=	O
end	*(char)
;	O
if	O
(	O
p	*(char)
<	O
end	*(char)
)	O
{	O
m	*(char)
=	O
p	*(char)
;	O
m	*(char)
++	O
;	O
while	O
(	O
*	O
m	*(char)
&&	O
strchr	(*(char),int)->(*(char))
(	O
delim	*(char)
,	O
(	O
int	O
)	O
*	O
m	*(char)
)	O
)	O
{	O
m	*(char)
++	O
;	O
}	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
=	O
m	*(char)
;	O
}	O
if	O
(	O
!	O
strlen	(*(char))->(long)
(	O
retval	*(char)
)	O
)	O
retval	*(char)
=	O
NULL	O
;	O
return	O
retval	*(char)
;	O
}	O
char	O
*	O
strob_strstrtok	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
const	O
char	O
*	O
delim	*(char)
)	O
{	O
char	O
*	O
retval	*(char)
;	O
char	O
*	O
start	*(char)
;	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
m	*(char)
;	O
char	O
*	O
end	*(char)
;	O
int	O
dlen	int
=	O
strlen	(*(char))->(long)
(	O
delim	*(char)
)	O
;	O
if	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
start	*(char)
=	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
;	O
if	O
(	O
!	O
strlen	(*(char))->(long)
(	O
start	*(char)
)	O
)	O
return	O
NULL	O
;	O
p	*(char)
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
p	*(char)
==	O
start	*(char)
)	O
start	*(char)
+=	O
dlen	int
;	O
p	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
start	*(char)
,	O
delim	*(char)
)	O
;	O
}	O
while	O
(	O
p	*(char)
&&	O
p	*(char)
==	O
start	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
*	O
p	*(char)
=	O
'\0'	O
;	O
end	*(char)
=	O
p	*(char)
+	O
dlen	int
+	O
strlen	(*(char))->(long)
(	O
p	*(char)
+	O
dlen	int
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
start	*(char)
)	O
)	O
retval	*(char)
=	O
start	*(char)
;	O
else	O
retval	*(char)
=	O
NULL	O
;	O
}	O
else	O
{	O
p	*(char)
=	O
start	*(char)
+	O
strlen	(*(char))->(long)
(	O
start	*(char)
)	O
;	O
end	*(char)
=	O
p	*(char)
;	O
retval	*(char)
=	O
start	*(char)
;	O
}	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
=	O
end	*(char)
;	O
if	O
(	O
p	*(char)
<	O
end	*(char)
)	O
{	O
m	*(char)
=	O
p	*(char)
;	O
m	*(char)
+=	O
dlen	int
;	O
while	O
(	O
*	O
m	*(char)
&&	O
strstr	(*(char),*(char))->(*(char))
(	O
m	*(char)
,	O
delim	*(char)
)	O
==	O
m	*(char)
)	O
{	O
m	*(char)
+=	O
dlen	int
;	O
}	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
->	O
tok_	*(char)
=	O
m	*(char)
;	O
}	O
if	O
(	O
!	O
strlen	(*(char))->(long)
(	O
retval	*(char)
)	O
)	O
retval	*(char)
=	O
NULL	O
;	O
return	O
retval	*(char)
;	O
}	O
void	O
strob_set_fill_char	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
ch	int
)	O
{	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
fill_charM	int
=	O
ch	int
;	O
}	O
int	O
strob_get_fill_char	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
fill_charM	int
;	O
}	O
void	O
*	O
strob_memcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(void),long)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
void	O
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
int	O
)	O
n	long
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
,	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
)	O
;	O
}	O
void	O
strob_append_hidden_null	(*(struct(*(char),*(char),int,int,int,char,int)))->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_set_up	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
,	O
"\0"	*(char)
,	O
1	int
)	O
;	O
}	O
void	O
*	O
strob_memcpy_at	(*(struct(*(char),*(char),int,int,int,char,int)),long,*(void),long)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
offset	int
,	O
void	O
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
int	O
)	O
n	long
+	O
(	O
int	O
)	O
offset	int
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
offset	int
,	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memmove	(*(struct(*(char),*(char),int,int,int,char,int)),*(void),long)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
void	O
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
n	long
)	O
{	O
return	O
strob_memmove_to	(*(struct(*(char),*(char),int,int,int,char,int)),long,*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memmove_to	(*(struct(*(char),*(char),int,int,int,char,int)),long,*(void),long)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
dst_offset	long
,	O
void	O
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
int	O
)	O
(	O
dst_offset	long
+	O
n	long
)	O
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memmove	(*(void),*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
+	O
dst_offset	long
,	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(void),long)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
void	O
*	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
size_t	long
n	long
)	O
{	O
return	O
strob_memmove_to	(*(struct(*(char),*(char),int,int,int,char,int)),long,*(void),long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
,	O
ct	*(struct(*(char),*(char),int,int,int,char,int))
,	O
n	long
)	O
;	O
}	O
void	O
*	O
strob_memset	(*(struct(*(char),*(char),int,int,int,char,int)),int,long)->(*(void))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
c	int
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
!	O
strob_set_up	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
int	O
)	O
(	O
n	long
)	O
)	O
)	O
return	O
(	O
void	O
*	O
)	O
(	O
NULL	O
)	O
;	O
return	O
memset	(*(void),int,long)->(*(void))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
str_	*(char)
,	O
c	int
,	O
n	long
)	O
;	O
}	O
void	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
len	int
)	O
{	O
strob_reopen_if	(*(struct(*(char),*(char),int,int,int,char,int)),long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
len	int
)	O
;	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
->	O
length_	int
=	O
len	int
;	O
}	O
o__inline__	O
int	O
strob_setlen	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
len	int
)	O
{	O
strob_set_length	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
len	int
)	O
;	O
return	O
len	int
;	O
}	O
o__inline__	O
int	O
strob_length	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strob_get_length	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
return	O
strob_get_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
o__inline__	O
char	O
*	O
strob_catstr	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
str	*(char)
)	O
{	O
return	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
strb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
str	*(char)
)	O
;	O
}	O
int	O
strob_vsprintf_at	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
at_offset	int
,	O
char	O
*	O
format	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
int	O
added_amount	int
=	O
0	int
;	O
int	O
up_incr	int
=	O
128	int
;	O
char	O
*	O
start	*(char)
;	O
va_list	array(struct(int,int,*(void),*(void)))
aq	array(struct(int,int,*(void),*(void)))
;	O
int	O
ret	int
;	O
int	O
len	int
;	O
char	O
*	O
oldend	*(char)
=	O
NULL	O
;	O
if	O
(	O
at_offset	int
>	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
{	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
at_offset	int
+	O
up_incr	int
)	O
;	O
}	O
do	O
{	O
if	O
(	O
oldend	*(char)
)	O
*	O
oldend	*(char)
=	O
'\0'	O
;	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
added_amount	int
)	O
;	O
start	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
at_offset	int
;	O
len	int
=	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
-	O
at_offset	int
;	O
oldend	*(char)
=	O
start	*(char)
;	O
added_amount	int
+=	O
up_incr	int
;	O
va_copy	O
(	O
aq	array(struct(int,int,*(void),*(void)))
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
ret	int
=	O
vsnprintf	(*(char),long,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
start	*(char)
,	O
len	int
,	O
format	*(char)
,	O
aq	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
aq	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
while	O
(	O
ret	int
<	O
0	int
||	O
ret	int
>=	O
len	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_vsprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
do_append	int
,	O
char	O
*	O
format	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
int	O
added_amount	int
=	O
0	int
;	O
int	O
up_incr	int
=	O
128	int
;	O
char	O
*	O
start	*(char)
;	O
va_list	array(struct(int,int,*(void),*(void)))
aq	array(struct(int,int,*(void),*(void)))
;	O
int	O
ret	int
;	O
int	O
len	int
;	O
char	O
*	O
oldend	*(char)
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
oldend	*(char)
)	O
*	O
oldend	*(char)
=	O
'\0'	O
;	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
added_amount	int
)	O
;	O
if	O
(	O
do_append	int
)	O
{	O
start	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
strlen	(*(char))->(long)
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
len	int
=	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
-	O
strlen	(*(char))->(long)
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
}	O
else	O
{	O
start	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
len	int
=	O
strob_get_reserve	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
oldend	*(char)
=	O
start	*(char)
;	O
added_amount	int
+=	O
up_incr	int
;	O
va_copy	O
(	O
aq	array(struct(int,int,*(void),*(void)))
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
ret	int
=	O
vsnprintf	(*(char),long,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
start	*(char)
,	O
len	int
,	O
format	*(char)
,	O
aq	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
aq	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
while	O
(	O
ret	int
<	O
0	int
||	O
ret	int
>=	O
len	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_snprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,long,*(char))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
do_append	int
,	O
size_t	long
len	int
,	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
int	O
old_len	int
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
if	O
(	O
len	int
<=	O
0	int
)	O
return	O
len	int
;	O
if	O
(	O
do_append	int
)	O
old_len	int
=	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
else	O
old_len	int
=	O
0	int
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
ret	int
=	O
strob_vsprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
do_append	int
,	O
format	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
strob_chr_index	(*(struct(*(char),*(char),int,int,int,char,int)),int,int)->(void)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
old_len	int
+	O
len	int
-	O
1	int
,	O
0	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
do_append	int
,	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
ret	int
=	O
strob_vsprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
do_append	int
,	O
format	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
strob_sprintf_at	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
at_offset	int
,	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
int	O
ret	int
;	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
ret	int
=	O
strob_vsprintf_at	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
at_offset	int
,	O
format	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
return	O
ret	int
;	O
}	O
