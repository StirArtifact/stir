void	O
ma_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
if	O
(	O
!	O
use_other_cc	int
)	O
ptr_cc_id	*(char)
=	O
"MA"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_GREEN_MARCH	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REUNIFICATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_PROCLAMATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
23	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mc_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MC"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MI_CAREME_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
19	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
for	O
(	O
day	int
=	O
26	int
;	O
day	int
<=	O
27	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_DEVOTE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
18	int
;	O
day	int
<=	O
19	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
md_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
auto	O
int	O
d	int
;	O
auto	O
int	O
greg_diff	*(int)
;	O
ptr_cc_id	*(char)
=	O
"MD"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1991	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
d	int
=	O
DAY_MIN	int
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
d	int
+=	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ORTHODOX_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
{	O
register	O
int	O
i	int
;	O
auto	O
int	O
d	int
;	O
auto	O
int	O
m	int
;	O
auto	O
int	O
y	int
;	O
d	int
=	O
25	int
;	O
m	int
=	O
MONTH_MAX	int
;	O
y	int
=	O
year	int
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
greg_diff	*(int)
;	O
i	int
++	O
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"MG"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VINCENT_DE_PAULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mh_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"MH"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COMPACT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FISHERMANS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MERCHANT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
9	int
-	O
1	int
]	O
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRESIDENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THANKSGIVING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mk_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
auto	O
int	O
d	int
;	O
auto	O
int	O
greg_diff	*(int)
;	O
ptr_cc_id	*(char)
=	O
"MK"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
d	int
=	O
DAY_MIN	int
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
d	int
+=	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ORTHODOX_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
{	O
register	O
int	O
i	int
;	O
auto	O
int	O
m	int
;	O
auto	O
int	O
y	int
;	O
d	int
=	O
24	int
;	O
m	int
=	O
MONTH_MAX	int
;	O
y	int
=	O
year	int
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
greg_diff	*(int)
;	O
i	int
++	O
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
20	int
,	O
7	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_ELIAHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
11	int
,	O
5	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KONSTANTIN_AND_METHODIUS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1992	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ml_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"ML"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMY_COUP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OAU_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mn_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MN"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
11	int
;	O
day	int
<=	O
13	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mo_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"MO"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CAMOES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JEAN_BAPTISTE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1948	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mp_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"MP"	*(char)
;	O
observe_us_hdy	int
=	O
SASA_SUSU	int
;	O
us_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CITIZENSHIP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COMMONWEALTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COMPACT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mq_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
ptr_cc_id	*(char)
=	O
"MQ"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_WEDNESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
5	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
46	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SLAVE_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTOR_SCHOELCHER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1917	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"MR"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OAU_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ms_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MS"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
23	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PATRICKS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1966	int
)	O
{	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mt_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"MT"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OUR_LADY_OF_VICTORIES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PAULS_SHIPSWRECK	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
4	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
13	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1918	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1943	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
3	int
-	O
1	int
]	O
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MU"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHER_LEVAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
9	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mv_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MV"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
26	int
;	O
day	int
<=	O
27	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
11	int
;	O
day	int
<=	O
12	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"MW"	*(char)
;	O
day	int
=	O
15	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_J_CHILEMBWE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
14	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
6	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
3	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
3	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
6	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
7	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
my_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MY"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
8	int
-	O
1	int
]	O
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TEACHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
mz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"MZ"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAPUTO_CITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
10	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FAMILY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
na_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NA"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CASSINGA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_GOODWILL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FAMILY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HUMAN_RIGHTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OAU_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nc_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NC"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
fr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
ne_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NE"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMY_COUP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nf_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"NF"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
8	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
6	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOUNTY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
6	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
3	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_FOUNDATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ng_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NG"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ni_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NI"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SAN_JACINTO_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nm_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NM"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DRY_SEASON_CELEBRATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FARMERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_UNION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
no_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
if	O
(	O
!	O
use_other_cc	int
)	O
ptr_cc_id	*(char)
=	O
"NO"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LAPP_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
6	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_UNION_WITH_SWEDEN_DISSOLVED	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
7	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_OLAVS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
29	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_OLAVS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
28	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_WEDNESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
21	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMERS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
23	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PALM_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
DAY_MAX	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
4	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_UNITED_NATIONS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
np_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NP"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NR"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANGAM_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MIN	int
-	O
1	int
]	O
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"NU"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
nz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
om_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"OM"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SULTAN_QABOOS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"PA"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DIA_DE_LOS_MAESTROS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DIA_DEL_PADRE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLON_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
5	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PANAMA_CITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_WEDNESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
46	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
2	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SEPARATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pe_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"PE"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BATTLE_OF_ANGAMOS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
28	int
;	O
day	int
<=	O
29	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_ROSE_OF_LIMA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pf_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PF"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
fr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INTERNAL_AUTONOMY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MISSIONARY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PG"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_MICHAELS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
29	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
23	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ph_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PH"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PEOPLE_POWER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
22	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BATAAN_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ELECTIONS_FOR_NATIONAL_ASSEMBLY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MANILA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PHILIPPINE_USA_FRIENDSHIP	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
4	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
11	int
-	O
1	int
]	O
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RIZAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
8	int
-	O
1	int
]	O
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pk_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PK"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DEATH_OF_QAID_I_AZAM	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_QAID_I_AZAMS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DEFENDERS_OF_MOTHERLAND_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
23	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pl_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PL"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
23	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
26	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VALENTINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
(	O
year	int
>	O
1944	int
)	O
&&	O
(	O
year	int
<	O
1990	int
)	O
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>	O
1989	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pm_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PM"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
fr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pn_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"PN"	*(char)
;	O
gb_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
28	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOUNTY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PR"	*(char)
;	O
observe_us_hdy	int
=	O
SASA_SUSU	int
;	O
us_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_E_HOSTOS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_J_BARBOSAS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_J_DIEGOS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_L_RIVERAS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DISCOVERY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SLAVE_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JEAN_BAPTISTE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PW"	*(char)
;	O
observe_us_hdy	int
=	O
SASA_SUSU	int
;	O
us_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
py_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PY"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASUNCION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOQUERON_BATTLE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
16	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
qa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"QA"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_AMIRS_SUCCESSION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
re_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"RE"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
fr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
ro_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"RO"	*(char)
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
NULL	O
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
rw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"RW"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KAMARAMPAKA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_MOURNING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SA"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sb_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"SB"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sc_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SC"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sd_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SD"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PEOPLES_UPRISING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
se_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"SE"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_CANUTES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
13	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_NAME_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
28	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_CROWN_PRINCESSES_NAME_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
12	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EVE_OF_EPIPHANY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
5	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WHITSUN_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
+	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_CROWN_PRINCESSES_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_NAME_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GUSTAVUS_ADOLPHUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
6	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NOBEL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
10	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_LUCIAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
13	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HOLY_INNOCENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
28	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_FOOLS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
31	int
,	O
10	int
,	O
year	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
31	int
,	O
10	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
6	int
)	O
{	O
if	O
(	O
i	int
<	O
6	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
-	O
1	int
)	O
;	O
else	O
day	int
+=	O
6	int
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
4	int
-	O
1	int
]	O
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ANNUNCIATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
25	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
20	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMERS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
-	O
1	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
5	int
-	O
1	int
]	O
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
6	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
23	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VALENTINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VALBORGS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
4	int
-	O
1	int
]	O
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"SG"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
day	int
=	O
25	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
9	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
8	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TEACHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sh_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"SH"	*(char)
;	O
gb_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
si_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"SI"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CULTURE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_RESISTANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1516	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REFORMATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
10	int
-	O
1	int
]	O
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sj_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SJ"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
no_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
sk_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"SK"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KONSTANTIN_AND_METHODIUS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_RESISTANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OUR_LADY_OF_SEVEN_SORROWS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sl_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SL"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sm_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SM"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REGENCY_EXCHANGE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REGENCY_EXCHANGE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_FOUNDATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1739	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_AGATA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1905	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARENGO_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1943	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sn_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SN"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONFEDERAL_AGREEMENT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
so_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SO"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
26	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SO"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
st_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"ST"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sv_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"SV"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
6	int
-	O
1	int
]	O
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GUADALUPE_VIRGINS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
12	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HOLY_WEDNESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
4	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TEACHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
22	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
4	int
;	O
day	int
<=	O
6	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TRANSFIGURATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sy_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SY"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARAB_LEAGUE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
sz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"SZ"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
