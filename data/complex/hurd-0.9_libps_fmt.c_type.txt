static	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
_fmt_create	(*(char),int,*(struct(*(struct(*`,*`,int,int,int,*`,(*`)->((*`,*`,*`)->(int)),*`,*`)),*(struct(*`,*`,*`)),*(struct))),*(*(struct(*(struct`),int,int,*(char),long,*(char),*(char)))),*(*(char)))->(int)
(	O
char	O
*	O
src	*(char)
,	O
int	O
posix	int
,	O
struct	O
ps_fmt_specs	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct))),*(struct))
*	O
fmt_specs	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct)))
,	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
char	O
*	O
*	O
err_string	*(*(char))
)	O
{	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
;	O
int	O
needs	int
=	O
0	int
;	O
int	O
fields_alloced	int
=	O
10	int
;	O
int	O
global_clr_flags	int
=	O
0	int
,	O
global_inv_flags	int
=	O
0	int
;	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
=	O
NEWVEC	()->(int)
(	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
,	O
fields_alloced	int
)	O
;	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
field	*(struct)
=	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
;	O
if	O
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
==	O
NULL	O
)	O
return	O
ENOMEM	O
;	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
=	O
NEW	()->(int)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
)	O
;	O
if	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
==	O
NULL	O
)	O
{	O
FREE	()->(int)
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
;	O
return	O
ENOMEM	O
;	O
}	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src_len	long
=	O
strlen	(*(char))->(long)
(	O
src	*(char)
)	O
+	O
1	int
;	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
src	*(char)
)	O
;	O
if	O
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
==	O
NULL	O
)	O
{	O
FREE	()->(int)
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
;	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
)	O
;	O
return	O
ENOMEM	O
;	O
}	O
src	*(char)
=	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
;	O
while	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
)	O
{	O
char	O
*	O
start	*(char)
=	O
src	*(char)
;	O
if	O
(	O
field	*(struct)
-	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
==	O
fields_alloced	int
)	O
{	O
int	O
offs	int
=	O
field	*(struct)
-	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
;	O
fields_alloced	int
+=	O
10	int
;	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
=	O
GROWVEC	()->(int)
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
,	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
,	O
fields_alloced	int
)	O
;	O
if	O
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
==	O
NULL	O
)	O
{	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
)	O
;	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
)	O
;	O
return	O
ENOMEM	O
;	O
}	O
field	*(struct)
=	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
+	O
offs	int
;	O
}	O
if	O
(	O
posix	int
)	O
{	O
field	*(struct)
->	O
pfx	*(char)
=	O
" "	*(char)
;	O
field	*(struct)
->	O
pfx_len	int
=	O
1	int
;	O
}	O
else	O
{	O
field	*(struct)
->	O
pfx	*(char)
=	O
src	*(char)
;	O
while	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
&&	O
*	O
src	*(char)
!=	O
'%'	O
)	O
src	*(char)
++	O
;	O
field	*(struct)
->	O
pfx_len	int
=	O
src	*(char)
-	O
field	*(struct)
->	O
pfx	*(char)
;	O
}	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
=	O
NULL	O
;	O
field	*(struct)
->	O
title	*(char)
=	O
NULL	O
;	O
field	*(struct)
->	O
width	int
=	O
0	int
;	O
if	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
)	O
{	O
char	O
*	O
name	*(char)
;	O
int	O
sign	int
=	O
1	int
;	O
int	O
explicit_width	int
=	O
0	int
,	O
explicit_precision	int
=	O
0	int
;	O
int	O
quoted_name	int
=	O
0	int
;	O
int	O
clr_flags	int
=	O
global_clr_flags	int
,	O
inv_flags	int
=	O
global_inv_flags	int
;	O
if	O
(	O
!	O
posix	int
)	O
src	*(char)
++	O
;	O
while	O
(	O
*	O
src	*(char)
==	O
'@'	O
||	O
*	O
src	*(char)
==	O
':'	O
||	O
*	O
src	*(char)
==	O
'!'	O
||	O
*	O
src	*(char)
==	O
'?'	O
||	O
*	O
src	*(char)
==	O
'^'	O
)	O
{	O
if	O
(	O
*	O
src	*(char)
==	O
'@'	O
)	O
inv_flags	int
^=	O
PS_FMT_FIELD_AT_MOD	int
;	O
else	O
if	O
(	O
*	O
src	*(char)
==	O
':'	O
)	O
inv_flags	int
^=	O
PS_FMT_FIELD_COLON_MOD	int
;	O
else	O
if	O
(	O
*	O
src	*(char)
==	O
'^'	O
)	O
inv_flags	int
^=	O
PS_FMT_FIELD_UPCASE_TITLE	int
;	O
else	O
if	O
(	O
*	O
src	*(char)
==	O
'!'	O
)	O
{	O
clr_flags	int
|=	O
PS_FMT_FIELD_KEEP	int
;	O
inv_flags	int
|=	O
PS_FMT_FIELD_KEEP	int
;	O
}	O
else	O
if	O
(	O
*	O
src	*(char)
==	O
'?'	O
)	O
{	O
clr_flags	int
|=	O
PS_FMT_FIELD_KEEP	int
;	O
inv_flags	int
&=	O
~	O
PS_FMT_FIELD_KEEP	int
;	O
}	O
src	*(char)
++	O
;	O
}	O
field	*(struct)
->	O
width	int
=	O
0	int
;	O
if	O
(	O
*	O
src	*(char)
==	O
'-'	O
)	O
sign	int
=	O
-	O
1	int
,	O
src	*(char)
++	O
;	O
while	O
(	O
isdigit	(int)->(int)
(	O
*	O
src	*(char)
)	O
)	O
{	O
field	*(struct)
->	O
width	int
=	O
field	*(struct)
->	O
width	int
*	O
10	int
+	O
(	O
*	O
src	*(char)
++	O
-	O
'0'	O
)	O
;	O
explicit_width	int
=	O
TRUE	O
;	O
}	O
field	*(struct)
->	O
precision	long
=	O
0	int
;	O
if	O
(	O
*	O
src	*(char)
==	O
'.'	O
)	O
while	O
(	O
isdigit	(int)->(int)
(	O
*	O
++	O
src	*(char)
)	O
)	O
{	O
field	*(struct)
->	O
precision	long
=	O
field	*(struct)
->	O
precision	long
*	O
10	int
+	O
(	O
*	O
src	*(char)
-	O
'0'	O
)	O
;	O
explicit_precision	int
=	O
1	int
;	O
}	O
if	O
(	O
*	O
src	*(char)
==	O
'{'	O
)	O
{	O
src	*(char)
++	O
;	O
quoted_name	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
!	O
isalnum	(int)->(int)
(	O
*	O
src	*(char)
)	O
&&	O
*	O
src	*(char)
!=	O
'_'	O
)	O
{	O
if	O
(	O
src	*(char)
==	O
start	*(char)
)	O
{	O
if	O
(	O
err_string	*(*(char))
)	O
asprintf	(*(*(char)),*(char))->(int)
(	O
err_string	*(*(char))
,	O
"%s: Unknown format spec"	*(char)
,	O
src	*(char)
)	O
;	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
)	O
;	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
)	O
;	O
FREE	()->(int)
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
;	O
return	O
EINVAL	O
;	O
}	O
global_clr_flags	int
=	O
clr_flags	int
;	O
global_inv_flags	int
=	O
inv_flags	int
;	O
continue	O
;	O
}	O
name	*(char)
=	O
src	*(char)
;	O
if	O
(	O
posix	int
)	O
{	O
int	O
stop	int
=	O
quoted_name	int
?	O
'}'	O
:	O
','	O
;	O
while	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
&&	O
*	O
src	*(char)
!=	O
stop	int
&&	O
*	O
src	*(char)
!=	O
'='	O
)	O
src	*(char)
++	O
;	O
if	O
(	O
*	O
src	*(char)
==	O
'='	O
)	O
{	O
*	O
src	*(char)
++	O
=	O
'\0'	O
;	O
field	*(struct)
->	O
title	*(char)
=	O
src	*(char)
;	O
while	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
&&	O
*	O
src	*(char)
!=	O
stop	int
)	O
src	*(char)
++	O
;	O
}	O
if	O
(	O
*	O
src	*(char)
)	O
*	O
src	*(char)
++	O
=	O
'\0'	O
;	O
}	O
else	O
{	O
while	O
(	O
quoted_name	int
?	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
&&	O
*	O
src	*(char)
!=	O
'}'	O
&&	O
*	O
src	*(char)
!=	O
':'	O
)	O
:	O
(	O
isalnum	(int)->(int)
(	O
*	O
src	*(char)
)	O
||	O
*	O
src	*(char)
==	O
'_'	O
)	O
)	O
src	*(char)
++	O
;	O
if	O
(	O
quoted_name	int
&&	O
*	O
src	*(char)
==	O
':'	O
)	O
{	O
*	O
src	*(char)
++	O
=	O
'\0'	O
;	O
field	*(struct)
->	O
title	*(char)
=	O
src	*(char)
;	O
while	O
(	O
*	O
src	*(char)
!=	O
'\0'	O
&&	O
*	O
src	*(char)
!=	O
'}'	O
)	O
src	*(char)
++	O
;	O
}	O
bcopy	(*(void),*(void),long)->(void)
(	O
name	*(char)
,	O
name	*(char)
-	O
1	int
,	O
src	*(char)
-	O
name	*(char)
)	O
;	O
name	*(char)
--	O
;	O
if	O
(	O
field	*(struct)
->	O
title	*(char)
)	O
field	*(struct)
->	O
title	*(char)
--	O
;	O
src	*(char)
[	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
=	O
ps_fmt_specs_find	(*(struct(*(struct(*`,*`,int,int,int,*`,(*`)->((*`,*`,*`)->(int)),*`,*`)),*(struct(*`,*`,*`)),*(struct))),*(char))->(*(struct(*(char),*(char),int,int,int,*(struct(*`,int,*`)),(*(int))->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))))
(	O
fmt_specs	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct)))
,	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
)	O
{	O
if	O
(	O
err_string	*(*(char))
)	O
asprintf	(*(*(char)),*(char))->(int)
(	O
err_string	*(*(char))
,	O
"%s: Unknown format spec"	*(char)
,	O
name	*(char)
)	O
;	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
)	O
;	O
FREE	()->(int)
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
;	O
FREE	()->(int)
(	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
)	O
;	O
return	O
EINVAL	O
;	O
}	O
if	O
(	O
!	O
field	*(struct)
->	O
title	*(char)
)	O
{	O
if	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
title	*(char)
)	O
field	*(struct)
->	O
title	*(char)
=	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
title	*(char)
;	O
else	O
field	*(struct)
->	O
title	*(char)
=	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
name	*(char)
;	O
}	O
needs	int
|=	O
ps_getter_needs	O
(	O
ps_fmt_spec_getter	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
)	O
)	O
;	O
if	O
(	O
!	O
explicit_width	int
)	O
field	*(struct)
->	O
width	int
=	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
width	int
;	O
if	O
(	O
!	O
explicit_precision	int
)	O
field	*(struct)
->	O
precision	long
=	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
precision	long
;	O
field	*(struct)
->	O
flags	int
=	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
flags	int
&	O
~	O
clr_flags	int
)	O
^	O
inv_flags	int
;	O
if	O
(	O
quoted_name	int
&&	O
*	O
src	*(char)
==	O
'}'	O
)	O
src	*(char)
++	O
;	O
if	O
(	O
posix	int
)	O
{	O
if	O
(	O
*	O
src	*(char)
==	O
','	O
)	O
src	*(char)
++	O
;	O
while	O
(	O
isspace	(int)->(int)
(	O
*	O
src	*(char)
)	O
)	O
src	*(char)
++	O
;	O
}	O
field	*(struct)
->	O
width	int
*=	O
sign	int
;	O
{	O
int	O
width	int
=	O
field	*(struct)
->	O
width	int
;	O
int	O
tlen	int
=	O
strlen	(*(char))->(long)
(	O
field	*(struct)
->	O
title	*(char)
)	O
;	O
if	O
(	O
width	int
!=	O
0	int
&&	O
tlen	int
>	O
ABS	()->(int)
(	O
width	int
)	O
)	O
field	*(struct)
->	O
width	int
=	O
(	O
width	int
>	O
0	int
?	O
tlen	int
:	O
-	O
tlen	int
)	O
;	O
}	O
}	O
field	*(struct)
++	O
;	O
}	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
=	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
;	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
num_fields	int
=	O
field	*(struct)
-	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
;	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
needs	int
=	O
needs	int
;	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
inapp	int
=	O
posix	int
?	O
"-"	*(char)
:	O
0	int
;	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
error	*(char)
=	O
"?"	*(char)
;	O
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
=	O
new_fmt	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
;	O
return	O
0	int
;	O
}	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
ps_fmt_create	(*(char),int,*(struct(*(struct(*`,*`,int,int,int,*`,(*`)->((*`,*`,*`)->(int)),*`,*`)),*(struct(*`,*`,*`)),*(struct))),*(*(struct(*(struct`),int,int,*(char),long,*(char),*(char)))))->(int)
(	O
char	O
*	O
src	*(char)
,	O
int	O
posix	int
,	O
struct	O
ps_fmt_specs	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct))),*(struct))
*	O
fmt_specs	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct)))
,	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
{	O
return	O
_fmt_create	(*(char),int,*(struct(*(struct(*`,*`,int,int,int,*`,(*`)->((*`,*`,*`)->(int)),*`,*`)),*(struct(*`,*`,*`)),*(struct))),*(*(struct(*(struct`),int,int,*(char),long,*(char),*(char)))),*(*(char)))->(int)
(	O
src	*(char)
,	O
posix	int
,	O
fmt_specs	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct)))
,	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
0	int
)	O
;	O
}	O
void	O
ps_fmt_creation_error	(*(char),int,*(struct(*(struct(*`,*`,int,int,int,*`,(*`)->((*`,*`,*`)->(int)),*`,*`)),*(struct(*`,*`,*`)),*(struct))),*(*(char)))->(void)
(	O
char	O
*	O
src	*(char)
,	O
int	O
posix	int
,	O
struct	O
ps_fmt_specs	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct))),*(struct))
*	O
fmt_specs	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct)))
,	O
char	O
*	O
*	O
error	*(char)
)	O
{	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
;	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
err	O
=	O
_fmt_create	(*(char),int,*(struct(*(struct(*`,*`,int,int,int,*`,(*`)->((*`,*`,*`)->(int)),*`,*`)),*(struct(*`,*`,*`)),*(struct))),*(*(struct(*(struct`),int,int,*(char),long,*(char),*(char)))),*(*(char)))->(int)
(	O
src	*(char)
,	O
posix	int
,	O
fmt_specs	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(struct`),*(struct`),*(struct`))),*(struct)))
,	O
&	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
error	*(char)
)	O
;	O
if	O
(	O
err	O
!=	O
EINVAL	O
)	O
asprintf	(*(*(char)),*(char))->(int)
(	O
error	*(char)
,	O
"%s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
err	O
)	O
)	O
;	O
if	O
(	O
!	O
err	O
)	O
ps_fmt_free	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))->(void)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
}	O
void	O
ps_fmt_free	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))->(void)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
{	O
FREE	()->(int)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
src	*(char)
)	O
;	O
FREE	()->(int)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
;	O
FREE	()->(int)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
}	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
ps_fmt_clone	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),*(*(struct(*(struct`),int,int,*(char),long,*(char),*(char)))))->(int)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
*	O
copy	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
{	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
=	O
NEW	()->(int)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
)	O
;	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
=	O
NEWVEC	()->(int)
(	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
,	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
num_fields	int
)	O
;	O
char	O
*	O
src	*(char)
=	O
malloc	(long)->(*(void))
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
src_len	long
)	O
;	O
if	O
(	O
!	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
||	O
!	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
||	O
!	O
src	*(char)
)	O
{	O
if	O
(	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
)	O
free	(*(void))->(void)
(	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
)	O
;	O
if	O
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
free	(*(void))->(void)
(	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
;	O
if	O
(	O
src	*(char)
)	O
free	(*(void))->(void)
(	O
src	*(char)
)	O
;	O
return	O
ENOMEM	O
;	O
}	O
bcopy	(*(void),*(void),long)->(void)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
src	*(char)
,	O
src	*(char)
,	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
src_len	long
)	O
;	O
bcopy	(*(void),*(void),long)->(void)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
,	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
,	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
num_fields	int
*	O
sizeof	O
(	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
)	O
)	O
;	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
=	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
;	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
num_fields	int
=	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
num_fields	int
;	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src	*(char)
=	O
src	*(char)
;	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
src_len	long
=	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
src_len	long
;	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
inapp	int
=	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
inapp	int
;	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
->	O
error	*(char)
=	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
error	*(char)
;	O
*	O
copy	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
=	O
new	*(struct(*(struct(*(struct`),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char)))
;	O
return	O
0	int
;	O
}	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
ps_fmt_write_titles	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)))->(int)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
struct	O
ps_stream	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,int)
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
err	O
=	O
0	int
;	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
field	*(struct)
=	O
ps_fmt_fields	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
int	O
left	int
=	O
ps_fmt_num_fields	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
while	O
(	O
left	int
--	O
>	O
0	int
&&	O
!	O
err	O
)	O
{	O
const	O
char	O
*	O
pfx	*(char)
=	O
ps_fmt_field_prefix	O
(	O
field	*(struct)
)	O
;	O
int	O
pfx_len	int
=	O
ps_fmt_field_prefix_length	O
(	O
field	*(struct)
)	O
;	O
if	O
(	O
pfx_len	int
>	O
0	int
)	O
err	O
=	O
ps_stream_write	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)),*(char),int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
pfx	*(char)
,	O
pfx_len	int
)	O
;	O
if	O
(	O
ps_fmt_field_fmt_spec	O
(	O
field	*(struct)
)	O
!=	O
NULL	O
&&	O
!	O
err	O
)	O
{	O
const	O
char	O
*	O
title	*(char)
=	O
ps_fmt_field_title	O
(	O
field	*(struct)
)	O
?	O
:	O
"??"	*(char)
;	O
int	O
width	int
=	O
ps_fmt_field_width	O
(	O
field	*(struct)
)	O
;	O
if	O
(	O
field	*(struct)
->	O
flags	int
&	O
PS_FMT_FIELD_UPCASE_TITLE	int
)	O
{	O
int	O
len	int
=	O
strlen	(*(char))->(long)
(	O
title	*(char)
)	O
,	O
i	int
;	O
char	O
upcase_title	O
[	O
len	int
+	O
1	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
upcase_title	O
[	O
i	int
]	O
=	O
toupper	(int)->(int)
(	O
title	*(char)
[	O
i	int
]	O
)	O
;	O
upcase_title	O
[	O
len	int
]	O
=	O
'\0'	O
;	O
err	O
=	O
ps_stream_write_field	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)),*(char),int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
upcase_title	O
,	O
width	int
)	O
;	O
}	O
else	O
err	O
=	O
ps_stream_write_field	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)),*(char),int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
title	*(char)
,	O
width	int
)	O
;	O
}	O
field	*(struct)
++	O
;	O
}	O
return	O
err	O
;	O
}	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
ps_fmt_write_proc_stat	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),*(struct(*(struct(int,struct`,struct`,struct`,struct`,*`)),int,int,int,int,*(struct(*`,int,int,int,int,*`,int,int,int,int,*`,int,int,int,int,int,*`,int,*`,long,int,int,*`,int,*`,long,int,int,long,int,int,int,int,int,int,int,int,*`,*`,*`,long,int)),int,int,int,int,*(struct(int,int,int,int,int,int,int,int,int,struct`,struct`,array(struct(int,int,struct,struct)))),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct(int,enum(int,int,int),struct`,*`)),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct(int,*`,enum(int,int,int),*`,int)),*(void),*(char),long,int)),*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)))->(int)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
struct	O
proc_stat	struct(*(struct(int,struct,struct,struct,struct,*(struct))),int,int,int,int,*(struct(*(struct(int,struct,struct,struct,struct,*(struct`))),int,int,int,int,*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),int,int,int,int,*(struct(int,int,int,int,int,int,int,int,int,struct,struct,array(struct(int,int,struct,struct)))),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct(int,enum(int,int,int),struct,*(char))),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct(int,*(char),enum(int,int,int),*(char),int)),*(void),*(char),long,int)),int,int,int,int,*(struct(int,int,int,int,int,int,int,int,int,struct,struct,array(struct(int,int,struct,struct)))),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct(int,enum(int,int,int),struct,*(char))),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct(int,*(char),enum(int,int,int),*(char),int)),*(void),*(char),long,int)
*	O
ps	*(*(struct))
,	O
struct	O
ps_stream	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),int,int)
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
error_t	(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int))
err	O
=	O
0	int
;	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
field	*(struct)
=	O
ps_fmt_fields	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
int	O
nfields	int
=	O
ps_fmt_num_fields	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
ps_flags_t	int
have	int
=	O
ps	*(*(struct))
->	O
flags	int
;	O
ps_flags_t	int
inapp	int
=	O
ps	*(*(struct))
->	O
inapp	int
;	O
while	O
(	O
nfields	int
--	O
>	O
0	int
&&	O
!	O
err	O
)	O
{	O
const	O
struct	O
ps_fmt_spec	struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct),*(struct(*(struct`),int,int)))->(int)),*((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct(*(char),int,*(()->(void)))))->(int)),*((*(struct(*(struct`),int,int,int,int,*(struct`),int,int,int,int,*(struct`),int,int,int,int,int,*(char),int,*(char),long,int,int,*(struct`),int,*(char),long,int,int,long,int,int,int,int,int,int,int,int,*(struct`),*(void),*(char),long,int)),*(struct(*(char),int,*(()->(void)))))->(int)))
*	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
=	O
ps_fmt_field_fmt_spec	O
(	O
field	*(struct)
)	O
;	O
const	O
char	O
*	O
pfx	*(char)
=	O
ps_fmt_field_prefix	O
(	O
field	*(struct)
)	O
;	O
int	O
pfx_len	int
=	O
ps_fmt_field_prefix_length	O
(	O
field	*(struct)
)	O
;	O
if	O
(	O
pfx_len	int
>	O
0	int
)	O
err	O
=	O
ps_stream_write	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)),*(char),int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
pfx	*(char)
,	O
pfx_len	int
)	O
;	O
if	O
(	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
!=	O
NULL	O
&&	O
!	O
err	O
)	O
{	O
ps_flags_t	int
need	int
=	O
ps_getter_needs	O
(	O
ps_fmt_spec_getter	O
(	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
)	O
)	O
;	O
if	O
(	O
(	O
need	int
&	O
have	int
)	O
==	O
need	int
)	O
err	O
=	O
(	O
*	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
output_fn	*(int)
)	O
(	O
ps	*(*(struct))
,	O
field	*(struct)
,	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
need	int
&	O
~	O
have	int
&	O
inapp	int
)	O
err	O
=	O
ps_stream_write_field	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)),*(char),int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
inapp	int
?	O
:	O
""	*(char)
,	O
field	*(struct)
->	O
width	int
)	O
;	O
else	O
err	O
=	O
ps_stream_write_field	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int)),*(char),int)->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
error	*(char)
?	O
:	O
""	*(char)
,	O
field	*(struct)
->	O
width	int
)	O
;	O
}	O
field	*(struct)
++	O
;	O
}	O
return	O
err	O
;	O
}	O
void	O
ps_fmt_squash	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),*((*(struct(*`,*`,int,int,int,int,*`)))->(int)))->(void)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
int	O
(	O
*	O
fn	*(()->(void))
)	O
(	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
field	*(struct)
)	O
)	O
{	O
int	O
nfields	int
=	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
num_fields	int
;	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
=	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
,	O
*	O
field	*(struct)
=	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
;	O
ps_flags_t	int
need	int
=	O
0	int
;	O
while	O
(	O
(	O
field	*(struct)
-	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
<	O
nfields	int
)	O
if	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
!=	O
NULL	O
&&	O
(	O
*	O
fn	*(()->(void))
)	O
(	O
field	*(struct)
)	O
)	O
{	O
const	O
char	O
*	O
beg_pfx	*(char)
=	O
field	*(struct)
->	O
pfx	*(char)
;	O
int	O
beg_pfx_len	int
=	O
field	*(struct)
->	O
pfx_len	int
;	O
nfields	int
--	O
;	O
if	O
(	O
nfields	int
>	O
0	int
)	O
bcopy	(*(void),*(void),long)->(void)
(	O
field	*(struct)
+	O
1	int
,	O
field	*(struct)
,	O
(	O
nfields	int
-	O
(	O
field	*(struct)
-	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
)	O
*	O
sizeof	O
*	O
field	*(struct)
)	O
;	O
if	O
(	O
field	*(struct)
==	O
fields	*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char)))
)	O
{	O
if	O
(	O
nfields	int
==	O
0	int
)	O
{	O
nfields	int
++	O
;	O
field	*(struct)
->	O
pfx	*(char)
=	O
beg_pfx	*(char)
;	O
field	*(struct)
->	O
pfx_len	int
=	O
beg_pfx_len	int
;	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
==	O
NULL	O
)	O
{	O
field	*(struct)
->	O
pfx	*(char)
-=	O
beg_pfx_len	int
;	O
field	*(struct)
->	O
pfx_len	int
+=	O
beg_pfx_len	int
;	O
bcopy	(*(void),*(void),long)->(void)
(	O
beg_pfx	*(char)
,	O
(	O
char	O
*	O
)	O
field	*(struct)
->	O
pfx	*(char)
,	O
beg_pfx_len	int
)	O
;	O
}	O
else	O
{	O
field	*(struct)
->	O
pfx	*(char)
=	O
beg_pfx	*(char)
;	O
field	*(struct)
->	O
pfx_len	int
=	O
beg_pfx_len	int
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
)	O
need	int
|=	O
ps_getter_needs	O
(	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
getter	*(struct(*(char),int,*(()->(void))))
)	O
;	O
field	*(struct)
++	O
;	O
}	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
num_fields	int
=	O
nfields	int
;	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
->	O
needs	int
=	O
need	int
;	O
}	O
void	O
ps_fmt_squash_flags	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),int)->(void)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
ps_flags_t	int
flags	int
)	O
{	O
int	O
squashable_field	O
(	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
field	*(struct)
)	O
{	O
return	O
field	*(struct)
->	O
spec	*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int))))
->	O
getter	*(struct(*(char),int,*(()->(void))))
->	O
needs	int
&	O
flags	int
;	O
}	O
ps_fmt_squash	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),*((*(struct(*`,*`,int,int,int,int,*`)))->(int)))->(void)
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
squashable_field	O
)	O
;	O
}	O
void	O
ps_fmt_set_output_width	(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))),int)->(void)
(	O
struct	O
ps_fmt	struct(*(struct(*(struct(*(char),*(char),int,int,int,*(struct`),(*`)->((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char),int,int,int,int,*(char))),int,int,*(char),long,*(char),*(char))
*	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
,	O
int	O
width	int
)	O
{	O
struct	O
ps_fmt_field	struct(*(struct(*(char),*(char),int,int,int,*(struct(*(char),int,*(()->(void)))),(*(int))->((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`),*(struct`))->(int)),*((*(struct`),*(struct`))->(int)))),*(char),int,int,int,int,*(char))
*	O
field	*(struct)
=	O
ps_fmt_fields	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
int	O
nfields	int
=	O
ps_fmt_num_fields	O
(	O
fmt	*(*(struct(*(struct(*`,*`,int,int,int,int,*`)),int,int,*(char),long,*(char),*(char))))
)	O
;	O
while	O
(	O
--	O
nfields	int
>	O
0	int
)	O
{	O
int	O
fw	int
=	O
field	*(struct)
->	O
width	int
;	O
width	int
-=	O
field	*(struct)
->	O
pfx_len	int
+	O
(	O
fw	int
<	O
0	int
?	O
-	O
fw	int
:	O
fw	int
)	O
;	O
field	*(struct)
++	O
;	O
}	O
if	O
(	O
nfields	int
==	O
0	int
&&	O
field	*(struct)
->	O
width	int
==	O
0	int
&&	O
width	int
>	O
0	int
)	O
field	*(struct)
->	O
width	int
=	O
width	int
-	O
field	*(struct)
->	O
pfx_len	int
-	O
1	int
;	O
}	O
