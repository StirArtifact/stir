const	O
char	O
version_etc_copyright	array(char)
[	O
]	O
=	O
"Copyright 2011-%s %d Simon Josefsson, Tim Ruehsen."	*(char)
;	O
static	O
void	O
usage	(int)->(void)
(	O
int	O
status	int
)	O
{	O
if	O
(	O
status	int
!=	O
EXIT_SUCCESS	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Try `%s --help' for more information.\n"	*(char)
)	O
,	O
program_name	*(char)
)	O
;	O
else	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Usage: %s [OPTION]... [STRINGS]...\n"	*(char)
)	O
,	O
program_name	*(char)
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"Internationalized Domain Name (IDNA2008) convert STRINGS, or standard input.\n\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"Command line interface to the Libidn2 implementation of IDNA2008.\n\nAll strings are expected to be encoded in the locale charset.\n\nTo process a string that starts with `-', for example `-foo', use `--'\nto signal the end of parameters, as in `idn2 --quiet -- -foo'.\n\nMandatory arguments to long options are mandatory for short options too.\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -h, --help                Print help and exit\n  -V, --version             Print version and exit\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -d, --decode              Decode (punycode) domain name\n  -l, --lookup              Lookup domain name (default)\n  -r, --register            Register label\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -T, --tr46t               Enable TR46 transitional processing\n  -N, --tr46nt              Enable TR46 non-transitional processing\n      --no-tr46             Disable TR46 processing\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"      --usestd3asciirules   Enable STD3 ASCII rules\n      --no-alabelroundtrip  Disable ALabel rountrip for lookups\n      --debug               Print debugging information\n      --quiet               Silent operation\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
emit_bug_reporting_address	()->(void)
(	O
)	O
;	O
}	O
exit	(int)->(void)
(	O
status	int
)	O
;	O
}	O
static	O
void	O
hexdump	(*(char),*(char))->(void)
(	O
const	O
char	O
*	O
prefix	*(char)
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
uint8_t	char
*	O
u8	*(char)
;	O
uint32_t	int
*	O
u32	*(int)
=	O
NULL	O
;	O
size_t	long
u32len	long
;	O
size_t	long
i	long
;	O
const	O
char	O
*	O
encoding	*(char)
=	O
locale_charset	()->(*(char))
(	O
)	O
;	O
u8	*(char)
=	O
u8_strconv_from_encoding	(*(char),*(char),enum(int,int,int))->(*(char))
(	O
str	*(char)
,	O
encoding	*(char)
,	O
iconveh_error	int
)	O
;	O
if	O
(	O
u8	*(char)
)	O
u32	*(int)
=	O
u8_to_u32	(*(char),long,*(int),*(long))->(*(int))
(	O
u8	*(char)
,	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
u8	*(char)
)	O
,	O
NULL	O
,	O
&	O
u32len	long
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
i	long
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s[%lu] = 0x%02x\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
unsigned	O
long	O
)	O
i	long
,	O
(	O
unsigned	O
)	O
(	O
str	*(char)
[	O
i	long
]	O
&	O
0xFF	int
)	O
)	O
;	O
if	O
(	O
u8	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
(	O
char	O
*	O
)	O
u8	*(char)
)	O
!=	O
0	int
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
strlen	(*(char))->(long)
(	O
(	O
char	O
*	O
)	O
u8	*(char)
)	O
;	O
i	long
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"UTF-8 %s[%lu] = 0x%02x\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
unsigned	O
long	O
)	O
i	long
,	O
u8	*(char)
[	O
i	long
]	O
&	O
0xFF	int
)	O
;	O
if	O
(	O
u8	*(char)
&&	O
u32	*(int)
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
u32len	long
;	O
i	long
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"UCS-4 %s[%lu] = U+%04x\n"	*(char)
,	O
prefix	*(char)
,	O
(	O
unsigned	O
long	O
)	O
i	long
,	O
u32	*(int)
[	O
i	long
]	O
)	O
;	O
}	O
static	O
struct	O
gengetopt_args_info	struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int)
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
;	O
static	O
void	O
process_input	(*(char),int)->(void)
(	O
char	O
*	O
readbuf	*(char)
,	O
int	O
flags	int
)	O
{	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
readbuf	*(char)
)	O
;	O
char	O
*	O
output	*(char)
;	O
const	O
char	O
*	O
tag	*(char)
;	O
int	O
rc	int
;	O
if	O
(	O
len	long
&&	O
readbuf	*(char)
[	O
len	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
readbuf	*(char)
[	O
len	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
readbuf	*(char)
,	O
"show w"	*(char)
)	O
==	O
0	int
)	O
{	O
puts	(*(char))->(int)
(	O
WARRANTY	O
)	O
;	O
return	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
readbuf	*(char)
,	O
"show c"	*(char)
)	O
==	O
0	int
)	O
{	O
puts	(*(char))->(int)
(	O
CONDITIONS	O
)	O
;	O
return	O
;	O
}	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
debug_given	int
)	O
hexdump	(*(char),*(char))->(void)
(	O
"input"	*(char)
,	O
readbuf	*(char)
)	O
;	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
register_given	int
)	O
{	O
rc	int
=	O
idn2_register_ul	(*(char),*(char),*(*(char)),int)->(int)
(	O
readbuf	*(char)
,	O
NULL	O
,	O
&	O
output	*(char)
,	O
flags	int
)	O
;	O
tag	*(char)
=	O
"register"	*(char)
;	O
}	O
else	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
decode_given	int
)	O
{	O
rc	int
=	O
idn2_to_unicode_lzlz	(*(char),*(*(char)),int)->(int)
(	O
readbuf	*(char)
,	O
&	O
output	*(char)
,	O
0	int
)	O
;	O
tag	*(char)
=	O
"decode"	*(char)
;	O
}	O
else	O
{	O
rc	int
=	O
idn2_to_ascii_lz	(*(char),*(*(char)),int)->(int)
(	O
readbuf	*(char)
,	O
&	O
output	*(char)
,	O
flags	int
)	O
;	O
tag	*(char)
=	O
"toAscii"	*(char)
;	O
}	O
if	O
(	O
rc	int
==	O
IDN2_OK	int
)	O
{	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
debug_given	int
)	O
hexdump	(*(char),*(char))->(void)
(	O
"output"	*(char)
,	O
readbuf	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s\n"	*(char)
,	O
output	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
output	*(char)
)	O
;	O
}	O
else	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
"%s: %s"	*(char)
,	O
tag	*(char)
,	O
idn2_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	*(*(char))
[	O
]	O
)	O
{	O
unsigned	O
cmdn	int
;	O
int	O
flags	int
=	O
IDN2_NONTRANSITIONAL	int
;	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
""	*(char)
)	O
;	O
set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
bindtextdomain	(*(char),*(char))->(*(char))
(	O
PACKAGE	*(char)
,	O
LOCALEDIR	O
)	O
;	O
textdomain	(*(char))->(*(char))
(	O
PACKAGE	*(char)
)	O
;	O
if	O
(	O
cmdline_parser	(int,*(*(char)),*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int)))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
&	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
)	O
!=	O
0	int
)	O
return	O
EXIT_FAILURE	int
;	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
version_given	int
)	O
{	O
version_etc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),*(char))->(void)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"idn2"	*(char)
,	O
PACKAGE_NAME	*(char)
,	O
VERSION	*(char)
,	O
"Simon Josefsson, Tim Ruehsen"	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
help_given	int
)	O
usage	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
if	O
(	O
!	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
quiet_given	int
&&	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
inputs_num	int
==	O
0	int
&&	O
isatty	(int)->(int)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %s\n"	*(char)
GREETING	O
,	O
PACKAGE	*(char)
,	O
VERSION	*(char)
)	O
;	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
debug_given	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Charset: %s\n"	*(char)
)	O
,	O
locale_charset	()->(*(char))
(	O
)	O
)	O
;	O
if	O
(	O
!	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
quiet_given	int
&&	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
inputs_num	int
==	O
0	int
&&	O
isatty	(int)->(int)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
_	O
(	O
"Type each input string on a line by itself, "	*(char)
"terminated by a newline character.\n"	*(char)
)	O
)	O
;	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
tr46t_given	int
)	O
flags	int
=	O
IDN2_TRANSITIONAL	int
;	O
else	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
tr46nt_given	int
)	O
flags	int
=	O
IDN2_NONTRANSITIONAL	int
;	O
else	O
if	O
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
no_tr46_given	int
)	O
flags	int
=	O
IDN2_NO_TR46	int
;	O
if	O
(	O
flags	int
&&	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
usestd3asciirules_given	int
)	O
flags	int
|=	O
IDN2_USE_STD3_ASCII_RULES	int
;	O
if	O
(	O
flags	int
&&	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
no_alabelroundtrip_given	int
)	O
flags	int
|=	O
IDN2_NO_ALABEL_ROUNDTRIP	int
;	O
for	O
(	O
cmdn	int
=	O
0	int
;	O
cmdn	int
<	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
inputs_num	int
;	O
cmdn	int
++	O
)	O
process_input	(*(char),int)->(void)
(	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
.	O
inputs	*(*(char))
[	O
cmdn	int
]	O
,	O
flags	int
|	O
IDN2_NFC_INPUT	int
)	O
;	O
if	O
(	O
!	O
cmdn	int
)	O
{	O
char	O
*	O
buf	*(char)
=	O
NULL	O
;	O
size_t	long
bufsize	long
=	O
0	int
;	O
while	O
(	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
buf	*(char)
,	O
&	O
bufsize	long
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
>	O
0	int
)	O
process_input	(*(char),int)->(void)
(	O
buf	*(char)
,	O
flags	int
)	O
;	O
free	(*(void))->(void)
(	O
buf	*(char)
)	O
;	O
}	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"%s"	*(char)
,	O
_	O
(	O
"input error"	*(char)
)	O
)	O
;	O
cmdline_parser_free	(*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int)))->(void)
(	O
&	O
args_info	*(struct(*(char),*(char),*(char),*(char),*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,*(char),int,int,int,int,int,int,int,int,int,int,int,int,*(*(char)),int))
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
