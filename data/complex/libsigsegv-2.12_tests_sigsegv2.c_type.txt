static	O
sigsegv_dispatcher	struct(*(void))
dispatcher	*(struct(*(void)))
;	O
static	O
volatile	O
unsigned	O
int	O
logcount	int
=	O
0	int
;	O
static	O
volatile	O
uintptr_t	long
logdata	array(long)
[	O
10	int
]	O
;	O
static	O
int	O
area_handler	(*(void),*(void))->(int)
(	O
void	O
*	O
fault_address	*(void)
,	O
void	O
*	O
user_arg	*(void)
)	O
{	O
uintptr_t	long
area	long
=	O
*	O
(	O
uintptr_t	long
*	O
)	O
user_arg	*(void)
;	O
logdata	array(long)
[	O
logcount	int
++	O
]	O
=	O
area	long
;	O
if	O
(	O
logcount	int
>=	O
sizeof	O
(	O
logdata	array(long)
)	O
/	O
sizeof	O
(	O
logdata	array(long)
[	O
0	int
]	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
(	O
(	O
uintptr_t	long
)	O
fault_address	*(void)
>=	O
area	long
&&	O
(	O
uintptr_t	long
)	O
fault_address	*(void)
-	O
area	long
<	O
0x4000	int
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
mprotect	(*(void),long,int)->(int)
(	O
(	O
void	O
*	O
)	O
area	long
,	O
0x4000	int
,	O
PROT_READ_WRITE	O
)	O
==	O
0	int
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
handler	*((*(void),int)->(int))
(	O
void	O
*	O
fault_address	*(void)
,	O
int	O
serious	int
)	O
{	O
return	O
sigsegv_dispatch	(*(struct(*(void))),*(void))->(int)
(	O
&	O
dispatcher	*(struct(*(void)))
,	O
fault_address	*(void)
)	O
;	O
}	O
static	O
void	O
barrier	()->(void)
(	O
)	O
{	O
}	O
int	O
main	()->(int)
(	O
)	O
{	O
int	O
prot_unwritable	int
;	O
void	O
*	O
p	*(void)
;	O
uintptr_t	long
area1	long
;	O
uintptr_t	long
area2	long
;	O
uintptr_t	long
area3	long
;	O
sigsegv_init	(*(struct(*(void))))->(void)
(	O
&	O
dispatcher	*(struct(*(void)))
)	O
;	O
sigsegv_install_handler	(*((*(void),int)->(int)))->(int)
(	O
&	O
handler	*((*(void),int)->(int))
)	O
;	O
prot_unwritable	int
=	O
PROT_READ	int
;	O
p	*(void)
=	O
mmap_zeromap	(*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
0x12340000	int
,	O
0x4000	int
)	O
;	O
if	O
(	O
p	*(void)
==	O
(	O
void	O
*	O
)	O
(	O
-	O
1	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"mmap_zeromap failed.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
area1	long
=	O
(	O
uintptr_t	long
)	O
p	*(void)
;	O
sigsegv_register	(*(struct(*(void))),*(void),long,*((*(void),*(void))->(int)),*(void))->(*(void))
(	O
&	O
dispatcher	*(struct(*(void)))
,	O
(	O
void	O
*	O
)	O
area1	long
,	O
0x4000	int
,	O
&	O
area_handler	(*(void),*(void))->(int)
,	O
&	O
area1	long
)	O
;	O
if	O
(	O
mprotect	(*(void),long,int)->(int)
(	O
(	O
void	O
*	O
)	O
area1	long
,	O
0x4000	int
,	O
PROT_NONE	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"mprotect failed.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
p	*(void)
=	O
mmap_zeromap	(*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
0x0BEE0000	int
,	O
0x4000	int
)	O
;	O
if	O
(	O
p	*(void)
==	O
(	O
void	O
*	O
)	O
(	O
-	O
1	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"mmap_zeromap failed.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
area2	long
=	O
(	O
uintptr_t	long
)	O
p	*(void)
;	O
sigsegv_register	(*(struct(*(void))),*(void),long,*((*(void),*(void))->(int)),*(void))->(*(void))
(	O
&	O
dispatcher	*(struct(*(void)))
,	O
(	O
void	O
*	O
)	O
area2	long
,	O
0x4000	int
,	O
&	O
area_handler	(*(void),*(void))->(int)
,	O
&	O
area2	long
)	O
;	O
if	O
(	O
mprotect	(*(void),long,int)->(int)
(	O
(	O
void	O
*	O
)	O
area2	long
,	O
0x4000	int
,	O
prot_unwritable	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"mprotect failed.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
if	O
(	O
mprotect	(*(void),long,int)->(int)
(	O
(	O
void	O
*	O
)	O
area2	long
,	O
0x4000	int
,	O
PROT_READ_WRITE	O
)	O
<	O
0	int
||	O
mprotect	(*(void),long,int)->(int)
(	O
(	O
void	O
*	O
)	O
area2	long
,	O
0x4000	int
,	O
prot_unwritable	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"mprotect failed.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
p	*(void)
=	O
mmap_zeromap	(*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
0x06990000	int
,	O
0x4000	int
)	O
;	O
if	O
(	O
p	*(void)
==	O
(	O
void	O
*	O
)	O
(	O
-	O
1	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"mmap_zeromap failed.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
area3	long
=	O
(	O
uintptr_t	long
)	O
p	*(void)
;	O
sigsegv_register	(*(struct(*(void))),*(void),long,*((*(void),*(void))->(int)),*(void))->(*(void))
(	O
&	O
dispatcher	*(struct(*(void)))
,	O
(	O
void	O
*	O
)	O
area3	long
,	O
0x4000	int
,	O
&	O
area_handler	(*(void),*(void))->(int)
,	O
&	O
area3	long
)	O
;	O
mprotect	(*(void),long,int)->(int)
(	O
(	O
void	O
*	O
)	O
area3	long
,	O
0x4000	int
,	O
prot_unwritable	int
)	O
;	O
(	O
(	O
volatile	O
int	O
*	O
)	O
area2	long
)	O
[	O
230	int
]	O
=	O
22	int
;	O
(	O
(	O
volatile	O
int	O
*	O
)	O
area3	long
)	O
[	O
412	int
]	O
=	O
33	int
;	O
(	O
(	O
volatile	O
int	O
*	O
)	O
area2	long
)	O
[	O
135	int
]	O
=	O
22	int
;	O
(	O
(	O
volatile	O
int	O
*	O
)	O
area1	long
)	O
[	O
612	int
]	O
=	O
11	int
;	O
barrier	()->(void)
(	O
)	O
;	O
if	O
(	O
logcount	int
!=	O
3	int
)	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
if	O
(	O
!	O
(	O
logdata	array(long)
[	O
0	int
]	O
==	O
area2	long
&&	O
logdata	array(long)
[	O
1	int
]	O
==	O
area3	long
&&	O
logdata	array(long)
[	O
2	int
]	O
==	O
area1	long
)	O
)	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
printf	(*(char))->(int)
(	O
"Test passed.\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
