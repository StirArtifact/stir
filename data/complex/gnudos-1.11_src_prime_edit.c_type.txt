int	O
CONFIRM_CUT_COPY	int
;	O
int	O
ABORT_COPY	int
;	O
mode_t	int
get_mode	(int)->(int)
(	O
__mode_t	int
st_mode	int
)	O
{	O
mode_t	int
mode	int
=	O
00	int
;	O
if	O
(	O
st_mode	int
&	O
S_IRUSR	O
)	O
{	O
mode	int
+=	O
0400	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IWUSR	O
)	O
{	O
mode	int
+=	O
0200	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IXUSR	O
)	O
{	O
mode	int
+=	O
0100	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IRGRP	O
)	O
{	O
mode	int
+=	O
040	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IWGRP	O
)	O
{	O
mode	int
+=	O
020	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IXGRP	O
)	O
{	O
mode	int
+=	O
010	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IROTH	O
)	O
{	O
mode	int
+=	O
04	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IWOTH	O
)	O
{	O
mode	int
+=	O
02	int
;	O
}	O
if	O
(	O
st_mode	int
&	O
S_IXOTH	O
)	O
{	O
mode	int
+=	O
01	int
;	O
}	O
return	O
mode	int
;	O
}	O
void	O
clearSelection	()->(void)
(	O
)	O
{	O
unMarkAll	(int)->(void)
(	O
DIR_WIN	int
)	O
;	O
unMarkAll	(int)->(void)
(	O
FILE_WIN	int
)	O
;	O
numCopy	int
=	O
0	int
;	O
numCut	int
=	O
0	int
;	O
numStarred	int
=	O
0	int
;	O
}	O
void	O
markAll	()->(void)
(	O
)	O
{	O
int	O
i	int
,	O
j	int
=	O
0	int
;	O
if	O
(	O
activeWindow	int
==	O
DIR_WIN	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
name	*(char)
,	O
"."	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
name	*(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
)	O
continue	O
;	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
continue	O
;	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'^'	O
)	O
{	O
removeCutDir	(int)->(void)
(	O
i	int
)	O
;	O
numCut	int
--	O
;	O
}	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'#'	O
)	O
{	O
removeCopyDir	(int)->(void)
(	O
i	int
)	O
;	O
numCopy	int
--	O
;	O
}	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
'*'	O
;	O
j	int
++	O
;	O
}	O
refreshDirView	()->(void)
(	O
)	O
;	O
}	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
type	char
==	O
'%'	O
)	O
break	O
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
continue	O
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'^'	O
)	O
{	O
removeCutFile	(int)->(void)
(	O
i	int
)	O
;	O
numCut	int
--	O
;	O
}	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'#'	O
)	O
{	O
removeCopyFile	(int)->(void)
(	O
i	int
)	O
;	O
numCopy	int
--	O
;	O
}	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
'*'	O
;	O
j	int
++	O
;	O
}	O
refreshFileView	()->(void)
(	O
)	O
;	O
}	O
numStarred	int
+=	O
j	int
;	O
refreshBottomView	()->(void)
(	O
)	O
;	O
}	O
void	O
unMarkAll	(int)->(void)
(	O
int	O
activeWindow	int
)	O
{	O
int	O
i	int
,	O
j	int
=	O
0	int
;	O
if	O
(	O
activeWindow	int
==	O
DIR_WIN	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
' '	O
)	O
continue	O
;	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'^'	O
)	O
{	O
removeCutDir	(int)->(void)
(	O
i	int
)	O
;	O
numCut	int
--	O
;	O
}	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'#'	O
)	O
{	O
removeCopyDir	(int)->(void)
(	O
i	int
)	O
;	O
numCopy	int
--	O
;	O
}	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
' '	O
;	O
j	int
++	O
;	O
}	O
refreshDirView	()->(void)
(	O
)	O
;	O
}	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
type	char
==	O
'%'	O
)	O
break	O
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
' '	O
)	O
continue	O
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'^'	O
)	O
{	O
removeCutFile	(int)->(void)
(	O
i	int
)	O
;	O
numCut	int
--	O
;	O
}	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'#'	O
)	O
{	O
removeCopyFile	(int)->(void)
(	O
i	int
)	O
;	O
numCopy	int
--	O
;	O
}	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
' '	O
;	O
j	int
++	O
;	O
}	O
refreshFileView	()->(void)
(	O
)	O
;	O
}	O
numStarred	int
-=	O
j	int
;	O
refreshBottomView	()->(void)
(	O
)	O
;	O
}	O
void	O
cutOne	()->(void)
(	O
)	O
{	O
int	O
pos	int
;	O
if	O
(	O
activeWindow	int
==	O
DIR_WIN	int
)	O
{	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
name	*(char)
,	O
"."	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
name	*(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
)	O
return	O
;	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'^'	O
)	O
return	O
;	O
else	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'*'	O
)	O
numStarred	int
--	O
;	O
else	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'#'	O
)	O
{	O
removeCopyDir	(int)->(void)
(	O
pos	int
)	O
;	O
numCopy	int
--	O
;	O
}	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
=	O
'^'	O
;	O
saveCutDir	(int)->(void)
(	O
pos	int
)	O
;	O
numCut	int
++	O
;	O
}	O
else	O
{	O
pos	int
=	O
firstVisFile	int
+	O
selectedFile	int
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
type	char
==	O
'%'	O
)	O
return	O
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'^'	O
)	O
return	O
;	O
else	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'*'	O
)	O
numStarred	int
--	O
;	O
else	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'#'	O
)	O
{	O
removeCopyFile	(int)->(void)
(	O
pos	int
)	O
;	O
numCopy	int
--	O
;	O
}	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
=	O
'^'	O
;	O
saveCutFile	(int)->(void)
(	O
pos	int
)	O
;	O
numCut	int
++	O
;	O
}	O
refreshFileView	()->(void)
(	O
)	O
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
refreshBottomView	()->(void)
(	O
)	O
;	O
}	O
void	O
cutMarked	()->(void)
(	O
)	O
{	O
if	O
(	O
numStarred	int
==	O
0	int
)	O
{	O
cutOne	()->(void)
(	O
)	O
;	O
return	O
;	O
}	O
else	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
{	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
'^'	O
;	O
numCut	int
++	O
;	O
saveCutDir	(int)->(void)
(	O
i	int
)	O
;	O
}	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
{	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
'^'	O
;	O
numCut	int
++	O
;	O
saveCutFile	(int)->(void)
(	O
i	int
)	O
;	O
}	O
}	O
numStarred	int
=	O
0	int
;	O
refreshFileView	()->(void)
(	O
)	O
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
refreshBottomView	()->(void)
(	O
)	O
;	O
}	O
}	O
void	O
copyOne	()->(void)
(	O
)	O
{	O
int	O
pos	int
;	O
if	O
(	O
activeWindow	int
==	O
DIR_WIN	int
)	O
{	O
pos	int
=	O
firstVisDir	int
+	O
selectedDir	int
;	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
name	*(char)
,	O
"."	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
name	*(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
)	O
return	O
;	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'#'	O
)	O
return	O
;	O
else	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'*'	O
)	O
numStarred	int
--	O
;	O
else	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'^'	O
)	O
{	O
removeCutDir	(int)->(void)
(	O
pos	int
)	O
;	O
numCut	int
--	O
;	O
}	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
=	O
'#'	O
;	O
saveCopyDir	(int)->(void)
(	O
pos	int
)	O
;	O
numCopy	int
++	O
;	O
}	O
else	O
{	O
pos	int
=	O
firstVisFile	int
+	O
selectedFile	int
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
type	char
==	O
'%'	O
)	O
return	O
;	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'#'	O
)	O
return	O
;	O
else	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'*'	O
)	O
numStarred	int
--	O
;	O
else	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
==	O
'^'	O
)	O
{	O
removeCutFile	(int)->(void)
(	O
pos	int
)	O
;	O
numCut	int
--	O
;	O
}	O
files	array(*(struct(*(char),int,char,char)))
[	O
pos	int
]	O
->	O
star	char
=	O
'#'	O
;	O
saveCopyFile	(int)->(void)
(	O
pos	int
)	O
;	O
numCopy	int
++	O
;	O
}	O
refreshFileView	()->(void)
(	O
)	O
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
refreshBottomView	()->(void)
(	O
)	O
;	O
}	O
void	O
copyMarked	()->(void)
(	O
)	O
{	O
if	O
(	O
numStarred	int
==	O
0	int
)	O
{	O
drawBox	(int,int,int,int,*(char),int)->(void)
(	O
1	int
,	O
1	int
,	O
SCREEN_H	int
,	O
SCREEN_W	int
,	O
" Prime File Manager "	*(char)
,	O
NO	int
)	O
;	O
copyOne	()->(void)
(	O
)	O
;	O
return	O
;	O
}	O
else	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
{	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
'#'	O
;	O
numCopy	int
++	O
;	O
saveCopyDir	(int)->(void)
(	O
i	int
)	O
;	O
}	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
{	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
=	O
'#'	O
;	O
numCopy	int
++	O
;	O
saveCopyFile	(int)->(void)
(	O
i	int
)	O
;	O
}	O
}	O
numStarred	int
=	O
0	int
;	O
refreshFileView	()->(void)
(	O
)	O
;	O
refreshDirView	()->(void)
(	O
)	O
;	O
refreshBottomView	()->(void)
(	O
)	O
;	O
drawBox	(int,int,int,int,*(char),int)->(void)
(	O
1	int
,	O
1	int
,	O
SCREEN_H	int
,	O
SCREEN_W	int
,	O
" Prime File Manager "	*(char)
,	O
NO	int
)	O
;	O
}	O
}	O
void	O
pasteMarked	()->(void)
(	O
)	O
{	O
if	O
(	O
numCut	int
==	O
0	int
&&	O
numCopy	int
==	O
0	int
)	O
{	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
"Nothing marked for Cut/Copy."	*(char)
,	O
OK	int
,	O
INFO	int
)	O
;	O
return	O
;	O
}	O
CONFIRM_CUT_COPY	int
=	O
0	int
;	O
ABORT_COPY	int
=	O
0	int
;	O
int	O
i	int
;	O
char	O
*	O
logfilename	*(char)
=	O
tmpnam	(*(char))->(*(char))
(	O
NULL	O
)	O
;	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
logfilename	*(char)
,	O
"wb"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
numCopyFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
ABORT_COPY	int
)	O
goto	O
finish	O
;	O
copyThisFile	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
copyFiles	array(*(char))
[	O
i	int
]	O
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
numCopyFiles	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
numCutFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
ABORT_COPY	int
)	O
goto	O
finish	O
;	O
copyThisFile	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
cutFiles	array(*(char))
[	O
i	int
]	O
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
remove	(*(char))->(int)
(	O
cutFiles	array(*(char))
[	O
i	int
]	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Unable to remove file: %s\n"	*(char)
,	O
cutFiles	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
}	O
numCutFiles	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
numCopyDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
ABORT_COPY	int
)	O
goto	O
finish	O
;	O
copyThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
copyDirs	array(*(char))
[	O
i	int
]	O
,	O
0	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
numCopyDirs	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
numCutDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
ABORT_COPY	int
)	O
goto	O
finish	O
;	O
moveThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
cutDirs	array(*(char))
[	O
i	int
]	O
,	O
0	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
numCutDirs	int
=	O
0	int
;	O
numCopy	int
=	O
0	int
;	O
numCut	int
=	O
0	int
;	O
purgeLogFile	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
logfilename	*(char)
)	O
;	O
finish	O
:	O
CONFIRM_CUT_COPY	int
=	O
0	int
;	O
ABORT_COPY	int
=	O
0	int
;	O
scanDir	(*(char))->(void)
(	O
cwd	short
)	O
;	O
}	O
void	O
copyThisFile	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
*	O
fileName	*(char)
,	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
*	O
str	*(char)
;	O
FILE	struct
*	O
inFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
FILE	struct
*	O
outFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
buf	array(char)
[	O
4096	int
]	O
;	O
int	O
read_size	int
;	O
str	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
fileName	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
str	*(char)
)	O
str	*(char)
++	O
;	O
else	O
str	*(char)
=	O
fileName	*(char)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
int	O
z	int
=	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
str	*(char)
,	O
&	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
if	O
(	O
z	int
!=	O
-	O
1	int
)	O
{	O
if	O
(	O
!	O
CONFIRM_CUT_COPY	int
)	O
{	O
char	O
*	O
s	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
fileName	*(char)
)	O
+	O
34	int
)	O
;	O
if	O
(	O
!	O
s	*(char)
)	O
{	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"File:\n"	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
fileName	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"\nalready exists. Overwrite?"	*(char)
)	O
;	O
z	int
=	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
s	*(char)
,	O
YES	int
|	O
NO	int
|	O
ALL	int
,	O
CONFIRM	int
)	O
;	O
free	(*(void))->(void)
(	O
s	*(char)
)	O
;	O
if	O
(	O
z	int
==	O
NO	int
)	O
return	O
;	O
if	O
(	O
z	int
==	O
ABORT	int
)	O
{	O
ABORT_COPY	int
=	O
1	int
;	O
return	O
;	O
}	O
if	O
(	O
z	int
==	O
ALL	int
)	O
CONFIRM_CUT_COPY	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
(	O
inFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fileName	*(char)
,	O
"rb"	*(char)
)	O
)	O
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error opening input file: %s\n"	*(char)
,	O
fileName	*(char)
)	O
;	O
else	O
showErrorMsgBox	(*(char),*(char))->(void)
(	O
"Error opening input file:\n"	*(char)
,	O
fileName	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
!	O
(	O
outFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
str	*(char)
,	O
"wb"	*(char)
)	O
)	O
)	O
{	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
inFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error opening output file: %s\n"	*(char)
,	O
fileName	*(char)
)	O
;	O
}	O
else	O
{	O
char	O
*	O
s	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
fileName	*(char)
)	O
+	O
37	int
)	O
;	O
if	O
(	O
!	O
s	*(char)
)	O
{	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"Error opening write file:\n"	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
fileName	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"\nAborting."	*(char)
)	O
;	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
s	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
free	(*(void))->(void)
(	O
s	*(char)
)	O
;	O
}	O
return	O
;	O
}	O
while	O
(	O
(	O
read_size	int
=	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
buf	array(char)
,	O
sizeof	O
(	O
char	O
)	O
,	O
sizeof	O
(	O
buf	array(char)
)	O
,	O
inFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
buf	array(char)
,	O
sizeof	O
(	O
char	O
)	O
,	O
read_size	int
,	O
outFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
inFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
outFile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
mode_t	int
mode	int
=	O
00	int
;	O
z	int
=	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fileName	*(char)
,	O
&	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
if	O
(	O
z	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error: %s: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
,	O
fileName	*(char)
)	O
;	O
else	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
mode	int
=	O
get_mode	(int)->(int)
(	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
;	O
if	O
(	O
chmod	(*(char),int)->(int)
(	O
str	*(char)
,	O
mode	int
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error: %s: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
,	O
fileName	*(char)
)	O
;	O
else	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
,	O
OK	int
,	O
ERROR	int
)	O
;	O
}	O
}	O
void	O
__copyMoveDir	(*(char),int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
*	O
tmp	array(char)
,	O
int	O
level	int
,	O
int	O
moving	int
,	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
*	O
str	*(char)
;	O
int	O
n	int
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
*	O
eps	*(*(struct(long,long,short,char,array(char))))
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
int	O
h	int
=	O
SCREEN_H	int
/	O
2	int
;	O
int	O
w	int
=	O
SCREEN_W	int
/	O
2	int
;	O
char	O
*	O
msg	*(char)
=	O
moving	int
?	O
" Moving "	*(char)
:	O
" Copying "	*(char)
;	O
int	O
tmplen	int
=	O
strlen	(*(char))->(long)
(	O
tmp	array(char)
)	O
;	O
mode_t	int
oldmode	int
;	O
str	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
tmp	array(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
str	*(char)
)	O
str	*(char)
++	O
;	O
else	O
str	*(char)
=	O
tmp	array(char)
;	O
drawBox	(int,int,int,int,*(char),int)->(void)
(	O
h	int
-	O
2	int
,	O
w	int
-	O
30	int
,	O
h	int
+	O
2	int
,	O
w	int
+	O
30	int
,	O
msg	*(char)
,	O
YES	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
1	int
,	O
w	int
-	O
29	int
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
>	O
w	int
-	O
2	int
)	O
{	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
w	int
-	O
2	int
;	O
n	int
++	O
)	O
putchar	(int)->(int)
(	O
str	*(char)
[	O
n	int
]	O
)	O
;	O
}	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
str	*(char)
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
str	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
-	O
1	int
)	O
{	O
mkdir	(*(char),int)->(int)
(	O
str	*(char)
,	O
0700	int
)	O
;	O
oldmode	int
=	O
0700	int
;	O
}	O
else	O
{	O
oldmode	int
=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
;	O
if	O
(	O
!	O
CONFIRM_CUT_COPY	int
)	O
{	O
char	O
*	O
s	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
39	int
)	O
;	O
if	O
(	O
!	O
s	*(char)
)	O
{	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"Directory:\n"	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
str	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"\nalready exists. Overwrite?"	*(char)
)	O
;	O
n	int
=	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
s	*(char)
,	O
YES	int
|	O
NO	int
|	O
ALL	int
,	O
CONFIRM	int
)	O
;	O
free	(*(void))->(void)
(	O
s	*(char)
)	O
;	O
if	O
(	O
n	int
==	O
NO	int
)	O
return	O
;	O
if	O
(	O
n	int
==	O
ABORT	int
)	O
{	O
ABORT_COPY	int
=	O
1	int
;	O
return	O
;	O
}	O
if	O
(	O
n	int
==	O
ALL	int
)	O
CONFIRM_CUT_COPY	int
=	O
1	int
;	O
}	O
}	O
int	O
z	int
=	O
chdir	(*(char))->(int)
(	O
str	*(char)
)	O
;	O
if	O
(	O
z	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error changing directory: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
else	O
showErrorMsgBox	(*(char),*(char))->(void)
(	O
"Error changing directory: "	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
;	O
}	O
n	int
=	O
scandir	(*(char),*(*(*(struct(long,long,short,char,array(char))))),*((*(struct(long,long,short,char,array(char))))->(int)),*((*(*(struct`)),*(*(struct`)))->(int)))->(int)
(	O
tmp	array(char)
,	O
&	O
eps	*(*(struct(long,long,short,char,array(char))))
,	O
one	(*(struct(long,long,short,char,array(char))))->(int)
,	O
alphasort	(*(*(struct(long,long,short,char,array(char)))),*(*(struct(long,long,short,char,array(char)))))->(int)
)	O
;	O
if	O
(	O
n	int
>=	O
0	int
)	O
{	O
int	O
cnt	int
;	O
for	O
(	O
cnt	int
=	O
0	int
;	O
cnt	int
<	O
n	int
;	O
++	O
cnt	int
)	O
{	O
char	O
*	O
d	*(char)
=	O
eps	*(*(struct(long,long,short,char,array(char))))
[	O
cnt	int
]	O
->	O
d_name	array(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
d	*(char)
,	O
"."	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
d	*(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
continue	O
;	O
char	O
*	O
cc	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
tmplen	int
+	O
strlen	(*(char))->(long)
(	O
d	*(char)
)	O
+	O
2	int
)	O
;	O
if	O
(	O
!	O
cc	*(char)
)	O
{	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
"Insufficient memory"	*(char)
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
cc	*(char)
,	O
tmp	array(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
cc	*(char)
,	O
"/"	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
cc	*(char)
,	O
d	*(char)
)	O
;	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
cc	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
if	O
(	O
S_ISDIR	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
moving	int
)	O
moveThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
cc	*(char)
,	O
level	int
+	O
1	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
copyThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
cc	*(char)
,	O
level	int
+	O
1	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
{	O
copyThisFile	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
cc	*(char)
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
moving	int
)	O
remove	(*(char))->(int)
(	O
cc	*(char)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
cc	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
eps	*(*(struct(long,long,short,char,array(char))))
[	O
cnt	int
]	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
eps	*(*(struct(long,long,short,char,array(char))))
)	O
;	O
}	O
z	int
=	O
chdir	(*(char))->(int)
(	O
".."	*(char)
)	O
;	O
if	O
(	O
z	int
==	O
-	O
1	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error changing directory: %s\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
else	O
showErrorMsgBox	(*(char),*(char))->(void)
(	O
"Error changing directory:\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
;	O
}	O
mode_t	int
mode	int
=	O
oldmode	int
;	O
if	O
(	O
chmod	(*(char),int)->(int)
(	O
str	*(char)
,	O
mode	int
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error changing directory mode for %s: %s\n"	*(char)
,	O
str	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
else	O
showErrorMsgBox	(*(char),*(char))->(void)
(	O
"Error changing directory mode:\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
if	O
(	O
moving	int
)	O
rmdir	(*(char))->(int)
(	O
tmp	array(char)
)	O
;	O
}	O
void	O
copyThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
*	O
tmp	array(char)
,	O
int	O
level	int
,	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
__copyMoveDir	(*(char),int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
tmp	array(char)
,	O
level	int
,	O
0	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
void	O
moveThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
tmp	array(char)
[	O
]	O
,	O
int	O
level	int
,	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
__copyMoveDir	(*(char),int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
tmp	array(char)
,	O
level	int
,	O
1	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
void	O
deleteThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
*	O
tmp	array(char)
,	O
int	O
level	int
,	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
n	int
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
*	O
eps	*(*(struct(long,long,short,char,array(char))))
;	O
int	O
h	int
=	O
SCREEN_H	int
/	O
2	int
;	O
int	O
w	int
=	O
SCREEN_W	int
/	O
2	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
drawBox	(int,int,int,int,*(char),int)->(void)
(	O
h	int
-	O
2	int
,	O
w	int
-	O
30	int
,	O
h	int
+	O
2	int
,	O
w	int
+	O
30	int
,	O
" Deleting "	*(char)
,	O
YES	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\e[%d;%dH"	*(char)
,	O
h	int
-	O
1	int
,	O
w	int
-	O
29	int
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tmp	array(char)
)	O
>	O
w	int
-	O
2	int
)	O
{	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
w	int
-	O
2	int
;	O
n	int
++	O
)	O
putchar	(int)->(int)
(	O
tmp	array(char)
[	O
n	int
]	O
)	O
;	O
}	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
tmp	array(char)
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
n	int
=	O
scandir	(*(char),*(*(*(struct(long,long,short,char,array(char))))),*((*(struct(long,long,short,char,array(char))))->(int)),*((*(*(struct`)),*(*(struct`)))->(int)))->(int)
(	O
tmp	array(char)
,	O
&	O
eps	*(*(struct(long,long,short,char,array(char))))
,	O
one	(*(struct(long,long,short,char,array(char))))->(int)
,	O
alphasort	(*(*(struct(long,long,short,char,array(char)))),*(*(struct(long,long,short,char,array(char)))))->(int)
)	O
;	O
if	O
(	O
n	int
>=	O
0	int
)	O
{	O
if	O
(	O
chdir	(*(char))->(int)
(	O
tmp	array(char)
)	O
==	O
-	O
1	int
)	O
{	O
chdirError	O
(	O
tmp	array(char)
)	O
;	O
return	O
;	O
}	O
int	O
cnt	int
;	O
for	O
(	O
cnt	int
=	O
0	int
;	O
cnt	int
<	O
n	int
;	O
++	O
cnt	int
)	O
{	O
char	O
*	O
d	*(char)
=	O
eps	*(*(struct(long,long,short,char,array(char))))
[	O
cnt	int
]	O
->	O
d_name	array(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
d	*(char)
,	O
"."	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
d	*(char)
,	O
".."	*(char)
)	O
==	O
0	int
)	O
continue	O
;	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
d	*(char)
,	O
&	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
if	O
(	O
S_ISDIR	O
(	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
deleteThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
d	*(char)
,	O
level	int
+	O
1	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
{	O
remove	(*(char))->(int)
(	O
d	*(char)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
eps	*(*(struct(long,long,short,char,array(char))))
[	O
cnt	int
]	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
eps	*(*(struct(long,long,short,char,array(char))))
)	O
;	O
if	O
(	O
chdir	(*(char))->(int)
(	O
".."	*(char)
)	O
==	O
-	O
1	int
)	O
{	O
chdirError	O
(	O
".."	*(char)
)	O
;	O
return	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
level	int
==	O
0	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error opening directory: %s\n"	*(char)
,	O
tmp	array(char)
)	O
;	O
else	O
showErrorMsgBox	(*(char),*(char))->(void)
(	O
"Error opening directory:\n"	*(char)
,	O
tmp	array(char)
)	O
;	O
return	O
;	O
}	O
}	O
if	O
(	O
rmdir	(*(char))->(int)
(	O
tmp	array(char)
)	O
==	O
-	O
1	int
)	O
{	O
if	O
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Error removing directory (%s): %s\n"	*(char)
,	O
tmp	array(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
else	O
showErrorMsgBox	(*(char),*(char))->(void)
(	O
"Error removing directory:\n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
}	O
void	O
deleteMarked	()->(void)
(	O
FILE	struct
*	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
i	int
;	O
i	int
=	O
msgBoxH	(*(char),int,enum(int,int,int))->(int)
(	O
"Delete all selected files/dirs?"	*(char)
,	O
YES	int
|	O
NO	int
,	O
CONFIRM	int
)	O
;	O
if	O
(	O
i	int
==	O
NO	int
)	O
return	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalFiles	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
{	O
remove	(*(char))->(int)
(	O
files	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
name	*(char)
)	O
;	O
}	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
totalDirs	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
star	char
==	O
'*'	O
)	O
{	O
deleteThisDir	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
dirs	array(*(struct(*(char),int,char,char)))
[	O
i	int
]	O
->	O
name	*(char)
,	O
0	int
,	O
logfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
numStarred	int
=	O
0	int
;	O
}	O
void	O
editMenu_Find	()->(void)
(	O
)	O
{	O
findFile	()->(void)
(	O
)	O
;	O
hideCursor	()->(void)
(	O
)	O
;	O
scanDir	(*(char))->(void)
(	O
cwd	short
)	O
;	O
}	O
void	O
editMenu_Properties	()->(void)
(	O
)	O
{	O
showPropertiesDialog	()->(void)
(	O
)	O
;	O
scanDir	(*(char))->(void)
(	O
cwd	short
)	O
;	O
}	O
