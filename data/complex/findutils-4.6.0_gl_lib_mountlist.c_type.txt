static	O
dev_t	long
dev_from_mount_options	(*(char))->(long)
(	O
char	O
const	O
*	O
mount_options	*(char)
)	O
{	O
(	O
void	O
)	O
mount_options	*(char)
;	O
return	O
-	O
1	int
;	O
}	O
static	O
void	O
unescape_tab	(*(char))->(void)
(	O
char	O
*	O
str	*(char)
)	O
{	O
size_t	long
i	long
,	O
j	long
=	O
0	int
;	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
1	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
len	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
str	*(char)
[	O
i	long
]	O
==	O
'\\'	O
&&	O
(	O
i	long
+	O
4	int
<	O
len	long
)	O
&&	O
str	*(char)
[	O
i	long
+	O
1	int
]	O
>=	O
'0'	O
&&	O
str	*(char)
[	O
i	long
+	O
1	int
]	O
<=	O
'3'	O
&&	O
str	*(char)
[	O
i	long
+	O
2	int
]	O
>=	O
'0'	O
&&	O
str	*(char)
[	O
i	long
+	O
2	int
]	O
<=	O
'7'	O
&&	O
str	*(char)
[	O
i	long
+	O
3	int
]	O
>=	O
'0'	O
&&	O
str	*(char)
[	O
i	long
+	O
3	int
]	O
<=	O
'7'	O
)	O
{	O
str	*(char)
[	O
j	long
++	O
]	O
=	O
(	O
str	*(char)
[	O
i	long
+	O
1	int
]	O
-	O
'0'	O
)	O
*	O
64	int
+	O
(	O
str	*(char)
[	O
i	long
+	O
2	int
]	O
-	O
'0'	O
)	O
*	O
8	int
+	O
(	O
str	*(char)
[	O
i	long
+	O
3	int
]	O
-	O
'0'	O
)	O
;	O
i	long
+=	O
3	int
;	O
}	O
else	O
str	*(char)
[	O
j	long
++	O
]	O
=	O
str	*(char)
[	O
i	long
]	O
;	O
}	O
}	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
read_file_system_list	(bool)->(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
(	O
bool	bool
need_fs_type	bool
)	O
{	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
*	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
&	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
(	O
void	O
)	O
need_fs_type	bool
;	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
const	O
*	O
mountinfo	*(char)
=	O
"/proc/self/mountinfo"	*(char)
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
mountinfo	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
NULL	O
)	O
{	O
char	O
*	O
line	*(char)
=	O
NULL	O
;	O
size_t	long
buf_size	long
=	O
0	int
;	O
while	O
(	O
getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
line	*(char)
,	O
&	O
buf_size	long
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
-	O
1	int
)	O
{	O
unsigned	O
int	O
devmaj	int
,	O
devmin	int
;	O
int	O
target_s	int
,	O
target_e	int
,	O
type_s	int
,	O
type_e	int
;	O
int	O
source_s	int
,	O
source_e	int
,	O
mntroot_s	int
,	O
mntroot_e	int
;	O
char	O
test	char
;	O
char	O
*	O
dash	*(char)
;	O
int	O
rc	int
;	O
rc	int
=	O
sscanf	(*(char),*(char))->(int)
(	O
line	*(char)
,	O
"%*u "	*(char)
"%*u "	*(char)
"%u:%u "	*(char)
"%n%*s%n "	*(char)
"%n%*s%n"	*(char)
"%c"	*(char)
,	O
&	O
devmaj	int
,	O
&	O
devmin	int
,	O
&	O
mntroot_s	int
,	O
&	O
mntroot_e	int
,	O
&	O
target_s	int
,	O
&	O
target_e	int
,	O
&	O
test	char
)	O
;	O
if	O
(	O
rc	int
!=	O
3	int
&&	O
rc	int
!=	O
7	int
)	O
continue	O
;	O
dash	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(char)
+	O
target_e	int
,	O
" - "	*(char)
)	O
;	O
if	O
(	O
!	O
dash	*(char)
)	O
continue	O
;	O
rc	int
=	O
sscanf	(*(char),*(char))->(int)
(	O
dash	*(char)
,	O
" - "	*(char)
"%n%*s%n "	*(char)
"%n%*s%n "	*(char)
"%c"	*(char)
,	O
&	O
type_s	int
,	O
&	O
type_e	int
,	O
&	O
source_s	int
,	O
&	O
source_e	int
,	O
&	O
test	char
)	O
;	O
if	O
(	O
rc	int
!=	O
1	int
&&	O
rc	int
!=	O
5	int
)	O
continue	O
;	O
line	*(char)
[	O
mntroot_e	int
]	O
=	O
'\0'	O
;	O
line	*(char)
[	O
target_e	int
]	O
=	O
'\0'	O
;	O
dash	*(char)
[	O
type_e	int
]	O
=	O
'\0'	O
;	O
dash	*(char)
[	O
source_e	int
]	O
=	O
'\0'	O
;	O
unescape_tab	(*(char))->(void)
(	O
dash	*(char)
+	O
source_s	int
)	O
;	O
unescape_tab	(*(char))->(void)
(	O
line	*(char)
+	O
target_s	int
)	O
;	O
unescape_tab	(*(char))->(void)
(	O
line	*(char)
+	O
mntroot_s	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
*	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
dash	*(char)
+	O
source_s	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mountdir	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
line	*(char)
+	O
target_s	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mntroot	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
line	*(char)
+	O
mntroot_s	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
dash	*(char)
+	O
type_s	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type_malloced	int
=	O
1	int
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_dev	long
=	O
makedev	()->(int)
(	O
devmaj	int
,	O
devmin	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_dummy	int
=	O
ME_DUMMY	O
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
,	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
,	O
false	int
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_remote	int
=	O
ME_REMOTE	O
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
,	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
)	O
;	O
*	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
&	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
}	O
free	(*(void))->(void)
(	O
line	*(char)
)	O
;	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
goto	O
free_then_fail	O
;	O
}	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
goto	O
free_then_fail	O
;	O
}	O
else	O
{	O
struct	O
mntent	struct(*(char),*(char),*(char),*(char),int,int)
*	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
;	O
char	O
const	O
*	O
table	*(char)
=	O
MOUNTED	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
setmntent	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
table	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
while	O
(	O
(	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
=	O
getmntent	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(struct(*(char),*(char),*(char),*(char),int,int)))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
bool	bool
bind	bool
=	O
hasmntopt	(*(struct(*(char),*(char),*(char),*(char),int,int)),*(char))->(*(char))
(	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
,	O
"bind"	*(char)
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
*	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
->	O
mnt_fsname	*(char)
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mountdir	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
->	O
mnt_dir	*(char)
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mntroot	*(char)
=	O
NULL	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
->	O
mnt_type	*(char)
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type_malloced	int
=	O
1	int
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_dummy	int
=	O
ME_DUMMY	O
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
,	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
,	O
bind	bool
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_remote	int
=	O
ME_REMOTE	O
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
,	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
)	O
;	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_dev	long
=	O
dev_from_mount_options	(*(char))->(long)
(	O
mnt	*(struct(*(char),*(char),*(char),*(char),int,int))
->	O
mnt_opts	*(char)
)	O
;	O
*	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
&	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
}	O
if	O
(	O
endmntent	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
0	int
)	O
goto	O
free_then_fail	O
;	O
}	O
}	O
*	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
NULL	O
;	O
return	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
free_then_fail	O
:	O
_GL_UNUSED_LABEL	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
*	O
mtail	*(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))
=	O
NULL	O
;	O
while	O
(	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_next	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
free_mount_entry	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(void)
(	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
mount_list	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
=	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
;	O
}	O
errno	O
=	O
saved_errno	int
;	O
return	O
NULL	O
;	O
}	O
}	O
void	O
free_mount_entry	(*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*`,*`,*`,*`,long,int,int,int,*`)))))->(void)
(	O
struct	O
mount_entry	struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`))))))
*	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
{	O
free	(*(void))->(void)
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_devname	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mountdir	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_mntroot	*(char)
)	O
;	O
if	O
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type_malloced	int
)	O
free	(*(void))->(void)
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
->	O
me_type	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
me	*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct(*(char),*(char),*(char),*(char),long,int,int,int,*(struct`)))))
)	O
;	O
}	O
