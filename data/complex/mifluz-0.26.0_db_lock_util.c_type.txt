static	O
const	O
char	O
revid	array(char)
[	O
]	O
=	O
"$Id: lock_util.c,v 1.3 2000/06/28 16:47:02 loic Exp $"	*(char)
;	O
int	O
CDB___lock_cmp	(*(struct(*(void),int,int,int,int,int,*(void))),*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char))))->(int)
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
,	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
)	O
const	O
DBT	struct
*	O
dbt	struct(*(void),int,int,int,int,int,*(void))
;	O
DB_LOCKOBJ	struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char))
*	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
;	O
{	O
void	O
*	O
obj_data	*(void)
;	O
obj_data	*(void)
=	O
SH_DBT_PTR	O
(	O
&	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
->	O
lockobj	struct(int,long)
)	O
;	O
return	O
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
size	int
==	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
->	O
lockobj	struct(int,long)
.	O
size	int
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
data	*(void)
,	O
obj_data	*(void)
,	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
size	int
)	O
==	O
0	int
)	O
;	O
}	O
int	O
CDB___lock_locker_cmp	(int,*(struct(int,int,long,long,struct(long),struct(long,long),struct(long,long),struct(long),int)))->(int)
(	O
locker	int
,	O
sh_locker	*(struct(int,int,long,long,struct(long),struct(long,long),struct(long,long),struct(long),int))
)	O
u_int32_t	int
locker	int
;	O
DB_LOCKER	struct(int,int,long,long,struct(long),struct(long,long),struct(long,long),struct(long),int)
*	O
sh_locker	*(struct(int,int,long,long,struct(long),struct(long,long),struct(long,long),struct(long),int))
;	O
{	O
return	O
(	O
locker	int
==	O
sh_locker	*(struct(int,int,long,long,struct(long),struct(long,long),struct(long,long),struct(long),int))
->	O
id	int
)	O
;	O
}	O
u_int32_t	int
CDB___lock_ohash	(*(struct(*(void),int,int,int,int,int,*(void))))->(int)
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
)	O
const	O
DBT	struct
*	O
dbt	struct(*(void),int,int,int,int,int,*(void))
;	O
{	O
if	O
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
size	int
==	O
sizeof	O
(	O
DB_LOCK_ILOCK	struct
)	O
)	O
FAST_HASH	O
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
data	*(void)
)	O
;	O
return	O
(	O
CDB___ham_func5	(*(void),int)->(int)
(	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
data	*(void)
,	O
dbt	struct(*(void),int,int,int,int,int,*(void))
->	O
size	int
)	O
)	O
;	O
}	O
u_int32_t	int
CDB___lock_lhash	(*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char))))->(int)
(	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
)	O
DB_LOCKOBJ	struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char))
*	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
;	O
{	O
void	O
*	O
obj_data	*(void)
;	O
obj_data	*(void)
=	O
SH_DBT_PTR	O
(	O
&	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
->	O
lockobj	struct(int,long)
)	O
;	O
if	O
(	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
->	O
lockobj	struct(int,long)
.	O
size	int
==	O
sizeof	O
(	O
DB_LOCK_ILOCK	struct
)	O
)	O
FAST_HASH	O
(	O
obj_data	*(void)
)	O
;	O
return	O
(	O
CDB___ham_func5	(*(void),int)->(int)
(	O
obj_data	*(void)
,	O
lock_obj	*(struct(struct(int,long),struct(long,long),struct(long,long),struct(long,long),struct(long,long),array(char)))
->	O
lockobj	struct(int,long)
.	O
size	int
)	O
)	O
;	O
}	O
u_int32_t	int
CDB___lock_locker_hash	(int)->(int)
(	O
locker	int
)	O
u_int32_t	int
locker	int
;	O
{	O
return	O
(	O
locker	int
)	O
;	O
}	O
