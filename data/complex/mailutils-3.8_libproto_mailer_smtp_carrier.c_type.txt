int	O
mu_smtp_set_carrier	(*(struct),*(struct))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
mu_stream_t	*(struct)
carrier	*(struct)
)	O
{	O
if	O
(	O
smtp	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
smtp	*(struct)
->	O
carrier	*(struct)
)	O
{	O
mu_smtp_disconnect	(*(struct))->(int)
(	O
smtp	*(struct)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
smtp	*(struct)
->	O
carrier	*(struct)
)	O
;	O
}	O
mu_stream_ref	(*(struct))->(void)
(	O
carrier	*(struct)
)	O
;	O
smtp	*(struct)
->	O
carrier	*(struct)
=	O
carrier	*(struct)
;	O
if	O
(	O
MU_SMTP_FISSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_TRACE	int
)	O
)	O
_mu_smtp_trace_enable	(*(struct(int,*(struct),enum(int,int,int,int,int,int,int,int),*(struct),*(struct),array(*(char)),*(struct),*(struct),*(struct),array(char),*(char),*(char),long,*(char),long,*(struct),struct(int,enum(int,int,int),long))))->(int)
(	O
smtp	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_get_carrier	(*(struct),*(*(struct)))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pcarrier	*(*(struct))
)	O
{	O
return	O
ENOSYS	int
;	O
}	O
