struct	O
imap4d_command	struct(*(char),*((*(struct),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)),int,int,int,*(char))
imap4d_command_table	array(struct(*(char),*((*(struct(enum(int,int,int,int,int),*`)),*(struct(*`,*`,int,int,int,*`)),*(struct))->(int)),int,int,int,*(char)))
[	O
]	O
=	O
{	O
{	O
"CAPABILITY"	*(char)
,	O
imap4d_capability	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_ALL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"NOOP"	*(char)
,	O
imap4d_noop	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_ALL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"LOGOUT"	*(char)
,	O
imap4d_logout	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_ALL	O
,	O
STATE_LOGOUT	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"AUTHENTICATE"	*(char)
,	O
imap4d_authenticate	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_NONAUTH	O
,	O
STATE_NONE	O
,	O
STATE_AUTH	O
,	O
NULL	O
}	O
,	O
{	O
"LOGIN"	*(char)
,	O
imap4d_login	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_NONAUTH	O
,	O
STATE_NONE	O
,	O
STATE_AUTH	O
,	O
NULL	O
}	O
,	O
{	O
"SELECT"	*(char)
,	O
imap4d_select	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_AUTH	O
,	O
STATE_SEL	O
,	O
NULL	O
}	O
,	O
{	O
"EXAMINE"	*(char)
,	O
imap4d_examine	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_AUTH	O
,	O
STATE_SEL	O
,	O
NULL	O
}	O
,	O
{	O
"CREATE"	*(char)
,	O
imap4d_create	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"DELETE"	*(char)
,	O
imap4d_delete	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"RENAME"	*(char)
,	O
imap4d_rename	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"SUBSCRIBE"	*(char)
,	O
imap4d_subscribe	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"UNSUBSCRIBE"	*(char)
,	O
imap4d_unsubscribe	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"LIST"	*(char)
,	O
imap4d_list	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"LSUB"	*(char)
,	O
imap4d_lsub	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"STATUS"	*(char)
,	O
imap4d_status	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"APPEND"	*(char)
,	O
imap4d_append	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"CHECK"	*(char)
,	O
imap4d_check	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"CLOSE"	*(char)
,	O
imap4d_close	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_AUTH	O
,	O
STATE_AUTH	O
,	O
NULL	O
}	O
,	O
{	O
"UNSELECT"	*(char)
,	O
imap4d_unselect	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_AUTH	O
,	O
STATE_AUTH	O
,	O
NULL	O
}	O
,	O
{	O
"EXPUNGE"	*(char)
,	O
imap4d_expunge	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"SEARCH"	*(char)
,	O
imap4d_search	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"FETCH"	*(char)
,	O
imap4d_fetch	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"STORE"	*(char)
,	O
imap4d_store	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"COPY"	*(char)
,	O
imap4d_copy	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"UID"	*(char)
,	O
imap4d_uid	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"NAMESPACE"	*(char)
,	O
imap4d_namespace	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"ID"	*(char)
,	O
imap4d_id	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_AUTH	O
|	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"IDLE"	*(char)
,	O
imap4d_idle	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_SEL	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
"STARTTLS"	*(char)
,	O
imap4d_starttls	(*(struct(enum(int,int,int,int,int),*(struct(*`,*`,*`,*`)))),*(struct(*(char),*((*`,*`,*`)->(int)),int,int,int,*(char))),*(struct))->(int)
,	O
STATE_NONAUTH	O
,	O
STATE_NONE	O
,	O
STATE_NONE	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
