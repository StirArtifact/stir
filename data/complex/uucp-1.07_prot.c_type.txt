const	O
char	O
prot_rcsid	array(char)
[	O
]	O
=	O
"$Id: prot.c,v 1.33 2002/03/05 19:10:41 ian Rel $"	*(char)
;	O
char	O
abPrecbuf	array(char)
[	O
CRECBUFLEN	O
]	O
;	O
int	O
iPrecstart	int
;	O
int	O
iPrecend	int
;	O
boolean	int
fsend_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long,int)->(int)
(	O
qconn	*(struct)
,	O
zsend	*(char)
,	O
csend	long
,	O
fdoread	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
const	O
char	O
*	O
zsend	*(char)
;	O
size_t	long
csend	long
;	O
boolean	int
fdoread	int
;	O
{	O
if	O
(	O
!	O
fdoread	int
)	O
return	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct)
,	O
zsend	*(char)
,	O
csend	long
)	O
;	O
while	O
(	O
csend	long
>	O
0	int
)	O
{	O
size_t	long
crec	long
,	O
csent	long
;	O
if	O
(	O
iPrecend	int
<	O
iPrecstart	int
)	O
crec	long
=	O
iPrecstart	int
-	O
iPrecend	int
-	O
1	int
;	O
else	O
{	O
crec	long
=	O
CRECBUFLEN	O
-	O
iPrecend	int
;	O
if	O
(	O
iPrecstart	int
==	O
0	int
)	O
--	O
crec	long
;	O
}	O
if	O
(	O
crec	long
==	O
0	int
)	O
return	O
fconn_write	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),long)->(int)
(	O
qconn	*(struct)
,	O
zsend	*(char)
,	O
csend	long
)	O
;	O
csent	long
=	O
csend	long
;	O
if	O
(	O
!	O
fconn_io	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),*(char),*(long))->(int)
(	O
qconn	*(struct)
,	O
zsend	*(char)
,	O
&	O
csent	long
,	O
abPrecbuf	array(char)
+	O
iPrecend	int
,	O
&	O
crec	long
)	O
)	O
return	O
FALSE	O
;	O
csend	long
-=	O
csent	long
;	O
zsend	*(char)
+=	O
csent	long
;	O
iPrecend	int
=	O
(	O
iPrecend	int
+	O
crec	long
)	O
%	O
CRECBUFLEN	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
freceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
(	O
qconn	*(struct)
,	O
cneed	long
,	O
pcrec	*(long)
,	O
ctimeout	int
,	O
freport	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
size_t	long
cneed	long
;	O
size_t	long
*	O
pcrec	*(long)
;	O
int	O
ctimeout	int
;	O
boolean	int
freport	int
;	O
{	O
if	O
(	O
iPrecend	int
<	O
iPrecstart	int
)	O
*	O
pcrec	*(long)
=	O
iPrecstart	int
-	O
iPrecend	int
-	O
1	int
;	O
else	O
{	O
*	O
pcrec	*(long)
=	O
CRECBUFLEN	O
-	O
iPrecend	int
;	O
if	O
(	O
iPrecstart	int
==	O
0	int
)	O
--	O
(	O
*	O
pcrec	*(long)
)	O
;	O
}	O
if	O
(	O
*	O
pcrec	*(long)
==	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"freceive_data: No room in buffer"	*(char)
)	O
;	O
if	O
(	O
*	O
pcrec	*(long)
<	O
cneed	long
)	O
cneed	long
=	O
*	O
pcrec	*(long)
;	O
if	O
(	O
!	O
fconn_read	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),*(char),*(long),long,int,int)->(int)
(	O
qconn	*(struct)
,	O
abPrecbuf	array(char)
+	O
iPrecend	int
,	O
pcrec	*(long)
,	O
cneed	long
,	O
ctimeout	int
,	O
freport	int
)	O
)	O
return	O
FALSE	O
;	O
iPrecend	int
=	O
(	O
iPrecend	int
+	O
*	O
pcrec	*(long)
)	O
%	O
CRECBUFLEN	O
;	O
return	O
TRUE	O
;	O
}	O
int	O
breceive_char	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),int,int)->(int)
(	O
qconn	*(struct)
,	O
ctimeout	int
,	O
freport	int
)	O
struct	O
sconnection	struct(*(struct),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`))))))
*	O
qconn	*(struct)
;	O
int	O
ctimeout	int
;	O
boolean	int
freport	int
;	O
{	O
char	O
b	char
;	O
if	O
(	O
iPrecstart	int
==	O
iPrecend	int
)	O
{	O
size_t	long
crec	long
;	O
if	O
(	O
!	O
freceive_data	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(void),*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)))),long,*(long),int,int)->(int)
(	O
qconn	*(struct)
,	O
sizeof	O
(	O
char	O
)	O
,	O
&	O
crec	long
,	O
ctimeout	int
,	O
freport	int
)	O
)	O
return	O
-	O
2	int
;	O
if	O
(	O
crec	long
==	O
0	int
)	O
return	O
-	O
1	int
;	O
}	O
b	char
=	O
abPrecbuf	array(char)
[	O
iPrecstart	int
]	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
;	O
return	O
BUCHAR	O
(	O
b	char
)	O
;	O
}	O
boolean	int
fmail_transfer	(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))->(int)
(	O
fsuccess	int
,	O
zuser	*(char)
,	O
zmail	*(char)
,	O
zwhy	*(char)
,	O
zfromfile	*(char)
,	O
zfromsys	*(char)
,	O
ztofile	*(char)
,	O
ztosys	*(char)
,	O
zsaved	*(char)
)	O
boolean	int
fsuccess	int
;	O
const	O
char	O
*	O
zuser	*(char)
;	O
const	O
char	O
*	O
zmail	*(char)
;	O
const	O
char	O
*	O
zwhy	*(char)
;	O
const	O
char	O
*	O
zfromfile	*(char)
;	O
const	O
char	O
*	O
zfromsys	*(char)
;	O
const	O
char	O
*	O
ztofile	*(char)
;	O
const	O
char	O
*	O
ztosys	*(char)
;	O
const	O
char	O
*	O
zsaved	*(char)
;	O
{	O
const	O
char	O
*	O
zsendto	*(char)
;	O
const	O
char	O
*	O
az	array(*(char))
[	O
20	int
]	O
;	O
int	O
i	int
;	O
if	O
(	O
zmail	*(char)
!=	O
NULL	O
&&	O
*	O
zmail	*(char)
!=	O
'\0'	O
)	O
zsendto	*(char)
=	O
zmail	*(char)
;	O
else	O
zsendto	*(char)
=	O
zuser	*(char)
;	O
i	int
=	O
0	int
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"The file\n\t"	*(char)
;	O
if	O
(	O
zfromsys	*(char)
!=	O
NULL	O
)	O
{	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
zfromsys	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"!"	*(char)
;	O
}	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
zfromfile	*(char)
;	O
if	O
(	O
fsuccess	int
)	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"\nwas successfully transferred to\n\t"	*(char)
;	O
else	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"\ncould not be transferred to\n\t"	*(char)
;	O
if	O
(	O
ztosys	*(char)
!=	O
NULL	O
)	O
{	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
ztosys	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"!"	*(char)
;	O
}	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
ztofile	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"\nas requested by\n\t"	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
zuser	*(char)
;	O
if	O
(	O
!	O
fsuccess	int
)	O
{	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"\nfor the following reason:\n\t"	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
zwhy	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"\n"	*(char)
;	O
}	O
if	O
(	O
zsaved	*(char)
!=	O
NULL	O
)	O
{	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
zsaved	*(char)
;	O
az	array(*(char))
[	O
i	int
++	O
]	O
=	O
"\n"	*(char)
;	O
}	O
return	O
fsysdep_mail	(*(char),*(char),int,*(*(char)))->(int)
(	O
zsendto	*(char)
,	O
fsuccess	int
?	O
"UUCP succeeded"	*(char)
:	O
"UUCP failed"	*(char)
,	O
i	int
,	O
az	array(*(char))
)	O
;	O
}	O
