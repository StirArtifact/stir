static	O
error_t	int
ftp_conn_login	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
)	O
{	O
int	O
reply	*(int)
;	O
error_t	int
err	int
=	O
0	int
;	O
const	O
struct	O
ftp_conn_params	struct(*(void),long,int,*(char),*(char),*(char))
*	O
p	*(struct(*(void),long,int,*(char),*(char),*(char)))
=	O
conn	*(struct)
->	O
params	*(struct)
;	O
err	int
=	O
ftp_conn_cmd	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"user"	*(char)
,	O
p	*(struct(*(void),long,int,*(char),*(char),*(char)))
->	O
user	*(char)
?	O
:	O
"anonymous"	*(char)
,	O
&	O
reply	*(int)
,	O
0	int
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
reply	*(int)
==	O
REPLY_NEED_ACCT	int
)	O
{	O
char	O
*	O
acct	(*(char))->(int)
=	O
p	*(struct(*(void),long,int,*(char),*(char),*(char)))
->	O
acct	(*(char))->(int)
;	O
if	O
(	O
!	O
acct	(*(char))->(int)
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
get_login_param	*((*(struct),int,*(*(char)))->(int))
)	O
err	int
=	O
(	O
*	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
get_login_param	*((*(struct),int,*(*(char)))->(int))
)	O
(	O
conn	*(struct)
,	O
FTP_CONN_GET_LOGIN_PARAM_ACCT	int
,	O
&	O
acct	(*(char))->(int)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
err	int
=	O
acct	(*(char))->(int)
?	O
ftp_conn_cmd	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"acct"	*(char)
,	O
acct	(*(char))->(int)
,	O
&	O
reply	*(int)
,	O
0	int
)	O
:	O
EACCES	int
;	O
if	O
(	O
acct	(*(char))->(int)
&&	O
!	O
p	*(struct(*(void),long,int,*(char),*(char),*(char)))
->	O
acct	(*(char))->(int)
)	O
free	(*(void))->(void)
(	O
acct	(*(char))->(int)
)	O
;	O
}	O
if	O
(	O
!	O
err	int
&&	O
reply	*(int)
==	O
REPLY_NEED_PASS	int
)	O
{	O
char	O
*	O
pass	*(char)
=	O
p	*(struct(*(void),long,int,*(char),*(char),*(char)))
->	O
pass	*(char)
;	O
if	O
(	O
!	O
pass	*(char)
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
get_login_param	*((*(struct),int,*(*(char)))->(int))
)	O
err	int
=	O
(	O
*	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
get_login_param	*((*(struct),int,*(*(char)))->(int))
)	O
(	O
conn	*(struct)
,	O
FTP_CONN_GET_LOGIN_PARAM_PASS	int
,	O
&	O
pass	*(char)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
{	O
if	O
(	O
pass	*(char)
)	O
err	int
=	O
ftp_conn_cmd	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"pass"	*(char)
,	O
pass	*(char)
,	O
&	O
reply	*(int)
,	O
0	int
)	O
;	O
else	O
{	O
pass	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"USER"	*(char)
)	O
;	O
if	O
(	O
!	O
pass	*(char)
)	O
pass	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"LOGNAME"	*(char)
)	O
;	O
if	O
(	O
!	O
pass	*(char)
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pe	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
getuid	()->(int)
(	O
)	O
)	O
;	O
pass	*(char)
=	O
pe	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
?	O
pe	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
:	O
"?"	*(char)
;	O
}	O
pass	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
pass	*(char)
)	O
;	O
if	O
(	O
pass	*(char)
)	O
pass	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
pass	*(char)
,	O
strlen	(*(char))->(long)
(	O
pass	*(char)
)	O
+	O
1	int
)	O
;	O
if	O
(	O
pass	*(char)
)	O
{	O
strcat	(*(char),*(char))->(*(char))
(	O
pass	*(char)
,	O
"@"	*(char)
)	O
;	O
err	int
=	O
ftp_conn_cmd	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"pass"	*(char)
,	O
pass	*(char)
,	O
&	O
reply	*(int)
,	O
0	int
)	O
;	O
}	O
else	O
err	int
=	O
ENOMEM	int
;	O
}	O
}	O
if	O
(	O
pass	*(char)
&&	O
!	O
p	*(struct(*(void),long,int,*(char),*(char),*(char)))
->	O
pass	*(char)
)	O
free	(*(void))->(void)
(	O
pass	*(char)
)	O
;	O
}	O
if	O
(	O
!	O
err	int
&&	O
reply	*(int)
!=	O
REPLY_LOGIN_OK	int
)	O
{	O
if	O
(	O
REPLY_IS_FAILURE	O
(	O
reply	*(int)
)	O
)	O
err	int
=	O
EACCES	int
;	O
else	O
err	int
=	O
unexpected_reply	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),int,*(char),*(int))->(int)
(	O
conn	*(struct)
,	O
reply	*(int)
,	O
0	int
,	O
0	int
)	O
;	O
}	O
return	O
err	int
;	O
}	O
static	O
error_t	int
ftp_conn_hello	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
)	O
{	O
int	O
reply	*(int)
;	O
error_t	int
err	int
;	O
do	O
err	int
=	O
ftp_conn_get_reply	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
&	O
reply	*(int)
,	O
0	int
)	O
;	O
while	O
(	O
!	O
err	int
&&	O
reply	*(int)
==	O
REPLY_DELAY	int
)	O
;	O
if	O
(	O
err	int
)	O
return	O
err	int
;	O
if	O
(	O
reply	*(int)
==	O
REPLY_CLOSED	int
)	O
return	O
ECONNREFUSED	int
;	O
if	O
(	O
reply	*(int)
!=	O
REPLY_HELLO	int
)	O
return	O
EGRATUITOUS	O
;	O
return	O
0	int
;	O
}	O
void	O
ftp_conn_set_syshooks	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(void)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
,	O
struct	O
ftp_conn_syshooks	struct(*((*(struct),*(char),*(*(struct(short,array(char)))))->(int)),*((*(struct),*(char),*(int))->(int)),*((*(struct),*(char),int,*(int),*(*(void)))->(int)),*((*(struct),int,*(void),*((*(char),*(struct`),*(char),*(void))->(int)),*(void))->(int)),*((*(struct),*(char),*(char),*(*(char)))->(int)),*((*(struct),*(*(char)))->(int)))
*	O
syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
)	O
{	O
conn	*(struct)
->	O
syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
=	O
*	O
syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
;	O
}	O
void	O
ftp_conn_choose_syshooks	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char))->(void)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
,	O
const	O
char	O
*	O
syst	*(char)
)	O
{	O
if	O
(	O
!	O
syst	*(char)
||	O
(	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
syst	*(char)
,	O
"UNIX"	*(char)
,	O
4	int
)	O
==	O
0	int
&&	O
!	O
isalnum	(int)->(int)
(	O
syst	*(char)
[	O
4	int
]	O
)	O
)	O
)	O
ftp_conn_set_syshooks	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(void)
(	O
conn	*(struct)
,	O
&	O
ftp_conn_unix_syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
)	O
;	O
}	O
static	O
error_t	int
ftp_conn_sysify	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
)	O
{	O
int	O
reply	*(int)
;	O
const	O
char	O
*	O
txt	*(char)
;	O
error_t	int
err	int
=	O
ftp_conn_cmd	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"syst"	*(char)
,	O
0	int
,	O
&	O
reply	*(int)
,	O
&	O
txt	*(char)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
{	O
if	O
(	O
reply	*(int)
==	O
REPLY_SYSTYPE	int
||	O
reply	*(int)
==	O
REPLY_BAD_CMD	int
||	O
reply	*(int)
==	O
REPLY_UNIMP_CMD	int
||	O
REPLY_NO_LOGIN	int
)	O
{	O
if	O
(	O
reply	*(int)
==	O
REPLY_BAD_CMD	int
||	O
reply	*(int)
==	O
REPLY_UNIMP_CMD	int
||	O
reply	*(int)
==	O
REPLY_NO_LOGIN	int
)	O
txt	*(char)
=	O
0	int
;	O
if	O
(	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
choose_syshooks	*((*(struct),*(char))->(void))
)	O
(	O
*	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
choose_syshooks	*((*(struct),*(char))->(void))
)	O
(	O
conn	*(struct)
,	O
txt	*(char)
)	O
;	O
else	O
ftp_conn_choose_syshooks	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char))->(void)
(	O
conn	*(struct)
,	O
txt	*(char)
)	O
;	O
conn	*(struct)
->	O
syshooks_valid	int
=	O
1	int
;	O
}	O
else	O
err	int
=	O
unexpected_reply	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),int,*(char),*(int))->(int)
(	O
conn	*(struct)
,	O
reply	*(int)
,	O
txt	*(char)
,	O
0	int
)	O
;	O
}	O
return	O
err	int
;	O
}	O
error_t	int
ftp_conn_open	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
)	O
{	O
static	O
int	O
ftp_port	int
=	O
0	int
;	O
int	O
csock	int
;	O
error_t	int
err	int
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
ftp_addr	struct(short,short,struct(int),array(char))
;	O
if	O
(	O
conn	*(struct)
->	O
params	*(struct)
->	O
addr_type	int
!=	O
AF_INET	O
)	O
return	O
EAFNOSUPPORT	int
;	O
if	O
(	O
!	O
ftp_port	int
)	O
{	O
struct	O
servent	struct(*(char),*(*(char)),int,*(char))
*	O
se	*(struct(*(char),*(*(char)),int,*(char)))
=	O
getservbyname	(*(char),*(char))->(*(struct(*(char),*(*(char)),int,*(char))))
(	O
"ftp"	*(char)
,	O
"tcp"	*(char)
)	O
;	O
if	O
(	O
!	O
se	*(struct(*(char),*(*(char)),int,*(char)))
)	O
return	O
EGRATUITOUS	O
;	O
ftp_port	int
=	O
se	*(struct(*(char),*(*(char)),int,*(char)))
->	O
s_port	int
;	O
}	O
if	O
(	O
conn	*(struct)
->	O
control	int
>=	O
0	int
)	O
{	O
close	(int)->(int)
(	O
conn	*(struct)
->	O
control	int
)	O
;	O
conn	*(struct)
->	O
control	int
=	O
-	O
1	int
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
conn	*(struct)
->	O
syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
,	O
0	int
,	O
sizeof	O
conn	*(struct)
->	O
syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
)	O
;	O
csock	int
=	O
socket	(int,int,int)->(int)
(	O
PF_INET	int
,	O
SOCK_STREAM	int
,	O
0	int
)	O
;	O
if	O
(	O
csock	int
<	O
0	int
)	O
return	O
errno	O
;	O
ftp_addr	struct(short,short,struct(int),array(char))
.	O
sin_len	O
=	O
sizeof	O
ftp_addr	struct(short,short,struct(int),array(char))
;	O
ftp_addr	struct(short,short,struct(int),array(char))
.	O
sin_family	short
=	O
conn	*(struct)
->	O
params	*(struct)
->	O
addr_type	int
;	O
ftp_addr	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
=	O
*	O
(	O
struct	O
in_addr	struct(int)
*	O
)	O
conn	*(struct)
->	O
params	*(struct)
->	O
addr	*(*(struct(short,array(char))))
;	O
ftp_addr	struct(short,short,struct(int),array(char))
.	O
sin_port	short
=	O
ftp_port	int
;	O
if	O
(	O
connect	(int,union(*(struct(short,array(char))),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct)),int)->(int)
(	O
csock	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
ftp_addr	struct(short,short,struct(int),array(char))
,	O
sizeof	O
ftp_addr	struct(short,short,struct(int),array(char))
)	O
<	O
0	int
)	O
{	O
err	int
=	O
errno	O
;	O
close	(int)->(int)
(	O
csock	int
)	O
;	O
return	O
err	int
;	O
}	O
conn	*(struct)
->	O
control	int
=	O
csock	int
;	O
err	int
=	O
ftp_conn_hello	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
conn	*(struct)
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
opened	*((*(struct))->(void))
)	O
(	O
*	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
opened	*((*(struct))->(void))
)	O
(	O
conn	*(struct)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
ftp_conn_sysify	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
conn	*(struct)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
err	int
=	O
ftp_conn_login	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
conn	*(struct)
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
!	O
conn	*(struct)
->	O
syshooks_valid	int
)	O
err	int
=	O
ftp_conn_sysify	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(int)
(	O
conn	*(struct)
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
conn	*(struct)
->	O
type	int
)	O
{	O
int	O
reply	*(int)
;	O
err	int
=	O
ftp_conn_cmd	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"type"	*(char)
,	O
conn	*(struct)
->	O
type	int
,	O
&	O
reply	*(int)
,	O
0	int
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
reply	*(int)
!=	O
REPLY_OK	int
)	O
err	int
=	O
unexpected_reply	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),int,*(char),*(int))->(int)
(	O
conn	*(struct)
,	O
reply	*(int)
,	O
0	int
,	O
0	int
)	O
;	O
}	O
if	O
(	O
err	int
)	O
ftp_conn_close	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(void)
(	O
conn	*(struct)
)	O
;	O
return	O
err	int
;	O
}	O
void	O
ftp_conn_close	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))))->(void)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
)	O
{	O
if	O
(	O
conn	*(struct)
->	O
control	int
>=	O
0	int
)	O
close	(int)->(int)
(	O
conn	*(struct)
->	O
control	int
)	O
;	O
conn	*(struct)
->	O
control	int
=	O
-	O
1	int
;	O
if	O
(	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
&&	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
closed	*((*(struct))->(void))
)	O
(	O
*	O
conn	*(struct)
->	O
hooks	*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int))))
->	O
closed	*((*(struct))->(void))
)	O
(	O
conn	*(struct)
)	O
;	O
}	O
