static	O
int	O
is_clean_relative_path	(*(char))->(int)
(	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
swlib_is_sh_tainted_string	(*(char))->(int)
(	O
name	*(char)
)	O
||	O
strstr	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"../"	*(char)
)	O
||	O
strstr	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"/.."	*(char)
)	O
||	O
*	O
name	*(char)
==	O
'/'	O
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
1	int
;	O
}	O
}	O
static	O
void	O
fatal_error	(*(char),*(char),int)->(void)
(	O
char	O
*	O
msg0	*(char)
,	O
char	O
*	O
msg	*(char)
,	O
int	O
msg2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s : %s : %s line=[%d]\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
msg0	*(char)
,	O
msg	*(char)
,	O
msg2	int
)	O
;	O
exit	(int)->(void)
(	O
99	int
)	O
;	O
}	O
int	O
swi_com_set_header_index	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))),*(struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(int))->(int)
(	O
SWHEADER	struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char))))
*	O
header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
,	O
SWPATH_EX	struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))
*	O
swpath_ex	*(struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
int	O
*	O
ai	*(int)
)	O
{	O
int	O
index_offset	int
;	O
int	O
retval	int
;	O
index_offset	int
=	O
glbindex_find_by_swpath_ex	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))),*(struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(int)
(	O
header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
,	O
swpath_ex	*(struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
index_offset	int
>=	O
0	int
)	O
{	O
*	O
ai	*(int)
=	O
index_offset	int
;	O
retval	int
=	O
0	int
;	O
}	O
else	O
{	O
swi_com_internal_error	(*(char),int)->(void)
(	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
*	O
ai	*(int)
=	O
0	int
;	O
retval	int
=	O
-	O
1	int
;	O
}	O
return	O
retval	int
;	O
}	O
void	O
swi_com_internal_error	(*(char),int)->(void)
(	O
char	O
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
line	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: internal error : %s:%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
line	*(char)
)	O
;	O
}	O
void	O
swi_com_internal_fatal_error	(*(char),int)->(void)
(	O
char	O
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
line	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: internal fatal error : %s:%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
line	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
void	O
swi_com_assert_pointer	(*(void),*(char),int)->(void)
(	O
void	O
*	O
p	*(char)
,	O
char	O
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
lineno	int
)	O
{	O
if	O
(	O
!	O
p	*(char)
)	O
fatal_error	(*(char),*(char),int)->(void)
(	O
"fatal null pointer error"	*(char)
,	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
lineno	int
)	O
;	O
}	O
void	O
swi_com_assert_value	(int,*(char),int)->(void)
(	O
int	O
p	*(char)
,	O
char	O
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
lineno	int
)	O
{	O
if	O
(	O
!	O
p	*(char)
)	O
fatal_error	(*(char),*(char),int)->(void)
(	O
"fatal zero value error"	*(char)
,	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
lineno	int
)	O
;	O
}	O
void	O
swi_com_fatal_error	(*(char),int)->(void)
(	O
char	O
*	O
msg	*(char)
,	O
int	O
msg2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: fatal error : %s [%d]\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
msg	*(char)
,	O
msg2	int
)	O
;	O
close	*((*(void))->(int))
(	O
STDERR_FILENO	int
)	O
;	O
close	*((*(void))->(int))
(	O
STDIN_FILENO	int
)	O
;	O
close	*((*(void))->(int))
(	O
STDOUT_FILENO	int
)	O
;	O
exit	(int)->(void)
(	O
10	int
)	O
;	O
}	O
int	O
swi_com_close_memfd	(int)->(int)
(	O
int	O
fd	int
)	O
{	O
return	O
uxfio_close	(int)->(int)
(	O
fd	int
)	O
;	O
}	O
char	O
*	O
swi_com_new_fd_mem	(int,*(int))->(*(char))
(	O
int	O
fd	int
,	O
int	O
*	O
datalen	*(int)
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
*	O
ret	*(char)
;	O
int	O
len	int
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
swi_com_get_fd_mem	(int,*(int))->(*(char))
(	O
fd	int
,	O
&	O
len	int
)	O
;	O
ret	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
len	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ret	*(char)
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
len	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ret	*(char)
+	O
len	int
,	O
"\x00"	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
datalen	*(int)
)	O
*	O
datalen	*(int)
=	O
len	int
;	O
return	O
ret	*(char)
;	O
}	O
char	O
*	O
swi_com_get_fd_mem	(int,*(int))->(*(char))
(	O
int	O
fd	int
,	O
int	O
*	O
datalen	*(int)
)	O
{	O
unsigned	O
char	O
nullchar	char
=	O
'\0'	O
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
ret	*(char)
;	O
if	O
(	O
uxfio_get_dynamic_buffer	(int,*(*(char)),*(int),*(int))->(int)
(	O
fd	int
,	O
&	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
int	O
*	O
)	O
NULL	O
,	O
datalen	*(int)
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
ret	*(char)
=	O
uxfio_lseek	(int,long,int)->(long)
(	O
fd	int
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
swi_com_assert_value	(int,*(char),int)->(void)
(	O
ret	*(char)
>=	O
0	int
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
ret	*(char)
=	O
uxfio_write	(int,*(void),long)->(long)
(	O
fd	int
,	O
(	O
void	O
*	O
)	O
(	O
&	O
nullchar	char
)	O
,	O
1	int
)	O
;	O
swi_com_assert_value	(int,*(char),int)->(void)
(	O
ret	*(char)
==	O
1	int
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
if	O
(	O
uxfio_get_dynamic_buffer	(int,*(*(char)),*(int),*(int))->(int)
(	O
fd	int
,	O
&	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
(	O
int	O
*	O
)	O
NULL	O
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
return	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
}	O
void	O
swi_com_do_preview	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char),int,long)->(void)
(	O
TARU	struct(char,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(int,*(char),long)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
taru	*(void)
,	O
struct	O
new_cpio_header	struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)
*	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
char	O
*	O
tar_header_p	*(char)
,	O
int	O
header_len	int
,	O
time_t	long
now	long
)	O
{	O
char	O
ftype	char
;	O
int	O
ret	*(char)
;	O
int	O
eoa	*(int)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
sb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
uname	array(char)
[	O
64	int
]	O
;	O
char	O
gname	array(char)
[	O
64	int
]	O
;	O
ret	*(char)
=	O
taru_read_in_tar_header2	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,*(char),*(int),int,int)->(int)
(	O
taru	*(void)
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
-	O
1	int
,	O
tar_header_p	*(char)
,	O
&	O
eoa	*(int)
,	O
0	int
,	O
TARRECORDSIZE	int
)	O
;	O
if	O
(	O
ret	*(char)
<=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"error from taru_read_in_tar_header2 in do_swi_preview\n"	*(char)
)	O
;	O
}	O
taru_filehdr2statbuf	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(int)
(	O
&	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
uname	array(char)
,	O
tar_header_p	*(char)
+	O
THB_BO_uname	int
,	O
31	int
)	O
;	O
uname	array(char)
[	O
31	int
]	O
=	O
'\0'	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
gname	array(char)
,	O
tar_header_p	*(char)
+	O
THB_BO_gname	int
,	O
31	int
)	O
;	O
gname	array(char)
[	O
31	int
]	O
=	O
'\0'	O
;	O
ftype	char
=	O
taru_get_tar_filetype	(int)->(int)
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
.	O
st_mode	int
)	O
;	O
if	O
(	O
ftype	char
>=	O
0	int
)	O
ls_list	(*(char),*(char),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),int,int)->(void)
(	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
,	O
ahsStaticGetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
now	long
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
uname	array(char)
,	O
gname	array(char)
,	O
ftype	char
,	O
LS_LIST_VERBOSE_L1	O
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: unrecognized file type in mode [%d] for file: %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
int	O
)	O
(	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
.	O
st_mode	int
)	O
,	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
;	O
}	O
void	O
swi_com_check_clean_relative_path	(*(char))->(void)
(	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
is_clean_relative_path	(*(char))->(int)
(	O
name	*(char)
)	O
)	O
{	O
return	O
;	O
}	O
else	O
{	O
swi_com_assert_value	(int,*(char),int)->(void)
(	O
0	int
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
_exit	(int)->(void)
(	O
44	int
)	O
;	O
}	O
}	O
void	O
swiInitListOfObjects	(*(*(void)))->(void)
(	O
void	O
*	O
*	O
pp	*(*(void))
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
SWI_MAX_OBJ	int
;	O
i	int
++	O
)	O
*	O
(	O
pp	*(*(void))
+	O
i	int
)	O
=	O
(	O
void	O
*	O
)	O
NULL	O
;	O
}	O
int	O
swiGetNumberOfObjects	(*(*(void)))->(int)
(	O
void	O
*	O
*	O
pp	*(*(void))
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
(	O
SWI_MAX_OBJ	int
-	O
1	int
)	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
*	O
(	O
pp	*(*(void))
+	O
i	int
)	O
==	O
(	O
void	O
*	O
)	O
NULL	O
)	O
{	O
return	O
i	int
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"too many contained objects, fatal error\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
88	int
)	O
;	O
}	O
int	O
swiAddObjectToList	(*(*(void)),*(void))->(int)
(	O
void	O
*	O
*	O
pp	*(*(void))
,	O
void	O
*	O
p	*(char)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
(	O
SWI_MAX_OBJ	int
-	O
1	int
)	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
*	O
(	O
pp	*(*(void))
+	O
i	int
)	O
==	O
(	O
void	O
*	O
)	O
NULL	O
)	O
{	O
*	O
(	O
pp	*(*(void))
+	O
i	int
)	O
=	O
p	*(char)
;	O
return	O
0	int
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"too many contained objects, fatal error\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
88	int
)	O
;	O
}	O
void	O
swi_com_header_manifold_reset	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(void)
(	O
SWHEADER	struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char))))
*	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
{	O
swheader_reset	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(void)
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
;	O
swheader_set_current_offset_p_value	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))),int)->(void)
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
,	O
0	int
)	O
;	O
swheader_goto_next_line	(*(void),*(int),int)->(*(char))
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
,	O
swheader_get_current_offset_p	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(*(int))
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
,	O
SWHEADER_GET_NEXT	int
)	O
;	O
}	O
int	O
swi_com_field_edge_detect	(*(char),*(char))->(int)
(	O
char	O
*	O
current	*(char)
,	O
char	O
*	O
previous	*(char)
)	O
{	O
char	O
*	O
c	int
=	O
current	*(char)
;	O
char	O
*	O
p	*(char)
=	O
previous	*(char)
;	O
if	O
(	O
!	O
p	*(char)
||	O
!	O
c	int
)	O
{	O
swi_com_assert_pointer	(*(void),*(char),int)->(void)
(	O
(	O
void	O
*	O
)	O
NULL	O
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
}	O
if	O
(	O
strlen	(*(char))->(long)
(	O
p	*(char)
)	O
==	O
0	int
&&	O
strlen	(*(char))->(long)
(	O
c	int
)	O
)	O
return	O
1	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
p	*(char)
,	O
c	int
)	O
&&	O
strlen	(*(char))->(long)
(	O
c	int
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
swi_com_field_edge_detect_fileset	(*(struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(int)
(	O
SWPATH_EX	struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))
*	O
current	*(char)
,	O
SWPATH_EX	struct(int,int,int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))
*	O
previous	*(char)
)	O
{	O
int	O
ret	*(char)
;	O
ret	*(char)
=	O
swi_com_field_edge_detect	(*(char),*(char))->(int)
(	O
current	*(char)
->	O
fileset_control_dir	*(char)
,	O
previous	*(char)
->	O
fileset_control_dir	*(char)
)	O
;	O
if	O
(	O
ret	*(char)
==	O
0	int
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
current	*(char)
->	O
pfiles	*(char)
)	O
==	O
0	int
&&	O
strlen	(*(char))->(long)
(	O
previous	*(char)
->	O
pfiles	*(char)
)	O
)	O
{	O
ret	*(char)
=	O
1	int
;	O
}	O
}	O
return	O
ret	*(char)
;	O
}	O
void	O
print_header	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(void)
(	O
SWHEADER	struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char))))
*	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
{	O
char	O
*	O
next_attr	*(char)
;	O
char	O
*	O
next_line	*(char)
;	O
swheader_reset	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(void)
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
;	O
swheader_set_current_offset_p_value	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))),int)->(void)
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
,	O
0	int
)	O
;	O
next_line	*(char)
=	O
swheader_get_next_object	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))),int,int)->(*(char))
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
,	O
(	O
int	O
)	O
UCHAR_MAX	O
,	O
(	O
int	O
)	O
UCHAR_MAX	O
)	O
;	O
while	O
(	O
next_line	*(char)
)	O
{	O
swheaderline_write_debug	(*(char),int)->(int)
(	O
next_line	*(char)
,	O
STDERR_FILENO	int
)	O
;	O
swheader_goto_next_line	(*(void),*(int),int)->(*(char))
(	O
(	O
void	O
*	O
)	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
,	O
swheader_get_current_offset_p	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(*(int))
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
,	O
SWHEADER_PEEK_NEXT	int
)	O
;	O
while	O
(	O
(	O
next_attr	*(char)
=	O
swheader_get_next_attribute	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))))->(*(char))
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
)	O
)	O
)	O
swheaderline_write_debug	(*(char),int)->(int)
(	O
next_attr	*(char)
,	O
STDERR_FILENO	int
)	O
;	O
next_line	*(char)
=	O
swheader_get_next_object	(*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*`,*`,int)->(*`)))),int,int)->(*(char))
(	O
swheader	*(struct(*(char),*(void),array(*(void)),*(int),int,struct(*(int),int,int),*((*(void),*(int),int)->(*(char)))))
,	O
(	O
int	O
)	O
UCHAR_MAX	O
,	O
(	O
int	O
)	O
UCHAR_MAX	O
)	O
;	O
}	O
}	O
void	O
swi_check_clean_relative_path	(*(char))->(void)
(	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
is_clean_relative_path	(*(char))->(int)
(	O
name	*(char)
)	O
)	O
{	O
return	O
;	O
}	O
else	O
{	O
swi_com_assert_value	(int,*(char),int)->(void)
(	O
0	int
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
_exit	(int)->(void)
(	O
44	int
)	O
;	O
}	O
}	O
int	O
swi_is_global_index	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)),*(char))->(int)
(	O
SWPATH	struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct(*`,int,int,long,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int,int)
*	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
,	O
char	O
*	O
name	*(char)
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
if	O
(	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strstr	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"/INDEX"	*(char)
)	O
)	O
&&	O
*	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
+	O
6	int
)	O
==	O
'\0'	O
&&	O
strlen	(*(char))->(long)
(	O
swpath_get_dfiles	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(*(char))
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
)	O
==	O
0	int
&&	O
strlen	(*(char))->(long)
(	O
swpath_get_pfiles	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(*(char))
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
)	O
==	O
0	int
&&	O
strlen	(*(char))->(long)
(	O
swpath_get_product_control_dir	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(*(char))
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
)	O
==	O
0	int
)	O
{	O
return	O
1	int
;	O
}	O
else	O
{	O
return	O
0	int
;	O
}	O
}	O
