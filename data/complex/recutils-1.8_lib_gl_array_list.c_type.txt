struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
{	O
struct	O
gl_list_impl_base	struct(*(struct(*((*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool)->(*(struct`))),*((*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool,long,*(*`))->(*(struct`))),*((*(struct`))->(long)),*((*(struct`),*(struct`))->(*(void))),*((*(struct`),*(struct`),*(void))->(int)),*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),*(struct`))->(*(struct`))),*((*(struct`),long)->(*(void))),*((*(struct`),long,*(void))->(*(struct`))),*((*(struct`),long,long,*(void))->(*(struct`))),*((*(struct`),long,long,*(void))->(long)),*((*(struct`),*(void))->(*(struct`))),*((*(struct`),*(void))->(*(struct`))),*((*(struct`),*(struct`),*(void))->(*(struct`))),*((*(struct`),*(struct`),*(void))->(*(struct`))),*((*(struct`),long,*(void))->(*(struct`))),*((*(struct`),*(struct`))->(bool)),*((*(struct`),long)->(bool)),*((*(struct`),*(void))->(bool)),*((*(struct`))->(void)),*((*(struct`))->(struct(*`,*`,long,*`,*`,long,long))),*((*(struct`),long,long)->(struct(*`,*`,long,*`,*`,long,long))),*((*(struct`),*(*`),*(*`))->(bool)),*((*(struct`))->(void)),*((*(struct`),*((*`,*`)->(int)),*(void))->(*(struct`))),*((*(struct`),*((*`,*`)->(int)),long,long,*(void))->(*(struct`))),*((*(struct`),*((*`,*`)->(int)),*(void))->(long)),*((*(struct`),*((*`,*`)->(int)),long,long,*(void))->(long)),*((*(struct`),*((*`,*`)->(int)),*(void))->(*(struct`))),*((*(struct`),*((*`,*`)->(int)),*(void))->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
count	long
;	O
size_t	long
allocated	long
;	O
}	O
;	O
static	O
gl_list_t	*(struct)
gl_array_nx_create_empty	(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)->(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))
(	O
gl_list_implementation_t	*(struct)
implementation	*(struct)
,	O
gl_listelement_equals_fn	*((*(void),*(void))->(bool))
equals_fn	*((*(void),*(void))->(bool))
,	O
gl_listelement_hashcode_fn	*((*(void))->(long))
hashcode_fn	*((*(void))->(long))
,	O
gl_listelement_dispose_fn	*((*(void))->(void))
dispose_fn	*((*(void))->(void))
,	O
bool	bool
allow_duplicates	bool
)	O
{	O
struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
*	O
list	*(struct)
=	O
(	O
struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
)	O
)	O
;	O
if	O
(	O
list	*(struct)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
vtable	*(struct)
=	O
implementation	*(struct)
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
equals_fn	*((*(void),*(void))->(bool))
=	O
equals_fn	*((*(void),*(void))->(bool))
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
hashcode_fn	*((*(void))->(long))
=	O
hashcode_fn	*((*(void))->(long))
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
=	O
dispose_fn	*((*(void))->(void))
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
allow_duplicates	bool
=	O
allow_duplicates	bool
;	O
list	*(struct)
->	O
elements	*(*(void))
=	O
NULL	O
;	O
list	*(struct)
->	O
count	long
=	O
0	int
;	O
list	*(struct)
->	O
allocated	long
=	O
0	int
;	O
return	O
list	*(struct)
;	O
}	O
static	O
gl_list_t	*(struct)
gl_array_nx_create	(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool,long,*(*(void)))->(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))
(	O
gl_list_implementation_t	*(struct)
implementation	*(struct)
,	O
gl_listelement_equals_fn	*((*(void),*(void))->(bool))
equals_fn	*((*(void),*(void))->(bool))
,	O
gl_listelement_hashcode_fn	*((*(void))->(long))
hashcode_fn	*((*(void))->(long))
,	O
gl_listelement_dispose_fn	*((*(void))->(void))
dispose_fn	*((*(void))->(void))
,	O
bool	bool
allow_duplicates	bool
,	O
size_t	long
count	long
,	O
const	O
void	O
*	O
*	O
contents	*(*(void))
)	O
{	O
struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
*	O
list	*(struct)
=	O
(	O
struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
gl_list_impl	struct(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool),*(*(void)),long,long)
)	O
)	O
;	O
if	O
(	O
list	*(struct)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
vtable	*(struct)
=	O
implementation	*(struct)
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
equals_fn	*((*(void),*(void))->(bool))
=	O
equals_fn	*((*(void),*(void))->(bool))
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
hashcode_fn	*((*(void))->(long))
=	O
hashcode_fn	*((*(void))->(long))
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
=	O
dispose_fn	*((*(void))->(void))
;	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
allow_duplicates	bool
=	O
allow_duplicates	bool
;	O
if	O
(	O
count	long
>	O
0	int
)	O
{	O
if	O
(	O
size_overflow_p	O
(	O
xtimes	O
(	O
count	long
,	O
sizeof	O
(	O
const	O
void	O
*	O
)	O
)	O
)	O
)	O
goto	O
fail	O
;	O
list	*(struct)
->	O
elements	*(*(void))
=	O
(	O
const	O
void	O
*	O
*	O
)	O
malloc	(long)->(*(void))
(	O
count	long
*	O
sizeof	O
(	O
const	O
void	O
*	O
)	O
)	O
;	O
if	O
(	O
list	*(struct)
->	O
elements	*(*(void))
==	O
NULL	O
)	O
goto	O
fail	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
list	*(struct)
->	O
elements	*(*(void))
,	O
contents	*(*(void))
,	O
count	long
*	O
sizeof	O
(	O
const	O
void	O
*	O
)	O
)	O
;	O
}	O
else	O
list	*(struct)
->	O
elements	*(*(void))
=	O
NULL	O
;	O
list	*(struct)
->	O
count	long
=	O
count	long
;	O
list	*(struct)
->	O
allocated	long
=	O
count	long
;	O
return	O
list	*(struct)
;	O
fail	O
:	O
free	(*(void))->(void)
(	O
list	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
static	O
size_t	long
gl_array_size	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(long)
(	O
gl_list_t	*(struct)
list	*(struct)
)	O
{	O
return	O
list	*(struct)
->	O
count	long
;	O
}	O
static	O
const	O
void	O
*	O
_GL_ATTRIBUTE_PURE	O
gl_array_node_value	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(*(void))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
)	O
{	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
list	*(struct)
->	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
return	O
list	*(struct)
->	O
elements	*(*(void))
[	O
index	(*(char),int)->(*(char))
]	O
;	O
}	O
static	O
int	O
gl_array_node_nx_set_value	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct),*(void))->(int)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
list	*(struct)
->	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
list	*(struct)
->	O
elements	*(*(void))
[	O
index	(*(char),int)->(*(char))
]	O
=	O
elt	*(void)
;	O
return	O
0	int
;	O
}	O
static	O
gl_list_node_t	*(struct)
_GL_ATTRIBUTE_PURE	O
gl_array_next_node	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
)	O
{	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
list	*(struct)
->	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
index	(*(char),int)->(*(char))
++	O
;	O
if	O
(	O
index	(*(char),int)->(*(char))
<	O
list	*(struct)
->	O
count	long
)	O
return	O
INDEX_TO_NODE	O
(	O
index	(*(char),int)->(*(char))
)	O
;	O
else	O
return	O
NULL	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
_GL_ATTRIBUTE_PURE	O
gl_array_previous_node	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
)	O
{	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
list	*(struct)
->	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
index	(*(char),int)->(*(char))
>	O
0	int
)	O
return	O
INDEX_TO_NODE	O
(	O
index	(*(char),int)->(*(char))
-	O
1	int
)	O
;	O
else	O
return	O
NULL	O
;	O
}	O
static	O
const	O
void	O
*	O
_GL_ATTRIBUTE_PURE	O
gl_array_get_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long)->(*(void))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
position	long
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
if	O
(	O
!	O
(	O
position	long
<	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
return	O
list	*(struct)
->	O
elements	*(*(void))
[	O
position	long
]	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_nx_set_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
position	long
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
if	O
(	O
!	O
(	O
position	long
<	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
list	*(struct)
->	O
elements	*(*(void))
[	O
position	long
]	O
=	O
elt	*(void)
;	O
return	O
INDEX_TO_NODE	O
(	O
position	long
)	O
;	O
}	O
static	O
size_t	long
gl_array_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long,*(void))->(long)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
start_index	long
,	O
size_t	long
end_index	long
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
if	O
(	O
!	O
(	O
start_index	long
<=	O
end_index	long
&&	O
end_index	long
<=	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
start_index	long
<	O
end_index	long
)	O
{	O
gl_listelement_equals_fn	*((*(void),*(void))->(bool))
equals	*((*(void),*(void))->(bool))
=	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
equals_fn	*((*(void),*(void))->(bool))
;	O
if	O
(	O
equals	*((*(void),*(void))->(bool))
!=	O
NULL	O
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
start_index	long
;	O
;	O
)	O
{	O
if	O
(	O
equals	*((*(void),*(void))->(bool))
(	O
elt	*(void)
,	O
list	*(struct)
->	O
elements	*(*(void))
[	O
i	long
]	O
)	O
)	O
return	O
i	long
;	O
i	long
++	O
;	O
if	O
(	O
i	long
==	O
end_index	long
)	O
break	O
;	O
}	O
}	O
else	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
start_index	long
;	O
;	O
)	O
{	O
if	O
(	O
elt	*(void)
==	O
list	*(struct)
->	O
elements	*(*(void))
[	O
i	long
]	O
)	O
return	O
i	long
;	O
i	long
++	O
;	O
if	O
(	O
i	long
==	O
end_index	long
)	O
break	O
;	O
}	O
}	O
}	O
return	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_search_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long,*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
start_index	long
,	O
size_t	long
end_index	long
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
index	(*(char),int)->(*(char))
=	O
gl_array_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long,*(void))->(long)
(	O
list	*(struct)
,	O
start_index	long
,	O
end_index	long
,	O
elt	*(void)
)	O
;	O
return	O
INDEX_TO_NODE	O
(	O
index	(*(char),int)->(*(char))
)	O
;	O
}	O
static	O
int	O
grow	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(int)
(	O
gl_list_t	*(struct)
list	*(struct)
)	O
{	O
size_t	long
new_allocated	long
;	O
size_t	long
memory_size	long
;	O
const	O
void	O
*	O
*	O
memory	*(*(void))
;	O
new_allocated	long
=	O
xtimes	O
(	O
list	*(struct)
->	O
allocated	long
,	O
2	int
)	O
;	O
new_allocated	long
=	O
xsum	(long,long)->(long)
(	O
new_allocated	long
,	O
1	int
)	O
;	O
memory_size	long
=	O
xtimes	O
(	O
new_allocated	long
,	O
sizeof	O
(	O
const	O
void	O
*	O
)	O
)	O
;	O
if	O
(	O
size_overflow_p	O
(	O
memory_size	long
)	O
)	O
return	O
-	O
1	int
;	O
memory	*(*(void))
=	O
(	O
const	O
void	O
*	O
*	O
)	O
realloc	(*(void),long)->(*(void))
(	O
list	*(struct)
->	O
elements	*(*(void))
,	O
memory_size	long
)	O
;	O
if	O
(	O
memory	*(*(void))
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
list	*(struct)
->	O
elements	*(*(void))
=	O
memory	*(*(void))
;	O
list	*(struct)
->	O
allocated	long
=	O
new_allocated	long
;	O
return	O
0	int
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_nx_add_first	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
i	long
;	O
if	O
(	O
count	long
==	O
list	*(struct)
->	O
allocated	long
)	O
if	O
(	O
grow	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(int)
(	O
list	*(struct)
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
for	O
(	O
i	long
=	O
count	long
;	O
i	long
>	O
0	int
;	O
i	long
--	O
)	O
elements	*(*(void))
[	O
i	long
]	O
=	O
elements	*(*(void))
[	O
i	long
-	O
1	int
]	O
;	O
elements	*(*(void))
[	O
0	int
]	O
=	O
elt	*(void)
;	O
list	*(struct)
->	O
count	long
=	O
count	long
+	O
1	int
;	O
return	O
INDEX_TO_NODE	O
(	O
0	int
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_nx_add_last	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
if	O
(	O
count	long
==	O
list	*(struct)
->	O
allocated	long
)	O
if	O
(	O
grow	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(int)
(	O
list	*(struct)
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
list	*(struct)
->	O
elements	*(*(void))
[	O
count	long
]	O
=	O
elt	*(void)
;	O
list	*(struct)
->	O
count	long
=	O
count	long
+	O
1	int
;	O
return	O
INDEX_TO_NODE	O
(	O
count	long
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_nx_add_before	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct),*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
size_t	long
position	long
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
position	long
=	O
index	(*(char),int)->(*(char))
;	O
if	O
(	O
count	long
==	O
list	*(struct)
->	O
allocated	long
)	O
if	O
(	O
grow	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(int)
(	O
list	*(struct)
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
for	O
(	O
i	long
=	O
count	long
;	O
i	long
>	O
position	long
;	O
i	long
--	O
)	O
elements	*(*(void))
[	O
i	long
]	O
=	O
elements	*(*(void))
[	O
i	long
-	O
1	int
]	O
;	O
elements	*(*(void))
[	O
position	long
]	O
=	O
elt	*(void)
;	O
list	*(struct)
->	O
count	long
=	O
count	long
+	O
1	int
;	O
return	O
INDEX_TO_NODE	O
(	O
position	long
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_nx_add_after	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct),*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
size_t	long
position	long
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
position	long
=	O
index	(*(char),int)->(*(char))
+	O
1	int
;	O
if	O
(	O
count	long
==	O
list	*(struct)
->	O
allocated	long
)	O
if	O
(	O
grow	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(int)
(	O
list	*(struct)
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
for	O
(	O
i	long
=	O
count	long
;	O
i	long
>	O
position	long
;	O
i	long
--	O
)	O
elements	*(*(void))
[	O
i	long
]	O
=	O
elements	*(*(void))
[	O
i	long
-	O
1	int
]	O
;	O
elements	*(*(void))
[	O
position	long
]	O
=	O
elt	*(void)
;	O
list	*(struct)
->	O
count	long
=	O
count	long
+	O
1	int
;	O
return	O
INDEX_TO_NODE	O
(	O
position	long
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_nx_add_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
position	long
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
(	O
position	long
<=	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
count	long
==	O
list	*(struct)
->	O
allocated	long
)	O
if	O
(	O
grow	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(int)
(	O
list	*(struct)
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
for	O
(	O
i	long
=	O
count	long
;	O
i	long
>	O
position	long
;	O
i	long
--	O
)	O
elements	*(*(void))
[	O
i	long
]	O
=	O
elements	*(*(void))
[	O
i	long
-	O
1	int
]	O
;	O
elements	*(*(void))
[	O
position	long
]	O
=	O
elt	*(void)
;	O
list	*(struct)
->	O
count	long
=	O
count	long
+	O
1	int
;	O
return	O
INDEX_TO_NODE	O
(	O
position	long
)	O
;	O
}	O
static	O
bool	bool
gl_array_remove_node	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(bool)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_list_node_t	*(struct)
node	*(struct)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
uintptr_t	long
index	(*(char),int)->(*(char))
=	O
NODE_TO_INDEX	O
(	O
node	*(struct)
)	O
;	O
size_t	long
position	long
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
(	O
index	(*(char),int)->(*(char))
<	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
position	long
=	O
index	(*(char),int)->(*(char))
;	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
if	O
(	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
!=	O
NULL	O
)	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
(	O
elements	*(*(void))
[	O
position	long
]	O
)	O
;	O
for	O
(	O
i	long
=	O
position	long
+	O
1	int
;	O
i	long
<	O
count	long
;	O
i	long
++	O
)	O
elements	*(*(void))
[	O
i	long
-	O
1	int
]	O
=	O
elements	*(*(void))
[	O
i	long
]	O
;	O
list	*(struct)
->	O
count	long
=	O
count	long
-	O
1	int
;	O
return	O
true	int
;	O
}	O
static	O
bool	bool
gl_array_remove_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long)->(bool)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
position	long
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
;	O
size_t	long
i	long
;	O
if	O
(	O
!	O
(	O
position	long
<	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
if	O
(	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
!=	O
NULL	O
)	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
(	O
elements	*(*(void))
[	O
position	long
]	O
)	O
;	O
for	O
(	O
i	long
=	O
position	long
+	O
1	int
;	O
i	long
<	O
count	long
;	O
i	long
++	O
)	O
elements	*(*(void))
[	O
i	long
-	O
1	int
]	O
=	O
elements	*(*(void))
[	O
i	long
]	O
;	O
list	*(struct)
->	O
count	long
=	O
count	long
-	O
1	int
;	O
return	O
true	int
;	O
}	O
static	O
bool	bool
gl_array_remove	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(void))->(bool)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
position	long
=	O
gl_array_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long,*(void))->(long)
(	O
list	*(struct)
,	O
0	int
,	O
list	*(struct)
->	O
count	long
,	O
elt	*(void)
)	O
;	O
if	O
(	O
position	long
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
return	O
false	int
;	O
else	O
return	O
gl_array_remove_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long)->(bool)
(	O
list	*(struct)
,	O
position	long
)	O
;	O
}	O
static	O
void	O
gl_array_list_free	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(void)
(	O
gl_list_t	*(struct)
list	*(struct)
)	O
{	O
if	O
(	O
list	*(struct)
->	O
elements	*(*(void))
!=	O
NULL	O
)	O
{	O
if	O
(	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
!=	O
NULL	O
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
if	O
(	O
count	long
>	O
0	int
)	O
{	O
gl_listelement_dispose_fn	*((*(void))->(void))
dispose	*((*(void))->(void))
=	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
dispose_fn	*((*(void))->(void))
;	O
const	O
void	O
*	O
*	O
elements	*(*(void))
=	O
list	*(struct)
->	O
elements	*(*(void))
;	O
do	O
dispose	*((*(void))->(void))
(	O
*	O
elements	*(*(void))
++	O
)	O
;	O
while	O
(	O
--	O
count	long
>	O
0	int
)	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
list	*(struct)
->	O
elements	*(*(void))
)	O
;	O
}	O
free	(*(void))->(void)
(	O
list	*(struct)
)	O
;	O
}	O
static	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
gl_array_iterator	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*`,*`,*`,*`,bool),*(*`),long,long)),long,*(void),*(void),long,long))
(	O
gl_list_t	*(struct)
list	*(struct)
)	O
{	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
vtable	*(struct)
=	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
vtable	*(struct)
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
list	*(struct)
=	O
list	*(struct)
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
count	long
=	O
list	*(struct)
->	O
count	long
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
p	*(void)
=	O
list	*(struct)
->	O
elements	*(*(void))
+	O
0	int
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
q	*(void)
=	O
list	*(struct)
->	O
elements	*(*(void))
+	O
list	*(struct)
->	O
count	long
;	O
return	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
;	O
}	O
static	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
gl_array_iterator_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long)->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*`,*`,*`,*`,bool),*(*`),long,long)),long,*(void),*(void),long,long))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
size_t	long
start_index	long
,	O
size_t	long
end_index	long
)	O
{	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
;	O
if	O
(	O
!	O
(	O
start_index	long
<=	O
end_index	long
&&	O
end_index	long
<=	O
list	*(struct)
->	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
vtable	*(struct)
=	O
list	*(struct)
->	O
base	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)
.	O
vtable	*(struct)
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
list	*(struct)
=	O
list	*(struct)
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
count	long
=	O
list	*(struct)
->	O
count	long
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
p	*(void)
=	O
list	*(struct)
->	O
elements	*(*(void))
+	O
start_index	long
;	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
.	O
q	*(void)
=	O
list	*(struct)
->	O
elements	*(*(void))
+	O
end_index	long
;	O
return	O
result	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void),*(void),long,long)
;	O
}	O
static	O
bool	bool
gl_array_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(struct`,*`,long,long)),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
*	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
,	O
const	O
void	O
*	O
*	O
eltp	*(*(void))
,	O
gl_list_node_t	*(struct)
*	O
nodep	*(*(struct))
)	O
{	O
gl_list_t	*(struct)
list	*(struct)
=	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
list	*(struct)
;	O
if	O
(	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
count	long
!=	O
list	*(struct)
->	O
count	long
)	O
{	O
if	O
(	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
count	long
!=	O
list	*(struct)
->	O
count	long
+	O
1	int
)	O
abort	()->(void)
(	O
)	O
;	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
count	long
--	O
;	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
p	*(void)
=	O
(	O
const	O
void	O
*	O
*	O
)	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
p	*(void)
-	O
1	int
;	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
q	*(void)
=	O
(	O
const	O
void	O
*	O
*	O
)	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
q	*(void)
-	O
1	int
;	O
}	O
if	O
(	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
p	*(void)
<	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
q	*(void)
)	O
{	O
const	O
void	O
*	O
*	O
p	*(void)
=	O
(	O
const	O
void	O
*	O
*	O
)	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
p	*(void)
;	O
*	O
eltp	*(*(void))
=	O
*	O
p	*(void)
;	O
if	O
(	O
nodep	*(*(struct))
!=	O
NULL	O
)	O
*	O
nodep	*(*(struct))
=	O
INDEX_TO_NODE	O
(	O
p	*(void)
-	O
list	*(struct)
->	O
elements	*(*(void))
)	O
;	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
->	O
p	*(void)
=	O
p	*(void)
+	O
1	int
;	O
return	O
true	int
;	O
}	O
else	O
return	O
false	int
;	O
}	O
static	O
void	O
gl_array_iterator_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(struct`,*`,long,long)),long,*(void),*(void),long,long)))->(void)
(	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
*	O
iterator	*(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)))),*(struct),long,*(void),*(void),long,long))
)	O
{	O
}	O
static	O
size_t	long
gl_array_sortedlist_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(long)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_listelement_compar_fn	*((*(void),*(void))->(int))
compar	*((*(void),*(void))->(int))
,	O
size_t	long
low	long
,	O
size_t	long
high	long
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
if	O
(	O
!	O
(	O
low	long
<=	O
high	long
&&	O
high	long
<=	O
list	*(struct)
->	O
count	long
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
low	long
<	O
high	long
)	O
{	O
do	O
{	O
size_t	long
mid	long
=	O
low	long
+	O
(	O
high	long
-	O
low	long
)	O
/	O
2	int
;	O
int	O
cmp	int
=	O
compar	*((*(void),*(void))->(int))
(	O
list	*(struct)
->	O
elements	*(*(void))
[	O
mid	long
]	O
,	O
elt	*(void)
)	O
;	O
if	O
(	O
cmp	int
<	O
0	int
)	O
low	long
=	O
mid	long
+	O
1	int
;	O
else	O
if	O
(	O
cmp	int
>	O
0	int
)	O
high	long
=	O
mid	long
;	O
else	O
{	O
high	long
=	O
mid	long
;	O
while	O
(	O
low	long
<	O
high	long
)	O
{	O
size_t	long
mid2	long
=	O
low	long
+	O
(	O
high	long
-	O
low	long
)	O
/	O
2	int
;	O
int	O
cmp2	int
=	O
compar	*((*(void),*(void))->(int))
(	O
list	*(struct)
->	O
elements	*(*(void))
[	O
mid2	long
]	O
,	O
elt	*(void)
)	O
;	O
if	O
(	O
cmp2	int
<	O
0	int
)	O
low	long
=	O
mid2	long
+	O
1	int
;	O
else	O
if	O
(	O
cmp2	int
>	O
0	int
)	O
abort	()->(void)
(	O
)	O
;	O
else	O
{	O
if	O
(	O
mid2	long
==	O
low	long
)	O
break	O
;	O
high	long
=	O
mid2	long
-	O
1	int
;	O
}	O
}	O
return	O
low	long
;	O
}	O
}	O
while	O
(	O
low	long
<	O
high	long
)	O
;	O
}	O
return	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
;	O
}	O
static	O
size_t	long
gl_array_sortedlist_indexof	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(long)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_listelement_compar_fn	*((*(void),*(void))->(int))
compar	*((*(void),*(void))->(int))
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
return	O
gl_array_sortedlist_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(long)
(	O
list	*(struct)
,	O
compar	*((*(void),*(void))->(int))
,	O
0	int
,	O
list	*(struct)
->	O
count	long
,	O
elt	*(void)
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_sortedlist_search_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_listelement_compar_fn	*((*(void),*(void))->(int))
compar	*((*(void),*(void))->(int))
,	O
size_t	long
low	long
,	O
size_t	long
high	long
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
index	(*(char),int)->(*(char))
=	O
gl_array_sortedlist_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(long)
(	O
list	*(struct)
,	O
compar	*((*(void),*(void))->(int))
,	O
low	long
,	O
high	long
,	O
elt	*(void)
)	O
;	O
return	O
INDEX_TO_NODE	O
(	O
index	(*(char),int)->(*(char))
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_sortedlist_search	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_listelement_compar_fn	*((*(void),*(void))->(int))
compar	*((*(void),*(void))->(int))
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
index	(*(char),int)->(*(char))
=	O
gl_array_sortedlist_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(long)
(	O
list	*(struct)
,	O
compar	*((*(void),*(void))->(int))
,	O
0	int
,	O
list	*(struct)
->	O
count	long
,	O
elt	*(void)
)	O
;	O
return	O
INDEX_TO_NODE	O
(	O
index	(*(char),int)->(*(char))
)	O
;	O
}	O
static	O
gl_list_node_t	*(struct)
gl_array_sortedlist_nx_add	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(*(struct))
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_listelement_compar_fn	*((*(void),*(void))->(int))
compar	*((*(void),*(void))->(int))
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
count	long
=	O
list	*(struct)
->	O
count	long
;	O
size_t	long
low	long
=	O
0	int
;	O
size_t	long
high	long
=	O
count	long
;	O
while	O
(	O
low	long
<	O
high	long
)	O
{	O
size_t	long
mid	long
=	O
low	long
+	O
(	O
high	long
-	O
low	long
)	O
/	O
2	int
;	O
int	O
cmp	int
=	O
compar	*((*(void),*(void))->(int))
(	O
list	*(struct)
->	O
elements	*(*(void))
[	O
mid	long
]	O
,	O
elt	*(void)
)	O
;	O
if	O
(	O
cmp	int
<	O
0	int
)	O
low	long
=	O
mid	long
+	O
1	int
;	O
else	O
if	O
(	O
cmp	int
>	O
0	int
)	O
high	long
=	O
mid	long
;	O
else	O
{	O
low	long
=	O
mid	long
;	O
break	O
;	O
}	O
}	O
return	O
gl_array_nx_add_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void))->(*(struct))
(	O
list	*(struct)
,	O
low	long
,	O
elt	*(void)
)	O
;	O
}	O
static	O
bool	bool
gl_array_sortedlist_remove	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(bool)
(	O
gl_list_t	*(struct)
list	*(struct)
,	O
gl_listelement_compar_fn	*((*(void),*(void))->(int))
compar	*((*(void),*(void))->(int))
,	O
const	O
void	O
*	O
elt	*(void)
)	O
{	O
size_t	long
index	(*(char),int)->(*(char))
=	O
gl_array_sortedlist_indexof	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(long)
(	O
list	*(struct)
,	O
compar	*((*(void),*(void))->(int))
,	O
elt	*(void)
)	O
;	O
if	O
(	O
index	(*(char),int)->(*(char))
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
return	O
false	int
;	O
else	O
return	O
gl_array_remove_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long)->(bool)
(	O
list	*(struct)
,	O
index	(*(char),int)->(*(char))
)	O
;	O
}	O
const	O
struct	O
gl_list_implementation	struct(*((*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)->(*(struct))),*((*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool,long,*(*(void)))->(*(struct))),*((*(struct))->(long)),*((*(struct),*(struct))->(*(void))),*((*(struct),*(struct),*(void))->(int)),*((*(struct),*(struct))->(*(struct))),*((*(struct),*(struct))->(*(struct))),*((*(struct),long)->(*(void))),*((*(struct),long,*(void))->(*(struct))),*((*(struct),long,long,*(void))->(*(struct))),*((*(struct),long,long,*(void))->(long)),*((*(struct),*(void))->(*(struct))),*((*(struct),*(void))->(*(struct))),*((*(struct),*(struct),*(void))->(*(struct))),*((*(struct),*(struct),*(void))->(*(struct))),*((*(struct),long,*(void))->(*(struct))),*((*(struct),*(struct))->(bool)),*((*(struct),long)->(bool)),*((*(struct),*(void))->(bool)),*((*(struct))->(void)),*((*(struct))->(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long))),*((*(struct),long,long)->(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long))),*((*(struct(*(struct`),*(struct`),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)),*((*(struct(*(struct`),*(struct`),long,*(void),*(void),long,long)))->(void)),*((*(struct),*((*(void),*(void))->(int)),*(void))->(*(struct))),*((*(struct),*((*(void),*(void))->(int)),long,long,*(void))->(*(struct))),*((*(struct),*((*(void),*(void))->(int)),*(void))->(long)),*((*(struct),*((*(void),*(void))->(int)),long,long,*(void))->(long)),*((*(struct),*((*(void),*(void))->(int)),*(void))->(*(struct))),*((*(struct),*((*(void),*(void))->(int)),*(void))->(bool)))
gl_array_list_implementation	struct(*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool)->(*(struct))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool,long,*(*(void)))->(*(struct))),*((*(struct))->(long)),*((*(struct),*(struct))->(*(void))),*((*(struct),*(struct),*(void))->(int)),*((*(struct),*(struct))->(*(struct))),*((*(struct),*(struct))->(*(struct))),*((*(struct),long)->(*(void))),*((*(struct),long,*(void))->(*(struct))),*((*(struct),long,long,*(void))->(*(struct))),*((*(struct),long,long,*(void))->(long)),*((*(struct),*(void))->(*(struct))),*((*(struct),*(void))->(*(struct))),*((*(struct),*(struct),*(void))->(*(struct))),*((*(struct),*(struct),*(void))->(*(struct))),*((*(struct),long,*(void))->(*(struct))),*((*(struct),*(struct))->(bool)),*((*(struct),long)->(bool)),*((*(struct),*(void))->(bool)),*((*(struct))->(void)),*((*(struct))->(struct(*(struct`),*(struct`),long,*(void),*(void),long,long))),*((*(struct),long,long)->(struct(*(struct`),*(struct`),long,*(void),*(void),long,long))),*((*(struct(*`,*`,long,*`,*`,long,long)),*(*(void)),*(*(struct`)))->(bool)),*((*(struct(*`,*`,long,*`,*`,long,long)))->(void)),*((*(struct),*((*`,*`)->(int)),*(void))->(*(struct))),*((*(struct),*((*`,*`)->(int)),long,long,*(void))->(*(struct))),*((*(struct),*((*`,*`)->(int)),*(void))->(long)),*((*(struct),*((*`,*`)->(int)),long,long,*(void))->(long)),*((*(struct),*((*`,*`)->(int)),*(void))->(*(struct))),*((*(struct),*((*`,*`)->(int)),*(void))->(bool)))
=	O
{	O
gl_array_nx_create_empty	(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)->(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))
,	O
gl_array_nx_create	(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool,long,*(*(void)))->(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))
,	O
gl_array_size	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(long)
,	O
gl_array_node_value	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(*(void))
,	O
gl_array_node_nx_set_value	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct),*(void))->(int)
,	O
gl_array_next_node	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(*(struct))
,	O
gl_array_previous_node	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(*(struct))
,	O
gl_array_get_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long)->(*(void))
,	O
gl_array_nx_set_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void))->(*(struct))
,	O
gl_array_search_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long,*(void))->(*(struct))
,	O
gl_array_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long,*(void))->(long)
,	O
gl_array_nx_add_first	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(void))->(*(struct))
,	O
gl_array_nx_add_last	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(void))->(*(struct))
,	O
gl_array_nx_add_before	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct),*(void))->(*(struct))
,	O
gl_array_nx_add_after	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct),*(void))->(*(struct))
,	O
gl_array_nx_add_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,*(void))->(*(struct))
,	O
gl_array_remove_node	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(struct))->(bool)
,	O
gl_array_remove_at	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long)->(bool)
,	O
gl_array_remove	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*(void))->(bool)
,	O
gl_array_list_free	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(void)
,	O
gl_array_iterator	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*`,*`,*`,*`,bool),*(*`),long,long)),long,*(void),*(void),long,long))
,	O
gl_array_iterator_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),long,long)->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct(struct(*`,*`,*`,*`,bool),*(*`),long,long)),long,*(void),*(void),long,long))
,	O
gl_array_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(struct`,*`,long,long)),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
,	O
gl_array_iterator_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(struct`,*`,long,long)),long,*(void),*(void),long,long)))->(void)
,	O
gl_array_sortedlist_search	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(*(struct))
,	O
gl_array_sortedlist_search_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(*(struct))
,	O
gl_array_sortedlist_indexof	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(long)
,	O
gl_array_sortedlist_indexof_from_to	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),long,long,*(void))->(long)
,	O
gl_array_sortedlist_nx_add	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(*(struct))
,	O
gl_array_sortedlist_remove	(*(struct(struct(*(struct`),*((*`,*`)->(bool)),*((*`)->(long)),*((*`)->(void)),bool),*(*(void)),long,long)),*((*(void),*(void))->(int)),*(void))->(bool)
}	O
;	O
