kern_return_t	O
trivfs_S_dir_lookup	(*(struct),int,int,*(char),int,int,*(int),*(char),*(int),*(int))->(int)
(	O
struct	O
trivfs_protid	O
*	O
cred	*(struct)
,	O
mach_port_t	O
reply	int
,	O
mach_msg_type_name_t	O
reply_type	int
,	O
char	O
*	O
filename	*(char)
,	O
int	O
flags	int
,	O
mode_t	O
mode	int
,	O
retry_type	*(int)
*	O
retry_type	*(int)
,	O
char	O
*	O
retry_name	*(char)
,	O
mach_port_t	O
*	O
retrypt	*(int)
,	O
mach_msg_type_name_t	O
*	O
retrypt_type	*(int)
)	O
{	O
int	O
perms	int
;	O
error_t	O
err	O
;	O
struct	O
trivfs_protid	O
*	O
newcred	*(struct)
;	O
if	O
(	O
!	O
cred	*(struct)
)	O
return	O
EOPNOTSUPP	O
;	O
if	O
(	O
filename	*(char)
[	O
0	int
]	O
)	O
return	O
ENOTDIR	O
;	O
flags	int
&=	O
O_HURD	O
;	O
flags	int
&=	O
~	O
(	O
O_CREAT	O
|	O
O_EXCL	O
|	O
O_NOLINK	O
|	O
O_NOTRANS	O
)	O
;	O
if	O
(	O
!	O
trivfs_check_access_hook	O
)	O
file_check_access	()->(int)
(	O
cred	*(struct)
->	O
realnode	O
,	O
&	O
perms	int
)	O
;	O
else	O
(	O
*	O
trivfs_check_access_hook	O
)	O
(	O
cred	*(struct)
->	O
po	O
->	O
cntl	O
,	O
cred	*(struct)
->	O
user	*(struct)
,	O
cred	*(struct)
->	O
realnode	O
,	O
&	O
perms	int
)	O
;	O
if	O
(	O
(	O
flags	int
&	O
(	O
O_READ	O
|	O
O_WRITE	O
|	O
O_EXEC	O
)	O
&	O
perms	int
)	O
!=	O
(	O
flags	int
&	O
(	O
O_READ	O
|	O
O_WRITE	O
|	O
O_EXEC	O
)	O
)	O
)	O
return	O
EACCES	O
;	O
err	O
=	O
0	int
;	O
if	O
(	O
trivfs_check_open_hook	O
)	O
err	O
=	O
(	O
*	O
trivfs_check_open_hook	O
)	O
(	O
cred	*(struct)
->	O
po	O
->	O
cntl	O
,	O
cred	*(struct)
->	O
user	*(struct)
,	O
flags	int
)	O
;	O
if	O
(	O
!	O
err	O
)	O
{	O
struct	O
iouser	O
*	O
user	*(struct)
;	O
err	O
=	O
iohelp_dup_iouser	()->(int)
(	O
&	O
user	*(struct)
,	O
cred	*(struct)
->	O
user	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
err	O
=	O
trivfs_open	()->(int)
(	O
cred	*(struct)
->	O
po	O
->	O
cntl	O
,	O
user	*(struct)
,	O
flags	int
,	O
cred	*(struct)
->	O
realnode	O
,	O
&	O
newcred	*(struct)
)	O
;	O
if	O
(	O
err	O
)	O
iohelp_free_iouser	()->(int)
(	O
user	*(struct)
)	O
;	O
else	O
mach_port_mod_refs	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
cred	*(struct)
->	O
realnode	O
,	O
MACH_PORT_RIGHT_SEND	O
,	O
+	O
1	int
)	O
;	O
}	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
*	O
retry_type	*(int)
=	O
FS_RETRY_NORMAL	O
;	O
*	O
retry_name	*(char)
=	O
'\0'	O
;	O
*	O
retrypt	*(int)
=	O
ports_get_right	()->(int)
(	O
newcred	*(struct)
)	O
;	O
*	O
retrypt_type	*(int)
=	O
MACH_MSG_TYPE_MAKE_SEND	O
;	O
ports_port_deref	()->(int)
(	O
newcred	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
