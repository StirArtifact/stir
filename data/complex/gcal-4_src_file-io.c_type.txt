__BEGIN_DECLARATIONS	O
static	O
void	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
__P_	O
(	O
(	O
char	O
*	O
*	O
absolute_filename	*(*(char))
,	O
const	O
char	O
*	O
directory	*(char)
,	O
const	O
char	O
*	O
filename	*(char)
)	O
)	O
;	O
static	O
FILE	struct
*	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
__P_	O
(	O
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
int	O
level	int
,	O
const	O
Fmode_enum	enum(int,int,int,int,int,int,int)
mode	enum(int,int,int,int,int,int,int)
,	O
Bool	int
*	O
is_first	*(int)
)	O
)	O
;	O
__END_DECLARATIONS	O
FILE	struct
*	O
file_open	(*(*(char)),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
bad_sys_include	*(int)
)	O
char	O
*	O
*	O
filename	*(char)
;	O
const	O
int	O
level	int
;	O
const	O
Fmode_enum	enum(int,int,int,int,int,int,int)
mode	enum(int,int,int,int,int,int,int)
;	O
Bool	int
*	O
bad_sys_include	*(int)
;	O
{	O
auto	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
(	O
FILE	struct
*	O
)	O
NULL	O
;	O
register	O
int	O
len	int
;	O
auto	O
char	O
*	O
ptr_env	*(char)
;	O
auto	O
char	O
*	O
ptr_char	*(char)
;	O
auto	O
Bool	int
is_absolute_filename	int
=	O
FALSE	O
;	O
auto	O
Bool	int
is_root_based_filename	int
=	O
FALSE	O
;	O
auto	O
Bool	int
is_disk_given	int
=	O
FALSE	O
;	O
auto	O
Bool	int
is_first	*(int)
=	O
(	O
Bool	int
)	O
(	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
)	O
?	O
TRUE	O
:	O
FALSE	O
)	O
;	O
len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
*	O
filename	*(char)
)	O
;	O
if	O
(	O
(	O
Uint	int
)	O
len	int
>=	O
maxlen_max	int
)	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
len	int
+	O
1	int
,	O
FALSE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s1	*(char)
,	O
*	O
filename	*(char)
)	O
;	O
ptr_char	*(char)
=	O
*	O
filename	*(char)
;	O
if	O
(	O
*	O
ptr_char	*(char)
==	O
*	O
DIR_SEP	*(char)
||	O
*	O
ptr_char	*(char)
==	O
*	O
ACTUAL_DIR	*(char)
)	O
{	O
if	O
(	O
*	O
ptr_char	*(char)
==	O
*	O
ACTUAL_DIR	*(char)
)	O
{	O
while	O
(	O
*	O
ptr_char	*(char)
==	O
*	O
ACTUAL_DIR	*(char)
)	O
ptr_char	*(char)
++	O
;	O
if	O
(	O
*	O
ptr_char	*(char)
==	O
*	O
DIR_SEP	*(char)
)	O
{	O
is_absolute_filename	int
=	O
TRUE	O
;	O
ptr_char	*(char)
--	O
;	O
}	O
}	O
else	O
is_absolute_filename	int
=	O
TRUE	O
;	O
}	O
else	O
if	O
(	O
(	O
*	O
ptr_char	*(char)
==	O
'-'	O
)	O
&&	O
(	O
len	int
==	O
1	int
)	O
)	O
is_absolute_filename	int
=	O
TRUE	O
;	O
if	O
(	O
*	O
ptr_char	*(char)
==	O
*	O
DIR_SEP	*(char)
)	O
is_root_based_filename	int
=	O
TRUE	O
;	O
if	O
(	O
(	O
is_disk_given	int
||	O
is_root_based_filename	int
)	O
&&	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
SYs_include	int
)	O
)	O
{	O
*	O
bad_sys_include	*(int)
=	O
TRUE	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
*	O
bad_sys_include	*(int)
=	O
FALSE	O
;	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
!=	O
SYs_include	int
)	O
{	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
!=	O
COmmon	int
)	O
{	O
if	O
(	O
is_absolute_filename	int
||	O
mode	enum(int,int,int,int,int,int,int)
==	O
USr_include	int
||	O
mode	enum(int,int,int,int,int,int,int)
==	O
HEre	int
)	O
{	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
filename	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
return	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
is_absolute_filename	int
||	O
mode	enum(int,int,int,int,int,int,int)
==	O
HEre	int
)	O
{	O
if	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
&&	O
(	O
warning_level	int
>=	O
WARN_LVL_MAX	int
)	O
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_FILE_NOT_FOUND	int
,	O
*	O
filename	*(char)
,	O
0L	int
,	O
*	O
filename	*(char)
,	O
0	int
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
}	O
}	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
COmmon	int
)	O
ptr_env	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
ENV_VAR_PATH	*(char)
)	O
;	O
else	O
ptr_env	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
ENV_VAR_GCALPATH	*(char)
)	O
;	O
if	O
(	O
ptr_env	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
if	O
(	O
*	O
ptr_env	*(char)
)	O
{	O
auto	O
Bool	int
ok	int
=	O
FALSE	O
;	O
len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
ptr_env	*(char)
)	O
;	O
if	O
(	O
(	O
Uint	int
)	O
len	int
>=	O
maxlen_max	int
)	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
len	int
+	O
1	int
,	O
FALSE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s2	*(char)
,	O
ptr_env	*(char)
)	O
;	O
while	O
(	O
!	O
ok	int
&&	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
)	O
{	O
ok	int
=	O
(	O
Bool	int
)	O
(	O
(	O
ptr_char	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s2	*(char)
,	O
*	O
PATH_SEP	*(char)
)	O
)	O
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
ok	int
)	O
len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
s2	*(char)
)	O
;	O
else	O
len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
s2	*(char)
)	O
-	O
strlen	(*(char))->(long)
(	O
ptr_char	*(char)
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
s1	*(char)
,	O
s2	*(char)
,	O
len	int
)	O
;	O
s1	*(char)
[	O
len	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
len	int
)	O
if	O
(	O
s1	*(char)
[	O
len	int
-	O
1	int
]	O
!=	O
*	O
DIR_SEP	*(char)
)	O
strcat	(*(char),*(char))->(*(char))
(	O
s1	*(char)
,	O
DIR_SEP	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
s1	*(char)
,	O
*	O
filename	*(char)
)	O
;	O
if	O
(	O
*	O
s1	*(char)
)	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s1	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
if	O
(	O
ok	int
)	O
break	O
;	O
ptr_char	*(char)
=	O
s2	*(char)
+	O
len	int
+	O
1	int
;	O
if	O
(	O
!	O
*	O
ptr_char	*(char)
)	O
break	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s2	*(char)
,	O
ptr_char	*(char)
)	O
;	O
}	O
if	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
&&	O
(	O
*	O
(	O
ptr_env	*(char)
+	O
strlen	(*(char))->(long)
(	O
ptr_env	*(char)
)	O
-	O
1	int
)	O
==	O
*	O
PATH_SEP	*(char)
)	O
)	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
filename	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
}	O
}	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
!=	O
COmmon	int
)	O
{	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
ptr_env	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
ENV_VAR_HOME	*(char)
)	O
;	O
if	O
(	O
ptr_env	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
if	O
(	O
*	O
ptr_env	*(char)
)	O
{	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
ptr_env	*(char)
,	O
*	O
filename	*(char)
)	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s1	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
}	O
}	O
}	O
}	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
COmmon	int
)	O
return	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
ptr_env	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
ENV_VAR_HOME	*(char)
)	O
;	O
if	O
(	O
ptr_env	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
if	O
(	O
*	O
ptr_env	*(char)
)	O
{	O
ptr_char	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
ENV_VAR_USR_DATADIR	*(char)
)	O
;	O
if	O
(	O
ptr_char	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
if	O
(	O
*	O
ptr_char	*(char)
)	O
{	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
ptr_env	*(char)
,	O
ptr_char	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s2	*(char)
,	O
s1	*(char)
)	O
;	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
s2	*(char)
,	O
*	O
filename	*(char)
)	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s1	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
}	O
}	O
else	O
{	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
ptr_env	*(char)
,	O
GCAL_USR_DATADIR	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
s2	*(char)
,	O
s1	*(char)
)	O
;	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
s2	*(char)
,	O
*	O
filename	*(char)
)	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s1	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
}	O
}	O
}	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
ptr_env	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
ENV_VAR_SYS_DATADIR	*(char)
)	O
;	O
if	O
(	O
ptr_env	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
if	O
(	O
*	O
ptr_env	*(char)
)	O
{	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
ptr_env	*(char)
,	O
*	O
filename	*(char)
)	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s1	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
}	O
}	O
else	O
{	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
&	O
s1	*(char)
,	O
GCAL_SYS_DATADIR	O
,	O
*	O
filename	*(char)
)	O
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s1	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
&	O
is_first	*(int)
)	O
;	O
}	O
}	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
s1	*(char)
)	O
;	O
if	O
(	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
*	O
filename	*(char)
)	O
<	O
len	int
)	O
*	O
filename	*(char)
=	O
(	O
char	O
*	O
)	O
my_realloc	(*(void),int,int,*(char),long,*(char),int)->(*(void))
(	O
(	O
VOID_PTR	O
)	O
*	O
filename	*(char)
,	O
len	int
+	O
1	int
,	O
ERR_NO_MEMORY_AVAILABLE	int
,	O
__FILE__	O
,	O
(	O
(	O
long	O
)	O
__LINE__	O
)	O
-	O
3L	int
,	O
"*filename"	*(char)
,	O
0	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
*	O
filename	*(char)
,	O
s1	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
warning_level	int
>=	O
WARN_LVL_MAX	int
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_FILE_NOT_FOUND	int
,	O
*	O
filename	*(char)
,	O
0L	int
,	O
*	O
filename	*(char)
,	O
0	int
)	O
;	O
return	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
char	O
*	O
file_read_line	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(int),*(char),*(char),*(char),*(long),*(int),enum(int,int,int,int,int,int,int),*(int),*(int),*(int))->(*(char))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
line_buffer	*(char)
,	O
in_pool	int
,	O
pool	*(char)
,	O
ptr_pool	*(char)
,	O
filename	*(char)
,	O
line_number	long
,	O
line_length	*(int)
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
is_include	*(int)
,	O
is_dvar	*(int)
,	O
is_tvar	*(int)
)	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
*	O
*	O
line_buffer	*(char)
;	O
int	O
*	O
in_pool	int
;	O
char	O
*	O
pool	*(char)
;	O
char	O
*	O
ptr_pool	*(char)
;	O
const	O
char	O
*	O
filename	*(char)
;	O
long	O
*	O
line_number	long
;	O
int	O
*	O
line_length	*(int)
;	O
const	O
Fmode_enum	enum(int,int,int,int,int,int,int)
mode	enum(int,int,int,int,int,int,int)
;	O
Bool	int
*	O
is_include	*(int)
;	O
Bool	int
*	O
is_dvar	*(int)
;	O
Bool	int
*	O
is_tvar	*(int)
;	O
{	O
static	O
Uint	int
lbuf_max	int
=	O
MAXLEN_MAX	int
;	O
register	O
int	O
i	int
=	O
1	int
;	O
auto	O
char	O
*	O
ptr_char	*(char)
;	O
auto	O
char	O
ch	char
;	O
auto	O
Bool	int
is_error	int
=	O
FALSE	O
;	O
auto	O
Bool	int
is_rem	int
=	O
FALSE	O
;	O
if	O
(	O
lbuf_max	int
<	O
maxlen_max	int
)	O
{	O
*	O
line_buffer	*(char)
=	O
(	O
char	O
*	O
)	O
my_realloc	(*(void),int,int,*(char),long,*(char),int)->(*(void))
(	O
(	O
VOID_PTR	O
)	O
*	O
line_buffer	*(char)
,	O
maxlen_max	int
,	O
ERR_NO_MEMORY_AVAILABLE	int
,	O
__FILE__	O
,	O
(	O
(	O
long	O
)	O
__LINE__	O
)	O
-	O
3L	int
,	O
"*line_buffer"	*(char)
,	O
maxlen_max	int
)	O
;	O
lbuf_max	int
=	O
maxlen_max	int
;	O
}	O
*	O
*	O
line_buffer	*(char)
=	O
'\0'	O
;	O
*	O
line_length	*(int)
=	O
0	int
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
;	O
(	O
*	O
is_include	*(int)
)	O
=	O
(	O
*	O
is_dvar	*(int)
)	O
=	O
(	O
*	O
is_tvar	*(int)
)	O
=	O
FALSE	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
*	O
in_pool	int
=	O
read	(int,*(void),long)->(long)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
(	O
char	O
*	O
)	O
pool	*(char)
,	O
BUF_LEN	int
)	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
return	O
(	O
NULL	O
)	O
;	O
else	O
if	O
(	O
*	O
in_pool	int
<	O
0	int
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_READ_FILE	int
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
,	O
filename	*(char)
,	O
0	int
)	O
;	O
ptr_pool	*(char)
=	O
pool	*(char)
;	O
}	O
if	O
(	O
*	O
ptr_pool	*(char)
==	O
'\n'	O
)	O
(	O
*	O
line_number	long
)	O
++	O
;	O
while	O
(	O
(	O
*	O
ptr_pool	*(char)
!=	O
REM_CHAR	char
)	O
&&	O
(	O
(	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
*	O
RC_INCL_STMENT	*(char)
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
RC_TVAR_CHAR	char
)	O
&&	O
!	O
isalnum	(int)->(int)
(	O
*	O
ptr_pool	*(char)
)	O
)	O
||	O
(	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsponse	int
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
*	O
MONTH3_LIT	*(char)
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
*	O
FYEAR_SEP	*(char)
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
RSP_CHAR	char
)	O
&&	O
!	O
isalnum	(int)->(int)
(	O
*	O
ptr_pool	*(char)
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
RC_ADATE_CHAR	char
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
*	O
SWITCH	*(char)
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
!=	O
*	O
SWITCH2	*(char)
)	O
)	O
)	O
)	O
{	O
if	O
(	O
(	O
!	O
*	O
*	O
line_buffer	*(char)
&&	O
!	O
isspace	(int)->(int)
(	O
*	O
ptr_pool	*(char)
)	O
)	O
||	O
*	O
*	O
line_buffer	*(char)
)	O
{	O
if	O
(	O
(	O
Uint	int
)	O
i	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
i	int
-	O
1	int
;	O
}	O
i	int
++	O
;	O
*	O
ptr_char	*(char)
++	O
=	O
*	O
ptr_pool	*(char)
++	O
;	O
}	O
else	O
ptr_pool	*(char)
++	O
;	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
*	O
in_pool	int
=	O
read	(int,*(void),long)->(long)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
(	O
char	O
*	O
)	O
pool	*(char)
,	O
BUF_LEN	int
)	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
if	O
(	O
i	int
>	O
1	int
)	O
break	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
in_pool	int
<	O
0	int
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_READ_FILE	int
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
,	O
filename	*(char)
,	O
0	int
)	O
;	O
ptr_pool	*(char)
=	O
pool	*(char)
;	O
}	O
if	O
(	O
*	O
ptr_pool	*(char)
==	O
'\n'	O
)	O
{	O
if	O
(	O
i	int
>	O
1	int
)	O
{	O
if	O
(	O
(	O
Uint	int
)	O
i	int
<	O
maxlen_max	int
)	O
i	int
--	O
;	O
(	O
*	O
in_pool	int
)	O
++	O
;	O
ptr_pool	*(char)
--	O
;	O
ptr_char	*(char)
--	O
;	O
break	O
;	O
}	O
(	O
*	O
line_number	long
)	O
++	O
;	O
}	O
}	O
(	O
*	O
line_number	long
)	O
++	O
;	O
if	O
(	O
(	O
mode	enum(int,int,int,int,int,int,int)
!=	O
COmmon	int
)	O
&&	O
(	O
*	O
ptr_pool	*(char)
==	O
REM_CHAR	char
)	O
)	O
{	O
is_rem	int
=	O
TRUE	O
;	O
LOOP	O
{	O
ch	char
=	O
'\0'	O
;	O
while	O
(	O
*	O
ptr_pool	*(char)
!=	O
'\n'	O
)	O
{	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
*	O
in_pool	int
=	O
read	(int,*(void),long)->(long)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
(	O
char	O
*	O
)	O
pool	*(char)
,	O
BUF_LEN	int
)	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
return	O
(	O
NULL	O
)	O
;	O
else	O
if	O
(	O
*	O
in_pool	int
<	O
0	int
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_READ_FILE	int
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
,	O
filename	*(char)
,	O
0	int
)	O
;	O
ptr_pool	*(char)
=	O
pool	*(char)
;	O
}	O
else	O
{	O
ch	char
=	O
*	O
ptr_pool	*(char)
++	O
;	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
}	O
}	O
ptr_pool	*(char)
++	O
;	O
if	O
(	O
*	O
in_pool	int
)	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
if	O
(	O
ch	char
==	O
QUOTE_CHAR	char
)	O
{	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
*	O
in_pool	int
=	O
read	(int,*(void),long)->(long)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
(	O
char	O
*	O
)	O
pool	*(char)
,	O
BUF_LEN	int
)	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
return	O
(	O
NULL	O
)	O
;	O
else	O
if	O
(	O
*	O
in_pool	int
<	O
0	int
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_READ_FILE	int
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
,	O
filename	*(char)
,	O
0	int
)	O
;	O
ptr_pool	*(char)
=	O
pool	*(char)
;	O
}	O
(	O
*	O
line_number	long
)	O
++	O
;	O
}	O
else	O
break	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
i	int
>	O
1	int
)	O
is_error	int
=	O
TRUE	O
;	O
else	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
)	O
{	O
if	O
(	O
*	O
ptr_pool	*(char)
==	O
*	O
RC_INCL_STMENT	*(char)
)	O
*	O
is_include	*(int)
=	O
TRUE	O
;	O
else	O
if	O
(	O
isalpha	(int)->(int)
(	O
*	O
ptr_pool	*(char)
)	O
)	O
*	O
is_dvar	*(int)
=	O
TRUE	O
;	O
else	O
if	O
(	O
*	O
ptr_pool	*(char)
==	O
RC_TVAR_CHAR	char
)	O
*	O
is_tvar	*(int)
=	O
TRUE	O
;	O
else	O
if	O
(	O
!	O
isdigit	(int)->(int)
(	O
*	O
ptr_pool	*(char)
)	O
)	O
is_error	int
=	O
TRUE	O
;	O
}	O
ch	char
=	O
(	O
*	O
ptr_char	*(char)
++	O
)	O
=	O
*	O
ptr_pool	*(char)
++	O
;	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
LOOP	O
{	O
if	O
(	O
*	O
in_pool	int
)	O
{	O
if	O
(	O
(	O
Uint	int
)	O
i	int
<	O
maxlen_max	int
)	O
i	int
++	O
;	O
else	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
i	int
++	O
;	O
}	O
if	O
(	O
(	O
*	O
ptr_pool	*(char)
==	O
'\n'	O
)	O
&&	O
(	O
ch	char
==	O
QUOTE_CHAR	char
)	O
)	O
{	O
if	O
(	O
is_error	int
)	O
{	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
break	O
;	O
}	O
if	O
(	O
(	O
Uint	int
)	O
i	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
i	int
-	O
1	int
;	O
}	O
ptr_char	*(char)
--	O
;	O
i	int
-=	O
2	int
;	O
(	O
*	O
line_number	long
)	O
++	O
;	O
ch	char
=	O
*	O
ptr_pool	*(char)
;	O
if	O
(	O
*	O
in_pool	int
)	O
ptr_pool	*(char)
++	O
;	O
}	O
else	O
{	O
ch	char
=	O
*	O
ptr_pool	*(char)
++	O
;	O
if	O
(	O
ch	char
==	O
'\n'	O
)	O
{	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
(	O
Uint	int
)	O
i	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
i	int
-	O
1	int
;	O
}	O
*	O
ptr_char	*(char)
++	O
=	O
ch	char
;	O
}	O
}	O
if	O
(	O
*	O
in_pool	int
)	O
(	O
*	O
in_pool	int
)	O
--	O
;	O
}	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
*	O
in_pool	int
=	O
read	(int,*(void),long)->(long)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
(	O
char	O
*	O
)	O
pool	*(char)
,	O
BUF_LEN	int
)	O
;	O
if	O
(	O
!	O
*	O
in_pool	int
)	O
{	O
if	O
(	O
!	O
*	O
*	O
line_buffer	*(char)
)	O
return	O
(	O
NULL	O
)	O
;	O
else	O
break	O
;	O
}	O
else	O
if	O
(	O
*	O
in_pool	int
<	O
0	int
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_READ_FILE	int
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
,	O
filename	*(char)
,	O
0	int
)	O
;	O
ptr_pool	*(char)
=	O
pool	*(char)
;	O
}	O
}	O
}	O
*	O
ptr_char	*(char)
=	O
'\0'	O
;	O
if	O
(	O
!	O
is_error	int
&&	O
!	O
is_rem	int
&&	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
)	O
)	O
{	O
if	O
(	O
*	O
is_tvar	*(int)
)	O
{	O
if	O
(	O
i	int
>	O
2	int
)	O
{	O
if	O
(	O
(	O
isalpha	(int)->(int)
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
1	int
)	O
)	O
&&	O
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
!=	O
*	O
RC_VAR_ASSIGN	*(char)
)	O
&&	O
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
!=	O
*	O
RC_TVAR_ICMD_ASSIGN	*(char)
)	O
&&	O
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
!=	O
*	O
RC_TVAR_UCMD_ASSIGN	*(char)
)	O
&&	O
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
!=	O
*	O
RC_VAR_ADD	*(char)
)	O
&&	O
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
!=	O
*	O
RC_VAR_SUB	*(char)
)	O
)	O
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
1	int
)	O
==	O
FLEFT_CHAR	char
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
1	int
)	O
==	O
FCENTER_CHAR	char
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
1	int
)	O
==	O
FRIGHT_CHAR	char
)	O
*	O
is_tvar	*(int)
=	O
FALSE	O
;	O
}	O
else	O
*	O
is_tvar	*(int)
=	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
*	O
is_tvar	*(int)
)	O
{	O
register	O
int	O
len	int
;	O
register	O
int	O
n	long
;	O
register	O
int	O
k	int
;	O
register	O
int	O
x	int
;	O
register	O
int	O
l	int
;	O
register	O
int	O
flen	int
=	O
1	int
;	O
auto	O
int	O
fstyle	*(int)
=	O
FSTYLE_NONE	O
;	O
auto	O
int	O
fwidth	*(int)
=	O
SPECIAL_VALUE	O
;	O
auto	O
char	O
*	O
ptr_tvar	*(char)
;	O
static	O
char	O
tvar	array(char)
[	O
2	int
]	O
;	O
static	O
char	O
the_tvar	char
;	O
auto	O
Bool	int
is_quoted	int
=	O
FALSE	O
;	O
auto	O
Bool	int
restore_tvar	int
=	O
FALSE	O
;	O
auto	O
Bool	int
ok	int
=	O
FALSE	O
;	O
auto	O
Bool	int
is_cformat	*(int)
=	O
FALSE	O
;	O
auto	O
Bool	int
is_lformat	*(int)
=	O
FALSE	O
;	O
auto	O
Bool	int
is_sign	*(int)
=	O
FALSE	O
;	O
auto	O
Bool	int
is_lzero	*(int)
=	O
FALSE	O
;	O
auto	O
Bool	int
is_fformat	*(int)
=	O
FALSE	O
;	O
auto	O
Bool	int
is_suffix	*(int)
=	O
FALSE	O
;	O
do	O
{	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
;	O
ptr_tvar	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
ptr_char	*(char)
,	O
RC_TVAR_CHAR	char
)	O
;	O
if	O
(	O
ptr_tvar	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
n	long
=	O
flen	int
;	O
while	O
(	O
*	O
(	O
ptr_tvar	*(char)
+	O
n	long
)	O
&&	O
!	O
isalpha	(int)->(int)
(	O
*	O
(	O
ptr_tvar	*(char)
+	O
n	long
)	O
)	O
)	O
n	long
++	O
;	O
the_tvar	char
=	O
*	O
(	O
ptr_tvar	*(char)
+	O
n	long
)	O
;	O
*	O
tvar	array(char)
=	O
tvar	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
n	long
=	O
k	int
=	O
0	int
;	O
do	O
{	O
flen	int
=	O
decode_format	(*(char),int,*(int),*(int),*(int),*(int),*(int),*(int),*(int),*(int))->(int)
(	O
ptr_tvar	*(char)
,	O
flen	int
,	O
&	O
is_cformat	*(int)
,	O
&	O
is_lformat	*(int)
,	O
&	O
is_sign	*(int)
,	O
&	O
is_lzero	*(int)
,	O
&	O
is_suffix	*(int)
,	O
&	O
is_fformat	*(int)
,	O
&	O
fstyle	*(int)
,	O
&	O
fwidth	*(int)
)	O
;	O
if	O
(	O
fwidth	*(int)
==	O
SPECIAL_VALUE	O
)	O
flen	int
=	O
1	int
;	O
*	O
tvar	array(char)
=	O
*	O
(	O
ptr_tvar	*(char)
+	O
flen	int
)	O
;	O
tvar	array(char)
[	O
1	int
]	O
=	O
*	O
(	O
ptr_tvar	*(char)
+	O
flen	int
+	O
1	int
)	O
;	O
len	int
=	O
(	O
int	O
)	O
(	O
ptr_tvar	*(char)
-	O
ptr_char	*(char)
)	O
;	O
if	O
(	O
len	int
)	O
{	O
while	O
(	O
(	O
Uint	int
)	O
len	int
+	O
k	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
n	long
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
s5	*(char)
+	O
k	int
,	O
ptr_char	*(char)
,	O
len	int
)	O
;	O
k	int
+=	O
len	int
;	O
}	O
s5	*(char)
[	O
k	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
k	int
)	O
if	O
(	O
s5	*(char)
[	O
k	int
-	O
1	int
]	O
==	O
QUOTE_CHAR	char
)	O
is_quoted	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
is_quoted	int
&&	O
isalpha	(int)->(int)
(	O
*	O
tvar	array(char)
)	O
)	O
{	O
register	O
int	O
j	int
=	O
0	int
;	O
register	O
int	O
j_buf	int
;	O
if	O
(	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_local	struct(*(char))
.	O
tvar_text	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
||	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_global	struct(*(char))
.	O
tvar_text	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
auto	O
char	O
*	O
buf	*(char)
;	O
if	O
(	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_local	struct(*(char))
.	O
tvar_text	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
if	O
(	O
!	O
*	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_local	struct(*(char))
.	O
tvar_text	*(char)
)	O
{	O
if	O
(	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_global	struct(*(char))
.	O
tvar_text	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
buf	*(char)
=	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_global	struct(*(char))
.	O
tvar_text	*(char)
;	O
else	O
buf	*(char)
=	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_local	struct(*(char))
.	O
tvar_text	*(char)
;	O
}	O
else	O
buf	*(char)
=	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_local	struct(*(char))
.	O
tvar_text	*(char)
;	O
}	O
else	O
buf	*(char)
=	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
tvar	array(char)
)	O
]	O
.	O
tvar_global	struct(*(char))
.	O
tvar_text	*(char)
;	O
j_buf	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
buf	*(char)
)	O
;	O
if	O
(	O
fwidth	*(int)
!=	O
SPECIAL_VALUE	O
)	O
{	O
if	O
(	O
is_fformat	*(int)
)	O
j	int
=	O
fwidth	*(int)
;	O
else	O
{	O
register	O
int	O
num_hls	int
=	O
0	int
;	O
auto	O
char	O
*	O
ptr_buf	*(char)
=	O
buf	*(char)
;	O
auto	O
char	O
*	O
tvar_text	*(char)
;	O
auto	O
Bool	int
quote	int
=	O
FALSE	O
;	O
tvar_text	*(char)
=	O
(	O
char	O
*	O
)	O
my_malloc	(int,int,*(char),long,*(char),int)->(*(void))
(	O
j_buf	int
+	O
1	int
,	O
ERR_NO_MEMORY_AVAILABLE	int
,	O
__FILE__	O
,	O
(	O
(	O
long	O
)	O
__LINE__	O
)	O
-	O
2L	int
,	O
"tvar_text"	*(char)
,	O
0	int
)	O
;	O
l	int
=	O
x	int
=	O
0	int
;	O
LOOP	O
{	O
if	O
(	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
)	O
{	O
if	O
(	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
==	O
RC_SPECIAL_TEXT_CHAR	O
)	O
{	O
l	int
++	O
;	O
switch	O
(	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
)	O
{	O
case	O
RC_HLS1S_CHAR	O
:	O
case	O
RC_HLS1E_CHAR	O
:	O
case	O
RC_HLS2S_CHAR	char
:	O
case	O
RC_HLS2E_CHAR	char
:	O
case	O
RC_HLS3S_CHAR	char
:	O
case	O
RC_HLS3E_CHAR	char
:	O
case	O
RC_HLS4S_CHAR	char
:	O
case	O
RC_HLS4E_CHAR	char
:	O
case	O
RC_HLS5S_CHAR	char
:	O
case	O
RC_HLS5E_CHAR	char
:	O
if	O
(	O
quote	int
)	O
{	O
quote	int
=	O
FALSE	O
;	O
x	int
--	O
;	O
tvar_text	*(char)
[	O
x	int
++	O
]	O
=	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
-	O
1	int
)	O
;	O
tvar_text	*(char)
[	O
x	int
++	O
]	O
=	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
;	O
}	O
else	O
num_hls	int
++	O
;	O
break	O
;	O
default	O
:	O
tvar_text	*(char)
[	O
x	int
++	O
]	O
=	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
-	O
1	int
)	O
;	O
tvar_text	*(char)
[	O
x	int
++	O
]	O
=	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
==	O
QUOTE_CHAR	char
)	O
quote	int
=	O
TRUE	O
;	O
else	O
quote	int
=	O
FALSE	O
;	O
tvar_text	*(char)
[	O
x	int
++	O
]	O
=	O
*	O
(	O
ptr_buf	*(char)
+	O
l	int
)	O
;	O
}	O
l	int
++	O
;	O
}	O
else	O
{	O
tvar_text	*(char)
[	O
x	int
]	O
=	O
'\0'	O
;	O
break	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
tvar_text	*(char)
)	O
;	O
if	O
(	O
highlight_flag	int
&&	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
==	O
1	int
)	O
)	O
{	O
fwidth	*(int)
+=	O
num_hls	int
;	O
j	int
=	O
MAX	O
(	O
fwidth	*(int)
,	O
j_buf	int
)	O
;	O
}	O
else	O
{	O
j_buf	int
=	O
x	int
;	O
j	int
=	O
MAX	O
(	O
fwidth	*(int)
,	O
j_buf	int
)	O
;	O
j	int
+=	O
(	O
num_hls	int
<<	O
1	int
)	O
;	O
}	O
}	O
}	O
else	O
j	int
=	O
j_buf	int
;	O
if	O
(	O
j	int
)	O
{	O
while	O
(	O
(	O
Uint	int
)	O
k	int
+	O
j	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
n	long
;	O
}	O
if	O
(	O
fwidth	*(int)
!=	O
SPECIAL_VALUE	O
)	O
(	O
void	O
)	O
use_format	(*(*(char)),int,*(char),long,int,int,int,int,int,int,int,int,int,int)->(int)
(	O
&	O
s5	*(char)
,	O
k	int
,	O
buf	*(char)
,	O
atol	(*(char))->(long)
(	O
buf	*(char)
)	O
,	O
is_sign	*(int)
|	O
is_lzero	*(int)
|	O
is_suffix	*(int)
,	O
is_cformat	*(int)
,	O
is_lformat	*(int)
,	O
is_sign	*(int)
,	O
is_lzero	*(int)
,	O
is_suffix	*(int)
,	O
is_fformat	*(int)
,	O
fstyle	*(int)
,	O
fwidth	*(int)
,	O
j_buf	int
)	O
;	O
else	O
strcat	(*(char),*(char))->(*(char))
(	O
s5	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
len	int
+=	O
(	O
flen	int
+	O
1	int
)	O
;	O
if	O
(	O
j	int
)	O
k	int
+=	O
j	int
;	O
else	O
if	O
(	O
isspace	(int)->(int)
(	O
s5	*(char)
[	O
k	int
-	O
1	int
]	O
)	O
&&	O
isspace	(int)->(int)
(	O
tvar	array(char)
[	O
1	int
]	O
)	O
)	O
s5	*(char)
[	O
--	O
k	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
restore_tvar	int
=	O
TRUE	O
;	O
}	O
else	O
restore_tvar	int
=	O
TRUE	O
;	O
if	O
(	O
restore_tvar	int
)	O
{	O
if	O
(	O
(	O
Uint	int
)	O
k	int
+	O
1	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
n	long
;	O
}	O
s5	*(char)
[	O
k	int
++	O
]	O
=	O
RC_TVAR_CHAR	char
;	O
len	int
++	O
;	O
if	O
(	O
*	O
tvar	array(char)
&&	O
(	O
flen	int
==	O
1	int
)	O
)	O
{	O
if	O
(	O
(	O
Uint	int
)	O
k	int
+	O
1	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
n	long
;	O
}	O
s5	*(char)
[	O
k	int
++	O
]	O
=	O
*	O
tvar	array(char)
;	O
len	int
++	O
;	O
}	O
s5	*(char)
[	O
k	int
]	O
=	O
'\0'	O
;	O
}	O
n	long
+=	O
len	int
;	O
ptr_char	*(char)
+=	O
len	int
;	O
ptr_tvar	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
ptr_char	*(char)
,	O
RC_TVAR_CHAR	char
)	O
;	O
flen	int
=	O
1	int
;	O
restore_tvar	int
=	O
is_quoted	int
=	O
FALSE	O
;	O
}	O
while	O
(	O
ptr_tvar	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
*	O
ptr_char	*(char)
)	O
{	O
k	int
+=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
ptr_char	*(char)
)	O
;	O
while	O
(	O
(	O
Uint	int
)	O
k	int
>=	O
maxlen_max	int
)	O
{	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
maxlen_max	int
<<	O
1	int
,	O
TRUE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
ptr_char	*(char)
=	O
*	O
line_buffer	*(char)
+	O
n	long
;	O
}	O
strcat	(*(char),*(char))->(*(char))
(	O
s5	*(char)
,	O
ptr_char	*(char)
)	O
;	O
}	O
i	int
=	O
k	int
++	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
*	O
line_buffer	*(char)
,	O
s5	*(char)
)	O
;	O
if	O
(	O
(	O
*	O
*	O
line_buffer	*(char)
==	O
RC_TVAR_CHAR	char
)	O
&&	O
isalpha	(int)->(int)
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
1	int
)	O
)	O
&&	O
(	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
==	O
*	O
RC_VAR_ASSIGN	*(char)
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
==	O
*	O
RC_TVAR_ICMD_ASSIGN	*(char)
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
==	O
*	O
RC_TVAR_UCMD_ASSIGN	*(char)
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
==	O
*	O
RC_VAR_ADD	*(char)
||	O
*	O
(	O
*	O
line_buffer	*(char)
+	O
2	int
)	O
==	O
*	O
RC_VAR_SUB	*(char)
)	O
)	O
*	O
is_tvar	*(int)
=	O
ok	int
=	O
TRUE	O
;	O
n	long
=	O
0	int
;	O
ptr_tvar	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
*	O
line_buffer	*(char)
,	O
RC_TVAR_CHAR	char
)	O
;	O
if	O
(	O
ptr_tvar	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
do	O
{	O
if	O
(	O
!	O
n	long
&&	O
(	O
*	O
*	O
line_buffer	*(char)
!=	O
RC_TVAR_CHAR	char
)	O
)	O
ptr_tvar	*(char)
--	O
;	O
else	O
if	O
(	O
n	long
)	O
ptr_tvar	*(char)
--	O
;	O
*	O
tvar	array(char)
=	O
*	O
ptr_tvar	*(char)
;	O
if	O
(	O
!	O
n	long
&&	O
(	O
*	O
*	O
line_buffer	*(char)
!=	O
RC_TVAR_CHAR	char
)	O
)	O
ptr_tvar	*(char)
++	O
;	O
else	O
if	O
(	O
n	long
)	O
ptr_tvar	*(char)
++	O
;	O
ptr_tvar	*(char)
++	O
;	O
flen	int
=	O
decode_format	(*(char),int,*(int),*(int),*(int),*(int),*(int),*(int),*(int),*(int))->(int)
(	O
ptr_tvar	*(char)
,	O
0	int
,	O
&	O
is_cformat	*(int)
,	O
&	O
is_lformat	*(int)
,	O
&	O
is_sign	*(int)
,	O
&	O
is_lzero	*(int)
,	O
&	O
is_suffix	*(int)
,	O
&	O
is_fformat	*(int)
,	O
&	O
fstyle	*(int)
,	O
&	O
fwidth	*(int)
)	O
;	O
if	O
(	O
fwidth	*(int)
!=	O
SPECIAL_VALUE	O
)	O
ptr_tvar	*(char)
+=	O
flen	int
;	O
if	O
(	O
(	O
*	O
tvar	array(char)
!=	O
QUOTE_CHAR	char
)	O
&&	O
isalpha	(int)->(int)
(	O
*	O
ptr_tvar	*(char)
)	O
&&	O
(	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
ptr_tvar	*(char)
)	O
]	O
.	O
tvar_local	struct(*(char))
.	O
tvar_text	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
||	O
rc_tvar	array(struct(struct(*(char)),struct(*(char))))
[	O
IDX	O
(	O
*	O
ptr_tvar	*(char)
)	O
]	O
.	O
tvar_global	struct(*(char))
.	O
tvar_text	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
)	O
{	O
if	O
(	O
*	O
ptr_tvar	*(char)
==	O
the_tvar	char
)	O
ok	int
=	O
TRUE	O
;	O
else	O
flen	int
=	O
1	int
;	O
break	O
;	O
}	O
n	long
=	O
1	int
;	O
while	O
(	O
*	O
ptr_tvar	*(char)
==	O
RC_TVAR_CHAR	char
)	O
ptr_tvar	*(char)
++	O
;	O
if	O
(	O
*	O
ptr_tvar	*(char)
)	O
ptr_tvar	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
ptr_tvar	*(char)
,	O
RC_TVAR_CHAR	char
)	O
;	O
else	O
ptr_tvar	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
}	O
while	O
(	O
ptr_tvar	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
ptr_tvar	*(char)
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
ok	int
=	O
TRUE	O
;	O
}	O
else	O
ok	int
=	O
TRUE	O
;	O
}	O
else	O
ok	int
=	O
TRUE	O
;	O
if	O
(	O
*	O
*	O
line_buffer	*(char)
==	O
*	O
RC_INCL_STMENT	*(char)
)	O
*	O
is_include	*(int)
=	O
ok	int
=	O
TRUE	O
;	O
else	O
if	O
(	O
isalpha	(int)->(int)
(	O
*	O
*	O
line_buffer	*(char)
)	O
)	O
*	O
is_dvar	*(int)
=	O
ok	int
=	O
TRUE	O
;	O
}	O
while	O
(	O
!	O
ok	int
)	O
;	O
}	O
if	O
(	O
*	O
is_dvar	*(int)
)	O
set_dvar	(*(char),*(struct(int,int,*(char),*(char),*(char),*(char))),*(char),long,enum(int,int))->(void)
(	O
*	O
line_buffer	*(char)
,	O
lptrs3	*(struct(int,int,*(char),*(char),*(char),*(char)))
,	O
filename	*(char)
,	O
*	O
line_number	long
,	O
LOcal	int
)	O
;	O
if	O
(	O
*	O
is_tvar	*(int)
)	O
set_tvar	(*(char),*(char),long,enum(int,int))->(void)
(	O
*	O
line_buffer	*(char)
,	O
filename	*(char)
,	O
*	O
line_number	long
,	O
LOcal	int
)	O
;	O
}	O
if	O
(	O
is_error	int
)	O
{	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
)	O
i	int
=	O
ERR_INVALID_DATE_FIELD	int
;	O
else	O
i	int
=	O
ERR_ILLEGAL_CHAR_IN_FILE	int
;	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
i	int
,	O
filename	*(char)
,	O
*	O
line_number	long
,	O
*	O
line_buffer	*(char)
,	O
0	int
)	O
;	O
}	O
if	O
(	O
ch	char
==	O
'\n'	O
)	O
*	O
line_length	*(int)
=	O
i	int
-	O
1	int
;	O
else	O
*	O
line_length	*(int)
=	O
i	int
;	O
return	O
(	O
ptr_pool	*(char)
)	O
;	O
}	O
char	O
*	O
*	O
insert_response_file	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),*(int),*(int),array(*(char)))->(*(*(char)))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
filename	*(char)
,	O
opt_list	*(char)
,	O
my_argc_max	*(int)
,	O
my_argc	*(int)
,	O
my_argv	array(*(char))
)	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
*	O
filename	*(char)
;	O
const	O
char	O
*	O
opt_list	*(char)
;	O
Uint	int
*	O
my_argc_max	*(int)
;	O
int	O
*	O
my_argc	*(int)
;	O
char	O
*	O
my_argv	array(*(char))
[	O
]	O
;	O
{	O
auto	O
long	O
line_number	long
=	O
0L	int
;	O
auto	O
int	O
line_length	*(int)
;	O
auto	O
int	O
in_pool	int
=	O
0	int
;	O
auto	O
char	O
*	O
pool	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
auto	O
char	O
*	O
ptr_pool	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
auto	O
Bool	int
b_dummy	int
;	O
pool	*(char)
=	O
(	O
char	O
*	O
)	O
my_malloc	(int,int,*(char),long,*(char),int)->(*(void))
(	O
BUF_LEN	int
+	O
1	int
,	O
ERR_NO_MEMORY_AVAILABLE	int
,	O
__FILE__	O
,	O
(	O
(	O
long	O
)	O
__LINE__	O
)	O
-	O
1L	int
,	O
"pool"	*(char)
,	O
0	int
)	O
;	O
while	O
(	O
(	O
ptr_pool	*(char)
=	O
file_read_line	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(int),*(char),*(char),*(char),*(long),*(int),enum(int,int,int,int,int,int,int),*(int),*(int),*(int))->(*(char))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
s1	*(char)
,	O
&	O
in_pool	int
,	O
pool	*(char)
,	O
ptr_pool	*(char)
,	O
filename	*(char)
,	O
&	O
line_number	long
,	O
&	O
line_length	*(int)
,	O
REsponse	int
,	O
&	O
b_dummy	int
,	O
&	O
b_dummy	int
,	O
&	O
b_dummy	int
)	O
)	O
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
if	O
(	O
*	O
s1	*(char)
)	O
{	O
if	O
(	O
(	O
*	O
s1	*(char)
==	O
*	O
SWITCH	*(char)
||	O
*	O
s1	*(char)
==	O
*	O
SWITCH2	*(char)
)	O
&&	O
s1	*(char)
[	O
1	int
]	O
&&	O
(	O
s1	*(char)
[	O
1	int
]	O
!=	O
*	O
SWITCH	*(char)
)	O
)	O
if	O
(	O
(	O
strchr	(*(char),int)->(*(char))
(	O
opt_list	*(char)
,	O
s1	*(char)
[	O
1	int
]	O
)	O
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
&&	O
isspace	(int)->(int)
(	O
s1	*(char)
[	O
2	int
]	O
)	O
)	O
{	O
register	O
int	O
spaces	int
=	O
1	int
;	O
line_length	*(int)
=	O
2	int
;	O
while	O
(	O
s1	*(char)
[	O
line_length	*(int)
+	O
spaces	int
]	O
&&	O
isspace	(int)->(int)
(	O
s1	*(char)
[	O
line_length	*(int)
+	O
spaces	int
]	O
)	O
)	O
spaces	int
++	O
;	O
while	O
(	O
s1	*(char)
[	O
line_length	*(int)
+	O
spaces	int
]	O
)	O
{	O
s1	*(char)
[	O
line_length	*(int)
]	O
=	O
s1	*(char)
[	O
line_length	*(int)
+	O
spaces	int
]	O
;	O
line_length	*(int)
++	O
;	O
}	O
s1	*(char)
[	O
line_length	*(int)
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
(	O
(	O
line_length	*(int)
==	O
1	int
)	O
&&	O
(	O
*	O
s1	*(char)
==	O
*	O
SWITCH	*(char)
||	O
*	O
s1	*(char)
==	O
RC_ADATE_CHAR	char
||	O
*	O
s1	*(char)
==	O
*	O
SWITCH2	*(char)
)	O
)	O
||	O
(	O
(	O
line_length	*(int)
==	O
2	int
)	O
&&	O
(	O
*	O
s1	*(char)
==	O
*	O
SWITCH	*(char)
||	O
*	O
s1	*(char)
==	O
RC_ADATE_CHAR	char
||	O
*	O
s1	*(char)
==	O
*	O
SWITCH2	*(char)
)	O
&&	O
(	O
s1	*(char)
[	O
1	int
]	O
==	O
*	O
SWITCH	*(char)
||	O
s1	*(char)
[	O
1	int
]	O
==	O
RC_ADATE_CHAR	char
||	O
s1	*(char)
[	O
1	int
]	O
==	O
*	O
SWITCH2	*(char)
)	O
)	O
)	O
;	O
else	O
{	O
if	O
(	O
(	O
Uint	int
)	O
*	O
my_argc	*(int)
>=	O
*	O
my_argc_max	*(int)
)	O
{	O
*	O
my_argc_max	*(int)
<<=	O
1	int
;	O
if	O
(	O
*	O
my_argc_max	*(int)
*	O
sizeof	O
(	O
char	O
*	O
)	O
>	O
testval	int
)	O
(	O
*	O
my_argc_max	*(int)
)	O
--	O
;	O
my_argv	array(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
my_realloc	(*(void),int,int,*(char),long,*(char),int)->(*(void))
(	O
(	O
VOID_PTR	O
)	O
my_argv	array(*(char))
,	O
*	O
my_argc_max	*(int)
*	O
sizeof	O
(	O
char	O
*	O
)	O
,	O
ERR_NO_MEMORY_AVAILABLE	int
,	O
__FILE__	O
,	O
(	O
(	O
long	O
)	O
__LINE__	O
)	O
-	O
3L	int
,	O
"my_argv[my_argc_max]"	*(char)
,	O
*	O
my_argc_max	*(int)
)	O
;	O
}	O
my_argv	array(*(char))
[	O
*	O
my_argc	*(int)
]	O
=	O
(	O
char	O
*	O
)	O
my_malloc	(int,int,*(char),long,*(char),int)->(*(void))
(	O
line_length	*(int)
+	O
1	int
,	O
ERR_NO_MEMORY_AVAILABLE	int
,	O
__FILE__	O
,	O
(	O
(	O
long	O
)	O
__LINE__	O
)	O
-	O
2L	int
,	O
"my_argv[my_argc]"	*(char)
,	O
*	O
my_argc	*(int)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
my_argv	array(*(char))
[	O
(	O
*	O
my_argc	*(int)
)	O
++	O
]	O
,	O
s1	*(char)
)	O
;	O
}	O
}	O
free	(*(void))->(void)
(	O
pool	*(char)
)	O
;	O
return	O
(	O
my_argv	array(*(char))
)	O
;	O
}	O
void	O
write_log_file	(*(char),enum(int,int,int,int,int,int,int),*(char),*(char),int,array(*(char)))->(void)
(	O
filename	*(char)
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
mode_txt	*(char)
,	O
created_txt	*(char)
,	O
argc	int
,	O
argv	array(*(char))
)	O
const	O
char	O
*	O
filename	*(char)
;	O
const	O
Fmode_enum	enum(int,int,int,int,int,int,int)
mode	enum(int,int,int,int,int,int,int)
;	O
const	O
char	O
*	O
mode_txt	*(char)
;	O
const	O
char	O
*	O
created_txt	*(char)
;	O
const	O
int	O
argc	int
;	O
char	O
*	O
argv	array(*(char))
[	O
]	O
;	O
{	O
auto	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
(	O
FILE	struct
*	O
)	O
NULL	O
;	O
auto	O
int	O
len	int
=	O
0	int
;	O
register	O
int	O
i	int
=	O
0	int
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
,	O
"w"	*(char)
)	O
;	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
{	O
switch	O
(	O
mode	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
REsponse	int
:	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%c `%s' %s `%s' --- %s %02d-%s-%04d %02d%s%02d%s%02d"	*(char)
,	O
REM_CHAR	char
,	O
prgr_name	*(char)
,	O
mode_txt	*(char)
,	O
filename	*(char)
,	O
created_txt	*(char)
,	O
true_day	int
,	O
short_month_name	(int)->(*(char))
(	O
true_month	int
)	O
,	O
true_year	int
,	O
act_hour	int
,	O
time_sep	*(char)
,	O
act_min	int
,	O
time_sep	*(char)
,	O
act_sec	int
)	O
;	O
if	O
(	O
tz	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" %s"	*(char)
,	O
tz	*(char)
)	O
;	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n%c\n"	*(char)
,	O
REM_CHAR	char
)	O
;	O
break	O
;	O
case	O
SCript	int
:	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%c%s\n%c\n%c `%s' %s `%s' --- %s %02d-%s-%04d %02d%s%02d%s%02d"	*(char)
,	O
*	O
SHL_REM	*(char)
,	O
SHELL	*(char)
,	O
*	O
SHL_REM	*(char)
,	O
*	O
SHL_REM	*(char)
,	O
prgr_name	*(char)
,	O
mode_txt	*(char)
,	O
filename	*(char)
,	O
created_txt	*(char)
,	O
true_day	int
,	O
short_month_name	(int)->(*(char))
(	O
true_month	int
)	O
,	O
true_year	int
,	O
act_hour	int
,	O
time_sep	*(char)
,	O
act_min	int
,	O
time_sep	*(char)
,	O
act_sec	int
)	O
;	O
if	O
(	O
tz	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" %s"	*(char)
,	O
tz	*(char)
)	O
;	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n%c\n%s %c\n"	*(char)
,	O
*	O
SHL_REM	*(char)
,	O
prgr_name	*(char)
,	O
*	O
SHL_ESC	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
len	int
!=	O
EOF	O
)	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
*	O
argv	array(*(char))
[	O
i	int
]	O
==	O
*	O
SWITCH	*(char)
||	O
*	O
argv	array(*(char))
[	O
i	int
]	O
==	O
*	O
SWITCH2	*(char)
)	O
{	O
if	O
(	O
*	O
(	O
argv	array(*(char))
[	O
i	int
]	O
+	O
1	int
)	O
==	O
'R'	O
||	O
*	O
(	O
argv	array(*(char))
[	O
i	int
]	O
+	O
1	int
)	O
==	O
'S'	O
)	O
continue	O
;	O
if	O
(	O
*	O
(	O
argv	array(*(char))
[	O
i	int
]	O
+	O
1	int
)	O
==	O
*	O
SWITCH	*(char)
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
s4	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
+	O
2	int
)	O
;	O
(	O
void	O
)	O
eval_longopt	(*(char),*(int))->(int)
(	O
s4	*(char)
,	O
&	O
len	int
)	O
;	O
if	O
(	O
len	int
==	O
SYM_RESPONSE_FILE	int
)	O
continue	O
;	O
if	O
(	O
len	int
==	O
SYM_SCRIPT_FILE	int
)	O
continue	O
;	O
}	O
}	O
if	O
(	O
*	O
argv	array(*(char))
[	O
i	int
]	O
==	O
RSP_CHAR	char
)	O
continue	O
;	O
switch	O
(	O
mode	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
REsponse	int
:	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
break	O
;	O
case	O
SCript	int
:	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"'%s' %c\n"	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
,	O
*	O
SHL_ESC	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
len	int
==	O
EOF	O
)	O
break	O
;	O
}	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
SCript	int
)	O
len	int
=	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" $*\n"	*(char)
)	O
;	O
i	int
=	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
else	O
len	int
=	O
EOF	O
;	O
if	O
(	O
i	int
==	O
EOF	O
)	O
len	int
=	O
EOF	O
;	O
if	O
(	O
(	O
(	O
len	int
!=	O
EOF	O
)	O
&&	O
(	O
warning_level	int
==	O
1	int
)	O
)	O
||	O
(	O
(	O
len	int
==	O
EOF	O
)	O
&&	O
(	O
warning_level	int
==	O
2	int
)	O
)	O
||	O
warning_level	int
>	O
2	int
)	O
{	O
i	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
+	O
MAX	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
,	O
ehls2s	struct(*(char),int)
.	O
len	int
)	O
+	O
MAX	O
(	O
ehls1e	struct(*(char),int)
.	O
len	int
,	O
ehls2e	struct(*(char),int)
.	O
len	int
)	O
+	O
LEN_SINGLE_LINE	int
;	O
if	O
(	O
(	O
Uint	int
)	O
i	int
>=	O
maxlen_max	int
)	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
i	int
+	O
1	int
,	O
FALSE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
s4	*(char)
,	O
_	O
(	O
"Try to write %s `%s'... %s%s%s"	*(char)
)	O
,	O
mode_txt	*(char)
,	O
filename	*(char)
,	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
!=	O
1	int
)	O
?	O
(	O
(	O
len	int
==	O
EOF	O
)	O
?	O
ehls2s	struct(*(char),int)
.	O
seq	*(char)
:	O
ehls1s	struct(*(char),int)
.	O
seq	*(char)
)	O
:	O
""	*(char)
,	O
(	O
len	int
==	O
EOF	O
)	O
?	O
_	O
(	O
"failed"	*(char)
)	O
:	O
_	O
(	O
"success"	*(char)
)	O
,	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
!=	O
1	int
)	O
?	O
(	O
(	O
len	int
==	O
EOF	O
)	O
?	O
ehls2e	struct(*(char),int)
.	O
seq	*(char)
:	O
ehls1e	struct(*(char),int)
.	O
seq	*(char)
)	O
:	O
""	*(char)
)	O
;	O
print_text	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s4	*(char)
)	O
;	O
if	O
(	O
(	O
len	int
==	O
EOF	O
)	O
&&	O
(	O
warning_level	int
>=	O
WARN_LVL_MAX	int
)	O
)	O
my_error	(int,*(char),long,*(char),int)->(void)
(	O
ERR_WRITE_FILE	int
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
,	O
filename	*(char)
,	O
0	int
)	O
;	O
}	O
if	O
(	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
SCript	int
)	O
&&	O
(	O
len	int
!=	O
EOF	O
)	O
)	O
{	O
i	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
CHMOD_PRGR	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
CHMOD_OPTS	*(char)
)	O
+	O
2	int
;	O
if	O
(	O
(	O
Uint	int
)	O
i	int
>=	O
maxlen_max	int
)	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
i	int
+	O
1	int
,	O
FALSE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
s4	*(char)
,	O
"%s %s %s"	*(char)
,	O
CHMOD_PRGR	*(char)
,	O
CHMOD_OPTS	*(char)
,	O
filename	*(char)
)	O
;	O
(	O
void	O
)	O
my_system	(*(char))->(int)
(	O
s4	*(char)
)	O
;	O
}	O
}	O
static	O
void	O
make_absolute_filename	(*(*(char)),*(char),*(char))->(void)
(	O
absolute_filename	*(*(char))
,	O
directory	*(char)
,	O
filename	*(char)
)	O
char	O
*	O
*	O
absolute_filename	*(*(char))
;	O
const	O
char	O
*	O
directory	*(char)
;	O
const	O
char	O
*	O
filename	*(char)
;	O
{	O
register	O
int	O
dir_len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
directory	*(char)
)	O
;	O
register	O
int	O
fil_len	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
;	O
if	O
(	O
directory	*(char)
[	O
dir_len	int
-	O
1	int
]	O
!=	O
*	O
DIR_SEP	*(char)
)	O
dir_len	int
++	O
;	O
if	O
(	O
(	O
Uint	int
)	O
dir_len	int
+	O
fil_len	int
>=	O
maxlen_max	int
)	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
dir_len	int
+	O
fil_len	int
+	O
1	int
,	O
FALSE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
*	O
absolute_filename	*(*(char))
,	O
directory	*(char)
)	O
;	O
if	O
(	O
directory	*(char)
[	O
dir_len	int
-	O
1	int
]	O
!=	O
*	O
DIR_SEP	*(char)
)	O
strcat	(*(char),*(char))->(*(char))
(	O
*	O
absolute_filename	*(*(char))
,	O
DIR_SEP	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
*	O
absolute_filename	*(*(char))
,	O
filename	*(char)
)	O
;	O
}	O
static	O
FILE	struct
*	O
get_file_ptr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),int,enum(int,int,int,int,int,int,int),*(int))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
filename	*(char)
,	O
level	int
,	O
mode	enum(int,int,int,int,int,int,int)
,	O
is_first	*(int)
)	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
const	O
char	O
*	O
filename	*(char)
;	O
const	O
int	O
level	int
;	O
const	O
Fmode_enum	enum(int,int,int,int,int,int,int)
mode	enum(int,int,int,int,int,int,int)
;	O
Bool	int
*	O
is_first	*(int)
;	O
{	O
auto	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
(	O
FILE	struct
*	O
)	O
NULL	O
;	O
if	O
(	O
(	O
*	O
filename	*(char)
==	O
'-'	O
)	O
&&	O
(	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
==	O
1	int
)	O
)	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
else	O
if	O
(	O
!	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
filename	*(char)
,	O
&	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
if	O
(	O
(	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
&	O
S_IFMT	O
)	O
==	O
S_IFREG	O
)	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
(	O
warning_level	int
>=	O
0	int
)	O
&&	O
(	O
mode	enum(int,int,int,int,int,int,int)
!=	O
REsponse	int
)	O
&&	O
(	O
mode	enum(int,int,int,int,int,int,int)
!=	O
COmmon	int
)	O
)	O
{	O
if	O
(	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
&&	O
(	O
warning_level	int
==	O
1	int
)	O
)	O
||	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
&&	O
(	O
warning_level	int
==	O
2	int
)	O
)	O
||	O
warning_level	int
>	O
2	int
)	O
{	O
register	O
int	O
i	int
;	O
if	O
(	O
*	O
is_first	*(int)
)	O
{	O
*	O
is_first	*(int)
=	O
FALSE	O
;	O
*	O
s4	*(char)
=	O
'\0'	O
;	O
print_text	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s4	*(char)
)	O
;	O
}	O
i	int
=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
+	O
MAX	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
,	O
ehls2s	struct(*(char),int)
.	O
len	int
)	O
+	O
MAX	O
(	O
ehls1e	struct(*(char),int)
.	O
len	int
,	O
ehls2e	struct(*(char),int)
.	O
len	int
)	O
+	O
LEN_SINGLE_LINE	int
;	O
if	O
(	O
(	O
Uint	int
)	O
i	int
>=	O
maxlen_max	int
)	O
resize_all_strings	(int,int,*(char),long)->(void)
(	O
i	int
+	O
1	int
,	O
FALSE	O
,	O
__FILE__	O
,	O
(	O
long	O
)	O
__LINE__	O
)	O
;	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
||	O
mode	enum(int,int,int,int,int,int,int)
==	O
HEre	int
)	O
sprintf	(*(char),*(char))->(int)
(	O
s4	*(char)
,	O
_	O
(	O
"Try to open%sresource file `%s'... %s%s%s"	*(char)
)	O
,	O
(	O
mode	enum(int,int,int,int,int,int,int)
==	O
REsource	int
)	O
?	O
" "	*(char)
:	O
_	O
(	O
" `HERE' "	*(char)
)	O
,	O
filename	*(char)
,	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
!=	O
1	int
)	O
?	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
?	O
ehls2s	struct(*(char),int)
.	O
seq	*(char)
:	O
ehls1s	struct(*(char),int)
.	O
seq	*(char)
)	O
:	O
""	*(char)
,	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
?	O
_	O
(	O
"failed"	*(char)
)	O
:	O
_	O
(	O
"success"	*(char)
)	O
,	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
!=	O
1	int
)	O
?	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
?	O
ehls2e	struct(*(char),int)
.	O
seq	*(char)
:	O
ehls1e	struct(*(char),int)
.	O
seq	*(char)
)	O
:	O
""	*(char)
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
s4	*(char)
,	O
_	O
(	O
"Try to open (level: %02d) include file `%s'... %s%s%s"	*(char)
)	O
,	O
level	int
,	O
filename	*(char)
,	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
!=	O
1	int
)	O
?	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
?	O
ehls2s	struct(*(char),int)
.	O
seq	*(char)
:	O
ehls1s	struct(*(char),int)
.	O
seq	*(char)
)	O
:	O
""	*(char)
,	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
?	O
_	O
(	O
"failed"	*(char)
)	O
:	O
_	O
(	O
"success"	*(char)
)	O
,	O
(	O
ehls1s	struct(*(char),int)
.	O
len	int
!=	O
1	int
)	O
?	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
(	O
FILE	struct
*	O
)	O
NULL	O
)	O
?	O
ehls2e	struct(*(char),int)
.	O
seq	*(char)
:	O
ehls1e	struct(*(char),int)
.	O
seq	*(char)
)	O
:	O
""	*(char)
)	O
;	O
print_text	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
s4	*(char)
)	O
;	O
}	O
}	O
return	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
