static	O
const	O
char	O
*	O
imapio_prefix	array(*(char))
[	O
]	O
=	O
{	O
"S: "	*(char)
,	O
"C: "	*(char)
}	O
;	O
int	O
mu_imapio_trace_enable	(*(struct))->(int)
(	O
mu_imapio_t	*(struct)
io	*(struct)
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
mu_stream_t	*(struct)
dstr	*(struct)
,	O
xstr	*(struct)
;	O
if	O
(	O
io	*(struct)
->	O
_imap_transcript	int
)	O
return	O
MU_ERR_OPEN	O
;	O
rc	int
=	O
mu_dbgstream_create	(*(*(struct)),int)->(int)
(	O
&	O
dstr	*(struct)
,	O
MU_DIAG_DEBUG	O
)	O
;	O
if	O
(	O
rc	int
)	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"cannot create debug stream; transcript disabled: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
else	O
{	O
rc	int
=	O
mu_xscript_stream_create	(*(*(struct)),*(struct),*(struct),array(*(char)))->(int)
(	O
&	O
xstr	*(struct)
,	O
io	*(struct)
->	O
_imap_stream	*(struct)
,	O
dstr	*(struct)
,	O
imapio_prefix	array(*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"cannot create transcript stream: %s"	*(char)
)	O
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
else	O
{	O
mu_stream_unref	(*(struct))->(void)
(	O
io	*(struct)
->	O
_imap_stream	*(struct)
)	O
;	O
io	*(struct)
->	O
_imap_stream	*(struct)
=	O
xstr	*(struct)
;	O
io	*(struct)
->	O
_imap_transcript	int
=	O
1	int
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_imapio_trace_disable	(*(struct))->(int)
(	O
mu_imapio_t	*(struct)
io	*(struct)
)	O
{	O
mu_stream_t	*(struct)
xstr	*(struct)
=	O
io	*(struct)
->	O
_imap_stream	*(struct)
;	O
mu_stream_t	*(struct)
stream	*(struct)
[	O
2	int
]	O
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
io	*(struct)
->	O
_imap_transcript	int
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
rc	int
=	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
xstr	*(struct)
,	O
MU_IOCTL_TRANSPORT	int
,	O
MU_IOCTL_OP_GET	int
,	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
io	*(struct)
->	O
_imap_stream	*(struct)
=	O
stream	*(struct)
[	O
0	int
]	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
xstr	*(struct)
)	O
;	O
io	*(struct)
->	O
_imap_transcript	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_imapio_get_trace	(*(struct))->(int)
(	O
mu_imapio_t	*(struct)
io	*(struct)
)	O
{	O
return	O
io	*(struct)
?	O
io	*(struct)
->	O
_imap_transcript	int
:	O
0	int
;	O
}	O
void	O
mu_imapio_trace_payload	(*(struct),int)->(void)
(	O
mu_imapio_t	*(struct)
io	*(struct)
,	O
int	O
val	int
)	O
{	O
io	*(struct)
->	O
_imap_trace_payload	int
=	O
!	O
!	O
val	int
;	O
}	O
int	O
mu_imapio_get_trace_payload	(*(struct))->(int)
(	O
mu_imapio_t	*(struct)
io	*(struct)
)	O
{	O
return	O
io	*(struct)
?	O
io	*(struct)
->	O
_imap_trace_payload	int
:	O
0	int
;	O
}	O
