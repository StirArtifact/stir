XS_EUPXS	O
(	O
XS_TestXS_init	O
)	O
;	O
XS_EUPXS	O
(	O
XS_TestXS_init	O
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	O
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
,	O
"int, char *"	*(char)
)	O
;	O
{	O
int	O
RETVAL	O
;	O
dXSTARG	O
;	O
puts	(*(char))->(int)
(	O
"message from XS module\n"	*(char)
)	O
;	O
RETVAL	O
=	O
1	int
;	O
XSprePUSH	O
;	O
PUSHi	O
(	O
(	O
IV	long
)	O
RETVAL	O
)	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EXTERNAL	O
(	O
boot_TestXS	O
)	O
;	O
XS_EXTERNAL	O
(	O
boot_TestXS	O
)	O
{	O
dVAR	O
;	O
dXSBOOTARGSXSAPIVERCHK	O
;	O
const	O
char	O
*	O
file	O
=	O
__FILE__	O
;	O
PERL_UNUSED_VAR	O
(	O
file	O
)	O
;	O
PERL_UNUSED_VAR	O
(	O
cv	struct(*(struct),int,int,union(*(char),long,long,double,*(struct(*(void),int,int,union(*(char),long,long,double,*(struct`),*(*`),*(*`),*(struct`),*(*`)))),*(*(struct(*(void),int,int,union(*`,long,long,double,*`,*`,*`,*`,*`)))),*(*(struct)),*(struct),*(*(struct))))
)	O
;	O
PERL_UNUSED_VAR	O
(	O
items	O
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"TestXS::init"	*(char)
,	O
XS_TestXS_init	O
,	O
file	O
,	O
"$$"	*(char)
)	O
;	O
Perl_xs_boot_epilog	O
(	O
aTHX_	O
ax	O
)	O
;	O
}	O
