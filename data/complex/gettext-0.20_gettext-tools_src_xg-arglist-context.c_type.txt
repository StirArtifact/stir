flag_context_ty	struct
null_context	struct(int,int,int,int,int,int)
=	O
{	O
undecided	int
,	O
false	int
,	O
undecided	int
,	O
false	int
}	O
;	O
flag_context_ty	struct
passthrough_context	struct(int,int,int,int,int,int)
=	O
{	O
undecided	int
,	O
true	int
,	O
undecided	int
,	O
true	int
}	O
;	O
flag_context_ty	struct
inherited_context	(struct(int,int,int,int,int,int),struct(int,int,int,int,int,int))->(struct(int,int,int,int,int,int))
(	O
flag_context_ty	struct
outer_context	struct(int,int,int,int,int,int)
,	O
flag_context_ty	struct
modifier_context	struct(int,int,int,int,int,int)
)	O
{	O
flag_context_ty	struct
result	*(*(void))
=	O
modifier_context	struct(int,int,int,int,int,int)
;	O
if	O
(	O
result	*(*(void))
.	O
pass_format1	int
)	O
{	O
result	*(*(void))
.	O
is_format1	int
=	O
outer_context	struct(int,int,int,int,int,int)
.	O
is_format1	int
;	O
result	*(*(void))
.	O
pass_format1	int
=	O
false	int
;	O
}	O
if	O
(	O
result	*(*(void))
.	O
pass_format2	int
)	O
{	O
result	*(*(void))
.	O
is_format2	int
=	O
outer_context	struct(int,int,int,int,int,int)
.	O
is_format2	int
;	O
result	*(*(void))
.	O
pass_format2	int
=	O
false	int
;	O
}	O
if	O
(	O
result	*(*(void))
.	O
pass_format3	int
)	O
{	O
result	*(*(void))
.	O
is_format3	int
=	O
outer_context	struct(int,int,int,int,int,int)
.	O
is_format3	int
;	O
result	*(*(void))
.	O
pass_format3	int
=	O
false	int
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
flag_context_list_iterator_ty	struct
null_context_list_iterator	struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
=	O
{	O
1	int
,	O
NULL	O
}	O
;	O
static	O
flag_context_list_ty	struct
passthrough_context_circular_list	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
=	O
{	O
1	int
,	O
{	O
undecided	int
,	O
true	int
,	O
undecided	int
,	O
true	int
}	O
,	O
&	O
passthrough_context_circular_list	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
}	O
;	O
flag_context_list_iterator_ty	struct
passthrough_context_list_iterator	struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
=	O
{	O
1	int
,	O
&	O
passthrough_context_circular_list	struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
}	O
;	O
flag_context_list_iterator_ty	struct
flag_context_list_iterator	(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))->(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
(	O
flag_context_list_ty	struct
*	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
flag_context_list_iterator_ty	struct
result	*(*(void))
;	O
result	*(*(void))
.	O
argnum	int
=	O
1	int
;	O
result	*(*(void))
.	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
return	O
result	*(*(void))
;	O
}	O
flag_context_ty	struct
flag_context_list_iterator_advance	(*(struct(int,*(struct(int,struct`,*`)))))->(struct(int,int,int,int,int,int))
(	O
flag_context_list_iterator_ty	struct
*	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
if	O
(	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
==	O
NULL	O
)	O
return	O
null_context	struct(int,int,int,int,int,int)
;	O
if	O
(	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
==	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
)	O
{	O
flag_context_ty	struct
result	*(*(void))
=	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
;	O
if	O
(	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
!=	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
{	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
head	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
++	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
else	O
{	O
iter	*(struct(int,*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
++	O
;	O
return	O
null_context	struct(int,int,int,int,int,int)
;	O
}	O
}	O
flag_context_list_ty	struct
*	O
flag_context_list_table_lookup	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(void),long)->(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
(	O
flag_context_list_table_ty	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
*	O
flag_table	*(struct(long,long,*(struct),*(struct),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int)))
,	O
const	O
void	O
*	O
key	*(void)
,	O
size_t	long
keylen	long
)	O
{	O
void	O
*	O
entry	*(void)
;	O
if	O
(	O
flag_table	*(struct(long,long,*(struct),*(struct),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int)))
->	O
table	*(struct)
!=	O
NULL	O
&&	O
hash_find_entry	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(void),long,*(*(void)))->(int)
(	O
flag_table	*(struct(long,long,*(struct),*(struct),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int)))
,	O
key	*(void)
,	O
keylen	long
,	O
&	O
entry	*(void)
)	O
==	O
0	int
)	O
return	O
(	O
flag_context_list_ty	struct
*	O
)	O
entry	*(void)
;	O
else	O
return	O
NULL	O
;	O
}	O
void	O
flag_context_list_table_add	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),int,*(char),*(char),int,enum(int,int,int,int,int,int),bool)->(void)
(	O
flag_context_list_table_ty	struct(long,long,*(struct),*(struct),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),long,union(*((long)->(*`)),*((*`,long)->(*`))),union(*((*`)->(void)),*((*`,*`)->(void))),*(void),int,int,int))
*	O
table	*(struct)
,	O
unsigned	O
int	O
index	(*(char),int)->(*(char))
,	O
const	O
char	O
*	O
name_start	*(char)
,	O
const	O
char	O
*	O
name_end	*(char)
,	O
int	O
argnum	int
,	O
enum	O
is_format	enum(int,int,int,int,int,int)
value	enum(int,int,int,int,int,int)
,	O
bool	bool
pass	bool
)	O
{	O
if	O
(	O
table	*(struct)
->	O
table	*(struct)
==	O
NULL	O
)	O
hash_init	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),long)->(int)
(	O
table	*(struct)
,	O
100	int
)	O
;	O
{	O
void	O
*	O
entry	*(void)
;	O
if	O
(	O
hash_find_entry	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(void),long,*(*(void)))->(int)
(	O
table	*(struct)
,	O
name_start	*(char)
,	O
name_end	*(char)
-	O
name_start	*(char)
,	O
&	O
entry	*(void)
)	O
!=	O
0	int
)	O
{	O
flag_context_list_ty	struct
*	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
XMALLOC	O
(	O
flag_context_list_ty	struct
)	O
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
=	O
argnum	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
,	O
'\0'	O
,	O
sizeof	O
(	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
)	O
)	O
;	O
switch	O
(	O
index	(*(char),int)->(*(char))
)	O
{	O
case	O
0	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format1	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format1	int
=	O
pass	bool
;	O
break	O
;	O
case	O
1	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format2	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format2	int
=	O
pass	bool
;	O
break	O
;	O
case	O
2	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format3	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format3	int
=	O
pass	bool
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
NULL	O
;	O
hash_insert_entry	(*(struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))),*(void),long,*(void))->(*(void))
(	O
table	*(struct)
,	O
name_start	*(char)
,	O
name_end	*(char)
-	O
name_start	*(char)
,	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
)	O
;	O
}	O
else	O
{	O
flag_context_list_ty	struct
*	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
(	O
flag_context_list_ty	struct
*	O
)	O
entry	*(void)
;	O
flag_context_list_ty	struct
*	O
*	O
lastp	*(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
=	O
NULL	O
;	O
while	O
(	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
!=	O
NULL	O
&&	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
<	O
argnum	int
)	O
{	O
lastp	*(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
=	O
&	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
*	O
lastp	*(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
;	O
}	O
if	O
(	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
!=	O
NULL	O
&&	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
==	O
argnum	int
)	O
{	O
switch	O
(	O
index	(*(char),int)->(*(char))
)	O
{	O
case	O
0	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format1	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format1	int
=	O
pass	bool
;	O
break	O
;	O
case	O
1	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format2	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format2	int
=	O
pass	bool
;	O
break	O
;	O
case	O
2	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format3	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format3	int
=	O
pass	bool
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
}	O
else	O
if	O
(	O
lastp	*(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
!=	O
NULL	O
)	O
{	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
XMALLOC	O
(	O
flag_context_list_ty	struct
)	O
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
=	O
argnum	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
,	O
'\0'	O
,	O
sizeof	O
(	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
)	O
)	O
;	O
switch	O
(	O
index	(*(char),int)->(*(char))
)	O
{	O
case	O
0	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format1	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format1	int
=	O
pass	bool
;	O
break	O
;	O
case	O
1	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format2	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format2	int
=	O
pass	bool
;	O
break	O
;	O
case	O
2	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format3	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format3	int
=	O
pass	bool
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
*	O
lastp	*(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
;	O
*	O
lastp	*(*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct`,*`)))))
=	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
}	O
else	O
{	O
flag_context_list_ty	struct
*	O
copy	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
XMALLOC	O
(	O
flag_context_list_ty	struct
)	O
;	O
*	O
copy	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
*	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
argnum	int
=	O
argnum	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
,	O
'\0'	O
,	O
sizeof	O
(	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
)	O
)	O
;	O
switch	O
(	O
index	(*(char),int)->(*(char))
)	O
{	O
case	O
0	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format1	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format1	int
=	O
pass	bool
;	O
break	O
;	O
case	O
1	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format2	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format2	int
=	O
pass	bool
;	O
break	O
;	O
case	O
2	int
:	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
is_format3	int
=	O
value	enum(int,int,int,int,int,int)
;	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
flags	struct(int,int,int,int,int,int)
.	O
pass_format3	int
=	O
pass	bool
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
list	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
->	O
next	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
=	O
copy	*(struct(int,struct(int,int,int,int,int,int),*(struct(int,struct(int,int,int,int,int,int),*(struct`)))))
;	O
}	O
}	O
}	O
}	O
