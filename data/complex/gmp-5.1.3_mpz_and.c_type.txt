void	O
mpz_and	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
res	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
op1	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
op2	*(struct(int,int,*(long)))
)	O
{	O
mp_srcptr	*(long)
op1_ptr	*(long)
,	O
op2_ptr	*(long)
;	O
mp_size_t	long
op1_size	long
,	O
op2_size	long
;	O
mp_ptr	*(long)
res_ptr	*(long)
;	O
mp_size_t	long
res_size	long
;	O
mp_size_t	long
i	long
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
op1_size	long
=	O
SIZ	O
(	O
op1	*(struct(int,int,*(long)))
)	O
;	O
op2_size	long
=	O
SIZ	O
(	O
op2	*(struct(int,int,*(long)))
)	O
;	O
op1_ptr	*(long)
=	O
PTR	O
(	O
op1	*(struct(int,int,*(long)))
)	O
;	O
op2_ptr	*(long)
=	O
PTR	O
(	O
op2	*(struct(int,int,*(long)))
)	O
;	O
if	O
(	O
op1_size	long
>=	O
0	int
)	O
{	O
if	O
(	O
op2_size	long
>=	O
0	int
)	O
{	O
res_size	long
=	O
MIN	O
(	O
op1_size	long
,	O
op2_size	long
)	O
;	O
for	O
(	O
i	long
=	O
res_size	long
-	O
1	int
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
if	O
(	O
(	O
op1_ptr	*(long)
[	O
i	long
]	O
&	O
op2_ptr	*(long)
[	O
i	long
]	O
)	O
!=	O
0	int
)	O
break	O
;	O
res_size	long
=	O
i	long
+	O
1	int
;	O
res_ptr	*(long)
=	O
MPZ_REALLOC	O
(	O
res	*(struct(int,int,*(long)))
,	O
res_size	long
)	O
;	O
SIZ	O
(	O
res	*(struct(int,int,*(long)))
)	O
=	O
res_size	long
;	O
if	O
(	O
LIKELY	O
(	O
res_size	long
!=	O
0	int
)	O
)	O
mpn_and_n	O
(	O
res_ptr	*(long)
,	O
op1_ptr	*(long)
,	O
op2_ptr	*(long)
,	O
res_size	long
)	O
;	O
return	O
;	O
}	O
else	O
{	O
}	O
}	O
else	O
{	O
if	O
(	O
op2_size	long
<	O
0	int
)	O
{	O
mp_ptr	*(long)
opx	*(long)
,	O
opy	*(long)
;	O
mp_limb_t	long
cy	long
;	O
op1_size	long
=	O
-	O
op1_size	long
;	O
op2_size	long
=	O
-	O
op2_size	long
;	O
if	O
(	O
op1_size	long
>	O
op2_size	long
)	O
MPN_SRCPTR_SWAP	O
(	O
op1_ptr	*(long)
,	O
op1_size	long
,	O
op2_ptr	*(long)
,	O
op2_size	long
)	O
;	O
TMP_ALLOC_LIMBS_2	O
(	O
opx	*(long)
,	O
op1_size	long
,	O
opy	*(long)
,	O
op2_size	long
)	O
;	O
mpn_sub_1	O
(	O
opx	*(long)
,	O
op1_ptr	*(long)
,	O
op1_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
op1_ptr	*(long)
=	O
opx	*(long)
;	O
mpn_sub_1	O
(	O
opy	*(long)
,	O
op2_ptr	*(long)
,	O
op2_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
op2_ptr	*(long)
=	O
opy	*(long)
;	O
res_ptr	*(long)
=	O
MPZ_REALLOC	O
(	O
res	*(struct(int,int,*(long)))
,	O
1	int
+	O
op2_size	long
)	O
;	O
MPN_COPY	O
(	O
res_ptr	*(long)
+	O
op1_size	long
,	O
op2_ptr	*(long)
+	O
op1_size	long
,	O
op2_size	long
-	O
op1_size	long
)	O
;	O
mpn_ior_n	O
(	O
res_ptr	*(long)
,	O
op1_ptr	*(long)
,	O
op2_ptr	*(long)
,	O
op1_size	long
)	O
;	O
res_size	long
=	O
op2_size	long
;	O
cy	long
=	O
mpn_add_1	O
(	O
res_ptr	*(long)
,	O
res_ptr	*(long)
,	O
res_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
res_ptr	*(long)
[	O
res_size	long
]	O
=	O
cy	long
;	O
res_size	long
+=	O
(	O
cy	long
!=	O
0	int
)	O
;	O
SIZ	O
(	O
res	*(struct(int,int,*(long)))
)	O
=	O
-	O
res_size	long
;	O
TMP_FREE	O
;	O
return	O
;	O
}	O
else	O
{	O
MPN_SRCPTR_SWAP	O
(	O
op1_ptr	*(long)
,	O
op1_size	long
,	O
op2_ptr	*(long)
,	O
op2_size	long
)	O
;	O
}	O
}	O
{	O
mp_ptr	*(long)
opx	*(long)
;	O
op2_size	long
=	O
-	O
op2_size	long
;	O
opx	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
op2_size	long
)	O
;	O
mpn_sub_1	O
(	O
opx	*(long)
,	O
op2_ptr	*(long)
,	O
op2_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
op2_ptr	*(long)
=	O
opx	*(long)
;	O
if	O
(	O
op1_size	long
>	O
op2_size	long
)	O
{	O
res_size	long
=	O
op1_size	long
;	O
res_ptr	*(long)
=	O
MPZ_REALLOC	O
(	O
res	*(struct(int,int,*(long)))
,	O
res_size	long
)	O
;	O
MPN_COPY	O
(	O
res_ptr	*(long)
+	O
op2_size	long
,	O
op1_ptr	*(long)
+	O
op2_size	long
,	O
res_size	long
-	O
op2_size	long
)	O
;	O
mpn_andn_n	O
(	O
res_ptr	*(long)
,	O
op1_ptr	*(long)
,	O
op2_ptr	*(long)
,	O
op2_size	long
)	O
;	O
SIZ	O
(	O
res	*(struct(int,int,*(long)))
)	O
=	O
res_size	long
;	O
}	O
else	O
{	O
for	O
(	O
i	long
=	O
op1_size	long
-	O
1	int
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
if	O
(	O
(	O
op1_ptr	*(long)
[	O
i	long
]	O
&	O
~	O
op2_ptr	*(long)
[	O
i	long
]	O
)	O
!=	O
0	int
)	O
break	O
;	O
res_size	long
=	O
i	long
+	O
1	int
;	O
res_ptr	*(long)
=	O
MPZ_REALLOC	O
(	O
res	*(struct(int,int,*(long)))
,	O
res_size	long
)	O
;	O
if	O
(	O
LIKELY	O
(	O
res_size	long
!=	O
0	int
)	O
)	O
mpn_andn_n	O
(	O
res_ptr	*(long)
,	O
op1_ptr	*(long)
,	O
op2_ptr	*(long)
,	O
res_size	long
)	O
;	O
SIZ	O
(	O
res	*(struct(int,int,*(long)))
)	O
=	O
res_size	long
;	O
}	O
}	O
TMP_FREE	O
;	O
}	O
