unsigned	O
int	O
gsl_ran_binomial_knuth	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,int)->(int)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
double	O
p	int
,	O
unsigned	O
int	O
n	long
)	O
{	O
unsigned	O
int	O
i	long
,	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
b	*(struct(long,*(long double)))
,	O
k	long
=	O
0	int
;	O
while	O
(	O
n	long
>	O
10	int
)	O
{	O
double	O
X	*(float)
;	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
1	int
+	O
(	O
n	long
/	O
2	int
)	O
;	O
b	*(struct(long,*(long double)))
=	O
1	int
+	O
n	long
-	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
X	*(float)
=	O
gsl_ran_beta	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),double,double)->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
(	O
double	O
)	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
(	O
double	O
)	O
b	*(struct(long,*(long double)))
)	O
;	O
if	O
(	O
X	*(float)
>=	O
p	int
)	O
{	O
n	long
=	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
-	O
1	int
;	O
p	int
/=	O
X	*(float)
;	O
}	O
else	O
{	O
k	long
+=	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
n	long
=	O
b	*(struct(long,*(long double)))
-	O
1	int
;	O
p	int
=	O
(	O
p	int
-	O
X	*(float)
)	O
/	O
(	O
1	int
-	O
X	*(float)
)	O
;	O
}	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	long
;	O
i	long
++	O
)	O
{	O
double	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
gsl_rng_uniform	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))))->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
)	O
;	O
if	O
(	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
<	O
p	int
)	O
k	long
++	O
;	O
}	O
return	O
k	long
;	O
}	O
double	O
gsl_ran_binomial_pdf	(int,double,int)->(double)
(	O
const	O
unsigned	O
int	O
k	long
,	O
const	O
double	O
p	int
,	O
const	O
unsigned	O
int	O
n	long
)	O
{	O
if	O
(	O
k	long
>	O
n	long
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
double	O
P	*(float)
;	O
if	O
(	O
p	int
==	O
0	int
)	O
{	O
P	*(float)
=	O
(	O
k	long
==	O
0	int
)	O
?	O
1	int
:	O
0	int
;	O
}	O
else	O
if	O
(	O
p	int
==	O
1	int
)	O
{	O
P	*(float)
=	O
(	O
k	long
==	O
n	long
)	O
?	O
1	int
:	O
0	int
;	O
}	O
else	O
{	O
double	O
ln_Cnk	double
=	O
gsl_sf_lnchoose	(int,int)->(double)
(	O
n	long
,	O
k	long
)	O
;	O
P	*(float)
=	O
ln_Cnk	double
+	O
k	long
*	O
log	(double)->(double)
(	O
p	int
)	O
+	O
(	O
n	long
-	O
k	long
)	O
*	O
log1p	(double)->(double)
(	O
-	O
p	int
)	O
;	O
P	*(float)
=	O
exp	(double)->(double)
(	O
P	*(float)
)	O
;	O
}	O
return	O
P	*(float)
;	O
}	O
}	O
