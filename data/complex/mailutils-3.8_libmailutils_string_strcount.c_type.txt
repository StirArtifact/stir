size_t	long
mu_str_count	(*(char),*(char),*(long))->(long)
(	O
char	O
const	O
*	O
str	*(char)
,	O
char	O
const	O
*	O
chr	*(char)
,	O
size_t	long
*	O
cnt	*(long)
)	O
{	O
unsigned	O
char	O
c	char
;	O
int	O
consume	int
=	O
0	int
;	O
size_t	long
count	long
=	O
0	int
;	O
if	O
(	O
!	O
str	*(char)
||	O
!	O
chr	*(char)
)	O
return	O
0	int
;	O
if	O
(	O
cnt	*(long)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
chr	*(char)
[	O
i	int
]	O
;	O
i	int
++	O
)	O
cnt	*(long)
[	O
i	int
]	O
=	O
0	int
;	O
}	O
while	O
(	O
(	O
c	char
=	O
*	O
str	*(char)
++	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
consume	int
)	O
consume	int
--	O
;	O
else	O
if	O
(	O
c	char
<	O
0xc0	int
)	O
{	O
char	O
*	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
chr	*(char)
,	O
c	char
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
if	O
(	O
cnt	*(long)
)	O
cnt	*(long)
[	O
p	*(char)
-	O
chr	*(char)
]	O
++	O
;	O
count	long
++	O
;	O
}	O
}	O
else	O
if	O
(	O
c	char
&	O
0xc0	int
)	O
consume	int
=	O
1	int
;	O
else	O
if	O
(	O
c	char
&	O
0xe0	int
)	O
consume	int
=	O
2	int
;	O
else	O
if	O
(	O
c	char
&	O
0xf0	int
)	O
consume	int
=	O
3	int
;	O
}	O
return	O
count	long
;	O
}	O
