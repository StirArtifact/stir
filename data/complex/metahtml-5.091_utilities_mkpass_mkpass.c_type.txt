static	O
char	O
*	O
create_password	(*(char),*(char))->(*(char))
(	O
char	O
*	O
clear	*(char)
,	O
char	O
*	O
salt	*(char)
)	O
{	O
int	O
length	int
=	O
(	O
13	int
*	O
(	O
(	O
strlen	(*(char))->(long)
(	O
clear	*(char)
)	O
+	O
7	int
)	O
/	O
8	int
)	O
)	O
;	O
char	O
*	O
encrypted	*(char)
=	O
(	O
char	O
*	O
)	O
xmalloc	()->(int)
(	O
1	int
+	O
length	int
)	O
;	O
char	O
*	O
clear_p	*(char)
=	O
clear	*(char)
;	O
encrypted	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
while	O
(	O
length	int
>	O
0	int
)	O
{	O
char	O
chunk	array(char)
[	O
9	int
]	O
;	O
char	O
*	O
temp	*(char)
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
chunk	array(char)
,	O
clear_p	*(char)
,	O
8	int
)	O
;	O
chunk	array(char)
[	O
8	int
]	O
=	O
(	O
char	O
)	O
0	int
;	O
temp	*(char)
=	O
crypt	(*(char),*(char))->(*(char))
(	O
chunk	array(char)
,	O
salt	*(char)
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
encrypted	*(char)
,	O
temp	*(char)
)	O
;	O
clear_p	*(char)
+=	O
8	int
;	O
length	int
-=	O
13	int
;	O
}	O
return	O
(	O
encrypted	*(char)
)	O
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
char	O
salt	*(char)
[	O
3	int
]	O
=	O
{	O
'c'	O
,	O
'd'	O
,	O
'\0'	O
}	O
;	O
if	O
(	O
argc	int
>=	O
2	int
)	O
{	O
int	O
arg_index	int
=	O
1	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"--salt"	*(char)
)	O
==	O
0	int
)	O
{	O
arg_index	int
=	O
3	int
;	O
salt	*(char)
[	O
0	int
]	O
=	O
argv	array(*(char))
[	O
2	int
]	O
[	O
0	int
]	O
;	O
salt	*(char)
[	O
1	int
]	O
=	O
argv	array(*(char))
[	O
2	int
]	O
[	O
1	int
]	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
create_password	(*(char),*(char))->(*(char))
(	O
argv	array(*(char))
[	O
arg_index	int
]	O
,	O
salt	*(char)
)	O
)	O
;	O
}	O
return	O
(	O
0	int
)	O
;	O
}	O
