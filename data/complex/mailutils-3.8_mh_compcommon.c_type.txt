static	O
char	O
*	O
default_format_str	*(char)
=	O
"To:\n"	*(char)
"cc:\n"	*(char)
"Subject:\n"	*(char)
"--------\n"	*(char)
;	O
void	O
mh_comp_draft	(*(char),*(char))->(void)
(	O
const	O
char	O
*	O
formfile	*(char)
,	O
const	O
char	O
*	O
draftfile	*(char)
)	O
{	O
char	O
*	O
s	*(char)
;	O
if	O
(	O
mh_find_file	(*(char),*(*(char)))->(int)
(	O
formfile	*(char)
,	O
&	O
s	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
mh_file_copy	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
draftfile	*(char)
)	O
)	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
free	(*(void))->(void)
(	O
s	*(char)
)	O
;	O
}	O
else	O
{	O
int	O
rc	int
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
if	O
(	O
(	O
rc	int
=	O
mu_file_stream_create	(*(*(struct)),*(char),int)->(int)
(	O
&	O
stream	*(struct)
,	O
draftfile	*(char)
,	O
MU_STREAM_WRITE	int
|	O
MU_STREAM_CREAT	int
)	O
)	O
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"cannot open output file \"%s\": %s"	*(char)
)	O
,	O
draftfile	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
default_format_str	*(char)
,	O
strlen	(*(char))->(long)
(	O
default_format_str	*(char)
)	O
,	O
NULL	O
)	O
;	O
mu_stream_close	(*(struct))->(int)
(	O
stream	*(struct)
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
_	O
(	O
"error writing to \"%s\": %s"	*(char)
)	O
,	O
draftfile	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
}	O
int	O
check_draft_disposition	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char))),int)->(int)
(	O
struct	O
mh_whatnow_env	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char))
*	O
wh	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char)))
,	O
int	O
use_draft	int
)	O
{	O
struct	O
stat	*(int)
st	*(struct(long,long,long))
;	O
int	O
disp	int
=	O
DISP_REPLACE	int
;	O
if	O
(	O
wh	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char)))
->	O
nowhatnowproc	int
)	O
return	O
disp	int
;	O
if	O
(	O
stat	*(int)
(	O
wh	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char)))
->	O
draftfile	*(char)
,	O
&	O
st	*(struct(long,long,long))
)	O
==	O
0	int
)	O
{	O
if	O
(	O
use_draft	int
)	O
disp	int
=	O
DISP_USE	int
;	O
else	O
{	O
printf	(*(char))->(int)
(	O
ngettext	(*(char),*(char),long)->(*(char))
(	O
"Draft \"%s\" exists (%s byte).\n"	*(char)
,	O
"Draft \"%s\" exists (%s bytes).\n"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
st	*(struct(long,long,long))
.	O
st_size	long
)	O
,	O
wh	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char)))
->	O
draftfile	*(char)
,	O
mu_umaxtostr	(int,long)->(*(char))
(	O
0	int
,	O
st	*(struct(long,long,long))
.	O
st_size	long
)	O
)	O
;	O
disp	int
=	O
mh_disposition	(*(char))->(int)
(	O
wh	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),int,int,*(char)))
->	O
draftfile	*(char)
)	O
;	O
}	O
}	O
return	O
disp	int
;	O
}	O
