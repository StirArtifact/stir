void	O
usage	()->(void)
(	O
void	O
)	O
{	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"ctm [-c] [-n] PATLIST TYPE [TYPE...]\n"	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"checks content-type matchers\n"	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"Options:\n"	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"   -c   test mu_mailcap_content_type_match\n"	*(char)
)	O
;	O
mu_stream_printf	(*(struct),*(char))->(int)
(	O
mu_strerr	*(struct)
,	O
"   -n   set delim=0\n"	*(char)
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
delim	*(char)
=	O
','	O
;	O
int	O
ctflag	int
=	O
0	int
;	O
char	O
*	O
arg	*(char)
;	O
char	O
*	O
pattern	*(void)
;	O
mu_stdstream_setup	(int)->(void)
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
while	O
(	O
--	O
argc	long
&&	O
(	O
arg	*(char)
=	O
*	O
++	O
argv	*(*(char))
)	O
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--"	*(char)
)	O
==	O
0	int
)	O
{	O
argc	long
--	O
;	O
argv	*(*(char))
++	O
;	O
break	O
;	O
}	O
else	O
{	O
while	O
(	O
*	O
++	O
arg	*(char)
)	O
{	O
switch	O
(	O
*	O
arg	*(char)
)	O
{	O
case	O
'c'	O
:	O
ctflag	int
=	O
1	int
;	O
break	O
;	O
case	O
'n'	O
:	O
delim	*(char)
=	O
0	int
;	O
break	O
;	O
default	O
:	O
mu_error	(*(char))->(int)
(	O
"unrecognized option: -%c"	*(char)
,	O
*	O
arg	*(char)
)	O
;	O
usage	()->(void)
(	O
)	O
;	O
return	O
1	int
;	O
}	O
}	O
}	O
}	O
if	O
(	O
argc	long
<	O
2	int
)	O
{	O
usage	()->(void)
(	O
)	O
;	O
return	O
1	int
;	O
}	O
argc	long
--	O
;	O
pattern	*(void)
=	O
*	O
argv	*(*(char))
++	O
;	O
while	O
(	O
argc	long
--	O
)	O
{	O
int	O
rc	int
;	O
arg	*(char)
=	O
*	O
argv	*(*(char))
++	O
;	O
if	O
(	O
ctflag	int
)	O
{	O
struct	O
mu_content_type	struct(*(char),*(char),*(char),*(struct))
ct	*(struct(*(char),*(char),*(char),*(struct)))
;	O
char	O
*	O
p	*(char)
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
,	O
0	int
,	O
sizeof	O
(	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
)	O
)	O
;	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
.	O
type	int
=	O
arg	*(char)
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
arg	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
{	O
mu_error	(*(char))->(int)
(	O
"%s: malformed argument\n"	*(char)
,	O
arg	*(char)
)	O
;	O
continue	O
;	O
}	O
*	O
p	*(char)
=	O
0	int
;	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
.	O
subtype	*(char)
=	O
p	*(char)
+	O
1	int
;	O
rc	int
=	O
mu_mailcap_content_type_match	(*(char),int,*(struct(*(char),*(char),*(char),*(struct))))->(int)
(	O
pattern	*(void)
,	O
delim	*(char)
,	O
&	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
)	O
;	O
*	O
p	*(char)
=	O
'/'	O
;	O
}	O
else	O
rc	int
=	O
mu_mailcap_string_match	(*(char),int,*(char))->(int)
(	O
pattern	*(void)
,	O
delim	*(char)
,	O
arg	*(char)
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"%s: %d\n"	*(char)
,	O
arg	*(char)
,	O
rc	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
