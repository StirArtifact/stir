typedef	O
void	O
*	O
yyscan_t	*(void)
;	O
int	O
yyget_leng	(*(void))->(int)
(	O
yyscan_t	*(void)
yyscanner	*(void)
)	O
;	O
char	O
*	O
yyget_text	(*(void))->(*(char))
(	O
yyscan_t	*(void)
yyscanner	*(void)
)	O
;	O
typedef	O
struct	O
yy_buffer_state	O
*	O
YY_BUFFER_STATE	*(struct)
;	O
int	O
yylex_init	(*(*(void)))->(int)
(	O
yyscan_t	*(void)
*	O
scanner	*(*(void))
)	O
;	O
YY_BUFFER_STATE	*(struct)
yy_scan_string	(*(char),*(void))->(*(struct))
(	O
const	O
char	O
*	O
yystr	*(char)
,	O
yyscan_t	*(void)
yyscanner	*(void)
)	O
;	O
YY_BUFFER_STATE	*(struct)
yy_scan_bytes	(*(char),int,*(void))->(*(struct))
(	O
const	O
char	O
*	O
yystr	*(char)
,	O
int	O
len	long
,	O
yyscan_t	*(void)
yyscanner	*(void)
)	O
;	O
int	O
yylex	(*(void))->(int)
(	O
yyscan_t	*(void)
yyscanner	*(void)
)	O
;	O
int	O
yylex_destroy	(*(void))->(int)
(	O
yyscan_t	*(void)
yyscanner	*(void)
)	O
;	O
void	O
*	O
yyalloc	(long)->(*(void))
(	O
size_t	long
size	*(long)
)	O
;	O
void	O
*	O
yyrealloc	(*(void),long)->(*(void))
(	O
void	O
*	O
p	*(char)
,	O
size_t	long
size	*(long)
)	O
;	O
void	O
*	O
yyalloc	(long)->(*(void))
(	O
size_t	long
size	*(long)
)	O
{	O
return	O
wget_malloc	(long)->(*(void))
(	O
size	*(long)
)	O
;	O
}	O
void	O
*	O
yyrealloc	(*(void),long)->(*(void))
(	O
void	O
*	O
p	*(char)
,	O
size_t	long
size	*(long)
)	O
{	O
return	O
wget_realloc	(*(void),long)->(*(void))
(	O
p	*(char)
,	O
size	*(long)
)	O
;	O
}	O
void	O
wget_css_parse_buffer	(*(char),long,*((*(void),*(char),long,long)->(void)),*((*(void),*(char),long)->(void)),*(void))->(void)
(	O
const	O
char	O
*	O
buf	*(char)
,	O
size_t	long
len	long
,	O
wget_css_parse_uri_callback	(*(void),*(char),long,long)->(void)
*	O
callback_uri	*((*(void),*(char),long,long)->(void))
,	O
wget_css_parse_encoding_callback	(*(void),*(char),long)->(void)
*	O
callback_encoding	*((*(void),*(char),long)->(void))
,	O
void	O
*	O
user_ctx	*(void)
)	O
{	O
int	O
token	*(*(char))
;	O
size_t	long
length	long
,	O
pos	int
=	O
0	int
;	O
char	O
*	O
text	*(void)
;	O
yyscan_t	*(void)
scanner	*(*(void))
;	O
yylex_init	(*(*(void)))->(int)
(	O
&	O
scanner	*(*(void))
)	O
;	O
yy_scan_bytes	(*(char),int,*(void))->(*(struct))
(	O
buf	*(char)
,	O
(	O
int	O
)	O
len	long
,	O
scanner	*(*(void))
)	O
;	O
while	O
(	O
(	O
token	*(*(char))
=	O
yylex	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
)	O
!=	O
CSSEOF	int
)	O
{	O
if	O
(	O
token	*(*(char))
==	O
IMPORT_SYM	int
)	O
{	O
pos	int
+=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
while	O
(	O
(	O
token	*(*(char))
=	O
yylex	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
)	O
==	O
S	int
)	O
pos	int
+=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
if	O
(	O
token	*(*(char))
==	O
STRING	int
)	O
token	*(*(char))
=	O
URI	int
;	O
}	O
if	O
(	O
token	*(*(char))
==	O
URI	int
&&	O
callback_uri	*((*(void),*(char),long,long)->(void))
)	O
{	O
text	*(void)
=	O
yyget_text	(*(void))->(*(char))
(	O
scanner	*(*(void))
)	O
;	O
length	long
=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
if	O
(	O
*	O
text	*(void)
==	O
'\''	O
||	O
*	O
text	*(void)
==	O
'\"'	O
)	O
{	O
callback_uri	*((*(void),*(char),long,long)->(void))
(	O
user_ctx	*(void)
,	O
text	*(void)
+	O
1	int
,	O
length	long
-	O
2	int
,	O
pos	int
+	O
1	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
wget_strncasecmp_ascii	(*(char),*(char),long)->(int)
(	O
text	*(void)
,	O
"url("	*(char)
,	O
4	int
)	O
)	O
{	O
char	O
*	O
otext	*(char)
=	O
text	*(void)
;	O
for	O
(	O
length	long
--	O
;	O
c_isspace	(int)->(bool)
(	O
text	*(void)
[	O
length	long
-	O
1	int
]	O
)	O
;	O
length	long
--	O
)	O
;	O
for	O
(	O
length	long
-=	O
4	int
,	O
text	*(void)
+=	O
4	int
;	O
length	long
&&	O
c_isspace	(int)->(bool)
(	O
*	O
text	*(void)
)	O
;	O
text	*(void)
++	O
,	O
length	long
--	O
)	O
;	O
if	O
(	O
length	long
&&	O
(	O
*	O
text	*(void)
==	O
'\''	O
||	O
*	O
text	*(void)
==	O
'\"'	O
)	O
)	O
{	O
text	*(void)
++	O
;	O
length	long
--	O
;	O
}	O
if	O
(	O
length	long
&&	O
(	O
text	*(void)
[	O
length	long
-	O
1	int
]	O
==	O
'\''	O
||	O
text	*(void)
[	O
length	long
-	O
1	int
]	O
==	O
'\"'	O
)	O
)	O
length	long
--	O
;	O
callback_uri	*((*(void),*(char),long,long)->(void))
(	O
user_ctx	*(void)
,	O
text	*(void)
,	O
length	long
,	O
pos	int
+	O
(	O
text	*(void)
-	O
otext	*(char)
)	O
)	O
;	O
}	O
}	O
}	O
else	O
if	O
(	O
token	*(*(char))
==	O
CHARSET_SYM	int
&&	O
callback_encoding	*((*(void),*(char),long)->(void))
)	O
{	O
pos	int
+=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
while	O
(	O
(	O
token	*(*(char))
=	O
yylex	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
)	O
==	O
S	int
)	O
pos	int
+=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
if	O
(	O
token	*(*(char))
==	O
STRING	int
)	O
{	O
text	*(void)
=	O
yyget_text	(*(void))->(*(char))
(	O
scanner	*(*(void))
)	O
;	O
length	long
=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
if	O
(	O
*	O
text	*(void)
==	O
'\''	O
||	O
*	O
text	*(void)
==	O
'\"'	O
)	O
{	O
callback_encoding	*((*(void),*(char),long)->(void))
(	O
user_ctx	*(void)
,	O
text	*(void)
+	O
1	int
,	O
length	long
-	O
2	int
)	O
;	O
}	O
else	O
{	O
callback_encoding	*((*(void),*(char),long)->(void))
(	O
user_ctx	*(void)
,	O
text	*(void)
,	O
length	long
)	O
;	O
}	O
}	O
else	O
{	O
error_printf	O
(	O
_	O
(	O
"Unknown token after @charset: %d\n"	*(char)
)	O
,	O
token	*(*(char))
)	O
;	O
}	O
}	O
pos	int
+=	O
yyget_leng	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
}	O
yylex_destroy	(*(void))->(int)
(	O
scanner	*(*(void))
)	O
;	O
}	O
void	O
wget_css_parse_file	(*(char),*((*(void),*(char),long,long)->(void)),*((*(void),*(char),long)->(void)),*(void))->(void)
(	O
const	O
char	O
*	O
fname	*(char)
,	O
wget_css_parse_uri_callback	(*(void),*(char),long,long)->(void)
*	O
callback_uri	*((*(void),*(char),long,long)->(void))
,	O
wget_css_parse_encoding_callback	(*(void),*(char),long)->(void)
*	O
callback_encoding	*((*(void),*(char),long)->(void))
,	O
void	O
*	O
user_ctx	*(void)
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
fname	*(char)
,	O
"-"	*(char)
)	O
)	O
{	O
int	O
fd	array(int)
;	O
if	O
(	O
(	O
fd	array(int)
=	O
open	(*(char),int)->(int)
(	O
fname	*(char)
,	O
O_RDONLY	int
|	O
O_BINARY	int
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fd	array(int)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
0	int
)	O
{	O
size_t	long
nread	long
=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
;	O
char	O
*	O
buf	*(char)
=	O
mmap	(*(void),long,int,int,int,long)->(*(void))
(	O
NULL	O
,	O
nread	long
+	O
1	int
,	O
PROT_READ	int
|	O
PROT_WRITE	int
,	O
MAP_PRIVATE	int
,	O
fd	array(int)
,	O
0	int
)	O
;	O
if	O
(	O
nread	long
>	O
0	int
)	O
{	O
buf	*(char)
[	O
nread	long
]	O
=	O
0	int
;	O
wget_css_parse_buffer	(*(char),long,*((*(void),*(char),long,long)->(void)),*((*(void),*(char),long)->(void)),*(void))->(void)
(	O
buf	*(char)
,	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
,	O
callback_uri	*((*(void),*(char),long,long)->(void))
,	O
callback_encoding	*((*(void),*(char),long)->(void))
,	O
user_ctx	*(void)
)	O
;	O
}	O
munmap	(*(void),long)->(int)
(	O
buf	*(char)
,	O
nread	long
)	O
;	O
}	O
close	(int)->(int)
(	O
fd	array(int)
)	O
;	O
}	O
else	O
error_printf	O
(	O
_	O
(	O
"Failed to open %s\n"	*(char)
)	O
,	O
fname	*(char)
)	O
;	O
}	O
else	O
{	O
char	O
tmp	array(char)
[	O
4096	int
]	O
;	O
ssize_t	long
nbytes	long
;	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
buf	*(char)
;	O
wget_buffer_init	(*(struct(*(char),long,long,bool,bool,bool)),*(char),long)->(int)
(	O
&	O
buf	*(char)
,	O
NULL	O
,	O
4096	int
)	O
;	O
while	O
(	O
(	O
nbytes	long
=	O
read	(int,*(void),long)->(long)
(	O
STDIN_FILENO	int
,	O
tmp	array(char)
,	O
sizeof	O
(	O
tmp	array(char)
)	O
)	O
)	O
>	O
0	int
)	O
{	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
&	O
buf	*(char)
,	O
tmp	array(char)
,	O
nbytes	long
)	O
;	O
}	O
if	O
(	O
buf	*(char)
.	O
length	long
)	O
wget_css_parse_buffer	(*(char),long,*((*(void),*(char),long,long)->(void)),*((*(void),*(char),long)->(void)),*(void))->(void)
(	O
buf	*(char)
.	O
data	*(void)
,	O
buf	*(char)
.	O
length	long
,	O
callback_uri	*((*(void),*(char),long,long)->(void))
,	O
callback_encoding	*((*(void),*(char),long)->(void))
,	O
user_ctx	*(void)
)	O
;	O
wget_buffer_deinit	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
&	O
buf	*(char)
)	O
;	O
}	O
}	O
