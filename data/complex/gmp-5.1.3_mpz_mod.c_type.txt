void	O
mpz_mod	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
rem	long
,	O
mpz_srcptr	*(struct(int,int,*(long)))
dividend	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
divisor	*(struct(int,int,*(long)))
)	O
{	O
mp_size_t	long
rn	long
,	O
bn	long
;	O
mpz_t	array(struct(int,int,*(long)))
temp_divisor	array(struct(int,int,*(long)))
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
bn	long
=	O
ABSIZ	O
(	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
if	O
(	O
rem	long
==	O
divisor	*(struct(int,int,*(long)))
)	O
{	O
PTR	O
(	O
temp_divisor	array(struct(int,int,*(long)))
)	O
=	O
TMP_ALLOC_LIMBS	O
(	O
bn	long
)	O
;	O
MPN_COPY	O
(	O
PTR	O
(	O
temp_divisor	array(struct(int,int,*(long)))
)	O
,	O
PTR	O
(	O
divisor	*(struct(int,int,*(long)))
)	O
,	O
bn	long
)	O
;	O
}	O
else	O
{	O
PTR	O
(	O
temp_divisor	array(struct(int,int,*(long)))
)	O
=	O
PTR	O
(	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
}	O
SIZ	O
(	O
temp_divisor	array(struct(int,int,*(long)))
)	O
=	O
bn	long
;	O
divisor	*(struct(int,int,*(long)))
=	O
temp_divisor	array(struct(int,int,*(long)))
;	O
mpz_tdiv_r	O
(	O
rem	long
,	O
dividend	*(struct(int,int,*(long)))
,	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
rn	long
=	O
SIZ	O
(	O
rem	long
)	O
;	O
if	O
(	O
rn	long
<	O
0	int
)	O
mpz_add	O
(	O
rem	long
,	O
rem	long
,	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
TMP_FREE	O
;	O
}	O
