enum	O
{	O
MATCH	int
=	O
0	int
,	O
NO_MATCH	int
=	O
1	int
}	O
;	O
int	O
mu_mailcap_string_match	(*(char),int,*(char))->(int)
(	O
char	O
const	O
*	O
patlist	*(char)
,	O
int	O
delim	int
,	O
char	O
const	O
*	O
typestr	*(char)
)	O
{	O
char	O
const	O
*	O
type	*(char)
;	O
if	O
(	O
!	O
patlist	*(char)
)	O
return	O
NO_MATCH	int
;	O
while	O
(	O
*	O
patlist	*(char)
)	O
{	O
type	*(char)
=	O
typestr	*(char)
;	O
while	O
(	O
*	O
patlist	*(char)
&&	O
(	O
*	O
patlist	*(char)
==	O
delim	int
||	O
mu_isspace	O
(	O
*	O
patlist	*(char)
)	O
)	O
)	O
patlist	*(char)
++	O
;	O
do	O
{	O
if	O
(	O
!	O
*	O
patlist	*(char)
||	O
!	O
*	O
type	*(char)
||	O
mu_tolower	O
(	O
*	O
patlist	*(char)
++	O
)	O
!=	O
mu_tolower	O
(	O
*	O
type	*(char)
++	O
)	O
)	O
goto	O
retry	O
;	O
if	O
(	O
*	O
patlist	*(char)
==	O
delim	int
)	O
goto	O
retry	O
;	O
}	O
while	O
(	O
*	O
patlist	*(char)
!=	O
'/'	O
)	O
;	O
if	O
(	O
*	O
type	*(char)
!=	O
'/'	O
)	O
goto	O
retry	O
;	O
patlist	*(char)
++	O
;	O
type	*(char)
++	O
;	O
if	O
(	O
*	O
patlist	*(char)
==	O
'*'	O
)	O
return	O
MATCH	int
;	O
while	O
(	O
*	O
patlist	*(char)
&&	O
*	O
patlist	*(char)
!=	O
delim	int
&&	O
*	O
type	*(char)
&&	O
mu_tolower	O
(	O
*	O
patlist	*(char)
)	O
==	O
mu_tolower	O
(	O
*	O
type	*(char)
)	O
)	O
{	O
patlist	*(char)
++	O
;	O
type	*(char)
++	O
;	O
}	O
while	O
(	O
*	O
patlist	*(char)
&&	O
mu_isspace	O
(	O
*	O
patlist	*(char)
)	O
)	O
patlist	*(char)
++	O
;	O
if	O
(	O
*	O
patlist	*(char)
==	O
0	int
||	O
*	O
patlist	*(char)
==	O
delim	int
)	O
{	O
if	O
(	O
*	O
type	*(char)
==	O
0	int
)	O
return	O
MATCH	int
;	O
}	O
retry	O
:	O
do	O
{	O
if	O
(	O
*	O
patlist	*(char)
==	O
0	int
)	O
return	O
NO_MATCH	int
;	O
patlist	*(char)
++	O
;	O
}	O
while	O
(	O
*	O
patlist	*(char)
!=	O
delim	int
)	O
;	O
}	O
return	O
NO_MATCH	int
;	O
}	O
int	O
mu_mailcap_content_type_match	(*(char),int,*(struct(*(char),*(char),*(char),*(struct))))->(int)
(	O
char	O
const	O
*	O
patlist	*(char)
,	O
int	O
delim	int
,	O
mu_content_type_t	*(struct(*(char),*(char),*(char),*(struct)))
ct	*(struct(*(char),*(char),*(char),*(struct)))
)	O
{	O
char	O
const	O
*	O
type	*(char)
;	O
if	O
(	O
!	O
patlist	*(char)
)	O
return	O
NO_MATCH	int
;	O
while	O
(	O
*	O
patlist	*(char)
)	O
{	O
type	*(char)
=	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
type	*(char)
;	O
while	O
(	O
*	O
patlist	*(char)
&&	O
(	O
*	O
patlist	*(char)
==	O
delim	int
||	O
mu_isspace	O
(	O
*	O
patlist	*(char)
)	O
)	O
)	O
patlist	*(char)
++	O
;	O
do	O
{	O
if	O
(	O
!	O
*	O
patlist	*(char)
||	O
!	O
*	O
type	*(char)
||	O
mu_tolower	O
(	O
*	O
patlist	*(char)
++	O
)	O
!=	O
mu_tolower	O
(	O
*	O
type	*(char)
++	O
)	O
)	O
goto	O
retry	O
;	O
if	O
(	O
*	O
patlist	*(char)
==	O
delim	int
)	O
goto	O
retry	O
;	O
}	O
while	O
(	O
*	O
patlist	*(char)
!=	O
'/'	O
)	O
;	O
if	O
(	O
*	O
type	*(char)
!=	O
0	int
)	O
goto	O
retry	O
;	O
patlist	*(char)
++	O
;	O
if	O
(	O
*	O
patlist	*(char)
==	O
'*'	O
)	O
return	O
MATCH	int
;	O
type	*(char)
=	O
ct	*(struct(*(char),*(char),*(char),*(struct)))
->	O
subtype	*(char)
;	O
while	O
(	O
*	O
patlist	*(char)
&&	O
*	O
patlist	*(char)
!=	O
delim	int
&&	O
*	O
type	*(char)
&&	O
mu_tolower	O
(	O
*	O
patlist	*(char)
)	O
==	O
mu_tolower	O
(	O
*	O
type	*(char)
)	O
)	O
{	O
patlist	*(char)
++	O
;	O
type	*(char)
++	O
;	O
}	O
while	O
(	O
*	O
patlist	*(char)
&&	O
mu_isspace	O
(	O
*	O
patlist	*(char)
)	O
)	O
patlist	*(char)
++	O
;	O
if	O
(	O
*	O
patlist	*(char)
==	O
0	int
||	O
*	O
patlist	*(char)
==	O
delim	int
)	O
{	O
if	O
(	O
*	O
type	*(char)
==	O
0	int
)	O
return	O
MATCH	int
;	O
}	O
retry	O
:	O
do	O
{	O
if	O
(	O
*	O
patlist	*(char)
==	O
0	int
)	O
return	O
NO_MATCH	int
;	O
patlist	*(char)
++	O
;	O
}	O
while	O
(	O
*	O
patlist	*(char)
!=	O
delim	int
)	O
;	O
}	O
return	O
NO_MATCH	int
;	O
}	O
