char	O
*	O
dirname	(*(char))->(*(char))
(	O
char	O
*	O
path	*(char)
)	O
;	O
struct	O
summary	O
{	O
struct	O
token	struct(short,char,array(char))
*	O
*	O
sum_tokens	O
;	O
unsigned	O
char	O
const	O
*	O
sum_hits	O
;	O
struct	O
summary	O
*	O
sum_parent	O
;	O
union	O
{	O
struct	O
summary	O
*	O
u_kids	array(*(struct(*(*(struct(short,char,array(char)))),*(char),*(struct(*(*`),*(char),*(struct`))))))
[	O
8	int
]	O
;	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
*	O
u_files	array(*(struct(*(struct(union(*`,long),char,array(char))),*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))),long)))
[	O
8	int
]	O
;	O
}	O
sum_u	O
;	O
unsigned	O
long	O
sum_tokens_size	O
;	O
unsigned	O
long	O
sum_hits_count	O
;	O
int	O
sum_free_index	O
;	O
int	O
sum_level	O
;	O
}	O
;	O
void	O
usage	O
(	O
void	O
)	O
;	O
static	O
void	O
help_me	O
(	O
void	O
)	O
;	O
int	O
main	O
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
;	O
int	O
ceil_log_8	O
(	O
unsigned	O
long	O
n	long
)	O
;	O
int	O
ceil_log_2	O
(	O
unsigned	O
long	O
n	long
)	O
;	O
void	O
assert_writeable	O
(	O
char	O
const	O
*	O
file_name	*(char)
)	O
;	O
void	O
scan_files	O
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
void	O
scan_member_file	O
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
const	O
*	O
member	O
)	O
;	O
void	O
scan_member_file_1	O
(	O
get_token_func_t	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
get_token	O
,	O
void	O
const	O
*	O
args	*(void)
,	O
FILE	struct
*	O
source_FILE	O
)	O
;	O
void	O
report_statistics	O
(	O
void	O
)	O
;	O
void	O
write_id_file	O
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
unsigned	O
long	O
token_hash_1	O
(	O
void	O
const	O
*	O
key	*(void)
)	O
;	O
unsigned	O
long	O
token_hash_2	O
(	O
void	O
const	O
*	O
key	*(void)
)	O
;	O
int	O
token_hash_cmp	O
(	O
void	O
const	O
*	O
x	*(void)
,	O
void	O
const	O
*	O
y	*(void)
)	O
;	O
int	O
token_qsort_cmp	O
(	O
void	O
const	O
*	O
x	*(void)
,	O
void	O
const	O
*	O
y	*(void)
)	O
;	O
void	O
bump_current_hits_signature	O
(	O
void	O
)	O
;	O
void	O
init_hits_signature	O
(	O
int	O
i	O
)	O
;	O
void	O
free_summary_tokens	O
(	O
void	O
)	O
;	O
void	O
summarize	O
(	O
void	O
)	O
;	O
void	O
init_summary	O
(	O
void	O
)	O
;	O
struct	O
summary	O
*	O
make_sibling_summary	O
(	O
struct	O
summary	O
*	O
summary	O
)	O
;	O
int	O
count_vec_size	O
(	O
struct	O
summary	O
*	O
summary	O
,	O
unsigned	O
char	O
const	O
*	O
tail_hits	O
)	O
;	O
int	O
count_buf_size	O
(	O
struct	O
summary	O
*	O
summary	O
,	O
unsigned	O
char	O
const	O
*	O
tail_hits	O
)	O
;	O
void	O
assert_hits	O
(	O
struct	O
summary	O
*	O
summary	O
)	O
;	O
void	O
write_hits	O
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
struct	O
summary	O
*	O
summary	O
,	O
unsigned	O
char	O
const	O
*	O
tail_hits	O
)	O
;	O
void	O
sign_token	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
)	O
;	O
void	O
add_token_to_summary	O
(	O
struct	O
summary	O
*	O
summary	O
,	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
)	O
;	O
struct	O
hash_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
token_table	O
;	O
unsigned	O
long	O
input_chars	O
;	O
unsigned	O
long	O
name_tokens	O
;	O
unsigned	O
long	O
number_tokens	O
;	O
unsigned	O
long	O
string_tokens	O
;	O
unsigned	O
long	O
literal_tokens	O
;	O
unsigned	O
long	O
comment_tokens	O
;	O
unsigned	O
long	O
occurrences	O
;	O
unsigned	O
long	O
hits_length	O
=	O
0	int
;	O
unsigned	O
long	O
tokens_length	O
=	O
0	int
;	O
unsigned	O
long	O
output_length	O
=	O
0	int
;	O
int	O
verbose_flag	O
=	O
0	int
;	O
int	O
statistics_flag	O
=	O
0	int
;	O
int	O
file_name_count	O
=	O
0	int
;	O
int	O
levels	O
=	O
0	int
;	O
unsigned	O
char	O
*	O
current_hits_signature	O
;	O
struct	O
summary	O
*	O
summary_root	O
;	O
struct	O
summary	O
*	O
summary_leaf	O
;	O
char	O
const	O
*	O
program_name	O
;	O
char	O
*	O
lang_map_file_name	O
=	O
0	int
;	O
int	O
show_version	O
=	O
0	int
;	O
int	O
show_help	O
=	O
0	int
;	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
cw_dlink	O
;	O
void	O
usage	O
(	O
void	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Try `%s --help' for more information.\n"	*(char)
)	O
,	O
program_name	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
const	O
long_options	O
[	O
]	O
=	O
{	O
{	O
"file"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'f'	O
}	O
,	O
{	O
"output"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'o'	O
}	O
,	O
{	O
"include"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'i'	O
}	O
,	O
{	O
"exclude"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'x'	O
}	O
,	O
{	O
"lang-option"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'l'	O
}	O
,	O
{	O
"lang-map"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'm'	O
}	O
,	O
{	O
"default-lang"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'd'	O
}	O
,	O
{	O
"prune"	*(char)
,	O
required_argument	O
,	O
0	int
,	O
'p'	O
}	O
,	O
{	O
"verbose"	*(char)
,	O
no_argument	O
,	O
0	int
,	O
'v'	O
}	O
,	O
{	O
"statistics"	*(char)
,	O
no_argument	O
,	O
0	int
,	O
's'	O
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	O
,	O
&	O
show_help	O
,	O
1	int
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	O
,	O
&	O
show_version	O
,	O
1	int
}	O
,	O
{	O
0	int
}	O
}	O
;	O
static	O
void	O
help_me	O
(	O
void	O
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Usage: %s [OPTION]... [FILE]...\n"	*(char)
)	O
,	O
program_name	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Build an identifier database.\n  -o, --output=OUTFILE    file name of ID database output\n  -f, --file=OUTFILE      synonym for --output\n  -i, --include=LANGS     include languages in LANGS (default: \"C C++ asm\")\n  -x, --exclude=LANGS     exclude languages in LANGS\n  -l, --lang-option=L:OPT pass OPT as a default for language L (see below)\n  -m, --lang-map=MAPFILE  use MAPFILE to map file names onto source language\n  -d, --default-lang=LANG make LANG the default source language\n  -p, --prune=NAMES       exclude the named files and/or directories\n  -v, --verbose           report per file statistics\n  -s, --statistics        report statistics at end of run\n\n      --help              display this help and exit\n      --version           output version information and exit\n\nFILE may be a file name, or a directory name to recursively search.\nIf no FILE is given, the current directory is searched by default.\nNote that the `--include' and `--exclude' options are mutually-exclusive.\n\nThe following arguments apply to the language-specific scanners:\n"	*(char)
)	O
)	O
;	O
language_help_me	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"\nReport bugs to "	*(char)
PACKAGE_BUGREPORT	O
"\n\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
void	O
*	O
heap_initial	O
;	O
void	O
*	O
heap_after_walk	O
;	O
void	O
*	O
heap_after_scan	O
;	O
static	O
void	O
*	O
get_process_heap	O
(	O
void	O
)	O
{	O
return	O
sbrk	(long)->(*(void))
(	O
0	int
)	O
;	O
}	O
int	O
main	O
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
program_name	O
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
heap_initial	O
=	O
get_process_heap	O
(	O
)	O
;	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
=	O
DEFAULT_ID_FILE_NAME	O
;	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
""	*(char)
)	O
;	O
bindtextdomain	(*(char),*(char))->(*(char))
(	O
PACKAGE	O
,	O
LOCALEDIR	O
)	O
;	O
textdomain	(*(char))->(*(char))
(	O
PACKAGE	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
optc	O
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"o:f:i:x:l:m:d:p:vVs"	*(char)
,	O
long_options	O
,	O
(	O
int	O
*	O
)	O
0	int
)	O
;	O
if	O
(	O
optc	O
<	O
0	int
)	O
break	O
;	O
switch	O
(	O
optc	O
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
'o'	O
:	O
case	O
'f'	O
:	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'i'	O
:	O
include_languages	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'x'	O
:	O
exclude_languages	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'l'	O
:	O
language_save_arg	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'm'	O
:	O
lang_map_file_name	O
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'd'	O
:	O
set_default_language	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
if	O
(	O
cw_dlink	O
==	O
0	int
)	O
cw_dlink	O
=	O
init_walker	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(*(struct(union(*(struct`),long),char,array(char))))
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
prune_file_names	(*(char),*(struct(union(*(struct`),long),char,array(char))))->(void)
(	O
optarg	*(char)
,	O
cw_dlink	O
)	O
;	O
break	O
;	O
case	O
'V'	O
:	O
walker_verbose_flag	int
=	O
1	int
;	O
case	O
'v'	O
:	O
verbose_flag	O
=	O
1	int
;	O
case	O
's'	O
:	O
statistics_flag	O
=	O
1	int
;	O
break	O
;	O
default	O
:	O
usage	O
(	O
)	O
;	O
}	O
}	O
if	O
(	O
show_version	O
)	O
{	O
printf	(*(char))->(int)
(	O
"%s - %s\n"	*(char)
,	O
program_name	O
,	O
PACKAGE_VERSION	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
if	O
(	O
show_help	O
)	O
help_me	O
(	O
)	O
;	O
argc	int
-=	O
optind	int
;	O
argv	*(*(char))
+=	O
optind	int
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
{	O
static	O
char	O
dot	O
[	O
]	O
=	O
"."	*(char)
;	O
static	O
char	O
*	O
dotp	O
=	O
dot	O
;	O
argc	int
=	O
1	int
;	O
argv	*(*(char))
=	O
&	O
dotp	O
;	O
}	O
language_getopt	()->(void)
(	O
)	O
;	O
assert_writeable	O
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_file_name	*(char)
)	O
;	O
if	O
(	O
cw_dlink	O
==	O
0	int
)	O
cw_dlink	O
=	O
init_walker	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(*(struct(union(*(struct`),long),char,array(char))))
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
parse_language_map	(*(char))->(void)
(	O
lang_map_file_name	O
)	O
;	O
while	O
(	O
argc	int
--	O
)	O
{	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
parse_file_name	(*(char),*(struct(union(*(struct`),long),char,array(char))))->(*(struct(union(*(struct`),long),char,array(char))))
(	O
*	O
argv	*(*(char))
++	O
,	O
cw_dlink	O
)	O
;	O
if	O
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
)	O
walk_flink	(*(struct(union(*(struct`),long),char,array(char))),*(struct(*(*(void)),int,int)))->(void)
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
,	O
0	int
)	O
;	O
}	O
heap_after_walk	O
=	O
get_process_heap	O
(	O
)	O
;	O
mark_member_file_links	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
log_8_member_files	int
=	O
ceil_log_8	O
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
.	O
ht_fill	long
)	O
;	O
if	O
(	O
log_8_member_files	int
==	O
0	int
)	O
log_8_member_files	int
=	O
1	int
;	O
current_hits_signature	O
=	O
xmalloc	(long)->(*(void))
(	O
log_8_member_files	int
)	O
;	O
if	O
(	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
.	O
ht_fill	long
)	O
{	O
scan_files	O
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
heap_after_scan	O
=	O
get_process_heap	O
(	O
)	O
;	O
free_summary_tokens	O
(	O
)	O
;	O
free	(*(void))->(void)
(	O
token_table	O
.	O
ht_vec	*(*(void))
)	O
;	O
chdir_to_link	(*(struct(union(*(struct`),long),char,array(char))))->(int)
(	O
cw_dlink	O
)	O
;	O
write_id_file	O
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
if	O
(	O
statistics_flag	O
)	O
report_statistics	O
(	O
)	O
;	O
}	O
else	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
"nothing to do"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
int	O
ceil_log_8	O
(	O
unsigned	O
long	O
n	long
)	O
{	O
int	O
log_8	O
=	O
0	int
;	O
n	long
--	O
;	O
while	O
(	O
n	long
)	O
{	O
log_8	O
++	O
;	O
n	long
>>=	O
3	int
;	O
}	O
return	O
log_8	O
;	O
}	O
int	O
ceil_log_2	O
(	O
unsigned	O
long	O
n	long
)	O
{	O
int	O
log_2	O
=	O
0	int
;	O
n	long
--	O
;	O
while	O
(	O
n	long
)	O
{	O
log_2	O
++	O
;	O
n	long
>>=	O
1	int
;	O
}	O
return	O
log_2	O
;	O
}	O
void	O
assert_writeable	O
(	O
char	O
const	O
*	O
filename	O
)	O
{	O
if	O
(	O
access	(*(char),int)->(int)
(	O
filename	O
,	O
06	int
)	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	O
)	O
{	O
char	O
*	O
dirname	(*(char))->(*(char))
=	O
dir_name	(*(char))->(*(char))
(	O
filename	O
)	O
;	O
if	O
(	O
access	(*(char),int)->(int)
(	O
dirname	(*(char))->(*(char))
,	O
06	int
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
_	O
(	O
"can't create `%s' in `%s'"	*(char)
)	O
,	O
base_name	(*(char))->(*(char))
(	O
filename	O
)	O
,	O
dirname	(*(char))->(*(char))
)	O
;	O
free	(*(void))->(void)
(	O
dirname	(*(char))->(*(char))
)	O
;	O
}	O
else	O
error	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
_	O
(	O
"can't modify `%s'"	*(char)
)	O
,	O
filename	O
)	O
;	O
}	O
}	O
void	O
scan_files	O
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
*	O
*	O
members_0	O
=	O
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
*	O
*	O
)	O
hash_dump	(*(struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int)))),*(*(void)),*((*(void),*(void))->(int)))->(*(*(void)))
(	O
&	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
,	O
0	int
,	O
member_file_qsort_compare	(*(void),*(void))->(int)
)	O
;	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
*	O
*	O
end	O
=	O
&	O
members_0	O
[	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
.	O
ht_fill	long
]	O
;	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
*	O
*	O
members	O
=	O
members_0	O
;	O
int	O
n	long
=	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
.	O
ht_fill	long
;	O
n	long
=	O
n	long
*	O
ceil_log_2	O
(	O
n	long
)	O
*	O
16	int
;	O
if	O
(	O
n	long
==	O
0	int
)	O
n	long
=	O
1024	int
;	O
else	O
if	O
(	O
n	long
>	O
1024	int
*	O
1024	int
)	O
n	long
=	O
1024	int
*	O
1024	int
;	O
hash_init	(*(struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int)))),long,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))->(void)
(	O
&	O
token_table	O
,	O
n	long
,	O
token_hash_1	O
,	O
token_hash_2	O
,	O
token_hash_cmp	O
)	O
;	O
if	O
(	O
verbose_flag	O
)	O
{	O
char	O
offstr	O
[	O
INT_BUFSIZE_BOUND	O
(	O
off_t	long
)	O
]	O
;	O
printf	(*(char))->(int)
(	O
"files=%ld, largest=%s, slots=%lu\n"	*(char)
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
.	O
ht_fill	long
,	O
offtostr	(long,*(char))->(*(char))
(	O
largest_member_file	long
,	O
offstr	O
)	O
,	O
token_table	O
.	O
ht_size	long
)	O
;	O
}	O
init_hits_signature	O
(	O
0	int
)	O
;	O
init_summary	O
(	O
)	O
;	O
obstack_init	O
(	O
&	O
tokens_obstack	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
)	O
;	O
if	O
(	O
largest_member_file	long
>	O
MAX_LARGEST_MEMBER_FILE	O
)	O
largest_member_file	long
=	O
MAX_LARGEST_MEMBER_FILE	O
;	O
scanner_buffer	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
largest_member_file	long
+	O
1	int
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
*	O
member	O
=	O
*	O
members	O
++	O
;	O
scan_member_file	O
(	O
member	O
)	O
;	O
if	O
(	O
members	O
==	O
end	O
)	O
break	O
;	O
if	O
(	O
current_hits_signature	O
[	O
0	int
]	O
&	O
0x80	int
)	O
summarize	O
(	O
)	O
;	O
bump_current_hits_signature	O
(	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
scanner_buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
members_0	O
)	O
;	O
}	O
void	O
scan_member_file	O
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct),long)
const	O
*	O
member	O
)	O
{	O
struct	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
const	O
*	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
=	O
member	O
->	O
mf_lang_args	*(struct)
;	O
struct	O
language	struct(*(char),*((*(*(char)),int)->(*(void))),*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char))))),*(()->(void)),int,array(*(char)))
const	O
*	O
lang	O
=	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
->	O
la_language	*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char))))
;	O
get_token_func_t	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
get_token	O
=	O
lang	O
->	O
lg_get_token	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
member	O
->	O
mf_link	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	O
;	O
FILE	struct
*	O
source_FILE	O
;	O
chdir_to_link	(*(struct(union(*(struct`),long),char,array(char))))->(int)
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
->	O
fl_parent	O
)	O
;	O
source_FILE	O
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
->	O
fl_name	array(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
source_FILE	O
)	O
{	O
char	O
*	O
file_name	*(char)
=	O
alloca	O
(	O
PATH_MAX	O
)	O
;	O
if	O
(	O
statistics_flag	O
)	O
{	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
source_FILE	O
)	O
,	O
&	O
st	O
)	O
<	O
0	int
)	O
{	O
maybe_relative_file_name	(*(char),*(struct(union(*(struct`),long),char,array(char))),*(struct(union(*(struct`),long),char,array(char))))->(*(char))
(	O
file_name	*(char)
,	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
,	O
cw_dlink	O
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"can't stat `%s'"	*(char)
)	O
,	O
file_name	*(char)
)	O
;	O
}	O
else	O
input_chars	O
+=	O
st	O
.	O
st_size	long
;	O
}	O
if	O
(	O
verbose_flag	O
)	O
{	O
maybe_relative_file_name	(*(char),*(struct(union(*(struct`),long),char,array(char))),*(struct(union(*(struct`),long),char,array(char))))->(*(char))
(	O
file_name	*(char)
,	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
,	O
cw_dlink	O
)	O
;	O
printf	(*(char))->(int)
(	O
"%ld: %s: %s"	*(char)
,	O
member	O
->	O
mf_index	long
,	O
lang	O
->	O
lg_name	*(char)
,	O
file_name	*(char)
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
scan_member_file_1	O
(	O
get_token	O
,	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
->	O
la_args_digested	*(void)
,	O
source_FILE	O
)	O
;	O
if	O
(	O
verbose_flag	O
)	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
source_FILE	O
)	O
;	O
}	O
else	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"can't open `%s'"	*(char)
)	O
,	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
->	O
fl_name	array(char)
)	O
;	O
}	O
void	O
scan_member_file_1	O
(	O
get_token_func_t	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
get_token	O
,	O
void	O
const	O
*	O
args	*(void)
,	O
FILE	struct
*	O
source_FILE	O
)	O
{	O
struct	O
token	struct(short,char,array(char))
*	O
*	O
slot	*(void)
;	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
;	O
int	O
flags	*(int)
;	O
int	O
new_tokens	O
=	O
0	int
;	O
int	O
distinct_tokens	O
=	O
0	int
;	O
while	O
(	O
(	O
token	struct(short,char,array(char))
=	O
(	O
*	O
get_token	O
)	O
(	O
source_FILE	O
,	O
args	*(void)
,	O
&	O
flags	*(int)
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
*	O
TOKEN_NAME	O
(	O
token	struct(short,char,array(char))
)	O
==	O
'\0'	O
)	O
{	O
obstack_free	(*(struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int)),*(void))->(void)
(	O
&	O
tokens_obstack	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
,	O
token	struct(short,char,array(char))
)	O
;	O
continue	O
;	O
}	O
slot	*(void)
=	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
*	O
)	O
hash_find_slot	(*(struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int)))),*(void))->(*(*(void)))
(	O
&	O
token_table	O
,	O
token	struct(short,char,array(char))
)	O
;	O
if	O
(	O
HASH_VACANT	O
(	O
*	O
slot	*(void)
)	O
)	O
{	O
token	struct(short,char,array(char))
->	O
tok_flags	char
=	O
flags	*(int)
;	O
token	struct(short,char,array(char))
->	O
tok_count	short
=	O
1	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
TOKEN_HITS	O
(	O
token	struct(short,char,array(char))
)	O
,	O
0	int
,	O
log_8_member_files	int
)	O
;	O
sign_token	O
(	O
token	struct(short,char,array(char))
)	O
;	O
if	O
(	O
verbose_flag	O
)	O
{	O
distinct_tokens	O
++	O
;	O
new_tokens	O
++	O
;	O
}	O
hash_insert_at	(*(struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int)))),*(void),*(void))->(*(void))
(	O
&	O
token_table	O
,	O
token	struct(short,char,array(char))
,	O
slot	*(void)
)	O
;	O
}	O
else	O
{	O
obstack_free	(*(struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int)),*(void))->(void)
(	O
&	O
tokens_obstack	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
,	O
token	struct(short,char,array(char))
)	O
;	O
token	struct(short,char,array(char))
=	O
*	O
slot	*(void)
;	O
token	struct(short,char,array(char))
->	O
tok_flags	char
|=	O
flags	*(int)
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_count	short
<	O
USHRT_MAX	O
)	O
token	struct(short,char,array(char))
->	O
tok_count	short
++	O
;	O
if	O
(	O
!	O
(	O
TOKEN_HITS	O
(	O
token	struct(short,char,array(char))
)	O
[	O
0	int
]	O
&	O
current_hits_signature	O
[	O
0	int
]	O
)	O
)	O
{	O
sign_token	O
(	O
token	struct(short,char,array(char))
)	O
;	O
if	O
(	O
verbose_flag	O
)	O
distinct_tokens	O
++	O
;	O
}	O
}	O
}	O
if	O
(	O
verbose_flag	O
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"  new = %d/%d"	*(char)
)	O
,	O
new_tokens	O
,	O
distinct_tokens	O
)	O
;	O
if	O
(	O
distinct_tokens	O
!=	O
0	int
)	O
printf	(*(char))->(int)
(	O
" = %.0f%%"	*(char)
,	O
100.0	int
*	O
(	O
double	O
)	O
new_tokens	O
/	O
(	O
double	O
)	O
distinct_tokens	O
)	O
;	O
}	O
}	O
void	O
report_statistics	O
(	O
void	O
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Name=%ld, "	*(char)
)	O
,	O
name_tokens	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Number=%ld, "	*(char)
)	O
,	O
number_tokens	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"String=%ld, "	*(char)
)	O
,	O
string_tokens	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Literal=%ld, "	*(char)
)	O
,	O
literal_tokens	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Comment=%ld\n"	*(char)
)	O
,	O
comment_tokens	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Files=%ld, "	*(char)
)	O
,	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
.	O
idh_files	long
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Tokens=%ld, "	*(char)
)	O
,	O
occurrences	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Bytes=%ld Kb, "	*(char)
)	O
,	O
input_chars	O
/	O
1024	int
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Heap=%d+%d Kb, "	*(char)
)	O
,	O
(	O
heap_after_scan	O
-	O
heap_after_walk	O
)	O
/	O
1024	int
,	O
(	O
heap_after_walk	O
-	O
heap_initial	O
)	O
/	O
1024	int
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Output=%ld (%ld tok, %ld hit)\n"	*(char)
)	O
,	O
output_length	O
,	O
tokens_length	O
,	O
hits_length	O
)	O
;	O
hash_print_stats	(*(struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int)))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
&	O
token_table	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
", Freq=%ld/%ld=%.2f\n"	*(char)
)	O
,	O
occurrences	O
,	O
token_table	O
.	O
ht_fill	long
,	O
(	O
double	O
)	O
occurrences	O
/	O
(	O
double	O
)	O
token_table	O
.	O
ht_fill	long
)	O
;	O
}	O
void	O
write_id_file	O
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
struct	O
token	struct(short,char,array(char))
*	O
*	O
tokens	O
;	O
int	O
i	O
;	O
int	O
buf_size	O
;	O
int	O
vec_size	O
;	O
int	O
tok_size	O
;	O
int	O
max_buf_size	O
=	O
0	int
;	O
int	O
max_vec_size	O
=	O
0	int
;	O
if	O
(	O
verbose_flag	O
)	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Sorting tokens...\n"	*(char)
)	O
)	O
;	O
assert	O
(	O
summary_root	O
->	O
sum_hits_count	O
==	O
token_table	O
.	O
ht_fill	long
)	O
;	O
tokens	O
=	O
xrealloc	(*(void),long)->(*(void))
(	O
summary_root	O
->	O
sum_tokens	O
,	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
*	O
token_table	O
.	O
ht_fill	long
)	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
tokens	O
,	O
token_table	O
.	O
ht_fill	long
,	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
,	O
token_qsort_cmp	O
)	O
;	O
if	O
(	O
verbose_flag	O
)	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Writing `%s'...\n"	*(char)
)	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_file_name	*(char)
)	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_file_name	*(char)
,	O
"w+b"	*(char)
)	O
;	O
if	O
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
error	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
_	O
(	O
"can't create `%s'"	*(char)
)	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_file_name	*(char)
)	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_magic	array(char)
[	O
0	int
]	O
=	O
IDH_MAGIC_0	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_magic	array(char)
[	O
1	int
]	O
=	O
IDH_MAGIC_1	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_version	char
=	O
IDH_VERSION	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_flags	short
=	O
IDH_COUNTS	O
;	O
fseek	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,int)->(int)
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
sizeof_idhead	()->(int)
(	O
)	O
,	O
0	int
)	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_flinks_offset	long
=	O
ftell	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
serialize_file_links	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\0'	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\0'	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_tokens_offset	long
=	O
ftell	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
token_table	O
.	O
ht_fill	long
;	O
i	O
++	O
,	O
tokens	O
++	O
)	O
{	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
=	O
*	O
tokens	O
;	O
occurrences	O
+=	O
token	struct(short,char,array(char))
->	O
tok_count	short
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
&	O
TOK_NUMBER	O
)	O
number_tokens	O
++	O
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
&	O
TOK_NAME	O
)	O
name_tokens	O
++	O
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
&	O
TOK_STRING	O
)	O
string_tokens	O
++	O
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
&	O
TOK_LITERAL	O
)	O
literal_tokens	O
++	O
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
&	O
TOK_COMMENT	O
)	O
comment_tokens	O
++	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
TOKEN_NAME	O
(	O
token	struct(short,char,array(char))
)	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\0'	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_count	short
>	O
0xff	int
)	O
token	struct(short,char,array(char))
->	O
tok_flags	char
|=	O
TOK_SHORT_COUNT	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
token	struct(short,char,array(char))
->	O
tok_count	short
&	O
0xff	int
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
&	O
TOK_SHORT_COUNT	O
)	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
token	struct(short,char,array(char))
->	O
tok_count	short
>>	O
8	int
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
vec_size	O
=	O
count_vec_size	O
(	O
summary_root	O
,	O
TOKEN_HITS	O
(	O
token	struct(short,char,array(char))
)	O
+	O
levels	O
)	O
;	O
buf_size	O
=	O
count_buf_size	O
(	O
summary_root	O
,	O
TOKEN_HITS	O
(	O
token	struct(short,char,array(char))
)	O
+	O
levels	O
)	O
;	O
hits_length	O
+=	O
buf_size	O
;	O
tok_size	O
=	O
strlen	(*(char))->(long)
(	O
TOKEN_NAME	O
(	O
token	struct(short,char,array(char))
)	O
)	O
+	O
1	int
;	O
tokens_length	O
+=	O
tok_size	O
;	O
buf_size	O
+=	O
tok_size	O
+	O
sizeof	O
(	O
token	struct(short,char,array(char))
->	O
tok_flags	char
)	O
+	O
sizeof	O
(	O
token	struct(short,char,array(char))
->	O
tok_count	short
)	O
+	O
2	int
;	O
if	O
(	O
buf_size	O
>	O
max_buf_size	O
)	O
max_buf_size	O
=	O
buf_size	O
;	O
if	O
(	O
vec_size	O
>	O
max_vec_size	O
)	O
max_vec_size	O
=	O
vec_size	O
;	O
write_hits	O
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
summary_root	O
,	O
TOKEN_HITS	O
(	O
token	struct(short,char,array(char))
)	O
+	O
levels	O
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\0'	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\0'	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
assert_hits	O
(	O
summary_root	O
)	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_tokens	long
=	O
token_table	O
.	O
ht_fill	long
;	O
output_length	O
=	O
ftell	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_end_offset	long
=	O
output_length	O
-	O
2	int
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_buf_size	long
=	O
max_buf_size	O
;	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_vec_size	long
=	O
max_vec_size	O
;	O
write_idhead	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(int)
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
_	O
(	O
"error closing `%s'"	*(char)
)	O
,	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_file_name	*(char)
)	O
;	O
}	O
unsigned	O
long	O
token_hash_1	O
(	O
void	O
const	O
*	O
key	*(void)
)	O
{	O
return_STRING_HASH_1	O
(	O
TOKEN_NAME	O
(	O
(	O
struct	O
token	struct(short,char,array(char))
const	O
*	O
)	O
key	*(void)
)	O
)	O
;	O
}	O
unsigned	O
long	O
token_hash_2	O
(	O
void	O
const	O
*	O
key	*(void)
)	O
{	O
return_STRING_HASH_2	O
(	O
TOKEN_NAME	O
(	O
(	O
struct	O
token	struct(short,char,array(char))
const	O
*	O
)	O
key	*(void)
)	O
)	O
;	O
}	O
int	O
token_hash_cmp	O
(	O
void	O
const	O
*	O
x	*(void)
,	O
void	O
const	O
*	O
y	*(void)
)	O
{	O
return_STRING_COMPARE	O
(	O
TOKEN_NAME	O
(	O
(	O
struct	O
token	struct(short,char,array(char))
const	O
*	O
)	O
x	*(void)
)	O
,	O
TOKEN_NAME	O
(	O
(	O
struct	O
token	struct(short,char,array(char))
const	O
*	O
)	O
y	*(void)
)	O
)	O
;	O
}	O
int	O
token_qsort_cmp	O
(	O
void	O
const	O
*	O
x	*(void)
,	O
void	O
const	O
*	O
y	*(void)
)	O
{	O
return_STRING_COMPARE	O
(	O
TOKEN_NAME	O
(	O
*	O
(	O
struct	O
token	struct(short,char,array(char))
const	O
*	O
const	O
*	O
)	O
x	*(void)
)	O
,	O
TOKEN_NAME	O
(	O
*	O
(	O
struct	O
token	struct(short,char,array(char))
const	O
*	O
const	O
*	O
)	O
y	*(void)
)	O
)	O
;	O
}	O
void	O
bump_current_hits_signature	O
(	O
void	O
)	O
{	O
unsigned	O
char	O
*	O
hits	O
=	O
current_hits_signature	O
;	O
while	O
(	O
*	O
hits	O
&	O
0x80	int
)	O
*	O
hits	O
++	O
=	O
1	int
;	O
*	O
hits	O
<<=	O
1	int
;	O
}	O
void	O
init_hits_signature	O
(	O
int	O
i	O
)	O
{	O
unsigned	O
char	O
*	O
hits	O
=	O
current_hits_signature	O
;	O
unsigned	O
char	O
const	O
*	O
end	O
=	O
current_hits_signature	O
+	O
log_8_member_files	int
;	O
while	O
(	O
hits	O
<	O
end	O
)	O
{	O
*	O
hits	O
=	O
1	int
<<	O
(	O
i	O
&	O
7	int
)	O
;	O
i	O
>>=	O
3	int
;	O
hits	O
++	O
;	O
}	O
}	O
void	O
free_summary_tokens	O
(	O
void	O
)	O
{	O
struct	O
summary	O
*	O
summary	O
=	O
summary_leaf	O
;	O
while	O
(	O
summary	O
!=	O
summary_root	O
)	O
{	O
free	(*(void))->(void)
(	O
summary	O
->	O
sum_tokens	O
)	O
;	O
summary	O
=	O
summary	O
->	O
sum_parent	O
;	O
}	O
}	O
void	O
summarize	O
(	O
void	O
)	O
{	O
unsigned	O
char	O
const	O
*	O
hits_sig	O
=	O
current_hits_signature	O
;	O
struct	O
summary	O
*	O
summary	O
=	O
summary_leaf	O
;	O
do	O
{	O
unsigned	O
long	O
count	O
=	O
summary	O
->	O
sum_hits_count	O
;	O
unsigned	O
char	O
*	O
hits	O
=	O
xmalloc	(long)->(*(void))
(	O
count	O
+	O
1	int
)	O
;	O
unsigned	O
int	O
level	O
=	O
summary	O
->	O
sum_level	O
;	O
struct	O
token	struct(short,char,array(char))
*	O
*	O
tokens	O
=	O
summary	O
->	O
sum_tokens	O
;	O
unsigned	O
long	O
init_size	O
=	O
INIT_TOKENS_SIZE	O
(	O
summary	O
->	O
sum_level	O
)	O
;	O
if	O
(	O
verbose_flag	O
)	O
printf	(*(char))->(int)
(	O
_	O
(	O
"level %d: %ld/%ld = %.0f%%\n"	*(char)
)	O
,	O
summary	O
->	O
sum_level	O
,	O
count	O
,	O
init_size	O
,	O
100.0	int
*	O
(	O
double	O
)	O
count	O
/	O
(	O
double	O
)	O
init_size	O
)	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
tokens	O
,	O
count	O
,	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
,	O
token_qsort_cmp	O
)	O
;	O
summary	O
->	O
sum_hits	O
=	O
hits	O
;	O
while	O
(	O
count	O
--	O
)	O
{	O
unsigned	O
char	O
*	O
hit	O
=	O
TOKEN_HITS	O
(	O
*	O
tokens	O
++	O
)	O
+	O
level	O
;	O
*	O
hits	O
++	O
=	O
*	O
hit	O
;	O
*	O
hit	O
=	O
0	int
;	O
}	O
*	O
hits	O
++	O
=	O
0	int
;	O
if	O
(	O
summary	O
->	O
sum_parent	O
)	O
{	O
free	(*(void))->(void)
(	O
summary	O
->	O
sum_tokens	O
)	O
;	O
summary	O
->	O
sum_tokens	O
=	O
0	int
;	O
}	O
summary	O
=	O
summary	O
->	O
sum_parent	O
;	O
}	O
while	O
(	O
*	O
++	O
hits_sig	O
&	O
0x80	int
)	O
;	O
summary_leaf	O
=	O
make_sibling_summary	O
(	O
summary_leaf	O
)	O
;	O
}	O
void	O
init_summary	O
(	O
void	O
)	O
{	O
unsigned	O
long	O
size	long
=	O
INIT_TOKENS_SIZE	O
(	O
0	int
)	O
;	O
summary_root	O
=	O
summary_leaf	O
=	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
struct	O
summary	O
)	O
)	O
;	O
summary_root	O
->	O
sum_tokens_size	O
=	O
size	long
;	O
summary_root	O
->	O
sum_tokens	O
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
*	O
size	long
)	O
;	O
}	O
struct	O
summary	O
*	O
make_sibling_summary	O
(	O
struct	O
summary	O
*	O
summary	O
)	O
{	O
struct	O
summary	O
*	O
parent	O
=	O
summary	O
->	O
sum_parent	O
;	O
unsigned	O
long	O
size	long
;	O
if	O
(	O
parent	O
==	O
NULL	O
)	O
{	O
levels	O
++	O
;	O
summary_root	O
=	O
summary	O
->	O
sum_parent	O
=	O
parent	O
=	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
struct	O
summary	O
)	O
)	O
;	O
parent	O
->	O
sum_level	O
=	O
levels	O
;	O
parent	O
->	O
sum_kids	O
[	O
0	int
]	O
=	O
summary	O
;	O
parent	O
->	O
sum_hits_count	O
=	O
summary	O
->	O
sum_hits_count	O
;	O
parent	O
->	O
sum_free_index	O
=	O
1	int
;	O
size	long
=	O
INIT_TOKENS_SIZE	O
(	O
levels	O
)	O
;	O
if	O
(	O
summary	O
->	O
sum_tokens_size	O
>=	O
size	long
)	O
{	O
parent	O
->	O
sum_tokens_size	O
=	O
summary	O
->	O
sum_tokens_size	O
;	O
parent	O
->	O
sum_tokens	O
=	O
summary	O
->	O
sum_tokens	O
;	O
}	O
else	O
{	O
parent	O
->	O
sum_tokens_size	O
=	O
size	long
;	O
parent	O
->	O
sum_tokens	O
=	O
xrealloc	(*(void),long)->(*(void))
(	O
summary	O
->	O
sum_tokens	O
,	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
*	O
size	long
)	O
;	O
}	O
summary	O
->	O
sum_tokens	O
=	O
0	int
;	O
}	O
if	O
(	O
parent	O
->	O
sum_free_index	O
==	O
8	int
)	O
parent	O
=	O
make_sibling_summary	O
(	O
parent	O
)	O
;	O
summary	O
=	O
xcalloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
struct	O
summary	O
)	O
)	O
;	O
summary	O
->	O
sum_level	O
=	O
parent	O
->	O
sum_level	O
-	O
1	int
;	O
parent	O
->	O
sum_kids	O
[	O
parent	O
->	O
sum_free_index	O
++	O
]	O
=	O
summary	O
;	O
summary	O
->	O
sum_parent	O
=	O
parent	O
;	O
size	long
=	O
INIT_TOKENS_SIZE	O
(	O
summary	O
->	O
sum_level	O
)	O
;	O
summary	O
->	O
sum_tokens_size	O
=	O
size	long
;	O
summary	O
->	O
sum_tokens	O
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
*	O
size	long
)	O
;	O
return	O
summary	O
;	O
}	O
int	O
count_vec_size	O
(	O
struct	O
summary	O
*	O
summary	O
,	O
unsigned	O
char	O
const	O
*	O
tail_hits	O
)	O
{	O
struct	O
summary	O
*	O
*	O
kids	O
;	O
unsigned	O
int	O
hits	O
=	O
(	O
summary	O
->	O
sum_hits	O
?	O
*	O
summary	O
->	O
sum_hits	O
:	O
*	O
tail_hits	O
)	O
;	O
kids	O
=	O
summary	O
->	O
sum_kids	O
;	O
if	O
(	O
*	O
kids	O
==	O
NULL	O
)	O
{	O
static	O
char	O
bits_per_nybble	O
[	O
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
2	int
,	O
3	int
,	O
1	int
,	O
2	int
,	O
2	int
,	O
3	int
,	O
2	int
,	O
3	int
,	O
3	int
,	O
4	int
}	O
;	O
return	O
bits_per_nybble	O
[	O
hits	O
&	O
0xf	int
]	O
+	O
bits_per_nybble	O
[	O
hits	O
>>	O
4	int
]	O
;	O
}	O
else	O
{	O
int	O
bit	O
;	O
int	O
count	O
=	O
0	int
;	O
--	O
tail_hits	O
;	O
for	O
(	O
bit	O
=	O
1	int
;	O
bit	O
&	O
0xff	int
;	O
bit	O
<<=	O
1	int
,	O
++	O
kids	O
)	O
if	O
(	O
bit	O
&	O
hits	O
)	O
count	O
+=	O
count_vec_size	O
(	O
*	O
kids	O
,	O
tail_hits	O
)	O
;	O
return	O
count	O
;	O
}	O
}	O
int	O
count_buf_size	O
(	O
struct	O
summary	O
*	O
summary	O
,	O
unsigned	O
char	O
const	O
*	O
tail_hits	O
)	O
{	O
struct	O
summary	O
*	O
*	O
kids	O
;	O
unsigned	O
int	O
hits	O
=	O
(	O
summary	O
->	O
sum_hits	O
?	O
*	O
summary	O
->	O
sum_hits	O
:	O
*	O
tail_hits	O
)	O
;	O
kids	O
=	O
summary	O
->	O
sum_kids	O
;	O
if	O
(	O
*	O
kids	O
==	O
NULL	O
)	O
return	O
1	int
;	O
else	O
{	O
int	O
bit	O
;	O
int	O
count	O
=	O
1	int
;	O
--	O
tail_hits	O
;	O
for	O
(	O
bit	O
=	O
1	int
;	O
bit	O
&	O
0xff	int
;	O
bit	O
<<=	O
1	int
,	O
++	O
kids	O
)	O
if	O
(	O
bit	O
&	O
hits	O
)	O
count	O
+=	O
count_buf_size	O
(	O
*	O
kids	O
,	O
tail_hits	O
)	O
;	O
return	O
count	O
;	O
}	O
}	O
void	O
assert_hits	O
(	O
struct	O
summary	O
*	O
summary	O
)	O
{	O
struct	O
summary	O
*	O
*	O
kids	O
=	O
summary	O
->	O
sum_kids	O
;	O
struct	O
summary	O
*	O
*	O
end	O
=	O
&	O
kids	O
[	O
8	int
]	O
;	O
assert	O
(	O
summary	O
->	O
sum_hits	O
==	O
NULL	O
||	O
*	O
summary	O
->	O
sum_hits	O
==	O
0	int
)	O
;	O
if	O
(	O
end	O
[	O
-	O
1	int
]	O
==	O
0	int
)	O
while	O
(	O
*	O
--	O
end	O
==	O
0	int
)	O
;	O
while	O
(	O
kids	O
<	O
end	O
)	O
assert_hits	O
(	O
*	O
kids	O
++	O
)	O
;	O
}	O
void	O
write_hits	O
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
struct	O
summary	O
*	O
summary	O
,	O
unsigned	O
char	O
const	O
*	O
tail_hits	O
)	O
{	O
struct	O
summary	O
*	O
*	O
kids	O
;	O
unsigned	O
int	O
hits	O
=	O
(	O
summary	O
->	O
sum_hits	O
?	O
*	O
summary	O
->	O
sum_hits	O
++	O
:	O
*	O
tail_hits	O
)	O
;	O
assert	O
(	O
hits	O
)	O
;	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hits	O
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
kids	O
=	O
summary	O
->	O
sum_kids	O
;	O
if	O
(	O
*	O
kids	O
)	O
{	O
int	O
bit	O
;	O
--	O
tail_hits	O
;	O
for	O
(	O
bit	O
=	O
1	int
;	O
(	O
bit	O
&	O
0xff	int
)	O
&&	O
*	O
kids	O
;	O
bit	O
<<=	O
1	int
,	O
++	O
kids	O
)	O
if	O
(	O
bit	O
&	O
hits	O
)	O
write_hits	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
kids	O
,	O
tail_hits	O
)	O
;	O
}	O
}	O
void	O
sign_token	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
)	O
{	O
unsigned	O
char	O
*	O
tok_hits	O
=	O
TOKEN_HITS	O
(	O
token	struct(short,char,array(char))
)	O
;	O
unsigned	O
char	O
*	O
hits_sig	O
=	O
current_hits_signature	O
;	O
unsigned	O
char	O
*	O
end	O
=	O
current_hits_signature	O
+	O
log_8_member_files	int
;	O
struct	O
summary	O
*	O
summary	O
=	O
summary_leaf	O
;	O
while	O
(	O
summary	O
)	O
{	O
if	O
(	O
*	O
tok_hits	O
==	O
0	int
)	O
add_token_to_summary	O
(	O
summary	O
,	O
token	struct(short,char,array(char))
)	O
;	O
if	O
(	O
*	O
tok_hits	O
&	O
*	O
hits_sig	O
)	O
break	O
;	O
*	O
tok_hits	O
|=	O
*	O
hits_sig	O
;	O
summary	O
=	O
summary	O
->	O
sum_parent	O
;	O
tok_hits	O
++	O
;	O
hits_sig	O
++	O
;	O
}	O
while	O
(	O
hits_sig	O
<	O
end	O
)	O
{	O
if	O
(	O
*	O
tok_hits	O
&	O
*	O
hits_sig	O
)	O
break	O
;	O
*	O
tok_hits	O
|=	O
*	O
hits_sig	O
;	O
tok_hits	O
++	O
;	O
hits_sig	O
++	O
;	O
}	O
}	O
void	O
add_token_to_summary	O
(	O
struct	O
summary	O
*	O
summary	O
,	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
)	O
{	O
unsigned	O
long	O
size	long
=	O
summary	O
->	O
sum_tokens_size	O
;	O
if	O
(	O
summary	O
->	O
sum_hits_count	O
>=	O
size	long
)	O
{	O
size	long
*=	O
2	int
;	O
summary	O
->	O
sum_tokens	O
=	O
xrealloc	(*(void),long)->(*(void))
(	O
summary	O
->	O
sum_tokens	O
,	O
sizeof	O
(	O
struct	O
token	struct(short,char,array(char))
*	O
)	O
*	O
size	long
)	O
;	O
summary	O
->	O
sum_tokens_size	O
=	O
size	long
;	O
}	O
summary	O
->	O
sum_tokens	O
[	O
summary	O
->	O
sum_hits_count	O
++	O
]	O
=	O
token	struct(short,char,array(char))
;	O
}	O
