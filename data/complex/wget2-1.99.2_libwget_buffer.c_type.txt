int	O
wget_buffer_init	(*(struct(*(char),long,long,bool,bool,bool)),*(char),long)->(int)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
char	O
*	O
data	*(void)
,	O
size_t	long
size	*(long)
)	O
{	O
if	O
(	O
data	*(void)
&&	O
likely	O
(	O
size	*(long)
)	O
)	O
{	O
buf	*(char)
->	O
size	*(long)
=	O
size	*(long)
-	O
1	int
;	O
buf	*(char)
->	O
data	*(void)
=	O
data	*(void)
;	O
*	O
buf	*(char)
->	O
data	*(void)
=	O
0	int
;	O
buf	*(char)
->	O
release_data	bool
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
size	*(long)
)	O
size	*(long)
=	O
127	int
;	O
buf	*(char)
->	O
size	*(long)
=	O
size	*(long)
;	O
if	O
(	O
!	O
(	O
buf	*(char)
->	O
data	*(void)
=	O
wget_malloc	(long)->(*(void))
(	O
size	*(long)
+	O
1	int
)	O
)	O
)	O
{	O
buf	*(char)
->	O
error	bool
=	O
1	int
;	O
return	O
WGET_E_MEMORY	int
;	O
}	O
*	O
buf	*(char)
->	O
data	*(void)
=	O
0	int
;	O
buf	*(char)
->	O
release_data	bool
=	O
1	int
;	O
}	O
buf	*(char)
->	O
error	bool
=	O
0	int
;	O
buf	*(char)
->	O
release_buf	bool
=	O
0	int
;	O
buf	*(char)
->	O
length	long
=	O
0	int
;	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
wget_buffer_alloc	(long)->(*(struct(*(char),long,long,bool,bool,bool)))
(	O
size_t	long
size	*(long)
)	O
{	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
;	O
if	O
(	O
!	O
(	O
buf	*(char)
=	O
wget_malloc	(long)->(*(void))
(	O
sizeof	O
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
)	O
)	O
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
wget_buffer_init	(*(struct(*(char),long,long,bool,bool,bool)),*(char),long)->(int)
(	O
buf	*(char)
,	O
NULL	O
,	O
size	*(long)
)	O
<	O
0	int
)	O
{	O
xfree	O
(	O
buf	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
buf	*(char)
->	O
release_buf	bool
=	O
1	int
;	O
return	O
buf	*(char)
;	O
}	O
static	O
int	O
_buffer_realloc	(*(struct(*(char),long,long,bool,bool,bool)),long)->(int)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
size_t	long
size	*(long)
)	O
{	O
char	O
*	O
old_data	*(char)
=	O
buf	*(char)
->	O
data	*(void)
;	O
if	O
(	O
buf	*(char)
->	O
release_data	bool
)	O
buf	*(char)
->	O
data	*(void)
=	O
wget_realloc	(*(void),long)->(*(void))
(	O
buf	*(char)
->	O
data	*(void)
,	O
size	*(long)
+	O
1	int
)	O
;	O
else	O
buf	*(char)
->	O
data	*(void)
=	O
wget_malloc	(long)->(*(void))
(	O
size	*(long)
+	O
1	int
)	O
;	O
if	O
(	O
!	O
buf	*(char)
->	O
data	*(void)
)	O
{	O
buf	*(char)
->	O
data	*(void)
=	O
old_data	*(char)
;	O
buf	*(char)
->	O
error	bool
=	O
1	int
;	O
return	O
WGET_E_MEMORY	int
;	O
}	O
if	O
(	O
!	O
buf	*(char)
->	O
release_data	bool
)	O
{	O
if	O
(	O
likely	O
(	O
old_data	*(char)
)	O
&&	O
buf	*(char)
->	O
length	long
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(char)
->	O
data	*(void)
,	O
old_data	*(char)
,	O
buf	*(char)
->	O
length	long
+	O
1	int
)	O
;	O
else	O
*	O
buf	*(char)
->	O
data	*(void)
=	O
0	int
;	O
buf	*(char)
->	O
release_data	bool
=	O
1	int
;	O
}	O
buf	*(char)
->	O
size	*(long)
=	O
size	*(long)
;	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
int	O
wget_buffer_ensure_capacity	(*(struct(*(char),long,long,bool,bool,bool)),long)->(int)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
size_t	long
size	*(long)
)	O
{	O
if	O
(	O
likely	O
(	O
buf	*(char)
)	O
)	O
{	O
if	O
(	O
buf	*(char)
->	O
size	*(long)
<	O
size	*(long)
)	O
return	O
_buffer_realloc	(*(struct(*(char),long,long,bool,bool,bool)),long)->(int)
(	O
buf	*(char)
,	O
size	*(long)
)	O
;	O
}	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
void	O
wget_buffer_deinit	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
)	O
{	O
if	O
(	O
buf	*(char)
->	O
release_data	bool
)	O
{	O
xfree	O
(	O
buf	*(char)
->	O
data	*(void)
)	O
;	O
buf	*(char)
->	O
release_data	bool
=	O
0	int
;	O
}	O
if	O
(	O
buf	*(char)
->	O
release_buf	bool
)	O
wget_free	*((*(void))->(void))
(	O
buf	*(char)
)	O
;	O
}	O
void	O
wget_buffer_free	(*(*(struct(*(char),long,long,bool,bool,bool))))->(void)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
*	O
buf	*(char)
)	O
{	O
if	O
(	O
likely	O
(	O
buf	*(char)
&&	O
*	O
buf	*(char)
)	O
)	O
{	O
wget_buffer_deinit	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
*	O
buf	*(char)
)	O
;	O
*	O
buf	*(char)
=	O
NULL	O
;	O
}	O
}	O
void	O
wget_buffer_free_data	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
)	O
{	O
if	O
(	O
likely	O
(	O
buf	*(char)
)	O
)	O
{	O
if	O
(	O
buf	*(char)
->	O
release_data	bool
)	O
{	O
xfree	O
(	O
buf	*(char)
->	O
data	*(void)
)	O
;	O
buf	*(char)
->	O
release_data	bool
=	O
0	int
;	O
buf	*(char)
->	O
size	*(long)
=	O
0	int
;	O
}	O
}	O
}	O
void	O
wget_buffer_reset	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
)	O
{	O
if	O
(	O
likely	O
(	O
buf	*(char)
)	O
)	O
{	O
buf	*(char)
->	O
length	long
=	O
0	int
;	O
*	O
buf	*(char)
->	O
data	*(void)
=	O
0	int
;	O
}	O
}	O
size_t	long
wget_buffer_memcpy	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	*(char)
)	O
)	O
return	O
0	int
;	O
buf	*(char)
->	O
length	long
=	O
0	int
;	O
return	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
data	*(void)
,	O
length	long
)	O
;	O
}	O
size_t	long
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	*(char)
)	O
)	O
return	O
0	int
;	O
if	O
(	O
likely	O
(	O
length	long
)	O
)	O
{	O
if	O
(	O
buf	*(char)
->	O
size	*(long)
<	O
buf	*(char)
->	O
length	long
+	O
length	long
)	O
if	O
(	O
_buffer_realloc	(*(struct(*(char),long,long,bool,bool,bool)),long)->(int)
(	O
buf	*(char)
,	O
buf	*(char)
->	O
size	*(long)
*	O
2	int
+	O
length	long
)	O
!=	O
WGET_E_SUCCESS	int
)	O
return	O
buf	*(char)
->	O
length	long
;	O
if	O
(	O
likely	O
(	O
data	*(void)
)	O
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(char)
->	O
data	*(void)
+	O
buf	*(char)
->	O
length	long
,	O
data	*(void)
,	O
length	long
)	O
;	O
else	O
memset	(*(void),int,long)->(*(void))
(	O
buf	*(char)
->	O
data	*(void)
+	O
buf	*(char)
->	O
length	long
,	O
0	int
,	O
length	long
)	O
;	O
buf	*(char)
->	O
length	long
+=	O
length	long
;	O
}	O
buf	*(char)
->	O
data	*(void)
[	O
buf	*(char)
->	O
length	long
]	O
=	O
0	int
;	O
return	O
buf	*(char)
->	O
length	long
;	O
}	O
size_t	long
wget_buffer_strcpy	(*(struct(*(char),long,long,bool,bool,bool)),*(char))->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
if	O
(	O
likely	O
(	O
buf	*(char)
)	O
)	O
buf	*(char)
->	O
length	long
=	O
0	int
;	O
return	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
s	*(char)
,	O
likely	O
(	O
s	*(char)
)	O
?	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
:	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_strcat	(*(struct(*(char),long,long,bool,bool,bool)),*(char))->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
return	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
s	*(char)
,	O
likely	O
(	O
s	*(char)
)	O
?	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
:	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_bufcpy	(*(struct(*(char),long,long,bool,bool,bool)),*(struct(*(char),long,long,bool,bool,bool)))->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
src	*(char)
)	O
{	O
if	O
(	O
likely	O
(	O
src	*(char)
)	O
)	O
return	O
wget_buffer_memcpy	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
src	*(char)
->	O
data	*(void)
,	O
src	*(char)
->	O
length	long
)	O
;	O
else	O
return	O
wget_buffer_memcpy	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_bufcat	(*(struct(*(char),long,long,bool,bool,bool)),*(struct(*(char),long,long,bool,bool,bool)))->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
src	*(char)
)	O
{	O
if	O
(	O
likely	O
(	O
src	*(char)
)	O
)	O
return	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
src	*(char)
->	O
data	*(void)
,	O
src	*(char)
->	O
length	long
)	O
;	O
else	O
return	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
buf	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_memset	(*(struct(*(char),long,long,bool,bool,bool)),char,long)->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
char	O
c	char
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
likely	O
(	O
buf	*(char)
)	O
)	O
buf	*(char)
->	O
length	long
=	O
0	int
;	O
return	O
wget_buffer_memset_append	(*(struct(*(char),long,long,bool,bool,bool)),char,long)->(long)
(	O
buf	*(char)
,	O
c	char
,	O
length	long
)	O
;	O
}	O
size_t	long
wget_buffer_memset_append	(*(struct(*(char),long,long,bool,bool,bool)),char,long)->(long)
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
,	O
char	O
c	char
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	*(char)
)	O
)	O
return	O
0	int
;	O
if	O
(	O
likely	O
(	O
length	long
)	O
)	O
{	O
if	O
(	O
unlikely	O
(	O
buf	*(char)
->	O
size	*(long)
<	O
buf	*(char)
->	O
length	long
+	O
length	long
)	O
)	O
if	O
(	O
_buffer_realloc	(*(struct(*(char),long,long,bool,bool,bool)),long)->(int)
(	O
buf	*(char)
,	O
buf	*(char)
->	O
size	*(long)
*	O
2	int
+	O
length	long
)	O
!=	O
WGET_E_SUCCESS	int
)	O
return	O
buf	*(char)
->	O
length	long
;	O
memset	(*(void),int,long)->(*(void))
(	O
buf	*(char)
->	O
data	*(void)
+	O
buf	*(char)
->	O
length	long
,	O
c	char
,	O
length	long
)	O
;	O
buf	*(char)
->	O
length	long
+=	O
length	long
;	O
}	O
buf	*(char)
->	O
data	*(void)
[	O
buf	*(char)
->	O
length	long
]	O
=	O
0	int
;	O
return	O
buf	*(char)
->	O
length	long
;	O
}	O
char	O
*	O
wget_buffer_trim	(*(struct(*(char),long,long,bool,bool,bool)))->(*(char))
(	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
*	O
buf	*(char)
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	*(char)
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
buf	*(char)
->	O
length	long
)	O
{	O
char	O
*	O
start	int
=	O
buf	*(char)
->	O
data	*(void)
;	O
char	O
*	O
end	*(char)
=	O
start	int
+	O
buf	*(char)
->	O
length	long
-	O
1	int
;	O
if	O
(	O
isspace	(int)->(int)
(	O
*	O
end	*(char)
)	O
)	O
{	O
for	O
(	O
;	O
isspace	(int)->(int)
(	O
*	O
end	*(char)
)	O
&&	O
end	*(char)
>=	O
start	int
;	O
end	*(char)
--	O
)	O
;	O
end	*(char)
[	O
1	int
]	O
=	O
0	int
;	O
buf	*(char)
->	O
length	long
=	O
(	O
size_t	long
)	O
(	O
end	*(char)
-	O
start	int
+	O
1	int
)	O
;	O
}	O
if	O
(	O
isspace	(int)->(int)
(	O
*	O
start	int
)	O
)	O
{	O
for	O
(	O
;	O
isspace	(int)->(int)
(	O
*	O
start	int
)	O
&&	O
end	*(char)
>=	O
start	int
;	O
start	int
++	O
)	O
;	O
buf	*(char)
->	O
length	long
=	O
(	O
size_t	long
)	O
(	O
end	*(char)
-	O
start	int
+	O
1	int
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
buf	*(char)
->	O
data	*(void)
,	O
start	int
,	O
buf	*(char)
->	O
length	long
+	O
1	int
)	O
;	O
}	O
}	O
return	O
buf	*(char)
->	O
data	*(void)
;	O
}	O
