static	O
void	O
print_help	()->(void)
(	O
void	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"USAGE:\n"	*(char)
"  gnufdisk IMPLEMENTATION ARGUMENT...\n"	*(char)
"\n"	*(char)
"Report bugs to %s\n"	*(char)
"\n"	*(char)
,	O
PACKAGE_BUGREPORT	*(char)
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
_argc	int
,	O
char	O
*	O
*	O
_argv	*(*(char))
)	O
{	O
int	O
ret	int
;	O
GNUFDISK_TRY	O
(	O
NULL	O
,	O
NULL	O
)	O
{	O
struct	O
gnufdisk_userinterface	O
*	O
ui	*(struct)
;	O
struct	O
gnufdisk_string	O
*	O
implementation	*(struct)
;	O
if	O
(	O
(	O
ui	*(struct)
=	O
gnufdisk_userinterface_new	()->(*(struct))
(	O
)	O
)	O
==	O
NULL	O
)	O
GNUFDISK_THROW	O
(	O
0	int
,	O
NULL	O
,	O
errno	O
,	O
NULL	O
,	O
"cannot create userinterface"	*(char)
)	O
;	O
if	O
(	O
_argc	int
<	O
2	int
)	O
{	O
print_help	()->(void)
(	O
)	O
;	O
GNUFDISK_THROW	O
(	O
0	int
,	O
NULL	O
,	O
ECANCELED	int
,	O
NULL	O
,	O
"invalid command line"	*(char)
)	O
;	O
}	O
implementation	*(struct)
=	O
gnufdisk_string_new	(*(char))->(*(struct))
(	O
_argv	*(*(char))
[	O
1	int
]	O
)	O
;	O
ret	int
=	O
gnufdisk_userinterface_run	(*(struct),*(struct),int,*(*(char)))->(int)
(	O
ui	*(struct)
,	O
implementation	*(struct)
,	O
_argc	int
-	O
2	int
,	O
&	O
_argv	*(*(char))
[	O
2	int
]	O
)	O
;	O
gnufdisk_string_delete	(*(struct))->(int)
(	O
implementation	*(struct)
)	O
;	O
gnufdisk_userinterface_delete	(*(struct))->(int)
(	O
ui	*(struct)
)	O
;	O
}	O
GNUFDISK_CATCH_DEFAULT	O
{	O
ret	int
=	O
-	O
1	int
;	O
}	O
GNUFDISK_EXCEPTION_END	O
;	O
return	O
ret	int
!=	O
0	int
?	O
EXIT_FAILURE	int
:	O
EXIT_SUCCESS	int
;	O
}	O
