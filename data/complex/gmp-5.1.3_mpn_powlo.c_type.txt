static	O
inline	O
mp_limb_t	long
getbits	(*(long),long,int)->(long)
(	O
const	O
mp_limb_t	long
*	O
p	*(char)
,	O
mp_bitcnt_t	long
bi	long
,	O
int	O
nbits	int
)	O
{	O
int	O
nbits_in_r	int
;	O
mp_limb_t	long
r	long
;	O
mp_size_t	long
i	long
;	O
if	O
(	O
bi	long
<	O
nbits	int
)	O
{	O
return	O
p	*(char)
[	O
0	int
]	O
&	O
(	O
(	O
(	O
mp_limb_t	long
)	O
1	int
<<	O
bi	long
)	O
-	O
1	int
)	O
;	O
}	O
else	O
{	O
bi	long
-=	O
nbits	int
;	O
i	long
=	O
bi	long
/	O
GMP_NUMB_BITS	O
;	O
bi	long
%=	O
GMP_NUMB_BITS	O
;	O
r	long
=	O
p	*(char)
[	O
i	long
]	O
>>	O
bi	long
;	O
nbits_in_r	int
=	O
GMP_NUMB_BITS	O
-	O
bi	long
;	O
if	O
(	O
nbits_in_r	int
<	O
nbits	int
)	O
r	long
+=	O
p	*(char)
[	O
i	long
+	O
1	int
]	O
<<	O
nbits_in_r	int
;	O
return	O
r	long
&	O
(	O
(	O
(	O
mp_limb_t	long
)	O
1	int
<<	O
nbits	int
)	O
-	O
1	int
)	O
;	O
}	O
}	O
static	O
inline	O
int	O
win_size	(long)->(int)
(	O
mp_bitcnt_t	long
eb	long
)	O
{	O
int	O
k	int
;	O
static	O
mp_bitcnt_t	long
x	array(long)
[	O
]	O
=	O
{	O
1	int
,	O
7	int
,	O
25	int
,	O
81	int
,	O
241	int
,	O
673	int
,	O
1793	int
,	O
4609	int
,	O
11521	int
,	O
28161	int
,	O
~	O
(	O
mp_bitcnt_t	long
)	O
0	int
}	O
;	O
for	O
(	O
k	int
=	O
0	int
;	O
eb	long
>	O
x	array(long)
[	O
k	int
]	O
;	O
k	int
++	O
)	O
;	O
return	O
k	int
;	O
}	O
void	O
mpn_powlo	O
(	O
mp_ptr	*(long)
rp	*(long)
,	O
mp_srcptr	*(long)
bp	*(long)
,	O
mp_srcptr	*(long)
ep	*(long)
,	O
mp_size_t	long
en	long
,	O
mp_size_t	long
n	long
,	O
mp_ptr	*(long)
tp	*(long)
)	O
{	O
int	O
cnt	int
;	O
mp_bitcnt_t	long
ebi	long
;	O
int	O
windowsize	int
,	O
this_windowsize	int
;	O
mp_limb_t	long
expbits	long
;	O
mp_limb_t	long
*	O
pp	*(long)
,	O
*	O
this_pp	*(long)
,	O
*	O
last_pp	*(long)
;	O
mp_limb_t	long
*	O
b2p	*(long)
;	O
long	O
i	long
;	O
TMP_DECL	O
;	O
ASSERT	O
(	O
en	long
>	O
1	int
||	O
(	O
en	long
==	O
1	int
&&	O
ep	*(long)
[	O
0	int
]	O
>	O
1	int
)	O
)	O
;	O
TMP_MARK	O
;	O
MPN_SIZEINBASE_2EXP	O
(	O
ebi	long
,	O
ep	*(long)
,	O
en	long
,	O
1	int
)	O
;	O
windowsize	int
=	O
win_size	(long)->(int)
(	O
ebi	long
)	O
;	O
pp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
(	O
n	long
<<	O
(	O
windowsize	int
-	O
1	int
)	O
)	O
+	O
n	long
)	O
;	O
this_pp	*(long)
=	O
pp	*(long)
;	O
MPN_COPY	O
(	O
this_pp	*(long)
,	O
bp	*(long)
,	O
n	long
)	O
;	O
b2p	*(long)
=	O
tp	*(long)
+	O
2	int
*	O
n	long
;	O
mpn_sqr	O
(	O
tp	*(long)
,	O
bp	*(long)
,	O
n	long
)	O
;	O
MPN_COPY	O
(	O
b2p	*(long)
,	O
tp	*(long)
,	O
n	long
)	O
;	O
for	O
(	O
i	long
=	O
(	O
1	int
<<	O
(	O
windowsize	int
-	O
1	int
)	O
)	O
-	O
1	int
;	O
i	long
>	O
0	int
;	O
i	long
--	O
)	O
{	O
last_pp	*(long)
=	O
this_pp	*(long)
;	O
this_pp	*(long)
+=	O
n	long
;	O
mpn_mullo_n	O
(	O
this_pp	*(long)
,	O
last_pp	*(long)
,	O
b2p	*(long)
,	O
n	long
)	O
;	O
}	O
expbits	long
=	O
getbits	(*(long),long,int)->(long)
(	O
ep	*(long)
,	O
ebi	long
,	O
windowsize	int
)	O
;	O
if	O
(	O
ebi	long
<	O
windowsize	int
)	O
ebi	long
=	O
0	int
;	O
else	O
ebi	long
-=	O
windowsize	int
;	O
count_trailing_zeros	O
(	O
cnt	int
,	O
expbits	long
)	O
;	O
ebi	long
+=	O
cnt	int
;	O
expbits	long
>>=	O
cnt	int
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
pp	*(long)
+	O
n	long
*	O
(	O
expbits	long
>>	O
1	int
)	O
,	O
n	long
)	O
;	O
while	O
(	O
ebi	long
!=	O
0	int
)	O
{	O
while	O
(	O
getbit	O
(	O
ep	*(long)
,	O
ebi	long
)	O
==	O
0	int
)	O
{	O
mpn_sqr	O
(	O
tp	*(long)
,	O
rp	*(long)
,	O
n	long
)	O
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
tp	*(long)
,	O
n	long
)	O
;	O
ebi	long
--	O
;	O
if	O
(	O
ebi	long
==	O
0	int
)	O
goto	O
done	O
;	O
}	O
expbits	long
=	O
getbits	(*(long),long,int)->(long)
(	O
ep	*(long)
,	O
ebi	long
,	O
windowsize	int
)	O
;	O
this_windowsize	int
=	O
windowsize	int
;	O
if	O
(	O
ebi	long
<	O
windowsize	int
)	O
{	O
this_windowsize	int
-=	O
windowsize	int
-	O
ebi	long
;	O
ebi	long
=	O
0	int
;	O
}	O
else	O
ebi	long
-=	O
windowsize	int
;	O
count_trailing_zeros	O
(	O
cnt	int
,	O
expbits	long
)	O
;	O
this_windowsize	int
-=	O
cnt	int
;	O
ebi	long
+=	O
cnt	int
;	O
expbits	long
>>=	O
cnt	int
;	O
do	O
{	O
mpn_sqr	O
(	O
tp	*(long)
,	O
rp	*(long)
,	O
n	long
)	O
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
tp	*(long)
,	O
n	long
)	O
;	O
this_windowsize	int
--	O
;	O
}	O
while	O
(	O
this_windowsize	int
!=	O
0	int
)	O
;	O
mpn_mullo_n	O
(	O
tp	*(long)
,	O
rp	*(long)
,	O
pp	*(long)
+	O
n	long
*	O
(	O
expbits	long
>>	O
1	int
)	O
,	O
n	long
)	O
;	O
MPN_COPY	O
(	O
rp	*(long)
,	O
tp	*(long)
,	O
n	long
)	O
;	O
}	O
done	O
:	O
TMP_FREE	O
;	O
}	O
