void	O
mpf_set_q	O
(	O
mpf_t	array(struct(int,int,long,*(long)))
r	array(struct(int,int,long,*(long)))
,	O
mpq_srcptr	*(struct(struct(int,int,*(long)),struct(int,int,*(long))))
q	int
)	O
{	O
mp_srcptr	*(long)
np	*(long)
,	O
dp	*(long)
;	O
mp_size_t	long
prec	int
,	O
nsize	long
,	O
dsize	long
,	O
qsize	long
,	O
prospective_qsize	long
,	O
tsize	long
,	O
zeros	long
;	O
mp_size_t	long
sign_quotient	long
,	O
high_zero	long
;	O
mp_ptr	*(long)
qp	*(long)
,	O
tp	*(long)
,	O
remp	*(long)
;	O
mp_exp_t	long
exp	int
;	O
TMP_DECL	O
;	O
ASSERT	O
(	O
SIZ	O
(	O
&	O
q	int
->	O
_mp_den	struct(int,int,*(long))
)	O
>	O
0	int
)	O
;	O
nsize	long
=	O
SIZ	O
(	O
&	O
q	int
->	O
_mp_num	struct(int,int,*(long))
)	O
;	O
dsize	long
=	O
SIZ	O
(	O
&	O
q	int
->	O
_mp_den	struct(int,int,*(long))
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
nsize	long
==	O
0	int
)	O
)	O
{	O
SIZ	O
(	O
r	array(struct(int,int,long,*(long)))
)	O
=	O
0	int
;	O
EXP	O
(	O
r	array(struct(int,int,long,*(long)))
)	O
=	O
0	int
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
prec	int
=	O
PREC	O
(	O
r	array(struct(int,int,long,*(long)))
)	O
;	O
qp	*(long)
=	O
PTR	O
(	O
r	array(struct(int,int,long,*(long)))
)	O
;	O
sign_quotient	long
=	O
nsize	long
;	O
nsize	long
=	O
ABS	O
(	O
nsize	long
)	O
;	O
np	*(long)
=	O
PTR	O
(	O
&	O
q	int
->	O
_mp_num	struct(int,int,*(long))
)	O
;	O
dp	*(long)
=	O
PTR	O
(	O
&	O
q	int
->	O
_mp_den	struct(int,int,*(long))
)	O
;	O
prospective_qsize	long
=	O
nsize	long
-	O
dsize	long
+	O
1	int
;	O
exp	int
=	O
prospective_qsize	long
;	O
qsize	long
=	O
prec	int
+	O
1	int
;	O
zeros	long
=	O
qsize	long
-	O
prospective_qsize	long
;	O
tsize	long
=	O
nsize	long
+	O
zeros	long
;	O
if	O
(	O
WANT_TMP_DEBUG	int
)	O
{	O
remp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
dsize	long
)	O
;	O
tp	*(long)
=	O
NULL	O
;	O
if	O
(	O
zeros	long
>	O
0	int
)	O
tp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
tsize	long
)	O
;	O
}	O
else	O
{	O
mp_size_t	long
size	long
=	O
dsize	long
+	O
(	O
zeros	long
>	O
0	int
?	O
tsize	long
:	O
0	int
)	O
;	O
remp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
size	long
)	O
;	O
tp	*(long)
=	O
remp	*(long)
+	O
dsize	long
;	O
}	O
if	O
(	O
zeros	long
>	O
0	int
)	O
{	O
MPN_ZERO	O
(	O
tp	*(long)
,	O
zeros	long
)	O
;	O
MPN_COPY	O
(	O
tp	*(long)
+	O
zeros	long
,	O
np	*(long)
,	O
nsize	long
)	O
;	O
np	*(long)
=	O
tp	*(long)
;	O
nsize	long
=	O
tsize	long
;	O
}	O
else	O
{	O
nsize	long
+=	O
zeros	long
;	O
np	*(long)
-=	O
zeros	long
;	O
}	O
ASSERT	O
(	O
nsize	long
-	O
dsize	long
+	O
1	int
==	O
qsize	long
)	O
;	O
mpn_tdiv_qr	O
(	O
qp	*(long)
,	O
remp	*(long)
,	O
(	O
mp_size_t	long
)	O
0	int
,	O
np	*(long)
,	O
nsize	long
,	O
dp	*(long)
,	O
dsize	long
)	O
;	O
high_zero	long
=	O
(	O
qp	*(long)
[	O
qsize	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
qsize	long
-=	O
high_zero	long
;	O
exp	int
-=	O
high_zero	long
;	O
EXP	O
(	O
r	array(struct(int,int,long,*(long)))
)	O
=	O
exp	int
;	O
SIZ	O
(	O
r	array(struct(int,int,long,*(long)))
)	O
=	O
sign_quotient	long
>=	O
0	int
?	O
qsize	long
:	O
-	O
qsize	long
;	O
TMP_FREE	O
;	O
}	O
