struct	O
symdef	struct(*(char),*(char))
peer_co	struct(*(char),*(char))
=	O
{	O
.	O
meaningful	*(char)
=	O
"co"	*(char)
,	O
.	O
underlying	*(char)
=	O
NULL	O
}	O
;	O
char	O
const	O
*	O
find_peer_prog	(*(struct(*(char),*(char))))->(*(char))
(	O
struct	O
symdef	struct(*(char),*(char))
*	O
prog	*(struct(*(char),*(char)))
)	O
{	O
if	O
(	O
!	O
prog	*(struct(*(char),*(char)))
->	O
underlying	*(char)
)	O
{	O
size_t	long
len	char
;	O
if	O
(	O
!	O
BE	O
(	O
invdir	*(char)
)	O
)	O
{	O
char	O
const	O
*	O
name	*(char)
=	O
find_in_path	(*(char))->(*(char))
(	O
PROGRAM	O
(	O
invoke	*(char)
)	O
)	O
;	O
char	O
const	O
*	O
end	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
name	*(char)
,	O
SLASH	char
)	O
;	O
if	O
(	O
!	O
end	*(char)
)	O
PFATAL	O
(	O
"cannot determine directory (in PATH) of `%s'"	*(char)
,	O
name	*(char)
)	O
;	O
BE	O
(	O
invdir	*(char)
)	O
=	O
intern	(*(struct(*(char),*(struct),*(void),long)),*(char),long)->(*(char))
(	O
PLEXUS	O
,	O
name	*(char)
,	O
end	*(char)
+	O
1	int
-	O
name	*(char)
)	O
;	O
if	O
(	O
name	*(char)
!=	O
PROGRAM	O
(	O
invoke	*(char)
)	O
)	O
free	(*(void))->(void)
(	O
(	O
void	O
*	O
)	O
name	*(char)
)	O
;	O
}	O
accf	(*(struct(*(char),*(struct),*(void),long)),*(char))->(void)
(	O
PLEXUS	O
,	O
"%s%s"	*(char)
,	O
BE	O
(	O
invdir	*(char)
)	O
,	O
prog	*(struct(*(char),*(char)))
->	O
meaningful	*(char)
)	O
;	O
prog	*(struct(*(char),*(char)))
->	O
underlying	*(char)
=	O
finish_string	(*(struct(*(char),*(struct),*(void),long)),*(long))->(*(char))
(	O
PLEXUS	O
,	O
&	O
len	char
)	O
;	O
}	O
return	O
prog	*(struct(*(char),*(char)))
->	O
underlying	*(char)
;	O
}	O
