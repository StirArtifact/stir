char	O
*	O
strstr	(*(char),*(char))->(*(char))
(	O
const	O
char	O
*	O
haystack	*(char)
,	O
const	O
char	O
*	O
needle	*(char)
)	O
{	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
{	O
mbui_iterator_t	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
iter_needle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
;	O
mbui_init	O
(	O
iter_needle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
,	O
needle	*(char)
)	O
;	O
if	O
(	O
mbui_avail	O
(	O
iter_needle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
{	O
mbui_iterator_t	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
;	O
mbui_init	O
(	O
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
,	O
haystack	*(char)
)	O
;	O
for	O
(	O
;	O
;	O
mbui_advance	O
(	O
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
{	O
if	O
(	O
!	O
mbui_avail	O
(	O
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
mb_equal	O
(	O
mbui_cur	O
(	O
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
,	O
mbui_cur	O
(	O
iter_needle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
)	O
{	O
mbui_iterator_t	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
;	O
mbui_iterator_t	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
,	O
&	O
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
,	O
sizeof	O
(	O
mbui_iterator_t	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
;	O
mbui_advance	O
(	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
;	O
mbui_init	O
(	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
,	O
needle	*(char)
)	O
;	O
if	O
(	O
!	O
mbui_avail	O
(	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
mbui_advance	O
(	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
;	O
for	O
(	O
;	O
;	O
mbui_advance	O
(	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
,	O
mbui_advance	O
(	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
{	O
if	O
(	O
!	O
mbui_avail	O
(	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
return	O
(	O
char	O
*	O
)	O
mbui_cur_ptr	O
(	O
iter_haystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
;	O
if	O
(	O
!	O
mbui_avail	O
(	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
mb_equal	O
(	O
mbui_cur	O
(	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
,	O
mbui_cur	O
(	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
)	O
)	O
break	O
;	O
}	O
}	O
}	O
}	O
else	O
return	O
(	O
char	O
*	O
)	O
haystack	*(char)
;	O
}	O
else	O
{	O
if	O
(	O
*	O
needle	*(char)
!=	O
'\0'	O
)	O
{	O
char	O
b	char
=	O
*	O
needle	*(char)
++	O
;	O
for	O
(	O
;	O
;	O
haystack	*(char)
++	O
)	O
{	O
if	O
(	O
*	O
haystack	*(char)
==	O
'\0'	O
)	O
return	O
NULL	O
;	O
if	O
(	O
*	O
haystack	*(char)
==	O
b	char
)	O
{	O
const	O
char	O
*	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
=	O
haystack	*(char)
+	O
1	int
;	O
const	O
char	O
*	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
=	O
needle	*(char)
;	O
for	O
(	O
;	O
;	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
++	O
,	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
++	O
)	O
{	O
if	O
(	O
*	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
==	O
'\0'	O
)	O
return	O
(	O
char	O
*	O
)	O
haystack	*(char)
;	O
if	O
(	O
*	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
==	O
'\0'	O
)	O
return	O
NULL	O
;	O
if	O
(	O
*	O
rhaystack	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
!=	O
*	O
rneedle	struct(bool,struct(int,union(int,array(char))),bool,struct(*(char),long,bool,int,array(char)))
)	O
break	O
;	O
}	O
}	O
}	O
}	O
else	O
return	O
(	O
char	O
*	O
)	O
haystack	*(char)
;	O
}	O
}	O
