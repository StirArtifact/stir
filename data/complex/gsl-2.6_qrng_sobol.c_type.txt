static	O
size_t	long
sobol_state_size	(int)->(long)
(	O
unsigned	O
int	O
dimension	int
)	O
;	O
static	O
int	O
sobol_init	(*(void),int)->(int)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
int	O
dimension	int
)	O
;	O
static	O
int	O
sobol_get	(*(void),int,*(double))->(int)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
int	O
dimension	int
,	O
double	O
*	O
v	*(double)
)	O
;	O
static	O
const	O
gsl_qrng_type	struct(*(char),int,*((int)->(long)),*((*(void),int)->(int)),*((*(void),int,array(double))->(int)))
sobol_type	struct(*(char),int,*((int)->(long)),*((*(void),int)->(int)),*((*(void),int,array(double))->(int)))
=	O
{	O
"sobol"	*(char)
,	O
SOBOL_MAX_DIMENSION	int
,	O
sobol_state_size	(int)->(long)
,	O
sobol_init	(*(void),int)->(int)
,	O
sobol_get	(*(void),int,*(double))->(int)
}	O
;	O
const	O
gsl_qrng_type	struct(*(char),int,*((int)->(long)),*((*(void),int)->(int)),*((*(void),int,array(double))->(int)))
*	O
gsl_qrng_sobol	*(struct(*(char),int,*((int)->(long)),*((*(void),int)->(int)),*((*(void),int,array(double))->(int))))
=	O
&	O
sobol_type	struct(*(char),int,*((int)->(long)),*((*(void),int)->(int)),*((*(void),int,array(double))->(int)))
;	O
static	O
const	O
int	O
primitive_polynomials	array(int)
[	O
SOBOL_MAX_DIMENSION	int
]	O
=	O
{	O
1	int
,	O
3	int
,	O
7	int
,	O
11	int
,	O
13	int
,	O
19	int
,	O
25	int
,	O
37	int
,	O
59	int
,	O
47	int
,	O
61	int
,	O
55	int
,	O
41	int
,	O
67	int
,	O
97	int
,	O
91	int
,	O
109	int
,	O
103	int
,	O
115	int
,	O
131	int
,	O
193	int
,	O
137	int
,	O
145	int
,	O
143	int
,	O
241	int
,	O
157	int
,	O
185	int
,	O
167	int
,	O
229	int
,	O
171	int
,	O
213	int
,	O
191	int
,	O
253	int
,	O
203	int
,	O
211	int
,	O
239	int
,	O
247	int
,	O
285	int
,	O
369	int
,	O
299	int
}	O
;	O
static	O
const	O
int	O
degree_table	array(int)
[	O
SOBOL_MAX_DIMENSION	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
3	int
,	O
4	int
,	O
4	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
5	int
,	O
6	int
,	O
6	int
,	O
6	int
,	O
6	int
,	O
6	int
,	O
6	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
7	int
,	O
8	int
,	O
8	int
,	O
8	int
}	O
;	O
static	O
const	O
int	O
v_init	array(array(int))
[	O
8	int
]	O
[	O
SOBOL_MAX_DIMENSION	int
]	O
=	O
{	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
7	int
,	O
5	int
,	O
1	int
,	O
3	int
,	O
3	int
,	O
7	int
,	O
5	int
,	O
5	int
,	O
7	int
,	O
7	int
,	O
1	int
,	O
3	int
,	O
3	int
,	O
7	int
,	O
5	int
,	O
1	int
,	O
1	int
,	O
5	int
,	O
3	int
,	O
3	int
,	O
1	int
,	O
7	int
,	O
5	int
,	O
1	int
,	O
3	int
,	O
3	int
,	O
7	int
,	O
5	int
,	O
1	int
,	O
1	int
,	O
5	int
,	O
7	int
,	O
7	int
,	O
5	int
,	O
1	int
,	O
3	int
,	O
3	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
1	int
,	O
7	int
,	O
9	int
,	O
13	int
,	O
11	int
,	O
1	int
,	O
3	int
,	O
7	int
,	O
9	int
,	O
5	int
,	O
13	int
,	O
13	int
,	O
11	int
,	O
3	int
,	O
15	int
,	O
5	int
,	O
3	int
,	O
15	int
,	O
7	int
,	O
9	int
,	O
13	int
,	O
9	int
,	O
1	int
,	O
11	int
,	O
7	int
,	O
5	int
,	O
15	int
,	O
1	int
,	O
15	int
,	O
11	int
,	O
5	int
,	O
3	int
,	O
1	int
,	O
7	int
,	O
9	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
9	int
,	O
3	int
,	O
27	int
,	O
15	int
,	O
29	int
,	O
21	int
,	O
23	int
,	O
19	int
,	O
11	int
,	O
25	int
,	O
7	int
,	O
13	int
,	O
17	int
,	O
1	int
,	O
25	int
,	O
29	int
,	O
3	int
,	O
31	int
,	O
11	int
,	O
5	int
,	O
23	int
,	O
27	int
,	O
19	int
,	O
21	int
,	O
5	int
,	O
1	int
,	O
17	int
,	O
13	int
,	O
7	int
,	O
15	int
,	O
9	int
,	O
31	int
,	O
9	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
37	int
,	O
33	int
,	O
7	int
,	O
5	int
,	O
11	int
,	O
39	int
,	O
63	int
,	O
27	int
,	O
17	int
,	O
15	int
,	O
23	int
,	O
29	int
,	O
3	int
,	O
21	int
,	O
13	int
,	O
31	int
,	O
25	int
,	O
9	int
,	O
49	int
,	O
33	int
,	O
19	int
,	O
29	int
,	O
11	int
,	O
19	int
,	O
27	int
,	O
15	int
,	O
25	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
13	int
,	O
33	int
,	O
115	int
,	O
41	int
,	O
79	int
,	O
17	int
,	O
29	int
,	O
119	int
,	O
75	int
,	O
73	int
,	O
105	int
,	O
7	int
,	O
59	int
,	O
65	int
,	O
21	int
,	O
3	int
,	O
113	int
,	O
61	int
,	O
89	int
,	O
45	int
,	O
107	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
7	int
,	O
23	int
,	O
39	int
}	O
}	O
;	O
typedef	O
struct	O
{	O
unsigned	O
int	O
sequence_count	int
;	O
double	O
last_denominator_inv	double
;	O
int	O
last_numerator_vec	array(int)
[	O
SOBOL_MAX_DIMENSION	int
]	O
;	O
int	O
v_direction	array(array(int))
[	O
SOBOL_BIT_COUNT	int
]	O
[	O
SOBOL_MAX_DIMENSION	int
]	O
;	O
}	O
sobol_state_t	struct(int,double,array(int),array(array(int)))
;	O
static	O
size_t	long
sobol_state_size	(int)->(long)
(	O
unsigned	O
int	O
dimension	int
)	O
{	O
return	O
sizeof	O
(	O
sobol_state_t	struct(int,double,array(int),array(array(int)))
)	O
;	O
}	O
static	O
int	O
sobol_init	(*(void),int)->(int)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
int	O
dimension	int
)	O
{	O
sobol_state_t	struct(int,double,array(int),array(array(int)))
*	O
s_state	*(struct(int,double,array(int),array(array(int))))
=	O
(	O
sobol_state_t	struct(int,double,array(int),array(array(int)))
*	O
)	O
state	*(int)
;	O
unsigned	O
int	O
i_dim	int
;	O
int	O
j	int
,	O
k	int
;	O
int	O
ell	int
;	O
if	O
(	O
dimension	int
<	O
1	int
||	O
dimension	int
>	O
SOBOL_MAX_DIMENSION	int
)	O
{	O
return	O
GSL_EINVAL	int
;	O
}	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
SOBOL_BIT_COUNT	int
;	O
k	int
++	O
)	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
k	int
]	O
[	O
0	int
]	O
=	O
1	int
;	O
for	O
(	O
i_dim	int
=	O
1	int
;	O
i_dim	int
<	O
dimension	int
;	O
i_dim	int
++	O
)	O
{	O
const	O
int	O
poly_index	int
=	O
i_dim	int
;	O
const	O
int	O
degree_i	int
=	O
degree_table	array(int)
[	O
poly_index	int
]	O
;	O
int	O
includ	array(int)
[	O
8	int
]	O
;	O
int	O
p_i	int
=	O
primitive_polynomials	array(int)
[	O
poly_index	int
]	O
;	O
for	O
(	O
k	int
=	O
degree_i	int
-	O
1	int
;	O
k	int
>=	O
0	int
;	O
k	int
--	O
)	O
{	O
includ	array(int)
[	O
k	int
]	O
=	O
(	O
(	O
p_i	int
%	O
2	int
)	O
==	O
1	int
)	O
;	O
p_i	int
/=	O
2	int
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
degree_i	int
;	O
j	int
++	O
)	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
j	int
]	O
[	O
i_dim	int
]	O
=	O
v_init	array(array(int))
[	O
j	int
]	O
[	O
i_dim	int
]	O
;	O
for	O
(	O
j	int
=	O
degree_i	int
;	O
j	int
<	O
SOBOL_BIT_COUNT	int
;	O
j	int
++	O
)	O
{	O
int	O
newv	int
=	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
j	int
-	O
degree_i	int
]	O
[	O
i_dim	int
]	O
;	O
ell	int
=	O
1	int
;	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
degree_i	int
;	O
k	int
++	O
)	O
{	O
ell	int
*=	O
2	int
;	O
if	O
(	O
includ	array(int)
[	O
k	int
]	O
)	O
newv	int
^=	O
(	O
ell	int
*	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
j	int
-	O
k	int
-	O
1	int
]	O
[	O
i_dim	int
]	O
)	O
;	O
}	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
j	int
]	O
[	O
i_dim	int
]	O
=	O
newv	int
;	O
}	O
}	O
ell	int
=	O
1	int
;	O
for	O
(	O
j	int
=	O
SOBOL_BIT_COUNT	int
-	O
1	int
-	O
1	int
;	O
j	int
>=	O
0	int
;	O
j	int
--	O
)	O
{	O
ell	int
*=	O
2	int
;	O
for	O
(	O
i_dim	int
=	O
0	int
;	O
i_dim	int
<	O
dimension	int
;	O
i_dim	int
++	O
)	O
{	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
j	int
]	O
[	O
i_dim	int
]	O
*=	O
ell	int
;	O
}	O
}	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
last_denominator_inv	double
=	O
1.0	int
/	O
(	O
2.0	int
*	O
ell	int
)	O
;	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
sequence_count	int
=	O
0	int
;	O
for	O
(	O
i_dim	int
=	O
0	int
;	O
i_dim	int
<	O
dimension	int
;	O
i_dim	int
++	O
)	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
last_numerator_vec	array(int)
[	O
i_dim	int
]	O
=	O
0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
sobol_get	(*(void),int,*(double))->(int)
(	O
void	O
*	O
state	*(int)
,	O
unsigned	O
int	O
dimension	int
,	O
double	O
*	O
v	*(double)
)	O
{	O
sobol_state_t	struct(int,double,array(int),array(array(int)))
*	O
s_state	*(struct(int,double,array(int),array(array(int))))
=	O
(	O
sobol_state_t	struct(int,double,array(int),array(array(int)))
*	O
)	O
state	*(int)
;	O
unsigned	O
int	O
i_dimension	int
;	O
int	O
ell	int
=	O
0	int
;	O
int	O
c	int
=	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
sequence_count	int
;	O
while	O
(	O
1	int
)	O
{	O
++	O
ell	int
;	O
if	O
(	O
(	O
c	int
%	O
2	int
)	O
==	O
1	int
)	O
c	int
/=	O
2	int
;	O
else	O
break	O
;	O
}	O
if	O
(	O
ell	int
>	O
SOBOL_BIT_COUNT	int
)	O
return	O
GSL_EFAILED	int
;	O
for	O
(	O
i_dimension	int
=	O
0	int
;	O
i_dimension	int
<	O
dimension	int
;	O
i_dimension	int
++	O
)	O
{	O
const	O
int	O
direction_i	int
=	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
v_direction	array(array(int))
[	O
ell	int
-	O
1	int
]	O
[	O
i_dimension	int
]	O
;	O
const	O
int	O
old_numerator_i	int
=	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
last_numerator_vec	array(int)
[	O
i_dimension	int
]	O
;	O
const	O
int	O
new_numerator_i	int
=	O
old_numerator_i	int
^	O
direction_i	int
;	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
last_numerator_vec	array(int)
[	O
i_dimension	int
]	O
=	O
new_numerator_i	int
;	O
v	*(double)
[	O
i_dimension	int
]	O
=	O
new_numerator_i	int
*	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
last_denominator_inv	double
;	O
}	O
s_state	*(struct(int,double,array(int),array(array(int))))
->	O
sequence_count	int
++	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
