int	O
mu_readlink	(*(char),*(*(char)),*(long),*(long))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
psize	*(long)
,	O
size_t	long
*	O
plen	*(long)
)	O
{	O
size_t	long
status	long
=	O
0	int
;	O
char	O
*	O
buf	*(char)
=	O
*	O
pbuf	*(*(char))
;	O
size_t	long
size	long
=	O
*	O
psize	*(long)
;	O
ssize_t	long
linklen	long
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
!	O
buf	*(char)
)	O
{	O
size	long
=	O
INITIAL_READLINK_SIZE	int
;	O
buf	*(char)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
}	O
else	O
{	O
char	O
*	O
p	*(char)
;	O
size_t	long
newsize	long
=	O
size	long
<<	O
1	int
;	O
if	O
(	O
newsize	long
<	O
size	long
)	O
{	O
status	long
=	O
ENAMETOOLONG	int
;	O
break	O
;	O
}	O
size	long
=	O
newsize	long
;	O
p	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
buf	*(char)
,	O
size	long
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
free	(*(void))->(void)
(	O
buf	*(char)
)	O
;	O
buf	*(char)
=	O
p	*(char)
;	O
}	O
if	O
(	O
!	O
buf	*(char)
)	O
{	O
status	long
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
linklen	long
=	O
readlink	(*(char),*(char),long)->(long)
(	O
name	*(char)
,	O
buf	*(char)
,	O
size	long
)	O
;	O
if	O
(	O
linklen	long
<	O
0	int
&&	O
errno	O
!=	O
ERANGE	int
)	O
{	O
status	long
=	O
errno	O
;	O
break	O
;	O
}	O
if	O
(	O
(	O
size_t	long
)	O
linklen	long
<	O
size	long
)	O
{	O
buf	*(char)
[	O
linklen	long
++	O
]	O
=	O
'\0'	O
;	O
status	long
=	O
0	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
status	long
)	O
{	O
if	O
(	O
buf	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
buf	*(char)
)	O
;	O
buf	*(char)
=	O
NULL	O
;	O
}	O
size	long
=	O
0	int
;	O
}	O
*	O
pbuf	*(*(char))
=	O
buf	*(char)
;	O
*	O
psize	*(long)
=	O
size	long
;	O
if	O
(	O
plen	*(long)
)	O
*	O
plen	*(long)
=	O
linklen	long
;	O
return	O
status	long
;	O
}	O
int	O
mu_unroll_symlink	(*(char),*(*(char)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
char	O
*	O
*	O
pout	*(*(char))
)	O
{	O
size_t	long
symloops	long
=	O
0	int
;	O
struct	O
slbuf	struct(*(char),long)
{	O
char	O
*	O
base	*(char)
;	O
size_t	long
size	long
;	O
}	O
buf	*(char)
[	O
2	int
]	O
;	O
int	O
idx	int
=	O
0	int
;	O
int	O
status	long
;	O
buf	*(char)
[	O
0	int
]	O
.	O
base	*(char)
=	O
buf	*(char)
[	O
1	int
]	O
.	O
base	*(char)
=	O
NULL	O
;	O
buf	*(char)
[	O
0	int
]	O
.	O
size	long
=	O
buf	*(char)
[	O
1	int
]	O
.	O
size	long
=	O
0	int
;	O
while	O
(	O
symloops	long
++	O
<	O
_POSIX_SYMLOOP_MAX	int
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
size_t	long
len	int
;	O
if	O
(	O
lstat	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
name	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
-	O
1	int
)	O
return	O
errno	O
;	O
if	O
(	O
!	O
S_ISLNK	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
!	O
buf	*(char)
[	O
idx	int
]	O
.	O
base	*(char)
)	O
{	O
buf	*(char)
[	O
idx	int
]	O
.	O
base	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
buf	*(char)
[	O
idx	int
]	O
.	O
base	*(char)
)	O
return	O
ENOMEM	int
;	O
}	O
status	long
=	O
0	int
;	O
break	O
;	O
}	O
idx	int
=	O
!	O
idx	int
;	O
status	long
=	O
mu_readlink	(*(char),*(*(char)),*(long),*(long))->(int)
(	O
name	*(char)
,	O
&	O
buf	*(char)
[	O
idx	int
]	O
.	O
base	*(char)
,	O
&	O
buf	*(char)
[	O
idx	int
]	O
.	O
size	long
,	O
&	O
len	int
)	O
;	O
if	O
(	O
status	long
)	O
break	O
;	O
name	*(char)
=	O
mu_normalize_path	(*(char))->(*(char))
(	O
buf	*(char)
[	O
idx	int
]	O
.	O
base	*(char)
)	O
;	O
}	O
if	O
(	O
status	long
)	O
{	O
free	(*(void))->(void)
(	O
buf	*(char)
[	O
0	int
]	O
.	O
base	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
buf	*(char)
[	O
1	int
]	O
.	O
base	*(char)
)	O
;	O
}	O
else	O
{	O
*	O
pout	*(*(char))
=	O
buf	*(char)
[	O
idx	int
]	O
.	O
base	*(char)
;	O
free	(*(void))->(void)
(	O
buf	*(char)
[	O
!	O
idx	int
]	O
.	O
base	*(char)
)	O
;	O
}	O
return	O
status	long
;	O
}	O
