static	O
void	O
usage	()->(void)
(	O
void	O
)	O
;	O
static	O
void	O
calc_aspect	(int,int,int,*(int))->(void)
(	O
int	O
x_in	int
,	O
int	O
y_in	int
,	O
int	O
dx_in	int
,	O
int	O
*	O
dy_in	*(int)
)	O
;	O
static	O
void	O
cleanup	(*(char))->(void)
(	O
char	O
*	O
string	*(char)
)	O
;	O
static	O
int	O
parse_hex_pair	(*(char))->(int)
(	O
char	O
*	O
pair_start	*(char)
)	O
;	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
gdImagePtr	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
,	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
;	O
int	O
width	int
=	O
100	int
,	O
height	int
=	O
100	int
;	O
int	O
constrain_width	int
=	O
0	int
;	O
int	O
constrain_height	int
=	O
0	int
;	O
int	O
do_trans	int
=	O
0	int
;	O
int	O
calc_aspect_only	int
=	O
0	int
;	O
char	O
*	O
file	*(char)
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
char	O
*	O
webargs	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"QUERY_STRING"	*(char)
)	O
;	O
if	O
(	O
webargs	*(char)
)	O
{	O
register	O
int	O
i	int
;	O
char	O
*	O
temp	*(char)
;	O
webargs	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
webargs	*(char)
)	O
;	O
cleanup	(*(char))->(void)
(	O
webargs	*(char)
)	O
;	O
temp	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
webargs	*(char)
,	O
"WIDTH="	*(char)
)	O
;	O
if	O
(	O
width	int
)	O
{	O
constrain_width	int
=	O
1	int
;	O
width	int
=	O
atoi	(*(char))->(int)
(	O
temp	*(char)
+	O
6	int
)	O
;	O
}	O
temp	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
webargs	*(char)
,	O
"HEIGHT="	*(char)
)	O
;	O
if	O
(	O
temp	*(char)
)	O
{	O
constrain_height	int
=	O
1	int
;	O
height	int
=	O
atoi	(*(char))->(int)
(	O
temp	*(char)
+	O
7	int
)	O
;	O
}	O
file	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
webargs	*(char)
,	O
"FILE="	*(char)
)	O
;	O
if	O
(	O
!	O
file	*(char)
)	O
usage	()->(void)
(	O
)	O
;	O
file	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
file	*(char)
+	O
5	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
(	O
(	O
file	*(char)
[	O
i	int
]	O
!=	O
'\0'	O
)	O
&&	O
(	O
file	*(char)
[	O
i	int
]	O
!=	O
'&'	O
)	O
)	O
;	O
i	int
++	O
)	O
;	O
file	*(char)
[	O
i	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
{	O
int	O
arg_index	int
=	O
1	int
;	O
while	O
(	O
arg_index	int
<	O
argc	int
)	O
{	O
char	O
*	O
arg	*(char)
=	O
argv	array(*(char))
[	O
arg_index	int
++	O
]	O
;	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-w"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--width"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
constrain_width	int
=	O
1	int
;	O
width	int
=	O
atoi	(*(char))->(int)
(	O
argv	array(*(char))
[	O
arg_index	int
++	O
]	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-h"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--height"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
constrain_height	int
=	O
1	int
;	O
height	int
=	O
atoi	(*(char))->(int)
(	O
argv	array(*(char))
[	O
arg_index	int
++	O
]	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-t"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--transparent"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
do_trans	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"-a"	*(char)
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
arg	*(char)
,	O
"--aspect-only"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
calc_aspect_only	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
arg	*(char)
[	O
0	int
]	O
!=	O
'-'	O
)	O
{	O
if	O
(	O
file	*(char)
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
usage	()->(void)
(	O
)	O
;	O
else	O
file	*(char)
=	O
arg	*(char)
;	O
}	O
else	O
usage	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
file	*(char)
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
usage	()->(void)
(	O
)	O
;	O
{	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
file	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
!	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
perror	(*(char))->(void)
(	O
file	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
=	O
gdImageCreateFromGif	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)))
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Couldn't create GIF from %s!\n"	*(char)
,	O
file	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
}	O
if	O
(	O
!	O
constrain_width	int
&&	O
!	O
constrain_height	int
)	O
constrain_width	int
=	O
1	int
;	O
if	O
(	O
constrain_width	int
&&	O
!	O
constrain_height	int
)	O
{	O
calc_aspect	(int,int,int,*(int))->(void)
(	O
gdImageSX	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
,	O
gdImageSY	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
,	O
width	int
,	O
&	O
height	int
)	O
;	O
}	O
if	O
(	O
constrain_height	int
&&	O
!	O
constrain_width	int
)	O
{	O
calc_aspect	(int,int,int,*(int))->(void)
(	O
gdImageSY	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
,	O
gdImageSX	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
,	O
height	int
,	O
&	O
width	int
)	O
;	O
}	O
if	O
(	O
calc_aspect_only	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"width=%d height=%d\n"	*(char)
,	O
width	int
,	O
height	int
)	O
;	O
}	O
else	O
{	O
int	O
trans	int
=	O
gdImageGetTransparent	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
;	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
=	O
gdImageCreate	(int,int)->(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)))
(	O
width	int
,	O
height	int
)	O
;	O
gdImageFilledRectangle	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)),int,int,int,int,int)->(void)
(	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
,	O
0	int
,	O
0	int
,	O
width	int
,	O
height	int
,	O
trans	int
)	O
;	O
gdImageCopyResized	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)),*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)),int,int,int,int,int,int,int,int)->(void)
(	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
,	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
width	int
,	O
height	int
,	O
gdImageSX	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
,	O
gdImageSY	O
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
)	O
;	O
if	O
(	O
webargs	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Content-Type: image/gif\n\n"	*(char)
)	O
;	O
gdImageGif	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
do_trans	int
)	O
gdImageColorTransparent	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)),int)->(void)
(	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
,	O
trans	int
)	O
;	O
gdImageDestroy	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)))->(void)
(	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
;	O
}	O
gdImageDestroy	(*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),*(struct(*`,int,int,int,array(int),array(int),array(int),array(int),int,*`,int,*`,*`,array(int),array(int),int,int,*`,int)),array(int),array(int),int,int,*(int),int)))->(void)
(	O
source	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
void	O
usage	()->(void)
(	O
void	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: thumbnail [--width W] [--height H] file\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
void	O
calc_aspect	(int,int,int,*(int))->(void)
(	O
int	O
x_in	int
,	O
int	O
y_in	int
,	O
int	O
dx_in	int
,	O
int	O
*	O
dy_in	*(int)
)	O
{	O
double	O
x	int
,	O
y	int
,	O
dx	double
,	O
dy	double
;	O
double	O
ratio	double
;	O
x	int
=	O
(	O
double	O
)	O
x_in	int
;	O
y	int
=	O
(	O
double	O
)	O
y_in	int
;	O
dx	double
=	O
(	O
double	O
)	O
dx_in	int
;	O
if	O
(	O
y	int
==	O
0	int
)	O
return	O
;	O
ratio	double
=	O
x	int
/	O
y	int
;	O
if	O
(	O
ratio	double
==	O
0.0	int
)	O
return	O
;	O
dy	double
=	O
dx	double
/	O
ratio	double
;	O
*	O
dy_in	*(int)
=	O
(	O
int	O
)	O
dy	double
;	O
}	O
static	O
void	O
cleanup	(*(char))->(void)
(	O
char	O
*	O
string	*(char)
)	O
{	O
register	O
int	O
i	int
,	O
j	int
,	O
len	int
;	O
char	O
*	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
string	*(char)
)	O
;	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
=	O
(	O
char	O
*	O
)	O
alloca	(long)->(*(void))
(	O
1	int
+	O
len	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
,	O
j	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
{	O
switch	O
(	O
string	*(char)
[	O
i	int
]	O
)	O
{	O
case	O
'%'	O
:	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
[	O
j	int
++	O
]	O
=	O
parse_hex_pair	(*(char))->(int)
(	O
string	*(char)
+	O
i	int
+	O
1	int
)	O
;	O
i	int
+=	O
2	int
;	O
break	O
;	O
case	O
'+'	O
:	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
[	O
j	int
++	O
]	O
=	O
' '	O
;	O
break	O
;	O
default	O
:	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
[	O
j	int
++	O
]	O
=	O
string	*(char)
[	O
i	int
]	O
;	O
}	O
}	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
[	O
j	int
]	O
=	O
'\0'	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
string	*(char)
,	O
dest	*(struct(*(*(char)),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),*(struct(*(*`),int,int,int,array(int),array(int),array(int),array(int),int,*(int),int,*(struct`),*(struct`),array(int),array(int),int,int,*(int),int)),array(int),array(int),int,int,*(int),int))
)	O
;	O
}	O
static	O
int	O
parse_hex_pair	(*(char))->(int)
(	O
char	O
*	O
pair_start	*(char)
)	O
{	O
int	O
value	int
=	O
0	int
;	O
int	O
char1	int
,	O
char2	int
;	O
char1	int
=	O
char2	int
=	O
0	int
;	O
char1	int
=	O
*	O
pair_start	*(char)
;	O
if	O
(	O
char1	int
)	O
char2	int
=	O
(	O
pair_start	*(char)
[	O
1	int
]	O
)	O
;	O
if	O
(	O
isupper	(int)->(int)
(	O
char1	int
)	O
)	O
char1	int
=	O
tolower	(int)->(int)
(	O
char1	int
)	O
;	O
if	O
(	O
isupper	(int)->(int)
(	O
char2	int
)	O
)	O
char2	int
=	O
tolower	(int)->(int)
(	O
char2	int
)	O
;	O
if	O
(	O
isdigit	(int)->(int)
(	O
char1	int
)	O
)	O
value	int
=	O
char1	int
-	O
'0'	O
;	O
else	O
if	O
(	O
(	O
char1	int
<=	O
'f'	O
)	O
&&	O
(	O
char1	int
>=	O
'a'	O
)	O
)	O
value	int
=	O
10	int
+	O
(	O
char1	int
-	O
'a'	O
)	O
;	O
if	O
(	O
isdigit	(int)->(int)
(	O
char2	int
)	O
)	O
value	int
=	O
(	O
value	int
*	O
16	int
)	O
+	O
(	O
char2	int
-	O
'0'	O
)	O
;	O
else	O
if	O
(	O
(	O
char2	int
<=	O
'f'	O
)	O
&&	O
(	O
char2	int
>=	O
'a'	O
)	O
)	O
value	int
=	O
(	O
value	int
*	O
16	int
)	O
+	O
(	O
10	int
+	O
(	O
char2	int
-	O
'a'	O
)	O
)	O
;	O
return	O
(	O
value	int
)	O
;	O
}	O
