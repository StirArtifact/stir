int	O
silent	int
;	O
char	O
*	O
rcurdir	*(char)
;	O
char	O
*	O
curdir	*(char)
;	O
static	O
void	O
vmsg	(*(char),int,array(struct(int,int,*(void),*(void))))->(void)
(	O
const	O
char	O
*	O
,	O
int	O
,	O
va_list	array(struct(int,int,*(void),*(void)))
)	O
;	O
void	O
quit	(int,int,*(char))->(void)
(	O
int	O
code	int
,	O
int	O
err_num	int
,	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
vmsg	(*(char),int,array(struct(int,int,*(void),*(void))))->(void)
(	O
fmt	*(char)
,	O
err_num	int
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
exit	(int)->(void)
(	O
code	int
)	O
;	O
}	O
static	O
void	O
vmsg	(*(char),int,array(struct(int,int,*(void),*(void))))->(void)
(	O
const	O
char	O
*	O
fmt	*(char)
,	O
int	O
errnum	int
,	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
)	O
{	O
assert	O
(	O
fmt	*(char)
&&	O
fmt	*(char)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
curdir	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s:\n"	*(char)
,	O
curdir	*(char)
)	O
;	O
curdir	*(char)
=	O
0	int
;	O
}	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
errnum	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
": %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errnum	int
)	O
)	O
;	O
}	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
void	O
mperror	(int,*(char))->(void)
(	O
int	O
err_num	int
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
vmsg	(*(char),int,array(struct(int,int,*(void),*(void))))->(void)
(	O
fmt	*(char)
,	O
err_num	int
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
int	O
equivalent	(*(char),*(char))->(int)
(	O
char	O
*	O
lname	*(char)
,	O
const	O
char	O
*	O
rname	*(char)
)	O
{	O
char	O
*	O
s	*(char)
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
lname	*(char)
,	O
rname	*(char)
)	O
)	O
return	O
1	int
;	O
for	O
(	O
s	*(char)
=	O
lname	*(char)
;	O
*	O
s	*(char)
&&	O
(	O
s	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s	*(char)
,	O
'/'	O
)	O
)	O
;	O
s	*(char)
++	O
)	O
{	O
while	O
(	O
s	*(char)
[	O
1	int
]	O
==	O
'/'	O
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
s	*(char)
+	O
1	int
,	O
s	*(char)
+	O
2	int
)	O
;	O
}	O
return	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
lname	*(char)
,	O
rname	*(char)
)	O
;	O
}	O
static	O
int	O
is_dir	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
return	O
S_ISDIR	O
(	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
)	O
;	O
}	O
static	O
int	O
ignored	(*(char))->(int)
(	O
const	O
char	O
*	O
n	*(char)
)	O
{	O
const	O
char	O
*	O
histdirs	array(*(char))
[	O
]	O
=	O
{	O
"SCCS"	*(char)
,	O
"RCS"	*(char)
,	O
"CVS.adm"	*(char)
,	O
"CVS"	*(char)
,	O
(	O
const	O
char	O
*	O
)	O
0	int
}	O
;	O
const	O
char	O
*	O
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
;	O
for	O
(	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
=	O
histdirs	array(*(char))
;	O
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
;	O
++	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
n	*(char)
)	O
)	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
is_dot_or_dotdot	(*(char))->(int)
(	O
const	O
char	O
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
if	O
(	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
[	O
0	int
]	O
==	O
'.'	O
)	O
{	O
if	O
(	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
[	O
1	int
]	O
==	O
0	int
)	O
{	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
[	O
1	int
]	O
==	O
'.'	O
&&	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
[	O
2	int
]	O
==	O
0	int
)	O
{	O
return	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
dodir	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),int)->(int)
(	O
const	O
char	O
*	O
fn	*(char)
,	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
fs	short
,	O
const	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
int	O
rel	int
)	O
{	O
DIR	struct
*	O
df	*(struct)
;	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
dp	*(struct(long,long,short,char,array(char)))
;	O
char	O
buf	array(char)
[	O
MAXPATHLEN	O
+	O
1	int
]	O
,	O
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
;	O
char	O
symbuf	array(char)
[	O
MAXPATHLEN	O
+	O
1	int
]	O
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
sb	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
,	O
sc	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
int	O
symlen	int
;	O
char	O
*	O
ocurdir	*(char)
;	O
if	O
(	O
(	O
fs	short
->	O
st_dev	long
==	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
)	O
&&	O
(	O
fs	short
->	O
st_ino	long
==	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_ino	long
)	O
)	O
{	O
mperror	(int,*(char))->(void)
(	O
errno	O
,	O
"%s: From and to directories are identical, "	*(char)
"hence no work to do!"	*(char)
,	O
fn	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
rel	int
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
buf	array(char)
,	O
"../"	*(char)
)	O
;	O
else	O
buf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
buf	array(char)
,	O
fn	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
df	*(struct)
=	O
opendir	(*(char))->(*(struct))
(	O
buf	array(char)
)	O
)	O
)	O
{	O
mperror	(int,*(char))->(void)
(	O
errno	O
,	O
"%s: Cannot opendir"	*(char)
,	O
buf	array(char)
)	O
;	O
return	O
1	int
;	O
}	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
=	O
buf	array(char)
+	O
strlen	(*(char))->(long)
(	O
buf	array(char)
)	O
;	O
*	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
++	O
=	O
'/'	O
;	O
while	O
(	O
(	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
)	O
0	int
!=	O
(	O
dp	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
df	*(struct)
)	O
)	O
)	O
{	O
const	O
size_t	long
namlen	long
=	O
strlen	(*(char))->(long)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
if	O
(	O
namlen	long
)	O
{	O
if	O
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
[	O
namlen	long
-	O
1	int
]	O
==	O
'~'	O
)	O
continue	O
;	O
}	O
if	O
(	O
is_dot_or_dotdot	(*(char))->(int)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
)	O
{	O
continue	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
p	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
if	O
(	O
1	int
)	O
{	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
buf	array(char)
,	O
&	O
sb	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
)	O
{	O
mperror	(int,*(char))->(void)
(	O
errno	O
,	O
"failed to stat %s"	*(char)
,	O
buf	array(char)
)	O
;	O
continue	O
;	O
}	O
if	O
(	O
is_dir	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
&	O
sb	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
if	O
(	O
is_dot_or_dotdot	(*(char))->(int)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
||	O
ignored	(*(char))->(int)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
)	O
continue	O
;	O
ocurdir	*(char)
=	O
rcurdir	*(char)
;	O
rcurdir	*(char)
=	O
buf	array(char)
;	O
curdir	*(char)
=	O
silent	int
?	O
buf	array(char)
:	O
(	O
char	O
*	O
)	O
0	int
;	O
if	O
(	O
!	O
silent	int
)	O
printf	(*(char))->(int)
(	O
"making links in %s:\n"	*(char)
,	O
buf	array(char)
)	O
;	O
if	O
(	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
&	O
sc	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
)	O
&&	O
(	O
errno	O
==	O
ENOENT	int
)	O
)	O
{	O
if	O
(	O
mkdir	(*(char),int)->(int)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
0777	int
)	O
<	O
0	int
||	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
&	O
sc	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
)	O
{	O
mperror	(int,*(char))->(void)
(	O
errno	O
,	O
"failed to stat %s"	*(char)
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
curdir	*(char)
=	O
rcurdir	*(char)
=	O
ocurdir	*(char)
;	O
continue	O
;	O
}	O
}	O
if	O
(	O
readlink	(*(char),*(char),long)->(long)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
symbuf	array(char)
,	O
sizeof	O
(	O
symbuf	array(char)
)	O
-	O
1	int
)	O
>=	O
0	int
)	O
{	O
mperror	(int,*(char))->(void)
(	O
0	int
,	O
"%s: is a link instead of a directory"	*(char)
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
curdir	*(char)
=	O
rcurdir	*(char)
=	O
ocurdir	*(char)
;	O
continue	O
;	O
}	O
if	O
(	O
chdir	(*(char))->(int)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
<	O
0	int
)	O
{	O
mperror	(int,*(char))->(void)
(	O
errno	O
,	O
"failed to change directory into %s"	*(char)
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
;	O
curdir	*(char)
=	O
rcurdir	*(char)
=	O
ocurdir	*(char)
;	O
continue	O
;	O
}	O
dodir	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),int)->(int)
(	O
buf	array(char)
,	O
&	O
sb	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
,	O
&	O
sc	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
,	O
(	O
buf	array(char)
[	O
0	int
]	O
!=	O
'/'	O
)	O
)	O
;	O
if	O
(	O
chdir	(*(char))->(int)
(	O
".."	*(char)
)	O
<	O
0	int
)	O
quit	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
".."	*(char)
)	O
;	O
curdir	*(char)
=	O
rcurdir	*(char)
=	O
ocurdir	*(char)
;	O
continue	O
;	O
}	O
}	O
symlen	int
=	O
readlink	(*(char),*(char),long)->(long)
(	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
symbuf	array(char)
,	O
sizeof	O
(	O
symbuf	array(char)
)	O
-	O
1	int
)	O
;	O
if	O
(	O
symlen	int
>=	O
0	int
)	O
{	O
symbuf	array(char)
[	O
symlen	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
!	O
equivalent	(*(char),*(char))->(int)
(	O
symbuf	array(char)
,	O
buf	array(char)
)	O
)	O
mperror	(int,*(char))->(void)
(	O
0	int
,	O
"%s: %s"	*(char)
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
symbuf	array(char)
)	O
;	O
}	O
else	O
if	O
(	O
symlink	(*(char),*(char))->(int)
(	O
buf	array(char)
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
)	O
<	O
0	int
)	O
mperror	(int,*(char))->(void)
(	O
errno	O
,	O
"failed to create a symbolic link %s pointing to %s"	*(char)
,	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
,	O
buf	array(char)
)	O
;	O
}	O
closedir	(*(struct))->(int)
(	O
df	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
ac	int
,	O
char	O
*	O
av	array(*(char))
[	O
]	O
)	O
{	O
char	O
*	O
fn	*(char)
,	O
*	O
tn	*(char)
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
fs	short
,	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
;	O
silent	int
=	O
0	int
;	O
if	O
(	O
ac	int
>	O
1	int
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
av	array(*(char))
[	O
1	int
]	O
,	O
"--silent"	*(char)
)	O
)	O
silent	int
=	O
1	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
av	array(*(char))
[	O
1	int
]	O
,	O
"-silent"	*(char)
)	O
)	O
silent	int
=	O
1	int
;	O
}	O
if	O
(	O
ac	int
<	O
silent	int
+	O
2	int
||	O
ac	int
>	O
silent	int
+	O
3	int
)	O
quit	(int,int,*(char))->(void)
(	O
1	int
,	O
0	int
,	O
"usage: %s [-silent] fromdir [todir]"	*(char)
,	O
av	array(*(char))
[	O
0	int
]	O
)	O
;	O
fn	*(char)
=	O
av	array(*(char))
[	O
silent	int
+	O
1	int
]	O
;	O
if	O
(	O
ac	int
==	O
silent	int
+	O
3	int
)	O
tn	*(char)
=	O
av	array(*(char))
[	O
silent	int
+	O
2	int
]	O
;	O
else	O
tn	*(char)
=	O
"."	*(char)
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
tn	*(char)
,	O
&	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
<	O
0	int
)	O
quit	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
"%s"	*(char)
,	O
tn	*(char)
)	O
;	O
if	O
(	O
!	O
is_dir	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
&	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
)	O
quit	(int,int,*(char))->(void)
(	O
2	int
,	O
0	int
,	O
"%s: Not a directory"	*(char)
,	O
tn	*(char)
)	O
;	O
if	O
(	O
chdir	(*(char))->(int)
(	O
tn	*(char)
)	O
<	O
0	int
)	O
quit	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
"%s"	*(char)
,	O
tn	*(char)
)	O
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
fn	*(char)
,	O
&	O
fs	short
)	O
<	O
0	int
)	O
quit	(int,int,*(char))->(void)
(	O
1	int
,	O
errno	O
,	O
"%s"	*(char)
,	O
fn	*(char)
)	O
;	O
if	O
(	O
!	O
is_dir	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
&	O
fs	short
)	O
)	O
quit	(int,int,*(char))->(void)
(	O
2	int
,	O
0	int
,	O
"%s: Not a directory"	*(char)
,	O
fn	*(char)
)	O
;	O
return	O
dodir	(*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),int)->(int)
(	O
fn	*(char)
,	O
&	O
fs	short
,	O
&	O
ts	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
,	O
0	int
)	O
;	O
}	O
