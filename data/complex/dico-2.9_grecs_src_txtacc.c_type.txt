struct	O
grecs_txtacc_entry	struct(*(char),long,long)
{	O
char	O
*	O
buf	*(char)
;	O
size_t	long
size	*(long)
;	O
size_t	long
len	long
;	O
}	O
;	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
{	O
struct	O
grecs_list	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))
*	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
;	O
struct	O
grecs_list	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))
*	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
;	O
}	O
;	O
static	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
grecs_txtacc_alloc_entry	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(char),long,long)))
(	O
struct	O
grecs_list	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))
*	O
list	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
size_t	long
size	*(long)
)	O
{	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
grecs_malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
)	O
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
->	O
buf	*(char)
=	O
grecs_malloc	(long)->(*(void))
(	O
size	*(long)
)	O
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
->	O
size	*(long)
=	O
size	*(long)
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
->	O
len	long
=	O
0	int
;	O
grecs_list_append	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),*(void))->(void)
(	O
list	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
;	O
return	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
}	O
static	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
grecs_txtacc_cur_entry	(*(struct(*(struct(*`,*`,long,*`,*`)),*(struct(*`,*`,long,*`,*`)))))->(*(struct(*(char),long,long)))
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
)	O
{	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
ent	*(void)
;	O
if	O
(	O
grecs_list_size	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(long)
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
==	O
0	int
)	O
return	O
grecs_txtacc_alloc_entry	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(char),long,long)))
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
GRECS_TXTACC_BUFSIZE	int
)	O
;	O
ent	*(void)
=	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
data	*(void)
;	O
if	O
(	O
grecs_txtacc_entry_freesize	O
(	O
ent	*(void)
)	O
==	O
0	int
)	O
ent	*(void)
=	O
grecs_txtacc_alloc_entry	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(char),long,long)))
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
GRECS_TXTACC_BUFSIZE	int
)	O
;	O
return	O
ent	*(void)
;	O
}	O
static	O
void	O
grecs_txtacc_entry_append	(*(struct(*(char),long,long)),*(char),long)->(void)
(	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
ent	*(void)
,	O
const	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
size_t	long
size	*(long)
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ent	*(void)
->	O
buf	*(char)
+	O
ent	*(void)
->	O
len	long
,	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
,	O
size	*(long)
)	O
;	O
ent	*(void)
->	O
len	long
+=	O
size	*(long)
;	O
}	O
static	O
void	O
grecs_txtacc_entry_tailor	(*(struct(*(char),long,long)))->(void)
(	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
ent	*(void)
)	O
{	O
if	O
(	O
ent	*(void)
->	O
size	*(long)
>	O
ent	*(void)
->	O
len	long
)	O
{	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
grecs_realloc	(*(void),long)->(*(void))
(	O
ent	*(void)
->	O
buf	*(char)
,	O
ent	*(void)
->	O
len	long
)	O
;	O
if	O
(	O
!	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
return	O
;	O
ent	*(void)
->	O
buf	*(char)
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
ent	*(void)
->	O
size	*(long)
=	O
ent	*(void)
->	O
len	long
;	O
}	O
}	O
static	O
void	O
grecs_txtacc_entry_free	(*(void))->(void)
(	O
void	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
{	O
if	O
(	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
)	O
{	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
ent	*(void)
=	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
free	(*(void))->(void)
(	O
ent	*(void)
->	O
buf	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
ent	*(void)
)	O
;	O
}	O
}	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
grecs_txtacc_create	()->(*(struct))
(	O
)	O
{	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
=	O
grecs_malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
acc	*(struct)
)	O
)	O
;	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
=	O
grecs_list_create	()->(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))
(	O
)	O
;	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
free_entry	*((*(void))->(void))
=	O
grecs_txtacc_entry_free	(*(void))->(void)
;	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
=	O
grecs_list_create	()->(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))
(	O
)	O
;	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
free_entry	*((*(void))->(void))
=	O
grecs_txtacc_entry_free	(*(void))->(void)
;	O
return	O
acc	*(struct)
;	O
}	O
void	O
grecs_txtacc_free	(*(struct))->(void)
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
)	O
{	O
if	O
(	O
acc	*(struct)
)	O
{	O
grecs_list_free	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(void)
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
;	O
grecs_list_free	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(void)
(	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
;	O
free	(*(void))->(void)
(	O
acc	*(struct)
)	O
;	O
}	O
}	O
void	O
grecs_txtacc_grow	(*(struct),*(char),long)->(void)
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
,	O
const	O
char	O
*	O
buf	*(char)
,	O
size_t	long
size	*(long)
)	O
{	O
while	O
(	O
size	*(long)
)	O
{	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
ent	*(void)
=	O
grecs_txtacc_cur_entry	(*(struct(*(struct(*`,*`,long,*`,*`)),*(struct(*`,*`,long,*`,*`)))))->(*(struct(*(char),long,long)))
(	O
acc	*(struct)
)	O
;	O
size_t	long
rest	long
=	O
grecs_txtacc_entry_freesize	O
(	O
ent	*(void)
)	O
;	O
if	O
(	O
rest	long
>	O
size	*(long)
)	O
rest	long
=	O
size	*(long)
;	O
grecs_txtacc_entry_append	(*(struct(*(char),long,long)),*(char),long)->(void)
(	O
ent	*(void)
,	O
buf	*(char)
,	O
rest	long
)	O
;	O
buf	*(char)
+=	O
rest	long
;	O
size	*(long)
-=	O
rest	long
;	O
}	O
}	O
void	O
grecs_txtacc_grow_string	(*(struct),*(char))->(void)
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
,	O
const	O
char	O
*	O
buf	*(char)
)	O
{	O
grecs_txtacc_grow	(*(struct),*(char),long)->(void)
(	O
acc	*(struct)
,	O
buf	*(char)
,	O
strlen	(*(char))->(long)
(	O
buf	*(char)
)	O
)	O
;	O
}	O
void	O
grecs_txtacc_grow_string_escape	(*(struct),*(char))->(void)
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
,	O
const	O
char	O
*	O
buf	*(char)
)	O
{	O
for	O
(	O
;	O
*	O
buf	*(char)
;	O
buf	*(char)
++	O
)	O
{	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
" \t\n\"\'\\"	*(char)
,	O
*	O
buf	*(char)
)	O
)	O
grecs_txtacc_grow_char	O
(	O
acc	*(struct)
,	O
'\\'	O
)	O
;	O
grecs_txtacc_grow_char	O
(	O
acc	*(struct)
,	O
*	O
buf	*(char)
)	O
;	O
}	O
}	O
char	O
*	O
grecs_txtacc_finish	(*(struct),int)->(*(char))
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
,	O
int	O
steal	int
)	O
{	O
struct	O
grecs_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(void))
*	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
txtent	*(struct(*(char),long,long))
;	O
size_t	long
size	*(long)
;	O
char	O
*	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
switch	O
(	O
grecs_list_size	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(long)
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
)	O
{	O
case	O
0	int
:	O
return	O
NULL	O
;	O
case	O
1	int
:	O
txtent	*(struct(*(char),long,long))
=	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
data	*(void)
;	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
data	*(void)
=	O
NULL	O
;	O
grecs_txtacc_entry_tailor	(*(struct(*(char),long,long)))->(void)
(	O
txtent	*(struct(*(char),long,long))
)	O
;	O
grecs_list_append	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),*(void))->(void)
(	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
txtent	*(struct(*(char),long,long))
)	O
;	O
break	O
;	O
default	O
:	O
size	*(long)
=	O
0	int
;	O
for	O
(	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
)	O
{	O
txtent	*(struct(*(char),long,long))
=	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
data	*(void)
;	O
size	*(long)
+=	O
txtent	*(struct(*(char),long,long))
->	O
len	long
;	O
}	O
txtent	*(struct(*(char),long,long))
=	O
grecs_txtacc_alloc_entry	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),long)->(*(struct(*(char),long,long)))
(	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
size	*(long)
)	O
;	O
for	O
(	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
)	O
{	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
tp	*(struct(*(char),long,long))
=	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
data	*(void)
;	O
grecs_txtacc_entry_append	(*(struct(*(char),long,long)),*(char),long)->(void)
(	O
txtent	*(struct(*(char),long,long))
,	O
tp	*(struct(*(char),long,long))
->	O
buf	*(char)
,	O
tp	*(struct(*(char),long,long))
->	O
len	long
)	O
;	O
}	O
}	O
grecs_list_clear	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(void)
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
;	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
=	O
txtent	*(struct(*(char),long,long))
->	O
buf	*(char)
;	O
if	O
(	O
steal	int
)	O
{	O
grecs_list_remove_tail	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(*(void))
(	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
;	O
free	(*(void))->(void)
(	O
txtent	*(struct(*(char),long,long))
)	O
;	O
}	O
return	O
p	*(struct(*(struct(*(struct`),*(char),int,*(struct`))),*(char),int,*(struct)))
;	O
}	O
void	O
grecs_txtacc_free_string	(*(struct),*(char))->(void)
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
,	O
char	O
*	O
str	*(char)
)	O
{	O
struct	O
grecs_list_entry	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void))),*(void))
*	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
for	O
(	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
->	O
head	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
;	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
=	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
)	O
{	O
struct	O
grecs_txtacc_entry	struct(*(char),long,long)
*	O
tp	*(struct(*(char),long,long))
=	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
->	O
data	*(void)
;	O
if	O
(	O
tp	*(struct(*(char),long,long))
->	O
buf	*(char)
==	O
str	*(char)
)	O
{	O
grecs_list_remove_entry	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))),*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),*(void))))->(void)
(	O
acc	*(struct)
->	O
mem	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
,	O
ep	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),*(void)))
)	O
;	O
grecs_txtacc_entry_free	(*(void))->(void)
(	O
tp	*(struct(*(char),long,long))
)	O
;	O
return	O
;	O
}	O
}	O
}	O
void	O
grecs_txtacc_clear	(*(struct(*(struct(*`,*`,long,*`,*`)),*(struct(*`,*`,long,*`,*`)))))->(void)
(	O
struct	O
grecs_txtacc	struct(*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))),*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void)))))
*	O
acc	*(struct)
)	O
{	O
grecs_list_clear	(*(struct(*(struct(*`,*`,*`)),*(struct(*`,*`,*`)),long,*((*`,*`)->(int)),*((*`)->(void)))))->(void)
(	O
acc	*(struct)
->	O
cur	*(struct(*(struct(*(struct`),*(struct`),*(void))),*(struct(*(struct`),*(struct`),*(void))),long,*((*(void),*(void))->(int)),*((*(void))->(void))))
)	O
;	O
}	O
