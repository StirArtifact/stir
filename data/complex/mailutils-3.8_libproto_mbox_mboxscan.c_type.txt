int	O
mbox_scan_internal	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))),long,*(long),int)->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
mu_off_t	long
total	long
,	O
size_t	long
*	O
pmin_uid	*(long)
,	O
int	O
flags	int
)	O
{	O
char	O
buf	*(char)
[	O
MSGLINELEN	int
]	O
;	O
int	O
inheader	int
;	O
int	O
inbody	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
int	O
status	int
=	O
0	int
;	O
size_t	long
lines	long
;	O
int	O
newline	int
;	O
size_t	long
n	*(long)
=	O
0	int
;	O
mu_stream_t	*(struct)
stream	*(struct)
;	O
size_t	long
min_uid	long
=	O
0	int
;	O
int	O
zn	int
,	O
isfrom	int
=	O
0	int
;	O
char	O
*	O
temp	*(char)
;	O
newline	int
=	O
1	int
;	O
errno	O
=	O
lines	long
=	O
inheader	int
=	O
inbody	int
=	O
0	int
;	O
status	int
=	O
mu_streamref_create	(*(*(struct)),*(struct))->(int)
(	O
&	O
stream	*(struct)
,	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
total	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
while	O
(	O
(	O
status	int
=	O
mu_stream_readline	(*(struct),*(char),long,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(char)
,	O
sizeof	O
(	O
buf	*(char)
)	O
,	O
&	O
n	*(long)
)	O
)	O
==	O
0	int
&&	O
n	*(long)
!=	O
0	int
)	O
{	O
int	O
nl	int
;	O
total	long
+=	O
n	*(long)
;	O
nl	int
=	O
(	O
*	O
buf	*(char)
==	O
'\n'	O
)	O
?	O
1	int
:	O
0	int
;	O
VALID	O
(	O
buf	*(char)
,	O
temp	*(char)
,	O
isfrom	int
,	O
zn	int
)	O
;	O
if	O
(	O
(	O
flags	int
&	O
MBOX_SCAN_ONEMSG	int
)	O
&&	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
==	O
NULL	O
)	O
{	O
if	O
(	O
!	O
isfrom	int
)	O
return	O
MU_ERR_NOENT	O
;	O
}	O
inheader	int
=	O
isfrom	int
||	O
(	O
(	O
!	O
nl	int
)	O
&	O
inheader	int
)	O
;	O
inbody	int
=	O
!	O
isfrom	int
&	O
!	O
inheader	int
;	O
if	O
(	O
buf	*(char)
[	O
n	*(long)
-	O
1	int
]	O
==	O
'\n'	O
)	O
lines	long
++	O
;	O
if	O
(	O
inheader	int
)	O
{	O
if	O
(	O
isfrom	int
)	O
{	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
&&	O
!	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
=	O
total	long
-	O
n	*(long)
-	O
newline	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_lines	long
=	O
--	O
lines	long
-	O
newline	int
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
uid	int
==	O
0	int
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
uid	int
=	O
++	O
min_uid	long
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
|=	O
MU_ATTRIBUTE_MODIFIED	int
;	O
}	O
if	O
(	O
flags	int
&	O
MBOX_SCAN_ONEMSG	int
)	O
break	O
;	O
if	O
(	O
flags	int
&	O
MBOX_SCAN_NOTIFY	int
)	O
DISPATCH_ADD_MSG	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mud	*(struct)
)	O
;	O
}	O
ALLOCATE_MSGS	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mud	*(struct)
)	O
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
mud	*(struct)
->	O
messages_count	long
++	O
]	O
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
mud	*(struct)
=	O
mud	*(struct)
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
=	O
total	long
-	O
n	*(long)
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from_end	long
=	O
total	long
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body	*(struct)
=	O
0	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
=	O
0	int
;	O
lines	long
=	O
0	int
;	O
}	O
else	O
if	O
(	O
ISSTATUS	O
(	O
buf	*(char)
)	O
)	O
{	O
ATTRIBUTE_SET	O
(	O
buf	*(char)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
'r'	O
,	O
'R'	O
,	O
MU_ATTRIBUTE_READ	int
)	O
;	O
ATTRIBUTE_SET	O
(	O
buf	*(char)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
'o'	O
,	O
'O'	O
,	O
MU_ATTRIBUTE_SEEN	int
)	O
;	O
ATTRIBUTE_SET	O
(	O
buf	*(char)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
'a'	O
,	O
'A'	O
,	O
MU_ATTRIBUTE_ANSWERED	int
)	O
;	O
ATTRIBUTE_SET	O
(	O
buf	*(char)
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
'd'	O
,	O
'D'	O
,	O
MU_ATTRIBUTE_DELETED	int
)	O
;	O
}	O
else	O
if	O
(	O
IS_X_UID	O
(	O
buf	*(char)
)	O
)	O
{	O
char	O
*	O
p	*(char)
;	O
unsigned	O
long	O
n	*(long)
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
buf	*(char)
+	O
6	int
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
(	O
*	O
p	*(char)
==	O
0	int
||	O
mu_isspace	O
(	O
*	O
p	*(char)
)	O
)	O
&&	O
n	*(long)
>	O
min_uid	long
)	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
uid	int
=	O
min_uid	long
=	O
n	*(long)
;	O
}	O
else	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
==	O
1	int
&&	O
IS_X_IMAPBASE	O
(	O
buf	*(char)
)	O
)	O
{	O
char	O
*	O
p	*(char)
;	O
unsigned	O
long	O
n	*(long)
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
buf	*(char)
+	O
11	int
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
mu_isspace	O
(	O
*	O
p	*(char)
)	O
)	O
mud	*(struct)
->	O
uidvalidity	long
=	O
n	*(long)
;	O
n	*(long)
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
mu_str_skip_cset	(*(char),*(char))->(*(char))
(	O
p	*(char)
,	O
" \t"	*(char)
)	O
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
0	int
||	O
mu_isspace	O
(	O
*	O
p	*(char)
)	O
)	O
mud	*(struct)
->	O
uidnext	long
=	O
n	*(long)
;	O
else	O
mud	*(struct)
->	O
uidvalidity	long
=	O
0	int
;	O
}	O
}	O
if	O
(	O
inbody	int
)	O
{	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
&&	O
!	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body	*(struct)
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body	*(struct)
=	O
total	long
-	O
n	*(long)
+	O
nl	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
header_lines	long
=	O
lines	long
;	O
lines	long
=	O
0	int
;	O
}	O
}	O
newline	int
=	O
(	O
inbody	int
&&	O
lines	long
)	O
?	O
nl	int
:	O
0	int
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
&&	O
(	O
mud	*(struct)
->	O
messages_count	long
%	O
100	int
)	O
==	O
0	int
)	O
mu_locker_touchlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
if	O
(	O
flags	int
&	O
MBOX_SCAN_NOTIFY	int
)	O
if	O
(	O
(	O
(	O
lines	long
+	O
1	int
)	O
%	O
1000	int
)	O
==	O
0	int
)	O
DISPATCH_PROGRESS	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mud	*(struct)
)	O
;	O
}	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_end	long
=	O
total	long
-	O
newline	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
body_lines	long
=	O
lines	long
-	O
newline	int
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
uid	int
==	O
0	int
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
uid	int
=	O
++	O
min_uid	long
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
|=	O
MU_ATTRIBUTE_MODIFIED	int
;	O
}	O
if	O
(	O
flags	int
&	O
MBOX_SCAN_NOTIFY	int
)	O
DISPATCH_ADD_MSG	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mud	*(struct)
)	O
;	O
}	O
if	O
(	O
pmin_uid	*(long)
)	O
*	O
pmin_uid	*(long)
=	O
min_uid	long
;	O
return	O
status	int
;	O
}	O
int	O
mbox_scan0	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,*(long),int)->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
size_t	long
msgno	long
,	O
size_t	long
*	O
pcount	*(long)
,	O
int	O
do_notif	int
)	O
{	O
int	O
status	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
mbox_message_t	*(struct)
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
NULL	O
;	O
mu_off_t	long
total	long
=	O
0	int
;	O
size_t	long
min_uid	long
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_monitor_wrlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
pthread_cleanup_push	O
(	O
mbox_cleanup	(*(void))->(void)
,	O
(	O
void	O
*	O
)	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
status	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
&	O
mud	*(struct)
->	O
size	*(long)
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
return	O
status	int
;	O
}	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
&&	O
(	O
status	int
=	O
mu_locker_lock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
)	O
)	O
{	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
return	O
status	int
;	O
}	O
if	O
(	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
&&	O
msgno	long
>	O
0	int
&&	O
mud	*(struct)
->	O
messages_count	long
>	O
0	int
&&	O
msgno	long
<=	O
mud	*(struct)
->	O
messages_count	long
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
msgno	long
-	O
1	int
]	O
;	O
if	O
(	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
)	O
total	long
=	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
envel_from	long
;	O
mud	*(struct)
->	O
messages_count	long
=	O
msgno	long
-	O
1	int
;	O
}	O
else	O
mud	*(struct)
->	O
messages_count	long
=	O
0	int
;	O
status	int
=	O
mbox_scan_internal	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
,	O
total	long
,	O
&	O
min_uid	long
,	O
do_notif	int
?	O
MBOX_SCAN_NOTIFY	int
:	O
0	int
)	O
;	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
mud	*(struct)
->	O
messages_count	long
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
>	O
0	int
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
0	int
]	O
;	O
if	O
(	O
mud	*(struct)
->	O
uidvalidity	long
==	O
0	int
)	O
{	O
mud	*(struct)
->	O
uidvalidity	long
=	O
(	O
unsigned	O
long	O
)	O
time	struct(long,long)
(	O
NULL	O
)	O
;	O
mud	*(struct)
->	O
uidnext	long
=	O
mud	*(struct)
->	O
messages_count	long
+	O
1	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
|=	O
MU_ATTRIBUTE_MODIFIED	int
;	O
}	O
}	O
if	O
(	O
mud	*(struct)
->	O
messages_count	long
>	O
0	int
&&	O
min_uid	long
>	O
mud	*(struct)
->	O
uidnext	long
)	O
{	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
=	O
mud	*(struct)
->	O
umessages	*(*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))))
[	O
0	int
]	O
;	O
mud	*(struct)
->	O
uidnext	long
=	O
min_uid	long
+	O
1	int
;	O
mum	*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*(*`),long,long,long,long,long,*(char),*(struct`)))))
->	O
attr_flags	int
|=	O
MU_ATTRIBUTE_MODIFIED	int
;	O
}	O
pthread_cleanup_pop	O
(	O
0	int
)	O
;	O
return	O
status	int
;	O
}	O
int	O
mbox_scan1	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),long,int)->(int)
(	O
mu_mailbox_t	*(struct)
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
mu_off_t	long
offset	long
,	O
int	O
do_notif	int
)	O
{	O
int	O
status	int
;	O
mbox_data_t	*(struct)
mud	*(struct)
=	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
data	*(void)
;	O
if	O
(	O
mud	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_monitor_wrlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
pthread_cleanup_push	O
(	O
mbox_cleanup	(*(void))->(void)
,	O
(	O
void	O
*	O
)	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
&&	O
(	O
status	int
=	O
mu_locker_lock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
)	O
)	O
{	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
stream	*(struct)
,	O
offset	long
,	O
SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
mbox_scan_internal	(*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*`,*`,int,int)),*(struct),*(char),int,*(struct(short,array(char))),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct(long,long,long,long,long,long,long,int,*(struct),*(struct(*`,long,long,long,long,long,*`,*`)))),long,*(long),int)->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
,	O
NULL	O
,	O
offset	long
,	O
NULL	O
,	O
MBOX_SCAN_ONEMSG	int
|	O
(	O
do_notif	int
?	O
MBOX_SCAN_NOTIFY	int
:	O
0	int
)	O
)	O
;	O
if	O
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
mu_locker_unlock	(*(struct))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
locker	*(struct)
)	O
;	O
mu_monitor_unlock	(*(struct(*(void),*(void),int,int)))->(int)
(	O
mailbox	*(struct(*(struct),*(struct),*(struct),*(struct),*(struct),int,*(struct),*(struct(*(void),*(void),int,int)),*(struct),*(char),int,*(struct),*(void),*((*(struct`))->(void)),*((*(struct`),int)->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),long,*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),*(char),*(*`))->(int)),*((*(struct`),*(struct`))->(int)),*((*(struct`),int,long,*(long))->(int)),*((*(struct`),*(struct`),*(char),int)->(int)),*((*(struct`),*(long))->(int))))
->	O
monitor	*(struct(*(void),*(void),int,int))
)	O
;	O
pthread_cleanup_pop	O
(	O
0	int
)	O
;	O
return	O
status	int
;	O
}	O
