static	O
void	O
send_contents	(*(char),int,int)->(void)
(	O
char	O
*	O
buffer	*(char)
,	O
unsigned	O
int	O
columns	int
,	O
unsigned	O
int	O
rows	int
)	O
{	O
unsigned	O
char	O
begin_line	char
=	O
0	int
,	O
end_line	char
=	O
0	int
;	O
unsigned	O
int	O
lastline	int
,	O
index	(*(char),int)->(*(char))
,	O
x	int
;	O
unsigned	O
char	O
message	char
,	O
outbuf	array(char)
[	O
1024	int
]	O
,	O
*	O
p	*(char)
;	O
unsigned	O
short	O
bytes	short
;	O
index	(*(char),int)->(*(char))
=	O
2	int
*	O
rows	int
*	O
columns	int
;	O
for	O
(	O
lastline	int
=	O
rows	int
;	O
lastline	int
>	O
0	int
;	O
lastline	int
--	O
)	O
for	O
(	O
x	int
=	O
0	int
;	O
x	int
<	O
columns	int
;	O
x	int
++	O
)	O
{	O
index	(*(char),int)->(*(char))
-=	O
2	int
;	O
if	O
(	O
buffer	*(char)
[	O
index	(*(char),int)->(*(char))
]	O
!=	O
' '	O
)	O
goto	O
out	O
;	O
}	O
out	O
:	O
message	char
=	O
CONSOLE_CONTENTS	int
;	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
&	O
message	char
,	O
1	int
)	O
;	O
read	*((*(void),*(char),long)->(long))
(	O
0	int
,	O
&	O
begin_line	char
,	O
1	int
)	O
;	O
read	*((*(void),*(char),long)->(long))
(	O
0	int
,	O
&	O
end_line	char
,	O
1	int
)	O
;	O
if	O
(	O
begin_line	char
>	O
lastline	int
)	O
begin_line	char
=	O
lastline	int
;	O
if	O
(	O
end_line	char
>	O
lastline	int
)	O
end_line	char
=	O
lastline	int
;	O
index	(*(char),int)->(*(char))
=	O
(	O
end_line	char
-	O
begin_line	char
)	O
*	O
columns	int
;	O
bytes	short
=	O
index	(*(char),int)->(*(char))
;	O
if	O
(	O
index	(*(char),int)->(*(char))
!=	O
bytes	short
)	O
bytes	short
=	O
0	int
;	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
&	O
bytes	short
,	O
2	int
)	O
;	O
if	O
(	O
!	O
bytes	short
)	O
return	O
;	O
p	*(char)
=	O
outbuf	array(char)
;	O
for	O
(	O
index	(*(char),int)->(*(char))
=	O
2	int
*	O
begin_line	char
*	O
columns	int
;	O
index	(*(char),int)->(*(char))
<	O
2	int
*	O
end_line	char
*	O
columns	int
;	O
index	(*(char),int)->(*(char))
+=	O
2	int
)	O
{	O
*	O
p	*(char)
++	O
=	O
buffer	*(char)
[	O
index	(*(char),int)->(*(char))
]	O
;	O
if	O
(	O
p	*(char)
==	O
outbuf	array(char)
+	O
sizeof	O
(	O
outbuf	array(char)
)	O
)	O
{	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
outbuf	array(char)
,	O
sizeof	O
(	O
outbuf	array(char)
)	O
)	O
;	O
p	*(char)
=	O
outbuf	array(char)
;	O
}	O
}	O
if	O
(	O
p	*(char)
!=	O
outbuf	array(char)
)	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
outbuf	array(char)
,	O
p	*(char)
-	O
outbuf	array(char)
)	O
;	O
}	O
static	O
void	O
__attribute__	O
(	O
(	O
noreturn	O
)	O
)	O
die	()->(void)
(	O
void	O
)	O
{	O
unsigned	O
char	O
zero	char
=	O
0	int
;	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
&	O
zero	char
,	O
1	int
)	O
;	O
exit	(int)->(void)
(	O
3	int
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
unsigned	O
char	O
action	char
=	O
0	int
,	O
console_flag	char
=	O
3	int
;	O
int	O
console_fd	int
,	O
vcsa_fd	int
,	O
console_minor	int
,	O
buffer_size	int
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
uid_t	int
uid	int
,	O
euid	int
;	O
char	O
*	O
buffer	*(char)
,	O
*	O
tty_name	*(char)
,	O
console_name	array(char)
[	O
16	int
]	O
,	O
vcsa_name	array(char)
[	O
16	int
]	O
,	O
*	O
p	*(char)
,	O
*	O
q	*(char)
;	O
struct	O
winsize	struct(short,short,short,short)
winsz	struct(short,short,short,short)
;	O
close	*((*(void))->(int))
(	O
2	int
)	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
die	()->(void)
(	O
)	O
;	O
tty_name	*(char)
=	O
argv	*(*(char))
[	O
1	int
]	O
;	O
if	O
(	O
strnlen	(*(char),long)->(long)
(	O
tty_name	*(char)
,	O
15	int
)	O
==	O
15	int
||	O
strncmp	(*(char),*(char),long)->(int)
(	O
tty_name	*(char)
,	O
"/dev/"	*(char)
,	O
5	int
)	O
)	O
die	()->(void)
(	O
)	O
;	O
setsid	()->(int)
(	O
)	O
;	O
uid	int
=	O
getuid	()->(int)
(	O
)	O
;	O
euid	int
=	O
geteuid	()->(int)
(	O
)	O
;	O
if	O
(	O
seteuid	(int)->(int)
(	O
uid	int
)	O
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
console_fd	int
=	O
open	(*(char),int)->(int)
(	O
tty_name	*(char)
,	O
O_RDONLY	int
)	O
;	O
if	O
(	O
console_fd	int
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
console_fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
||	O
!	O
S_ISCHR	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
die	()->(void)
(	O
)	O
;	O
if	O
(	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_rdev	long
&	O
0xff00	int
)	O
!=	O
0x0400	int
)	O
die	()->(void)
(	O
)	O
;	O
console_minor	int
=	O
(	O
int	O
)	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_rdev	long
&	O
0x00ff	int
)	O
;	O
if	O
(	O
console_minor	int
<	O
1	int
||	O
console_minor	int
>	O
63	int
)	O
die	()->(void)
(	O
)	O
;	O
if	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_uid	int
!=	O
uid	int
)	O
die	()->(void)
(	O
)	O
;	O
switch	O
(	O
tty_name	*(char)
[	O
5	int
]	O
)	O
{	O
case	O
'v'	O
:	O
p	*(char)
=	O
"/dev/vc/%d"	*(char)
;	O
q	*(char)
=	O
"/dev/vcc/a%d"	*(char)
;	O
break	O
;	O
case	O
't'	O
:	O
p	*(char)
=	O
"/dev/tty%d"	*(char)
;	O
q	*(char)
=	O
"/dev/vcsa%d"	*(char)
;	O
break	O
;	O
default	O
:	O
die	()->(void)
(	O
)	O
;	O
break	O
;	O
}	O
snprintf	(*(char),long,*(char))->(int)
(	O
console_name	array(char)
,	O
sizeof	O
(	O
console_name	array(char)
)	O
,	O
p	*(char)
,	O
console_minor	int
)	O
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
console_name	array(char)
,	O
tty_name	*(char)
,	O
sizeof	O
(	O
console_name	array(char)
)	O
)	O
!=	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
if	O
(	O
seteuid	(int)->(int)
(	O
euid	int
)	O
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
vcsa_name	array(char)
,	O
sizeof	O
(	O
vcsa_name	array(char)
)	O
,	O
q	*(char)
,	O
console_minor	int
)	O
;	O
vcsa_fd	int
=	O
open	(*(char),int)->(int)
(	O
vcsa_name	array(char)
,	O
O_RDWR	int
)	O
;	O
if	O
(	O
vcsa_fd	int
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
vcsa_fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
||	O
!	O
S_ISCHR	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
die	()->(void)
(	O
)	O
;	O
if	O
(	O
seteuid	(int)->(int)
(	O
uid	int
)	O
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
winsz	struct(short,short,short,short)
.	O
ws_col	short
=	O
winsz	struct(short,short,short,short)
.	O
ws_row	short
=	O
0	int
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
console_fd	int
,	O
TIOCGWINSZ	int
,	O
&	O
winsz	struct(short,short,short,short)
)	O
<	O
0	int
||	O
winsz	struct(short,short,short,short)
.	O
ws_col	short
<=	O
0	int
||	O
winsz	struct(short,short,short,short)
.	O
ws_row	short
<=	O
0	int
||	O
winsz	struct(short,short,short,short)
.	O
ws_col	short
>=	O
256	int
||	O
winsz	struct(short,short,short,short)
.	O
ws_row	short
>=	O
256	int
)	O
die	()->(void)
(	O
)	O
;	O
buffer_size	int
=	O
4	int
+	O
2	int
*	O
winsz	struct(short,short,short,short)
.	O
ws_col	short
*	O
winsz	struct(short,short,short,short)
.	O
ws_row	short
;	O
buffer	*(char)
=	O
calloc	(long,long)->(*(void))
(	O
buffer_size	int
,	O
1	int
)	O
;	O
if	O
(	O
buffer	*(char)
==	O
NULL	O
)	O
die	()->(void)
(	O
)	O
;	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
&	O
console_flag	char
,	O
1	int
)	O
;	O
while	O
(	O
console_flag	char
&&	O
read	*((*(void),*(char),long)->(long))
(	O
0	int
,	O
&	O
action	char
,	O
1	int
)	O
==	O
1	int
)	O
{	O
switch	O
(	O
action	char
)	O
{	O
case	O
CONSOLE_DONE	int
:	O
console_flag	char
=	O
0	int
;	O
continue	O
;	O
case	O
CONSOLE_SAVE	int
:	O
if	O
(	O
seteuid	(int)->(int)
(	O
euid	int
)	O
<	O
0	int
||	O
lseek	(int,long,int)->(long)
(	O
vcsa_fd	int
,	O
0	int
,	O
0	int
)	O
!=	O
0	int
||	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
console_fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
||	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_uid	int
!=	O
uid	int
||	O
read	*((*(void),*(char),long)->(long))
(	O
vcsa_fd	int
,	O
buffer	*(char)
,	O
buffer_size	int
)	O
!=	O
buffer_size	int
||	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
console_fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
<	O
0	int
||	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_uid	int
!=	O
uid	int
)	O
memset	(*(void),int,long)->(*(void))
(	O
buffer	*(char)
,	O
0	int
,	O
buffer_size	int
)	O
;	O
if	O
(	O
seteuid	(int)->(int)
(	O
uid	int
)	O
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
CONSOLE_RESTORE	int
:	O
if	O
(	O
seteuid	(int)->(int)
(	O
euid	int
)	O
>=	O
0	int
&&	O
lseek	(int,long,int)->(long)
(	O
vcsa_fd	int
,	O
0	int
,	O
0	int
)	O
==	O
0	int
&&	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
console_fd	int
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
>=	O
0	int
&&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_uid	int
==	O
uid	int
)	O
write	*((*(void),*(char),long)->(long))
(	O
vcsa_fd	int
,	O
buffer	*(char)
,	O
buffer_size	int
)	O
;	O
if	O
(	O
seteuid	(int)->(int)
(	O
uid	int
)	O
<	O
0	int
)	O
die	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
CONSOLE_CONTENTS	int
:	O
send_contents	(*(char),int,int)->(void)
(	O
buffer	*(char)
+	O
4	int
,	O
winsz	struct(short,short,short,short)
.	O
ws_col	short
,	O
winsz	struct(short,short,short,short)
.	O
ws_row	short
)	O
;	O
break	O
;	O
}	O
write	*((*(void),*(char),long)->(long))
(	O
1	int
,	O
&	O
console_flag	char
,	O
1	int
)	O
;	O
}	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
