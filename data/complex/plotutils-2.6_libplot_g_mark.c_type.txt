int	O
_API_fmarker	O
(	O
R___	O
(	O
Plotter	struct(*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),int)->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),int,double)->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char),int,int)->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char),int,int)->(double)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char))->(double)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char))->(void)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*`)),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*`,*`,*`,enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)))),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int))),*(*(struct`)),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct`,struct`,*`,*`,int,struct`,*`,int,*`,int,enum(int,int),*`,int,*`,int,double,double,enum(int,int),double,int,*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,*`,double,double,double,double,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct`,struct`,struct`,char,char,char,enum(int,int),enum(int,int),enum(int,int),*`)))),*(void),int,int,*(void),*(void),enum(int,int),struct(double,double),enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,struct(int,int,int),struct(int,int,int),struct(int,int,int),int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct(int,int),struct(int,int),enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct(double,double),struct(double,double),enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct(int,int),int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct(int,int,int),enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct(int,int,int),*(void),int,*(void),*(void),array(struct(int,int,int)),int,enum(int,int),int,int,int,struct(int,int),array(struct(int,int,int)),int,enum(int,int))
*	O
_plotter	*(struct)
)	O
double	O
x	double
,	O
double	O
y	double
,	O
int	O
type	enum(int,int,int,int,int,int,int)
,	O
double	O
size	double
)	O
{	O
bool	enum(int,int)
drawn	enum(int,int)
;	O
char	O
label_buf	array(char)
[	O
2	int
]	O
;	O
double	O
x_dev	double
,	O
y_dev	double
,	O
delta_x_dev	double
,	O
delta_y_dev	double
;	O
double	O
delta_x_user	double
=	O
0.0	int
,	O
delta_y_user	double
=	O
0.0	int
;	O
if	O
(	O
!	O
_plotter	*(struct)
->	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
open	enum(int,int)
)	O
{	O
_plotter	*(struct)
->	O
error	*((*(struct(*((*`)->(void)),*((*`)->(void)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`,int)->(void)),*((*`,int,double)->(enum(int,int))),*((*`)->(void)),*((*`,*`,int,int)->(void)),*((*`,*`,int,int)->(double)),*((*`,*`)->(double)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`,*`)->(void)),*((*`,*`)->(void)),*(struct`),*(struct`),*(void),int,int,*(void),*(void),enum(int,int),struct(double,double),enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,struct(int,int,int),struct(int,int,int),struct(int,int,int),int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct(int,int),struct(int,int),enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct(double,double),struct(double,double),enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct(int,int),int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct(int,int,int),enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct(int,int,int),*(void),int,*(void),*(void),array(struct(int,int,int)),int,enum(int,int),int,int,int,struct(int,int),array(struct(int,int,int)),int,enum(int,int))),*(char))->(void))
(	O
R___	O
(	O
_plotter	*(struct)
)	O
"fmarker: invalid operation"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	*(struct)
)	O
)	O
;	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pos	struct(double,double)
.	O
x	double
=	O
x	double
;	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pos	struct(double,double)
.	O
y	double
=	O
y	double
;	O
if	O
(	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pen_type	int
==	O
0	int
)	O
return	O
0	int
;	O
drawn	enum(int,int)
=	O
_plotter	*(struct)
->	O
paint_marker	*((*(struct(*((*`)->(void)),*((*`)->(void)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`,int)->(void)),*((*`,int,double)->(enum(int,int))),*((*`)->(void)),*((*`,*`,int,int)->(void)),*((*`,*`,int,int)->(double)),*((*`,*`)->(double)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`,*`)->(void)),*((*`,*`)->(void)),*(struct`),*(struct`),*(void),int,int,*(void),*(void),enum(int,int),struct(double,double),enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,struct(int,int,int),struct(int,int,int),struct(int,int,int),int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct(int,int),struct(int,int),enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct(double,double),struct(double,double),enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct(int,int),int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct(int,int,int),enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct(int,int,int),*(void),int,*(void),*(void),array(struct(int,int,int)),int,enum(int,int),int,int,int,struct(int,int),array(struct(int,int,int)),int,enum(int,int))),int,double)->(enum(int,int)))
(	O
R___	O
(	O
_plotter	*(struct)
)	O
type	enum(int,int,int,int,int,int,int)
,	O
size	double
)	O
;	O
if	O
(	O
drawn	enum(int,int)
)	O
return	O
0	int
;	O
if	O
(	O
type	enum(int,int,int,int,int,int,int)
<	O
0	int
)	O
return	O
0	int
;	O
type	enum(int,int,int,int,int,int,int)
%=	O
256	int
;	O
_API_savestate	O
(	O
S___	O
(	O
_plotter	*(struct)
)	O
)	O
;	O
if	O
(	O
_plotter	*(struct)
->	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
display_coors_type	int
!=	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
)	O
{	O
x_dev	double
=	O
XD	O
(	O
x	double
,	O
y	double
)	O
;	O
y_dev	double
=	O
YD	O
(	O
x	double
,	O
y	double
)	O
;	O
delta_x_dev	double
=	O
IROUND	O
(	O
x_dev	double
)	O
-	O
x_dev	double
;	O
delta_y_dev	double
=	O
IROUND	O
(	O
y_dev	double
)	O
-	O
y_dev	double
;	O
delta_x_user	double
=	O
XUV	O
(	O
delta_x_dev	double
,	O
delta_y_dev	double
)	O
;	O
delta_y_user	double
=	O
YUV	O
(	O
delta_x_dev	double
,	O
delta_y_dev	double
)	O
;	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pos	struct(double,double)
.	O
x	double
+=	O
delta_x_user	double
;	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pos	struct(double,double)
.	O
y	double
+=	O
delta_y_user	double
;	O
}	O
if	O
(	O
type	enum(int,int,int,int,int,int,int)
>	O
31	int
)	O
{	O
_API_pentype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_ffontsize	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
)	O
;	O
_API_textangle	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
label_buf	array(char)
[	O
0	int
]	O
=	O
(	O
char	O
)	O
type	enum(int,int,int,int,int,int,int)
;	O
label_buf	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
_API_alabel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
'c'	O
,	O
'c'	O
,	O
label_buf	array(char)
)	O
;	O
}	O
else	O
{	O
_API_pentype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_linemod	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
"solid"	*(char)
)	O
;	O
_API_capmod	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
"butt"	*(char)
)	O
;	O
_API_joinmod	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
"miter"	*(char)
)	O
;	O
_API_flinewidth	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
LINE_SCALE	O
*	O
size	double
)	O
;	O
_API_fillcolor	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
fgcolor	struct(int,int,int)
.	O
red	int
,	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
fgcolor	struct(int,int,int)
.	O
green	int
,	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
fgcolor	struct(int,int,int)
.	O
blue	int
)	O
;	O
if	O
(	O
(	O
_plotter	*(struct)
->	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
display_coors_type	int
==	O
(	O
int	O
)	O
DISP_DEVICE_COORS_INTEGER_LIBXMI	int
)	O
&&	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
quantized_device_line_width	int
==	O
1	int
)	O
_API_flinewidth	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
)	O
;	O
size	double
*=	O
(	O
0.5	int
*	O
MAXIMUM_MARKER_DIMENSION	O
)	O
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int)
)	O
{	O
case	O
(	O
int	O
)	O
M_NONE	int
:	O
default	O
:	O
break	O
;	O
case	O
(	O
int	O
)	O
M_DOT	int
:	O
if	O
(	O
_plotter	*(struct)
->	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
display_model_type	int
==	O
(	O
int	O
)	O
DISP_MODEL_PHYSICAL	int
||	O
_plotter	*(struct)
->	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
display_coors_type	int
==	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
)	O
{	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.0	int
,	O
RELATIVE_DOT_SIZE	int
*	O
size	double
)	O
;	O
}	O
else	O
_API_fpointrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.0	int
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_PLUS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
2	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_ASTERISK	int
:	O
{	O
double	O
vert	double
=	O
0.5	int
*	O
size	double
;	O
double	O
hori	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
hori	double
,	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
hori	double
,	O
-	O
vert	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
hori	double
,	O
-	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
hori	double
,	O
vert	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
hori	double
,	O
-	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
hori	double
,	O
vert	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
hori	double
,	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
hori	double
,	O
-	O
vert	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_CIRCLE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_CROSS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
2	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_STAR	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
2	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
,	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_INVERTED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
,	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_INVERTED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_CIRCLE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_STARBURST	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_PLUS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
2	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_CROSS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
2	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
2	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
1.5	int
*	O
size	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	*(struct)
)	O
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_FANCY_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
1.5	int
*	O
size	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_FANCY_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	*(struct)
)	O
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
,	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_INVERTED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_CIRCLE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_FANCY_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
1.5	int
*	O
size	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_FANCY_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	*(struct)
)	O
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_OCTAGON	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_OCTAGON	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	*(struct)
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
_plotter	*(struct)
->	O
data	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*(struct`))),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*(char),*(char),*(char),enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`))),*(struct(*(struct`),*(struct`),*(char),long,*(char),*(char),long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct(int,int,int),enum(int,int),*(void),*(struct`)))))
->	O
display_coors_type	int
!=	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
)	O
{	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pos	struct(double,double)
.	O
x	double
-=	O
delta_x_user	double
;	O
_plotter	*(struct)
->	O
drawstate	*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*(struct`),int,int,enum(int,int),struct(double,double),double,double,double,double,struct(double,double),struct(double,double),enum(int,int))),*(*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int)))),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct`),*(*`),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct`)))))
->	O
pos	struct(double,double)
.	O
y	double
-=	O
delta_y_user	double
;	O
}	O
_API_restorestate	O
(	O
S___	O
(	O
_plotter	*(struct)
)	O
)	O
;	O
return	O
0	int
;	O
}	O
bool	enum(int,int)
_pl_g_paint_marker	(*(struct(*((*`)->(void)),*((*`)->(void)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`,int)->(void)),*((*`,int,double)->(enum(int,int))),*((*`)->(void)),*((*`,*`,int,int)->(void)),*((*`,*`,int,int)->(double)),*((*`,*`)->(double)),*((*`)->(enum(int,int))),*((*`)->(enum(int,int))),*((*`,*`)->(void)),*((*`,*`)->(void)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*`,*`,*`,array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*`,int,int,enum(int,int),int,int,int,int,double,double,double,double,*`,double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*`,*`)),*(struct(struct`,struct`,*`,*`,int,struct`,*`,int,*`,int,enum(int,int),*`,int,*`,int,double,double,enum(int,int),double,int,*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,*`,double,double,double,double,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct`,struct`,struct`,char,char,char,enum(int,int),enum(int,int),enum(int,int),*`)),*(void),int,int,*(void),*(void),enum(int,int),struct(double,double),enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,struct(int,int,int),struct(int,int,int),struct(int,int,int),int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct(int,int),struct(int,int),enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct(double,double),struct(double,double),enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct(int,int),int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct(int,int,int),enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct(int,int,int),*(void),int,*(void),*(void),array(struct(int,int,int)),int,enum(int,int),int,int,int,struct(int,int),array(struct(int,int,int)),int,enum(int,int))),int,double)->(enum(int,int))
(	O
R___	O
(	O
Plotter	struct(*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),int)->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),int,double)->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char),int,int)->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char),int,int)->(double)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char))->(double)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))))->(enum(int,int))),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char))->(void)),*((*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,enum(int,int),struct`,enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,struct`,struct`,struct`,int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct`,struct`,enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct`,struct`,enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct`,int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,struct`,struct`,enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct`,enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct`,*`,int,*`,*`,array(struct(int,int,int)),int,enum(int,int),int,int,int,struct`,array(struct(int,int,int)),int,enum(int,int))),*(char))->(void)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),array(*(void)),int,int,int,int,int,int,int,int,int,int,int,int,int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int,int,int),enum(int,int),*(struct(*`)),int,int,enum(int,int),int,int,int,int,double,double,double,double,*(struct(*`,*`,*`,enum(int,int),double,double,double,double,double,double)),double,double,double,double,double,double,array(double),enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),int,enum(int,int),enum(int,int),enum(int,int),enum(int,int),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)),*(struct(*`,*`,*`,long,*`,*`,long,long,double,double,double,double,array(enum(int,int)),array(enum(int,int)),struct`,enum(int,int),*`,*`)))),*(struct(struct(double,double),struct(array(double),array(double),enum(int,int),enum(int,int),enum(int,int)),*(struct(enum(int,int,int,int),double,double,double,double,*`,int,int,enum(int,int),struct`,double,double,double,double,struct`,struct`,enum(int,int))),*(*(struct`)),int,struct(double,double),*(char),int,*(char),int,enum(int,int),*(char),int,*(char),int,double,double,enum(int,int),double,int,*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,*(char),double,double,double,double,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct(int,int,int),struct(int,int,int),struct(int,int,int),char,char,char,enum(int,int),enum(int,int),enum(int,int),*(struct(struct`,struct`,*`,*`,int,struct`,*`,int,*`,int,enum(int,int),*`,int,*`,int,double,double,enum(int,int),double,int,*`,int,double,enum(int,int),int,int,int,*`,double,enum(int,int),double,*`,double,double,double,double,int,int,int,enum(int,int),struct`,struct`,struct`,struct`,enum(int,int),double,double,double,int,int,int,int,double,double,double,double,double,double,int,int,int,struct`,struct`,struct`,char,char,char,enum(int,int),enum(int,int),enum(int,int),*`)))),*(void),int,int,*(void),*(void),enum(int,int),struct(double,double),enum(int,int),array(double),int,int,enum(int,int),int,int,double,double,enum(int,int),*(double),int,double,enum(int,int),int,int,int,*(char),double,enum(int,int),double,struct(int,int,int),struct(int,int,int),struct(int,int,int),int,int,int,enum(int,int),enum(int,int),int,int,enum(int,int),struct(int,int),struct(int,int),enum(int,int),int,enum(int,int),int,int,enum(int,int),enum(int,int),int,int,double,struct(double,double),struct(double,double),enum(int,int),enum(int,int),enum(int,int),enum(int,int),array(struct(int,int,int)),array(int),int,int,enum(int,int),enum(int,int),double,int,int,int,double,int,double,double,int,double,double,int,int,int,int,int,int,int,int,double,double,double,double,double,enum(int,int),struct(int,int),int,int,array(long),enum(int,int),int,int,int,int,int,int,int,enum(int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),struct(int,int,int),enum(int,int),int,double,int,int,int,int,int,int,double,int,int,int,int,enum(int,int),double,int,int,int,int,int,int,int,int,int,int,int,int,int,int,double,double,double,double,double,double,double,double,enum(int,int),enum(int,int),enum(int,int),enum(int,int),int,int,double,int,double,int,array(double),enum(int,int),enum(int,int),struct(int,int,int),enum(int,int),enum(int,int),int,int,int,enum(int,int),int,int,enum(int,int),enum(int,int),struct(int,int,int),*(void),int,*(void),*(void),array(struct(int,int,int)),int,enum(int,int),int,int,int,struct(int,int),array(struct(int,int,int)),int,enum(int,int))
*	O
_plotter	*(struct)
)	O
int	O
type	enum(int,int,int,int,int,int,int)
,	O
double	O
size	double
)	O
{	O
return	O
false	int
;	O
}	O
