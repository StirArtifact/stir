int	O
save_cwd	(*(struct(int,*(char))))->(int)
(	O
struct	O
saved_cwd	struct(int,*(char))
*	O
cwd	*(struct(int,*(char)))
)	O
{	O
cwd	*(struct(int,*(char)))
->	O
name	*(char)
=	O
NULL	O
;	O
cwd	*(struct(int,*(char)))
->	O
desc	int
=	O
open	(*(char),int)->(int)
(	O
"."	*(char)
,	O
O_SEARCH	O
|	O
O_CLOEXEC	O
)	O
;	O
if	O
(	O
!	O
GNULIB_FCNTL_SAFER	int
)	O
cwd	*(struct(int,*(char)))
->	O
desc	int
=	O
fd_safer_flag	(int,int)->(int)
(	O
cwd	*(struct(int,*(char)))
->	O
desc	int
,	O
O_CLOEXEC	O
)	O
;	O
if	O
(	O
cwd	*(struct(int,*(char)))
->	O
desc	int
<	O
0	int
)	O
{	O
cwd	*(struct(int,*(char)))
->	O
name	*(char)
=	O
getcwd	(*(char),long)->(*(char))
(	O
NULL	O
,	O
0	int
)	O
;	O
return	O
cwd	*(struct(int,*(char)))
->	O
name	*(char)
?	O
0	int
:	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
restore_cwd	(*(struct(int,*(char))))->(int)
(	O
const	O
struct	O
saved_cwd	struct(int,*(char))
*	O
cwd	*(struct(int,*(char)))
)	O
{	O
if	O
(	O
0	int
<=	O
cwd	*(struct(int,*(char)))
->	O
desc	int
)	O
return	O
fchdir	(int)->(int)
(	O
cwd	*(struct(int,*(char)))
->	O
desc	int
)	O
;	O
else	O
return	O
chdir_long	(*(char))->(int)
(	O
cwd	*(struct(int,*(char)))
->	O
name	*(char)
)	O
;	O
}	O
void	O
free_cwd	(*(struct(int,*(char))))->(void)
(	O
struct	O
saved_cwd	struct(int,*(char))
*	O
cwd	*(struct(int,*(char)))
)	O
{	O
if	O
(	O
cwd	*(struct(int,*(char)))
->	O
desc	int
>=	O
0	int
)	O
close	*((*(void))->(int))
(	O
cwd	*(struct(int,*(char)))
->	O
desc	int
)	O
;	O
free	(*(void))->(void)
(	O
cwd	*(struct(int,*(char)))
->	O
name	*(char)
)	O
;	O
}	O
