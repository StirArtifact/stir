inline	O
static	O
int	O
locMax3	(int,int,int)->(int)
(	O
const	O
int	O
a	double
,	O
const	O
int	O
b	double
,	O
const	O
int	O
c	int
)	O
{	O
int	O
d	int
=	O
GSL_MAX	O
(	O
a	double
,	O
b	double
)	O
;	O
return	O
GSL_MAX	O
(	O
d	int
,	O
c	int
)	O
;	O
}	O
inline	O
static	O
int	O
locMin3	(int,int,int)->(int)
(	O
const	O
int	O
a	double
,	O
const	O
int	O
b	double
,	O
const	O
int	O
c	int
)	O
{	O
int	O
d	int
=	O
GSL_MIN	O
(	O
a	double
,	O
b	double
)	O
;	O
return	O
GSL_MIN	O
(	O
d	int
,	O
c	int
)	O
;	O
}	O
inline	O
static	O
int	O
locMin5	(int,int,int,int,int)->(int)
(	O
const	O
int	O
a	double
,	O
const	O
int	O
b	double
,	O
const	O
int	O
c	int
,	O
const	O
int	O
d	int
,	O
const	O
int	O
e	int
)	O
{	O
int	O
f	*(double)
=	O
GSL_MIN	O
(	O
a	double
,	O
b	double
)	O
;	O
int	O
g	int
=	O
GSL_MIN	O
(	O
c	int
,	O
d	int
)	O
;	O
int	O
h	int
=	O
GSL_MIN	O
(	O
f	*(double)
,	O
g	int
)	O
;	O
return	O
GSL_MIN	O
(	O
e	int
,	O
h	int
)	O
;	O
}	O
static	O
int	O
delta	(int,int,int,*(struct(double,double)))->(int)
(	O
int	O
ta	int
,	O
int	O
tb	int
,	O
int	O
tc	int
,	O
gsl_sf_result	struct(double,double)
*	O
d	int
)	O
{	O
gsl_sf_result	struct(double,double)
f1	struct(double,double)
,	O
f2	struct(double,double)
,	O
f3	struct(double,double)
,	O
f4	struct(double,double)
;	O
int	O
status	int
=	O
0	int
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
ta	int
+	O
tb	int
-	O
tc	int
)	O
/	O
2	int
,	O
&	O
f1	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
ta	int
+	O
tc	int
-	O
tb	int
)	O
/	O
2	int
,	O
&	O
f2	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
tb	int
+	O
tc	int
-	O
ta	int
)	O
/	O
2	int
,	O
&	O
f3	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
ta	int
+	O
tb	int
+	O
tc	int
)	O
/	O
2	int
+	O
1	int
,	O
&	O
f4	struct(double,double)
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
OVERFLOW_ERROR	O
(	O
d	int
)	O
;	O
}	O
d	int
->	O
val	double
=	O
f1	struct(double,double)
.	O
val	double
*	O
f2	struct(double,double)
.	O
val	double
*	O
f3	struct(double,double)
.	O
val	double
/	O
f4	struct(double,double)
.	O
val	double
;	O
d	int
->	O
err	double
=	O
4.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	(double)->(double)
(	O
d	int
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
triangle_selection_fails	(int,int,int)->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
)	O
{	O
return	O
(	O
(	O
two_jb	int
<	O
abs	(int)->(int)
(	O
two_ja	int
-	O
two_jc	int
)	O
)	O
||	O
(	O
two_jb	int
>	O
two_ja	int
+	O
two_jc	int
)	O
||	O
GSL_IS_ODD	O
(	O
two_ja	int
+	O
two_jb	int
+	O
two_jc	int
)	O
)	O
;	O
}	O
static	O
int	O
m_selection_fails	(int,int,int,int,int,int)->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_ma	int
,	O
int	O
two_mb	int
,	O
int	O
two_mc	int
)	O
{	O
return	O
(	O
abs	(int)->(int)
(	O
two_ma	int
)	O
>	O
two_ja	int
||	O
abs	(int)->(int)
(	O
two_mb	int
)	O
>	O
two_jb	int
||	O
abs	(int)->(int)
(	O
two_mc	int
)	O
>	O
two_jc	int
||	O
GSL_IS_ODD	O
(	O
two_ja	int
+	O
two_ma	int
)	O
||	O
GSL_IS_ODD	O
(	O
two_jb	int
+	O
two_mb	int
)	O
||	O
GSL_IS_ODD	O
(	O
two_jc	int
+	O
two_mc	int
)	O
||	O
(	O
two_ma	int
+	O
two_mb	int
+	O
two_mc	int
)	O
!=	O
0	int
)	O
;	O
}	O
int	O
gsl_sf_coupling_3j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_ma	int
,	O
int	O
two_mb	int
,	O
int	O
two_mc	int
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
if	O
(	O
two_ja	int
<	O
0	int
||	O
two_jb	int
<	O
0	int
||	O
two_jc	int
<	O
0	int
)	O
{	O
DOMAIN_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
else	O
if	O
(	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
)	O
||	O
m_selection_fails	(int,int,int,int,int,int)->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
two_ma	int
,	O
two_mb	int
,	O
two_mc	int
)	O
)	O
{	O
result	*(struct(double,double))
->	O
val	double
=	O
0.0	int
;	O
result	*(struct(double,double))
->	O
err	double
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
two_ma	int
==	O
0	int
&&	O
two_mb	int
==	O
0	int
&&	O
two_mc	int
==	O
0	int
&&	O
(	O
(	O
two_ja	int
+	O
two_jb	int
+	O
two_jc	int
)	O
%	O
4	int
==	O
2	int
)	O
)	O
{	O
result	*(struct(double,double))
->	O
val	double
=	O
0.0	int
;	O
result	*(struct(double,double))
->	O
err	double
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
int	O
jca	int
=	O
(	O
-	O
two_ja	int
+	O
two_jb	int
+	O
two_jc	int
)	O
/	O
2	int
,	O
jcb	int
=	O
(	O
two_ja	int
-	O
two_jb	int
+	O
two_jc	int
)	O
/	O
2	int
,	O
jcc	int
=	O
(	O
two_ja	int
+	O
two_jb	int
-	O
two_jc	int
)	O
/	O
2	int
,	O
jmma	int
=	O
(	O
two_ja	int
-	O
two_ma	int
)	O
/	O
2	int
,	O
jmmb	int
=	O
(	O
two_jb	int
-	O
two_mb	int
)	O
/	O
2	int
,	O
jmmc	int
=	O
(	O
two_jc	int
-	O
two_mc	int
)	O
/	O
2	int
,	O
jpma	int
=	O
(	O
two_ja	int
+	O
two_ma	int
)	O
/	O
2	int
,	O
jpmb	int
=	O
(	O
two_jb	int
+	O
two_mb	int
)	O
/	O
2	int
,	O
jpmc	int
=	O
(	O
two_jc	int
+	O
two_mc	int
)	O
/	O
2	int
,	O
jsum	int
=	O
(	O
two_ja	int
+	O
two_jb	int
+	O
two_jc	int
)	O
/	O
2	int
,	O
kmin	int
=	O
locMax3	(int,int,int)->(int)
(	O
0	int
,	O
jpmb	int
-	O
jmmc	int
,	O
jmma	int
-	O
jpmc	int
)	O
,	O
kmax	int
=	O
locMin3	(int,int,int)->(int)
(	O
jcc	int
,	O
jmma	int
,	O
jpmb	int
)	O
,	O
k	int
,	O
sign	int
=	O
GSL_IS_ODD	O
(	O
kmin	int
-	O
jpma	int
+	O
jmmb	int
)	O
?	O
-	O
1	int
:	O
1	int
,	O
status	int
=	O
0	int
;	O
double	O
sum_pos	double
=	O
0.0	int
,	O
sum_neg	double
=	O
0.0	int
,	O
sum_err	double
=	O
0.0	int
;	O
gsl_sf_result	struct(double,double)
bc1	struct(double,double)
,	O
bc2	struct(double,double)
,	O
bc3	struct(double,double)
,	O
bcn1	struct(double,double)
,	O
bcn2	struct(double,double)
,	O
bcd1	struct(double,double)
,	O
bcd2	struct(double,double)
,	O
bcd3	struct(double,double)
,	O
bcd4	struct(double,double)
,	O
term	struct(double,double)
,	O
lnorm	struct(double,double)
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
jcc	int
,	O
&	O
bcn1	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
two_jb	int
,	O
jcc	int
,	O
&	O
bcn2	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
jsum	int
+	O
1	int
,	O
jcc	int
,	O
&	O
bcd1	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
jmma	int
,	O
&	O
bcd2	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
two_jb	int
,	O
jmmb	int
,	O
&	O
bcd3	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
two_jc	int
,	O
jpmc	int
,	O
&	O
bcd4	struct(double,double)
)	O
;	O
lnorm	struct(double,double)
.	O
val	double
=	O
0.5	int
*	O
(	O
bcn1	struct(double,double)
.	O
val	double
+	O
bcn2	struct(double,double)
.	O
val	double
-	O
bcd1	struct(double,double)
.	O
val	double
-	O
bcd2	struct(double,double)
.	O
val	double
-	O
bcd3	struct(double,double)
.	O
val	double
-	O
bcd4	struct(double,double)
.	O
val	double
-	O
log	(double)->(double)
(	O
two_jc	int
+	O
1.0	int
)	O
)	O
;	O
lnorm	struct(double,double)
.	O
err	double
=	O
0.5	int
*	O
(	O
bcn1	struct(double,double)
.	O
err	double
+	O
bcn2	struct(double,double)
.	O
err	double
+	O
bcd1	struct(double,double)
.	O
err	double
+	O
bcd2	struct(double,double)
.	O
err	double
+	O
bcd3	struct(double,double)
.	O
err	double
+	O
bcd4	struct(double,double)
.	O
err	double
+	O
GSL_DBL_EPSILON	int
*	O
log	(double)->(double)
(	O
two_jc	int
+	O
1.0	int
)	O
)	O
;	O
for	O
(	O
k	int
=	O
kmin	int
;	O
k	int
<=	O
kmax	int
;	O
k	int
++	O
)	O
{	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
jcc	int
,	O
k	int
,	O
&	O
bc1	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
jcb	int
,	O
jmma	int
-	O
k	int
,	O
&	O
bc2	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_lnchoose_e	(int,int,*(struct(double,double)))->(int)
(	O
jca	int
,	O
jpmb	int
-	O
k	int
,	O
&	O
bc3	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_exp_err_e	(double,double,*(struct(double,double)))->(int)
(	O
bc1	struct(double,double)
.	O
val	double
+	O
bc2	struct(double,double)
.	O
val	double
+	O
bc3	struct(double,double)
.	O
val	double
+	O
lnorm	struct(double,double)
.	O
val	double
,	O
bc1	struct(double,double)
.	O
err	double
+	O
bc2	struct(double,double)
.	O
err	double
+	O
bc3	struct(double,double)
.	O
err	double
+	O
lnorm	struct(double,double)
.	O
err	double
,	O
&	O
term	struct(double,double)
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
OVERFLOW_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
if	O
(	O
sign	int
<	O
0	int
)	O
{	O
sum_neg	double
+=	O
term	struct(double,double)
.	O
val	double
;	O
}	O
else	O
{	O
sum_pos	double
+=	O
term	struct(double,double)
.	O
val	double
;	O
}	O
sum_err	double
+=	O
term	struct(double,double)
.	O
err	double
;	O
sign	int
=	O
-	O
sign	int
;	O
}	O
result	*(struct(double,double))
->	O
val	double
=	O
sum_pos	double
-	O
sum_neg	double
;	O
result	*(struct(double,double))
->	O
err	double
=	O
sum_err	double
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
sum_pos	double
+	O
sum_neg	double
)	O
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
kmax	int
-	O
kmin	int
)	O
*	O
fabs	(double)->(double)
(	O
result	*(struct(double,double))
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
int	O
gsl_sf_coupling_6j_INCORRECT_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
return	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_je	int
,	O
two_jd	int
,	O
two_jc	int
,	O
two_jf	int
,	O
result	*(struct(double,double))
)	O
;	O
}	O
int	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
if	O
(	O
two_ja	int
<	O
0	int
||	O
two_jb	int
<	O
0	int
||	O
two_jc	int
<	O
0	int
||	O
two_jd	int
<	O
0	int
||	O
two_je	int
<	O
0	int
||	O
two_jf	int
<	O
0	int
)	O
{	O
DOMAIN_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
else	O
if	O
(	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_ja	int
,	O
two_je	int
,	O
two_jf	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_jb	int
,	O
two_jd	int
,	O
two_jf	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_je	int
,	O
two_jd	int
,	O
two_jc	int
)	O
)	O
{	O
result	*(struct(double,double))
->	O
val	double
=	O
0.0	int
;	O
result	*(struct(double,double))
->	O
err	double
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
gsl_sf_result	struct(double,double)
n1	struct(double,double)
;	O
gsl_sf_result	struct(double,double)
d1	struct(double,double)
,	O
d2	struct(double,double)
,	O
d3	struct(double,double)
,	O
d4	struct(double,double)
,	O
d5	struct(double,double)
,	O
d6	struct(double,double)
;	O
double	O
norm	double
;	O
int	O
tk	int
,	O
tkmin	int
,	O
tkmax	int
;	O
double	O
phase	double
;	O
double	O
sum_pos	double
=	O
0.0	int
;	O
double	O
sum_neg	double
=	O
0.0	int
;	O
double	O
sumsq_err	double
=	O
0.0	int
;	O
int	O
status	int
=	O
0	int
;	O
status	int
+=	O
delta	(int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
&	O
d1	struct(double,double)
)	O
;	O
status	int
+=	O
delta	(int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_je	int
,	O
two_jf	int
,	O
&	O
d2	struct(double,double)
)	O
;	O
status	int
+=	O
delta	(int,int,int,*(struct(double,double)))->(int)
(	O
two_jb	int
,	O
two_jd	int
,	O
two_jf	int
,	O
&	O
d3	struct(double,double)
)	O
;	O
status	int
+=	O
delta	(int,int,int,*(struct(double,double)))->(int)
(	O
two_je	int
,	O
two_jd	int
,	O
two_jc	int
,	O
&	O
d4	struct(double,double)
)	O
;	O
if	O
(	O
status	int
!=	O
GSL_SUCCESS	int
)	O
{	O
OVERFLOW_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
norm	double
=	O
sqrt	(double)->(double)
(	O
d1	struct(double,double)
.	O
val	double
)	O
*	O
sqrt	(double)->(double)
(	O
d2	struct(double,double)
.	O
val	double
)	O
*	O
sqrt	(double)->(double)
(	O
d3	struct(double,double)
.	O
val	double
)	O
*	O
sqrt	(double)->(double)
(	O
d4	struct(double,double)
.	O
val	double
)	O
;	O
tkmin	int
=	O
locMax3	(int,int,int)->(int)
(	O
0	int
,	O
two_ja	int
+	O
two_jd	int
-	O
two_jc	int
-	O
two_jf	int
,	O
two_jb	int
+	O
two_je	int
-	O
two_jc	int
-	O
two_jf	int
)	O
;	O
tkmax	int
=	O
locMin5	(int,int,int,int,int)->(int)
(	O
two_ja	int
+	O
two_jb	int
+	O
two_je	int
+	O
two_jd	int
+	O
2	int
,	O
two_ja	int
+	O
two_jb	int
-	O
two_jc	int
,	O
two_je	int
+	O
two_jd	int
-	O
two_jc	int
,	O
two_ja	int
+	O
two_je	int
-	O
two_jf	int
,	O
two_jb	int
+	O
two_jd	int
-	O
two_jf	int
)	O
;	O
phase	double
=	O
GSL_IS_ODD	O
(	O
(	O
two_ja	int
+	O
two_jb	int
+	O
two_je	int
+	O
two_jd	int
+	O
tkmin	int
)	O
/	O
2	int
)	O
?	O
-	O
1.0	int
:	O
1.0	int
;	O
for	O
(	O
tk	int
=	O
tkmin	int
;	O
tk	int
<=	O
tkmax	int
;	O
tk	int
+=	O
2	int
)	O
{	O
double	O
term	struct(double,double)
;	O
double	O
term_err	double
;	O
gsl_sf_result	struct(double,double)
den_1	struct(double,double)
,	O
den_2	struct(double,double)
;	O
gsl_sf_result	struct(double,double)
d1_a	struct(double,double)
,	O
d1_b	struct(double,double)
;	O
status	int
=	O
0	int
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_ja	int
+	O
two_jb	int
+	O
two_je	int
+	O
two_jd	int
-	O
tk	int
)	O
/	O
2	int
+	O
1	int
,	O
&	O
n1	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
tk	int
/	O
2	int
,	O
&	O
d1_a	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_jc	int
+	O
two_jf	int
-	O
two_ja	int
-	O
two_jd	int
+	O
tk	int
)	O
/	O
2	int
,	O
&	O
d1_b	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_jc	int
+	O
two_jf	int
-	O
two_jb	int
-	O
two_je	int
+	O
tk	int
)	O
/	O
2	int
,	O
&	O
d2	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_ja	int
+	O
two_jb	int
-	O
two_jc	int
-	O
tk	int
)	O
/	O
2	int
,	O
&	O
d3	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_je	int
+	O
two_jd	int
-	O
two_jc	int
-	O
tk	int
)	O
/	O
2	int
,	O
&	O
d4	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_ja	int
+	O
two_je	int
-	O
two_jf	int
-	O
tk	int
)	O
/	O
2	int
,	O
&	O
d5	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_fact_e	(int,*(struct(double,double)))->(int)
(	O
(	O
two_jb	int
+	O
two_jd	int
-	O
two_jf	int
-	O
tk	int
)	O
/	O
2	int
,	O
&	O
d6	struct(double,double)
)	O
;	O
if	O
(	O
status	int
!=	O
GSL_SUCCESS	int
)	O
{	O
OVERFLOW_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
d1	struct(double,double)
.	O
val	double
=	O
d1_a	struct(double,double)
.	O
val	double
*	O
d1_b	struct(double,double)
.	O
val	double
;	O
d1	struct(double,double)
.	O
err	double
=	O
d1_a	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d1_b	struct(double,double)
.	O
val	double
)	O
+	O
fabs	(double)->(double)
(	O
d1_a	struct(double,double)
.	O
val	double
)	O
*	O
d1_b	struct(double,double)
.	O
err	double
;	O
den_1	struct(double,double)
.	O
val	double
=	O
d1	struct(double,double)
.	O
val	double
*	O
d2	struct(double,double)
.	O
val	double
*	O
d3	struct(double,double)
.	O
val	double
;	O
den_1	struct(double,double)
.	O
err	double
=	O
d1	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d2	struct(double,double)
.	O
val	double
*	O
d3	struct(double,double)
.	O
val	double
)	O
;	O
den_1	struct(double,double)
.	O
err	double
+=	O
d2	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d1	struct(double,double)
.	O
val	double
*	O
d3	struct(double,double)
.	O
val	double
)	O
;	O
den_1	struct(double,double)
.	O
err	double
+=	O
d3	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d1	struct(double,double)
.	O
val	double
*	O
d2	struct(double,double)
.	O
val	double
)	O
;	O
den_2	struct(double,double)
.	O
val	double
=	O
d4	struct(double,double)
.	O
val	double
*	O
d5	struct(double,double)
.	O
val	double
*	O
d6	struct(double,double)
.	O
val	double
;	O
den_2	struct(double,double)
.	O
err	double
=	O
d4	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d5	struct(double,double)
.	O
val	double
*	O
d6	struct(double,double)
.	O
val	double
)	O
;	O
den_2	struct(double,double)
.	O
err	double
+=	O
d5	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d4	struct(double,double)
.	O
val	double
*	O
d6	struct(double,double)
.	O
val	double
)	O
;	O
den_2	struct(double,double)
.	O
err	double
+=	O
d6	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
d4	struct(double,double)
.	O
val	double
*	O
d5	struct(double,double)
.	O
val	double
)	O
;	O
term	struct(double,double)
=	O
phase	double
*	O
n1	struct(double,double)
.	O
val	double
/	O
den_1	struct(double,double)
.	O
val	double
/	O
den_2	struct(double,double)
.	O
val	double
;	O
phase	double
=	O
-	O
phase	double
;	O
term_err	double
=	O
n1	struct(double,double)
.	O
err	double
/	O
fabs	(double)->(double)
(	O
den_1	struct(double,double)
.	O
val	double
)	O
/	O
fabs	(double)->(double)
(	O
den_2	struct(double,double)
.	O
val	double
)	O
;	O
term_err	double
+=	O
fabs	(double)->(double)
(	O
term	struct(double,double)
/	O
den_1	struct(double,double)
.	O
val	double
)	O
*	O
den_1	struct(double,double)
.	O
err	double
;	O
term_err	double
+=	O
fabs	(double)->(double)
(	O
term	struct(double,double)
/	O
den_2	struct(double,double)
.	O
val	double
)	O
*	O
den_2	struct(double,double)
.	O
err	double
;	O
if	O
(	O
term	struct(double,double)
>=	O
0.0	int
)	O
{	O
sum_pos	double
+=	O
norm	double
*	O
term	struct(double,double)
;	O
}	O
else	O
{	O
sum_neg	double
-=	O
norm	double
*	O
term	struct(double,double)
;	O
}	O
sumsq_err	double
+=	O
norm	double
*	O
norm	double
*	O
term_err	double
*	O
term_err	double
;	O
}	O
result	*(struct(double,double))
->	O
val	double
=	O
sum_pos	double
-	O
sum_neg	double
;	O
result	*(struct(double,double))
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
sum_pos	double
+	O
sum_neg	double
)	O
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
sqrt	(double)->(double)
(	O
sumsq_err	double
/	O
(	O
0.5	int
*	O
(	O
tkmax	int
-	O
tkmin	int
)	O
+	O
1.0	int
)	O
)	O
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
tkmax	int
-	O
tkmin	int
+	O
2.0	int
)	O
*	O
fabs	(double)->(double)
(	O
result	*(struct(double,double))
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
int	O
gsl_sf_coupling_RacahW_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
int	O
status	int
=	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_je	int
,	O
two_jd	int
,	O
two_jc	int
,	O
two_jf	int
,	O
result	*(struct(double,double))
)	O
;	O
int	O
phase_sum	int
=	O
(	O
two_ja	int
+	O
two_jb	int
+	O
two_jc	int
+	O
two_jd	int
)	O
/	O
2	int
;	O
result	*(struct(double,double))
->	O
val	double
*=	O
(	O
GSL_IS_ODD	O
(	O
phase_sum	int
)	O
?	O
-	O
1.0	int
:	O
1.0	int
)	O
;	O
return	O
status	int
;	O
}	O
int	O
gsl_sf_coupling_9j_e	(int,int,int,int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
,	O
int	O
two_jg	int
,	O
int	O
two_jh	int
,	O
int	O
two_ji	int
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
if	O
(	O
two_ja	int
<	O
0	int
||	O
two_jb	int
<	O
0	int
||	O
two_jc	int
<	O
0	int
||	O
two_jd	int
<	O
0	int
||	O
two_je	int
<	O
0	int
||	O
two_jf	int
<	O
0	int
||	O
two_jg	int
<	O
0	int
||	O
two_jh	int
<	O
0	int
||	O
two_ji	int
<	O
0	int
)	O
{	O
DOMAIN_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
else	O
if	O
(	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_jd	int
,	O
two_je	int
,	O
two_jf	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_jg	int
,	O
two_jh	int
,	O
two_ji	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_ja	int
,	O
two_jd	int
,	O
two_jg	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_jb	int
,	O
two_je	int
,	O
two_jh	int
)	O
||	O
triangle_selection_fails	(int,int,int)->(int)
(	O
two_jc	int
,	O
two_jf	int
,	O
two_ji	int
)	O
)	O
{	O
result	*(struct(double,double))
->	O
val	double
=	O
0.0	int
;	O
result	*(struct(double,double))
->	O
err	double
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
int	O
tk	int
;	O
int	O
tkmin	int
=	O
locMax3	(int,int,int)->(int)
(	O
abs	(int)->(int)
(	O
two_ja	int
-	O
two_ji	int
)	O
,	O
abs	(int)->(int)
(	O
two_jh	int
-	O
two_jd	int
)	O
,	O
abs	(int)->(int)
(	O
two_jb	int
-	O
two_jf	int
)	O
)	O
;	O
int	O
tkmax	int
=	O
locMin3	(int,int,int)->(int)
(	O
two_ja	int
+	O
two_ji	int
,	O
two_jh	int
+	O
two_jd	int
,	O
two_jb	int
+	O
two_jf	int
)	O
;	O
double	O
sum_pos	double
=	O
0.0	int
;	O
double	O
sum_neg	double
=	O
0.0	int
;	O
double	O
sumsq_err	double
=	O
0.0	int
;	O
double	O
phase	double
;	O
for	O
(	O
tk	int
=	O
tkmin	int
;	O
tk	int
<=	O
tkmax	int
;	O
tk	int
+=	O
2	int
)	O
{	O
gsl_sf_result	struct(double,double)
s1	struct(double,double)
,	O
s2	struct(double,double)
,	O
s3	struct(double,double)
;	O
double	O
term	struct(double,double)
;	O
double	O
term_err	double
;	O
int	O
status	int
=	O
0	int
;	O
status	int
+=	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_ji	int
,	O
tk	int
,	O
two_jh	int
,	O
two_jd	int
,	O
two_jg	int
,	O
&	O
s1	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_jb	int
,	O
two_jf	int
,	O
tk	int
,	O
two_jd	int
,	O
two_jh	int
,	O
two_je	int
,	O
&	O
s2	struct(double,double)
)	O
;	O
status	int
+=	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_ji	int
,	O
tk	int
,	O
two_jf	int
,	O
two_jb	int
,	O
two_jc	int
,	O
&	O
s3	struct(double,double)
)	O
;	O
if	O
(	O
status	int
!=	O
GSL_SUCCESS	int
)	O
{	O
OVERFLOW_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
term	struct(double,double)
=	O
s1	struct(double,double)
.	O
val	double
*	O
s2	struct(double,double)
.	O
val	double
*	O
s3	struct(double,double)
.	O
val	double
;	O
term_err	double
=	O
s1	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
s2	struct(double,double)
.	O
val	double
*	O
s3	struct(double,double)
.	O
val	double
)	O
;	O
term_err	double
+=	O
s2	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
s1	struct(double,double)
.	O
val	double
*	O
s3	struct(double,double)
.	O
val	double
)	O
;	O
term_err	double
+=	O
s3	struct(double,double)
.	O
err	double
*	O
fabs	(double)->(double)
(	O
s1	struct(double,double)
.	O
val	double
*	O
s2	struct(double,double)
.	O
val	double
)	O
;	O
if	O
(	O
term	struct(double,double)
>=	O
0.0	int
)	O
{	O
sum_pos	double
+=	O
(	O
tk	int
+	O
1	int
)	O
*	O
term	struct(double,double)
;	O
}	O
else	O
{	O
sum_neg	double
-=	O
(	O
tk	int
+	O
1	int
)	O
*	O
term	struct(double,double)
;	O
}	O
sumsq_err	double
+=	O
(	O
(	O
tk	int
+	O
1	int
)	O
*	O
term_err	double
)	O
*	O
(	O
(	O
tk	int
+	O
1	int
)	O
*	O
term_err	double
)	O
;	O
}	O
phase	double
=	O
GSL_IS_ODD	O
(	O
tkmin	int
)	O
?	O
-	O
1.0	int
:	O
1.0	int
;	O
result	*(struct(double,double))
->	O
val	double
=	O
phase	double
*	O
(	O
sum_pos	double
-	O
sum_neg	double
)	O
;	O
result	*(struct(double,double))
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
sum_pos	double
+	O
sum_neg	double
)	O
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
sqrt	(double)->(double)
(	O
sumsq_err	double
/	O
(	O
0.5	int
*	O
(	O
tkmax	int
-	O
tkmin	int
)	O
+	O
1.0	int
)	O
)	O
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
(	O
tkmax	int
-	O
tkmin	int
+	O
2.0	int
)	O
*	O
fabs	(double)->(double)
(	O
result	*(struct(double,double))
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
double	O
gsl_sf_coupling_3j	(int,int,int,int,int,int)->(double)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_ma	int
,	O
int	O
two_mb	int
,	O
int	O
two_mc	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_coupling_3j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
two_ma	int
,	O
two_mb	int
,	O
two_mc	int
,	O
&	O
result	*(struct(double,double))
)	O
)	O
;	O
}	O
double	O
gsl_sf_coupling_6j_INCORRECT	(int,int,int,int,int,int)->(double)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_coupling_6j_INCORRECT_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
two_jd	int
,	O
two_je	int
,	O
two_jf	int
,	O
&	O
result	*(struct(double,double))
)	O
)	O
;	O
}	O
double	O
gsl_sf_coupling_6j	(int,int,int,int,int,int)->(double)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_coupling_6j_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
two_jd	int
,	O
two_je	int
,	O
two_jf	int
,	O
&	O
result	*(struct(double,double))
)	O
)	O
;	O
}	O
double	O
gsl_sf_coupling_RacahW	(int,int,int,int,int,int)->(double)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_coupling_RacahW_e	(int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
two_jd	int
,	O
two_je	int
,	O
two_jf	int
,	O
&	O
result	*(struct(double,double))
)	O
)	O
;	O
}	O
double	O
gsl_sf_coupling_9j	(int,int,int,int,int,int,int,int,int)->(double)
(	O
int	O
two_ja	int
,	O
int	O
two_jb	int
,	O
int	O
two_jc	int
,	O
int	O
two_jd	int
,	O
int	O
two_je	int
,	O
int	O
two_jf	int
,	O
int	O
two_jg	int
,	O
int	O
two_jh	int
,	O
int	O
two_ji	int
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_coupling_9j_e	(int,int,int,int,int,int,int,int,int,*(struct(double,double)))->(int)
(	O
two_ja	int
,	O
two_jb	int
,	O
two_jc	int
,	O
two_jd	int
,	O
two_je	int
,	O
two_jf	int
,	O
two_jg	int
,	O
two_jh	int
,	O
two_ji	int
,	O
&	O
result	*(struct(double,double))
)	O
)	O
;	O
}	O
