int	O
clever_cache_enable_P	int
=	O
!	O
0	int
;	O
int	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
char	O
*	O
caller	*(char)
)	O
{	O
if	O
(	O
!	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
)	O
)	O
{	O
dprintf	(int,*(char))->(int)
(	O
(	O
diagout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
">>>>ERROR<<<< %s: called with NULL handle.\n"	*(char)
,	O
caller	*(char)
)	O
)	O
;	O
return	O
!	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
(	O
han_seg	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
)	O
)	O
)	O
{	O
dprintf	(int,*(char))->(int)
(	O
(	O
diagout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
">>>>ERROR<<<< %s: called with handle having NULL segment.\n"	*(char)
,	O
caller	*(char)
)	O
)	O
;	O
return	O
!	O
0	int
;	O
}	O
else	O
return	O
0	int
;	O
}	O
int	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
int	O
xcpt	int
,	O
char	O
*	O
caller	*(char)
)	O
{	O
if	O
(	O
(	O
xcpt	int
)	O
==	O
(	O
k_len	int
)	O
)	O
return	O
0	int
;	O
else	O
if	O
(	O
!	O
(	O
(	O
0	int
<=	O
(	O
k_len	int
)	O
)	O
&&	O
(	O
(	O
k_len	int
)	O
<=	O
0xff	int
)	O
)	O
)	O
{	O
dprintf	(int,*(char))->(int)
(	O
(	O
diagout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
">>>>ERROR<<<< %s: key-length, %d, was out of range 0 <= 255.\n"	*(char)
,	O
caller	*(char)
,	O
k_len	int
)	O
)	O
;	O
return	O
!	O
0	int
;	O
}	O
else	O
if	O
(	O
(	O
0	int
<	O
(	O
k_len	int
)	O
)	O
&&	O
(	O
0xff	int
==	O
(	O
(	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
key_str	*(char)
)	O
)	O
[	O
0	int
]	O
)	O
)	O
)	O
)	O
{	O
dprintf	(int,*(char))->(int)
(	O
(	O
diagout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
">>>>ERROR<<<< %s: first byte of key must not be 255.\n"	*(char)
,	O
caller	*(char)
)	O
)	O
;	O
return	O
!	O
0	int
;	O
}	O
else	O
return	O
0	int
;	O
}	O
int	O
bt_get	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char))->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
ans_str	*(char)
)	O
{	O
int	O
pkt	*(int)
[	O
pkt_size	int
]	O
;	O
ENTRY	struct(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct(*`,long,long,int,int)),*(struct(*`,long,long,int,int)),*(struct(*`,int,union`)),*(struct(*`,int,union`)),int,*(long),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long)))
*	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
0	int
;	O
if	O
(	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
key_str	*(char)
,	O
k_len	int
,	O
0	int
,	O
"bt_get"	*(char)
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
"bt_get"	*(char)
)	O
)	O
return	O
argerr	O
;	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
chain_find_ent	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
accread	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
!	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
{	O
get_fct	long
=	O
0x1L	int
+	O
(	O
get_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
else	O
if	O
(	O
(	O
pkt_match_type	O
(	O
pkt	*(int)
)	O
)	O
!=	O
(	O
match	O
)	O
)	O
{	O
get_ct	long
=	O
0x1L	int
+	O
(	O
get_ct	long
)	O
;	O
release_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(void)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
accread	O
)	O
;	O
return	O
notpres	O
;	O
}	O
else	O
{	O
int	O
alen	int
=	O
get_this_val	(*(char),int,*(char))->(int)
(	O
ent_blk	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
,	O
pkt_match_pos	O
(	O
pkt	*(int)
)	O
,	O
ans_str	*(char)
)	O
;	O
get_ct	long
=	O
0x1L	int
+	O
(	O
get_ct	long
)	O
;	O
release_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(void)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
accread	O
)	O
;	O
return	O
alen	int
;	O
}	O
}	O
}	O
int	O
bt_next	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char))->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
ans_str	*(char)
)	O
{	O
int	O
pkt	*(int)
[	O
pkt_size	int
]	O
;	O
ENTRY	struct(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct(*`,long,long,int,int)),*(struct(*`,long,long,int,int)),*(struct(*`,int,union`)),*(struct(*`,int,union`)),int,*(long),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long)))
*	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
0	int
;	O
if	O
(	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
key_str	*(char)
,	O
k_len	int
,	O
-	O
2	int
,	O
"bt_next"	*(char)
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
"bt_next"	*(char)
)	O
)	O
return	O
argerr	O
;	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
chain_find_ent	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
accread	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
!	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
{	O
next_fct	long
=	O
0x1L	int
+	O
(	O
next_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
else	O
{	O
next_ct	long
=	O
0x1L	int
+	O
(	O
next_ct	long
)	O
;	O
{	O
int	O
res	int
=	O
chain_next	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),*(char),int,*(char),*(int))->(int)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
key_str	*(char)
,	O
k_len	int
,	O
ans_str	*(char)
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
clever_cache_enable_P	int
)	O
han_set_last	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
pkt_blk_to_cache	O
(	O
pkt	*(int)
)	O
)	O
;	O
return	O
res	int
;	O
}	O
}	O
}	O
}	O
int	O
bt_prev	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char))->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
ans_str	*(char)
)	O
{	O
int	O
pkt	*(int)
[	O
pkt_size	int
]	O
;	O
ENTRY	struct(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct(*`,long,long,int,int)),*(struct(*`,long,long,int,int)),*(struct(*`,int,union`)),*(struct(*`,int,union`)),int,*(long),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long)))
*	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
0	int
;	O
if	O
(	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
key_str	*(char)
,	O
k_len	int
,	O
-	O
1	int
,	O
"bt_prev"	*(char)
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
"bt_prev"	*(char)
)	O
)	O
return	O
argerr	O
;	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
chain_find_prev_ent	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
accread	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
prev_prev_k_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),*(char),int,int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
key_str	*(char)
,	O
k_len	int
,	O
leaf	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
!	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
{	O
prev_fct	long
=	O
0x1L	int
+	O
(	O
prev_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
else	O
{	O
prev_ct	long
=	O
0x1L	int
+	O
(	O
prev_ct	long
)	O
;	O
if	O
(	O
!	O
(	O
pkt_match_pos	O
(	O
pkt	*(int)
)	O
)	O
)	O
{	O
release_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(void)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
accread	O
)	O
;	O
return	O
notpres	O
;	O
}	O
else	O
{	O
int	O
k_len2	int
=	O
recon_this_key	(*(char),int,*(char),int,int)->(int)
(	O
ent_blk	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
,	O
pkt_match_pos	O
(	O
pkt	*(int)
)	O
,	O
ans_str	*(char)
,	O
0	int
,	O
0x100	int
)	O
;	O
han_set_last	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
ent_id	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
;	O
release_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(void)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
accread	O
)	O
;	O
return	O
k_len2	int
;	O
}	O
}	O
}	O
}	O
int	O
bt_rem	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char))->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
ans_str	*(char)
)	O
{	O
int	O
pkt	*(int)
[	O
pkt_size	int
]	O
;	O
ENTRY	struct(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct(*`,long,long,int,int)),*(struct(*`,long,long,int,int)),*(struct(*`,int,union`)),*(struct(*`,int,union`)),int,*(long),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long)))
*	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
0	int
;	O
if	O
(	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
key_str	*(char)
,	O
k_len	int
,	O
0	int
,	O
"bt_rem"	*(char)
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
"bt_rem"	*(char)
)	O
)	O
return	O
argerr	O
;	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
chain_find_ent	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
accwrite	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
!	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
{	O
rem_fct	long
=	O
0x1L	int
+	O
(	O
rem_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
else	O
{	O
rem_ct	long
=	O
0x1L	int
+	O
(	O
rem_ct	long
)	O
;	O
{	O
int	O
ans	int
=	O
del_chain_rem	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),*(char),int,*(char),*(int),int)->(int)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
key_str	*(char)
,	O
k_len	int
,	O
ans_str	*(char)
,	O
pkt	*(int)
,	O
han_wcb	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
)	O
)	O
;	O
release_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(void)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
accwrite	O
)	O
;	O
return	O
ans	int
;	O
}	O
}	O
}	O
}	O
int	O
bt_rem_range	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char),int)->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
key2_str	*(char)
,	O
int	O
k2_len	int
)	O
{	O
int	O
respkt	*(int)
[	O
pkt_size	int
]	O
;	O
pkt_set_skey_count	O
(	O
respkt	*(int)
,	O
0	int
)	O
;	O
return	O
bt_scan	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(char),int,*(()->(int)),*(long),*(int),int)->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
rem_scan	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
key2_str	*(char)
,	O
k2_len	int
,	O
0	int
,	O
0	int
,	O
respkt	*(int)
,	O
-	O
1	int
)	O
;	O
}	O
int	O
bt_put	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char),int)->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
val_str	*(char)
,	O
int	O
v_len	int
)	O
{	O
ENTRY	struct(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct(*`,long,long,int,int)),*(struct(*`,long,long,int,int)),*(struct(*`,int,union`)),*(struct(*`,int,union`)),int,*(long),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long)))
*	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
0	int
;	O
int	O
pkt	*(int)
[	O
pkt_size	int
]	O
;	O
if	O
(	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
key_str	*(char)
,	O
k_len	int
,	O
0	int
,	O
"bt_put"	*(char)
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
"bt_put"	*(char)
)	O
)	O
return	O
argerr	O
;	O
else	O
if	O
(	O
!	O
(	O
(	O
0	int
<=	O
(	O
v_len	int
)	O
)	O
&&	O
(	O
(	O
v_len	int
)	O
<=	O
0xff	int
)	O
)	O
)	O
return	O
argerr	O
;	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
chain_find_ent	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
accwrite	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
!	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
return	O
unkerr	O
;	O
else	O
{	O
int	O
res_P	int
=	O
chain_put	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),*(char),int,*(char),int,*(int),*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(int)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
key_str	*(char)
,	O
k_len	int
,	O
val_str	*(char)
,	O
v_len	int
,	O
pkt	*(int)
,	O
0	int
,	O
han_wcb	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
)	O
)	O
;	O
if	O
(	O
res_P	int
)	O
{	O
if	O
(	O
clever_cache_enable_P	int
)	O
han_set_last	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
pkt_blk_to_cache	O
(	O
pkt	*(int)
)	O
)	O
;	O
put_ct	long
=	O
0x1L	int
+	O
(	O
put_ct	long
)	O
;	O
return	O
success	int
;	O
}	O
else	O
{	O
put_fct	long
=	O
0x1L	int
+	O
(	O
put_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
}	O
}	O
}	O
int	O
bt_write	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char),int,*(char),int)->(int)
(	O
HAND	struct(*(struct),long,long,int,int)
*	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
unsigned	O
char	O
*	O
key_str	*(char)
,	O
int	O
k_len	int
,	O
unsigned	O
char	O
*	O
val_str	*(char)
,	O
int	O
v_len	int
)	O
{	O
ENTRY	struct(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct(*`,long,long,int,int)),*(struct(*`,long,long,int,int)),*(struct(*`,int,union`)),*(struct(*`,int,union`)),int,*(long),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long)))
*	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
0	int
;	O
int	O
pkt	*(int)
[	O
pkt_size	int
]	O
;	O
if	O
(	O
key_error_P	(*(char),int,int,*(char))->(int)
(	O
key_str	*(char)
,	O
k_len	int
,	O
0	int
,	O
"bt_write"	*(char)
)	O
)	O
return	O
keyerr	O
;	O
else	O
if	O
(	O
han_error_P	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),*(char))->(int)
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
"bt_write"	*(char)
)	O
)	O
return	O
argerr	O
;	O
else	O
if	O
(	O
!	O
(	O
(	O
0	int
<=	O
(	O
v_len	int
)	O
)	O
&&	O
(	O
(	O
v_len	int
)	O
<=	O
0xff	int
)	O
)	O
)	O
return	O
argerr	O
;	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
=	O
chain_find_ent	(*(struct(*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)),long,long,int,int)),int,*(char),int,*(int))->(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))))
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
accwrite	O
,	O
key_str	*(char)
,	O
k_len	int
,	O
pkt	*(int)
)	O
;	O
if	O
(	O
!	O
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
)	O
)	O
return	O
unkerr	O
;	O
else	O
if	O
(	O
(	O
pkt_match_type	O
(	O
pkt	*(int)
)	O
)	O
==	O
(	O
match	O
)	O
)	O
{	O
release_ent	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(void)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
accwrite	O
)	O
;	O
return	O
notpres	O
;	O
}	O
else	O
{	O
int	O
res_P	int
=	O
chain_put	(*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),*(char),int,*(char),int,*(int),*(struct(*(struct(*`,long,*`,int,int,int,int,int,int,*`)),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*`,*`,*`,*`,*`,int,*`,*`,*`,long)))),int)->(int)
(	O
ent	*(struct(*(struct(*(struct`),long,*(char),int,int,int,int,int,int,*(struct`))),long,*(char),int,int,int,int,int,int,*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long))))
,	O
key_str	*(char)
,	O
k_len	int
,	O
val_str	*(char)
,	O
v_len	int
,	O
pkt	*(int)
,	O
0	int
,	O
han_wcb	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
)	O
)	O
;	O
if	O
(	O
res_P	int
)	O
{	O
if	O
(	O
clever_cache_enable_P	int
)	O
han_set_last	O
(	O
han	*(struct(*(struct(int,int,long,*(char),*(struct`),*(struct`),*(struct`),*(struct`),int,*(long),*(struct`),*(struct`),long)),long,long,int,int))
,	O
pkt_blk_to_cache	O
(	O
pkt	*(int)
)	O
)	O
;	O
put_ct	long
=	O
0x1L	int
+	O
(	O
put_ct	long
)	O
;	O
return	O
success	int
;	O
}	O
else	O
{	O
put_fct	long
=	O
0x1L	int
+	O
(	O
put_fct	long
)	O
;	O
return	O
unkerr	O
;	O
}	O
}	O
}	O
}	O
