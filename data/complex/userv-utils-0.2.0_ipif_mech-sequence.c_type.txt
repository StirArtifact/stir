struct	O
mechdata	struct(int,int)
{	O
uint32_t	int
number	int
;	O
int	O
anyseen	int
;	O
}	O
;	O
static	O
void	O
mes_sequence	(*(*(struct(int,int))),*(int),*(int))->(void)
(	O
struct	O
mechdata	struct(int,int)
*	O
*	O
md_r	*(*(struct))
,	O
int	O
*	O
maxprefix_io	*(int)
,	O
int	O
*	O
maxsuffix_io	*(int)
)	O
{	O
struct	O
mechdata	struct(int,int)
*	O
md	*(struct)
;	O
XMALLOC	O
(	O
md	*(struct)
)	O
;	O
get_random	(*(void),long)->(void)
(	O
&	O
md	*(struct)
->	O
number	int
,	O
sizeof	O
(	O
md	*(struct)
->	O
number	int
)	O
)	O
;	O
*	O
maxprefix_io	*(int)
+=	O
4	int
;	O
*	O
md_r	*(*(struct))
=	O
md	*(struct)
;	O
}	O
static	O
void	O
mds_sequence	(*(*(struct(int,int))))->(void)
(	O
struct	O
mechdata	struct(int,int)
*	O
*	O
md_r	*(*(struct))
)	O
{	O
struct	O
mechdata	struct(int,int)
*	O
md	*(struct)
;	O
XMALLOC	O
(	O
md	*(struct)
)	O
;	O
md	*(struct)
->	O
anyseen	int
=	O
0	int
;	O
*	O
md_r	*(*(struct))
=	O
md	*(struct)
;	O
}	O
static	O
void	O
menc_sequence	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(void)
(	O
struct	O
mechdata	struct(int,int)
*	O
md	*(struct)
,	O
struct	O
buffer	struct(*(char),*(char),long)
*	O
buf	*(struct(*(char),*(char),long))
)	O
{	O
md	*(struct)
->	O
number	int
++	O
;	O
*	O
(	O
uint32_t	int
*	O
)	O
buf_prepend	(*(struct(*(char),*(char),long)),long)->(*(void))
(	O
buf	*(struct(*(char),*(char),long))
,	O
4	int
)	O
=	O
htonl	(int)->(int)
(	O
md	*(struct)
->	O
number	int
)	O
;	O
}	O
static	O
const	O
char	O
*	O
mdec_check	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(*(char))
(	O
struct	O
mechdata	struct(int,int)
*	O
md	*(struct)
,	O
struct	O
buffer	struct(*(char),*(char),long)
*	O
buf	*(struct(*(char),*(char),long))
)	O
{	O
uint32_t	int
*	O
sp	*(int)
,	O
sequence	int
;	O
BUF_UNPREPEND	O
(	O
sp	*(int)
,	O
buf	*(struct(*(char),*(char),long))
,	O
4	int
)	O
;	O
sequence	int
=	O
ntohl	(int)->(int)
(	O
*	O
sp	*(int)
)	O
;	O
if	O
(	O
md	*(struct)
->	O
anyseen	int
)	O
if	O
(	O
sequence	int
-	O
md	*(struct)
->	O
number	int
>=	O
0x800000UL	int
)	O
return	O
"out of order packet"	*(char)
;	O
md	*(struct)
->	O
number	int
=	O
sequence	int
;	O
md	*(struct)
->	O
anyseen	int
=	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
const	O
char	O
*	O
mdec_skip	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(*(char))
(	O
struct	O
mechdata	struct(int,int)
*	O
md	*(struct)
,	O
struct	O
buffer	struct(*(char),*(char),long)
*	O
buf	*(struct(*(char),*(char),long))
)	O
{	O
uint32_t	int
*	O
sp	*(int)
;	O
BUF_UNPREPEND	O
(	O
sp	*(int)
,	O
buf	*(struct(*(char),*(char),long))
,	O
4	int
)	O
;	O
return	O
0	int
;	O
}	O
const	O
struct	O
mechanism	struct(*(char),*((*(*(struct)),*(int),*(int))->(void)),*((*(*(struct)))->(void)),*((*(struct),*(struct(*(char),*(char),long)))->(void)),*((*(struct),*(struct(*(char),*(char),long)))->(*(char))))
mechlist_sequence	int
[	O
]	O
=	O
{	O
{	O
"nonce"	*(char)
,	O
mes_sequence	(*(*(struct(int,int))),*(int),*(int))->(void)
,	O
mds_sequence	(*(*(struct(int,int))))->(void)
,	O
menc_sequence	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(void)
,	O
mdec_skip	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(*(char))
}	O
,	O
{	O
"sequence"	*(char)
,	O
mes_sequence	(*(*(struct(int,int))),*(int),*(int))->(void)
,	O
mds_sequence	(*(*(struct(int,int))))->(void)
,	O
menc_sequence	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(void)
,	O
mdec_check	(*(struct(int,int)),*(struct(*(char),*(char),long)))->(*(char))
}	O
,	O
{	O
0	int
}	O
}	O
;	O
