typedef	O
struct	O
{	O
size_t	long
n	int
;	O
size_t	long
p	int
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
workn	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
int	O
accel	int
;	O
gsl_multilarge_nlinear_parameters	struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double)
params	*(void)
;	O
}	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
;	O
static	O
void	O
*	O
lm_alloc	(int,*(void),long,long)->(*(void))
(	O
const	O
int	O
accel	int
,	O
const	O
void	O
*	O
params	*(void)
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
;	O
static	O
void	O
*	O
lm_alloc_noaccel	(*(void),long,long)->(*(void))
(	O
const	O
void	O
*	O
params	*(void)
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
;	O
static	O
void	O
*	O
lm_alloc_accel	(*(void),long,long)->(*(void))
(	O
const	O
void	O
*	O
params	*(void)
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
;	O
static	O
void	O
lm_free	(*(void))->(void)
(	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
lm_init	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
lm_preloop	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
lm_step	(*(void),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
const	O
double	O
delta	double
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
lm_preduction	(*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
double	O
*	O
pred	*(double)
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
void	O
*	O
lm_alloc	(int,*(void),long,long)->(*(void))
(	O
const	O
int	O
accel	int
,	O
const	O
void	O
*	O
params	*(void)
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
{	O
const	O
gsl_multilarge_nlinear_parameters	struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double)
*	O
mparams	*(struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
=	O
(	O
const	O
gsl_multilarge_nlinear_parameters	struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double)
*	O
)	O
params	*(void)
;	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
state	*(int)
;	O
state	*(int)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
)	O
)	O
;	O
if	O
(	O
state	*(int)
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate lm state"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for workp"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
workn	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
n	int
)	O
;	O
if	O
(	O
state	*(int)
->	O
workn	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for workn"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
n	int
)	O
;	O
if	O
(	O
state	*(int)
->	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for fvv"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for vel"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for acc"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
p	int
)	O
;	O
if	O
(	O
state	*(int)
->	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for JTfvv"	*(char)
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
state	*(int)
->	O
n	int
=	O
n	int
;	O
state	*(int)
->	O
p	int
=	O
p	int
;	O
state	*(int)
->	O
params	*(void)
=	O
*	O
mparams	*(struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
;	O
state	*(int)
->	O
accel	int
=	O
accel	int
;	O
return	O
state	*(int)
;	O
}	O
static	O
void	O
*	O
lm_alloc_noaccel	(*(void),long,long)->(*(void))
(	O
const	O
void	O
*	O
params	*(void)
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
{	O
return	O
lm_alloc	(int,*(void),long,long)->(*(void))
(	O
0	int
,	O
params	*(void)
,	O
n	int
,	O
p	int
)	O
;	O
}	O
static	O
void	O
*	O
lm_alloc_accel	(*(void),long,long)->(*(void))
(	O
const	O
void	O
*	O
params	*(void)
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
{	O
return	O
lm_alloc	(int,*(void),long,long)->(*(void))
(	O
1	int
,	O
params	*(void)
,	O
n	int
,	O
p	int
)	O
;	O
}	O
static	O
void	O
lm_free	(*(void))->(void)
(	O
void	O
*	O
vstate	*(void)
)	O
{	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
state	*(int)
=	O
(	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
)	O
vstate	*(void)
;	O
if	O
(	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
state	*(int)
->	O
workn	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
workn	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
state	*(int)
->	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
state	*(int)
->	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
free	(*(void))->(void)
(	O
state	*(int)
)	O
;	O
}	O
static	O
int	O
lm_init	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
=	O
(	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
)	O
vtrust_state	*(void)
;	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
state	*(int)
=	O
(	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
)	O
vstate	*(void)
;	O
gsl_vector_set_zero	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
gsl_vector_set_zero	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
*	O
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
avratio	*((*(void))->(double))
)	O
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
lm_preloop	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
int	O
status	int
;	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
=	O
(	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
)	O
vtrust_state	*(void)
;	O
const	O
gsl_multilarge_nlinear_parameters	struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double)
*	O
params	*(void)
=	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
params	*(void)
;	O
(	O
void	O
)	O
vstate	*(void)
;	O
status	int
=	O
(	O
params	*(void)
->	O
solver	*(struct(*(char),*((long,long)->(*(void))),*((*(void),*(void))->(int)),*((double,*(void),*(void))->(int)),*((*(struct`),*(struct`),*(void),*(void))->(int)),*((*(double),*(struct`),*(void))->(int)),*((*(struct`),*(struct`),*(void))->(int)),*((*(void))->(void))))
->	O
init	*((*(void),*(void))->(int))
)	O
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
solver_state	*(void)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
lm_step	(*(void),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
const	O
double	O
delta	double
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
int	O
status	int
;	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
=	O
(	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
)	O
vtrust_state	*(void)
;	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
state	*(int)
=	O
(	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
)	O
vstate	*(void)
;	O
const	O
gsl_multilarge_nlinear_parameters	struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double)
*	O
params	*(void)
=	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
params	*(void)
;	O
const	O
double	O
mu	double
=	O
*	O
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
mu	double
)	O
;	O
(	O
void	O
)	O
delta	double
;	O
status	int
=	O
(	O
params	*(void)
->	O
solver	*(struct(*(char),*((long,long)->(*(void))),*((*(void),*(void))->(int)),*((double,*(void),*(void))->(int)),*((*(struct`),*(struct`),*(void),*(void))->(int)),*((*(double),*(struct`),*(void))->(int)),*((*(struct`),*(struct`),*(void))->(int)),*((*(void))->(void))))
->	O
presolve	*((double,*(void),*(void))->(int))
)	O
(	O
mu	double
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
solver_state	*(void)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
(	O
params	*(void)
->	O
solver	*(struct(*(char),*((long,long)->(*(void))),*((*(void),*(void))->(int)),*((double,*(void),*(void))->(int)),*((*(struct`),*(struct`),*(void),*(void))->(int)),*((*(double),*(struct`),*(void))->(int)),*((*(struct`),*(struct`),*(void))->(int)),*((*(void))->(void))))
->	O
solve	*((*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(void),*(void))->(int))
)	O
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
g	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
solver_state	*(void)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
state	*(int)
->	O
accel	int
)	O
{	O
double	O
anorm	double
,	O
vnorm	double
;	O
status	int
=	O
gsl_multilarge_nlinear_eval_fvv	(double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
params	*(void)
->	O
h_fvv	double
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
x	double
,	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
f	*(double)
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
state	*(int)
->	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
gsl_multilarge_nlinear_eval_df	(enum(int,int,int),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,enum(int,int),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
CblasTrans	int
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
x	double
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
f	*(double)
,	O
state	*(int)
->	O
fvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
sqrt_wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
params	*(void)
->	O
h_df	double
,	O
params	*(void)
->	O
fdtype	enum(int,int)
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
state	*(int)
->	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
NULL	O
,	O
state	*(int)
->	O
workn	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
(	O
params	*(void)
->	O
solver	*(struct(*(char),*((long,long)->(*(void))),*((*(void),*(void))->(int)),*((double,*(void),*(void))->(int)),*((*(struct`),*(struct`),*(void),*(void))->(int)),*((*(double),*(struct`),*(void))->(int)),*((*(struct`),*(struct`),*(void))->(int)),*((*(void))->(void))))
->	O
solve	*((*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(void),*(void))->(int))
)	O
(	O
state	*(int)
->	O
JTfvv	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
solver_state	*(void)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
anorm	double
=	O
gsl_blas_dnrm2	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(double)
(	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
vnorm	double
=	O
gsl_blas_dnrm2	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(double)
(	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
*	O
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
avratio	*((*(void))->(double))
)	O
=	O
anorm	double
/	O
vnorm	double
;	O
}	O
scaled_addition	(double,*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
1.0	int
,	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0.5	int
,	O
state	*(int)
->	O
acc	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
lm_preduction	(*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(void))->(int)
(	O
const	O
void	O
*	O
vtrust_state	*(void)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
double	O
*	O
pred	*(double)
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
=	O
(	O
const	O
gsl_multilarge_nlinear_trust_state	struct(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double))
*	O
)	O
vtrust_state	*(void)
;	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
state	*(int)
=	O
(	O
lm_state_t	struct(long,long,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),int,struct(*(struct(*(char),*((*`,long,long)->(*`)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`)->(void)))),*(struct(*(char),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(struct(*(char),*((long,long)->(*`)),*((*`,*`)->(int)),*((double,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`)->(void)))),enum(int,int),double,double,double,double,double,long,double))
*	O
)	O
vstate	*(void)
;	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
p	int
=	O
state	*(int)
->	O
vel	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
const	O
double	O
norm_Dp	double
=	O
scaled_enorm	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(double)
(	O
diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
p	int
)	O
;	O
const	O
double	O
normf	double
=	O
gsl_blas_dnrm2	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(double)
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
f	*(double)
)	O
;	O
const	O
double	O
mu	double
=	O
*	O
(	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
mu	double
)	O
;	O
double	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
(	O
void	O
)	O
dx	*(struct(long,long,*(double),*(struct(long,*(double))),int))
;	O
gsl_blas_dsymv	(enum(int,int),double,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
CblasLower	int
,	O
1.0	int
,	O
trust_state	*(struct(*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(double),*(struct(*(struct`),*(struct`),*(struct`),enum(int,int),double,double,double,double,double,long,double)),*(void),*(struct(*((*`,*`,*`)->(int)),*((enum(int,int,int),*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long,long,long)),*(double)))
->	O
JTJ	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
p	int
,	O
0.0	int
,	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
gsl_blas_ddot	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double))->(int)
(	O
state	*(int)
->	O
workp	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
p	int
,	O
&	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
;	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
/=	O
normf	double
*	O
normf	double
;	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
norm_Dp	double
/	O
normf	double
;	O
*	O
pred	*(double)
=	O
u	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
+	O
2.0	int
*	O
mu	double
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
*	O
v	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_multilarge_nlinear_trs	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
lm_type	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
=	O
{	O
"levenberg-marquardt"	*(char)
,	O
lm_alloc_noaccel	(*(void),long,long)->(*(void))
,	O
lm_init	(*(void),*(void))->(int)
,	O
lm_preloop	(*(void),*(void))->(int)
,	O
lm_step	(*(void),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void))->(int)
,	O
lm_preduction	(*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(void))->(int)
,	O
lm_free	(*(void))->(void)
}	O
;	O
const	O
gsl_multilarge_nlinear_trs	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
*	O
gsl_multilarge_nlinear_trs_lm	*(struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct`),*(void))->(int)),*((*(void),*(struct`),*(double),*(void))->(int)),*((*(void))->(void))))
=	O
&	O
lm_type	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
;	O
static	O
const	O
gsl_multilarge_nlinear_trs	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
lmaccel_type	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
=	O
{	O
"levenberg-marquardt+accel"	*(char)
,	O
lm_alloc_accel	(*(void),long,long)->(*(void))
,	O
lm_init	(*(void),*(void))->(int)
,	O
lm_preloop	(*(void),*(void))->(int)
,	O
lm_step	(*(void),double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void))->(int)
,	O
lm_preduction	(*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(double),*(void))->(int)
,	O
lm_free	(*(void))->(void)
}	O
;	O
const	O
gsl_multilarge_nlinear_trs	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
*	O
gsl_multilarge_nlinear_trs_lmaccel	*(struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct`),*(void))->(int)),*((*(void),*(struct`),*(double),*(void))->(int)),*((*(void))->(void))))
=	O
&	O
lmaccel_type	struct(*(char),*((*(void),long,long)->(*(void))),*((*(void),*(void))->(int)),*((*(void),*(void))->(int)),*((*(void),double,*(struct(long,long,*`,*`,int)),*(void))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(double),*(void))->(int)),*((*(void))->(void)))
;	O
