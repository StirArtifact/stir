void	O
hmac_sha1_set_key	O
(	O
struct	O
hmac_sha1_ctx	struct(struct(array(int),long,int,array(char)),struct(array(int),long,int,array(char)),struct(array(int),long,int,array(char)))
*	O
ctx	*(void)
,	O
size_t	long
key_length	long
,	O
const	O
uint8_t	char
*	O
key	*(char)
)	O
{	O
HMAC_SET_KEY	O
(	O
ctx	*(void)
,	O
&	O
nettle_sha1	struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
key_length	long
,	O
key	*(char)
)	O
;	O
}	O
void	O
hmac_sha1_update	O
(	O
struct	O
hmac_sha1_ctx	struct(struct(array(int),long,int,array(char)),struct(array(int),long,int,array(char)),struct(array(int),long,int,array(char)))
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	*(char)
)	O
{	O
sha1_update	O
(	O
&	O
ctx	*(void)
->	O
state	array(int)
,	O
length	long
,	O
data	*(char)
)	O
;	O
}	O
void	O
hmac_sha1_digest	O
(	O
struct	O
hmac_sha1_ctx	struct(struct(array(int),long,int,array(char)),struct(array(int),long,int,array(char)),struct(array(int),long,int,array(char)))
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	*((*(void),long,*(char))->(void))
)	O
{	O
HMAC_DIGEST	O
(	O
ctx	*(void)
,	O
&	O
nettle_sha1	struct(*(char),int,int,int,*((*(void))->(void)),*((*(void),long,*(char))->(void)),*((*(void),long,*(char))->(void)))
,	O
length	long
,	O
digest	*((*(void),long,*(char))->(void))
)	O
;	O
}	O
