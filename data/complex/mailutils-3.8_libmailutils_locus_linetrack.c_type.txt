struct	O
source	struct(*(char),long,int,*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))))
{	O
char	O
const	O
*	O
file_name	*(char)
;	O
size_t	long
idx	long
;	O
unsigned	O
line	int
;	O
struct	O
source	struct(*(char),long,int,*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))))
*	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
,	O
*	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
}	O
;	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
{	O
struct	O
source	struct(*(char),long,int,*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))))
*	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
,	O
*	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
size_t	long
max_lines	long
;	O
size_t	long
head	long
;	O
size_t	long
tos	long
;	O
unsigned	O
*	O
cols	*(int)
;	O
}	O
;	O
static	O
inline	O
size_t	long
trk_incr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
size_t	long
a	*(struct(*(char),int,int))
)	O
{	O
return	O
(	O
a	*(struct(*(char),int,int))
+	O
1	int
)	O
%	O
trk	*(struct)
->	O
max_lines	long
;	O
}	O
static	O
inline	O
size_t	long
trk_decr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
size_t	long
a	*(struct(*(char),int,int))
)	O
{	O
return	O
(	O
a	*(struct(*(char),int,int))
+	O
trk	*(struct)
->	O
max_lines	long
-	O
1	int
)	O
%	O
trk	*(struct)
->	O
max_lines	long
;	O
}	O
static	O
inline	O
unsigned	O
count_lines	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(int)
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
,	O
size_t	long
from	long
)	O
{	O
return	O
(	O
trk	*(struct)
->	O
tos	long
+	O
trk	*(struct)
->	O
max_lines	long
-	O
from	long
)	O
%	O
trk	*(struct)
->	O
max_lines	long
+	O
1	int
;	O
}	O
static	O
int	O
count_chars	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long,*(long))->(int)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
size_t	long
i	long
,	O
size_t	long
*	O
ret	*(*(struct))
)	O
{	O
size_t	long
nch	long
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
unsigned	O
n	long
=	O
trk	*(struct)
->	O
cols	*(int)
[	O
i	long
]	O
;	O
if	O
(	O
SIZE_MAX	O
-	O
nch	long
<	O
n	long
)	O
return	O
ERANGE	int
;	O
nch	long
+=	O
n	long
;	O
if	O
(	O
i	long
==	O
trk	*(struct)
->	O
tos	long
)	O
break	O
;	O
i	long
=	O
trk_incr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
trk	*(struct)
,	O
i	long
)	O
;	O
}	O
*	O
ret	*(*(struct))
=	O
nch	long
;	O
return	O
0	int
;	O
}	O
static	O
size_t	long
count_files	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(long)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
)	O
{	O
struct	O
source	struct(*(char),long,int,*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))))
*	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
size_t	long
n	long
=	O
0	int
;	O
for	O
(	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
n	long
++	O
;	O
return	O
n	long
;	O
}	O
static	O
void	O
del_source	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),*(struct(*(char),long,int,*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)))))->(void)
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
,	O
struct	O
source	struct(*(char),long,int,*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))))
*	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
else	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
if	O
(	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
else	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
mu_ident_deref	(*(char))->(int)
(	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
;	O
}	O
static	O
inline	O
unsigned	O
*	O
push	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(*(int))
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
)	O
{	O
trk	*(struct)
->	O
tos	long
=	O
trk_incr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
tos	long
)	O
;	O
if	O
(	O
trk	*(struct)
->	O
tos	long
==	O
trk	*(struct)
->	O
head	long
)	O
{	O
trk	*(struct)
->	O
head	long
=	O
trk_incr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
head	long
)	O
;	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
=	O
trk	*(struct)
->	O
head	long
;	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
line	int
++	O
;	O
}	O
if	O
(	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
&&	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
==	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
)	O
del_source	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),*(struct(*(char),long,int,*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)))))->(void)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
;	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
=	O
0	int
;	O
return	O
&	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
;	O
}	O
static	O
inline	O
unsigned	O
*	O
pop	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(*(int))
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
)	O
{	O
if	O
(	O
trk	*(struct)
->	O
tos	long
==	O
trk	*(struct)
->	O
head	long
)	O
return	O
NULL	O
;	O
if	O
(	O
trk	*(struct)
->	O
tos	long
==	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
)	O
del_source	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),*(struct(*(char),long,int,*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)))))->(void)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
;	O
trk	*(struct)
->	O
tos	long
=	O
trk_decr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
tos	long
)	O
;	O
return	O
&	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
;	O
}	O
int	O
mu_linetrack_origin	(*(struct),*(struct(*(char),int,int)))->(int)
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
,	O
struct	O
mu_locus_point	struct(*(char),int,int)
const	O
*	O
pt	*(struct(*(char),int,int))
)	O
{	O
int	O
rc	int
;	O
struct	O
source	struct(*(char),long,int,*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))))
*	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
char	O
const	O
*	O
file_name	*(char)
;	O
if	O
(	O
!	O
trk	*(struct)
||	O
!	O
pt	*(struct(*(char),int,int))
||	O
pt	*(struct(*(char),int,int))
->	O
mu_line	int
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pt	*(struct(*(char),int,int))
->	O
mu_file	*(char)
)	O
file_name	*(char)
=	O
pt	*(struct(*(char),int,int))
->	O
mu_file	*(char)
;	O
else	O
if	O
(	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
file_name	*(char)
=	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
;	O
else	O
return	O
EINVAL	int
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
*	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
return	O
errno	O
;	O
rc	int
=	O
mu_ident_ref	(*(char),*(*(char)))->(int)
(	O
file_name	*(char)
,	O
&	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	(*(void))->(void)
(	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
;	O
return	O
rc	int
;	O
}	O
if	O
(	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
)	O
push	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(*(int))
(	O
trk	*(struct)
)	O
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
=	O
trk	*(struct)
->	O
tos	long
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
line	int
=	O
pt	*(struct(*(char),int,int))
->	O
mu_line	int
;	O
trk	*(struct)
->	O
cols	*(int)
[	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
]	O
=	O
pt	*(struct(*(char),int,int))
->	O
mu_col	int
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
if	O
(	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
else	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
sp	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
;	O
return	O
0	int
;	O
}	O
int	O
mu_linetrack_create	(*(*(struct)),*(char),long)->(int)
(	O
mu_linetrack_t	*(struct)
*	O
ret	*(*(struct))
,	O
char	O
const	O
*	O
file_name	*(char)
,	O
size_t	long
max_lines	long
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
;	O
struct	O
mu_locus_point	struct(*(char),int,int)
pt	*(struct(*(char),int,int))
;	O
trk	*(struct)
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
*	O
trk	*(struct)
)	O
;	O
if	O
(	O
!	O
trk	*(struct)
)	O
return	O
errno	O
;	O
trk	*(struct)
->	O
cols	*(int)
=	O
calloc	(long,long)->(*(void))
(	O
max_lines	long
,	O
sizeof	O
(	O
trk	*(struct)
->	O
cols	*(int)
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
trk	*(struct)
->	O
cols	*(int)
)	O
{	O
rc	int
=	O
errno	O
;	O
free	(*(void))->(void)
(	O
trk	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
trk	*(struct)
->	O
s_tail	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
if	O
(	O
max_lines	long
<	O
2	int
)	O
max_lines	long
=	O
2	int
;	O
trk	*(struct)
->	O
max_lines	long
=	O
max_lines	long
;	O
trk	*(struct)
->	O
head	long
=	O
0	int
;	O
trk	*(struct)
->	O
tos	long
=	O
0	int
;	O
trk	*(struct)
->	O
cols	*(int)
[	O
0	int
]	O
=	O
0	int
;	O
pt	*(struct(*(char),int,int))
.	O
mu_file	*(char)
=	O
file_name	*(char)
;	O
pt	*(struct(*(char),int,int))
.	O
mu_line	int
=	O
1	int
;	O
pt	*(struct(*(char),int,int))
.	O
mu_col	int
=	O
0	int
;	O
rc	int
=	O
mu_linetrack_origin	(*(struct),*(struct(*(char),int,int)))->(int)
(	O
trk	*(struct)
,	O
&	O
pt	*(struct(*(char),int,int))
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	(*(void))->(void)
(	O
trk	*(struct)
->	O
cols	*(int)
)	O
;	O
free	(*(void))->(void)
(	O
trk	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
*	O
ret	*(*(struct))
=	O
trk	*(struct)
;	O
return	O
0	int
;	O
}	O
int	O
mu_linetrack_rebase	(*(struct),*(struct(*(char),int,int)))->(int)
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
,	O
struct	O
mu_locus_point	struct(*(char),int,int)
const	O
*	O
pt	*(struct(*(char),int,int))
)	O
{	O
char	O
const	O
*	O
file_name	*(char)
;	O
int	O
rc	int
=	O
mu_ident_ref	(*(char),*(*(char)))->(int)
(	O
pt	*(struct(*(char),int,int))
->	O
mu_file	*(char)
,	O
&	O
file_name	*(char)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_ident_deref	(*(char))->(int)
(	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
)	O
;	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
=	O
file_name	*(char)
;	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
line	int
=	O
pt	*(struct(*(char),int,int))
->	O
mu_line	int
;	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
]	O
=	O
pt	*(struct(*(char),int,int))
->	O
mu_col	int
;	O
return	O
0	int
;	O
}	O
void	O
mu_linetrack_free	(*(struct))->(void)
(	O
mu_linetrack_t	*(struct)
trk	*(struct)
)	O
{	O
if	O
(	O
trk	*(struct)
)	O
{	O
while	O
(	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
del_source	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),*(struct(*(char),long,int,*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)))))->(void)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
)	O
;	O
free	(*(void))->(void)
(	O
trk	*(struct)
->	O
cols	*(int)
)	O
;	O
free	(*(void))->(void)
(	O
trk	*(struct)
)	O
;	O
}	O
}	O
void	O
mu_linetrack_destroy	(*(*(struct)))->(void)
(	O
mu_linetrack_t	*(struct)
*	O
trk	*(struct)
)	O
{	O
if	O
(	O
trk	*(struct)
)	O
{	O
mu_linetrack_free	(*(struct))->(void)
(	O
*	O
trk	*(struct)
)	O
;	O
*	O
trk	*(struct)
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_linetrack_stat	struct(long,long,long)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
struct	O
mu_linetrack_stat	struct(long,long,long)
*	O
st	*(struct(long,long,long))
)	O
{	O
if	O
(	O
count_chars	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long,*(long))->(int)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
head	long
,	O
&	O
st	*(struct(long,long,long))
->	O
n_chars	long
)	O
)	O
return	O
ERANGE	int
;	O
st	*(struct(long,long,long))
->	O
n_files	long
=	O
count_files	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(long)
(	O
trk	*(struct)
)	O
;	O
st	*(struct(long,long,long))
->	O
n_lines	long
=	O
count_lines	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(int)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
head	long
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_linetrack_at_bol	(*(struct))->(int)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
)	O
{	O
return	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
==	O
0	int
;	O
}	O
void	O
mu_linetrack_advance	(*(struct),*(struct(struct(*(char),int,int),struct(*(char),int,int))),*(char),long)->(void)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
struct	O
mu_locus_range	struct(struct(*(char),int,int),struct(*(char),int,int))
*	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
,	O
char	O
const	O
*	O
text	*(char)
,	O
size_t	long
leng	long
)	O
{	O
unsigned	O
*	O
ptr	*(int)
;	O
if	O
(	O
text	*(char)
==	O
NULL	O
||	O
leng	long
==	O
0	int
)	O
return	O
;	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
&	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
beg	struct(*(char),int,int)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
)	O
;	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
&	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
)	O
;	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
beg	struct(*(char),int,int)
.	O
mu_line	int
=	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
line	int
+	O
count_lines	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(int)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
)	O
-	O
1	int
;	O
ptr	*(int)
=	O
&	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
;	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
beg	struct(*(char),int,int)
.	O
mu_col	int
=	O
*	O
ptr	*(int)
+	O
1	int
;	O
while	O
(	O
leng	long
--	O
)	O
{	O
(	O
*	O
ptr	*(int)
)	O
++	O
;	O
if	O
(	O
*	O
text	*(char)
==	O
'\n'	O
)	O
ptr	*(int)
=	O
push	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(*(int))
(	O
trk	*(struct)
)	O
;	O
text	*(char)
++	O
;	O
}	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
.	O
mu_line	int
=	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
line	int
+	O
count_lines	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(int)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
)	O
-	O
1	int
;	O
if	O
(	O
*	O
ptr	*(int)
)	O
{	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
.	O
mu_col	int
=	O
*	O
ptr	*(int)
;	O
}	O
else	O
{	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
.	O
mu_line	int
--	O
;	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
.	O
mu_col	int
=	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk_decr	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(long)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
tos	long
)	O
]	O
-	O
1	int
;	O
if	O
(	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
.	O
mu_col	int
+	O
1	int
==	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
beg	struct(*(char),int,int)
.	O
mu_col	int
)	O
{	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
beg	struct(*(char),int,int)
.	O
mu_col	int
=	O
loc	*(struct(struct(*(char),int,int),struct(*(char),int,int)))
->	O
end	struct(*(char),int,int)
.	O
mu_col	int
;	O
}	O
}	O
}	O
int	O
mu_linetrack_locus	(*(struct),*(struct(*(char),int,int)))->(int)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
struct	O
mu_locus_point	struct(*(char),int,int)
*	O
lp	*(struct(*(char),int,int))
)	O
{	O
int	O
rc	int
=	O
mu_locus_point_set_file	(*(struct(*(char),int,int)),*(char))->(int)
(	O
lp	*(struct(*(char),int,int))
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
file_name	*(char)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
lp	*(struct(*(char),int,int))
->	O
mu_line	int
=	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
line	int
+	O
count_lines	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long)->(int)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
s_head	*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`)))))
->	O
idx	long
)	O
-	O
1	int
;	O
lp	*(struct(*(char),int,int))
->	O
mu_col	int
=	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_linetrack_retreat	(*(struct),long)->(int)
(	O
struct	O
mu_linetrack	struct(*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),*(struct(*(char),long,int,*(struct(*(char),long,int,*(struct`),*(struct`))),*(struct(*(char),long,int,*(struct`),*(struct`))))),long,long,long,*(int))
*	O
trk	*(struct)
,	O
size_t	long
n	long
)	O
{	O
size_t	long
nch	long
;	O
if	O
(	O
count_chars	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))),long,*(long))->(int)
(	O
trk	*(struct)
,	O
trk	*(struct)
->	O
head	long
,	O
&	O
nch	long
)	O
)	O
return	O
ERANGE	int
;	O
if	O
(	O
n	long
>	O
nch	long
)	O
return	O
ERANGE	int
;	O
else	O
{	O
unsigned	O
*	O
ptr	*(int)
=	O
&	O
trk	*(struct)
->	O
cols	*(int)
[	O
trk	*(struct)
->	O
tos	long
]	O
;	O
while	O
(	O
n	long
--	O
)	O
{	O
if	O
(	O
*	O
ptr	*(int)
==	O
0	int
)	O
{	O
ptr	*(int)
=	O
pop	(*(struct(*(struct(*`,long,int,*`,*`)),*(struct(*`,long,int,*`,*`)),long,long,long,*(int))))->(*(int))
(	O
trk	*(struct)
)	O
;	O
if	O
(	O
!	O
ptr	*(int)
||	O
*	O
ptr	*(int)
==	O
0	int
)	O
{	O
mu_error	(*(char))->(int)
(	O
"%s:%d: INTERNAL ERROR: out of pop back\n"	*(char)
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
return	O
ERANGE	int
;	O
}	O
}	O
--	O
*	O
ptr	*(int)
;	O
}	O
}	O
return	O
0	int
;	O
}	O
