struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
local_tm	(*(long),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
const	O
time_t	long
*	O
timep	*(long)
,	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
result	*(char)
)	O
{	O
if	O
(	O
!	O
MAKETIMESTUFF	O
(	O
tzset_called_p	bool
)	O
)	O
{	O
tzset	()->(void)
(	O
)	O
;	O
MAKETIMESTUFF	O
(	O
tzset_called_p	bool
)	O
=	O
true	int
;	O
}	O
return	O
localtime_r	(*(long),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
timep	*(long)
,	O
result	*(char)
)	O
;	O
}	O
static	O
bool	bool
isleap	(int)->(bool)
(	O
int	O
y	int
)	O
{	O
return	O
(	O
y	int
&	O
3	int
)	O
==	O
0	int
&&	O
(	O
y	int
%	O
100	int
!=	O
0	int
||	O
y	int
%	O
400	int
==	O
0	int
)	O
;	O
}	O
static	O
int	O
const	O
month_yday	array(int)
[	O
]	O
=	O
{	O
0	int
,	O
31	int
,	O
59	int
,	O
90	int
,	O
120	int
,	O
151	int
,	O
181	int
,	O
212	int
,	O
243	int
,	O
273	int
,	O
304	int
,	O
334	int
,	O
365	int
}	O
;	O
static	O
int	O
month_days	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(int)
(	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
const	O
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
{	O
int	O
m	*(struct)
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mon	int
;	O
return	O
month_yday	array(int)
[	O
m	*(struct)
+	O
1	int
]	O
-	O
month_yday	array(int)
[	O
m	*(struct)
]	O
+	O
(	O
m	*(struct)
==	O
1	int
&&	O
isleap	(int)->(bool)
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
)	O
)	O
;	O
}	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
time2tm	(long,bool)->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
time_t	long
unixtime	long
,	O
bool	bool
localzone	bool
)	O
{	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
if	O
(	O
localzone	bool
||	O
!	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
gmtime_r	(*(long),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
unixtime	long
,	O
&	O
MAKETIMESTUFF	O
(	O
time2tm_stash	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
)	O
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
local_tm	(*(long),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
&	O
unixtime	long
,	O
&	O
MAKETIMESTUFF	O
(	O
time2tm_stash	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
)	O
;	O
return	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
}	O
time_t	long
difftm	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
const	O
*	O
a	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
,	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
const	O
*	O
b	*(char)
)	O
{	O
int	O
ay	int
=	O
a	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_year	int
+	O
(	O
TM_YEAR_ORIGIN	int
-	O
1	int
)	O
;	O
int	O
by	int
=	O
b	*(char)
->	O
tm_year	int
+	O
(	O
TM_YEAR_ORIGIN	int
-	O
1	int
)	O
;	O
int	O
difference_in_day_of_year	int
=	O
a	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_yday	int
-	O
b	*(char)
->	O
tm_yday	int
;	O
int	O
intervening_leap_days	int
=	O
(	O
(	O
(	O
ay	int
>>	O
2	int
)	O
-	O
(	O
by	int
>>	O
2	int
)	O
)	O
-	O
(	O
ay	int
/	O
100	int
-	O
by	int
/	O
100	int
)	O
+	O
(	O
(	O
ay	int
/	O
100	int
>>	O
2	int
)	O
-	O
(	O
by	int
/	O
100	int
>>	O
2	int
)	O
)	O
)	O
;	O
time_t	long
difference_in_years	long
=	O
ay	int
-	O
by	int
;	O
time_t	long
difference_in_days	long
=	O
(	O
difference_in_years	long
*	O
365	int
+	O
(	O
intervening_leap_days	int
+	O
difference_in_day_of_year	int
)	O
)	O
;	O
return	O
(	O
(	O
24	int
*	O
difference_in_days	long
+	O
(	O
a	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_hour	int
-	O
b	*(char)
->	O
tm_hour	int
)	O
)	O
*	O
60	int
+	O
(	O
a	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_min	int
-	O
b	*(char)
->	O
tm_min	int
)	O
)	O
*	O
60	int
+	O
(	O
a	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_sec	int
-	O
b	*(char)
->	O
tm_sec	int
)	O
;	O
}	O
void	O
adjzone	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),long)->(void)
(	O
register	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
,	O
long	O
seconds	long
)	O
{	O
int	O
leap_second	int
=	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_sec	int
==	O
60	int
;	O
long	O
sec	long
=	O
seconds	long
+	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_sec	int
-	O
leap_second	int
)	O
;	O
if	O
(	O
sec	long
<	O
0	int
)	O
{	O
if	O
(	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_min	int
-=	O
(	O
59	int
-	O
sec	long
)	O
/	O
60	int
)	O
<	O
0	int
)	O
{	O
if	O
(	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_hour	int
-=	O
(	O
59	int
-	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_min	int
)	O
/	O
60	int
)	O
<	O
0	int
)	O
{	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_hour	int
+=	O
24	int
;	O
if	O
(	O
TM_DEFINED	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_wday	int
)	O
&&	O
--	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_wday	int
<	O
0	int
)	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_wday	int
=	O
6	int
;	O
if	O
(	O
--	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mday	int
<=	O
0	int
)	O
{	O
if	O
(	O
--	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mon	int
<	O
0	int
)	O
{	O
--	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_year	int
;	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mon	int
=	O
11	int
;	O
}	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mday	int
=	O
month_days	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(int)
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
)	O
;	O
}	O
}	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_min	int
+=	O
24	int
*	O
60	int
;	O
}	O
sec	long
+=	O
24L	int
*	O
60	int
*	O
60	int
;	O
}	O
else	O
if	O
(	O
60	int
<=	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_min	int
+=	O
sec	long
/	O
60	int
)	O
)	O
if	O
(	O
24	int
<=	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_hour	int
+=	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_min	int
/	O
60	int
)	O
)	O
{	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_hour	int
-=	O
24	int
;	O
if	O
(	O
TM_DEFINED	O
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_wday	int
)	O
&&	O
++	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_wday	int
==	O
7	int
)	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_wday	int
=	O
0	int
;	O
if	O
(	O
month_days	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(int)
(	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
)	O
<	O
++	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mday	int
)	O
{	O
if	O
(	O
11	int
<	O
++	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mon	int
)	O
{	O
++	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_year	int
;	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mon	int
=	O
0	int
;	O
}	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_mday	int
=	O
1	int
;	O
}	O
}	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_min	int
%=	O
60	int
;	O
t	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm_sec	int
=	O
(	O
int	O
)	O
(	O
sec	long
%	O
60	int
)	O
+	O
leap_second	int
;	O
}	O
static	O
int	O
ISO_day_of_week	(int,int)->(int)
(	O
int	O
zy	int
,	O
int	O
mij	int
)	O
{	O
int	O
zd	int
=	O
(	O
mij	int
+	O
(	O
365	int
*	O
zy	int
)	O
+	O
(	O
zy	int
/	O
4	int
)	O
-	O
(	O
zy	int
/	O
100	int
)	O
+	O
(	O
zy	int
/	O
400	int
)	O
)	O
%	O
7	int
;	O
return	O
zd	int
?	O
zd	int
:	O
7	int
;	O
}	O
time_t	long
tm2time	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),bool,int)->(long)
(	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
bool	bool
localzone	bool
,	O
int	O
yweek	int
)	O
{	O
bool	bool
leap	bool
;	O
time_t	long
d	long
,	O
gt	long
;	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
const	O
*	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
;	O
int	O
remaining_tries	int
=	O
8	int
;	O
if	O
(	O
12	int
<=	O
(	O
unsigned	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mon	int
)	O
return	O
-	O
1	int
;	O
leap	bool
=	O
isleap	(int)->(bool)
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
)	O
;	O
if	O
(	O
TM_UNDEFINED	O
!=	O
yweek	int
)	O
{	O
int	O
nyd	int
;	O
int	O
doy	int
;	O
const	O
int	O
wday	int
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_wday	int
?	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_wday	int
:	O
7	int
;	O
int	O
zy	int
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
-	O
1	int
;	O
if	O
(	O
!	O
yweek	int
)	O
BUMP_YEAR	O
(	O
--	O
)	O
;	O
nyd	int
=	O
ISO_day_of_week	(int,int)->(int)
(	O
zy	int
,	O
1	int
)	O
;	O
if	O
(	O
!	O
yweek	int
)	O
yweek	int
=	O
52	int
+	O
(	O
(	O
4	int
==	O
nyd	int
)	O
||	O
(	O
leap	bool
&&	O
3	int
==	O
nyd	int
)	O
)	O
;	O
doy	int
=	O
yweek	int
*	O
7	int
+	O
wday	int
-	O
3	int
-	O
ISO_day_of_week	(int,int)->(int)
(	O
zy	int
,	O
4	int
)	O
;	O
if	O
(	O
365	int
+	O
leap	bool
<	O
doy	int
)	O
{	O
doy	int
-=	O
365	int
+	O
leap	bool
;	O
BUMP_YEAR	O
(	O
++	O
)	O
;	O
}	O
if	O
(	O
1	int
>	O
doy	int
)	O
{	O
BUMP_YEAR	O
(	O
--	O
)	O
;	O
doy	int
+=	O
365	int
+	O
leap	bool
;	O
}	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_year	int
=	O
zy	int
+	O
1	int
-	O
TM_YEAR_ORIGIN	int
;	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_yday	int
=	O
doy	int
-	O
1	int
;	O
}	O
if	O
(	O
PROB	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_yday	int
)	O
||	O
365	int
<	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_yday	int
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_yday	int
=	O
month_yday	array(int)
[	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mon	int
]	O
+	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mday	int
-	O
!	O
ADJUST	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mon	int
)	O
;	O
else	O
{	O
int	O
mon	int
=	O
1	int
,	O
day	int
=	O
1	int
+	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_yday	int
;	O
while	O
(	O
day	int
>	O
month_yday	array(int)
[	O
mon	int
]	O
+	O
ADJUST	O
(	O
mon	int
)	O
)	O
mon	int
++	O
;	O
mon	int
--	O
;	O
day	int
-=	O
month_yday	array(int)
[	O
mon	int
]	O
+	O
ADJUST	O
(	O
mon	int
)	O
;	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mon	int
=	O
mon	int
;	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mday	int
=	O
day	int
;	O
}	O
gt	long
=	O
MAKETIMESTUFF	O
(	O
t_cache	array(long)
)	O
[	O
localzone	bool
]	O
;	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
=	O
gt	long
?	O
&	O
MAKETIMESTUFF	O
(	O
tm_cache	array(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
)	O
[	O
localzone	bool
]	O
:	O
time2tm	(long,bool)->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
gt	long
,	O
localzone	bool
)	O
;	O
while	O
(	O
(	O
d	long
=	O
difftm	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))->(long)
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
)	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
--	O
remaining_tries	int
==	O
0	int
)	O
return	O
-	O
1	int
;	O
gt	long
+=	O
d	long
;	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
=	O
time2tm	(long,bool)->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
gt	long
,	O
localzone	bool
)	O
;	O
}	O
MAKETIMESTUFF	O
(	O
t_cache	array(long)
)	O
[	O
localzone	bool
]	O
=	O
gt	long
;	O
MAKETIMESTUFF	O
(	O
tm_cache	array(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
)	O
[	O
localzone	bool
]	O
=	O
*	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
;	O
if	O
(	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_year	int
^	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_year	int
)	O
|	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mon	int
^	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mon	int
)	O
|	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_mday	int
^	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mday	int
)	O
|	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_hour	int
^	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_hour	int
)	O
|	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_min	int
^	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_min	int
)	O
|	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_sec	int
^	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_sec	int
)	O
)	O
return	O
-	O
1	int
;	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
->	O
tm_wday	int
=	O
gtm	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_wday	int
;	O
return	O
gt	long
;	O
}	O
static	O
time_t	long
maketime	(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long)),long)->(long)
(	O
struct	O
partime	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long)
const	O
*	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
,	O
time_t	long
default_time	long
)	O
{	O
bool	bool
localzone	bool
=	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
zone	long
==	O
TM_LOCAL_ZONE	O
;	O
int	O
wday	int
;	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
struct	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
*	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
=	O
NULL	O
;	O
time_t	long
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
=	O
NULL	O
;	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
;	O
if	O
(	O
TM_DEFINED	O
(	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
ymodulus	int
)	O
||	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_year	int
)	O
)	O
{	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
=	O
time2tm	(long,bool)->(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))))
(	O
default_time	long
,	O
localzone	bool
)	O
;	O
if	O
(	O
!	O
localzone	bool
)	O
adjzone	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),long)->(void)
(	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
,	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
zone	long
)	O
;	O
}	O
if	O
(	O
TM_DEFINED	O
(	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
ymodulus	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_year	int
+=	O
(	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
)	O
/	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
ymodulus	int
*	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
ymodulus	int
;	O
else	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_year	int
)	O
)	O
{	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_year	int
=	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_year	int
+	O
TM_YEAR_ORIGIN	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mon	int
)	O
)	O
{	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mon	int
=	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mon	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mday	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mday	int
=	O
tm0	*(struct(int,int,int,int,int,int,int,int,int,long,*(char)))
->	O
tm_mday	int
;	O
}	O
}	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_year	int
-=	O
TM_YEAR_ORIGIN	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mon	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mon	int
=	O
0	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mday	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_mday	int
=	O
1	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_hour	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_hour	int
=	O
0	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_min	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_min	int
=	O
0	int
;	O
if	O
(	O
!	O
TM_DEFINED	O
(	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_sec	int
)	O
)	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_sec	int
=	O
0	int
;	O
if	O
(	O
!	O
localzone	bool
)	O
adjzone	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),long)->(void)
(	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
-	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
zone	long
)	O
;	O
wday	int
=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_wday	int
;	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
tm2time	(*(struct(int,int,int,int,int,int,int,int,int,long,*(char))),bool,int)->(long)
(	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
,	O
localzone	bool
,	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
->	O
yweek	int
)	O
;	O
if	O
(	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
!=	O
-	O
1	int
&&	O
TM_DEFINED	O
(	O
wday	int
)	O
&&	O
wday	int
!=	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
.	O
tm_wday	int
)	O
return	O
-	O
1	int
;	O
return	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
}	O
time_t	long
str2time	(*(char),long,long)->(long)
(	O
char	O
const	O
*	O
source	*(char)
,	O
time_t	long
default_time	long
,	O
long	O
default_zone	long
)	O
{	O
struct	O
partime	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long)
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
;	O
if	O
(	O
*	O
partime	struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long)
(	O
source	*(char)
,	O
&	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
.	O
zone	long
==	O
TM_UNDEFINED_ZONE	O
)	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
.	O
zone	long
=	O
default_zone	long
;	O
return	O
maketime	(*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long)),long)->(long)
(	O
&	O
pt	*(struct(struct(int,int,int,int,int,int,int,int,int,long,*(char)),int,int,long))
,	O
default_time	long
)	O
;	O
}	O
