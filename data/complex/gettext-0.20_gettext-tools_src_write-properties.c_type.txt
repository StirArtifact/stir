static	O
const	O
char	O
*	O
conv_to_java	(*(char))->(*(char))
(	O
const	O
char	O
*	O
string	*(char)
)	O
{	O
static	O
const	O
char	O
hexdigit	array(char)
[	O
]	O
=	O
"0123456789abcdef"	*(char)
;	O
size_t	long
length	long
;	O
char	O
*	O
result	*(*(void))
;	O
if	O
(	O
is_ascii_string	(*(char))->(bool)
(	O
string	*(char)
)	O
)	O
return	O
string	*(char)
;	O
length	long
=	O
0	int
;	O
{	O
const	O
char	O
*	O
str	*(char)
=	O
string	*(char)
;	O
const	O
char	O
*	O
str_limit	*(char)
=	O
str	*(char)
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
while	O
(	O
str	*(char)
<	O
str_limit	*(char)
)	O
{	O
ucs4_t	int
uc	int
;	O
str	*(char)
+=	O
u8_mbtouc	(*(int),*(char),long)->(int)
(	O
&	O
uc	int
,	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
str	*(char)
,	O
str_limit	*(char)
-	O
str	*(char)
)	O
;	O
length	long
+=	O
(	O
uc	int
<=	O
0x007f	int
?	O
1	int
:	O
uc	int
<	O
0x10000	int
?	O
6	int
:	O
12	int
)	O
;	O
}	O
}	O
result	*(*(void))
=	O
XNMALLOC	O
(	O
length	long
+	O
1	int
,	O
char	O
)	O
;	O
{	O
char	O
*	O
newstr	*(char)
=	O
result	*(*(void))
;	O
const	O
char	O
*	O
str	*(char)
=	O
string	*(char)
;	O
const	O
char	O
*	O
str_limit	*(char)
=	O
str	*(char)
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
while	O
(	O
str	*(char)
<	O
str_limit	*(char)
)	O
{	O
ucs4_t	int
uc	int
;	O
str	*(char)
+=	O
u8_mbtouc	(*(int),*(char),long)->(int)
(	O
&	O
uc	int
,	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
str	*(char)
,	O
str_limit	*(char)
-	O
str	*(char)
)	O
;	O
if	O
(	O
uc	int
<=	O
0x007f	int
)	O
*	O
newstr	*(char)
++	O
=	O
uc	int
;	O
else	O
if	O
(	O
uc	int
<	O
0x10000	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
newstr	*(char)
,	O
"\\u%c%c%c%c"	*(char)
,	O
hexdigit	array(char)
[	O
(	O
uc	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
(	O
uc	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
(	O
uc	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
uc	int
&	O
0x0f	int
]	O
)	O
;	O
newstr	*(char)
+=	O
6	int
;	O
}	O
else	O
{	O
ucs4_t	int
uc1	int
=	O
0xd800	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
>>	O
10	int
)	O
;	O
ucs4_t	int
uc2	int
=	O
0xdc00	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
&	O
0x3ff	int
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
newstr	*(char)
,	O
"\\u%c%c%c%c"	*(char)
,	O
hexdigit	array(char)
[	O
(	O
uc1	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
(	O
uc1	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
(	O
uc1	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
uc1	int
&	O
0x0f	int
]	O
)	O
;	O
newstr	*(char)
+=	O
6	int
;	O
sprintf	(*(char),*(char))->(int)
(	O
newstr	*(char)
,	O
"\\u%c%c%c%c"	*(char)
,	O
hexdigit	array(char)
[	O
(	O
uc2	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
(	O
uc2	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
(	O
uc2	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
,	O
hexdigit	array(char)
[	O
uc2	int
&	O
0x0f	int
]	O
)	O
;	O
newstr	*(char)
+=	O
6	int
;	O
}	O
}	O
*	O
newstr	*(char)
=	O
'\0'	O
;	O
}	O
return	O
result	*(*(void))
;	O
}	O
static	O
void	O
write_escaped_string	(*(struct),*(char),bool)->(void)
(	O
ostream_t	*(struct)
stream	*(struct)
,	O
const	O
char	O
*	O
str	*(char)
,	O
bool	bool
in_key	bool
)	O
{	O
static	O
const	O
char	O
hexdigit	array(char)
[	O
]	O
=	O
"0123456789abcdef"	*(char)
;	O
const	O
char	O
*	O
str_limit	*(char)
=	O
str	*(char)
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
bool	bool
first	*(struct)
=	O
true	int
;	O
while	O
(	O
str	*(char)
<	O
str_limit	*(char)
)	O
{	O
ucs4_t	int
uc	int
;	O
str	*(char)
+=	O
u8_mbtouc	(*(int),*(char),long)->(int)
(	O
&	O
uc	int
,	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
str	*(char)
,	O
str_limit	*(char)
-	O
str	*(char)
)	O
;	O
if	O
(	O
uc	int
==	O
0x0020	int
&&	O
(	O
first	*(struct)
||	O
in_key	bool
)	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\ "	*(char)
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x0009	int
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\t"	*(char)
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x000a	int
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\n"	*(char)
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x000d	int
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\r"	*(char)
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
0x000c	int
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\f"	*(char)
)	O
;	O
else	O
if	O
(	O
uc	int
==	O
'\\'	O
||	O
uc	int
==	O
'#'	O
||	O
uc	int
==	O
'!'	O
||	O
uc	int
==	O
'='	O
||	O
uc	int
==	O
':'	O
)	O
{	O
char	O
seq	array(char)
[	O
2	int
]	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array(char)
[	O
1	int
]	O
=	O
uc	int
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
2	int
)	O
;	O
}	O
else	O
if	O
(	O
uc	int
>=	O
0x0020	int
&&	O
uc	int
<=	O
0x007e	int
)	O
{	O
char	O
seq	array(char)
[	O
1	int
]	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
uc	int
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
uc	int
<	O
0x10000	int
)	O
{	O
char	O
seq	array(char)
[	O
6	int
]	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array(char)
[	O
1	int
]	O
=	O
'u'	O
;	O
seq	array(char)
[	O
2	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
3	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
4	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
5	int
]	O
=	O
hexdigit	array(char)
[	O
uc	int
&	O
0x0f	int
]	O
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
6	int
)	O
;	O
}	O
else	O
{	O
ucs4_t	int
uc1	int
=	O
0xd800	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
>>	O
10	int
)	O
;	O
ucs4_t	int
uc2	int
=	O
0xdc00	int
+	O
(	O
(	O
uc	int
-	O
0x10000	int
)	O
&	O
0x3ff	int
)	O
;	O
char	O
seq	array(char)
[	O
6	int
]	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array(char)
[	O
1	int
]	O
=	O
'u'	O
;	O
seq	array(char)
[	O
2	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc1	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
3	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc1	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
4	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc1	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
5	int
]	O
=	O
hexdigit	array(char)
[	O
uc1	int
&	O
0x0f	int
]	O
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
6	int
)	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array(char)
[	O
1	int
]	O
=	O
'u'	O
;	O
seq	array(char)
[	O
2	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc2	int
>>	O
12	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
3	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc2	int
>>	O
8	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
4	int
]	O
=	O
hexdigit	array(char)
[	O
(	O
uc2	int
>>	O
4	int
)	O
&	O
0x0f	int
]	O
;	O
seq	array(char)
[	O
5	int
]	O
=	O
hexdigit	array(char)
[	O
uc2	int
&	O
0x0f	int
]	O
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
6	int
)	O
;	O
}	O
first	*(struct)
=	O
false	int
;	O
}	O
}	O
static	O
void	O
write_message	(*(struct),*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),long,bool)->(void)
(	O
ostream_t	*(struct)
stream	*(struct)
,	O
const	O
message_ty	struct
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
message_print_comment	(*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),*(struct))->(void)
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
stream	*(struct)
)	O
;	O
message_print_comment_dot	(*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),*(struct))->(void)
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
stream	*(struct)
)	O
;	O
message_print_comment_filepos	(*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),*(struct),bool,long)->(void)
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
stream	*(struct)
,	O
false	int
,	O
page_width	long
)	O
;	O
message_print_comment_flags	(*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),*(struct),bool)->(void)
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
stream	*(struct)
,	O
debug	bool
)	O
;	O
if	O
(	O
is_header	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
)	O
||	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
[	O
0	int
]	O
==	O
'\0'	O
||	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
is_fuzzy	bool
&&	O
!	O
is_header	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
)	O
)	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"!"	*(char)
)	O
;	O
write_escaped_string	(*(struct),*(char),bool)->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgid	*(char)
,	O
true	int
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"="	*(char)
)	O
;	O
write_escaped_string	(*(struct),*(char),bool)->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
,	O
false	int
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\n"	*(char)
)	O
;	O
}	O
static	O
void	O
write_properties	(*(struct),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),long,bool)->(void)
(	O
ostream_t	*(struct)
stream	*(struct)
,	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
const	O
char	O
*	O
canon_encoding	*(char)
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
bool	bool
blank_line	bool
;	O
size_t	long
j	long
,	O
i	long
;	O
iconv_message_list	(*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),*(char),*(char))->(bool)
(	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
canon_encoding	*(char)
,	O
po_charset_utf8	*(char)
,	O
NULL	O
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
message_ty	struct
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
=	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
->	O
item	*(*(char))
[	O
j	long
]	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
!=	O
NULL	O
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
->	O
nitems	long
;	O
++	O
i	long
)	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
->	O
item	*(*(char))
[	O
i	long
]	O
=	O
conv_to_java	(*(char))->(*(char))
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
->	O
item	*(*(char))
[	O
i	long
]	O
)	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
!=	O
NULL	O
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
->	O
nitems	long
;	O
++	O
i	long
)	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
->	O
item	*(*(char))
[	O
i	long
]	O
=	O
conv_to_java	(*(char))->(*(char))
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
->	O
item	*(*(char))
[	O
i	long
]	O
)	O
;	O
}	O
blank_line	bool
=	O
false	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
const	O
message_ty	struct
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
=	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
->	O
item	*(*(char))
[	O
j	long
]	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgid_plural	*(char)
==	O
NULL	O
&&	O
!	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
obsolete	bool
)	O
{	O
if	O
(	O
blank_line	bool
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\n"	*(char)
)	O
;	O
write_message	(*(struct),*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),long,bool)->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
page_width	long
,	O
debug	bool
)	O
;	O
blank_line	bool
=	O
true	int
;	O
}	O
}	O
}	O
static	O
void	O
msgdomain_list_print_properties	(*(struct(*(*(struct`)),long,long,bool,*(char))),*(struct),long,bool)->(void)
(	O
msgdomain_list_ty	struct
*	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
,	O
ostream_t	*(struct)
stream	*(struct)
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
;	O
if	O
(	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
nitems	long
==	O
1	int
)	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
=	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
item	*(*(char))
[	O
0	int
]	O
->	O
messages	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
;	O
else	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
=	O
message_list_alloc	(bool)->(*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))))
(	O
false	int
)	O
;	O
write_properties	(*(struct),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),long,bool)->(void)
(	O
stream	*(struct)
,	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
encoding	*(char)
,	O
page_width	long
,	O
debug	bool
)	O
;	O
}	O
const	O
struct	O
catalog_output_format	struct(*((*(struct(*(*`),long,long,bool,*(char))),*(struct),long,bool)->(void)),bool,bool,bool,bool,bool,bool,bool,bool)
output_format_properties	struct(*((*(struct(*`,long,long,bool,*`)),*(struct),long,bool)->(void)),bool,bool,bool,bool,bool,bool,bool,bool)
=	O
{	O
msgdomain_list_print_properties	(*(struct(*(*(struct`)),long,long,bool,*(char))),*(struct),long,bool)->(void)
,	O
true	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
true	int
,	O
true	int
}	O
;	O
