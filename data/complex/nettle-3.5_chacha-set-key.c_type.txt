void	O
chacha_set_key	O
(	O
struct	O
chacha_ctx	struct(array(int))
*	O
ctx	*(void)
,	O
const	O
uint8_t	char
*	O
key	*(char)
)	O
{	O
static	O
const	O
uint32_t	int
sigma	array(int)
[	O
4	int
]	O
=	O
{	O
0x61707865	int
,	O
0x3320646e	int
,	O
0x79622d32	int
,	O
0x6b206574	int
}	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
4	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
0	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
5	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
4	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
6	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
8	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
7	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
12	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
8	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
16	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
9	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
20	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
10	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
24	int
)	O
;	O
ctx	*(void)
->	O
state	*(int)
[	O
11	int
]	O
=	O
LE_READ_UINT32	O
(	O
key	*(char)
+	O
28	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(void)
->	O
state	*(int)
,	O
sigma	array(int)
,	O
sizeof	O
(	O
sigma	array(int)
)	O
)	O
;	O
}	O
