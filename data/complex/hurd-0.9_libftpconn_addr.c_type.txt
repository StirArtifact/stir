error_t	int
ftp_conn_get_pasv_addr	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(*(struct(short,array(char)))))->(int)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
,	O
struct	O
sockaddr	struct(short,array(char))
*	O
*	O
addr	*(*(struct(short,array(char))))
)	O
{	O
int	O
reply	*(int)
;	O
const	O
char	O
*	O
txt	*(char)
;	O
error_t	int
err	int
=	O
ftp_conn_cmd_reopen	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"pasv"	*(char)
,	O
0	int
,	O
&	O
reply	*(int)
,	O
&	O
txt	*(char)
)	O
;	O
if	O
(	O
!	O
err	int
)	O
{	O
if	O
(	O
reply	*(int)
==	O
REPLY_PASV_OK	int
)	O
err	int
=	O
(	O
*	O
(	O
conn	*(struct)
->	O
syshooks	struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int)))
.	O
pasv_addr	*((*(struct),*(char),*(*(struct(short,array(char)))))->(int))
?	O
:	O
ftp_conn_unix_pasv_addr	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(*(struct(short,array(char)))))->(int)
)	O
)	O
(	O
conn	*(struct)
,	O
txt	*(char)
,	O
addr	*(*(struct(short,array(char))))
)	O
;	O
else	O
err	int
=	O
unexpected_reply	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),int,*(char),*(int))->(int)
(	O
conn	*(struct)
,	O
reply	*(int)
,	O
txt	*(char)
,	O
0	int
)	O
;	O
}	O
return	O
err	int
;	O
}	O
error_t	int
ftp_conn_send_actv_addr	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(struct(short,array(char))))->(int)
(	O
struct	O
ftp_conn	struct(*(struct),*(struct(*((*(struct`),*(char))->(void)),*((*(struct`),int,*(char))->(void)),*((*(struct`))->(void)),*((*(struct`),int,*(*`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(int)))),struct(*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(*(struct`)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(int))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),int,*(int),*(*(void)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),int,*(void),*((*`,*`,*`,*`)->(int)),*(void))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(char),*(char),*(*(char)))->(int)),*((*(struct(*`,*`,struct`,int,int,*`,long,long,long,*`,long,*`,*`,*`,int,*`)),*(*(char)))->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))
*	O
conn	*(struct)
,	O
struct	O
sockaddr	struct(short,array(char))
*	O
addr	*(*(struct(short,array(char))))
)	O
{	O
error_t	int
err	int
;	O
if	O
(	O
addr	*(*(struct(short,array(char))))
==	O
0	int
)	O
err	int
=	O
EINVAL	int
;	O
else	O
if	O
(	O
addr	*(*(struct(short,array(char))))
->	O
sa_family	short
!=	O
AF_INET	O
)	O
err	int
=	O
EAFNOSUPPORT	int
;	O
else	O
{	O
char	O
buf	array(char)
[	O
50	int
]	O
;	O
int	O
reply	*(int)
;	O
unsigned	O
char	O
*	O
a	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
&	O
(	O
(	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
*	O
)	O
addr	*(*(struct(short,array(char))))
)	O
->	O
sin_addr	struct(int)
.	O
s_addr	int
;	O
unsigned	O
char	O
*	O
p	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
&	O
(	O
(	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
*	O
)	O
addr	*(*(struct(short,array(char))))
)	O
->	O
sin_port	short
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	array(char)
,	O
sizeof	O
buf	array(char)
,	O
"%d,%d,%d,%d,%d,%d"	*(char)
,	O
a	*(char)
[	O
0	int
]	O
,	O
a	*(char)
[	O
1	int
]	O
,	O
a	*(char)
[	O
2	int
]	O
,	O
a	*(char)
[	O
3	int
]	O
,	O
p	*(char)
[	O
0	int
]	O
,	O
p	*(char)
[	O
1	int
]	O
)	O
;	O
err	int
=	O
ftp_conn_cmd_reopen	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),*(char),*(char),*(int),*(*(char)))->(int)
(	O
conn	*(struct)
,	O
"port"	*(char)
,	O
buf	array(char)
,	O
&	O
reply	*(int)
,	O
0	int
)	O
;	O
if	O
(	O
!	O
err	int
)	O
{	O
if	O
(	O
reply	*(int)
==	O
REPLY_OK	int
)	O
err	int
=	O
0	int
;	O
else	O
err	int
=	O
unexpected_reply	(*(struct(*(struct(*`,long,int,*`,*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,int,*`,*`)->(int)),*((*`,int,*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int))),int,int,*(char),long,long,long,*(char),long,*(char),*(char),*(void),int,*(struct(short,array(char))))),int,*(char),*(int))->(int)
(	O
conn	*(struct)
,	O
reply	*(int)
,	O
0	int
,	O
0	int
)	O
;	O
}	O
}	O
return	O
err	int
;	O
}	O
