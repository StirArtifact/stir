char	O
*	O
mfile_name_concat	(*(char),*(char),*(*(char)))->(*(char))
(	O
char	O
const	O
*	O
dir	*(char)
,	O
char	O
const	O
*	O
base	*(char)
,	O
char	O
*	O
*	O
base_in_result	*(*(char))
)	O
{	O
char	O
const	O
*	O
dirbase	*(char)
=	O
last_component	(*(char))->(*(char))
(	O
dir	*(char)
)	O
;	O
size_t	long
dirbaselen	long
=	O
base_len	(*(char))->(long)
(	O
dirbase	*(char)
)	O
;	O
size_t	long
dirlen	long
=	O
dirbase	*(char)
-	O
dir	*(char)
+	O
dirbaselen	long
;	O
size_t	long
baselen	long
=	O
strlen	(*(char))->(long)
(	O
base	*(char)
)	O
;	O
char	O
sep	char
=	O
'\0'	O
;	O
if	O
(	O
dirbaselen	long
)	O
{	O
if	O
(	O
!	O
ISSLASH	O
(	O
dir	*(char)
[	O
dirlen	long
-	O
1	int
]	O
)	O
&&	O
!	O
ISSLASH	O
(	O
*	O
base	*(char)
)	O
)	O
sep	char
=	O
'/'	O
;	O
}	O
else	O
if	O
(	O
ISSLASH	O
(	O
*	O
base	*(char)
)	O
)	O
{	O
sep	char
=	O
'.'	O
;	O
}	O
char	O
*	O
p_concat	*(char)
=	O
malloc	(long)->(*(void))
(	O
dirlen	long
+	O
(	O
sep	char
!=	O
'\0'	O
)	O
+	O
baselen	long
+	O
1	int
)	O
;	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
p_concat	*(char)
==	O
NULL	O
)	O
return	O
NULL	O
;	O
p	*(char)
=	O
mempcpy	(*(void),*(void),long)->(*(void))
(	O
p_concat	*(char)
,	O
dir	*(char)
,	O
dirlen	long
)	O
;	O
*	O
p	*(char)
=	O
sep	char
;	O
p	*(char)
+=	O
sep	char
!=	O
'\0'	O
;	O
if	O
(	O
base_in_result	*(*(char))
)	O
*	O
base_in_result	*(*(char))
=	O
p	*(char)
;	O
p	*(char)
=	O
mempcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(char)
,	O
base	*(char)
,	O
baselen	long
)	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
return	O
p_concat	*(char)
;	O
}	O
