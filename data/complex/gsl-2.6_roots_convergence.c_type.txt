int	O
gsl_root_test_interval	(double,double,double,double)->(int)
(	O
double	O
x_lower	double
,	O
double	O
x_upper	double
,	O
double	O
epsabs	double
,	O
double	O
epsrel	double
)	O
{	O
const	O
double	O
abs_lower	double
=	O
fabs	(double)->(double)
(	O
x_lower	double
)	O
;	O
const	O
double	O
abs_upper	double
=	O
fabs	(double)->(double)
(	O
x_upper	double
)	O
;	O
double	O
min_abs	double
,	O
tolerance	double
;	O
if	O
(	O
epsrel	double
<	O
0.0	int
)	O
GSL_ERROR	O
(	O
"relative tolerance is negative"	*(char)
,	O
GSL_EBADTOL	int
)	O
;	O
if	O
(	O
epsabs	double
<	O
0.0	int
)	O
GSL_ERROR	O
(	O
"absolute tolerance is negative"	*(char)
,	O
GSL_EBADTOL	int
)	O
;	O
if	O
(	O
x_lower	double
>	O
x_upper	double
)	O
GSL_ERROR	O
(	O
"lower bound larger than upper bound"	*(char)
,	O
GSL_EINVAL	int
)	O
;	O
if	O
(	O
(	O
x_lower	double
>	O
0.0	int
&&	O
x_upper	double
>	O
0.0	int
)	O
||	O
(	O
x_lower	double
<	O
0.0	int
&&	O
x_upper	double
<	O
0.0	int
)	O
)	O
{	O
min_abs	double
=	O
GSL_MIN_DBL	(double,double)->(double)
(	O
abs_lower	double
,	O
abs_upper	double
)	O
;	O
}	O
else	O
{	O
min_abs	double
=	O
0	int
;	O
}	O
tolerance	double
=	O
epsabs	double
+	O
epsrel	double
*	O
min_abs	double
;	O
if	O
(	O
fabs	(double)->(double)
(	O
x_upper	double
-	O
x_lower	double
)	O
<	O
tolerance	double
)	O
return	O
GSL_SUCCESS	int
;	O
return	O
GSL_CONTINUE	int
;	O
}	O
int	O
gsl_root_test_delta	(double,double,double,double)->(int)
(	O
double	O
x1	double
,	O
double	O
x0	double
,	O
double	O
epsabs	double
,	O
double	O
epsrel	double
)	O
{	O
const	O
double	O
tolerance	double
=	O
epsabs	double
+	O
epsrel	double
*	O
fabs	(double)->(double)
(	O
x1	double
)	O
;	O
if	O
(	O
epsrel	double
<	O
0.0	int
)	O
GSL_ERROR	O
(	O
"relative tolerance is negative"	*(char)
,	O
GSL_EBADTOL	int
)	O
;	O
if	O
(	O
epsabs	double
<	O
0.0	int
)	O
GSL_ERROR	O
(	O
"absolute tolerance is negative"	*(char)
,	O
GSL_EBADTOL	int
)	O
;	O
if	O
(	O
fabs	(double)->(double)
(	O
x1	double
-	O
x0	double
)	O
<	O
tolerance	double
||	O
x1	double
==	O
x0	double
)	O
return	O
GSL_SUCCESS	int
;	O
return	O
GSL_CONTINUE	int
;	O
}	O
int	O
gsl_root_test_residual	(double,double)->(int)
(	O
double	O
f	*(double)
,	O
double	O
epsabs	double
)	O
{	O
if	O
(	O
epsabs	double
<	O
0.0	int
)	O
GSL_ERROR	O
(	O
"absolute tolerance is negative"	*(char)
,	O
GSL_EBADTOL	int
)	O
;	O
if	O
(	O
fabs	(double)->(double)
(	O
f	*(double)
)	O
<	O
epsabs	double
)	O
return	O
GSL_SUCCESS	int
;	O
return	O
GSL_CONTINUE	int
;	O
}	O
