double	O
gsl_cdf_fdist_P	(double,double,double)->(double)
(	O
const	O
double	O
x	double
,	O
const	O
double	O
nu1	double
,	O
const	O
double	O
nu2	double
)	O
{	O
double	O
P	double
;	O
double	O
r	*(struct(double,double))
=	O
nu2	double
/	O
nu1	double
;	O
if	O
(	O
x	double
<	O
r	*(struct(double,double))
)	O
{	O
double	O
u	double
=	O
x	double
/	O
(	O
r	*(struct(double,double))
+	O
x	double
)	O
;	O
P	double
=	O
beta_inc_AXPY	(double,double,double,double,double)->(double)
(	O
1.0	int
,	O
0.0	int
,	O
nu1	double
/	O
2.0	int
,	O
nu2	double
/	O
2.0	int
,	O
u	double
)	O
;	O
}	O
else	O
{	O
double	O
u	double
=	O
r	*(struct(double,double))
/	O
(	O
r	*(struct(double,double))
+	O
x	double
)	O
;	O
P	double
=	O
beta_inc_AXPY	(double,double,double,double,double)->(double)
(	O
-	O
1.0	int
,	O
1.0	int
,	O
nu2	double
/	O
2.0	int
,	O
nu1	double
/	O
2.0	int
,	O
u	double
)	O
;	O
}	O
return	O
P	double
;	O
}	O
double	O
gsl_cdf_fdist_Q	(double,double,double)->(double)
(	O
const	O
double	O
x	double
,	O
const	O
double	O
nu1	double
,	O
const	O
double	O
nu2	double
)	O
{	O
double	O
Q	double
;	O
double	O
r	*(struct(double,double))
=	O
nu2	double
/	O
nu1	double
;	O
if	O
(	O
x	double
<	O
r	*(struct(double,double))
)	O
{	O
double	O
u	double
=	O
x	double
/	O
(	O
r	*(struct(double,double))
+	O
x	double
)	O
;	O
Q	double
=	O
beta_inc_AXPY	(double,double,double,double,double)->(double)
(	O
-	O
1.0	int
,	O
1.0	int
,	O
nu1	double
/	O
2.0	int
,	O
nu2	double
/	O
2.0	int
,	O
u	double
)	O
;	O
}	O
else	O
{	O
double	O
u	double
=	O
r	*(struct(double,double))
/	O
(	O
r	*(struct(double,double))
+	O
x	double
)	O
;	O
Q	double
=	O
beta_inc_AXPY	(double,double,double,double,double)->(double)
(	O
1.0	int
,	O
0.0	int
,	O
nu2	double
/	O
2.0	int
,	O
nu1	double
/	O
2.0	int
,	O
u	double
)	O
;	O
}	O
return	O
Q	double
;	O
}	O
