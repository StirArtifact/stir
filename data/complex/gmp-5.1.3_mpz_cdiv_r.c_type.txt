void	O
mpz_cdiv_r	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
rem	long
,	O
mpz_srcptr	*(struct(int,int,*(long)))
dividend	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
divisor	*(struct(int,int,*(long)))
)	O
{	O
mp_size_t	long
divisor_size	long
=	O
SIZ	O
(	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
mpz_t	array(struct(int,int,*(long)))
temp_divisor	array(struct(int,int,*(long)))
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
if	O
(	O
rem	long
==	O
divisor	*(struct(int,int,*(long)))
)	O
{	O
MPZ_TMP_INIT	O
(	O
temp_divisor	array(struct(int,int,*(long)))
,	O
ABS	O
(	O
divisor_size	long
)	O
)	O
;	O
mpz_set	O
(	O
temp_divisor	array(struct(int,int,*(long)))
,	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
divisor	*(struct(int,int,*(long)))
=	O
temp_divisor	array(struct(int,int,*(long)))
;	O
}	O
mpz_tdiv_r	O
(	O
rem	long
,	O
dividend	*(struct(int,int,*(long)))
,	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
if	O
(	O
(	O
divisor_size	long
^	O
SIZ	O
(	O
dividend	*(struct(int,int,*(long)))
)	O
)	O
>=	O
0	int
&&	O
SIZ	O
(	O
rem	long
)	O
!=	O
0	int
)	O
mpz_sub	O
(	O
rem	long
,	O
rem	long
,	O
divisor	*(struct(int,int,*(long)))
)	O
;	O
TMP_FREE	O
;	O
}	O
