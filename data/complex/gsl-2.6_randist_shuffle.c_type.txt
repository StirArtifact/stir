static	O
inline	O
void	O
swap	(*(void),long,long,long)->(void)
(	O
void	O
*	O
base	*(long double)
,	O
size_t	long
size	long
,	O
size_t	long
i	long
,	O
size_t	long
j	long
)	O
{	O
register	O
char	O
*	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
size	long
*	O
i	long
+	O
(	O
char	O
*	O
)	O
base	*(long double)
;	O
register	O
char	O
*	O
b	*(struct(long,*(long double)))
=	O
size	long
*	O
j	long
+	O
(	O
char	O
*	O
)	O
base	*(long double)
;	O
register	O
size_t	long
s	*(float)
=	O
size	long
;	O
if	O
(	O
i	long
==	O
j	long
)	O
return	O
;	O
do	O
{	O
char	O
tmp	char
=	O
*	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
*	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
++	O
=	O
*	O
b	*(struct(long,*(long double)))
;	O
*	O
b	*(struct(long,*(long double)))
++	O
=	O
tmp	char
;	O
}	O
while	O
(	O
--	O
s	*(float)
>	O
0	int
)	O
;	O
}	O
static	O
inline	O
void	O
copy	(*(void),long,*(void),long,long)->(void)
(	O
void	O
*	O
dest	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
size_t	long
i	long
,	O
void	O
*	O
src	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
size_t	long
j	long
,	O
size_t	long
size	long
)	O
{	O
register	O
char	O
*	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
size	long
*	O
i	long
+	O
(	O
char	O
*	O
)	O
dest	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
;	O
register	O
char	O
*	O
b	*(struct(long,*(long double)))
=	O
size	long
*	O
j	long
+	O
(	O
char	O
*	O
)	O
src	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
;	O
register	O
size_t	long
s	*(float)
=	O
size	long
;	O
do	O
{	O
*	O
a	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
++	O
=	O
*	O
b	*(struct(long,*(long double)))
++	O
;	O
}	O
while	O
(	O
--	O
s	*(float)
>	O
0	int
)	O
;	O
}	O
void	O
gsl_ran_shuffle	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),*(void),long,long)->(void)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
void	O
*	O
base	*(long double)
,	O
size_t	long
n	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
n	long
-	O
1	int
;	O
i	long
>	O
0	int
;	O
i	long
--	O
)	O
{	O
size_t	long
j	long
=	O
gsl_rng_uniform_int	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),long)->(long)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
i	long
+	O
1	int
)	O
;	O
swap	(*(void),long,long,long)->(void)
(	O
base	*(long double)
,	O
size	long
,	O
i	long
,	O
j	long
)	O
;	O
}	O
}	O
int	O
gsl_ran_choose	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),*(void),long,*(void),long,long)->(int)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
void	O
*	O
dest	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
size_t	long
k	long
,	O
void	O
*	O
src	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
size_t	long
n	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	long
,	O
j	long
=	O
0	int
;	O
if	O
(	O
k	long
>	O
n	long
)	O
{	O
GSL_ERROR	O
(	O
"k is greater than n, cannot sample more than n items"	*(char)
,	O
GSL_EINVAL	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	long
&&	O
j	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
(	O
n	long
-	O
i	long
)	O
*	O
gsl_rng_uniform	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))))->(double)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
)	O
<	O
k	long
-	O
j	long
)	O
{	O
copy	(*(void),long,*(void),long,long)->(void)
(	O
dest	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
j	long
,	O
src	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
i	long
,	O
size	long
)	O
;	O
j	long
++	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
void	O
gsl_ran_sample	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),*(void),long,*(void),long,long)->(void)
(	O
const	O
gsl_rng	struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void))
*	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
void	O
*	O
dest	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
size_t	long
k	long
,	O
void	O
*	O
src	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
size_t	long
n	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	long
,	O
j	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
j	long
=	O
gsl_rng_uniform_int	(*(struct(*(struct(*`,long,long,long,*`,*`,*`)),*(void))),long)->(long)
(	O
r	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
n	long
)	O
;	O
copy	(*(void),long,*(void),long,long)->(void)
(	O
dest	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
i	long
,	O
src	*(struct(*(struct(*(char),long,long,long,*((*`,long)->(void)),*((*`)->(long)),*((*`)->(double)))),*(void)))
,	O
j	long
,	O
size	long
)	O
;	O
}	O
}	O
