const	O
char	O
_uuconf_hport_rcsid	array(char)
[	O
]	O
=	O
"$Id: hport.c,v 1.18 2002/03/05 19:10:42 ian Rel $"	*(char)
;	O
int	O
uuconf_hdb_find_port	(*(void),*(char),long,long,*((*(struct(*`,enum(int,int,int,int,int,int,int),*`,*`,int,*`,*`,union`)),*(void))->(int)),*(void),*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))->(int)
(	O
pglobal	*(void)
,	O
zname	*(char)
,	O
ibaud	long
,	O
ihighbaud	long
,	O
pifn	*((*(void),int,*(*(char)),*(void),*(void))->(int))
,	O
pinfo	*(void)
,	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
)	O
pointer	*(void)
pglobal	*(void)
;	O
const	O
char	O
*	O
zname	*(char)
;	O
long	O
ibaud	long
;	O
long	O
ihighbaud	long
ATTRIBUTE_UNUSED	O
;	O
int	O
(	O
*	O
pifn	*((*(void),int,*(*(char)),*(void),*(void))->(int))
)	O
P	O
(	O
(	O
struct	O
uuconf_port	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*(*`))))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
*	O
,	O
pointer	*(void)
)	O
)	O
;	O
pointer	*(void)
pinfo	*(void)
;	O
struct	O
uuconf_port	struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct(int,*(*`))))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char)))))
*	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
;	O
{	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
=	O
(	O
struct	O
sglobal	struct(*(struct),*(void),int,*(char),int)
*	O
)	O
pglobal	*(void)
;	O
char	O
*	O
zline	*(char)
;	O
size_t	long
cline	long
;	O
char	O
*	O
*	O
pzsplit	*(*(char))
;	O
size_t	long
csplit	*(long)
;	O
int	O
iret	int
;	O
char	O
*	O
*	O
pz	*(*(char))
;	O
zline	*(char)
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
pzsplit	*(*(char))
=	O
NULL	O
;	O
csplit	*(long)
=	O
0	int
;	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
for	O
(	O
pz	*(*(char))
=	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
qprocess	*(struct)
->	O
pzhdb_devices	*(*(char))
;	O
*	O
pz	*(*(char))
!=	O
NULL	O
;	O
pz	*(*(char))
++	O
)	O
{	O
FILE	struct
*	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
cchars	int
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ilineno	int
=	O
0	int
;	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
*	O
pz	*(*(char))
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
==	O
NULL	O
)	O
{	O
if	O
(	O
FNO_SUCH_FILE	O
(	O
)	O
)	O
continue	O
;	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_FOPEN_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
while	O
(	O
(	O
cchars	int
=	O
_uuconf_getline	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,int,int,int,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,int,*`)),*(void),int,*(char),int)),*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
,	O
&	O
zline	*(char)
,	O
&	O
cline	long
,	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
>	O
0	int
)	O
{	O
int	O
ctoks	int
;	O
char	O
*	O
z	*(char)
,	O
*	O
zprotos	*(char)
,	O
*	O
zport	*(char)
;	O
long	O
ilow	long
,	O
ihigh	long
;	O
pointer	*(void)
pblock	*(void)
;	O
char	O
*	O
*	O
*	O
ppzdialer	*(*(*(char)))
;	O
++	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ilineno	int
;	O
iret	int
=	O
UUCONF_NOT_FOUND	O
;	O
--	O
cchars	int
;	O
if	O
(	O
zline	*(char)
[	O
cchars	int
]	O
==	O
'\n'	O
)	O
zline	*(char)
[	O
cchars	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
isspace	(int)->(int)
(	O
BUCHAR	O
(	O
zline	*(char)
[	O
0	int
]	O
)	O
)	O
||	O
zline	*(char)
[	O
0	int
]	O
==	O
'#'	O
)	O
continue	O
;	O
ctoks	int
=	O
_uuconf_istrsplit	(*(char),int,*(*(*(char))),*(long))->(int)
(	O
zline	*(char)
,	O
'\0'	O
,	O
&	O
pzsplit	*(*(char))
,	O
&	O
csplit	*(long)
)	O
;	O
if	O
(	O
ctoks	int
<	O
0	int
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
if	O
(	O
ctoks	int
<	O
4	int
)	O
continue	O
;	O
zprotos	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
pzsplit	*(*(char))
[	O
0	int
]	O
,	O
','	O
)	O
;	O
if	O
(	O
zprotos	*(char)
!=	O
NULL	O
)	O
{	O
*	O
zprotos	*(char)
=	O
'\0'	O
;	O
++	O
zprotos	*(char)
;	O
}	O
zport	*(char)
=	O
pzsplit	*(*(char))
[	O
0	int
]	O
;	O
z	*(char)
=	O
pzsplit	*(*(char))
[	O
3	int
]	O
;	O
if	O
(	O
strcasecmp	(*(char),*(char))->(int)
(	O
z	*(char)
,	O
"Any"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
z	*(char)
,	O
"-"	*(char)
)	O
==	O
0	int
)	O
{	O
ilow	long
=	O
0L	int
;	O
ihigh	long
=	O
0L	int
;	O
}	O
else	O
{	O
char	O
*	O
zend	*(char)
;	O
while	O
(	O
*	O
z	*(char)
!=	O
'\0'	O
&&	O
!	O
isdigit	(int)->(int)
(	O
BUCHAR	O
(	O
*	O
z	*(char)
)	O
)	O
)	O
++	O
z	*(char)
;	O
ilow	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
z	*(char)
,	O
&	O
zend	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
zend	*(char)
==	O
'-'	O
)	O
ihigh	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
zend	*(char)
+	O
1	int
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
else	O
ihigh	long
=	O
ilow	long
;	O
if	O
(	O
z	*(char)
!=	O
pzsplit	*(*(char))
[	O
3	int
]	O
)	O
{	O
size_t	long
cclass	long
,	O
cport	long
;	O
cclass	long
=	O
z	*(char)
-	O
pzsplit	*(*(char))
[	O
3	int
]	O
;	O
cport	long
=	O
strlen	(*(char))->(long)
(	O
pzsplit	*(*(char))
[	O
0	int
]	O
)	O
;	O
zport	*(char)
=	O
malloc	(long)->(*(void))
(	O
cport	long
+	O
cclass	long
+	O
1	int
)	O
;	O
if	O
(	O
zport	*(char)
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
zport	*(char)
,	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
[	O
0	int
]	O
,	O
cport	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
(	O
zport	*(char)
+	O
cport	long
)	O
,	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
[	O
3	int
]	O
,	O
cclass	long
)	O
;	O
zport	*(char)
[	O
cport	long
+	O
cclass	long
]	O
=	O
'\0'	O
;	O
}	O
}	O
if	O
(	O
(	O
zname	*(char)
!=	O
NULL	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
zport	*(char)
,	O
zname	*(char)
)	O
!=	O
0	int
)	O
||	O
(	O
ibaud	long
!=	O
0	int
&&	O
ilow	long
!=	O
0	int
&&	O
(	O
ilow	long
>	O
ibaud	long
||	O
ihigh	long
<	O
ibaud	long
)	O
)	O
)	O
{	O
if	O
(	O
zport	*(char)
!=	O
pzsplit	*(*(char))
[	O
0	int
]	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zport	*(char)
)	O
;	O
continue	O
;	O
}	O
pzsplit	*(*(char))
[	O
1	int
]	O
[	O
strcspn	(*(char),*(char))->(long)
(	O
pzsplit	*(*(char))
[	O
1	int
]	O
,	O
","	*(char)
)	O
]	O
=	O
'\0'	O
;	O
pblock	*(void)
=	O
NULL	O
;	O
_uuconf_uclear_port	(*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*`)),int,*(char),*(void),union(struct(int),struct(*`,*`,long,long,long,int,int,*`,*`),struct(*`,long,int,int),struct(*`,int,*`),struct(*`,int,*`,*`,*`),struct(*`)))))->(void)
(	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
)	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_zname	*(char)
=	O
zport	*(char)
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_zprotocols	*(char)
=	O
zprotos	*(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
pzsplit	*(*(char))
[	O
0	int
]	O
,	O
"Direct"	*(char)
)	O
==	O
0	int
)	O
{	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
=	O
UUCONF_PORTTYPE_DIRECT	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_zdevice	*(char)
=	O
pzsplit	*(*(char))
[	O
1	int
]	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_ibaud	long
=	O
ilow	long
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_fcarrier	int
=	O
FALSE	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_sdirect	struct(*(char),long,int,int)
.	O
uuconf_fhardflow	int
=	O
TRUE	O
;	O
ppzdialer	*(*(*(char)))
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
pzsplit	*(*(char))
[	O
0	int
]	O
,	O
"TCP"	*(char)
)	O
==	O
0	int
)	O
{	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
=	O
UUCONF_PORTTYPE_TCP	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
|	O
UUCONF_RELIABLE_SPECIFIED	O
)	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stcp	struct(*(char),int,*(*(char)))
.	O
uuconf_zport	*(char)
=	O
pzsplit	*(*(char))
[	O
1	int
]	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stcp	struct(*(char),int,*(*(char)))
.	O
uuconf_iversion	int
=	O
0	int
;	O
ppzdialer	*(*(*(char)))
=	O
&	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stcp	struct(*(char),int,*(*(char)))
.	O
uuconf_pzdialer	*(*(char))
;	O
}	O
else	O
if	O
(	O
ctoks	int
>=	O
5	int
&&	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
pzsplit	*(*(char))
[	O
4	int
]	O
,	O
"TLI"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
pzsplit	*(*(char))
[	O
4	int
]	O
,	O
"TLIS"	*(char)
)	O
==	O
0	int
)	O
)	O
{	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
=	O
UUCONF_PORTTYPE_TLI	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stli	struct(*(char),int,*(*(char)),*(*(char)),*(char))
.	O
uuconf_zdevice	*(char)
=	O
pzsplit	*(*(char))
[	O
1	int
]	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stli	struct(*(char),int,*(*(char)),*(*(char)),*(char))
.	O
uuconf_fstream	int
=	O
strcmp	(*(char),*(char))->(int)
(	O
pzsplit	*(*(char))
[	O
4	int
]	O
,	O
"TLIS"	*(char)
)	O
==	O
0	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stli	struct(*(char),int,*(*(char)),*(*(char)),*(char))
.	O
uuconf_pzpush	*(*(char))
=	O
NULL	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stli	struct(*(char),int,*(*(char)),*(*(char)),*(char))
.	O
uuconf_zservaddr	*(char)
=	O
NULL	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
|	O
UUCONF_RELIABLE_SPECIFIED	O
)	O
;	O
ppzdialer	*(*(*(char)))
=	O
&	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_stli	struct(*(char),int,*(*(char)),*(*(char)),*(char))
.	O
uuconf_pzdialer	*(*(char))
;	O
}	O
else	O
{	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_ttype	enum(int,int,int,int,int,int,int)
=	O
UUCONF_PORTTYPE_MODEM	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_zdevice	*(char)
=	O
pzsplit	*(*(char))
[	O
1	int
]	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
pzsplit	*(*(char))
[	O
2	int
]	O
,	O
"-"	*(char)
)	O
!=	O
0	int
)	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_zdial_device	*(char)
=	O
pzsplit	*(*(char))
[	O
2	int
]	O
;	O
else	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_zdial_device	*(char)
=	O
NULL	O
;	O
if	O
(	O
ilow	long
==	O
ihigh	long
)	O
{	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_ibaud	long
=	O
ilow	long
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_ilowbaud	long
=	O
0L	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_ihighbaud	long
=	O
0L	int
;	O
}	O
else	O
{	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_ibaud	long
=	O
0L	int
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_ilowbaud	long
=	O
ilow	long
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_ihighbaud	long
=	O
ihigh	long
;	O
}	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_fcarrier	int
=	O
TRUE	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_fhardflow	int
=	O
TRUE	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_qdialer	*(struct)
=	O
NULL	O
;	O
ppzdialer	*(*(*(char)))
=	O
&	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_u	union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct)),struct(*(char),long,int,int),struct(*(char),int,*(*(char))),struct(*(char),int,*(*(char)),*(*(char)),*(char)),struct(*(*(char))))
.	O
uuconf_smodem	struct(*(char),*(char),long,long,long,int,int,*(*(char)),*(struct))
.	O
uuconf_pzdialer	*(*(char))
;	O
}	O
if	O
(	O
ppzdialer	*(*(*(char)))
!=	O
NULL	O
)	O
{	O
if	O
(	O
ctoks	int
<	O
5	int
)	O
*	O
ppzdialer	*(*(*(char)))
=	O
NULL	O
;	O
else	O
{	O
size_t	long
c	long
;	O
char	O
*	O
*	O
pzd	*(*(char))
;	O
pblock	*(void)
=	O
uuconf_malloc_block	()->(*(void))
(	O
)	O
;	O
if	O
(	O
pblock	*(void)
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
c	long
=	O
(	O
ctoks	int
-	O
4	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
;	O
pzd	*(*(char))
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	(*(void),long)->(*(void))
(	O
pblock	*(void)
,	O
c	long
+	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
pzd	*(*(char))
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
uuconf_free_block	(*(void))->(void)
(	O
pblock	*(void)
)	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
pointer	*(void)
)	O
pzd	*(*(char))
,	O
(	O
pointer	*(void)
)	O
(	O
pzsplit	*(*(char))
+	O
4	int
)	O
,	O
c	long
)	O
;	O
pzd	*(*(char))
[	O
ctoks	int
-	O
4	int
]	O
=	O
NULL	O
;	O
*	O
ppzdialer	*(*(*(char)))
=	O
pzd	*(*(char))
;	O
}	O
}	O
if	O
(	O
pifn	*((*(void),int,*(*(char)),*(void),*(void))->(int))
!=	O
NULL	O
)	O
{	O
iret	int
=	O
(	O
*	O
pifn	*((*(void),int,*(*(char)),*(void),*(void))->(int))
)	O
(	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
,	O
pinfo	*(void)
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
zport	*(char)
!=	O
pzsplit	*(*(char))
[	O
0	int
]	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zport	*(char)
)	O
;	O
if	O
(	O
pblock	*(void)
!=	O
NULL	O
)	O
uuconf_free_block	(*(void))->(void)
(	O
pblock	*(void)
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_NOT_FOUND	O
)	O
break	O
;	O
continue	O
;	O
}	O
}	O
if	O
(	O
pblock	*(void)
==	O
NULL	O
)	O
{	O
pblock	*(void)
=	O
uuconf_malloc_block	()->(*(void))
(	O
)	O
;	O
if	O
(	O
pblock	*(void)
==	O
NULL	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
uuconf_add_block	(*(void),*(void))->(int)
(	O
pblock	*(void)
,	O
zline	*(char)
)	O
!=	O
0	int
||	O
(	O
zport	*(char)
!=	O
pzsplit	*(*(char))
[	O
0	int
]	O
&&	O
uuconf_add_block	(*(void),*(void))->(int)
(	O
pblock	*(void)
,	O
zport	*(char)
)	O
!=	O
0	int
)	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
ierrno	int
=	O
errno	O
;	O
uuconf_free_block	(*(void))->(void)
(	O
pblock	*(void)
)	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
zline	*(char)
=	O
NULL	O
;	O
qport	*(struct(*(char),enum(int,int,int,int,int,int,int),*(char),*(struct(int,*(struct`))),int,*(char),*(void),union(struct(int),struct(*(char),*(char),long,long,long,int,int,*(*`),*(struct`)),struct(*(char),long,int,int),struct(*(char),int,*(*`)),struct(*(char),int,*(*`),*(*`),*(char)),struct(*(*`)))))
->	O
uuconf_palloc	*(void)
=	O
pblock	*(void)
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
break	O
;	O
}	O
(	O
void	O
)	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
e	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_NOT_FOUND	O
)	O
break	O
;	O
}	O
if	O
(	O
zline	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
zline	*(char)
)	O
;	O
if	O
(	O
pzsplit	*(*(char))
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
(	O
pointer	*(void)
)	O
pzsplit	*(*(char))
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
&&	O
iret	int
!=	O
UUCONF_NOT_FOUND	O
)	O
{	O
qglobal	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,*(char),int,int,*(*`),*(*`),*(char),*(*`),*(*`),*(*`),*(*`),*(*`),*(struct`),int,*(struct`),*(struct`),int,*(char),*(char),*(char),*(char),*(*`),*(*`),*(*`),int,*(struct`))),*(void),int,*(char),int))
->	O
zfilename	*(char)
=	O
*	O
pz	*(*(char))
;	O
iret	int
|=	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
return	O
iret	int
;	O
}	O
