int	O
checkaline	(*(struct(*(char),struct(*(char),struct(short,short,struct`,array(char)),*(char),int),*(char),*(char))))->(int)
(	O
struct	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
*	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
)	O
{	O
char	O
*	O
p	*(*(void))
;	O
size_t	long
plen	long
;	O
int	O
i	*(int)
,	O
n	long
,	O
m	int
;	O
int	O
ret	int
;	O
ret	int
=	O
EXIT_FAILURE	int
;	O
p	*(*(void))
=	O
strchr	(*(char),int)->(*(char))
(	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
,	O
'@'	O
)	O
;	O
if	O
(	O
p	*(*(void))
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Type of testproxy is default to HTTP:%s\n"	*(char)
,	O
progname	*(char)
,	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
)	O
;	O
plen	long
=	O
strlen	(*(char))->(long)
(	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
)	O
;	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
proto	int
=	O
HTTP	int
;	O
}	O
else	O
{	O
p	*(*(void))
++	O
;	O
if	O
(	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
p	*(*(void))
,	O
"HTTP"	*(char)
,	O
4	int
)	O
==	O
0	int
)	O
||	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
p	*(*(void))
,	O
"http"	*(char)
,	O
4	int
)	O
==	O
0	int
)	O
)	O
{	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
proto	int
=	O
HTTP	int
;	O
}	O
else	O
if	O
(	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
p	*(*(void))
,	O
"SOCKS5"	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
||	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
p	*(*(void))
,	O
"socks5"	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
)	O
{	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
proto	int
=	O
SOCKS5	int
;	O
}	O
else	O
if	O
(	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
p	*(*(void))
,	O
"SOCKS4"	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
||	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
p	*(*(void))
,	O
"socks4"	*(char)
,	O
6	int
)	O
==	O
0	int
)	O
)	O
{	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
proto	int
=	O
SOCKS4	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Protocol %s at ...%s is not implemented\n"	*(char)
,	O
progname	*(char)
,	O
p	*(*(void))
,	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
p	*(*(void))
--	O
;	O
plen	long
=	O
p	*(*(void))
-	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
;	O
}	O
if	O
(	O
plen	long
<	O
strlen	(*(char))->(long)
(	O
"1.2.3.4:8"	*(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Invalid testproxy:%s\n"	*(char)
,	O
progname	*(char)
,	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
p	*(*(void))
=	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
;	O
i	*(int)
=	O
0	int
;	O
m	int
=	O
0	int
;	O
for	O
(	O
n	long
=	O
0	int
;	O
n	long
<	O
plen	long
;	O
n	long
++	O
)	O
{	O
if	O
(	O
(	O
m	int
<=	O
3	int
)	O
&&	O
(	O
m	int
>=	O
0	int
)	O
)	O
{	O
if	O
(	O
*	O
p	*(*(void))
==	O
':'	O
)	O
{	O
if	O
(	O
m	int
!=	O
3	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:The ':' appeared too early\n"	*(char)
,	O
progname	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
m	int
=	O
8	int
;	O
i	*(int)
=	O
0	int
;	O
p	*(*(void))
++	O
;	O
continue	O
;	O
}	O
if	O
(	O
*	O
p	*(*(void))
==	O
'.'	O
)	O
{	O
if	O
(	O
i	*(int)
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline: No digit before '.' \n"	*(char)
,	O
progname	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
m	int
==	O
3	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Trailing '.' is not needed\n"	*(char)
,	O
progname	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
i	*(int)
=	O
0	int
;	O
m	int
++	O
;	O
p	*(*(void))
++	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
isdigit	(int)->(int)
(	O
*	O
p	*(*(void))
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Not a digit in host field\n"	*(char)
,	O
progname	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
i	*(int)
++	O
;	O
}	O
}	O
else	O
if	O
(	O
m	int
==	O
8	int
)	O
{	O
if	O
(	O
i	*(int)
>=	O
5	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline: Port width > 5\n"	*(char)
,	O
progname	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
isdigit	(int)->(int)
(	O
*	O
p	*(*(void))
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Port %s at %d:%dis not in digit format\n"	*(char)
,	O
progname	*(char)
,	O
p	*(*(void))
,	O
plen	long
,	O
p	*(*(void))
-	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
i	*(int)
++	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: checkaline:Invalid field at offset %d\n"	*(char)
,	O
progname	*(char)
,	O
p	*(*(void))
-	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
p	*(*(void))
++	O
;	O
}	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
testproxy	*(char)
=	O
pmalloc	(long,*(struct(*(char),struct(*(char),struct(short,short,struct`,array(char)),*(char),int),*(char),*(char))))->(*(void))
(	O
plen	long
+	O
1	int
,	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
)	O
;	O
if	O
(	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
testproxy	*(char)
==	O
NULL	O
)	O
x_pthread_exit	(*(void),*(struct(*(char),struct(*(char),struct(short,short,struct`,array(char)),*(char),int),*(char),*(char))))->(void)
(	O
(	O
void	O
*	O
)	O
&	O
ret	int
,	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
testproxy	*(char)
,	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
line	*(char)
,	O
plen	long
)	O
;	O
*	O
(	O
thread_mem	struct(*(char),struct(*(char),struct(short,short,struct(int),array(char)),*(char),int),*(char),*(char))
->	O
queue	struct(*(char),struct(short,short,struct(int),array(char)),*(char),int)
.	O
testproxy	*(char)
+	O
plen	long
)	O
=	O
'\0'	O
;	O
return	O
0	int
;	O
}	O
