int	O
pipe2	(array(int),int)->(int)
(	O
int	O
fd	array(int)
[	O
2	int
]	O
,	O
int	O
flags	int
)	O
{	O
int	O
tmp	array(int)
[	O
2	int
]	O
;	O
tmp	array(int)
[	O
0	int
]	O
=	O
fd	array(int)
[	O
0	int
]	O
;	O
tmp	array(int)
[	O
1	int
]	O
=	O
fd	array(int)
[	O
1	int
]	O
;	O
{	O
static	O
int	O
have_pipe2_really	int
;	O
if	O
(	O
have_pipe2_really	int
>=	O
0	int
)	O
{	O
int	O
result	int
=	O
pipe2	(array(int),int)->(int)
(	O
fd	array(int)
,	O
flags	int
)	O
;	O
if	O
(	O
!	O
(	O
result	int
<	O
0	int
&&	O
errno	O
==	O
ENOSYS	int
)	O
)	O
{	O
have_pipe2_really	int
=	O
1	int
;	O
return	O
result	int
;	O
}	O
have_pipe2_really	int
=	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
(	O
flags	int
&	O
~	O
(	O
O_CLOEXEC	O
|	O
O_NONBLOCK	int
|	O
O_BINARY	int
|	O
O_TEXT	int
)	O
)	O
!=	O
0	int
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
pipe	(array(int))->(int)
(	O
fd	array(int)
)	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
flags	int
&	O
O_NONBLOCK	int
)	O
{	O
int	O
fcntl_flags	int
;	O
if	O
(	O
(	O
fcntl_flags	int
=	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
1	int
]	O
,	O
F_GETFL	int
,	O
0	int
)	O
)	O
<	O
0	int
||	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
1	int
]	O
,	O
F_SETFL	int
,	O
fcntl_flags	int
|	O
O_NONBLOCK	int
)	O
==	O
-	O
1	int
||	O
(	O
fcntl_flags	int
=	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
0	int
]	O
,	O
F_GETFL	int
,	O
0	int
)	O
)	O
<	O
0	int
||	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
0	int
]	O
,	O
F_SETFL	int
,	O
fcntl_flags	int
|	O
O_NONBLOCK	int
)	O
==	O
-	O
1	int
)	O
goto	O
fail	O
;	O
}	O
if	O
(	O
flags	int
&	O
O_CLOEXEC	O
)	O
{	O
int	O
fcntl_flags	int
;	O
if	O
(	O
(	O
fcntl_flags	int
=	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
1	int
]	O
,	O
F_GETFD	int
,	O
0	int
)	O
)	O
<	O
0	int
||	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
1	int
]	O
,	O
F_SETFD	int
,	O
fcntl_flags	int
|	O
FD_CLOEXEC	int
)	O
==	O
-	O
1	int
||	O
(	O
fcntl_flags	int
=	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
0	int
]	O
,	O
F_GETFD	int
,	O
0	int
)	O
)	O
<	O
0	int
||	O
fcntl	(int,int)->(int)
(	O
fd	array(int)
[	O
0	int
]	O
,	O
F_SETFD	int
,	O
fcntl_flags	int
|	O
FD_CLOEXEC	int
)	O
==	O
-	O
1	int
)	O
goto	O
fail	O
;	O
}	O
return	O
0	int
;	O
fail	O
:	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
close	(int)->(int)
(	O
fd	array(int)
[	O
0	int
]	O
)	O
;	O
close	(int)->(int)
(	O
fd	array(int)
[	O
1	int
]	O
)	O
;	O
fd	array(int)
[	O
0	int
]	O
=	O
tmp	array(int)
[	O
0	int
]	O
;	O
fd	array(int)
[	O
1	int
]	O
=	O
tmp	array(int)
[	O
1	int
]	O
;	O
errno	O
=	O
saved_errno	int
;	O
return	O
-	O
1	int
;	O
}	O
}	O
