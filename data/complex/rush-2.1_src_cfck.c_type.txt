int	O
config_file_checks	O
=	O
RUSH_CHK_DEFAULT	O
;	O
static	O
int	O
check_nonroot_owner	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
{	O
return	O
filest	O
->	O
st_uid	int
!=	O
0	int
;	O
}	O
static	O
int	O
check_iwgrp	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
{	O
return	O
filest	O
->	O
st_mode	int
&	O
S_IWGRP	O
;	O
}	O
static	O
int	O
check_iwoth	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
{	O
return	O
filest	O
->	O
st_mode	int
&	O
S_IWOTH	O
;	O
}	O
static	O
int	O
check_linked_wrdir	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
{	O
return	O
(	O
(	O
filest	O
->	O
st_mode	int
&	O
S_IFMT	O
)	O
==	O
S_IFLNK	O
)	O
&&	O
(	O
dirst	O
->	O
st_mode	int
&	O
(	O
S_IWGRP	O
|	O
S_IWOTH	O
)	O
)	O
;	O
}	O
static	O
int	O
check_dir_iwgrp	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
{	O
return	O
dirst	O
->	O
st_mode	int
&	O
S_IWGRP	O
;	O
}	O
static	O
int	O
check_dir_iwoth	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
{	O
return	O
dirst	O
->	O
st_mode	int
&	O
S_IWOTH	O
;	O
}	O
struct	O
perm_checker	O
{	O
int	O
flag	*(int)
;	O
char	O
*	O
descr	O
;	O
int	O
(	O
*	O
fun	O
)	O
(	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
filest	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
dirst	O
)	O
;	O
}	O
;	O
static	O
struct	O
perm_checker	O
perm_check_tab	O
[	O
]	O
=	O
{	O
{	O
RUSH_CHK_OWNER	O
,	O
N_	O
(	O
"file not owned by root"	*(char)
)	O
,	O
check_nonroot_owner	O
}	O
,	O
{	O
RUSH_CHK_IWGRP	O
,	O
N_	O
(	O
"group writable configuration file"	*(char)
)	O
,	O
check_iwgrp	O
}	O
,	O
{	O
RUSH_CHK_IWOTH	O
,	O
N_	O
(	O
"world writable configuration file"	*(char)
)	O
,	O
check_iwoth	O
}	O
,	O
{	O
RUSH_CHK_LINK	O
,	O
N_	O
(	O
"linked configuration file in writable dir"	*(char)
)	O
,	O
check_linked_wrdir	O
}	O
,	O
{	O
RUSH_CHK_DIR_IWGRP	O
,	O
N_	O
(	O
"configuration file in group writable directory"	*(char)
)	O
,	O
check_dir_iwgrp	O
}	O
,	O
{	O
RUSH_CHK_DIR_IWOTH	O
,	O
N_	O
(	O
"configuration file in world writable directory"	*(char)
)	O
,	O
check_dir_iwoth	O
}	O
,	O
{	O
0	int
}	O
}	O
;	O
int	O
check_config_permissions	O
(	O
const	O
char	O
*	O
filename	O
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
st	O
)	O
{	O
int	O
i	O
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
dirst	O
;	O
char	O
*	O
dirname	O
;	O
dirname	O
=	O
dir_name	O
(	O
filename	O
)	O
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
dirname	O
,	O
&	O
dirst	O
)	O
)	O
{	O
logmsg	O
(	O
LOG_NOTICE	O
,	O
_	O
(	O
"%s: cannot stat directory: %s"	*(char)
)	O
,	O
dirname	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
free	(*(void))->(void)
(	O
dirname	O
)	O
;	O
return	O
1	int
;	O
}	O
free	(*(void))->(void)
(	O
dirname	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
perm_check_tab	O
[	O
i	O
]	O
.	O
flag	*(int)
;	O
i	O
++	O
)	O
if	O
(	O
(	O
config_file_checks	O
&	O
perm_check_tab	O
[	O
i	O
]	O
.	O
flag	*(int)
)	O
&&	O
perm_check_tab	O
[	O
i	O
]	O
.	O
fun	O
(	O
st	O
,	O
&	O
dirst	O
)	O
)	O
{	O
logmsg	O
(	O
LOG_NOTICE	O
,	O
"%s: %s"	*(char)
,	O
filename	O
,	O
gettext	(*(char))->(*(char))
(	O
perm_check_tab	O
[	O
i	O
]	O
.	O
descr	O
)	O
)	O
;	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
struct	O
check_kw	O
{	O
int	O
bits	O
;	O
char	O
const	O
*	O
keyword	O
;	O
}	O
chk_args	O
[	O
]	O
=	O
{	O
{	O
RUSH_CHK_ALL	O
,	O
"all"	*(char)
}	O
,	O
{	O
RUSH_CHK_OWNER	O
,	O
"owner"	*(char)
}	O
,	O
{	O
RUSH_CHK_IWGRP	O
,	O
"iwgrp"	*(char)
}	O
,	O
{	O
RUSH_CHK_IWGRP	O
,	O
"groupwritablefile"	*(char)
}	O
,	O
{	O
RUSH_CHK_IWOTH	O
,	O
"iwoth"	*(char)
}	O
,	O
{	O
RUSH_CHK_IWOTH	O
,	O
"worldwritablefile"	*(char)
}	O
,	O
{	O
RUSH_CHK_LINK	O
,	O
"link"	*(char)
}	O
,	O
{	O
RUSH_CHK_DIR_IWGRP	O
,	O
"dir_iwgrp"	*(char)
}	O
,	O
{	O
RUSH_CHK_DIR_IWGRP	O
,	O
"groupwritabledir"	*(char)
}	O
,	O
{	O
RUSH_CHK_DIR_IWOTH	O
,	O
"dir_iwoth"	*(char)
}	O
,	O
{	O
RUSH_CHK_DIR_IWOTH	O
,	O
"worldwritabledir"	*(char)
}	O
,	O
{	O
0	int
,	O
NULL	O
}	O
}	O
;	O
int	O
cfck_keyword	O
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
int	O
negate	O
=	O
0	int
;	O
char	O
*	O
str	*(char)
;	O
char	O
*	O
kw	O
;	O
int	O
i	O
;	O
str	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
for	O
(	O
kw	O
=	O
str	*(char)
;	O
*	O
kw	O
;	O
kw	O
++	O
)	O
*	O
kw	O
=	O
tolower	(int)->(int)
(	O
*	O
kw	O
)	O
;	O
kw	O
=	O
str	*(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
kw	O
,	O
"none"	*(char)
)	O
==	O
0	int
)	O
{	O
negate	O
=	O
1	int
;	O
kw	O
=	O
"all"	*(char)
;	O
}	O
else	O
if	O
(	O
strlen	(*(char))->(long)
(	O
kw	O
)	O
>	O
2	int
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
kw	O
,	O
"no"	*(char)
,	O
2	int
)	O
==	O
0	int
)	O
{	O
negate	O
=	O
1	int
;	O
kw	O
+=	O
2	int
;	O
}	O
for	O
(	O
i	O
=	O
0	int
;	O
chk_args	O
[	O
i	O
]	O
.	O
keyword	O
;	O
i	O
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
chk_args	O
[	O
i	O
]	O
.	O
keyword	O
,	O
kw	O
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
chk_args	O
[	O
i	O
]	O
.	O
keyword	O
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
negate	O
)	O
config_file_checks	O
&=	O
~	O
chk_args	O
[	O
i	O
]	O
.	O
bits	O
;	O
else	O
config_file_checks	O
|=	O
chk_args	O
[	O
i	O
]	O
.	O
bits	O
;	O
return	O
0	int
;	O
}	O
