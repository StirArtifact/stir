extern	O
bool_t	int
xdr_dis_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
objp	*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct`),*(struct`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct`),*(struct`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct`),*(struct`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct`,struct`,*`))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short))))
)	O
;	O
extern	O
void	O
xdrumem_create	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,enum(int,int,int))->(void)
(	O
register	O
XDR	struct
*	O
xdrs	*(struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int))
,	O
caddr_t	*(char)
addr	struct(short,short,struct(int),array(char))
,	O
u_int	int
size	int
,	O
enum	O
xdr_op	enum(int,int,int)
op	enum(int,int,int)
)	O
;	O
int	O
DISReadPDU	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
,	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
)	O
{	O
char	O
buffer	array(char)
[	O
2048	int
]	O
;	O
int	O
size	int
;	O
XDR	struct
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
;	O
size	int
=	O
recv	(int,*(void),long,int)->(long)
(	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
s	array(short)
,	O
buffer	array(char)
,	O
sizeof	O
(	O
buffer	array(char)
)	O
,	O
0	int
)	O
;	O
if	O
(	O
size	int
==	O
-	O
1	int
)	O
{	O
return	O
size	int
;	O
}	O
size	int
=	O
(	O
(	O
size	int
+	O
3	int
)	O
/	O
4	int
)	O
*	O
4	int
;	O
xdrumem_create	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,enum(int,int,int))->(void)
(	O
&	O
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
,	O
buffer	array(char)
,	O
size	int
,	O
XDR_DECODE	int
)	O
;	O
xdr_dis_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
&	O
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
,	O
pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
)	O
;	O
return	O
0	int
;	O
}	O
int	O
DISWritePDU	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
,	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
)	O
{	O
char	O
buffer	array(char)
[	O
2048	int
]	O
,	O
*	O
p	*(struct(char,char,short,char,char,char,char))
;	O
XDR	struct
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
;	O
int	O
i	int
,	O
result	char
,	O
len	int
;	O
DISAddPDUSizes	(*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(void)
(	O
pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
)	O
;	O
xdrumem_create	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(char),int,enum(int,int,int))->(void)
(	O
&	O
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
,	O
(	O
char	O
*	O
)	O
&	O
buffer	array(char)
,	O
sizeof	O
(	O
buffer	array(char)
)	O
,	O
XDR_ENCODE	int
)	O
;	O
xdr_dis_pdu	(*(struct(enum(int,int,int),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),*(char),*(char),int)),*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))))->(int)
(	O
&	O
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
,	O
pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
)	O
;	O
len	int
=	O
xdr_getpos	O
(	O
&	O
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
)	O
;	O
p	*(struct(char,char,short,char,char,char,char))
=	O
buffer	array(char)
+	O
8	int
;	O
*	O
(	O
(	O
u_short	short
*	O
)	O
p	*(struct(char,char,short,char,char,char,char))
)	O
=	O
htons	(short)->(short)
(	O
len	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
num_dest	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
(	O
result	char
=	O
sendto	(int,*(void),long,int,*(struct(short,array(char))),int)->(long)
(	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
s	array(short)
,	O
buffer	array(char)
,	O
xdr_getpos	O
(	O
&	O
xdr	struct(enum(int,int,int),*(struct(*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)),*((*`,*`,int)->(int)),*((*`)->(int)),*((*`,int)->(int)),*((*`,int)->(*`)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`)->(int)))),*(char),*(char),*(char),int)
)	O
,	O
0	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
i	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
,	O
sizeof	O
(	O
struct	O
sockaddr	struct(short,array(char))
)	O
)	O
)	O
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
"on sendto"	*(char)
)	O
;	O
}	O
}	O
;	O
return	O
0	int
;	O
}	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
DISOpenTransceiver	(int)->(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)))
(	O
int	O
port	int
)	O
{	O
struct	O
ifconf	struct(int,union(*(char),*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))))
ifc	struct(int,union(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
;	O
struct	O
ifreq	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
*	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
sin	(double)->(double)
;	O
char	O
buf	*(char)
[	O
BUFSIZ	int
]	O
;	O
int	O
s	array(short)
,	O
n	int
,	O
i	int
=	O
0	int
;	O
int	O
on	int
=	O
1	int
;	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
;	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
relay_hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
;	O
char	O
*	O
relay	*(char)
;	O
if	O
(	O
port	int
==	O
-	O
1	int
)	O
{	O
port	int
=	O
3000	int
;	O
}	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
=	O
(	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
)	O
)	O
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
s	array(short)
=	O
0	int
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
num_dest	int
=	O
0	int
;	O
if	O
(	O
(	O
s	array(short)
=	O
socket	(int,int,int)->(int)
(	O
AF_INET	O
,	O
SOCK_DGRAM	int
,	O
0	int
)	O
)	O
==	O
INVALID_SOCKET	O
)	O
{	O
perror	(*(char))->(void)
(	O
"position update socket"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
setsockopt	(int,int,int,*(void),int)->(int)
(	O
s	array(short)
,	O
SOL_SOCKET	int
,	O
SO_BROADCAST	int
,	O
(	O
char	O
*	O
)	O
&	O
on	int
,	O
sizeof	O
(	O
on	int
)	O
)	O
==	O
SOCKET_ERROR	O
)	O
{	O
perror	(*(char))->(void)
(	O
"can't set broadcast flag"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
setsockopt	(int,int,int,*(void),int)->(int)
(	O
s	array(short)
,	O
SOL_SOCKET	int
,	O
SO_REUSEADDR	int
,	O
(	O
char	O
*	O
)	O
&	O
on	int
,	O
sizeof	O
(	O
on	int
)	O
)	O
==	O
SOCKET_ERROR	O
)	O
{	O
perror	(*(char))->(void)
(	O
"can't reuse broadcast port"	*(char)
)	O
;	O
}	O
sin	(double)->(double)
.	O
sin_family	short
=	O
AF_INET	O
;	O
sin	(double)->(double)
.	O
sin_addr	struct(int)
.	O
s_addr	int
=	O
htonl	(int)->(int)
(	O
INADDR_ANY	O
)	O
;	O
sin	(double)->(double)
.	O
sin_port	short
=	O
htons	(short)->(short)
(	O
port	int
)	O
;	O
bind	(int,*(struct(short,array(char))),int)->(int)
(	O
s	array(short)
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
sin	(double)->(double)
,	O
sizeof	O
(	O
sin	(double)->(double)
)	O
)	O
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
s	array(short)
=	O
s	array(short)
;	O
if	O
(	O
(	O
relay	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"DIS_RELAY"	*(char)
)	O
)	O
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
if	O
(	O
(	O
relay_hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
=	O
gethostbyname	(*(char))->(*(struct(*(char),*(*(char)),int,int,*(*(char)))))
(	O
relay	*(char)
)	O
)	O
==	O
(	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
)	O
NULL	O
)	O
{	O
close	()->(int)
(	O
s	array(short)
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
relay_hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addrtype	int
!=	O
AF_INET	O
)	O
{	O
close	()->(int)
(	O
s	array(short)
)	O
;	O
return	O
0	int
;	O
}	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
0	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
.	O
sin_family	short
=	O
relay_hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addrtype	int
;	O
bcopy	()->(int)
(	O
(	O
char	O
*	O
)	O
relay_hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addr	O
,	O
(	O
char	O
*	O
)	O
&	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
0	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
,	O
sizeof	O
(	O
relay_hp	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addr	O
)	O
)	O
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
0	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
.	O
sin_port	short
=	O
htons	(short)->(short)
(	O
port	int
)	O
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
0	int
]	O
.	O
type	int
=	O
1	int
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
num_dest	int
=	O
1	int
;	O
return	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
;	O
}	O
ifc	struct(int,union(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
.	O
ifc_len	int
=	O
BUFSIZ	int
;	O
ifc	struct(int,union(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
.	O
ifc_buf	O
=	O
buf	*(char)
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
s	array(short)
,	O
SIOCGIFCONF	int
,	O
(	O
char	O
*	O
)	O
&	O
ifc	struct(int,union(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"error getting interface configuration"	*(char)
)	O
;	O
close	()->(int)
(	O
s	array(short)
)	O
;	O
return	O
NULL	O
;	O
}	O
n	int
=	O
ifc	struct(int,union(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
.	O
ifc_len	int
/	O
sizeof	O
(	O
struct	O
ifreq	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
)	O
;	O
if	O
(	O
n	int
>	O
32	int
)	O
{	O
return	O
NULL	O
;	O
}	O
for	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
=	O
ifc	struct(int,union(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`)))))
.	O
ifc_req	O
;	O
--	O
n	int
>=	O
0	int
;	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
++	O
)	O
{	O
if	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_addr	O
.	O
sa_family	short
!=	O
AF_INET	O
)	O
continue	O
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
s	array(short)
,	O
SIOCGIFFLAGS	int
,	O
(	O
char	O
*	O
)	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"error getting interface flags"	*(char)
)	O
;	O
close	()->(int)
(	O
s	array(short)
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
&	O
IFF_UP	int
)	O
==	O
0	int
||	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
&	O
IFF_LOOPBACK	int
)	O
||	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
&	O
(	O
IFF_BROADCAST	int
|	O
IFF_POINTOPOINT	int
)	O
)	O
==	O
0	int
)	O
continue	O
;	O
if	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
&	O
IFF_POINTOPOINT	int
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
s	array(short)
,	O
SIOCGIFDSTADDR	int
,	O
(	O
char	O
*	O
)	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
{	O
close	()->(int)
(	O
s	array(short)
)	O
;	O
perror	(*(char))->(void)
(	O
"error getting address"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
bcopy	()->(int)
(	O
(	O
char	O
*	O
)	O
&	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_dstaddr	O
,	O
(	O
char	O
*	O
)	O
&	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
i	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
,	O
sizeof	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_dstaddr	O
)	O
)	O
;	O
}	O
else	O
if	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
&	O
IFF_BROADCAST	int
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
s	array(short)
,	O
SIOCGIFBRDADDR	int
,	O
(	O
char	O
*	O
)	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
{	O
close	()->(int)
(	O
s	array(short)
)	O
;	O
perror	(*(char))->(void)
(	O
"error getting broadcast address"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
bcopy	()->(int)
(	O
(	O
char	O
*	O
)	O
&	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_broadaddr	O
,	O
(	O
char	O
*	O
)	O
&	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
i	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
,	O
sizeof	O
(	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_broadaddr	O
)	O
)	O
;	O
}	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
i	int
]	O
.	O
addr	struct(short,short,struct(int),array(char))
.	O
sin_port	short
=	O
htons	(short)->(short)
(	O
port	int
)	O
;	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
dest	array(struct(struct(short,short,struct(int),array(char)),int))
[	O
i	int
]	O
.	O
type	int
=	O
0	int
;	O
i	int
++	O
;	O
}	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
num_dest	int
=	O
i	int
;	O
return	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
;	O
}	O
void	O
DISCloseTransceiver	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)))->(void)
(	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
)	O
{	O
close	()->(int)
(	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
s	array(short)
)	O
;	O
free	(*(void))->(void)
(	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
)	O
;	O
}	O
int	O
DISSetNBIOState	(*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)),int)->(int)
(	O
DISTransceiver	struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int)
*	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
,	O
int	O
state	*(int)
)	O
{	O
int	O
i	int
;	O
i	int
=	O
(	O
state	*(int)
)	O
?	O
1	int
:	O
0	int
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
xcvr	*(struct(int,array(struct(struct(short,short,struct(int),array(char)),int)),int))
->	O
s	array(short)
,	O
FIONBIO	int
,	O
&	O
i	int
)	O
!=	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
