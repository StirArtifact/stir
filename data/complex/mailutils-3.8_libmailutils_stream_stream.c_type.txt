size_t	long
mu_stream_default_buffer_size	long
=	O
MU_STREAM_DEFBUFSIZ	int
;	O
static	O
int	O
_stream_read_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
void	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
full_read	int
,	O
size_t	long
*	O
pnread	*(long)
)	O
;	O
static	O
int	O
_stream_write_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
const	O
void	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
full_write	int
,	O
size_t	long
*	O
pnwritten	*(long)
)	O
;	O
static	O
void	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
stream	*(struct)
,	O
int	O
flag	int
)	O
{	O
_stream_event	O
(	O
stream	*(struct)
,	O
_MU_STR_EVENT_SETFLAG	int
,	O
flag	int
,	O
NULL	O
)	O
;	O
stream	*(struct)
->	O
flags	int
|=	O
flag	int
;	O
}	O
static	O
void	O
_stream_clrflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
stream	*(struct)
,	O
int	O
flag	int
)	O
{	O
_stream_event	O
(	O
stream	*(struct)
,	O
_MU_STR_EVENT_CLRFLAG	int
,	O
flag	int
,	O
NULL	O
)	O
;	O
stream	*(struct)
->	O
flags	int
&=	O
~	O
flag	int
;	O
}	O
int	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
stream	*(struct)
,	O
int	O
code	int
,	O
int	O
perm	int
)	O
{	O
stream	*(struct)
->	O
last_err	int
=	O
code	int
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
0	int
:	O
case	O
EAGAIN	int
:	O
case	O
EINTR	int
:	O
case	O
ENOSYS	int
:	O
case	O
EINPROGRESS	int
:	O
break	O
;	O
default	O
:	O
if	O
(	O
perm	int
)	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_ERR	int
)	O
;	O
}	O
return	O
code	int
;	O
}	O
void	O
_mu_stream_cleareof	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
mu_stream_t	*(struct)
str	*(char)
)	O
{	O
_stream_clrflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
str	*(char)
,	O
_MU_STR_EOF	int
)	O
;	O
}	O
void	O
_mu_stream_seteof	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
mu_stream_t	*(struct)
str	*(char)
)	O
{	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
str	*(char)
,	O
_MU_STR_EOF	int
)	O
;	O
}	O
static	O
int	O
_stream_fill_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)
(	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
stream	*(struct)
)	O
{	O
size_t	long
n	int
;	O
size_t	long
rdn	long
;	O
int	O
rc	int
=	O
0	int
;	O
char	O
c	char
;	O
switch	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
)	O
{	O
case	O
mu_buffer_none	int
:	O
return	O
0	int
;	O
case	O
mu_buffer_full	int
:	O
rc	int
=	O
_stream_read_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
stream	*(struct)
->	O
buffer	*(char)
,	O
stream	*(struct)
->	O
bufsize	long
,	O
0	int
,	O
&	O
stream	*(struct)
->	O
level	int
)	O
;	O
break	O
;	O
case	O
mu_buffer_line	int
:	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
stream	*(struct)
->	O
bufsize	long
&&	O
(	O
rc	int
=	O
_stream_read_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
&	O
c	char
,	O
1	int
,	O
0	int
,	O
&	O
rdn	long
)	O
)	O
==	O
0	int
;	O
)	O
{	O
if	O
(	O
rdn	long
==	O
0	int
)	O
{	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_EOF	int
)	O
;	O
break	O
;	O
}	O
stream	*(struct)
->	O
buffer	*(char)
[	O
n	int
++	O
]	O
=	O
c	char
;	O
if	O
(	O
c	char
==	O
'\n'	O
)	O
break	O
;	O
}	O
stream	*(struct)
->	O
level	int
=	O
n	int
;	O
break	O
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
stream	*(struct)
->	O
pos	long
=	O
0	int
;	O
_stream_event	O
(	O
stream	*(struct)
,	O
_MU_STR_EVENT_FILLBUF	int
,	O
stream	*(struct)
->	O
level	int
,	O
_stream_curp	O
(	O
stream	*(struct)
)	O
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_stream_buffer_full_p	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)
(	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
stream	*(struct)
)	O
{	O
switch	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
)	O
{	O
case	O
mu_buffer_none	int
:	O
break	O
;	O
case	O
mu_buffer_line	int
:	O
return	O
_stream_buffer_is_full	O
(	O
stream	*(struct)
)	O
||	O
memchr	(*(void),int,long)->(*(void))
(	O
stream	*(struct)
->	O
buffer	*(char)
,	O
'\n'	O
,	O
stream	*(struct)
->	O
level	int
)	O
!=	O
NULL	O
;	O
case	O
mu_buffer_full	int
:	O
return	O
_stream_buffer_is_full	O
(	O
stream	*(struct)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
enum	O
{	O
FLUSH_WRITE	int
,	O
FLUSH_RDWR	int
}	O
;	O
static	O
int	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
stream	*(struct)
,	O
int	O
what	int
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_DIRTY	int
)	O
{	O
if	O
(	O
(	O
stream	*(struct)
->	O
flags	int
&	O
MU_STREAM_SEEK	int
)	O
&&	O
stream	*(struct)
->	O
seek	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int))
)	O
{	O
mu_off_t	long
off	long
;	O
rc	int
=	O
_stream_seek	O
(	O
stream	*(struct)
,	O
stream	*(struct)
->	O
offset	long
,	O
&	O
off	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
(	O
rc	int
=	O
_stream_write_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
stream	*(struct)
->	O
buffer	*(char)
,	O
stream	*(struct)
->	O
level	int
,	O
1	int
,	O
NULL	O
)	O
)	O
)	O
return	O
rc	int
;	O
_stream_event	O
(	O
stream	*(struct)
,	O
_MU_STR_EVENT_FLUSHBUF	int
,	O
stream	*(struct)
->	O
level	int
,	O
stream	*(struct)
->	O
buffer	*(char)
)	O
;	O
_stream_clrflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_DIRTY	int
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
pos	long
<	O
stream	*(struct)
->	O
level	int
)	O
memmove	(*(void),*(void),long)->(*(void))
(	O
stream	*(struct)
->	O
buffer	*(char)
,	O
stream	*(struct)
->	O
buffer	*(char)
+	O
stream	*(struct)
->	O
pos	long
,	O
stream	*(struct)
->	O
level	int
-	O
stream	*(struct)
->	O
pos	long
)	O
;	O
stream	*(struct)
->	O
offset	long
+=	O
stream	*(struct)
->	O
pos	long
;	O
stream	*(struct)
->	O
level	int
-=	O
stream	*(struct)
->	O
pos	long
;	O
stream	*(struct)
->	O
pos	long
=	O
0	int
;	O
}	O
if	O
(	O
what	int
)	O
{	O
stream	*(struct)
->	O
offset	long
+=	O
stream	*(struct)
->	O
level	int
;	O
stream	*(struct)
->	O
pos	long
=	O
stream	*(struct)
->	O
level	int
=	O
0	int
;	O
}	O
return	O
0	int
;	O
}	O
mu_stream_t	*(struct)
_mu_stream_create	(long,int)->(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))
(	O
size_t	long
size	long
,	O
int	O
flags	int
)	O
{	O
struct	O
_mu_stream	struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char))))
*	O
str	*(char)
;	O
if	O
(	O
size	long
<	O
sizeof	O
(	O
str	*(char)
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
str	*(char)
=	O
mu_zalloc	(long)->(*(void))
(	O
size	long
)	O
;	O
str	*(char)
->	O
flags	int
=	O
flags	int
&	O
~	O
(	O
_MU_STR_INTERN_MASK	int
&	O
~	O
_MU_STR_OPEN	int
)	O
;	O
mu_stream_ref	(*(struct))->(void)
(	O
str	*(char)
)	O
;	O
return	O
str	*(char)
;	O
}	O
void	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
mu_stream_t	*(struct)
*	O
pstream	*(*(struct))
)	O
{	O
if	O
(	O
pstream	*(*(struct))
)	O
{	O
mu_stream_t	*(struct)
str	*(char)
=	O
*	O
pstream	*(*(struct))
;	O
if	O
(	O
str	*(char)
&&	O
(	O
str	*(char)
->	O
ref_count	int
==	O
0	int
||	O
--	O
str	*(char)
->	O
ref_count	int
==	O
0	int
)	O
)	O
{	O
mu_stream_close	(*(struct))->(int)
(	O
str	*(char)
)	O
;	O
if	O
(	O
str	*(char)
->	O
buftype	enum(int,int,int)
!=	O
mu_buffer_none	int
)	O
{	O
free	(*(void))->(void)
(	O
str	*(char)
->	O
buffer	*(char)
)	O
;	O
str	*(char)
->	O
buffer	*(char)
=	O
NULL	O
;	O
str	*(char)
->	O
buftype	enum(int,int,int)
=	O
mu_buffer_none	int
;	O
}	O
if	O
(	O
str	*(char)
->	O
done	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void))
)	O
str	*(char)
->	O
done	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void))
(	O
str	*(char)
)	O
;	O
if	O
(	O
str	*(char)
->	O
destroy	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void))
)	O
str	*(char)
->	O
destroy	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void))
(	O
str	*(char)
)	O
;	O
else	O
free	(*(void))->(void)
(	O
str	*(char)
)	O
;	O
*	O
pstream	*(*(struct))
=	O
NULL	O
;	O
}	O
}	O
}	O
void	O
mu_stream_get_flags	(*(struct),*(int))->(void)
(	O
mu_stream_t	*(struct)
str	*(char)
,	O
int	O
*	O
pflags	*(int)
)	O
{	O
*	O
pflags	*(int)
=	O
str	*(char)
->	O
flags	int
&	O
~	O
_MU_STR_INTERN_MASK	int
;	O
}	O
void	O
mu_stream_ref	(*(struct))->(void)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
stream	*(struct)
->	O
ref_count	int
++	O
;	O
}	O
void	O
mu_stream_unref	(*(struct))->(void)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
stream	*(struct)
)	O
;	O
}	O
static	O
void	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
statmask	int
)	O
memset	(*(void),int,long)->(*(void))
(	O
stream	*(struct)
->	O
statbuf	array(long)
,	O
0	int
,	O
_MU_STREAM_STAT_MAX	int
*	O
sizeof	O
(	O
stream	*(struct)
->	O
statbuf	array(long)
[	O
0	int
]	O
)	O
)	O
;	O
stream	*(struct)
->	O
flags	int
&=	O
~	O
_MU_STR_INTERN_MASK	int
;	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_OPEN	int
)	O
;	O
stream	*(struct)
->	O
offset	long
=	O
0	int
;	O
stream	*(struct)
->	O
level	int
=	O
stream	*(struct)
->	O
pos	long
=	O
0	int
;	O
stream	*(struct)
->	O
last_err	int
=	O
0	int
;	O
}	O
int	O
mu_stream_open	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
return	O
MU_ERR_OPEN	O
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
(	O
stream	*(struct)
)	O
)	O
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
1	int
)	O
;	O
}	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
(	O
stream	*(struct)
->	O
flags	int
&	O
(	O
MU_STREAM_APPEND	int
|	O
MU_STREAM_SEEK	int
)	O
)	O
==	O
(	O
MU_STREAM_APPEND	int
|	O
MU_STREAM_SEEK	int
)	O
&&	O
(	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
0	int
,	O
MU_SEEK_END	int
,	O
NULL	O
)	O
)	O
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
1	int
)	O
;	O
return	O
0	int
;	O
}	O
const	O
char	O
*	O
mu_stream_strerror	(*(struct),int)->(*(char))
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
rc	int
)	O
{	O
const	O
char	O
*	O
str	*(char)
;	O
if	O
(	O
!	O
stream	*(struct)
)	O
return	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
error_string	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char)))
)	O
str	*(char)
=	O
stream	*(struct)
->	O
error_string	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(*(char)))
(	O
stream	*(struct)
,	O
rc	int
)	O
;	O
else	O
str	*(char)
=	O
mu_strerror	(int)->(*(char))
(	O
rc	int
)	O
;	O
return	O
str	*(char)
;	O
}	O
int	O
mu_stream_err	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
return	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_ERR	int
;	O
}	O
int	O
mu_stream_last_error	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
return	O
stream	*(struct)
->	O
last_err	int
;	O
}	O
void	O
mu_stream_clearerr	(*(struct))->(void)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
stream	*(struct)
->	O
last_err	int
=	O
0	int
;	O
_stream_clrflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_ERR	int
)	O
;	O
}	O
int	O
mu_stream_eof	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
return	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_EOF	int
)	O
&&	O
(	O
stream	*(struct)
->	O
pos	long
==	O
stream	*(struct)
->	O
level	int
)	O
;	O
}	O
int	O
mu_stream_is_open	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
return	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
;	O
}	O
int	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
offset	long
,	O
int	O
whence	int
,	O
mu_off_t	long
*	O
pres	*(long)
)	O
{	O
int	O
rc	int
;	O
mu_off_t	long
size	long
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
!	O
stream	*(struct)
->	O
seek	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int))
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
ENOSYS	int
,	O
0	int
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
MU_STREAM_SEEK	int
)	O
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
EACCES	int
,	O
1	int
)	O
;	O
switch	O
(	O
whence	int
)	O
{	O
case	O
MU_SEEK_SET	int
:	O
break	O
;	O
case	O
MU_SEEK_CUR	int
:	O
if	O
(	O
offset	long
==	O
0	int
)	O
{	O
*	O
pres	*(long)
=	O
stream	*(struct)
->	O
offset	long
+	O
stream	*(struct)
->	O
pos	long
;	O
return	O
0	int
;	O
}	O
offset	long
+=	O
stream	*(struct)
->	O
offset	long
+	O
stream	*(struct)
->	O
pos	long
;	O
break	O
;	O
case	O
MU_SEEK_END	int
:	O
rc	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
stream	*(struct)
,	O
&	O
size	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
offset	long
+=	O
size	long
;	O
break	O
;	O
default	O
:	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
EINVAL	int
,	O
1	int
)	O
;	O
}	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
==	O
mu_buffer_none	int
?	O
(	O
offset	long
==	O
stream	*(struct)
->	O
offset	long
)	O
:	O
(	O
stream	*(struct)
->	O
offset	long
<=	O
offset	long
&&	O
offset	long
<	O
stream	*(struct)
->	O
offset	long
+	O
stream	*(struct)
->	O
level	int
)	O
)	O
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
)	O
)	O
return	O
rc	int
;	O
if	O
(	O
stream	*(struct)
->	O
offset	long
!=	O
offset	long
)	O
{	O
rc	int
=	O
_stream_seek	O
(	O
stream	*(struct)
,	O
offset	long
,	O
&	O
stream	*(struct)
->	O
offset	long
)	O
;	O
if	O
(	O
rc	int
==	O
ESPIPE	int
)	O
return	O
rc	int
;	O
if	O
(	O
rc	int
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
1	int
)	O
;	O
}	O
_mu_stream_cleareof	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
else	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
!=	O
mu_buffer_none	int
)	O
stream	*(struct)
->	O
pos	long
=	O
offset	long
-	O
stream	*(struct)
->	O
offset	long
;	O
_mu_stream_cleareof	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
pres	*(long)
)	O
*	O
pres	*(long)
=	O
stream	*(struct)
->	O
offset	long
+	O
stream	*(struct)
->	O
pos	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_stream_skip_input_bytes	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
count	long
,	O
mu_off_t	long
*	O
pres	*(long)
)	O
{	O
mu_off_t	long
pos	long
;	O
int	O
rc	int
=	O
0	int
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
MU_STREAM_READ	int
)	O
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
EACCES	int
,	O
1	int
)	O
;	O
if	O
(	O
count	long
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
==	O
mu_buffer_none	int
)	O
{	O
for	O
(	O
pos	long
=	O
0	int
;	O
pos	long
<	O
count	long
;	O
pos	long
++	O
)	O
{	O
char	O
c	char
;	O
size_t	long
nrd	long
;	O
rc	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
&	O
c	char
,	O
1	int
,	O
&	O
nrd	long
)	O
;	O
if	O
(	O
nrd	long
==	O
0	int
)	O
rc	int
=	O
ESPIPE	int
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
}	O
}	O
else	O
{	O
for	O
(	O
pos	long
=	O
0	int
;	O
;	O
)	O
{	O
if	O
(	O
pos	long
||	O
stream	*(struct)
->	O
level	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
)	O
)	O
return	O
rc	int
;	O
rc	int
=	O
_stream_fill_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
break	O
;	O
if	O
(	O
stream	*(struct)
->	O
level	int
==	O
0	int
)	O
{	O
rc	int
=	O
ESPIPE	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
pos	long
<=	O
count	long
&&	O
count	long
<	O
pos	long
+	O
stream	*(struct)
->	O
level	int
)	O
{	O
stream	*(struct)
->	O
pos	long
=	O
count	long
-	O
pos	long
;	O
rc	int
=	O
0	int
;	O
break	O
;	O
}	O
pos	long
+=	O
stream	*(struct)
->	O
level	int
;	O
}	O
}	O
}	O
if	O
(	O
pres	*(long)
)	O
*	O
pres	*(long)
=	O
stream	*(struct)
->	O
offset	long
+	O
stream	*(struct)
->	O
pos	long
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_skip_input_bytes	(*(struct),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
count	long
,	O
mu_off_t	long
*	O
pres	*(long)
)	O
{	O
int	O
rc	int
;	O
int	O
seek_flag	int
=	O
stream	*(struct)
->	O
flags	int
&	O
MU_STREAM_SEEK	int
;	O
stream	*(struct)
->	O
flags	int
&=	O
~	O
MU_STREAM_SEEK	int
;	O
rc	int
=	O
_stream_skip_input_bytes	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)
(	O
stream	*(struct)
,	O
count	long
,	O
pres	*(long)
)	O
;	O
stream	*(struct)
->	O
flags	int
|=	O
seek_flag	int
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_set_buffer	(*(struct),enum(int,int,int),long)->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
enum	O
mu_buffer_type	enum(int,int,int)
type	int
,	O
size_t	long
size	long
)	O
{	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
size	long
=	O
mu_stream_default_buffer_size	long
;	O
if	O
(	O
stream	*(struct)
->	O
setbuf_hook	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int))
)	O
{	O
int	O
rc	int
=	O
stream	*(struct)
->	O
setbuf_hook	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),enum(int,int,int),long)->(int))
(	O
stream	*(struct)
,	O
type	int
,	O
size	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
buffer	*(char)
)	O
{	O
mu_stream_flush	(*(struct))->(int)
(	O
stream	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
stream	*(struct)
->	O
buffer	*(char)
)	O
;	O
}	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
=	O
type	int
;	O
if	O
(	O
type	int
==	O
mu_buffer_none	int
)	O
{	O
stream	*(struct)
->	O
buffer	*(char)
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
stream	*(struct)
->	O
buffer	*(char)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
buffer	*(char)
==	O
NULL	O
)	O
{	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
=	O
mu_buffer_none	int
;	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
ENOMEM	int
,	O
1	int
)	O
;	O
}	O
stream	*(struct)
->	O
bufsize	long
=	O
size	long
;	O
stream	*(struct)
->	O
pos	long
=	O
0	int
;	O
stream	*(struct)
->	O
level	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_stream_get_buffer	(*(struct),*(struct(int,enum(int,int,int),long)))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
struct	O
mu_buffer_query	struct(int,enum(int,int,int),long)
*	O
qry	*(struct(int,enum(int,int,int),long))
)	O
{	O
qry	*(struct(int,enum(int,int,int),long))
->	O
buftype	enum(int,int,int)
=	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
;	O
qry	*(struct(int,enum(int,int,int),long))
->	O
bufsize	long
=	O
stream	*(struct)
->	O
bufsize	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_stream_read_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
void	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
full_read	int
,	O
size_t	long
*	O
pnread	*(long)
)	O
{	O
int	O
rc	int
;	O
size_t	long
nread	long
;	O
if	O
(	O
!	O
stream	*(struct)
->	O
read	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int))
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
ENOSYS	int
,	O
0	int
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
MU_STREAM_READ	int
)	O
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
EACCES	int
,	O
1	int
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_ERR	int
)	O
return	O
stream	*(struct)
->	O
last_err	int
;	O
if	O
(	O
mu_stream_eof	(*(struct))->(int)
(	O
stream	*(struct)
)	O
||	O
size	long
==	O
0	int
)	O
{	O
if	O
(	O
pnread	*(long)
)	O
*	O
pnread	*(long)
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
full_read	int
)	O
{	O
size_t	long
rdbytes	long
;	O
nread	long
=	O
0	int
;	O
while	O
(	O
size	long
>	O
0	int
&&	O
(	O
rc	int
=	O
_stream_read	O
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
&	O
rdbytes	long
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
rdbytes	long
==	O
0	int
)	O
{	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_EOF	int
)	O
;	O
break	O
;	O
}	O
buf	*(void)
+=	O
rdbytes	long
;	O
nread	long
+=	O
rdbytes	long
;	O
size	long
-=	O
rdbytes	long
;	O
_stream_stat_incr	O
(	O
stream	*(struct)
,	O
MU_STREAM_STAT_IN	int
,	O
rdbytes	long
)	O
;	O
}	O
if	O
(	O
size	long
&&	O
rc	int
)	O
rc	int
=	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
0	int
)	O
;	O
}	O
else	O
{	O
rc	int
=	O
_stream_read	O
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
&	O
nread	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
nread	long
==	O
0	int
)	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_EOF	int
)	O
;	O
_stream_stat_incr	O
(	O
stream	*(struct)
,	O
MU_STREAM_STAT_IN	int
,	O
nread	long
)	O
;	O
}	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
rc	int
!=	O
0	int
)	O
;	O
}	O
if	O
(	O
pnread	*(long)
)	O
*	O
pnread	*(long)
=	O
nread	long
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_stream_write_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
const	O
void	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
full_write	int
,	O
size_t	long
*	O
pnwritten	*(long)
)	O
{	O
int	O
rc	int
;	O
size_t	long
nwritten	long
;	O
if	O
(	O
!	O
stream	*(struct)
->	O
write	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int))
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
ENOSYS	int
,	O
0	int
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
(	O
MU_STREAM_WRITE	int
|	O
MU_STREAM_APPEND	int
)	O
)	O
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
EACCES	int
,	O
1	int
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_ERR	int
)	O
return	O
stream	*(struct)
->	O
last_err	int
;	O
if	O
(	O
size	long
==	O
0	int
)	O
{	O
if	O
(	O
pnwritten	*(long)
)	O
*	O
pnwritten	*(long)
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
full_write	int
)	O
{	O
size_t	long
wrbytes	long
;	O
const	O
char	O
*	O
bufp	*(char)
=	O
buf	*(void)
;	O
nwritten	long
=	O
0	int
;	O
while	O
(	O
size	long
>	O
0	int
&&	O
(	O
rc	int
=	O
_stream_write	O
(	O
stream	*(struct)
,	O
bufp	*(char)
,	O
size	long
,	O
&	O
wrbytes	long
)	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
wrbytes	long
==	O
0	int
)	O
{	O
rc	int
=	O
EIO	int
;	O
break	O
;	O
}	O
bufp	*(char)
+=	O
wrbytes	long
;	O
nwritten	long
+=	O
wrbytes	long
;	O
size	long
-=	O
wrbytes	long
;	O
_stream_stat_incr	O
(	O
stream	*(struct)
,	O
MU_STREAM_STAT_OUT	int
,	O
wrbytes	long
)	O
;	O
}	O
}	O
else	O
{	O
rc	int
=	O
_stream_write	O
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
&	O
nwritten	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
_stream_stat_incr	O
(	O
stream	*(struct)
,	O
MU_STREAM_STAT_OUT	int
,	O
nwritten	long
)	O
;	O
}	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_WRT	int
)	O
;	O
if	O
(	O
pnwritten	*(long)
)	O
*	O
pnwritten	*(long)
=	O
nwritten	long
;	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
rc	int
!=	O
0	int
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
void	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pread	*(long)
)	O
{	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
==	O
mu_buffer_none	int
)	O
{	O
size_t	long
nread	long
=	O
0	int
;	O
int	O
rc	int
=	O
_stream_read_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
!	O
pread	*(long)
,	O
&	O
nread	long
)	O
;	O
stream	*(struct)
->	O
offset	long
+=	O
nread	long
;	O
if	O
(	O
pread	*(long)
)	O
*	O
pread	*(long)
=	O
nread	long
;	O
return	O
rc	int
;	O
}	O
else	O
{	O
char	O
*	O
bufp	*(char)
=	O
buf	*(void)
;	O
size_t	long
nbytes	long
=	O
0	int
;	O
int	O
rc	int
;	O
while	O
(	O
size	long
)	O
{	O
size_t	long
n	int
;	O
if	O
(	O
stream	*(struct)
->	O
pos	long
==	O
stream	*(struct)
->	O
level	int
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
)	O
)	O
{	O
if	O
(	O
nbytes	long
)	O
break	O
;	O
return	O
rc	int
;	O
}	O
if	O
(	O
(	O
rc	int
=	O
_stream_fill_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)
(	O
stream	*(struct)
)	O
)	O
)	O
{	O
if	O
(	O
nbytes	long
)	O
break	O
;	O
return	O
rc	int
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
level	int
==	O
0	int
)	O
break	O
;	O
}	O
n	int
=	O
size	long
;	O
if	O
(	O
n	int
>	O
stream	*(struct)
->	O
level	int
-	O
stream	*(struct)
->	O
pos	long
)	O
n	int
=	O
stream	*(struct)
->	O
level	int
-	O
stream	*(struct)
->	O
pos	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
bufp	*(char)
,	O
_stream_curp	O
(	O
stream	*(struct)
)	O
,	O
n	int
)	O
;	O
stream	*(struct)
->	O
pos	long
+=	O
n	int
;	O
nbytes	long
+=	O
n	int
;	O
bufp	*(char)
+=	O
n	int
;	O
size	long
-=	O
n	int
;	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
==	O
mu_buffer_line	int
&&	O
bufp	*(char)
[	O
-	O
1	int
]	O
==	O
'\n'	O
)	O
break	O
;	O
}	O
if	O
(	O
pread	*(long)
)	O
*	O
pread	*(long)
=	O
nbytes	long
;	O
}	O
return	O
0	int
;	O
}	O
int	O
_stream_scandelim	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
delim	int
,	O
size_t	long
*	O
pnread	*(long)
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
size_t	long
nread	long
=	O
0	int
;	O
size	long
--	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
return	O
MU_ERR_BUFSPACE	O
;	O
while	O
(	O
size	long
)	O
{	O
char	O
*	O
p	*(char)
,	O
*	O
q	*(char)
;	O
size_t	long
len	long
;	O
if	O
(	O
stream	*(struct)
->	O
pos	long
==	O
stream	*(struct)
->	O
level	int
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
)	O
)	O
break	O
;	O
if	O
(	O
(	O
rc	int
=	O
_stream_fill_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)
(	O
stream	*(struct)
)	O
)	O
||	O
stream	*(struct)
->	O
level	int
==	O
0	int
)	O
break	O
;	O
}	O
q	*(char)
=	O
_stream_curp	O
(	O
stream	*(struct)
)	O
;	O
len	long
=	O
stream	*(struct)
->	O
level	int
-	O
stream	*(struct)
->	O
pos	long
;	O
p	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
q	*(char)
,	O
delim	int
,	O
len	long
)	O
;	O
if	O
(	O
p	*(char)
)	O
len	long
=	O
p	*(char)
-	O
q	*(char)
+	O
1	int
;	O
if	O
(	O
len	long
>	O
size	long
)	O
len	long
=	O
size	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(void)
,	O
_stream_curp	O
(	O
stream	*(struct)
)	O
,	O
len	long
)	O
;	O
stream	*(struct)
->	O
pos	long
+=	O
len	long
;	O
buf	*(void)
+=	O
len	long
;	O
size	long
-=	O
len	long
;	O
nread	long
+=	O
len	long
;	O
if	O
(	O
p	*(char)
)	O
break	O
;	O
}	O
*	O
buf	*(void)
=	O
0	int
;	O
*	O
pnread	*(long)
=	O
nread	long
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_stream_readdelim	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
delim	int
,	O
size_t	long
*	O
pread	*(long)
)	O
{	O
int	O
rc	int
;	O
char	O
c	char
;	O
size_t	long
n	int
=	O
0	int
,	O
rdn	long
;	O
size	long
--	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
return	O
MU_ERR_BUFSPACE	O
;	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
size	long
&&	O
(	O
rc	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
&	O
c	char
,	O
1	int
,	O
&	O
rdn	long
)	O
)	O
==	O
0	int
&&	O
rdn	long
;	O
)	O
{	O
*	O
buf	*(void)
++	O
=	O
c	char
;	O
n	int
++	O
;	O
if	O
(	O
c	char
==	O
delim	int
)	O
break	O
;	O
}	O
*	O
buf	*(void)
=	O
0	int
;	O
if	O
(	O
pread	*(long)
)	O
*	O
pread	*(long)
=	O
n	int
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_readdelim	(*(struct),*(char),long,int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
int	O
delim	int
,	O
size_t	long
*	O
pread	*(long)
)	O
{	O
int	O
rc	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
==	O
mu_buffer_none	int
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
readdelim	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int))
)	O
{	O
size_t	long
nread	long
;	O
rc	int
=	O
stream	*(struct)
->	O
readdelim	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int))
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
delim	int
,	O
&	O
nread	long
)	O
;	O
if	O
(	O
pread	*(long)
)	O
*	O
pread	*(long)
=	O
nread	long
;	O
stream	*(struct)
->	O
offset	long
+=	O
nread	long
;	O
}	O
else	O
rc	int
=	O
_stream_readdelim	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
delim	int
,	O
pread	*(long)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_WRITE	int
)	O
)	O
)	O
return	O
rc	int
;	O
rc	int
=	O
_stream_scandelim	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
delim	int
,	O
pread	*(long)
)	O
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_readline	(*(struct),*(char),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pread	*(long)
)	O
{	O
return	O
mu_stream_readdelim	(*(struct),*(char),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
'\n'	O
,	O
pread	*(long)
)	O
;	O
}	O
int	O
mu_stream_getdelim	(*(struct),*(*(char)),*(long),int,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
psize	*(long)
,	O
int	O
delim	int
,	O
size_t	long
*	O
pread	*(long)
)	O
{	O
int	O
rc	int
;	O
char	O
*	O
lineptr	*(char)
=	O
*	O
pbuf	*(*(char))
;	O
size_t	long
n	int
=	O
*	O
psize	*(long)
;	O
size_t	long
cur_len	long
=	O
0	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_WRITE	int
)	O
)	O
)	O
return	O
rc	int
;	O
if	O
(	O
lineptr	*(char)
==	O
NULL	O
||	O
n	int
==	O
0	int
)	O
{	O
char	O
*	O
new_lineptr	*(char)
;	O
n	int
=	O
120	int
;	O
new_lineptr	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
lineptr	*(char)
,	O
n	int
)	O
;	O
if	O
(	O
new_lineptr	*(char)
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
lineptr	*(char)
=	O
new_lineptr	*(char)
;	O
}	O
for	O
(	O
;	O
;	O
)	O
{	O
size_t	long
rdn	long
;	O
if	O
(	O
cur_len	long
+	O
1	int
>=	O
n	int
)	O
{	O
size_t	long
needed_max	long
=	O
SSIZE_MAX	O
<	O
SIZE_MAX	O
?	O
(	O
size_t	long
)	O
SSIZE_MAX	O
+	O
1	int
:	O
SIZE_MAX	O
;	O
size_t	long
needed	long
=	O
2	int
*	O
n	int
+	O
1	int
;	O
char	O
*	O
new_lineptr	*(char)
;	O
if	O
(	O
needed_max	long
<	O
needed	long
)	O
needed	long
=	O
needed_max	long
;	O
if	O
(	O
cur_len	long
+	O
1	int
>=	O
needed	long
)	O
{	O
rc	int
=	O
EOVERFLOW	int
;	O
break	O
;	O
}	O
new_lineptr	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
lineptr	*(char)
,	O
needed	long
)	O
;	O
if	O
(	O
new_lineptr	*(char)
==	O
NULL	O
)	O
{	O
rc	int
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
lineptr	*(char)
=	O
new_lineptr	*(char)
;	O
n	int
=	O
needed	long
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
readdelim	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int))
)	O
rc	int
=	O
stream	*(struct)
->	O
readdelim	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int))
(	O
stream	*(struct)
,	O
lineptr	*(char)
+	O
cur_len	long
,	O
n	int
-	O
cur_len	long
,	O
delim	int
,	O
&	O
rdn	long
)	O
;	O
else	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
!=	O
mu_buffer_none	int
)	O
rc	int
=	O
_stream_scandelim	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
lineptr	*(char)
+	O
cur_len	long
,	O
n	int
-	O
cur_len	long
,	O
delim	int
,	O
&	O
rdn	long
)	O
;	O
else	O
rc	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
lineptr	*(char)
+	O
cur_len	long
,	O
1	int
,	O
&	O
rdn	long
)	O
;	O
if	O
(	O
rc	int
||	O
rdn	long
==	O
0	int
)	O
break	O
;	O
cur_len	long
+=	O
rdn	long
;	O
if	O
(	O
lineptr	*(char)
[	O
cur_len	long
-	O
1	int
]	O
==	O
delim	int
)	O
break	O
;	O
}	O
lineptr	*(char)
[	O
cur_len	long
]	O
=	O
'\0'	O
;	O
*	O
pbuf	*(*(char))
=	O
lineptr	*(char)
;	O
*	O
psize	*(long)
=	O
n	int
;	O
if	O
(	O
pread	*(long)
)	O
*	O
pread	*(long)
=	O
cur_len	long
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
psize	*(long)
,	O
size_t	long
*	O
pread	*(long)
)	O
{	O
return	O
mu_stream_getdelim	(*(struct),*(*(char)),*(long),int,*(long))->(int)
(	O
stream	*(struct)
,	O
pbuf	*(*(char))
,	O
psize	*(long)
,	O
'\n'	O
,	O
pread	*(long)
)	O
;	O
}	O
int	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
const	O
void	O
*	O
buf	*(void)
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pnwritten	*(long)
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
==	O
mu_buffer_none	int
)	O
{	O
size_t	long
nwritten	long
;	O
rc	int
=	O
_stream_write_unbuffered	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(void),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
!	O
pnwritten	*(long)
,	O
&	O
nwritten	long
)	O
;	O
stream	*(struct)
->	O
offset	long
+=	O
nwritten	long
;	O
if	O
(	O
pnwritten	*(long)
)	O
*	O
pnwritten	*(long)
=	O
nwritten	long
;	O
}	O
else	O
{	O
size_t	long
nbytes	long
=	O
0	int
;	O
const	O
char	O
*	O
bufp	*(char)
=	O
buf	*(void)
;	O
while	O
(	O
1	int
)	O
{	O
size_t	long
n	int
;	O
if	O
(	O
_stream_buffer_full_p	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int)
(	O
stream	*(struct)
)	O
&&	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
)	O
)	O
break	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
break	O
;	O
n	int
=	O
_stream_buffer_freespace	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
n	int
>	O
size	long
)	O
n	int
=	O
size	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
_stream_curp	O
(	O
stream	*(struct)
)	O
,	O
bufp	*(char)
,	O
n	int
)	O
;	O
stream	*(struct)
->	O
pos	long
+=	O
n	int
;	O
if	O
(	O
stream	*(struct)
->	O
pos	long
>	O
stream	*(struct)
->	O
level	int
)	O
stream	*(struct)
->	O
level	int
=	O
stream	*(struct)
->	O
pos	long
;	O
nbytes	long
+=	O
n	int
;	O
bufp	*(char)
+=	O
n	int
;	O
size	long
-=	O
n	int
;	O
_stream_setflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_DIRTY	int
)	O
;	O
}	O
if	O
(	O
pnwritten	*(long)
)	O
*	O
pnwritten	*(long)
=	O
nbytes	long
;	O
else	O
if	O
(	O
nbytes	long
<	O
size	long
)	O
{	O
rc	int
=	O
EIO	int
;	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
1	int
)	O
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_writeline	(*(struct),*(char),long)->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
const	O
char	O
*	O
buf	*(void)
,	O
size_t	long
size	long
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
(	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
size	long
,	O
NULL	O
)	O
)	O
==	O
0	int
)	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
"\r\n"	*(char)
,	O
2	int
,	O
NULL	O
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_flush	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
!	O
stream	*(struct)
)	O
return	O
EINVAL	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_WRT	int
)	O
&&	O
stream	*(struct)
->	O
flush	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
stream	*(struct)
->	O
flush	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
(	O
stream	*(struct)
)	O
;	O
_stream_clrflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_WRT	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_stream_close	(*(struct))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
if	O
(	O
!	O
stream	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
mu_stream_flush	(*(struct))->(int)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
ref_count	int
>	O
1	int
)	O
return	O
0	int
;	O
_stream_event	O
(	O
stream	*(struct)
,	O
_MU_STR_EVENT_CLOSE	int
,	O
0	int
,	O
NULL	O
)	O
;	O
if	O
(	O
stream	*(struct)
->	O
close	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
rc	int
=	O
stream	*(struct)
->	O
close	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
(	O
stream	*(struct)
)	O
;	O
_stream_clrflag	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(void)
(	O
stream	*(struct)
,	O
_MU_STR_OPEN	int
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
*	O
psize	*(long)
)	O
{	O
int	O
rc	int
;	O
mu_off_t	long
size	long
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
!	O
stream	*(struct)
->	O
size	long
)	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
ENOSYS	int
,	O
0	int
)	O
;	O
rc	int
=	O
stream	*(struct)
->	O
size	long
(	O
stream	*(struct)
,	O
&	O
size	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
!=	O
mu_buffer_none	int
&&	O
stream	*(struct)
->	O
offset	long
==	O
size	long
)	O
size	long
+=	O
stream	*(struct)
->	O
level	int
;	O
*	O
psize	*(long)
=	O
size	long
;	O
}	O
return	O
mu_stream_seterr	(*(struct),int,int)->(int)
(	O
stream	*(struct)
,	O
rc	int
,	O
rc	int
!=	O
0	int
)	O
;	O
}	O
int	O
mu_stream_ioctl	(*(struct),int,int,*(void))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
family	int
,	O
int	O
opcode	int
,	O
void	O
*	O
ptr	*(void)
)	O
{	O
int	O
rc	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_WRITE	int
)	O
)	O
)	O
return	O
rc	int
;	O
if	O
(	O
stream	*(struct)
->	O
ctl	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int))
==	O
NULL	O
)	O
return	O
ENOSYS	int
;	O
return	O
stream	*(struct)
->	O
ctl	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int,int,*(void))->(int))
(	O
stream	*(struct)
,	O
family	int
,	O
opcode	int
,	O
ptr	*(void)
)	O
;	O
}	O
int	O
mu_stream_wait	(*(struct),*(int),*(struct(long,long)))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
*	O
pflags	*(int)
,	O
struct	O
timeval	struct(long,long)
*	O
tvp	*(struct(long,long))
)	O
{	O
int	O
flg	int
=	O
0	int
;	O
if	O
(	O
stream	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
(	O
*	O
pflags	*(int)
)	O
&	O
MU_STREAM_READY_RD	int
&&	O
stream	*(struct)
->	O
buftype	enum(int,int,int)
!=	O
mu_buffer_none	int
&&	O
stream	*(struct)
->	O
pos	long
<	O
stream	*(struct)
->	O
level	int
)	O
{	O
flg	int
=	O
MU_STREAM_READY_RD	int
;	O
*	O
pflags	*(int)
&=	O
~	O
MU_STREAM_READY_RD	int
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
wait	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int))
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
flg	int
&&	O
*	O
pflags	*(int)
==	O
0	int
)	O
rc	int
=	O
0	int
;	O
else	O
rc	int
=	O
stream	*(struct)
->	O
wait	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(int),*(struct(long,long)))->(int))
(	O
stream	*(struct)
,	O
pflags	*(int)
,	O
tvp	*(struct(long,long))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
*	O
pflags	*(int)
|=	O
flg	int
;	O
return	O
rc	int
;	O
}	O
return	O
ENOSYS	int
;	O
}	O
int	O
mu_stream_truncate	(*(struct),long)->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
mu_off_t	long
size	long
)	O
{	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
if	O
(	O
stream	*(struct)
->	O
truncate	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int))
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
(	O
rc	int
=	O
_stream_flush_buffer	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int)
(	O
stream	*(struct)
,	O
FLUSH_RDWR	int
)	O
)	O
)	O
return	O
rc	int
;	O
return	O
stream	*(struct)
->	O
truncate	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long)->(int))
(	O
stream	*(struct)
,	O
size	long
)	O
;	O
}	O
return	O
ENOSYS	int
;	O
}	O
int	O
mu_stream_shutdown	(*(struct),int)->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
how	int
)	O
{	O
int	O
rc	int
;	O
_bootstrap_event	O
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
stream	*(struct)
->	O
flags	int
&	O
_MU_STR_OPEN	int
)	O
)	O
{	O
if	O
(	O
stream	*(struct)
->	O
open	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(int))
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
_stream_init	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))->(void)
(	O
stream	*(struct)
)	O
;	O
}	O
rc	int
=	O
mu_stream_flush	(*(struct))->(int)
(	O
stream	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
stream	*(struct)
->	O
shutdown	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int))
)	O
return	O
stream	*(struct)
->	O
shutdown	*((*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),int)->(int))
(	O
stream	*(struct)
,	O
how	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_stream_set_flags	(*(struct),int)->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
fl	int
)	O
{	O
if	O
(	O
stream	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
stream	*(struct)
->	O
flags	int
|=	O
(	O
fl	int
&	O
~	O
_MU_STR_INTERN_MASK	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_stream_clr_flags	(*(struct),int)->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
fl	int
)	O
{	O
if	O
(	O
stream	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
stream	*(struct)
->	O
flags	int
&=	O
~	O
(	O
fl	int
&	O
~	O
_MU_STR_INTERN_MASK	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_stream_set_stat	(*(struct),int,array(long))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
statmask	int
,	O
mu_stream_stat_buffer	array(long)
statbuf	array(long)
)	O
{	O
if	O
(	O
stream	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
statbuf	array(long)
)	O
statmask	int
=	O
0	int
;	O
stream	*(struct)
->	O
statmask	int
=	O
statmask	int
;	O
stream	*(struct)
->	O
statbuf	array(long)
=	O
statbuf	array(long)
;	O
if	O
(	O
stream	*(struct)
->	O
statbuf	array(long)
)	O
memset	(*(void),int,long)->(*(void))
(	O
stream	*(struct)
->	O
statbuf	array(long)
,	O
0	int
,	O
_MU_STREAM_STAT_MAX	int
*	O
sizeof	O
(	O
stream	*(struct)
->	O
statbuf	array(long)
[	O
0	int
]	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_stream_get_stat	(*(struct),*(int),*(*(long)))->(int)
(	O
mu_stream_t	*(struct)
stream	*(struct)
,	O
int	O
*	O
pstatmask	*(int)
,	O
mu_off_t	long
*	O
*	O
pstatbuf	*(*(long))
)	O
{	O
if	O
(	O
stream	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
*	O
pstatmask	*(int)
=	O
stream	*(struct)
->	O
statmask	int
;	O
*	O
pstatbuf	*(*(long))
=	O
stream	*(struct)
->	O
statbuf	array(long)
;	O
return	O
0	int
;	O
}	O
