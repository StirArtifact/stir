static	O
void	O
sendmail_destroy	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mu_mailer_t	*(struct)
)	O
;	O
static	O
int	O
sendmail_open	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailer_t	*(struct)
,	O
int	O
)	O
;	O
static	O
int	O
sendmail_close	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailer_t	*(struct)
)	O
;	O
static	O
int	O
sendmail_send_message	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(int)
(	O
mu_mailer_t	*(struct)
,	O
mu_message_t	*(struct)
,	O
mu_address_t	*(struct)
,	O
mu_address_t	*(struct)
)	O
;	O
static	O
int	O
_url_sendmail_init	(*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_url_t	*(struct)
url	*(struct)
)	O
{	O
if	O
(	O
url	*(struct)
->	O
path	*(char)
==	O
NULL	O
)	O
if	O
(	O
(	O
url	*(struct)
->	O
path	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
PATH_SENDMAIL	O
)	O
)	O
==	O
0	int
)	O
return	O
ENOMEM	int
;	O
return	O
0	int
;	O
}	O
int	O
_mu_mailer_sendmail_init	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailer_t	*(struct)
mailer	*(struct)
)	O
{	O
int	O
status	int
;	O
mu_progmailer_t	*(struct)
pm	*(*(struct))
;	O
status	int
=	O
mu_progmailer_create	(*(*(struct)))->(int)
(	O
&	O
pm	*(*(struct))
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mailer	*(struct)
->	O
data	*(void)
=	O
pm	*(*(struct))
;	O
mailer	*(struct)
->	O
_destroy	*((*(struct),*(void))->(int))
=	O
sendmail_destroy	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(void)
;	O
mailer	*(struct)
->	O
_open	*((*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),int)->(int))
=	O
sendmail_open	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),int)->(int)
;	O
mailer	*(struct)
->	O
_close	*((*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int))
=	O
sendmail_close	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int)
;	O
mailer	*(struct)
->	O
_send_message	*((*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`))))->(int))
=	O
sendmail_send_message	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(int)
;	O
{	O
mu_property_t	*(struct)
property	*(struct)
=	O
NULL	O
;	O
mu_mailer_get_property	(*(struct),*(*(struct)))->(int)
(	O
mailer	*(struct)
,	O
&	O
property	*(struct)
)	O
;	O
mu_property_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
property	*(struct)
,	O
"TYPE"	*(char)
,	O
"SENDMAIL"	*(char)
,	O
1	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
sendmail_destroy	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(void)
(	O
mu_mailer_t	*(struct)
mailer	*(struct)
)	O
{	O
mu_progmailer_destroy	(*(*(struct)))->(void)
(	O
(	O
mu_progmailer_t	*(struct)
*	O
)	O
&	O
mailer	*(struct)
->	O
data	*(void)
)	O
;	O
}	O
static	O
int	O
sendmail_open	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),int)->(int)
(	O
mu_mailer_t	*(struct)
mailer	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_progmailer_t	*(struct)
pm	*(*(struct))
=	O
mailer	*(struct)
->	O
data	*(void)
;	O
int	O
status	int
;	O
const	O
char	O
*	O
path	*(char)
;	O
if	O
(	O
pm	*(*(struct))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mailer	*(struct)
->	O
flags	int
=	O
flags	int
;	O
if	O
(	O
(	O
status	int
=	O
mu_url_sget_path	(*(struct),*(*(char)))->(int)
(	O
mailer	*(struct)
->	O
url	*(struct)
,	O
&	O
path	*(char)
)	O
)	O
)	O
return	O
status	int
;	O
if	O
(	O
access	(*(char),int)->(int)
(	O
path	*(char)
,	O
X_OK	int
)	O
==	O
-	O
1	int
)	O
return	O
errno	O
;	O
status	int
=	O
mu_progmailer_set_command	(*(struct),*(char))->(int)
(	O
pm	*(*(struct))
,	O
path	*(char)
)	O
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_TRACE	O
,	O
(	O
"sendmail binary: %s"	*(char)
,	O
path	*(char)
)	O
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
sendmail_close	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int)
(	O
mu_mailer_t	*(struct)
mailer	*(struct)
)	O
{	O
return	O
mu_progmailer_close	(*(struct))->(int)
(	O
mailer	*(struct)
->	O
data	*(void)
)	O
;	O
}	O
static	O
int	O
mailer_property_is_set	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char))->(int)
(	O
mu_mailer_t	*(struct)
mailer	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
mu_property_t	*(struct)
property	*(struct)
=	O
NULL	O
;	O
mu_mailer_get_property	(*(struct),*(*(struct)))->(int)
(	O
mailer	*(struct)
,	O
&	O
property	*(struct)
)	O
;	O
return	O
mu_property_is_set	(*(struct),*(char))->(int)
(	O
property	*(struct)
,	O
name	*(char)
)	O
;	O
}	O
static	O
int	O
sendmail_send_message	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))->(int)
(	O
mu_mailer_t	*(struct)
mailer	*(struct)
,	O
mu_message_t	*(struct)
msg	*(struct)
,	O
mu_address_t	*(struct)
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
,	O
mu_address_t	*(struct)
to	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
mu_progmailer_t	*(struct)
pm	*(*(struct))
=	O
mailer	*(struct)
->	O
data	*(void)
;	O
int	O
argc	int
=	O
0	int
;	O
const	O
char	O
*	O
*	O
argvec	*(*(char))
=	O
NULL	O
;	O
size_t	long
tocount	long
=	O
0	int
;	O
const	O
char	O
*	O
emailfrom	*(char)
=	O
NULL	O
;	O
int	O
status	int
;	O
if	O
(	O
!	O
pm	*(*(struct))
)	O
return	O
EINVAL	int
;	O
argc	int
++	O
;	O
argc	int
++	O
;	O
argc	int
++	O
;	O
if	O
(	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
{	O
if	O
(	O
(	O
status	int
=	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
,	O
1	int
,	O
&	O
emailfrom	*(char)
)	O
)	O
!=	O
0	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"cannot get recipient email: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
)	O
;	O
return	O
status	int
;	O
}	O
if	O
(	O
!	O
emailfrom	*(char)
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_TRACE	O
,	O
(	O
"envelope from (%s) not fully qualifed\n"	*(char)
,	O
emailfrom	*(char)
)	O
)	O
;	O
return	O
MU_ERR_INVALID_EMAIL	O
;	O
}	O
argc	int
+=	O
2	int
;	O
}	O
if	O
(	O
to	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
status	int
=	O
mu_address_get_email_count	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(long))->(int)
(	O
to	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
&	O
tocount	long
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
tocount	long
==	O
0	int
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_TRACE	O
,	O
(	O
"missing recipients"	*(char)
)	O
)	O
;	O
return	O
MU_ERR_NOENT	O
;	O
}	O
argc	int
+=	O
tocount	long
;	O
}	O
argc	int
++	O
;	O
if	O
(	O
(	O
argvec	*(*(char))
=	O
calloc	(long,long)->(*(void))
(	O
argc	int
,	O
sizeof	O
(	O
*	O
argvec	*(*(char))
)	O
)	O
)	O
==	O
0	int
)	O
return	O
ENOMEM	int
;	O
argc	int
=	O
0	int
;	O
if	O
(	O
mu_progmailer_sget_command	(*(struct),*(*(char)))->(int)
(	O
pm	*(*(struct))
,	O
&	O
argvec	*(*(char))
[	O
argc	int
]	O
)	O
||	O
argvec	*(*(char))
[	O
argc	int
]	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
argvec	*(*(char))
)	O
;	O
return	O
EINVAL	int
;	O
}	O
argc	int
++	O
;	O
argvec	*(*(char))
[	O
argc	int
++	O
]	O
=	O
"-oi"	*(char)
;	O
if	O
(	O
from	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))))
)	O
{	O
argvec	*(*(char))
[	O
argc	int
++	O
]	O
=	O
"-f"	*(char)
;	O
argvec	*(*(char))
[	O
argc	int
++	O
]	O
=	O
emailfrom	*(char)
;	O
}	O
if	O
(	O
!	O
to	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
||	O
mailer_property_is_set	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))),*(char))->(int)
(	O
mailer	*(struct)
,	O
"READ_RECIPIENTS"	*(char)
)	O
)	O
{	O
argvec	*(*(char))
[	O
argc	int
++	O
]	O
=	O
"-t"	*(char)
;	O
}	O
else	O
{	O
size_t	long
i	long
;	O
size_t	long
count	long
=	O
0	int
;	O
mu_address_get_count	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),*(long))->(int)
(	O
to	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
&	O
count	long
)	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
count	long
;	O
i	long
++	O
)	O
{	O
const	O
char	O
*	O
email	*(char)
;	O
if	O
(	O
(	O
status	int
=	O
mu_address_sget_email	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`)))),long,*(*(char)))->(int)
(	O
to	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
i	long
,	O
&	O
email	*(char)
)	O
)	O
!=	O
0	int
)	O
{	O
free	(*(void))->(void)
(	O
argvec	*(*(char))
)	O
;	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"cannot get email of recipient #%lu: %s"	*(char)
,	O
(	O
unsigned	O
long	O
)	O
i	long
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
)	O
;	O
return	O
status	int
;	O
}	O
if	O
(	O
!	O
email	*(char)
)	O
{	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_TRACE	O
,	O
(	O
"envelope to (%s) not fully qualifed"	*(char)
,	O
email	*(char)
)	O
)	O
;	O
free	(*(void))->(void)
(	O
argvec	*(*(char))
)	O
;	O
return	O
MU_ERR_INVALID_EMAIL	O
;	O
}	O
argvec	*(*(char))
[	O
argc	int
++	O
]	O
=	O
email	*(char)
;	O
}	O
}	O
argvec	*(*(char))
[	O
argc	int
]	O
=	O
NULL	O
;	O
status	int
=	O
mu_progmailer_open	(*(struct),*(*(char)))->(int)
(	O
pm	*(*(struct))
,	O
(	O
char	O
*	O
*	O
)	O
argvec	*(*(char))
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
status	int
=	O
mu_progmailer_send	(*(struct),*(struct))->(int)
(	O
pm	*(*(struct))
,	O
msg	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
mu_observable_notify	(*(struct),int,*(void))->(int)
(	O
mailer	*(struct)
->	O
observable	*(struct)
,	O
MU_EVT_MAILER_MESSAGE_SENT	int
,	O
msg	*(struct)
)	O
;	O
else	O
mu_debug	O
(	O
MU_DEBCAT_MAILER	int
,	O
MU_DEBUG_ERROR	int
,	O
(	O
"progmailer error: %s"	*(char)
,	O
mu_strerror	(int)->(*(char))
(	O
status	int
)	O
)	O
)	O
;	O
}	O
free	(*(void))->(void)
(	O
argvec	*(*(char))
)	O
;	O
return	O
status	int
;	O
}	O
static	O
struct	O
_mu_record	struct(int,*(char),int,int,int,*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(int)),*((*(struct))->(int)),*((*(struct(*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int)),*((*(struct))->(int)),*(void),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),int)->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(*((*`)->(int))))->(int)),*((*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(char),int)->(int)))
_sendmail_record	struct(int,*(char),int,int,int,*((*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))->(int)),*((*(struct))->(int)),*((*(struct(*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`)))->(int)),*((*(struct))->(int)),*(void),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int)->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),int)->(int)))
=	O
{	O
MU_SENDMAIL_PRIO	int
,	O
MU_SENDMAIL_SCHEME	*(char)
,	O
MU_RECORD_DEFAULT	int
,	O
MU_URL_SCHEME	int
|	O
MU_URL_PATH	int
,	O
MU_URL_SCHEME	int
,	O
_url_sendmail_init	(*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))))->(int)
,	O
_mu_mailer_mailbox_init	(*(struct))->(int)
,	O
_mu_mailer_sendmail_init	(*(struct(*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int,*(struct(*`,*`,int,int)),*(struct),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`,*`,*`,*`)->(int)),*((*`,*`)->(int)))))->(int)
,	O
_mu_mailer_folder_init	(*(struct))->(int)
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
;	O
mu_record_t	*(struct)
mu_sendmail_record	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
=	O
&	O
_sendmail_record	struct(int,*(char),int,int,int,*((*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))->(int)),*((*(struct))->(int)),*((*(struct(*`,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`)))->(int)),*((*(struct))->(int)),*(void),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),int)->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*((*`)->(int))))->(int)),*((*(struct(int,*`,int,int,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(char),int)->(int)))
;	O
