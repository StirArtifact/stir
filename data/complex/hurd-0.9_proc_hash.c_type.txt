static	O
struct	O
hurd_ihash	O
pghash	struct
=	O
HURD_IHASH_INITIALIZER	()->(int)
(	O
offsetof	O
(	O
struct	O
pgrp	O
,	O
pg_hashloc	O
)	O
)	O
;	O
static	O
struct	O
hurd_ihash	O
pidhash	struct
=	O
HURD_IHASH_INITIALIZER	()->(int)
(	O
offsetof	O
(	O
struct	O
proc	O
,	O
p_pidhashloc	O
)	O
)	O
;	O
static	O
struct	O
hurd_ihash	O
taskhash	struct
=	O
HURD_IHASH_INITIALIZER	()->(int)
(	O
offsetof	O
(	O
struct	O
proc	O
,	O
p_taskhashloc	O
)	O
)	O
;	O
static	O
struct	O
hurd_ihash	O
sidhash	struct
=	O
HURD_IHASH_INITIALIZER	()->(int)
(	O
offsetof	O
(	O
struct	O
session	O
,	O
s_hashloc	O
)	O
)	O
;	O
struct	O
proc	O
*	O
pid_find	(int)->(*(struct))
(	O
pid_t	O
pid	int
)	O
{	O
struct	O
proc	O
*	O
p	*(struct)
;	O
p	*(struct)
=	O
hurd_ihash_find	()->(int)
(	O
&	O
pidhash	struct
,	O
pid	int
)	O
;	O
return	O
(	O
!	O
p	*(struct)
||	O
p	*(struct)
->	O
p_dead	O
)	O
?	O
0	int
:	O
p	*(struct)
;	O
}	O
struct	O
proc	O
*	O
pid_find_allow_zombie	(int)->(*(struct))
(	O
pid_t	O
pid	int
)	O
{	O
return	O
hurd_ihash_find	()->(int)
(	O
&	O
pidhash	struct
,	O
pid	int
)	O
;	O
}	O
struct	O
proc	O
*	O
task_find	(int)->(*(struct))
(	O
task_t	O
task	int
)	O
{	O
struct	O
proc	O
*	O
p	*(struct)
;	O
p	*(struct)
=	O
hurd_ihash_find	()->(int)
(	O
&	O
taskhash	struct
,	O
task	int
)	O
?	O
:	O
add_tasks	()->(int)
(	O
task	int
)	O
;	O
return	O
(	O
!	O
p	*(struct)
||	O
p	*(struct)
->	O
p_dead	O
)	O
?	O
0	int
:	O
p	*(struct)
;	O
}	O
struct	O
proc	O
*	O
task_find_nocreate	(int)->(*(struct))
(	O
task_t	O
task	int
)	O
{	O
struct	O
proc	O
*	O
p	*(struct)
;	O
p	*(struct)
=	O
hurd_ihash_find	()->(int)
(	O
&	O
taskhash	struct
,	O
task	int
)	O
;	O
return	O
(	O
!	O
p	*(struct)
||	O
p	*(struct)
->	O
p_dead	O
)	O
?	O
0	int
:	O
p	*(struct)
;	O
}	O
struct	O
pgrp	O
*	O
pgrp_find	(int)->(*(struct))
(	O
pid_t	O
pgid	int
)	O
{	O
return	O
hurd_ihash_find	()->(int)
(	O
&	O
pghash	struct
,	O
pgid	int
)	O
;	O
}	O
struct	O
session	O
*	O
session_find	(int)->(*(struct))
(	O
pid_t	O
sid	int
)	O
{	O
return	O
hurd_ihash_find	()->(int)
(	O
&	O
sidhash	struct
,	O
sid	int
)	O
;	O
}	O
void	O
add_proc_to_hash	(*(struct))->(void)
(	O
struct	O
proc	O
*	O
p	*(struct)
)	O
{	O
hurd_ihash_add	()->(int)
(	O
&	O
pidhash	struct
,	O
p	*(struct)
->	O
p_pid	O
,	O
p	*(struct)
)	O
;	O
hurd_ihash_add	()->(int)
(	O
&	O
taskhash	struct
,	O
p	*(struct)
->	O
p_task	O
,	O
p	*(struct)
)	O
;	O
}	O
void	O
add_pgrp_to_hash	(*(struct))->(void)
(	O
struct	O
pgrp	O
*	O
pg	*(struct)
)	O
{	O
hurd_ihash_add	()->(int)
(	O
&	O
pghash	struct
,	O
pg	*(struct)
->	O
pg_pgid	O
,	O
pg	*(struct)
)	O
;	O
}	O
void	O
add_session_to_hash	(*(struct))->(void)
(	O
struct	O
session	O
*	O
s	*(struct)
)	O
{	O
hurd_ihash_add	()->(int)
(	O
&	O
sidhash	struct
,	O
s	*(struct)
->	O
s_sid	O
,	O
s	*(struct)
)	O
;	O
}	O
void	O
remove_pgrp_from_hash	(*(struct))->(void)
(	O
struct	O
pgrp	O
*	O
pg	*(struct)
)	O
{	O
hurd_ihash_locp_remove	()->(int)
(	O
&	O
pghash	struct
,	O
pg	*(struct)
->	O
pg_hashloc	O
)	O
;	O
}	O
void	O
remove_proc_from_hash	(*(struct))->(void)
(	O
struct	O
proc	O
*	O
p	*(struct)
)	O
{	O
hurd_ihash_locp_remove	()->(int)
(	O
&	O
pidhash	struct
,	O
p	*(struct)
->	O
p_pidhashloc	O
)	O
;	O
hurd_ihash_locp_remove	()->(int)
(	O
&	O
taskhash	struct
,	O
p	*(struct)
->	O
p_taskhashloc	O
)	O
;	O
}	O
void	O
remove_session_from_hash	(*(struct))->(void)
(	O
struct	O
session	O
*	O
s	*(struct)
)	O
{	O
hurd_ihash_locp_remove	()->(int)
(	O
&	O
sidhash	struct
,	O
s	*(struct)
->	O
s_hashloc	O
)	O
;	O
}	O
void	O
prociterate	(*((*(struct),*(void))->(void)),*(void))->(void)
(	O
void	O
(	O
*	O
fun	*((*(struct),*(void))->(void))
)	O
(	O
struct	O
proc	O
*	O
,	O
void	O
*	O
)	O
,	O
void	O
*	O
arg	*(void)
)	O
{	O
HURD_IHASH_ITERATE	()->(int)
(	O
&	O
pidhash	struct
,	O
value	O
)	O
{	O
struct	O
proc	O
*	O
p	*(struct)
=	O
value	O
;	O
if	O
(	O
!	O
p	*(struct)
->	O
p_dead	O
)	O
(	O
*	O
fun	*((*(struct),*(void))->(void))
)	O
(	O
p	*(struct)
,	O
arg	*(void)
)	O
;	O
}	O
}	O
int	O
pidfree	(int)->(int)
(	O
pid_t	O
pid	int
)	O
{	O
return	O
(	O
!	O
pid_find_allow_zombie	(int)->(*(struct))
(	O
pid	int
)	O
&&	O
!	O
pgrp_find	(int)->(*(struct))
(	O
pid	int
)	O
&&	O
!	O
session_find	(int)->(*(struct))
(	O
pid	int
)	O
)	O
;	O
}	O
