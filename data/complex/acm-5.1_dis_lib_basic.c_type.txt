typedef	O
long	O
long	O
my_quad_t	long long
;	O
int	O
DIS_NPSNET_COMPAT	int
=	O
0	int
;	O
int	O
DISGetRealTime	(*(struct(long,struct(int,int))))->(int)
(	O
dis_time	struct(long,struct(int,int))
*	O
result	char
)	O
{	O
struct	O
timeval	struct(long,long)
t	struct(long,long)
;	O
struct	O
timezone	struct(int,int)
tz	struct(int,int)
;	O
my_quad_t	long long
i	long long
;	O
if	O
(	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
t	struct(long,long)
,	O
&	O
tz	struct(int,int)
)	O
!=	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
result	char
->	O
hour	long
=	O
t	struct(long,long)
.	O
tv_sec	long
/	O
3600	int
;	O
i	long long
=	O
(	O
t	struct(long,long)
.	O
tv_sec	long
%	O
3600	int
)	O
*	O
MILLION	int
+	O
t	struct(long,long)
.	O
tv_usec	long
;	O
i	long long
=	O
(	O
i	long long
*	O
dis_timestamp_const	int
/	O
3600	int
)	O
/	O
MILLION	int
;	O
result	char
->	O
rel	struct(int,int)
.	O
time	int
=	O
(	O
unsigned	O
int	O
)	O
i	long long
;	O
result	char
->	O
rel	struct(int,int)
.	O
type	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
DISGetTimestamp	(*(struct(int,int)))->(int)
(	O
dis_timestamp	struct(int,int)
*	O
result	char
)	O
{	O
struct	O
timeval	struct(long,long)
t	struct(long,long)
;	O
struct	O
timezone	struct(int,int)
tz	struct(int,int)
;	O
my_quad_t	long long
i	long long
;	O
if	O
(	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
t	struct(long,long)
,	O
&	O
tz	struct(int,int)
)	O
!=	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
i	long long
=	O
(	O
t	struct(long,long)
.	O
tv_sec	long
%	O
3600	int
)	O
*	O
MILLION	int
+	O
t	struct(long,long)
.	O
tv_usec	long
;	O
i	long long
=	O
(	O
i	long long
*	O
dis_timestamp_const	int
/	O
3600	int
)	O
/	O
MILLION	int
;	O
result	char
->	O
time	int
=	O
(	O
unsigned	O
int	O
)	O
i	long long
;	O
result	char
->	O
type	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
void	O
DISTimestampToTimeval	(*(struct(int,int)),*(struct(long,long)))->(void)
(	O
dis_timestamp	struct(int,int)
*	O
in	*(struct(long,struct(int,int)))
,	O
struct	O
timeval	struct(long,long)
*	O
out	*(struct(long,long))
)	O
{	O
my_quad_t	long long
i	long long
;	O
i	long long
=	O
(	O
my_quad_t	long long
)	O
in	*(struct(long,struct(int,int)))
->	O
time	int
*	O
MILLION	int
*	O
3600	int
/	O
dis_timestamp_const	int
;	O
out	*(struct(long,long))
->	O
tv_sec	long
=	O
(	O
long	O
)	O
(	O
i	long long
/	O
MILLION	int
)	O
;	O
out	*(struct(long,long))
->	O
tv_usec	long
=	O
(	O
long	O
)	O
(	O
i	long long
%	O
MILLION	int
)	O
;	O
}	O
void	O
DISTimeToTimeval	(*(struct(long,struct(int,int))),*(struct(long,long)))->(void)
(	O
dis_time	struct(long,struct(int,int))
*	O
in	*(struct(long,struct(int,int)))
,	O
struct	O
timeval	struct(long,long)
*	O
out	*(struct(long,long))
)	O
{	O
my_quad_t	long long
i	long long
;	O
i	long long
=	O
(	O
my_quad_t	long long
)	O
in	*(struct(long,struct(int,int)))
->	O
rel	struct(int,int)
.	O
time	int
*	O
MILLION	int
/	O
dis_timestamp_const	int
;	O
out	*(struct(long,long))
->	O
tv_sec	long
=	O
(	O
long	O
)	O
(	O
in	*(struct(long,struct(int,int)))
->	O
hour	long
*	O
3600	int
+	O
i	long long
/	O
MILLION	int
)	O
;	O
out	*(struct(long,long))
->	O
tv_usec	long
=	O
(	O
long	O
)	O
(	O
i	long long
%	O
MILLION	int
)	O
;	O
}	O
DISResult	enum(int,int,int)
DISAddArticulationParm	(*(union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct`,struct`),struct(char,array(char)),long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),long,struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(float,float,float),struct(double,double,double),struct(struct`,short,short,short,short),struct(float,float,float),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),struct(long,struct`),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),char,char,array(char),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),short,short,long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(long,struct`),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),struct(struct`,short),struct(long,long,*`,*`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,long,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),char,char,short,*(struct`)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),short,struct(struct`,short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short),long,char,char,struct(struct`,short),long),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)),struct(struct(char,char,char,char,struct`,short,short),struct(struct`,short),struct(struct`,short)))),*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))),*(int))->(enum(int,int,int))
(	O
dis_pdu	union(struct(char,char,char,char,struct(int,int),short,short),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),long,struct(float,float,float)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),float),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(float,float,float),struct(double,double,double),struct(struct(char,char,short,char,char,char,char),short,short,short,short),struct(float,float,float),char,char,short,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),struct(long,struct(int,int)),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),char,char,array(char),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),short,short,long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,struct(int,int)),long,long,long,*(long),*(long)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),struct(struct(short,short),short),struct(long,long,*(struct(long,long)),*(struct(long,long,union`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,long,*(struct(long,long,union(double,struct`,*`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),char,char,short,*(struct(char,char,short,struct(short,char,char),struct(float,float,float),*(struct`)))),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),short,struct(struct(short,short),short),char,char,float,float,struct(float,float,float),struct(double,double,double)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short),long,char,char,struct(struct(short,short),short),long),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)),struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),struct(struct(short,short),short)))
*	O
p	*(struct(char,char,short,char,char,char,char))
,	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
*	O
parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
,	O
int	O
*	O
parmID	*(int)
)	O
{	O
dis_entity_state_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
=	O
(	O
dis_entity_state_pdu	struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))))
*	O
)	O
p	*(struct(char,char,short,char,char,char,char))
;	O
int	O
n	int
=	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm_count	char
+	O
1	int
;	O
if	O
(	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm_count	char
==	O
0	int
)	O
{	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
=	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
)	O
)	O
;	O
}	O
else	O
{	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
=	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
*	O
)	O
realloc	(*(void),long)->(*(void))
(	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
,	O
sizeof	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
)	O
*	O
n	int
)	O
;	O
}	O
if	O
(	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
==	O
(	O
dis_articulation_parm	struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short)))
*	O
)	O
NULL	O
)	O
{	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm_count	char
=	O
0	int
;	O
return	O
DISResultNoMemory	int
;	O
}	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
[	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm_count	char
]	O
=	O
*	O
parm	*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))
;	O
esp	*(struct(struct(char,char,char,char,struct(int,int),short,short),struct(struct(short,short),short),char,char,struct(char,char,short,char,char,char,char),struct(char,char,short,char,char,char,char),struct(float,float,float),struct(double,double,double),struct(float,float,float),long,struct(char,array(char),struct(float,float,float),struct(float,float,float)),struct(char,array(char)),long,*(struct(char,char,short,long,union(double,array(float),array(char),array(long),array(short))))))
->	O
art_parm_count	char
=	O
n	int
;	O
*	O
parmID	*(int)
=	O
n	int
;	O
return	O
DISResultOK	int
;	O
}	O
