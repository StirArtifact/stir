struct	O
mlc_dispatch	struct(*(char),*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))
{	O
char	O
*	O
name	*(char)
;	O
mlc_collect_user_t	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
collect_user	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
;	O
mlc_collect_realm_t	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
collect_realm	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
;	O
mlc_close_t	*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void))
close	*((*(void))->(int))
;	O
mlc_enabled_t	*(()->(int))
enabled_p	*(()->(int))
;	O
}	O
;	O
static	O
grad_list_t	struct
*	O
mlc_dispatch_list	*(struct)
;	O
struct	O
mlc_dispatch	struct(*(char),*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))
*	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
;	O
void	O
mlc_register_method	(*(char),*((*(char),*(struct(*`,int,*`,*`,*`,*`,int,int,int,int,*`,array(char),int,*`)),*(*(struct`)))->(int)),*((*(struct(*`,int,*`,*`,*`,*`,int,int,int,int,*`,array(char),int,*`)),*(*(struct`)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))->(void)
(	O
char	O
*	O
name	*(char)
,	O
mlc_collect_user_t	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
collect_user	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
,	O
mlc_collect_realm_t	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
collect_realm	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
,	O
mlc_close_t	*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void))
close	*((*(void))->(int))
,	O
mlc_enabled_t	*(()->(int))
enabled_p	*(()->(int))
)	O
{	O
struct	O
mlc_dispatch	struct(*(char),*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))
*	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
=	O
grad_emalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
)	O
)	O
;	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
name	*(char)
=	O
grad_estrdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
collect_user	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
=	O
collect_user	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
;	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
collect_realm	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
=	O
collect_realm	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
;	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
close	*((*(void))->(int))
=	O
close	*((*(void))->(int))
;	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
enabled_p	*(()->(int))
=	O
enabled_p	*(()->(int))
;	O
if	O
(	O
!	O
mlc_dispatch_list	*(struct)
)	O
mlc_dispatch_list	*(struct)
=	O
grad_list_create	()->(*(struct))
(	O
)	O
;	O
grad_list_append	(*(struct),*(void))->(void)
(	O
mlc_dispatch_list	*(struct)
,	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
)	O
;	O
}	O
int	O
radius_mlc_enabled_p	()->(int)
(	O
)	O
{	O
return	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
?	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
enabled_p	*(()->(int))
(	O
)	O
:	O
0	int
;	O
}	O
int	O
radius_mlc_collect_user	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
(	O
char	O
*	O
name	*(char)
,	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
grad_list_t	struct
*	O
*	O
sess_list	*(*(struct))
)	O
{	O
GRAD_DEBUG	O
(	O
20	int
,	O
"Entered"	*(char)
)	O
;	O
return	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
collect_user	*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
(	O
name	*(char)
,	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
sess_list	*(*(struct))
)	O
;	O
}	O
int	O
radius_mlc_collect_realm	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
grad_list_t	struct
*	O
*	O
sess_list	*(*(struct))
)	O
{	O
GRAD_DEBUG	O
(	O
20	int
,	O
"Entered"	*(char)
)	O
;	O
return	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
collect_realm	*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int))
(	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
sess_list	*(*(struct))
)	O
;	O
}	O
void	O
radius_mlc_close	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
{	O
char	O
ipbuf	array(char)
[	O
GRAD_IPV4_STRING_LENGTH	int
]	O
;	O
GRAD_DEBUG2	O
(	O
20	int
,	O
"Closing session: NAS %s port %d"	*(char)
,	O
grad_ip_iptostr	(int,*(char))->(*(char))
(	O
ntohl	(int)->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
nas_address	int
)	O
,	O
ipbuf	array(char)
)	O
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
nas_port	int
)	O
;	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
close	*((*(void))->(int))
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
static	O
int	O
check_ts	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
{	O
grad_nas_t	struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void))
*	O
nas	int
;	O
if	O
(	O
(	O
nas	int
=	O
grad_nas_lookup_ip	(int)->(*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void))))
(	O
ntohl	(int)->(int)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
nas_address	int
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
_	O
(	O
"check_ts(): unknown NAS"	*(char)
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
nas	int
->	O
nastype	array(char)
,	O
"true"	*(char)
)	O
==	O
0	int
)	O
return	O
1	int
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
nas	int
->	O
nastype	array(char)
,	O
"false"	*(char)
)	O
==	O
0	int
)	O
return	O
0	int
;	O
return	O
checkrad	(*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void))),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
nas	int
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
static	O
int	O
rad_check_ts	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
{	O
int	O
result	*(struct)
;	O
switch	O
(	O
result	*(struct)
=	O
check_ts	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
{	O
case	O
0	int
:	O
case	O
1	int
:	O
return	O
result	*(struct)
;	O
default	O
:	O
if	O
(	O
checkrad_assume_logged	int
)	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
_	O
(	O
"assuming `%s' is logged in"	*(char)
)	O
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
)	O
;	O
else	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
_	O
(	O
"assuming `%s' is NOT logged in"	*(char)
)	O
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
)	O
;	O
return	O
checkrad_assume_logged	int
;	O
}	O
}	O
static	O
int	O
utmp_free	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
ARG_UNUSED	O
)	O
{	O
grad_free	(*(void))->(void)
(	O
item	*(void)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
radius_mlc_user	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),long,*(long))->(int)
(	O
char	O
*	O
name	*(char)
,	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
size_t	long
maxsimul	long
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
void	O
*	O
mlc	*(void)
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
int	O
mpp	int
=	O
1	int
;	O
grad_list_t	struct
*	O
sess_list	*(*(struct))
=	O
NULL	O
;	O
size_t	long
count	int
;	O
GRAD_DEBUG2	O
(	O
1	int
,	O
"User %s, maxsimul %lu"	*(char)
,	O
name	*(char)
,	O
(	O
u_long	long
)	O
maxsimul	long
)	O
;	O
if	O
(	O
radius_mlc_collect_user	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
(	O
name	*(char)
,	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
&	O
sess_list	*(*(struct))
)	O
)	O
{	O
GRAD_DEBUG	O
(	O
1	int
,	O
"radius_mlc_collect_user() failed"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
count	int
=	O
grad_list_count	(*(struct))->(long)
(	O
sess_list	*(*(struct))
)	O
;	O
GRAD_DEBUG2	O
(	O
1	int
,	O
"Found %lu active sessions for user %s"	*(char)
,	O
(	O
u_long	long
)	O
count	int
,	O
name	*(char)
)	O
;	O
if	O
(	O
count	int
>=	O
maxsimul	long
)	O
{	O
grad_iterator_t	struct
*	O
itr	*((*(void),*(void))->(int))
;	O
grad_uint32_t	int
ipno	int
=	O
0	int
;	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
fra	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_FRAMED_IP_ADDRESS	int
)	O
;	O
if	O
(	O
fra	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
)	O
ipno	int
=	O
htonl	(int)->(int)
(	O
fra	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
)	O
;	O
count	int
=	O
0	int
;	O
itr	*((*(void),*(void))->(int))
=	O
grad_iterator_create	(*(struct))->(*(struct))
(	O
sess_list	*(*(struct))
)	O
;	O
for	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_iterator_first	(*(struct))->(*(void))
(	O
itr	*((*(void),*(void))->(int))
)	O
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_iterator_next	(*(struct))->(*(void))
(	O
itr	*((*(void),*(void))->(int))
)	O
)	O
{	O
if	O
(	O
rad_check_ts	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
==	O
1	int
)	O
{	O
count	int
++	O
;	O
if	O
(	O
ipno	int
&&	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
framed_address	int
==	O
ipno	int
)	O
switch	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
proto	int
)	O
{	O
case	O
DV_FRAMED_PROTOCOL_PPP	int
:	O
case	O
DV_FRAMED_PROTOCOL_SLIP	int
:	O
case	O
256	int
:	O
mpp	int
=	O
0	int
;	O
}	O
}	O
else	O
{	O
radius_mlc_close	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
}	O
grad_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
itr	*((*(void),*(void))->(int))
)	O
;	O
}	O
grad_list_destroy	(*(*(struct)),*((*(void),*(void))->(int)),*(void))->(void)
(	O
&	O
sess_list	*(*(struct))
,	O
utmp_free	(*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
GRAD_DEBUG1	O
(	O
1	int
,	O
"%lu sessions really active"	*(char)
,	O
(	O
u_long	long
)	O
count	int
)	O
;	O
*	O
pcount	*(long)
=	O
count	int
;	O
return	O
(	O
count	int
<	O
maxsimul	long
)	O
?	O
0	int
:	O
mpp	int
;	O
}	O
int	O
radius_mlc_realm	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))))->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
)	O
{	O
size_t	long
count	int
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
radut_file_t	*(struct)
file	*(char)
;	O
size_t	long
maxlogins	long
;	O
grad_list_t	struct
*	O
sess_list	*(*(struct))
=	O
NULL	O
;	O
grad_realm_t	struct(array(char),*(struct),*(struct(int,int,int,long,*(struct))))
*	O
realm	array(char)
=	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
realm	array(char)
;	O
if	O
(	O
!	O
realm	array(char)
||	O
(	O
maxlogins	long
=	O
grad_realm_get_quota	(*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))))->(long)
(	O
realm	array(char)
)	O
)	O
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
radius_mlc_collect_realm	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
(	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
&	O
sess_list	*(*(struct))
)	O
)	O
{	O
GRAD_DEBUG	O
(	O
1	int
,	O
"radius_mlc_collect_realm() failed"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
count	int
=	O
grad_list_count	(*(struct))->(long)
(	O
sess_list	*(*(struct))
)	O
;	O
GRAD_DEBUG2	O
(	O
1	int
,	O
"Found %lu active sessions for realm %s"	*(char)
,	O
(	O
u_long	long
)	O
count	int
,	O
realm	array(char)
->	O
realm	array(char)
)	O
;	O
if	O
(	O
count	int
>=	O
maxlogins	long
)	O
{	O
grad_iterator_t	struct
*	O
itr	*((*(void),*(void))->(int))
;	O
count	int
=	O
0	int
;	O
itr	*((*(void),*(void))->(int))
=	O
grad_iterator_create	(*(struct))->(*(struct))
(	O
sess_list	*(*(struct))
)	O
;	O
for	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_iterator_first	(*(struct))->(*(void))
(	O
itr	*((*(void),*(void))->(int))
)	O
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_iterator_next	(*(struct))->(*(void))
(	O
itr	*((*(void),*(void))->(int))
)	O
)	O
{	O
if	O
(	O
rad_check_ts	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
==	O
1	int
)	O
count	int
++	O
;	O
else	O
radius_mlc_close	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
grad_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
itr	*((*(void),*(void))->(int))
)	O
;	O
}	O
grad_list_destroy	(*(*(struct)),*((*(void),*(void))->(int)),*(void))->(void)
(	O
&	O
sess_list	*(*(struct))
,	O
utmp_free	(*(void),*(void))->(int)
,	O
NULL	O
)	O
;	O
GRAD_DEBUG1	O
(	O
1	int
,	O
"%lu sessions really active"	*(char)
,	O
(	O
u_long	long
)	O
count	int
)	O
;	O
return	O
count	int
>=	O
maxlogins	long
;	O
}	O
static	O
int	O
name_cmp	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
item	*(void)
,	O
const	O
void	O
*	O
data	*(void)
)	O
{	O
const	O
struct	O
mlc_dispatch	struct(*(char),*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))
*	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
=	O
item	*(void)
;	O
const	O
char	O
*	O
name	*(char)
=	O
data	*(void)
;	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
->	O
name	*(char)
,	O
name	*(char)
)	O
;	O
}	O
static	O
int	O
mlc_set_method	(int,*(struct(int,union(*(char),int,long,int,struct(int,int),char,struct(int,int)))),*(void),*(void))->(int)
(	O
int	O
argc	int
,	O
cfg_value_t	struct(int,union(*(char),int,long,int,struct(int,int),char,struct(int,int)))
*	O
argv	*(*(char))
,	O
void	O
*	O
block_data	*(void)
,	O
void	O
*	O
handler_data	*(void)
)	O
{	O
struct	O
mlc_dispatch	struct(*(char),*((*(char),*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(*(struct`),int,*(struct`),*(char),*(struct`),*(struct`),int,int,int,int,*(char),array(char),int,*(struct`))),*(*(struct)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))
*	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
;	O
if	O
(	O
argc	int
!=	O
2	int
||	O
argv	*(*(char))
[	O
1	int
]	O
.	O
type	int
!=	O
CFG_STRING	int
)	O
return	O
1	int
;	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
=	O
grad_list_locate	(*(struct),*(void),*((*(void),*(void))->(int)))->(*(void))
(	O
mlc_dispatch_list	*(struct)
,	O
argv	*(*(char))
[	O
1	int
]	O
.	O
v	union(*(char),int,long,int,struct(int,int),char,struct(int,int))
.	O
string	*(*(char))
,	O
name_cmp	(*(void),*(void))->(int)
)	O
;	O
if	O
(	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
)	O
{	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
=	O
mp	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
;	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
struct	O
cfg_stmt	struct(*(char),int,*((int,*(void),*(void))->(int)),*((int,*(struct(int,union(*`,int,long,int,struct`,char,struct`))),*(void),*(void))->(int)),*(void),*(struct(*(char),int,*((int,*(void),*(void))->(int)),*((int,*(struct`),*(void),*(void))->(int)),*(void),*(struct(*(char),int,*((int,*`,*`)->(int)),*((int,*`,*`,*`)->(int)),*(void),*(struct`),*((*`,*`)->(int)))),*((*(void),*(void))->(int)))),*((*(void),*(void))->(int)))
mlc_stmt	array(struct(*(char),int,*((int,*(void),*(void))->(int)),*((int,*(struct(int,union`)),*(void),*(void))->(int)),*(void),*(struct(*(char),int,*((int,*`,*`)->(int)),*((int,*`,*`,*`)->(int)),*(void),*(struct(*`,int,*`,*`,*`,*`,*`)),*((*`,*`)->(int)))),*((*(void),*(void))->(int))))
[	O
]	O
=	O
{	O
{	O
"method"	*(char)
,	O
CS_STMT	int
,	O
NULL	O
,	O
mlc_set_method	(int,*(struct(int,union(*(char),int,long,int,struct(int,int),char,struct(int,int)))),*(void),*(void))->(int)
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"checkrad-assume-logged"	*(char)
,	O
CS_STMT	int
,	O
NULL	O
,	O
cfg_get_boolean	(int,*(struct(int,union(*(char),int,long,int,struct(int,int),char,struct(int,int)))),*(void),*(void))->(int)
,	O
&	O
checkrad_assume_logged	int
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
}	O
}	O
;	O
void	O
mlc_init	()->(void)
(	O
)	O
{	O
mlc_register_method	(*(char),*((*(char),*(struct(*`,int,*`,*`,*`,*`,int,int,int,int,*`,array(char),int,*`)),*(*(struct`)))->(int)),*((*(struct(*`,int,*`,*`,*`,*`,int,int,int,int,*`,array(char),int,*`)),*(*(struct`)))->(int)),*((*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)),*(()->(int)))->(void)
(	O
"system"	*(char)
,	O
radutmp_mlc_collect_user	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
,	O
radutmp_mlc_collect_realm	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
,	O
radutmp_mlc_close	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)
,	O
radutmp_mlc_enabled_p	()->(int)
)	O
;	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
=	O
grad_list_item	(*(struct),long)->(*(void))
(	O
mlc_dispatch_list	*(struct)
,	O
0	int
)	O
;	O
grad_insist	O
(	O
mlc_disptab	*(struct(*(char),*((*(char),*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`))->(void)),*(()->(int))))
!=	O
NULL	O
)	O
;	O
}	O
