double	O
mpq_get_d	O
(	O
const	O
MP_RAT	struct(struct(int,int,*(long)),struct(int,int,*(long)))
*	O
src	*(struct(struct(int,int,*(long)),struct(int,int,*(long))))
)	O
{	O
double	O
res	double
;	O
mp_srcptr	*(long)
np	*(long)
,	O
dp	*(long)
;	O
mp_ptr	*(long)
remp	*(long)
,	O
tp	*(long)
;	O
mp_size_t	long
nsize	long
=	O
SIZ	O
(	O
NUM	O
(	O
src	*(struct(struct(int,int,*(long)),struct(int,int,*(long))))
)	O
)	O
;	O
mp_size_t	long
dsize	long
=	O
SIZ	O
(	O
DEN	O
(	O
src	*(struct(struct(int,int,*(long)),struct(int,int,*(long))))
)	O
)	O
;	O
mp_size_t	long
qsize	long
,	O
prospective_qsize	long
,	O
zeros	long
,	O
chop	long
,	O
tsize	long
;	O
mp_size_t	long
sign_quotient	long
=	O
nsize	long
;	O
long	O
exp	int
;	O
mp_limb_t	long
qarr	array(long)
[	O
N_QLIMBS	O
+	O
1	int
]	O
;	O
mp_ptr	*(long)
qp	*(long)
=	O
qarr	array(long)
;	O
TMP_DECL	O
;	O
ASSERT	O
(	O
dsize	long
>	O
0	int
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
nsize	long
==	O
0	int
)	O
)	O
return	O
0.0	int
;	O
TMP_MARK	O
;	O
nsize	long
=	O
ABS	O
(	O
nsize	long
)	O
;	O
dsize	long
=	O
ABS	O
(	O
dsize	long
)	O
;	O
np	*(long)
=	O
PTR	O
(	O
NUM	O
(	O
src	*(struct(struct(int,int,*(long)),struct(int,int,*(long))))
)	O
)	O
;	O
dp	*(long)
=	O
PTR	O
(	O
DEN	O
(	O
src	*(struct(struct(int,int,*(long)),struct(int,int,*(long))))
)	O
)	O
;	O
prospective_qsize	long
=	O
nsize	long
-	O
dsize	long
+	O
1	int
;	O
qsize	long
=	O
N_QLIMBS	O
+	O
1	int
;	O
zeros	long
=	O
qsize	long
-	O
prospective_qsize	long
;	O
exp	int
=	O
(	O
long	O
)	O
-	O
zeros	long
*	O
GMP_NUMB_BITS	O
;	O
chop	long
=	O
MAX	O
(	O
-	O
zeros	long
,	O
0	int
)	O
;	O
np	*(long)
+=	O
chop	long
;	O
nsize	long
-=	O
chop	long
;	O
zeros	long
+=	O
chop	long
;	O
tsize	long
=	O
nsize	long
+	O
zeros	long
;	O
if	O
(	O
WANT_TMP_DEBUG	int
)	O
{	O
remp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
dsize	long
)	O
;	O
tp	*(long)
=	O
(	O
zeros	long
>	O
0	int
?	O
TMP_ALLOC_LIMBS	O
(	O
tsize	long
)	O
:	O
NULL	O
)	O
;	O
}	O
else	O
{	O
remp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
dsize	long
+	O
(	O
zeros	long
>	O
0	int
?	O
tsize	long
:	O
0	int
)	O
)	O
;	O
tp	*(long)
=	O
remp	*(long)
+	O
dsize	long
;	O
}	O
if	O
(	O
zeros	long
>	O
0	int
)	O
{	O
MPN_ZERO	O
(	O
tp	*(long)
,	O
zeros	long
)	O
;	O
MPN_COPY	O
(	O
tp	*(long)
+	O
zeros	long
,	O
np	*(long)
,	O
nsize	long
)	O
;	O
np	*(long)
=	O
tp	*(long)
;	O
nsize	long
=	O
tsize	long
;	O
}	O
ASSERT	O
(	O
qsize	long
==	O
nsize	long
-	O
dsize	long
+	O
1	int
)	O
;	O
mpn_tdiv_qr	O
(	O
qp	*(long)
,	O
remp	*(long)
,	O
(	O
mp_size_t	long
)	O
0	int
,	O
np	*(long)
,	O
nsize	long
,	O
dp	*(long)
,	O
dsize	long
)	O
;	O
qsize	long
-=	O
(	O
qp	*(long)
[	O
qsize	long
-	O
1	int
]	O
==	O
0	int
)	O
;	O
res	double
=	O
mpn_get_d	O
(	O
qp	*(long)
,	O
qsize	long
,	O
sign_quotient	long
,	O
exp	int
)	O
;	O
TMP_FREE	O
;	O
return	O
res	double
;	O
}	O
