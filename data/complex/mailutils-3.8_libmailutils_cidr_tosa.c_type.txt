int	O
mu_cidr_to_sockaddr	(*(struct(int,int,array(char),array(char))),*(*(struct(short,array(char)))))->(int)
(	O
struct	O
mu_cidr	struct(int,int,array(char),array(char))
*	O
cidr	*(struct(int,int,array(char),array(char)))
,	O
struct	O
sockaddr	struct(short,array(char))
*	O
*	O
psa	*(*(struct(short,array(char))))
)	O
{	O
union	O
{	O
struct	O
sockaddr	struct(short,array(char))
sa	*(struct(short,array(char)))
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
s_in	struct(short,short,struct(int),array(char))
;	O
struct	O
sockaddr_in6	struct(short,short,int,struct(union(array(char),array(short),array(int))),int)
s_in6	struct(short,short,int,struct(union(array(char),array(short),array(int))),int)
;	O
}	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
;	O
struct	O
sockaddr	struct(short,array(char))
*	O
sa	*(struct(short,array(char)))
;	O
int	O
socklen	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
,	O
0	int
,	O
sizeof	O
(	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
)	O
)	O
;	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
sa	*(struct(short,array(char)))
.	O
sa_family	short
=	O
cidr	*(struct(int,int,array(char),array(char)))
->	O
family	int
;	O
switch	O
(	O
cidr	*(struct(int,int,array(char),array(char)))
->	O
family	int
)	O
{	O
case	O
AF_INET	O
:	O
socklen	int
=	O
sizeof	O
(	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
s_in	struct(short,short,struct(int),array(char))
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
s_in	struct(short,short,struct(int),array(char))
.	O
sin_addr	struct(int)
.	O
s_addr	int
,	O
cidr	*(struct(int,int,array(char),array(char)))
->	O
address	array(char)
,	O
4	int
)	O
;	O
break	O
;	O
case	O
AF_INET6	O
:	O
socklen	int
=	O
sizeof	O
(	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
s_in6	struct(short,short,int,struct(union(array(char),array(short),array(int))),int)
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
.	O
s_in6	struct(short,short,int,struct(union(array(char),array(short),array(int))),int)
.	O
sin6_addr	struct(union(array(char),array(short),array(int)))
,	O
cidr	*(struct(int,int,array(char),array(char)))
->	O
address	array(char)
,	O
16	int
)	O
;	O
break	O
;	O
default	O
:	O
return	O
MU_ERR_FAMILY	O
;	O
}	O
sa	*(struct(short,array(char)))
=	O
malloc	(long)->(*(void))
(	O
socklen	int
)	O
;	O
if	O
(	O
!	O
sa	*(struct(short,array(char)))
)	O
return	O
ENOMEM	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
sa	*(struct(short,array(char)))
,	O
&	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)),struct(short,short,int,struct(union(array(char),array(short),array(int))),int))
,	O
socklen	int
)	O
;	O
*	O
psa	*(*(struct(short,array(char))))
=	O
sa	*(struct(short,array(char)))
;	O
return	O
0	int
;	O
}	O
