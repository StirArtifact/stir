extern	O
const	O
char	O
*	O
osip_protocol_version	*(char)
;	O
static	O
int	O
strcat_simple_header	(*(*(char)),*(long),*(*(char)),*(void),*(char),long,*((*(void),*(*(char)))->(int)),*(*(char)))->(int)
(	O
char	O
*	O
*	O
_string	*(*(char))
,	O
size_t	long
*	O
malloc_size	*(long)
,	O
char	O
*	O
*	O
_message	*(*(char))
,	O
void	O
*	O
ptr_header	*(void)
,	O
char	O
*	O
header_name	*(char)
,	O
size_t	long
size_of_header	long
,	O
int	O
(	O
*	O
xxx_to_str	*((*(void),*(*(char)))->(int))
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
,	O
char	O
*	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
static	O
int	O
strcat_headers_one_per_line	(*(*(char)),*(long),*(*(char)),*(struct(int,*(struct(*`,*`)))),*(char),long,*((*(void),*(*(char)))->(int)),*(*(char)))->(int)
(	O
char	O
*	O
*	O
_string	*(*(char))
,	O
size_t	long
*	O
malloc_size	*(long)
,	O
char	O
*	O
*	O
_message	*(*(char))
,	O
osip_list_t	struct
*	O
headers	*(struct(int,*(struct(*(struct`),*(void)))))
,	O
char	O
*	O
header	*(*(struct(*(char),*(char))))
,	O
size_t	long
size_of_header	long
,	O
int	O
(	O
*	O
xxx_to_str	*((*(void),*(*(char)))->(int))
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
,	O
char	O
*	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
static	O
int	O
__osip_message_startline_to_strreq	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
const	O
char	O
*	O
sip_version	*(char)
;	O
char	O
*	O
tmp	*(char)
;	O
char	O
*	O
rquri	*(char)
;	O
int	O
i	int
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
||	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
==	O
NULL	O
)	O
||	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_method	*(char)
==	O
NULL	O
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_uri_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),*(*(char)))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
,	O
&	O
rquri	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_version	*(char)
==	O
NULL	O
)	O
sip_version	*(char)
=	O
osip_protocol_version	*(char)
;	O
else	O
sip_version	*(char)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_version	*(char)
;	O
*	O
dest	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
strlen	(*(char))->(long)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_method	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
rquri	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
sip_version	*(char)
)	O
+	O
3	int
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
rquri	*(char)
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
tmp	*(char)
=	O
*	O
dest	*(char)
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_method	*(char)
)	O
;	O
*	O
tmp	*(char)
=	O
' '	O
;	O
tmp	*(char)
++	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
rquri	*(char)
)	O
;	O
*	O
tmp	*(char)
=	O
' '	O
;	O
tmp	*(char)
++	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
sip_version	*(char)
)	O
;	O
osip_free	O
(	O
rquri	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
static	O
int	O
__osip_message_startline_to_strresp	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
char	O
*	O
tmp	*(char)
;	O
const	O
char	O
*	O
sip_version	*(char)
;	O
char	O
status_code	int
[	O
5	int
]	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
||	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
reason_phrase	*(char)
==	O
NULL	O
)	O
||	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
status_code	int
<	O
100	int
)	O
||	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
status_code	int
>	O
699	int
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_version	*(char)
==	O
NULL	O
)	O
sip_version	*(char)
=	O
osip_protocol_version	*(char)
;	O
else	O
sip_version	*(char)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_version	*(char)
;	O
sprintf	(*(char),*(char))->(int)
(	O
status_code	int
,	O
"%u"	*(char)
,	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
status_code	int
)	O
;	O
*	O
dest	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
strlen	(*(char))->(long)
(	O
sip_version	*(char)
)	O
+	O
3	int
+	O
strlen	(*(char))->(long)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
reason_phrase	*(char)
)	O
+	O
4	int
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
tmp	*(char)
=	O
*	O
dest	*(char)
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
sip_version	*(char)
)	O
;	O
*	O
tmp	*(char)
=	O
' '	O
;	O
tmp	*(char)
++	O
;	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
status_code	int
,	O
3	int
)	O
;	O
*	O
tmp	*(char)
=	O
' '	O
;	O
tmp	*(char)
++	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
reason_phrase	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
static	O
int	O
__osip_message_startline_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_method	*(char)
!=	O
NULL	O
)	O
return	O
__osip_message_startline_to_strreq	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
dest	*(char)
)	O
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
status_code	int
!=	O
0	int
)	O
return	O
__osip_message_startline_to_strresp	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
dest	*(char)
)	O
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
TRACE_LEVEL1	int
,	O
NULL	O
,	O
"ERROR method has no value or status code is 0!\n"	*(char)
)	O
)	O
;	O
return	O
OSIP_BADPARAMETER	O
;	O
}	O
char	O
*	O
osip_message_get_reason_phrase	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(*(char))
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
reason_phrase	*(char)
;	O
}	O
int	O
osip_message_get_status_code	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
status_code	int
;	O
}	O
char	O
*	O
osip_message_get_method	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(*(char))
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_method	*(char)
;	O
}	O
char	O
*	O
osip_message_get_version	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(*(char))
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
sip_version	*(char)
;	O
}	O
osip_uri_t	struct
*	O
osip_message_get_uri	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
;	O
}	O
static	O
int	O
strcat_simple_header	(*(*(char)),*(long),*(*(char)),*(void),*(char),long,*((*(void),*(*(char)))->(int)),*(*(char)))->(int)
(	O
char	O
*	O
*	O
_string	*(*(char))
,	O
size_t	long
*	O
malloc_size	*(long)
,	O
char	O
*	O
*	O
_message	*(*(char))
,	O
void	O
*	O
ptr_header	*(void)
,	O
char	O
*	O
header_name	*(char)
,	O
size_t	long
size_of_header	long
,	O
int	O
(	O
*	O
xxx_to_str	*((*(void),*(*(char)))->(int))
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
,	O
char	O
*	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
char	O
*	O
string	*(char)
;	O
char	O
*	O
message	*(char)
;	O
char	O
*	O
tmp	*(char)
;	O
int	O
i	int
;	O
string	*(char)
=	O
*	O
_string	*(*(char))
;	O
message	*(char)
=	O
*	O
_message	*(*(char))
;	O
if	O
(	O
ptr_header	*(void)
!=	O
NULL	O
)	O
{	O
if	O
(	O
*	O
malloc_size	*(long)
<	O
message	*(char)
-	O
string	*(char)
+	O
100	int
+	O
size_of_header	long
)	O
{	O
size_t	long
size	long
=	O
message	*(char)
-	O
string	*(char)
;	O
*	O
malloc_size	*(long)
=	O
message	*(char)
-	O
string	*(char)
+	O
size_of_header	long
+	O
100	int
;	O
string	*(char)
=	O
osip_realloc	O
(	O
string	*(char)
,	O
*	O
malloc_size	*(long)
)	O
;	O
if	O
(	O
string	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
_string	*(*(char))
)	O
;	O
*	O
_string	*(*(char))
=	O
NULL	O
;	O
*	O
_message	*(*(char))
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
message	*(char)
=	O
string	*(char)
+	O
size	long
;	O
}	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
header_name	*(char)
,	O
size_of_header	long
)	O
;	O
i	int
=	O
xxx_to_str	*((*(void),*(*(char)))->(int))
(	O
ptr_header	*(void)
,	O
&	O
tmp	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
*	O
_message	*(*(char))
=	O
message	*(char)
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
if	O
(	O
*	O
malloc_size	*(long)
<	O
message	*(char)
-	O
string	*(char)
+	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
+	O
100	int
)	O
{	O
size_t	long
size	long
=	O
message	*(char)
-	O
string	*(char)
;	O
*	O
malloc_size	*(long)
=	O
message	*(char)
-	O
string	*(char)
+	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
+	O
100	int
;	O
string	*(char)
=	O
osip_realloc	O
(	O
string	*(char)
,	O
*	O
malloc_size	*(long)
)	O
;	O
if	O
(	O
string	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
_string	*(*(char))
)	O
;	O
*	O
_string	*(*(char))
=	O
NULL	O
;	O
*	O
_message	*(*(char))
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
message	*(char)
=	O
string	*(char)
+	O
size	long
;	O
}	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
tmp	*(char)
)	O
;	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
}	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
*	O
_message	*(*(char))
=	O
message	*(char)
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
message	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
static	O
int	O
strcat_headers_one_per_line	(*(*(char)),*(long),*(*(char)),*(struct(int,*(struct(*`,*`)))),*(char),long,*((*(void),*(*(char)))->(int)),*(*(char)))->(int)
(	O
char	O
*	O
*	O
_string	*(*(char))
,	O
size_t	long
*	O
malloc_size	*(long)
,	O
char	O
*	O
*	O
_message	*(*(char))
,	O
osip_list_t	struct
*	O
headers	*(struct(int,*(struct(*(struct`),*(void)))))
,	O
char	O
*	O
header	*(*(struct(*(char),*(char))))
,	O
size_t	long
size_of_header	long
,	O
int	O
(	O
*	O
xxx_to_str	*((*(void),*(*(char)))->(int))
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
,	O
char	O
*	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
{	O
char	O
*	O
string	*(char)
;	O
char	O
*	O
message	*(char)
;	O
char	O
*	O
tmp	*(char)
;	O
int	O
i	int
;	O
osip_list_iterator_t	struct
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
;	O
void	O
*	O
elt	*(void)
=	O
osip_list_get_first	(*(struct(int,*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
headers	*(struct(int,*(struct(*(struct`),*(void)))))
,	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
string	*(char)
=	O
*	O
_string	*(*(char))
;	O
message	*(char)
=	O
*	O
_message	*(*(char))
;	O
while	O
(	O
elt	*(void)
!=	O
OSIP_SUCCESS	int
)	O
{	O
if	O
(	O
*	O
malloc_size	*(long)
<	O
message	*(char)
-	O
string	*(char)
+	O
100	int
+	O
size_of_header	long
)	O
{	O
size_t	long
size	long
=	O
message	*(char)
-	O
string	*(char)
;	O
*	O
malloc_size	*(long)
=	O
message	*(char)
-	O
string	*(char)
+	O
size_of_header	long
+	O
100	int
;	O
string	*(char)
=	O
osip_realloc	O
(	O
string	*(char)
,	O
*	O
malloc_size	*(long)
)	O
;	O
if	O
(	O
string	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
_string	*(*(char))
)	O
;	O
*	O
_string	*(*(char))
=	O
NULL	O
;	O
*	O
_message	*(*(char))
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
message	*(char)
=	O
string	*(char)
+	O
size	long
;	O
}	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
header	*(*(struct(*(char),*(char))))
,	O
size_of_header	long
)	O
;	O
i	int
=	O
xxx_to_str	*((*(void),*(*(char)))->(int))
(	O
elt	*(void)
,	O
&	O
tmp	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
*	O
_message	*(*(char))
=	O
message	*(char)
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
message	*(char)
=	O
message	*(char)
+	O
strlen	(*(char))->(long)
(	O
message	*(char)
)	O
;	O
if	O
(	O
*	O
malloc_size	*(long)
<	O
message	*(char)
-	O
string	*(char)
+	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
+	O
100	int
)	O
{	O
size_t	long
size	long
=	O
message	*(char)
-	O
string	*(char)
;	O
*	O
malloc_size	*(long)
=	O
message	*(char)
-	O
string	*(char)
+	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
+	O
100	int
;	O
string	*(char)
=	O
osip_realloc	O
(	O
string	*(char)
,	O
*	O
malloc_size	*(long)
)	O
;	O
if	O
(	O
string	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
_string	*(*(char))
)	O
;	O
*	O
_string	*(*(char))
=	O
NULL	O
;	O
*	O
_message	*(*(char))
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
message	*(char)
=	O
string	*(char)
+	O
size	long
;	O
}	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
tmp	*(char)
)	O
;	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
elt	*(void)
=	O
osip_list_get_next	(*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
}	O
*	O
_string	*(*(char))
=	O
string	*(char)
;	O
*	O
_message	*(*(char))
=	O
message	*(char)
;	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
message	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get__property	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
;	O
}	O
int	O
osip_message_force_update	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
2	int
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
static	O
int	O
_osip_message_realloc	(*(*(char)),*(*(char)),long,*(long))->(int)
(	O
char	O
*	O
*	O
message	*(char)
,	O
char	O
*	O
*	O
dest	*(char)
,	O
size_t	long
needed	long
,	O
size_t	long
*	O
malloc_size	*(long)
)	O
{	O
size_t	long
size	long
=	O
*	O
message	*(char)
-	O
*	O
dest	*(char)
;	O
if	O
(	O
*	O
malloc_size	*(long)
<	O
(	O
size_t	long
)	O
(	O
size	long
+	O
needed	long
+	O
100	int
)	O
)	O
{	O
*	O
malloc_size	*(long)
=	O
size	long
+	O
needed	long
+	O
100	int
;	O
*	O
dest	*(char)
=	O
osip_realloc	O
(	O
*	O
dest	*(char)
,	O
*	O
malloc_size	*(long)
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
*	O
message	*(char)
=	O
*	O
dest	*(char)
+	O
size	long
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
static	O
int	O
_osip_message_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)),*(long),int)->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
char	O
*	O
*	O
dest	*(char)
,	O
size_t	long
*	O
message_length	long
,	O
int	O
sipfrag	int
)	O
{	O
size_t	long
malloc_size	*(long)
;	O
size_t	long
total_length	long
=	O
0	int
;	O
char	O
*	O
start_of_bodies	*(char)
;	O
char	O
*	O
content_length_to_modify	*(char)
=	O
NULL	O
;	O
char	O
*	O
message	*(char)
;	O
char	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
char	O
*	O
tmp	*(char)
;	O
int	O
pos	int
;	O
int	O
i	int
;	O
char	O
*	O
boundary	*(char)
=	O
NULL	O
;	O
malloc_size	*(long)
=	O
SIP_MESSAGE_MAX_LENGTH	int
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
{	O
if	O
(	O
1	int
==	O
osip_message_get__property	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
)	O
{	O
*	O
dest	*(char)
=	O
osip_malloc	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
+	O
1	int
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
*	O
dest	*(char)
,	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
,	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
)	O
;	O
(	O
*	O
dest	*(char)
)	O
[	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
]	O
=	O
'\0'	O
;	O
if	O
(	O
message_length	long
!=	O
NULL	O
)	O
*	O
message_length	long
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
{	O
osip_free	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
)	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
=	O
NULL	O
;	O
}	O
}	O
message	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
SIP_MESSAGE_MAX_LENGTH	int
)	O
;	O
if	O
(	O
message	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
*	O
dest	*(char)
=	O
message	*(char)
;	O
i	int
=	O
__osip_message_startline_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
&	O
tmp	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
sipfrag	int
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
}	O
else	O
{	O
size_t	long
message_len	long
=	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
;	O
if	O
(	O
_osip_message_realloc	(*(*(char)),*(*(char)),long,*(long))->(int)
(	O
&	O
message	*(char)
,	O
dest	*(char)
,	O
message_len	long
+	O
3	int
,	O
&	O
malloc_size	*(long)
)	O
<	O
0	int
)	O
{	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
tmp	*(char)
)	O
;	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
}	O
{	O
struct	O
to_str_table	struct(array(char),int,*(struct(int,*(struct(*(struct`),*(void))))),*(void),*((*(void),*(*(char)))->(int)))
{	O
char	O
header_name	*(char)
[	O
30	int
]	O
;	O
int	O
header_length	int
;	O
osip_list_t	struct
*	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
;	O
void	O
*	O
header_data	*(void)
;	O
int	O
(	O
*	O
to_str	*((*(void),*(*(char)))->(int))
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
;	O
}	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
25	int
]	O
=	O
{	O
{	O
"Via: "	*(char)
,	O
5	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_via_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Record-Route: "	*(char)
,	O
14	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_record_route_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Route: "	*(char)
,	O
7	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_route_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"From: "	*(char)
,	O
6	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_from_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"To: "	*(char)
,	O
4	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_to_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Call-ID: "	*(char)
,	O
9	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_call_id_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"CSeq: "	*(char)
,	O
6	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_cseq_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"Contact: "	*(char)
,	O
9	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_contact_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Authorization: "	*(char)
,	O
15	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_authorization_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"WWW-Authenticate: "	*(char)
,	O
18	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_www_authenticate_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"Proxy-Authenticate: "	*(char)
,	O
20	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_www_authenticate_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"Proxy-Authorization: "	*(char)
,	O
21	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_authorization_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"Call-Info: "	*(char)
,	O
11	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_call_info_to_str	(*(struct(*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Content-Type: "	*(char)
,	O
14	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_content_type_to_str	(*(struct(*(char),*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Mime-Version: "	*(char)
,	O
14	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_content_length_to_str	(*(struct(*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"Allow: "	*(char)
,	O
7	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_allow_to_str	O
}	O
,	O
{	O
"Content-Encoding: "	*(char)
,	O
18	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_content_encoding_to_str	O
}	O
,	O
{	O
"Alert-Info: "	*(char)
,	O
12	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_call_info_to_str	(*(struct(*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Error-Info: "	*(char)
,	O
12	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_call_info_to_str	(*(struct(*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Accept: "	*(char)
,	O
8	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_accept_to_str	(*(struct(*(char),*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Accept-Encoding: "	*(char)
,	O
17	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_accept_encoding_to_str	(*(struct(*(char),struct(int,*(struct`)))),*(*(char)))->(int)
}	O
,	O
{	O
"Accept-Language: "	*(char)
,	O
17	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_accept_language_to_str	O
}	O
,	O
{	O
"Authentication-Info: "	*(char)
,	O
21	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_authentication_info_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
"Proxy-Authentication-Info: "	*(char)
,	O
27	int
,	O
NULL	O
,	O
NULL	O
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
&	O
osip_authentication_info_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
}	O
,	O
{	O
{	O
'\0'	O
}	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
0	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
vias	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
1	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
2	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
3	int
]	O
.	O
header_data	*(void)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
4	int
]	O
.	O
header_data	*(void)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
5	int
]	O
.	O
header_data	*(void)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
call_id	*(struct(*(char),*(char)))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
6	int
]	O
.	O
header_data	*(void)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
7	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
8	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
authorizations	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
9	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
www_authenticates	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
10	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
proxy_authenticates	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
11	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
proxy_authorizations	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
12	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
call_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
13	int
]	O
.	O
header_data	*(void)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
content_type	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
14	int
]	O
.	O
header_data	*(void)
=	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
mime_version	*(struct(*(char)))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
15	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
allows	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
16	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
content_encodings	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
17	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
alert_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
18	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
error_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
19	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
accepts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
20	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
accept_encodings	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
21	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
accept_languages	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
22	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
authentication_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
23	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
=	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
proxy_authentication_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
;	O
pos	int
=	O
0	int
;	O
while	O
(	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_name	*(char)
[	O
0	int
]	O
!=	O
'\0'	O
)	O
{	O
if	O
(	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
13	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
==	O
NULL	O
)	O
i	int
=	O
strcat_simple_header	(*(*(char)),*(long),*(*(char)),*(void),*(char),long,*((*(void),*(*(char)))->(int)),*(*(char)))->(int)
(	O
dest	*(char)
,	O
&	O
malloc_size	*(long)
,	O
&	O
message	*(char)
,	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_data	*(void)
,	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_name	*(char)
,	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_length	int
,	O
(	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
to_str	*((*(void),*(*(char)))->(int))
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
i	int
=	O
strcat_headers_one_per_line	(*(*(char)),*(long),*(*(char)),*(struct(int,*(struct(*`,*`)))),*(char),long,*((*(void),*(*(char)))->(int)),*(*(char)))->(int)
(	O
dest	*(char)
,	O
&	O
malloc_size	*(long)
,	O
&	O
message	*(char)
,	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_list	*(struct(int,*(struct(*(struct`),*(void)))))
,	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_name	*(char)
,	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
header_length	int
,	O
(	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
char	O
*	O
*	O
)	O
)	O
table	array(struct(array(char),int,*(struct(int,*(struct(*`,*`)))),*(void),*((*(void),*(*(char)))->(int))))
[	O
pos	int
]	O
.	O
to_str	*((*(void),*(*(char)))->(int))
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
message	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
pos	int
++	O
;	O
}	O
}	O
{	O
osip_list_iterator_t	struct
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
;	O
osip_header_t	struct
*	O
header	*(*(struct(*(char),*(char))))
=	O
(	O
osip_header_t	struct
*	O
)	O
osip_list_get_first	(*(struct(int,*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
headers	*(struct(int,*(struct(*(struct`),*(void)))))
,	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
while	O
(	O
header	*(*(struct(*(char),*(char))))
!=	O
OSIP_SUCCESS	int
)	O
{	O
size_t	long
header_len	long
=	O
0	int
;	O
i	int
=	O
osip_header_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
(	O
header	*(*(struct(*(char),*(char))))
,	O
&	O
tmp	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
header_len	long
=	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
;	O
if	O
(	O
_osip_message_realloc	(*(*(char)),*(*(char)),long,*(long))->(int)
(	O
&	O
message	*(char)
,	O
dest	*(char)
,	O
header_len	long
+	O
3	int
,	O
&	O
malloc_size	*(long)
)	O
<	O
0	int
)	O
{	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
tmp	*(char)
)	O
;	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
header	*(*(struct(*(char),*(char))))
=	O
(	O
osip_header_t	struct
*	O
)	O
osip_list_get_next	(*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
}	O
}	O
if	O
(	O
_osip_message_realloc	(*(*(char)),*(*(char)),long,*(long))->(int)
(	O
&	O
message	*(char)
,	O
dest	*(char)
,	O
16	int
,	O
&	O
malloc_size	*(long)
)	O
<	O
0	int
)	O
return	O
OSIP_NOMEM	O
;	O
if	O
(	O
sipfrag	int
&&	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
bodies	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
)	O
{	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
message	*(char)
=	O
message	*(char)
+	O
2	int
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
1	int
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
*	O
dest	*(char)
)	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
=	O
message	*(char)
-	O
*	O
dest	*(char)
;	O
if	O
(	O
message_length	long
!=	O
NULL	O
)	O
*	O
message_length	long
=	O
message	*(char)
-	O
*	O
dest	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
"Content-Length: "	*(char)
,	O
16	int
)	O
;	O
message	*(char)
=	O
message	*(char)
+	O
16	int
;	O
if	O
(	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
bodies	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
)	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
"0"	*(char)
,	O
1	int
)	O
;	O
else	O
{	O
content_length_to_modify	*(char)
=	O
message	*(char)
;	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
"     "	*(char)
)	O
;	O
}	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
start_of_bodies	*(char)
=	O
message	*(char)
;	O
total_length	long
=	O
start_of_bodies	*(char)
-	O
*	O
dest	*(char)
;	O
if	O
(	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
bodies	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
)	O
{	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
1	int
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
*	O
dest	*(char)
)	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
=	O
total_length	long
;	O
if	O
(	O
message_length	long
!=	O
NULL	O
)	O
*	O
message_length	long
=	O
total_length	long
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
mime_version	*(struct(*(char)))
!=	O
NULL	O
&&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
content_type	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
&&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
content_type	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
type	*(char)
&&	O
!	O
osip_strcasecmp	(*(char),*(char))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
content_type	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
type	*(char)
,	O
"multipart"	*(char)
)	O
)	O
{	O
osip_generic_param_t	struct(*(char),*(char))
*	O
ct_param	*(struct(*(char),*(char)))
=	O
NULL	O
;	O
i	int
=	O
osip_generic_param_get_byname	O
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
content_type	*(struct(*(char),*(char),struct(int,*(struct(*`,*`)))))
->	O
gen_params	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
"boundary"	*(char)
,	O
&	O
ct_param	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
(	O
i	int
>=	O
0	int
)	O
&&	O
ct_param	*(struct(*(char),*(char)))
&&	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
{	O
size_t	long
len	long
=	O
strlen	(*(char))->(long)
(	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
;	O
if	O
(	O
len	long
>	O
MIME_MAX_BOUNDARY_LEN	int
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_SYNTAXERROR	O
;	O
}	O
if	O
(	O
len	long
==	O
1	int
&&	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
[	O
0	int
]	O
==	O
'"'	O
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_SYNTAXERROR	O
;	O
}	O
if	O
(	O
len	long
==	O
2	int
&&	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
[	O
0	int
]	O
==	O
'"'	O
&&	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
[	O
1	int
]	O
==	O
'"'	O
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_SYNTAXERROR	O
;	O
}	O
boundary	*(char)
=	O
osip_malloc	O
(	O
len	long
+	O
5	int
)	O
;	O
if	O
(	O
boundary	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
boundary	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
boundary	*(char)
+	O
2	int
,	O
"--"	*(char)
,	O
2	int
)	O
;	O
if	O
(	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
[	O
0	int
]	O
==	O
'"'	O
&&	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
[	O
len	long
-	O
1	int
]	O
==	O
'"'	O
)	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
boundary	*(char)
+	O
4	int
,	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
+	O
1	int
,	O
len	long
-	O
2	int
)	O
;	O
else	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
boundary	*(char)
+	O
4	int
,	O
ct_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
,	O
len	long
)	O
;	O
}	O
}	O
{	O
osip_list_iterator_t	struct
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
;	O
osip_body_t	struct
*	O
body	*(char)
=	O
(	O
osip_body_t	struct
*	O
)	O
osip_list_get_first	(*(struct(int,*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
bodies	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
while	O
(	O
body	*(char)
!=	O
OSIP_SUCCESS	int
)	O
{	O
size_t	long
body_length	long
;	O
if	O
(	O
boundary	*(char)
)	O
{	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
boundary	*(char)
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
}	O
i	int
=	O
osip_body_to_str	(*(struct(*(char),long,*(struct(int,*`)),*(struct(*`,*`,struct`)))),*(*(char)),*(long))->(int)
(	O
body	*(char)
,	O
&	O
tmp	*(char)
,	O
&	O
body_length	long
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
boundary	*(char)
)	O
osip_free	O
(	O
boundary	*(char)
)	O
;	O
return	O
i	int
;	O
}	O
if	O
(	O
malloc_size	*(long)
<	O
message	*(char)
-	O
*	O
dest	*(char)
+	O
100	int
+	O
body_length	long
)	O
{	O
size_t	long
size	long
=	O
message	*(char)
-	O
*	O
dest	*(char)
;	O
int	O
offset_of_body	int
;	O
int	O
offset_content_length_to_modify	int
=	O
0	int
;	O
offset_of_body	int
=	O
(	O
int	O
)	O
(	O
start_of_bodies	*(char)
-	O
*	O
dest	*(char)
)	O
;	O
if	O
(	O
content_length_to_modify	*(char)
!=	O
NULL	O
)	O
offset_content_length_to_modify	int
=	O
(	O
int	O
)	O
(	O
content_length_to_modify	*(char)
-	O
*	O
dest	*(char)
)	O
;	O
malloc_size	*(long)
=	O
message	*(char)
-	O
*	O
dest	*(char)
+	O
body_length	long
+	O
100	int
;	O
*	O
dest	*(char)
=	O
osip_realloc	O
(	O
*	O
dest	*(char)
,	O
malloc_size	*(long)
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
if	O
(	O
boundary	*(char)
)	O
osip_free	O
(	O
boundary	*(char)
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
start_of_bodies	*(char)
=	O
*	O
dest	*(char)
+	O
offset_of_body	int
;	O
if	O
(	O
content_length_to_modify	*(char)
!=	O
NULL	O
)	O
content_length_to_modify	*(char)
=	O
*	O
dest	*(char)
+	O
offset_content_length_to_modify	int
;	O
message	*(char)
=	O
*	O
dest	*(char)
+	O
size	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
message	*(char)
,	O
tmp	*(char)
,	O
body_length	long
)	O
;	O
message	*(char)
[	O
body_length	long
]	O
=	O
'\0'	O
;	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
message	*(char)
=	O
message	*(char)
+	O
body_length	long
;	O
body	*(char)
=	O
(	O
osip_body_t	struct
*	O
)	O
osip_list_get_next	(*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
}	O
}	O
if	O
(	O
boundary	*(char)
)	O
{	O
message	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
message	*(char)
,	O
boundary	*(char)
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
"--"	*(char)
,	O
2	int
)	O
;	O
message	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
message	*(char)
,	O
OSIP_CRLF	*(char)
,	O
2	int
)	O
;	O
osip_free	O
(	O
boundary	*(char)
)	O
;	O
boundary	*(char)
=	O
NULL	O
;	O
}	O
if	O
(	O
content_length_to_modify	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
dest	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
return	O
OSIP_SYNTAXERROR	O
;	O
}	O
{	O
size_t	long
size	long
=	O
message	*(char)
-	O
start_of_bodies	*(char)
;	O
char	O
tmp2	array(char)
[	O
15	int
]	O
;	O
total_length	long
+=	O
size	long
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
tmp2	array(char)
,	O
15	int
,	O
"%i"	*(char)
,	O
(	O
int	O
)	O
size	long
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
content_length_to_modify	*(char)
+	O
5	int
-	O
strlen	(*(char))->(long)
(	O
tmp2	array(char)
)	O
,	O
tmp2	array(char)
,	O
strlen	(*(char))->(long)
(	O
tmp2	array(char)
)	O
)	O
;	O
}	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
1	int
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
=	O
osip_malloc	O
(	O
total_length	long
+	O
1	int
)	O
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
!=	O
NULL	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
,	O
*	O
dest	*(char)
,	O
total_length	long
)	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message	*(char)
[	O
total_length	long
]	O
=	O
'\0'	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_length	long
=	O
total_length	long
;	O
if	O
(	O
message_length	long
!=	O
NULL	O
)	O
*	O
message_length	long
=	O
total_length	long
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)),*(long))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
char	O
*	O
*	O
dest	*(char)
,	O
size_t	long
*	O
message_length	long
)	O
{	O
return	O
_osip_message_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)),*(long),int)->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
dest	*(char)
,	O
message_length	long
,	O
0	int
)	O
;	O
}	O
int	O
osip_message_to_str_sipfrag	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)),*(long))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
char	O
*	O
*	O
dest	*(char)
,	O
size_t	long
*	O
message_length	long
)	O
{	O
return	O
_osip_message_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(*(char)),*(long),int)->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
dest	*(char)
,	O
message_length	long
,	O
1	int
)	O
;	O
}	O
