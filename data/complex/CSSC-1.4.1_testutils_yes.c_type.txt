unsigned	O
long	O
total_len	(int,array(*(char)))->(long)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
unsigned	O
long	O
l	long
=	O
0u	int
;	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
++	O
i	int
)	O
l	long
+=	O
strlen	(*(char))->(long)
(	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
return	O
l	long
;	O
}	O
void	O
concat	(*(char),int,array(*(char)))->(void)
(	O
char	O
*	O
buf	*(char)
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
i	int
;	O
buf	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
++	O
i	int
)	O
strcat	(*(char),*(char))->(*(char))
(	O
buf	*(char)
,	O
argv	array(*(char))
[	O
i	int
]	O
)	O
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
char	O
*	O
msg	*(char)
;	O
unsigned	O
long	O
l	long
;	O
signal	(int,*((int)->(void)))->(*((int)->(void)))
(	O
SIGPIPE	int
,	O
SIG_DFL	O
)	O
;	O
argv	array(*(char))
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
>	O
0	int
)	O
{	O
l	long
=	O
total_len	(int,array(*(char)))->(long)
(	O
argc	int
,	O
argv	array(*(char))
)	O
;	O
msg	*(char)
=	O
malloc	(long)->(*(void))
(	O
l	long
+	O
1u	int
)	O
;	O
if	O
(	O
NULL	O
==	O
msg	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Ran out of memory.\n"	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
concat	(*(char),int,array(*(char)))->(void)
(	O
msg	*(char)
,	O
argc	int
,	O
argv	array(*(char))
)	O
;	O
for	O
(	O
;	O
;	O
)	O
puts	(*(char))->(int)
(	O
msg	*(char)
)	O
;	O
}	O
else	O
{	O
for	O
(	O
;	O
;	O
)	O
puts	(*(char))->(int)
(	O
"yes"	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
