int	O
mu_url_uplevel	(*(struct),*(*(struct)))->(int)
(	O
mu_url_t	*(struct)
url	*(struct)
,	O
mu_url_t	*(struct)
*	O
upurl	*(*(struct))
)	O
{	O
int	O
rc	int
;	O
char	O
*	O
p	*(char)
;	O
mu_url_t	*(struct)
new_url	*(*(struct))
;	O
if	O
(	O
url	*(struct)
->	O
_uplevel	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))))->(int))
)	O
return	O
url	*(struct)
->	O
_uplevel	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(*(struct(int,*`,*`,*`,*`,*`,*`,short,*`,*`,*`,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))))->(int))
(	O
url	*(struct)
,	O
upurl	*(*(struct))
)	O
;	O
if	O
(	O
!	O
url	*(struct)
->	O
path	*(char)
)	O
return	O
MU_ERR_NOENT	O
;	O
p	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
url	*(struct)
->	O
path	*(char)
,	O
'/'	O
)	O
;	O
rc	int
=	O
mu_url_dup	(*(struct),*(*(struct)))->(int)
(	O
url	*(struct)
,	O
&	O
new_url	*(*(struct))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
!	O
p	*(char)
||	O
p	*(char)
==	O
url	*(struct)
->	O
path	*(char)
)	O
{	O
free	(*(void))->(void)
(	O
new_url	*(*(struct))
->	O
path	*(char)
)	O
;	O
new_url	*(*(struct))
->	O
path	*(char)
=	O
NULL	O
;	O
}	O
else	O
{	O
size_t	long
size	long
=	O
p	*(char)
-	O
url	*(struct)
->	O
path	*(char)
;	O
new_url	*(*(struct))
->	O
path	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
new_url	*(*(struct))
->	O
path	*(char)
,	O
size	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
new_url	*(*(struct))
->	O
path	*(char)
)	O
{	O
mu_url_destroy	(*(*(struct)))->(void)
(	O
&	O
new_url	*(*(struct))
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
new_url	*(*(struct))
->	O
path	*(char)
,	O
url	*(struct)
->	O
path	*(char)
,	O
size	long
)	O
;	O
new_url	*(*(struct))
->	O
path	*(char)
[	O
size	long
]	O
=	O
0	int
;	O
}	O
*	O
upurl	*(*(struct))
=	O
new_url	*(*(struct))
;	O
}	O
return	O
rc	int
;	O
}	O
