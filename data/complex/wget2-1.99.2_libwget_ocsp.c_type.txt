struct	O
wget_ocsp_db_st	struct(*(char),*(struct),*(struct),*(struct))
{	O
const	O
char	O
*	O
fname	*(char)
;	O
wget_hashmap	struct
*	O
fingerprints	*(struct)
;	O
wget_hashmap	struct
*	O
hosts	*(struct)
;	O
wget_thread_mutex	*(struct)
mutex	*(*(struct))
;	O
}	O
;	O
typedef	O
struct	O
{	O
const	O
char	O
*	O
key	int
;	O
int64_t	long
maxage	long
;	O
int64_t	long
mtime	long
;	O
bool	bool
valid	*(int)
:	O
1	int
;	O
}	O
ocsp_entry	struct(*(char),long,long,bool)
;	O
static	O
const	O
wget_ocsp_db_vtable	struct(*((*(struct),*(char))->(*(struct))),*((*(struct))->(void)),*((*(*(struct`)))->(void)),*((*(struct),*(char),*(int))->(bool)),*((*(struct),*(char))->(bool)),*((*(struct),*(char),long,bool)->(void)),*((*(struct),*(char),long)->(void)),*((*(struct))->(int)),*((*(struct))->(int)))
*	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
;	O
void	O
wget_ocsp_set_plugin	(*(struct(*((*`,*`)->(*`)),*((*`)->(void)),*((*`)->(void)),*((*`,*`,*`)->(bool)),*((*`,*`)->(bool)),*((*`,*`,long,bool)->(void)),*((*`,*`,long)->(void)),*((*`)->(int)),*((*`)->(int)))))->(void)
(	O
const	O
wget_ocsp_db_vtable	struct(*((*(struct),*(char))->(*(struct))),*((*(struct))->(void)),*((*(*(struct`)))->(void)),*((*(struct),*(char),*(int))->(bool)),*((*(struct),*(char))->(bool)),*((*(struct),*(char),long,bool)->(void)),*((*(struct),*(char),long)->(void)),*((*(struct))->(int)),*((*(struct))->(int)))
*	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
{	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
=	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
;	O
}	O
__attribute__	O
(	O
(	O
no_sanitize	O
(	O
"integer"	*(char)
)	O
)	O
)	O
WGET_GCC_PURE	O
static	O
unsigned	O
int	O
hash_ocsp	(*(struct(*(char),long,long,bool)))->(int)
(	O
const	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
unsigned	O
int	O
hash	*((*(void))->(int))
=	O
0	int
;	O
const	O
unsigned	O
char	O
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
;	O
*	O
p	*(char)
;	O
p	*(char)
++	O
)	O
hash	*((*(void))->(int))
=	O
hash	*((*(void))->(int))
*	O
101	int
+	O
*	O
p	*(char)
;	O
return	O
hash	*((*(void))->(int))
;	O
}	O
WGET_GCC_NONNULL_ALL	O
WGET_GCC_PURE	O
static	O
int	O
compare_ocsp	(*(struct(*(char),long,long,bool)),*(struct(*(char),long,long,bool)))->(int)
(	O
const	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
h1	*(struct(*(char),long,long,bool))
,	O
const	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
h2	*(struct(*(char),long,long,bool))
)	O
{	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
h1	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
h2	*(struct(*(char),long,long,bool))
->	O
key	int
)	O
;	O
}	O
static	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
init_ocsp	(*(struct(*(char),long,long,bool)))->(*(struct(*(char),long,long,bool)))
(	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
if	O
(	O
!	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
if	O
(	O
!	O
(	O
ocsp	*(struct(*(char),long,long,bool))
=	O
wget_calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
ocsp_entry	struct(*(char),long,long,bool)
)	O
)	O
)	O
)	O
return	O
NULL	O
;	O
}	O
else	O
memset	(*(void),int,long)->(*(void))
(	O
ocsp	*(struct(*(char),long,long,bool))
,	O
0	int
,	O
sizeof	O
(	O
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
)	O
;	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
=	O
time	struct(long,long)
(	O
NULL	O
)	O
;	O
return	O
ocsp	*(struct(*(char),long,long,bool))
;	O
}	O
static	O
void	O
deinit_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
if	O
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
xfree	O
(	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
)	O
;	O
}	O
}	O
static	O
void	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
if	O
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
deinit_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
xfree	O
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
}	O
static	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
new_ocsp	(*(char),long,bool)->(*(struct(*(char),long,long,bool)))
(	O
const	O
char	O
*	O
fingerprint	*(char)
,	O
time_t	long
maxage	long
,	O
bool	bool
valid	*(int)
)	O
{	O
if	O
(	O
fingerprint	*(char)
)	O
{	O
if	O
(	O
!	O
(	O
fingerprint	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
fingerprint	*(char)
)	O
)	O
)	O
return	O
NULL	O
;	O
}	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
=	O
init_ocsp	(*(struct(*(char),long,long,bool)))->(*(struct(*(char),long,long,bool)))
(	O
NULL	O
)	O
;	O
if	O
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
=	O
fingerprint	*(char)
;	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
=	O
maxage	long
;	O
ocsp	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
=	O
valid	*(int)
;	O
}	O
else	O
xfree	O
(	O
fingerprint	*(char)
)	O
;	O
return	O
ocsp	*(struct(*(char),long,long,bool))
;	O
}	O
bool	bool
wget_ocsp_fingerprint_in_cache	(*(struct),*(char),*(int))->(bool)
(	O
const	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
const	O
char	O
*	O
fingerprint	*(char)
,	O
int	O
*	O
revoked	*(int)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
return	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
fingerprint_in_cache	*((*(struct),*(char),*(int))->(bool))
(	O
ocsp_db	*(struct)
,	O
fingerprint	*(char)
,	O
revoked	*(int)
)	O
;	O
if	O
(	O
!	O
ocsp_db	*(struct)
)	O
return	O
false	int
;	O
ocsp_entry	struct(*(char),long,long,bool)
ocsp	*(struct(*(char),long,long,bool))
,	O
*	O
ocspp	*(struct(*(char),long,long,bool))
;	O
ocsp	*(struct(*(char),long,long,bool))
.	O
key	int
=	O
fingerprint	*(char)
;	O
if	O
(	O
wget_hashmap_get	(*(struct),*(void),*(*(void)))->(int)
(	O
ocsp_db	*(struct)
->	O
fingerprints	*(struct)
,	O
&	O
ocsp	*(struct(*(char),long,long,bool))
,	O
&	O
ocspp	*(struct(*(char),long,long,bool))
)	O
&&	O
ocspp	*(struct(*(char),long,long,bool))
->	O
maxage	long
>=	O
(	O
int64_t	long
)	O
time	struct(long,long)
(	O
NULL	O
)	O
)	O
{	O
if	O
(	O
revoked	*(int)
)	O
*	O
revoked	*(int)
=	O
!	O
ocspp	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
;	O
return	O
true	int
;	O
}	O
return	O
false	int
;	O
}	O
bool	bool
wget_ocsp_hostname_is_valid	(*(struct),*(char))->(bool)
(	O
const	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
const	O
char	O
*	O
hostname	*(char)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
return	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
hostname_is_valid	*((*(struct),*(char))->(bool))
(	O
ocsp_db	*(struct)
,	O
hostname	*(char)
)	O
;	O
if	O
(	O
!	O
ocsp_db	*(struct)
)	O
return	O
false	int
;	O
ocsp_entry	struct(*(char),long,long,bool)
ocsp	*(struct(*(char),long,long,bool))
,	O
*	O
ocspp	*(struct(*(char),long,long,bool))
;	O
ocsp	*(struct(*(char),long,long,bool))
.	O
key	int
=	O
hostname	*(char)
;	O
if	O
(	O
wget_hashmap_get	(*(struct),*(void),*(*(void)))->(int)
(	O
ocsp_db	*(struct)
->	O
hosts	*(struct)
,	O
&	O
ocsp	*(struct(*(char),long,long,bool))
,	O
&	O
ocspp	*(struct(*(char),long,long,bool))
)	O
&&	O
ocspp	*(struct(*(char),long,long,bool))
->	O
maxage	long
>=	O
(	O
int64_t	long
)	O
time	struct(long,long)
(	O
NULL	O
)	O
)	O
{	O
return	O
true	int
;	O
}	O
return	O
false	int
;	O
}	O
void	O
wget_ocsp_db_deinit	(*(struct))->(void)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
{	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
deinit	*((*(struct))->(void))
(	O
ocsp_db	*(struct)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
ocsp_db	*(struct)
)	O
{	O
xfree	O
(	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
wget_thread_mutex_lock	(*(struct))->(void)
(	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
wget_hashmap_free	(*(*(struct)))->(void)
(	O
&	O
ocsp_db	*(struct)
->	O
fingerprints	*(struct)
)	O
;	O
wget_hashmap_free	(*(*(struct)))->(void)
(	O
&	O
ocsp_db	*(struct)
->	O
hosts	*(struct)
)	O
;	O
wget_thread_mutex_unlock	(*(struct))->(void)
(	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
wget_thread_mutex_destroy	(*(*(struct)))->(int)
(	O
&	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
}	O
}	O
void	O
wget_ocsp_db_free	(*(*(struct)))->(void)
(	O
wget_ocsp_db	struct
*	O
*	O
ocsp_db	*(struct)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
{	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
free	(*(void))->(void)
(	O
ocsp_db	*(struct)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
ocsp_db	*(struct)
&&	O
*	O
ocsp_db	*(struct)
)	O
{	O
wget_ocsp_db_deinit	(*(struct))->(void)
(	O
*	O
ocsp_db	*(struct)
)	O
;	O
xfree	O
(	O
*	O
ocsp_db	*(struct)
)	O
;	O
}	O
}	O
static	O
void	O
ocsp_db_add_fingerprint_entry	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(*(char),long,long,bool)))->(void)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
if	O
(	O
!	O
ocsp	*(struct(*(char),long,long,bool))
)	O
return	O
;	O
if	O
(	O
!	O
ocsp_db	*(struct)
)	O
{	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
return	O
;	O
}	O
wget_thread_mutex_lock	(*(struct))->(void)
(	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
if	O
(	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
==	O
0	int
)	O
{	O
if	O
(	O
wget_hashmap_remove	(*(struct),*(void))->(int)
(	O
ocsp_db	*(struct)
->	O
fingerprints	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
)	O
)	O
debug_printf	O
(	O
"removed OCSP cert %s\n"	*(char)
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
)	O
;	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
else	O
{	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
old	*(struct(*(char),long,long,bool))
;	O
if	O
(	O
wget_hashmap_get	(*(struct),*(void),*(*(void)))->(int)
(	O
ocsp_db	*(struct)
->	O
fingerprints	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
,	O
&	O
old	*(struct(*(char),long,long,bool))
)	O
)	O
{	O
if	O
(	O
old	*(struct(*(char),long,long,bool))
->	O
mtime	long
<	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
)	O
{	O
old	*(struct(*(char),long,long,bool))
->	O
mtime	long
=	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
;	O
old	*(struct(*(char),long,long,bool))
->	O
maxage	long
=	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
;	O
old	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
=	O
ocsp	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
;	O
debug_printf	O
(	O
"update OCSP cert %s (maxage=%lld,valid=%d)\n"	*(char)
,	O
old	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
(	O
long	O
long	O
)	O
old	*(struct(*(char),long,long,bool))
->	O
maxage	long
,	O
old	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
)	O
;	O
}	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
else	O
{	O
debug_printf	O
(	O
"add OCSP cert %s (maxage=%lld,valid=%d)\n"	*(char)
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
(	O
long	O
long	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
)	O
;	O
wget_hashmap_put	(*(struct),*(void),*(void))->(int)
(	O
ocsp_db	*(struct)
->	O
fingerprints	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
,	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
}	O
wget_thread_mutex_unlock	(*(struct))->(void)
(	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
}	O
void	O
wget_ocsp_db_add_fingerprint	(*(struct),*(char),long,bool)->(void)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
const	O
char	O
*	O
fingerprint	*(char)
,	O
time_t	long
maxage	long
,	O
bool	bool
valid	*(int)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
{	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
add_fingerprint	*((*(struct),*(char),long,bool)->(void))
(	O
ocsp_db	*(struct)
,	O
fingerprint	*(char)
,	O
maxage	long
,	O
valid	*(int)
)	O
;	O
return	O
;	O
}	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
=	O
new_ocsp	(*(char),long,bool)->(*(struct(*(char),long,long,bool)))
(	O
fingerprint	*(char)
,	O
maxage	long
,	O
valid	*(int)
)	O
;	O
ocsp_db_add_fingerprint_entry	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp_db	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
static	O
void	O
ocsp_db_add_host_entry	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(*(char),long,long,bool)))->(void)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
if	O
(	O
!	O
ocsp	*(struct(*(char),long,long,bool))
)	O
return	O
;	O
if	O
(	O
!	O
ocsp_db	*(struct)
)	O
{	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
return	O
;	O
}	O
wget_thread_mutex_lock	(*(struct))->(void)
(	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
if	O
(	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
==	O
0	int
)	O
{	O
if	O
(	O
wget_hashmap_remove	(*(struct),*(void))->(int)
(	O
ocsp_db	*(struct)
->	O
hosts	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
)	O
)	O
debug_printf	O
(	O
"removed OCSP host %s\n"	*(char)
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
)	O
;	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
else	O
{	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
old	*(struct(*(char),long,long,bool))
;	O
if	O
(	O
wget_hashmap_get	(*(struct),*(void),*(*(void)))->(int)
(	O
ocsp_db	*(struct)
->	O
hosts	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
,	O
&	O
old	*(struct(*(char),long,long,bool))
)	O
)	O
{	O
if	O
(	O
old	*(struct(*(char),long,long,bool))
->	O
mtime	long
<	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
)	O
{	O
old	*(struct(*(char),long,long,bool))
->	O
mtime	long
=	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
;	O
old	*(struct(*(char),long,long,bool))
->	O
maxage	long
=	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
;	O
old	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
=	O
ocsp	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
;	O
debug_printf	O
(	O
"update OCSP host %s (maxage=%lld)\n"	*(char)
,	O
old	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
(	O
long	O
long	O
)	O
old	*(struct(*(char),long,long,bool))
->	O
maxage	long
)	O
;	O
}	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
else	O
{	O
wget_hashmap_put	(*(struct),*(void),*(void))->(int)
(	O
ocsp_db	*(struct)
->	O
hosts	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
,	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
debug_printf	O
(	O
"add OCSP host %s (maxage=%lld)\n"	*(char)
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
(	O
long	O
long	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
)	O
;	O
}	O
}	O
wget_thread_mutex_unlock	(*(struct))->(void)
(	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
}	O
void	O
wget_ocsp_db_add_host	(*(struct),*(char),long)->(void)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
const	O
char	O
*	O
host	*(char)
,	O
time_t	long
maxage	long
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
{	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
add_host	*((*(struct),*(char),long)->(void))
(	O
ocsp_db	*(struct)
,	O
host	*(char)
,	O
maxage	long
)	O
;	O
return	O
;	O
}	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
=	O
new_ocsp	(*(char),long,bool)->(*(struct(*(char),long,long,bool)))
(	O
host	*(char)
,	O
maxage	long
,	O
false	int
)	O
;	O
ocsp_db_add_host_entry	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp_db	*(struct)
,	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
}	O
static	O
int	O
ocsp_db_load	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(int)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
bool	bool
load_hosts	bool
)	O
{	O
ocsp_entry	struct(*(char),long,long,bool)
ocsp	*(struct(*(char),long,long,bool))
;	O
char	O
*	O
buf	*(char)
=	O
NULL	O
,	O
*	O
linep	*(char)
,	O
*	O
p	*(char)
;	O
size_t	long
bufsize	long
=	O
0	int
;	O
ssize_t	long
buflen	long
;	O
int64_t	long
now	long
=	O
time	struct(long,long)
(	O
NULL	O
)	O
;	O
int	O
ok	int
;	O
while	O
(	O
(	O
buflen	long
=	O
wget_getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
buf	*(char)
,	O
&	O
bufsize	long
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
>=	O
0	int
)	O
{	O
linep	*(char)
=	O
buf	*(char)
;	O
while	O
(	O
isspace	(int)->(int)
(	O
*	O
linep	*(char)
)	O
)	O
linep	*(char)
++	O
;	O
if	O
(	O
!	O
*	O
linep	*(char)
)	O
continue	O
;	O
if	O
(	O
*	O
linep	*(char)
==	O
'#'	O
)	O
continue	O
;	O
while	O
(	O
buflen	long
>	O
0	int
&&	O
(	O
buf	*(char)
[	O
buflen	long
]	O
==	O
'\n'	O
||	O
buf	*(char)
[	O
buflen	long
]	O
==	O
'\r'	O
)	O
)	O
buf	*(char)
[	O
--	O
buflen	long
]	O
=	O
0	int
;	O
init_ocsp	(*(struct(*(char),long,long,bool)))->(*(struct(*(char),long,long,bool)))
(	O
&	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
ok	int
=	O
0	int
;	O
if	O
(	O
*	O
linep	*(char)
)	O
{	O
for	O
(	O
p	*(char)
=	O
linep	*(char)
;	O
*	O
linep	*(char)
&&	O
!	O
isspace	(int)->(int)
(	O
*	O
linep	*(char)
)	O
;	O
)	O
linep	*(char)
++	O
;	O
ocsp	*(struct(*(char),long,long,bool))
.	O
key	int
=	O
wget_strmemdup	(*(void),long)->(*(char))
(	O
p	*(char)
,	O
linep	*(char)
-	O
p	*(char)
)	O
;	O
}	O
if	O
(	O
*	O
linep	*(char)
)	O
{	O
for	O
(	O
p	*(char)
=	O
++	O
linep	*(char)
;	O
*	O
linep	*(char)
&&	O
!	O
isspace	(int)->(int)
(	O
*	O
linep	*(char)
)	O
;	O
)	O
linep	*(char)
++	O
;	O
ocsp	*(struct(*(char),long,long,bool))
.	O
maxage	long
=	O
(	O
int64_t	long
)	O
atoll	(*(char))->(long long)
(	O
p	*(char)
)	O
;	O
if	O
(	O
ocsp	*(struct(*(char),long,long,bool))
.	O
maxage	long
<	O
now	long
)	O
{	O
deinit_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
&	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
continue	O
;	O
}	O
ok	int
=	O
1	int
;	O
}	O
if	O
(	O
*	O
linep	*(char)
)	O
{	O
for	O
(	O
p	*(char)
=	O
++	O
linep	*(char)
;	O
*	O
linep	*(char)
&&	O
!	O
isspace	(int)->(int)
(	O
*	O
linep	*(char)
)	O
;	O
)	O
linep	*(char)
++	O
;	O
ocsp	*(struct(*(char),long,long,bool))
.	O
mtime	long
=	O
(	O
int64_t	long
)	O
atoll	(*(char))->(long long)
(	O
p	*(char)
)	O
;	O
}	O
if	O
(	O
*	O
linep	*(char)
)	O
{	O
for	O
(	O
p	*(char)
=	O
++	O
linep	*(char)
;	O
*	O
linep	*(char)
&&	O
!	O
isspace	(int)->(int)
(	O
*	O
linep	*(char)
)	O
;	O
)	O
linep	*(char)
++	O
;	O
ocsp	*(struct(*(char),long,long,bool))
.	O
valid	*(int)
=	O
atoi	(*(char))->(int)
(	O
p	*(char)
)	O
!=	O
0	int
;	O
}	O
if	O
(	O
ok	int
)	O
{	O
if	O
(	O
load_hosts	bool
)	O
ocsp_db_add_host_entry	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp_db	*(struct)
,	O
wget_memdup	(*(void),long)->(*(void))
(	O
&	O
ocsp	*(struct(*(char),long,long,bool))
,	O
sizeof	O
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
)	O
)	O
;	O
else	O
ocsp_db_add_fingerprint_entry	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(*(char),long,long,bool)))->(void)
(	O
ocsp_db	*(struct)
,	O
wget_memdup	(*(void),long)->(*(void))
(	O
&	O
ocsp	*(struct(*(char),long,long,bool))
,	O
sizeof	O
(	O
ocsp	*(struct(*(char),long,long,bool))
)	O
)	O
)	O
;	O
}	O
else	O
{	O
deinit_ocsp	(*(struct(*(char),long,long,bool)))->(void)
(	O
&	O
ocsp	*(struct(*(char),long,long,bool))
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to parse OCSP line: '%s'\n"	*(char)
)	O
,	O
buf	*(char)
)	O
;	O
}	O
}	O
xfree	O
(	O
buf	*(char)
)	O
;	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
ocsp_db_load_hosts	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
void	O
*	O
ocsp_db	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
return	O
ocsp_db_load	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(int)
(	O
ocsp_db	*(struct)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
true	int
)	O
;	O
}	O
static	O
int	O
ocsp_db_load_fingerprints	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
void	O
*	O
ocsp_db	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
return	O
ocsp_db_load	(*(struct(*(char),*(struct),*(struct),*(struct))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(int)
(	O
ocsp_db	*(struct)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
false	int
)	O
;	O
}	O
int	O
wget_ocsp_db_load	(*(struct))->(int)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
return	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
load	*((*(struct))->(int))
(	O
ocsp_db	*(struct)
)	O
;	O
int	O
ret	int
;	O
if	O
(	O
!	O
ocsp_db	*(struct)
->	O
fname	*(char)
||	O
!	O
*	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
return	O
-	O
1	int
;	O
char	O
fname_hosts	O
[	O
strlen	(*(char))->(long)
(	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
+	O
6	int
+	O
1	int
]	O
;	O
wget_snprintf	(*(char),long,*(char))->(long)
(	O
fname_hosts	O
,	O
sizeof	O
(	O
fname_hosts	O
)	O
,	O
"%s_hosts"	*(char)
,	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
wget_update_file	(*(char),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*(void))->(int)
(	O
fname_hosts	O
,	O
ocsp_db_load_hosts	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
,	O
NULL	O
,	O
ocsp_db	*(struct)
)	O
)	O
)	O
error_printf	O
(	O
_	O
(	O
"Failed to read OCSP hosts\n"	*(char)
)	O
)	O
;	O
else	O
debug_printf	O
(	O
"Fetched OCSP hosts from '%s'\n"	*(char)
,	O
fname_hosts	O
)	O
;	O
if	O
(	O
wget_update_file	(*(char),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*(void))->(int)
(	O
ocsp_db	*(struct)
->	O
fname	*(char)
,	O
ocsp_db_load_fingerprints	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
,	O
NULL	O
,	O
ocsp_db	*(struct)
)	O
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to read OCSP fingerprints\n"	*(char)
)	O
)	O
;	O
ret	int
=	O
-	O
1	int
;	O
}	O
else	O
debug_printf	O
(	O
"Fetched OCSP fingerprints from '%s'\n"	*(char)
,	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
return	O
ret	int
;	O
}	O
WGET_GCC_NONNULL_ALL	O
static	O
int	O
ocsp_save_fingerprint	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),long,long,bool)))->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
const	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %lld %lld %d\n"	*(char)
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
(	O
long	O
long	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
,	O
(	O
long	O
long	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
valid	*(int)
)	O
;	O
return	O
0	int
;	O
}	O
WGET_GCC_NONNULL_ALL	O
static	O
int	O
ocsp_save_host	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),long,long,bool)))->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
const	O
ocsp_entry	struct(*(char),long,long,bool)
*	O
ocsp	*(struct(*(char),long,long,bool))
)	O
{	O
wget_fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(long)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %lld %lld\n"	*(char)
,	O
ocsp	*(struct(*(char),long,long,bool))
->	O
key	int
,	O
(	O
long	O
long	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
maxage	long
,	O
(	O
long	O
long	O
)	O
ocsp	*(struct(*(char),long,long,bool))
->	O
mtime	long
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
ocsp_db_save_hosts	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
void	O
*	O
ocsp_db	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
wget_hashmap	struct
*	O
map	*(struct)
=	O
(	O
(	O
wget_ocsp_db	struct
*	O
)	O
ocsp_db	*(struct)
)	O
->	O
hosts	*(struct)
;	O
if	O
(	O
(	O
wget_hashmap_size	(*(struct))->(int)
(	O
map	*(struct)
)	O
)	O
>	O
0	int
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"#OCSP 1.0 host file\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"#Generated by Wget "	*(char)
PACKAGE_VERSION	*(char)
". Edit at your own risk.\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"<hostname> <time_t maxage> <time_t mtime>\n\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
wget_hashmap_browse	(*(struct),*((*(void),*(void),*(void))->(int)),*(void))->(int)
(	O
map	*(struct)
,	O
(	O
wget_hashmap_browse_fn	(*(void),*(void),*(void))->(int)
*	O
)	O
ocsp_save_host	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),long,long,bool)))->(int)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
ocsp_db_save_fingerprints	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
void	O
*	O
ocsp_db	*(struct)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
wget_hashmap	struct
*	O
map	*(struct)
=	O
(	O
(	O
wget_ocsp_db	struct
*	O
)	O
ocsp_db	*(struct)
)	O
->	O
fingerprints	*(struct)
;	O
if	O
(	O
(	O
wget_hashmap_size	(*(struct))->(int)
(	O
map	*(struct)
)	O
)	O
>	O
0	int
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"#OCSP 1.0 fingerprint file\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"#Generated by Wget "	*(char)
PACKAGE_VERSION	*(char)
". Edit at your own risk.\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"<sha256 fingerprint of cert> <time_t maxage> <time_t mtime> <valid>\n\n"	*(char)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
wget_hashmap_browse	(*(struct),*((*(void),*(void),*(void))->(int)),*(void))->(int)
(	O
map	*(struct)
,	O
(	O
wget_hashmap_browse_fn	(*(void),*(void),*(void))->(int)
*	O
)	O
ocsp_save_fingerprint	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(*(char),long,long,bool)))->(int)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
wget_ocsp_db_save	(*(struct))->(int)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
return	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
save	*((*(struct))->(int))
(	O
ocsp_db	*(struct)
)	O
;	O
int	O
ret	int
;	O
if	O
(	O
!	O
ocsp_db	*(struct)
||	O
!	O
ocsp_db	*(struct)
->	O
fname	*(char)
||	O
!	O
*	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
return	O
-	O
1	int
;	O
char	O
fname_hosts	O
[	O
strlen	(*(char))->(long)
(	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
+	O
6	int
+	O
1	int
]	O
;	O
wget_snprintf	(*(char),long,*(char))->(long)
(	O
fname_hosts	O
,	O
sizeof	O
(	O
fname_hosts	O
)	O
,	O
"%s_hosts"	*(char)
,	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
wget_update_file	(*(char),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*(void))->(int)
(	O
fname_hosts	O
,	O
ocsp_db_load_hosts	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
,	O
ocsp_db_save_hosts	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
,	O
ocsp_db	*(struct)
)	O
)	O
)	O
error_printf	O
(	O
_	O
(	O
"Failed to write to OCSP hosts to '%s'\n"	*(char)
)	O
,	O
fname_hosts	O
)	O
;	O
else	O
debug_printf	O
(	O
"Saved OCSP hosts to '%s'\n"	*(char)
,	O
fname_hosts	O
)	O
;	O
if	O
(	O
wget_update_file	(*(char),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*(void))->(int)
(	O
ocsp_db	*(struct)
->	O
fname	*(char)
,	O
ocsp_db_load_fingerprints	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
,	O
ocsp_db_save_fingerprints	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
,	O
ocsp_db	*(struct)
)	O
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to write to OCSP fingerprints to '%s'\n"	*(char)
)	O
,	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
ret	int
=	O
-	O
1	int
;	O
}	O
else	O
debug_printf	O
(	O
"Saved OCSP fingerprints to '%s'\n"	*(char)
,	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
return	O
ret	int
;	O
}	O
wget_ocsp_db	struct
*	O
wget_ocsp_db_init	(*(struct),*(char))->(*(struct))
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
const	O
char	O
*	O
fname	*(char)
)	O
{	O
if	O
(	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
)	O
return	O
plugin_vtable	*(struct(*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),*(int))->(bool)),*((*(struct`),*(char))->(bool)),*((*(struct`),*(char),long,bool)->(void)),*((*(struct`),*(char),long)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
->	O
init	*((*(struct),*(char))->(*(struct)))
(	O
ocsp_db	*(struct)
,	O
fname	*(char)
)	O
;	O
if	O
(	O
fname	*(char)
)	O
if	O
(	O
!	O
(	O
fname	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
fname	*(char)
)	O
)	O
)	O
return	O
NULL	O
;	O
wget_hashmap	struct
*	O
fingerprints	*(struct)
=	O
wget_hashmap_create	(int,*((*(void))->(int)),*((*(void),*(void))->(int)))->(*(struct))
(	O
16	int
,	O
(	O
wget_hashmap_hash_fn	(*(void))->(int)
*	O
)	O
hash_ocsp	(*(struct(*(char),long,long,bool)))->(int)
,	O
(	O
wget_hashmap_compare_fn	(*(void),*(void))->(int)
*	O
)	O
compare_ocsp	(*(struct(*(char),long,long,bool)),*(struct(*(char),long,long,bool)))->(int)
)	O
;	O
wget_hashmap	struct
*	O
hosts	*(struct)
=	O
wget_hashmap_create	(int,*((*(void))->(int)),*((*(void),*(void))->(int)))->(*(struct))
(	O
16	int
,	O
(	O
wget_hashmap_hash_fn	(*(void))->(int)
*	O
)	O
hash_ocsp	(*(struct(*(char),long,long,bool)))->(int)
,	O
(	O
wget_hashmap_compare_fn	(*(void),*(void))->(int)
*	O
)	O
compare_ocsp	(*(struct(*(char),long,long,bool)),*(struct(*(char),long,long,bool)))->(int)
)	O
;	O
if	O
(	O
!	O
fingerprints	*(struct)
||	O
!	O
hosts	*(struct)
)	O
{	O
no_mem	O
:	O
wget_hashmap_free	(*(*(struct)))->(void)
(	O
&	O
hosts	*(struct)
)	O
;	O
wget_hashmap_free	(*(*(struct)))->(void)
(	O
&	O
fingerprints	*(struct)
)	O
;	O
xfree	O
(	O
fname	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
!	O
ocsp_db	*(struct)
)	O
{	O
if	O
(	O
!	O
(	O
ocsp_db	*(struct)
=	O
wget_calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
struct	O
wget_ocsp_db_st	struct(*(char),*(struct),*(struct),*(struct))
)	O
)	O
)	O
)	O
goto	O
no_mem	O
;	O
}	O
else	O
memset	(*(void),int,long)->(*(void))
(	O
ocsp_db	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
*	O
ocsp_db	*(struct)
)	O
)	O
;	O
ocsp_db	*(struct)
->	O
fname	*(char)
=	O
fname	*(char)
;	O
wget_hashmap_set_key_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
fingerprints	*(struct)
,	O
(	O
wget_hashmap_key_destructor	(*(void))->(void)
*	O
)	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
)	O
;	O
wget_hashmap_set_value_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
fingerprints	*(struct)
,	O
(	O
wget_hashmap_value_destructor	(*(void))->(void)
*	O
)	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
)	O
;	O
ocsp_db	*(struct)
->	O
fingerprints	*(struct)
=	O
fingerprints	*(struct)
;	O
wget_hashmap_set_key_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
hosts	*(struct)
,	O
(	O
wget_hashmap_key_destructor	(*(void))->(void)
*	O
)	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
)	O
;	O
wget_hashmap_set_value_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
hosts	*(struct)
,	O
(	O
wget_hashmap_value_destructor	(*(void))->(void)
*	O
)	O
free_ocsp	(*(struct(*(char),long,long,bool)))->(void)
)	O
;	O
ocsp_db	*(struct)
->	O
hosts	*(struct)
=	O
hosts	*(struct)
;	O
wget_thread_mutex_init	(*(*(struct)))->(int)
(	O
&	O
ocsp_db	*(struct)
->	O
mutex	*(*(struct))
)	O
;	O
return	O
(	O
wget_ocsp_db	struct
*	O
)	O
ocsp_db	*(struct)
;	O
}	O
void	O
wget_ocsp_db_set_fname	(*(struct),*(char))->(void)
(	O
wget_ocsp_db	struct
*	O
ocsp_db	*(struct)
,	O
const	O
char	O
*	O
fname	*(char)
)	O
{	O
xfree	O
(	O
ocsp_db	*(struct)
->	O
fname	*(char)
)	O
;	O
ocsp_db	*(struct)
->	O
fname	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
fname	*(char)
)	O
;	O
}	O
