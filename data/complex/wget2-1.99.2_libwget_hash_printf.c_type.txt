void	O
wget_hash_printf_hex	(enum(int,int,int,int,int,int,int,int,int,int),*(char),long,*(char))->(void)
(	O
wget_digest_algorithm	enum(int,int,int,int,int,int,int,int,int,int)
algorithm	*(char)
,	O
char	O
*	O
out	*(*(char))
,	O
size_t	long
outsize	long
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
char	O
*	O
plaintext	*(char)
=	O
NULL	O
;	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
size_t	long
len	long
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
len	long
=	O
wget_vasprintf	(*(*(char)),*(char),array(struct(int,int,*(void),*(void))))->(long)
(	O
&	O
plaintext	*(char)
,	O
fmt	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
plaintext	*(char)
)	O
{	O
unsigned	O
char	O
digest	*(struct(*(char),*(char)))
[	O
wget_hash_get_len	(enum(int,int,int,int,int,int,int,int,int,int))->(int)
(	O
algorithm	*(char)
)	O
]	O
;	O
int	O
rc	int
;	O
if	O
(	O
(	O
rc	int
=	O
wget_hash_fast	(enum(int,int,int,int,int,int,int,int,int,int),*(void),long,*(void))->(int)
(	O
algorithm	*(char)
,	O
plaintext	*(char)
,	O
len	long
,	O
digest	*(struct(*(char),*(char)))
)	O
)	O
==	O
0	int
)	O
{	O
wget_memtohex	(*(char),long,*(char),long)->(void)
(	O
digest	*(struct(*(char),*(char)))
,	O
sizeof	O
(	O
digest	*(struct(*(char),*(char)))
)	O
,	O
out	*(*(char))
,	O
outsize	long
)	O
;	O
}	O
else	O
{	O
*	O
out	*(*(char))
=	O
0	int
;	O
error_printf	O
(	O
_	O
(	O
"Failed to hash (%d)\n"	*(char)
)	O
,	O
rc	int
)	O
;	O
}	O
xfree	O
(	O
plaintext	*(char)
)	O
;	O
}	O
}	O
