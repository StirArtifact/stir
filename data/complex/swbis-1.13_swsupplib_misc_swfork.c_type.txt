static	O
int	O
my_openpty	(*(int),*(int))->(int)
(	O
int	O
*	O
p_fdm	*(int)
,	O
int	O
*	O
p_fds	*(int)
)	O
{	O
return	O
-	O
1	int
;	O
}	O
static	O
void	O
release_tty_name	(*(char),int)->(void)
(	O
char	O
*	O
slave_pty_name	*(char)
,	O
int	O
be_verbose	int
)	O
{	O
if	O
(	O
chown	(*(char),int,int)->(int)
(	O
slave_pty_name	*(char)
,	O
(	O
uid_t	int
)	O
(	O
0	int
)	O
,	O
(	O
gid_t	int
)	O
(	O
0	int
)	O
)	O
<	O
0	int
)	O
if	O
(	O
be_verbose	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: chown %.100s 0 0 failed: %.100s"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
slave_pty_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
chmod	(*(char),int)->(int)
(	O
slave_pty_name	*(char)
,	O
(	O
mode_t	int
)	O
0666	int
)	O
<	O
0	int
)	O
if	O
(	O
be_verbose	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: chmod %.100s 0666 failed: %.100s"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
slave_pty_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
static	O
int	O
swlib_ptym_open	(*(char),*(int))->(int)
(	O
char	O
*	O
pts_name	*(char)
,	O
int	O
*	O
start	int
)	O
{	O
int	O
fdm	int
;	O
char	O
*	O
ptr1	*(char)
,	O
*	O
ptr2	*(char)
;	O
char	O
ptr2char	array(char)
[	O
]	O
=	O
"0123456789abcdef"	*(char)
;	O
char	O
*	O
ptr2start	*(char)
;	O
if	O
(	O
*	O
start	int
<	O
0	int
||	O
(	O
unsigned	O
int	O
)	O
(	O
*	O
start	int
)	O
>=	O
strlen	(*(char))->(long)
(	O
ptr2char	array(char)
)	O
)	O
return	O
-	O
1	int
;	O
ptr2start	*(char)
=	O
ptr2char	array(char)
+	O
(	O
*	O
start	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
pts_name	*(char)
,	O
"/dev/ptyXY"	*(char)
)	O
;	O
for	O
(	O
ptr1	*(char)
=	O
"pqrstuvwxyzPQRST"	*(char)
;	O
*	O
ptr1	*(char)
!=	O
0	int
;	O
ptr1	*(char)
++	O
)	O
{	O
pts_name	*(char)
[	O
8	int
]	O
=	O
*	O
ptr1	*(char)
;	O
for	O
(	O
ptr2	*(char)
=	O
ptr2start	*(char)
;	O
*	O
ptr2	*(char)
!=	O
0	int
;	O
ptr2	*(char)
++	O
)	O
{	O
if	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
>=	O
SWC_VERBOSE_7	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: ptr2start is [%s]\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
ptr2start	*(char)
)	O
;	O
}	O
pts_name	*(char)
[	O
9	int
]	O
=	O
*	O
ptr2	*(char)
;	O
if	O
(	O
(	O
fdm	int
=	O
open	(*(char),int)->(int)
(	O
pts_name	*(char)
,	O
O_RDWR	int
)	O
)	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	int
)	O
{	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
else	O
{	O
(	O
*	O
start	int
)	O
++	O
;	O
if	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
>=	O
SWC_VERBOSE_7	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: open attempt failed on pty (master) : %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_name	*(char)
)	O
;	O
continue	O
;	O
}	O
}	O
if	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
>=	O
SWC_VERBOSE_7	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: Using pty (master) : %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_name	*(char)
)	O
;	O
}	O
pts_name	*(char)
[	O
5	int
]	O
=	O
't'	O
;	O
return	O
(	O
fdm	int
)	O
;	O
}	O
}	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
static	O
int	O
swlib_ptys_open	(*(char))->(int)
(	O
char	O
*	O
pts_name	*(char)
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
grp	*(struct(*(char),*(char),int,*(*(char))))
;	O
mode_t	int
mode	int
;	O
uid_t	int
uid	int
;	O
gid_t	int
gid	int
;	O
int	O
fds	int
;	O
if	O
(	O
(	O
fds	int
=	O
open	(*(char),int)->(int)
(	O
pts_name	*(char)
,	O
O_RDWR	int
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: swlib_ptys_open: open failed on %s : %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
if	O
(	O
(	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
getuid	()->(int)
(	O
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
SWLIB_FATAL	O
(	O
"passwd entry lookup failed for a uid"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
grp	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrnam	(*(char))->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
"tty"	*(char)
)	O
)	O
!=	O
NULL	O
)	O
{	O
gid	int
=	O
grp	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_gid	int
;	O
mode	int
=	O
S_IRUSR	O
|	O
S_IWUSR	O
|	O
S_IWGRP	O
;	O
}	O
else	O
{	O
gid	int
=	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_gid	int
;	O
mode	int
=	O
S_IRUSR	O
|	O
S_IWUSR	O
|	O
S_IWGRP	O
|	O
S_IWOTH	O
;	O
}	O
uid	int
=	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
;	O
if	O
(	O
chown	(*(char),int,int)->(int)
(	O
pts_name	*(char)
,	O
uid	int
,	O
gid	int
)	O
<	O
0	int
)	O
{	O
if	O
(	O
uid	int
==	O
0	int
)	O
{	O
SWLIB_FATAL	O
(	O
"chown failed for slave pty"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: warning: using pty %s with insecure ownership\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_name	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
chmod	(*(char),int)->(int)
(	O
pts_name	*(char)
,	O
mode	int
)	O
<	O
0	int
)	O
{	O
if	O
(	O
uid	int
==	O
0	int
)	O
{	O
SWLIB_FATAL	O
(	O
"chmod failed for slave pty"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: warning: using pty %s with insecure permissions\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_name	*(char)
)	O
;	O
}	O
}	O
return	O
(	O
fds	int
)	O
;	O
}	O
pid_t	int
swlib_pty_fork2	(*(int),int,int,int,*(struct(int,int,int,int,char,array(char),int,int)),*(struct(short,short,short,short)),*(int),int,*(struct(array(long))))->(int)
(	O
int	O
*	O
ptrfdm	*(int)
,	O
int	O
ofd	int
,	O
int	O
ifd	int
,	O
int	O
efd	int
,	O
const	O
struct	O
termios	struct(int,int,int,int,char,array(char),int,int)
*	O
slave_termios	*(struct(int,int,int,int,char,array(char),int,int))
,	O
const	O
struct	O
winsize	struct(short,short,short,short)
*	O
slave_winsize	*(struct(short,short,short,short))
,	O
int	O
*	O
pc_pid	*(int)
,	O
int	O
make_raw	int
,	O
sigset_t	struct(array(long))
*	O
sigmask	*(struct(array(long)))
)	O
{	O
int	O
fdm	int
,	O
fds	int
;	O
pid_t	int
pid	int
;	O
pid_t	int
c_pid	int
;	O
char	O
pts_name	*(char)
[	O
20	int
]	O
;	O
char	O
*	O
tmpc	*(char)
;	O
char	O
*	O
pts_type	*(char)
;	O
char	O
slave_pty_name	*(char)
[	O
50	int
]	O
;	O
int	O
op	array(int)
[	O
2	int
]	O
;	O
int	O
ip	array(int)
[	O
2	int
]	O
;	O
int	O
pcpipe	array(int)
[	O
2	int
]	O
;	O
int	O
testfds	int
=	O
-	O
1	int
;	O
int	O
start	int
=	O
0	int
;	O
int	O
have_openpty	int
=	O
0	int
;	O
int	O
have_posix_openpt	int
=	O
0	int
;	O
int	O
ret	int
;	O
have_posix_openpt	int
=	O
1	int
;	O
have_openpty	int
=	O
0	int
;	O
slave_pty_name	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
have_posix_openpt	int
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
pts_type	*(char)
=	O
"posix_openpt"	*(char)
;	O
ret	int
=	O
posix_openpt	(int)->(int)
(	O
O_RDWR	int
|	O
O_NOCTTY	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: posix_openpt failed: %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
fdm	int
=	O
ret	int
;	O
E_DEBUG2	O
(	O
"fdm=%d"	*(char)
,	O
fdm	int
)	O
;	O
tmpc	*(char)
=	O
ptsname	(int)->(*(char))
(	O
fdm	int
)	O
;	O
if	O
(	O
tmpc	*(char)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: ptsname failed\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
E_DEBUG2	O
(	O
"ptsname=%s"	*(char)
,	O
tmpc	*(char)
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
slave_pty_name	*(char)
,	O
tmpc	*(char)
,	O
sizeof	O
(	O
slave_pty_name	*(char)
)	O
-	O
1	int
)	O
;	O
slave_pty_name	*(char)
[	O
sizeof	O
(	O
slave_pty_name	*(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
if	O
(	O
have_openpty	int
)	O
{	O
pts_type	*(char)
=	O
"openpty"	*(char)
;	O
swlib_doif_writef	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
,	O
SWC_VERBOSE_7	int
,	O
(	O
struct	O
sw_logspec	struct(int,int,int)
*	O
)	O
(	O
NULL	O
)	O
,	O
STDERR_FILENO	int
,	O
"using system openpty()\n"	*(char)
)	O
;	O
ret	int
=	O
my_openpty	(*(int),*(int))->(int)
(	O
&	O
fdm	int
,	O
&	O
fds	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: openpty failed\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
tmpc	*(char)
=	O
ttyname	(int)->(*(char))
(	O
fds	int
)	O
;	O
if	O
(	O
tmpc	*(char)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: ttyname failed\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
slave_pty_name	*(char)
,	O
tmpc	*(char)
,	O
sizeof	O
(	O
slave_pty_name	*(char)
)	O
-	O
1	int
)	O
;	O
slave_pty_name	*(char)
[	O
sizeof	O
(	O
slave_pty_name	*(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
swlib_doif_writef	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
,	O
SWC_VERBOSE_7	int
,	O
(	O
struct	O
sw_logspec	struct(int,int,int)
*	O
)	O
(	O
NULL	O
)	O
,	O
STDERR_FILENO	int
,	O
"opened master pty [%s] using openpty\n"	*(char)
,	O
ttyname	(int)->(*(char))
(	O
fdm	int
)	O
)	O
;	O
swlib_doif_writef	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
,	O
SWC_VERBOSE_7	int
,	O
(	O
struct	O
sw_logspec	struct(int,int,int)
*	O
)	O
(	O
NULL	O
)	O
,	O
STDERR_FILENO	int
,	O
"opened slave pty [%s] using openpty\n"	*(char)
,	O
slave_pty_name	*(char)
)	O
;	O
}	O
else	O
{	O
pts_type	*(char)
=	O
"SVR4"	*(char)
;	O
while	O
(	O
testfds	int
<	O
0	int
)	O
{	O
if	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
>=	O
SWC_VERBOSE_7	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: pty name search index: %d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
start	int
)	O
;	O
}	O
if	O
(	O
(	O
fdm	int
=	O
swlib_ptym_open	(*(char),*(int))->(int)
(	O
pts_name	*(char)
,	O
&	O
start	int
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"can't open master pty: %s\n"	*(char)
,	O
pts_name	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal: out of ptys\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
testfds	int
=	O
swlib_ptys_open	(*(char))->(int)
(	O
pts_name	*(char)
)	O
)	O
<	O
0	int
)	O
{	O
close	*((*(void))->(int))
(	O
fdm	int
)	O
;	O
if	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
>=	O
SWC_VERBOSE_7	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: can't open slave pty %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_name	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
testfds	int
>=	O
0	int
)	O
close	*((*(void))->(int))
(	O
testfds	int
)	O
;	O
start	int
++	O
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"	*(char)
"%s: Warning: this program's usage of pty's (%s) may be insecure.\n"	*(char)
"%s: This feature of swcopy is meant for testing only.\n"	*(char)
"%s: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
pts_type	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
if	O
(	O
ifd	int
<	O
0	int
)	O
ifd	int
=	O
STDIN_FILENO	int
;	O
if	O
(	O
ofd	int
<	O
0	int
)	O
ofd	int
=	O
STDOUT_FILENO	int
;	O
if	O
(	O
efd	int
<	O
0	int
)	O
efd	int
=	O
STDERR_FILENO	int
;	O
pipe	(array(int))->(int)
(	O
op	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
ip	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
pcpipe	array(int)
)	O
;	O
if	O
(	O
(	O
pid	int
=	O
swndfork	(*(struct(array(long))),*(struct(array(long))))->(int)
(	O
sigmask	*(struct(array(long)))
,	O
NULL	O
)	O
)	O
<	O
0	int
)	O
{	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
pid	int
==	O
0	int
)	O
{	O
if	O
(	O
setsid	()->(int)
(	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"setsid error"	*(char)
)	O
;	O
}	O
if	O
(	O
have_posix_openpt	int
)	O
{	O
if	O
(	O
grantpt	(int)->(int)
(	O
fdm	int
)	O
<	O
0	int
||	O
unlockpt	(int)->(int)
(	O
fdm	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: pts gramtpt or unlockpt failed\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
fds	int
=	O
open	(*(char),int)->(int)
(	O
slave_pty_name	*(char)
,	O
O_RDWR	int
)	O
;	O
if	O
(	O
fds	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: open failed on %s, reason: %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
slave_pty_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
close	*((*(void))->(int))
(	O
fdm	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
E_DEBUG2	O
(	O
"fds=%d"	*(char)
,	O
fds	int
)	O
;	O
}	O
else	O
if	O
(	O
have_openpty	int
)	O
{	O
}	O
else	O
{	O
if	O
(	O
(	O
fds	int
=	O
swlib_ptys_open	(*(char))->(int)
(	O
pts_name	*(char)
)	O
)	O
<	O
0	int
)	O
{	O
close	*((*(void))->(int))
(	O
fdm	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"can't open slave pty %s : %s\n"	*(char)
,	O
pts_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
if	O
(	O
fds	int
>=	O
0	int
)	O
{	O
swlib_doif_writef	O
(	O
swlib_get_verbose_level	()->(int)
(	O
)	O
,	O
SWC_VERBOSE_7	int
,	O
(	O
struct	O
sw_logspec	struct(int,int,int)
*	O
)	O
(	O
NULL	O
)	O
,	O
STDERR_FILENO	int
,	O
"Using pty (slave) : %s\n"	*(char)
,	O
pts_name	*(char)
)	O
;	O
}	O
}	O
E_DEBUG	O
(	O
"HERE 4"	*(char)
)	O
;	O
if	O
(	O
slave_termios	*(struct(int,int,int,int,char,array(char),int,int))
!=	O
NULL	O
)	O
{	O
if	O
(	O
tcsetattr	(int,int,*(struct(int,int,int,int,char,array(char),int,int)))->(int)
(	O
fds	int
,	O
TCSANOW	int
,	O
slave_termios	*(struct(int,int,int,int,char,array(char),int,int))
)	O
<	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"tcsetattr error on slave pty : %s: %s\n"	*(char)
,	O
pts_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
E_DEBUG	O
(	O
"HERE 5"	*(char)
)	O
;	O
if	O
(	O
slave_winsize	*(struct(short,short,short,short))
!=	O
NULL	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
fds	int
,	O
TIOCSWINSZ	int
,	O
slave_winsize	*(struct(short,short,short,short))
)	O
<	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"TIOCSWINSZ error on slave pty %s: %s\n"	*(char)
,	O
pts_name	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
E_DEBUG	O
(	O
"HERE 6"	*(char)
)	O
;	O
c_pid	int
=	O
swndfork	(*(struct(array(long))),*(struct(array(long))))->(int)
(	O
sigmask	*(struct(array(long)))
,	O
NULL	O
)	O
;	O
if	O
(	O
c_pid	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fork error\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
c_pid	int
>	O
0	int
)	O
{	O
close	*((*(void))->(int))
(	O
fdm	int
)	O
;	O
close	*((*(void))->(int))
(	O
op	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
op	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ip	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ip	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
pcpipe	array(int)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
uxfio_unix_safe_write	(int,*(void),int)->(long)
(	O
pcpipe	array(int)
[	O
1	int
]	O
,	O
(	O
void	O
*	O
)	O
(	O
&	O
c_pid	int
)	O
,	O
sizeof	O
(	O
c_pid	int
)	O
)	O
!=	O
sizeof	O
(	O
c_pid	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"write error : %s \n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
pcpipe	array(int)
[	O
1	int
]	O
)	O
;	O
E_DEBUG	O
(	O
"at parent"	*(char)
)	O
;	O
if	O
(	O
dup2	(int,int)->(int)
(	O
fds	int
,	O
0	int
)	O
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dup2 error to ifd = %d"	*(char)
,	O
ifd	int
)	O
;	O
if	O
(	O
dup2	(int,int)->(int)
(	O
fds	int
,	O
1	int
)	O
!=	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dup2 error to ofd = %d"	*(char)
,	O
ofd	int
)	O
;	O
if	O
(	O
dup2	(int,int)->(int)
(	O
efd	int
,	O
2	int
)	O
!=	O
2	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dup2 error to efd = %d"	*(char)
,	O
efd	int
)	O
;	O
swgp_close_all_fd	(int)->(int)
(	O
3	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
c_pid	int
==	O
0	int
)	O
{	O
int	O
ret	int
;	O
uintmax_t	long
sb	*(struct(*(char),*(char),int,int,int,char,int))
;	O
close	*((*(void))->(int))
(	O
pcpipe	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
pcpipe	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
fds	int
)	O
;	O
close	*((*(void))->(int))
(	O
op	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ip	array(int)
[	O
1	int
]	O
)	O
;	O
if	O
(	O
make_raw	int
)	O
if	O
(	O
swlib_tty_raw	(int)->(int)
(	O
fdm	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"tty_raw error : source_fdar[0]\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
2	int
)	O
;	O
}	O
E_DEBUG	O
(	O
"at swgp_stdioPump"	*(char)
)	O
;	O
ret	int
=	O
swgp_stdioPump	(int,int,int,int,int,int,int,*(int),*(int),*(int),*(long))->(int)
(	O
op	array(int)
[	O
1	int
]	O
,	O
fdm	int
,	O
fdm	int
,	O
ip	array(int)
[	O
0	int
]	O
,	O
0	int
,	O
1	int
,	O
0	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
&	O
sb	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
close	*((*(void))->(int))
(	O
fdm	int
)	O
;	O
close	*((*(void))->(int))
(	O
op	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ip	array(int)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
have_openpty	int
)	O
{	O
}	O
_exit	(int)->(void)
(	O
ret	int
)	O
;	O
}	O
}	O
else	O
{	O
close	*((*(void))->(int))
(	O
pcpipe	array(int)
[	O
1	int
]	O
)	O
;	O
if	O
(	O
read	*((*(void),*(char),long)->(long))
(	O
pcpipe	array(int)
[	O
0	int
]	O
,	O
(	O
void	O
*	O
)	O
(	O
pc_pid	*(int)
)	O
,	O
sizeof	O
(	O
c_pid	int
)	O
)	O
!=	O
sizeof	O
(	O
c_pid	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"read error : %s \n"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
pcpipe	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
fdm	int
)	O
;	O
close	*((*(void))->(int))
(	O
op	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ip	array(int)
[	O
0	int
]	O
)	O
;	O
ptrfdm	*(int)
[	O
0	int
]	O
=	O
op	array(int)
[	O
0	int
]	O
;	O
ptrfdm	*(int)
[	O
1	int
]	O
=	O
ip	array(int)
[	O
1	int
]	O
;	O
ptrfdm	*(int)
[	O
2	int
]	O
=	O
efd	int
;	O
return	O
(	O
pid	int
)	O
;	O
}	O
return	O
-	O
1	int
;	O
}	O
pid_t	int
swlib_no_pty_fork	(*(int),int,int,int,*(struct(array(long))))->(int)
(	O
int	O
*	O
ptrfdm	*(int)
,	O
int	O
ofd	int
,	O
int	O
ifd	int
,	O
int	O
efd	int
,	O
sigset_t	struct(array(long))
*	O
sigmask	*(struct(array(long)))
)	O
{	O
int	O
opipe	array(int)
[	O
2	int
]	O
;	O
int	O
ipipe	array(int)
[	O
2	int
]	O
;	O
pid_t	int
pid	int
;	O
pipe	(array(int))->(int)
(	O
opipe	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
ipipe	array(int)
)	O
;	O
if	O
(	O
(	O
pid	int
=	O
swndfork	(*(struct(array(long))),*(struct(array(long))))->(int)
(	O
sigmask	*(struct(array(long)))
,	O
NULL	O
)	O
)	O
<	O
0	int
)	O
{	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
pid	int
==	O
0	int
)	O
{	O
close	*((*(void))->(int))
(	O
opipe	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ipipe	array(int)
[	O
1	int
]	O
)	O
;	O
if	O
(	O
dup2	(int,int)->(int)
(	O
ipipe	array(int)
[	O
0	int
]	O
,	O
0	int
)	O
!=	O
0	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dup2 error to ifd = %d"	*(char)
,	O
ifd	int
)	O
;	O
if	O
(	O
dup2	(int,int)->(int)
(	O
opipe	array(int)
[	O
1	int
]	O
,	O
1	int
)	O
!=	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dup2 error to ofd = %d"	*(char)
,	O
ofd	int
)	O
;	O
if	O
(	O
dup2	(int,int)->(int)
(	O
efd	int
,	O
2	int
)	O
!=	O
2	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"dup2 error to efd = %d"	*(char)
,	O
efd	int
)	O
;	O
close	*((*(void))->(int))
(	O
efd	int
)	O
;	O
close	*((*(void))->(int))
(	O
opipe	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ipipe	array(int)
[	O
0	int
]	O
)	O
;	O
swgp_close_all_fd	(int)->(int)
(	O
3	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
else	O
{	O
close	*((*(void))->(int))
(	O
opipe	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
ipipe	array(int)
[	O
0	int
]	O
)	O
;	O
ptrfdm	*(int)
[	O
0	int
]	O
=	O
opipe	array(int)
[	O
0	int
]	O
;	O
ptrfdm	*(int)
[	O
1	int
]	O
=	O
ipipe	array(int)
[	O
1	int
]	O
;	O
ptrfdm	*(int)
[	O
2	int
]	O
=	O
efd	int
;	O
return	O
(	O
pid	int
)	O
;	O
}	O
}	O
pid_t	int
swlib_fork	(*(char),*(int),int,int,int,*(struct(int,int,int,int,char,array(char),int,int)),*(struct(short,short,short,short)),*(int),int,*(struct(array(long))))->(int)
(	O
char	O
*	O
type	enum(int,int,int,int)
,	O
int	O
*	O
ptrfdm	*(int)
,	O
int	O
ofd	int
,	O
int	O
ifd	int
,	O
int	O
efd	int
,	O
const	O
struct	O
termios	struct(int,int,int,int,char,array(char),int,int)
*	O
slave_termios	*(struct(int,int,int,int,char,array(char),int,int))
,	O
const	O
struct	O
winsize	struct(short,short,short,short)
*	O
slave_winsize	*(struct(short,short,short,short))
,	O
pid_t	int
*	O
pcpid	*(int)
,	O
int	O
make_raw	int
,	O
sigset_t	struct(array(long))
*	O
sigmask	*(struct(array(long)))
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
type	enum(int,int,int,int)
,	O
SWFORK_PTY	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
pcpid	*(int)
=	O
0	int
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
type	enum(int,int,int,int)
,	O
SWFORK_PTY2	*(char)
)	O
==	O
0	int
)	O
{	O
return	O
swlib_pty_fork2	(*(int),int,int,int,*(struct(int,int,int,int,char,array(char),int,int)),*(struct(short,short,short,short)),*(int),int,*(struct(array(long))))->(int)
(	O
ptrfdm	*(int)
,	O
ofd	int
,	O
ifd	int
,	O
efd	int
,	O
slave_termios	*(struct(int,int,int,int,char,array(char),int,int))
,	O
slave_winsize	*(struct(short,short,short,short))
,	O
pcpid	*(int)
,	O
make_raw	int
,	O
sigmask	*(struct(array(long)))
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
type	enum(int,int,int,int)
,	O
SWFORK_NO_PTY	*(char)
)	O
==	O
0	int
)	O
{	O
*	O
pcpid	*(int)
=	O
0	int
;	O
return	O
swlib_no_pty_fork	(*(int),int,int,int,*(struct(array(long))))->(int)
(	O
ptrfdm	*(int)
,	O
ofd	int
,	O
ifd	int
,	O
efd	int
,	O
sigmask	*(struct(array(long)))
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
type	enum(int,int,int,int)
,	O
SWFORK_FORK	*(char)
)	O
==	O
0	int
)	O
{	O
pid_t	int
pid	int
;	O
*	O
pcpid	*(int)
=	O
0	int
;	O
if	O
(	O
(	O
pid	int
=	O
swndfork	(*(struct(array(long))),*(struct(array(long))))->(int)
(	O
sigmask	*(struct(array(long)))
,	O
NULL	O
)	O
)	O
<	O
0	int
)	O
{	O
return	O
(	O
-	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
pid	int
==	O
0	int
)	O
{	O
return	O
(	O
0	int
)	O
;	O
}	O
else	O
{	O
ptrfdm	*(int)
[	O
0	int
]	O
=	O
ifd	int
;	O
ptrfdm	*(int)
[	O
1	int
]	O
=	O
ofd	int
;	O
ptrfdm	*(int)
[	O
2	int
]	O
=	O
efd	int
;	O
return	O
(	O
pid	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
type	enum(int,int,int,int)
,	O
SWFORK_NO_FORK	*(char)
)	O
==	O
0	int
)	O
{	O
ptrfdm	*(int)
[	O
0	int
]	O
=	O
ifd	int
;	O
ptrfdm	*(int)
[	O
1	int
]	O
=	O
ofd	int
;	O
ptrfdm	*(int)
[	O
2	int
]	O
=	O
efd	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
return	O
-	O
1	int
;	O
}	O
pid_t	int
swndfork	(*(struct(array(long))),*(struct(array(long))))->(int)
(	O
sigset_t	struct(array(long))
*	O
sigmask	*(struct(array(long)))
,	O
sigset_t	struct(array(long))
*	O
sigdfl	*(struct(array(long)))
)	O
{	O
int	O
ret	int
;	O
ret	int
=	O
fork	()->(int)
(	O
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
if	O
(	O
sigdfl	*(struct(array(long)))
)	O
{	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
;	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_mask	struct(array(long))
)	O
;	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_handler	*((int)->(void))
=	O
SIG_DFL	O
;	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_flags	int
=	O
0	int
;	O
if	O
(	O
sigismember	(*(struct(array(long))),int)->(int)
(	O
sigdfl	*(struct(array(long)))
,	O
SIGTERM	int
)	O
)	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGTERM	int
,	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
NULL	O
)	O
;	O
if	O
(	O
sigismember	(*(struct(array(long))),int)->(int)
(	O
sigdfl	*(struct(array(long)))
,	O
SIGINT	int
)	O
)	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGINT	int
,	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
NULL	O
)	O
;	O
if	O
(	O
sigismember	(*(struct(array(long))),int)->(int)
(	O
sigdfl	*(struct(array(long)))
,	O
SIGPIPE	int
)	O
)	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGPIPE	int
,	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
NULL	O
)	O
;	O
if	O
(	O
sigismember	(*(struct(array(long))),int)->(int)
(	O
sigdfl	*(struct(array(long)))
,	O
SIGALRM	int
)	O
)	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGALRM	int
,	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
sigmask	*(struct(array(long)))
)	O
{	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_BLOCK	int
,	O
sigmask	*(struct(array(long)))
,	O
NULL	O
)	O
;	O
}	O
}	O
return	O
ret	int
;	O
}	O
