error_t	(*(int))->(int)
_store_create	(*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),int,int,long,*(struct(long,long)),long,long,*(*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void)))))->(int)
(	O
const	O
struct	O
store_class	struct(enum,*(char),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),long,long,int,*(*(void)),*(int))->(int)),int,*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),long)->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),*(struct))->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),*(struct))->(int)),*((*(struct),*(*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))))->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),int)->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),int)->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))))->(void)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))))->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),*(struct(long,long)),long,*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))))->(int)),*((*(char),int,*(*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))))->(int)),*((*(char),*(*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))))->(int)),*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))),int,*(int))->(int)))
*	O
class	*(struct)
,	O
mach_port_t	O
port	int
,	O
int	O
flags	int
,	O
size_t	long
block_size	long
,	O
const	O
struct	O
store_run	struct(long,long)
*	O
runs	*(struct(long,long))
,	O
size_t	long
num_runs	long
,	O
store_offset_t	long
end	long
,	O
struct	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
*	O
*	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
)	O
{	O
if	O
(	O
(	O
block_size	long
&	O
(	O
block_size	long
-	O
1	int
)	O
)	O
||	O
(	O
block_size	long
==	O
0	int
&&	O
num_runs	long
>	O
0	int
)	O
)	O
return	O
EINVAL	O
;	O
else	O
{	O
struct	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
*	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
)	O
)	O
;	O
if	O
(	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
)	O
{	O
error_t	(*(int))->(int)
err	(*(int))->(int)
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
name	*(char)
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
port	int
=	O
port	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
runs	*(struct(long,long))
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
num_runs	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
wrap_src	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
wrap_dst	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
flags	int
=	O
flags	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
end	long
=	O
end	long
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
block_size	long
=	O
block_size	long
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
source	int
=	O
MACH_PORT_NULL	O
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
blocks	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
size	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
log2_block_size	int
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
log2_blocks_per_page	int
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
misc	*(void)
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
misc_len	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
hook	*(void)
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
children	*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void))))
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
num_children	long
=	O
0	int
;	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
->	O
class	*(struct)
=	O
class	*(struct)
;	O
err	(*(int))->(int)
=	O
store_set_runs	(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*(struct`)),long,*(void))),*(struct(long,long)),long)->(int)
(	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
,	O
runs	*(struct(long,long))
,	O
num_runs	long
)	O
;	O
if	O
(	O
err	(*(int))->(int)
)	O
free	(*(void))->(void)
(	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
)	O
;	O
else	O
*	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
=	O
new	*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*(char),*((*`,long,long,int,*`,*`)->(int)),int,*((*`,long)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,int)->(int)),*((*`,int)->(int)),*((*`)->(void)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,int,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,*`)->(int)))),*(*(struct(int,*`,long,long,long,long,*`,int,long,long,long,int,int,int,*`,long,*`,*`,long,*`))),long,*(void)))
;	O
return	O
err	(*(int))->(int)
;	O
}	O
else	O
return	O
ENOMEM	O
;	O
}	O
}	O
void	O
store_free	(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*(struct`)),long,*(void))))->(void)
(	O
struct	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
*	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
)	O
{	O
int	O
k	int
;	O
if	O
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
class	*(struct)
->	O
cleanup	*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))))->(void))
)	O
(	O
*	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
class	*(struct)
->	O
cleanup	*((*(struct(int,*(struct`),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct`),*(*`),long,*(void))))->(void))
)	O
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
)	O
;	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
num_children	long
;	O
k	int
++	O
)	O
store_free	(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct(enum,*`,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(*(struct`)),long,*(void))))->(void)
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
children	*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void))))
[	O
k	int
]	O
)	O
;	O
if	O
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
port	int
!=	O
MACH_PORT_NULL	O
)	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
port	int
)	O
;	O
if	O
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
source	int
!=	O
MACH_PORT_NULL	O
)	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
source	int
)	O
;	O
if	O
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
name	*(char)
)	O
free	(*(void))->(void)
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
name	*(char)
)	O
;	O
if	O
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
runs	*(struct(long,long))
)	O
free	(*(void))->(void)
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
->	O
runs	*(struct(long,long))
)	O
;	O
free	(*(void))->(void)
(	O
store	struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct(int,*(struct(long,long)),long,long,long,long,*(char),int,long,long,long,int,int,int,*(void),long,*(struct),*(*(struct`)),long,*(void)))),long,*(void))
)	O
;	O
}	O
