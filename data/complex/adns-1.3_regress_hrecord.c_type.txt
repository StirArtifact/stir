static	O
FILE	struct
*	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
void	O
Tshutdown	()->(void)
(	O
void	O
)	O
{	O
}	O
static	O
void	O
R_recordtime	()->(void)
(	O
void	O
)	O
{	O
int	O
r	int
;	O
struct	O
timeval	struct(long,long)
tv	*(struct(long,long))
,	O
tvrel	struct(long,long)
;	O
Tensurerecordfile	()->(void)
(	O
)	O
;	O
r	int
=	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
tv	*(struct(long,long))
,	O
0	int
)	O
;	O
if	O
(	O
r	int
)	O
Tfailed	(*(char))->(void)
(	O
"gettimeofday syscallbegin"	*(char)
)	O
;	O
tvrel	struct(long,long)
.	O
tv_sec	long
=	O
tv	*(struct(long,long))
.	O
tv_sec	long
-	O
currenttime	struct(long,long)
.	O
tv_sec	long
;	O
tvrel	struct(long,long)
.	O
tv_usec	long
=	O
tv	*(struct(long,long))
.	O
tv_usec	long
-	O
currenttime	struct(long,long)
.	O
tv_usec	long
;	O
if	O
(	O
tv	*(struct(long,long))
.	O
tv_usec	long
<	O
0	int
)	O
{	O
tvrel	struct(long,long)
.	O
tv_usec	long
+=	O
1000000	int
;	O
tvrel	struct(long,long)
.	O
tv_sec	long
--	O
;	O
}	O
Tvbf	(*(char))->(void)
(	O
"\n +%ld.%06ld"	*(char)
,	O
(	O
long	O
)	O
tvrel	struct(long,long)
.	O
tv_sec	long
,	O
(	O
long	O
)	O
tvrel	struct(long,long)
.	O
tv_usec	long
)	O
;	O
currenttime	struct(long,long)
=	O
tv	*(struct(long,long))
;	O
}	O
void	O
Tensurerecordfile	()->(void)
(	O
void	O
)	O
{	O
const	O
char	O
*	O
fdstr	*(char)
;	O
int	O
fd	int
,	O
r	int
;	O
if	O
(	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
return	O
;	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
fdstr	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"ADNS_TEST_OUT_FD"	*(char)
)	O
;	O
if	O
(	O
fdstr	*(char)
)	O
{	O
fd	int
=	O
atoi	(*(char))->(int)
(	O
fdstr	*(char)
)	O
;	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fdopen	(int,*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fd	int
,	O
"a"	*(char)
)	O
;	O
if	O
(	O
!	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
Tfailed	(*(char))->(void)
(	O
"fdopen ADNS_TEST_OUT_FD"	*(char)
)	O
;	O
}	O
r	int
=	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
currenttime	struct(long,long)
,	O
0	int
)	O
;	O
if	O
(	O
r	int
)	O
Tfailed	(*(char))->(void)
(	O
"gettimeofday syscallbegin"	*(char)
)	O
;	O
if	O
(	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" start %ld.%06ld\n"	*(char)
,	O
(	O
long	O
)	O
currenttime	struct(long,long)
.	O
tv_sec	long
,	O
(	O
long	O
)	O
currenttime	struct(long,long)
.	O
tv_usec	long
)	O
==	O
EOF	O
)	O
Toutputerr	()->(void)
(	O
)	O
;	O
}	O
void	O
Q_vb	()->(void)
(	O
void	O
)	O
{	O
if	O
(	O
!	O
adns__vbuf_append	(*(struct(int,int,*(char))),*(char),int)->(int)
(	O
&	O
vb	*(struct(int,int,*(char)))
,	O
""	*(char)
,	O
1	int
)	O
)	O
Tnomem	()->(void)
(	O
)	O
;	O
Tensurerecordfile	()->(void)
(	O
)	O
;	O
if	O
(	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" %s\n"	*(char)
,	O
vb	*(struct(int,int,*(char)))
.	O
buf	*(char)
)	O
==	O
EOF	O
)	O
Toutputerr	()->(void)
(	O
)	O
;	O
if	O
(	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
Toutputfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
Toutputerr	()->(void)
(	O
)	O
;	O
}	O
static	O
void	O
R_vb	()->(void)
(	O
void	O
)	O
{	O
Q_vb	()->(void)
(	O
)	O
;	O
}	O
int	O
Hselect	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
int	O
max	int
,	O
fd_set	struct(array(long))
*	O
rfds	*(struct(array(long)))
,	O
fd_set	struct(array(long))
*	O
wfds	*(struct(array(long)))
,	O
fd_set	struct(array(long))
*	O
efds	*(struct(array(long)))
,	O
struct	O
timeval	struct(long,long)
*	O
to	*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*`,*`),struct(*`,*`),struct(*`,*`),struct(*`,*`),*(struct`),int,int,int,struct(int,int,*`),struct(int,int,*`),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union`,struct`,int,*`),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*`),array(short))),enum(int,int,int,int),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),struct(*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`))),struct(*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`))),struct(*(struct(*`,*`)),*(struct(*`,*`))),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*`,*`)->(void)),*((*`,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,int,int,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,*`)->(int)),*((*`,*`,*`,int,array(char),*`,enum(int,int,int,int,int,int,int,int,int,int,int),*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,int,*`)->(void)))),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct(int,union`),*(struct`)))))
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qselect	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(void)
(	O
max	int
,	O
rfds	*(struct(array(long)))
,	O
wfds	*(struct(array(long)))
,	O
efds	*(struct(array(long)))
,	O
to	*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*`,*`),struct(*`,*`),struct(*`,*`),struct(*`,*`),*(struct`),int,int,int,struct(int,int,*`),struct(int,int,*`),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union`,struct`,int,*`),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*`),array(short))),enum(int,int,int,int),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),struct(*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`))),struct(*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`))),struct(*(struct(*`,*`)),*(struct(*`,*`))),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*`,*`)->(void)),*((*`,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,int,int,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,*`)->(int)),*((*`,*`,*`,int,array(char),*`,enum(int,int,int,int,int,int,int,int,int,int,int),*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,int,*`)->(void)))),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct(int,union`),*(struct`)))))
)	O
;	O
r	int
=	O
select	(int,*(struct(array(long))),*(struct(array(long))),*(struct(array(long))),*(struct(long,long)))->(int)
(	O
max	int
,	O
rfds	*(struct(array(long)))
,	O
wfds	*(struct(array(long)))
,	O
efds	*(struct(array(long)))
,	O
to	*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*`,*`),struct(*`,*`),struct(*`,*`),struct(*`,*`),*(struct`),int,int,int,struct(int,int,*`),struct(int,int,*`),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union`,struct`,int,*`),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*`),array(short))),enum(int,int,int,int),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),*(struct(*(struct`),enum(int,int,int,int),*(struct`),*(struct`),*(struct`),struct(*`,*`),struct(*`,*`),struct(*`,*`),int,int,*(void),*(struct`),*(char),int,struct(int,int,*`),*(struct`),*(char),int,int,struct(int,int,*`),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*`,*`,union`))),struct(*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`))),struct(*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`))),struct(*(struct(*`,*`)),*(struct(*`,*`))),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*`,*`)->(void)),*((*`,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,int,int,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,*`)->(int)),*((*`,*`,*`,int,array(char),*`,enum(int,int,int,int,int,int,int,int,int,int,int),*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,int,*`)->(void)))),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct(int,union`),*(struct`)))))
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"select="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvbf	(*(char))->(void)
(	O
"%d"	*(char)
,	O
r	int
)	O
;	O
Tvba	(*(char))->(void)
(	O
" rfds="	*(char)
)	O
;	O
Tvbfdset	(int,*(struct(array(long))))->(void)
(	O
max	int
,	O
rfds	*(struct(array(long)))
)	O
;	O
Tvba	(*(char))->(void)
(	O
" wfds="	*(char)
)	O
;	O
Tvbfdset	(int,*(struct(array(long))))->(void)
(	O
max	int
,	O
wfds	*(struct(array(long)))
)	O
;	O
Tvba	(*(char))->(void)
(	O
" efds="	*(char)
)	O
;	O
Tvbfdset	(int,*(struct(array(long))))->(void)
(	O
max	int
,	O
efds	*(struct(array(long)))
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hpoll	(*(struct(int,short,short)),int,int)->(int)
(	O
struct	O
pollfd	struct(int,short,short)
*	O
fds	*(struct(int,short,short))
,	O
int	O
nfds	int
,	O
int	O
timeout	struct(long,long)
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qpoll	(*(struct(int,short,short)),int,int)->(void)
(	O
fds	*(struct(int,short,short))
,	O
nfds	int
,	O
timeout	struct(long,long)
)	O
;	O
r	int
=	O
poll	(*(struct(int,short,short)),long,int)->(int)
(	O
fds	*(struct(int,short,short))
,	O
nfds	int
,	O
timeout	struct(long,long)
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"poll="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvbf	(*(char))->(void)
(	O
"%d"	*(char)
,	O
r	int
)	O
;	O
Tvba	(*(char))->(void)
(	O
" fds="	*(char)
)	O
;	O
Tvbpollfds	(*(struct(int,short,short)),int)->(void)
(	O
fds	*(struct(int,short,short))
,	O
nfds	int
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hsocket	(int,int,int)->(int)
(	O
int	O
domain	int
,	O
int	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
int	O
protocol	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Tmust	(*(char),*(char),int)->(void)
(	O
"socket"	*(char)
,	O
"domain"	*(char)
,	O
domain	int
==	O
AF_INET	O
)	O
;	O
Tmust	(*(char),*(char),int)->(void)
(	O
"socket"	*(char)
,	O
"type"	*(char)
,	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
SOCK_STREAM	int
||	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
SOCK_DGRAM	int
)	O
;	O
Qsocket	(int)->(void)
(	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
r	int
=	O
socket	(int,int,int)->(int)
(	O
domain	int
,	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
protocol	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"socket="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvbf	(*(char))->(void)
(	O
"%d"	*(char)
,	O
r	int
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hfcntl	(int,int)->(int)
(	O
int	O
fd	int
,	O
int	O
cmd	int
,	O
...	O
)	O
{	O
int	O
r	int
,	O
e	int
;	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
;	O
long	O
arg	long
;	O
Tmust	(*(char),*(char),int)->(void)
(	O
"fcntl"	*(char)
,	O
"cmd"	*(char)
,	O
cmd	int
==	O
F_SETFL	int
||	O
cmd	int
==	O
F_GETFL	int
)	O
;	O
if	O
(	O
cmd	int
==	O
F_SETFL	int
)	O
{	O
va_start	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
cmd	int
)	O
;	O
arg	long
=	O
va_arg	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
long	O
)	O
;	O
va_end	O
(	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
else	O
{	O
arg	long
=	O
0	int
;	O
}	O
Qfcntl	(int,int,long)->(void)
(	O
fd	int
,	O
cmd	int
,	O
arg	long
)	O
;	O
r	int
=	O
fcntl	(int,int)->(int)
(	O
fd	int
,	O
cmd	int
,	O
arg	long
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"fcntl="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
if	O
(	O
cmd	int
==	O
F_GETFL	int
)	O
{	O
Tvbf	(*(char))->(void)
(	O
r	int
&	O
O_NONBLOCK	int
?	O
"O_NONBLOCK|..."	*(char)
:	O
"~O_NONBLOCK&..."	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
cmd	int
==	O
F_SETFL	int
)	O
{	O
Tmust	(*(char),*(char),int)->(void)
(	O
"fcntl"	*(char)
,	O
"return"	*(char)
,	O
!	O
r	int
)	O
;	O
}	O
else	O
{	O
Tmust	(*(char),*(char),int)->(void)
(	O
"cmd"	*(char)
,	O
"F_GETFL/F_SETFL"	*(char)
,	O
0	int
)	O
;	O
}	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
}	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hconnect	(int,*(struct(short,array(char))),int)->(int)
(	O
int	O
fd	int
,	O
const	O
struct	O
sockaddr	struct(short,array(char))
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
int	O
addrlen	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qconnect	(int,*(struct(short,array(char))),int)->(void)
(	O
fd	int
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
r	int
=	O
connect	(int,*(struct(short,array(char))),int)->(int)
(	O
fd	int
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"connect="	*(char)
)	O
;	O
if	O
(	O
r	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hbind	(int,*(struct(short,array(char))),int)->(int)
(	O
int	O
fd	int
,	O
const	O
struct	O
sockaddr	struct(short,array(char))
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
int	O
addrlen	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qbind	(int,*(struct(short,array(char))),int)->(void)
(	O
fd	int
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
r	int
=	O
bind	(int,*(struct(short,array(char))),int)->(int)
(	O
fd	int
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"bind="	*(char)
)	O
;	O
if	O
(	O
r	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hlisten	(int,int)->(int)
(	O
int	O
fd	int
,	O
int	O
backlog	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qlisten	(int,int)->(void)
(	O
fd	int
,	O
backlog	int
)	O
;	O
r	int
=	O
listen	(int,int)->(int)
(	O
fd	int
,	O
backlog	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"listen="	*(char)
)	O
;	O
if	O
(	O
r	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hclose	(int)->(int)
(	O
int	O
fd	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qclose	(int)->(void)
(	O
fd	int
)	O
;	O
r	int
=	O
close	(int)->(int)
(	O
fd	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"close="	*(char)
)	O
;	O
if	O
(	O
r	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hsendto	(int,*(void),int,int,*(struct(short,array(char))),int)->(int)
(	O
int	O
fd	int
,	O
const	O
void	O
*	O
msg	*(void)
,	O
int	O
msglen	int
,	O
unsigned	O
int	O
flags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
const	O
struct	O
sockaddr	struct(short,array(char))
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
int	O
addrlen	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Tmust	(*(char),*(char),int)->(void)
(	O
"sendto"	*(char)
,	O
"flags"	*(char)
,	O
flags	enum(int,int,int,int,int,int,int,int,int,int,int)
==	O
0	int
)	O
;	O
Qsendto	(int,*(void),int,*(struct(short,array(char))),int)->(void)
(	O
fd	int
,	O
msg	*(void)
,	O
msglen	int
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
r	int
=	O
sendto	(int,*(void),long,int,*(struct(short,array(char))),int)->(long)
(	O
fd	int
,	O
msg	*(void)
,	O
msglen	int
,	O
flags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"sendto="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvbf	(*(char))->(void)
(	O
"%d"	*(char)
,	O
r	int
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hrecvfrom	(int,*(void),int,int,*(struct(short,array(char))),*(int))->(int)
(	O
int	O
fd	int
,	O
void	O
*	O
buf	*(char)
,	O
int	O
buflen	int
,	O
unsigned	O
int	O
flags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
struct	O
sockaddr	struct(short,array(char))
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
int	O
*	O
addrlen	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Tmust	(*(char),*(char),int)->(void)
(	O
"recvfrom"	*(char)
,	O
"flags"	*(char)
,	O
flags	enum(int,int,int,int,int,int,int,int,int,int,int)
==	O
0	int
)	O
;	O
Tmust	(*(char),*(char),int)->(void)
(	O
"recvfrom"	*(char)
,	O
"*addrlen"	*(char)
,	O
*	O
addrlen	int
>=	O
sizeof	O
(	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
)	O
)	O
;	O
Qrecvfrom	(int,int,int)->(void)
(	O
fd	int
,	O
buflen	int
,	O
*	O
addrlen	int
)	O
;	O
r	int
=	O
recvfrom	(int,*(void),long,int,*(struct(short,array(char))),*(int))->(long)
(	O
fd	int
,	O
buf	*(char)
,	O
buflen	int
,	O
flags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
addrlen	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"recvfrom="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tmust	(*(char),*(char),int)->(void)
(	O
"recvfrom"	*(char)
,	O
"return"	*(char)
,	O
r	int
<=	O
buflen	int
)	O
;	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
Tvba	(*(char))->(void)
(	O
" addr="	*(char)
)	O
;	O
Tvbaddr	(*(struct(short,array(char))),int)->(void)
(	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
*	O
addrlen	int
)	O
;	O
Tvbbytes	(*(void),int)->(void)
(	O
buf	*(char)
,	O
r	int
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hread	(int,*(void),long)->(int)
(	O
int	O
fd	int
,	O
void	O
*	O
buf	*(char)
,	O
size_t	long
buflen	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qread	(int,long)->(void)
(	O
fd	int
,	O
buflen	int
)	O
;	O
r	int
=	O
read	(int,*(void),long)->(long)
(	O
fd	int
,	O
buf	*(char)
,	O
buflen	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"read="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tmust	(*(char),*(char),int)->(void)
(	O
"read"	*(char)
,	O
"return"	*(char)
,	O
r	int
<=	O
buflen	int
)	O
;	O
Tvba	(*(char))->(void)
(	O
"OK"	*(char)
)	O
;	O
Tvbbytes	(*(void),int)->(void)
(	O
buf	*(char)
,	O
r	int
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
int	O
Hwrite	(int,*(void),long)->(int)
(	O
int	O
fd	int
,	O
const	O
void	O
*	O
buf	*(char)
,	O
size_t	long
len	int
)	O
{	O
int	O
r	int
,	O
e	int
;	O
Qwrite	(int,*(void),long)->(void)
(	O
fd	int
,	O
buf	*(char)
,	O
len	int
)	O
;	O
r	int
=	O
write	(int,*(void),long)->(long)
(	O
fd	int
,	O
buf	*(char)
,	O
len	int
)	O
;	O
e	int
=	O
errno	O
;	O
vb	*(struct(int,int,*(char)))
.	O
used	int
=	O
0	int
;	O
Tvba	(*(char))->(void)
(	O
"write="	*(char)
)	O
;	O
if	O
(	O
r	int
==	O
-	O
1	int
)	O
{	O
Tvberrno	(int)->(void)
(	O
e	int
)	O
;	O
goto	O
x_error	O
;	O
}	O
Tvbf	(*(char))->(void)
(	O
"%d"	*(char)
,	O
r	int
)	O
;	O
x_error	O
:	O
R_recordtime	()->(void)
(	O
)	O
;	O
R_vb	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
r	int
;	O
}	O
