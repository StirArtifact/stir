WORD_T	O
GCD	O
(	O
WORD_T	O
a	long
,	O
WORD_T	O
b	long
)	O
{	O
WORD_T	O
c	long
=	O
a	long
|	O
b	long
;	O
c	long
=	O
c	long
^	O
(	O
c	long
-	O
1	int
)	O
;	O
if	O
(	O
a	long
&	O
c	long
)	O
{	O
if	O
(	O
b	long
&	O
c	long
)	O
goto	O
odd_odd	O
;	O
else	O
goto	O
odd_even	O
;	O
}	O
else	O
{	O
if	O
(	O
b	long
&	O
c	long
)	O
goto	O
even_odd	O
;	O
else	O
abort	()->(void)
(	O
)	O
;	O
}	O
for	O
(	O
;	O
;	O
)	O
{	O
odd_odd	O
:	O
if	O
(	O
a	long
==	O
b	long
)	O
break	O
;	O
if	O
(	O
a	long
>	O
b	long
)	O
{	O
a	long
=	O
a	long
-	O
b	long
;	O
even_odd	O
:	O
do	O
a	long
=	O
a	long
>>	O
1	int
;	O
while	O
(	O
(	O
a	long
&	O
c	long
)	O
==	O
0	int
)	O
;	O
}	O
else	O
{	O
b	long
=	O
b	long
-	O
a	long
;	O
odd_even	O
:	O
do	O
b	long
=	O
b	long
>>	O
1	int
;	O
while	O
(	O
(	O
b	long
&	O
c	long
)	O
==	O
0	int
)	O
;	O
}	O
}	O
return	O
a	long
;	O
}	O
