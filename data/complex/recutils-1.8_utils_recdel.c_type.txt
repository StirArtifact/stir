void	O
recdel_delete_records	(*(struct))->(void)
(	O
rec_db_t	*(struct)
db	*(struct)
)	O
;	O
void	O
recdel_parse_args	(int,*(*(char)))->(void)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
;	O
char	O
*	O
recutl_type	*(char)
=	O
NULL	O
;	O
bool	bool
recdel_comment	bool
=	O
false	int
;	O
rec_sex_t	*(struct)
recutl_sex	*(struct)
=	O
NULL	O
;	O
char	O
*	O
recutl_quick_str	*(char)
=	O
NULL	O
;	O
char	O
*	O
recutl_sex_str	*(char)
=	O
NULL	O
;	O
bool	bool
recutl_insensitive	bool
=	O
false	int
;	O
bool	bool
recdel_force	bool
=	O
false	int
;	O
bool	bool
recdel_verbose	bool
=	O
false	int
;	O
bool	bool
recdel_external	bool
=	O
true	int
;	O
size_t	long
recutl_random	long
=	O
0	int
;	O
char	O
*	O
recdel_file	*(char)
=	O
NULL	O
;	O
enum	O
{	O
COMMON_ARGS	O
,	O
RECORD_SELECTION_ARGS	O
,	O
COMMENT_ARG	int
,	O
FORCE_ARG	int
,	O
VERBOSE_ARG	int
,	O
NO_EXTERNAL_ARG	int
}	O
;	O
static	O
const	O
struct	O
option	struct(*(char),int,*(int),int)
GNU_longOptions	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
COMMON_LONG_ARGS	O
,	O
RECORD_SELECTION_LONG_ARGS	O
,	O
{	O
"comment"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
COMMENT_ARG	int
}	O
,	O
{	O
"force"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
FORCE_ARG	int
}	O
,	O
{	O
"verbose"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
VERBOSE_ARG	int
}	O
,	O
{	O
"no-external"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
NO_EXTERNAL_ARG	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
void	O
recutl_print_help	()->(void)
(	O
void	O
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Usage: recdel [OPTIONS]... [-t TYPE] [-n NUM | -e RECORD_EXPR | -q STR | -m NUM] [FILE]\n"	*(char)
)	O
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"Remove (or comment out) records from a rec file.\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
puts	(*(char))->(int)
(	O
""	*(char)
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"  -c, --comment                       comment out the matching records instead of\n                                        deleting them.\n      --force                         delete even in potentially dangerous situations,\n                                        and if the deletion is violating record restrictions.\n      --no-external                   don't use external descriptors.\n      --verbose                       give a detailed report if the integrity check\n                                        fails.\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
recutl_print_help_common	()->(void)
(	O
)	O
;	O
puts	(*(char))->(int)
(	O
""	*(char)
)	O
;	O
recutl_print_help_record_selection	()->(void)
(	O
)	O
;	O
puts	(*(char))->(int)
(	O
""	*(char)
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
_	O
(	O
"If no FILE is specified then the command acts like a filter, getting\nthe data from standard input and writing the result to standard output.\n"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
puts	(*(char))->(int)
(	O
""	*(char)
)	O
;	O
recutl_print_help_footer	()->(void)
(	O
)	O
;	O
}	O
void	O
recdel_delete_records	(*(struct))->(void)
(	O
rec_db_t	*(struct)
db	*(struct)
)	O
{	O
if	O
(	O
!	O
rec_db_type_p	(*(struct),*(char))->(bool)
(	O
db	*(struct)
,	O
recutl_type	*(char)
)	O
)	O
{	O
recutl_fatal	(*(char))->(void)
(	O
_	O
(	O
"no records of type %s found.\n"	*(char)
)	O
,	O
recutl_type	*(char)
?	O
recutl_type	*(char)
:	O
"<default>"	*(char)
)	O
;	O
}	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
recutl_insensitive	bool
)	O
{	O
flags	int
=	O
flags	int
|	O
REC_F_ICASE	int
;	O
}	O
if	O
(	O
recdel_comment	bool
)	O
{	O
flags	int
=	O
flags	int
|	O
REC_F_COMMENT_OUT	int
;	O
}	O
if	O
(	O
!	O
rec_db_delete	(*(struct),*(char),*(long),*(struct),*(char),long,int)->(bool)
(	O
db	*(struct)
,	O
recutl_type	*(char)
,	O
recutl_index	()->(*(long))
(	O
)	O
,	O
recutl_sex	*(struct)
,	O
recutl_quick_str	*(char)
,	O
recutl_random	long
,	O
flags	int
)	O
)	O
recutl_out_of_memory	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
!	O
recdel_force	bool
&&	O
db	*(struct)
)	O
{	O
recutl_check_integrity	(*(struct),bool,bool)->(void)
(	O
db	*(struct)
,	O
recdel_verbose	bool
,	O
recdel_external	bool
)	O
;	O
}	O
}	O
void	O
recdel_parse_args	(int,*(*(char)))->(void)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
ret	int
;	O
char	O
c	int
;	O
while	O
(	O
(	O
ret	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
RECORD_SELECTION_SHORT_ARGS	*(char)
"c"	*(char)
,	O
GNU_longOptions	array(struct(*(char),int,*(int),int))
,	O
NULL	O
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
c	int
=	O
ret	int
;	O
switch	O
(	O
c	int
)	O
{	O
COMMON_ARGS_CASES	O
RECORD_SELECTION_ARGS_CASES	O
case	O
FORCE_ARG	int
:	O
{	O
recdel_force	bool
=	O
true	int
;	O
break	O
;	O
}	O
case	O
VERBOSE_ARG	int
:	O
{	O
recdel_verbose	bool
=	O
true	int
;	O
break	O
;	O
}	O
case	O
NO_EXTERNAL_ARG	int
:	O
{	O
recdel_external	bool
=	O
false	int
;	O
break	O
;	O
}	O
case	O
COMMENT_ARG	int
:	O
case	O
'c'	O
:	O
{	O
recdel_comment	bool
=	O
true	int
;	O
break	O
;	O
}	O
default	O
:	O
{	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
}	O
if	O
(	O
(	O
recutl_num_indexes	()->(long)
(	O
)	O
==	O
0	int
)	O
&&	O
!	O
recutl_sex_str	*(char)
&&	O
!	O
recutl_quick_str	*(char)
&&	O
!	O
recdel_force	bool
&&	O
(	O
recutl_random	long
==	O
0	int
)	O
)	O
{	O
recutl_error	(*(char))->(void)
(	O
_	O
(	O
"ignoring a request to delete all records of type %s.\n"	*(char)
)	O
,	O
recutl_type	*(char)
?	O
recutl_type	*(char)
:	O
"unknown"	*(char)
)	O
;	O
recutl_fatal	(*(char))->(void)
(	O
_	O
(	O
"use --force if you really want to proceed, or use either -n or -e.\n"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
recutl_sex_str	*(char)
)	O
{	O
recutl_sex	*(struct)
=	O
rec_sex_new	(bool)->(*(struct))
(	O
recutl_insensitive	bool
)	O
;	O
if	O
(	O
!	O
rec_sex_compile	(*(struct),*(char))->(bool)
(	O
recutl_sex	*(struct)
,	O
recutl_sex_str	*(char)
)	O
)	O
{	O
recutl_fatal	(*(char))->(void)
(	O
_	O
(	O
"invalid selection expression.\n"	*(char)
)	O
)	O
;	O
}	O
}	O
if	O
(	O
optind	int
<	O
argc	int
)	O
{	O
if	O
(	O
(	O
argc	int
-	O
optind	int
)	O
!=	O
1	int
)	O
{	O
recutl_print_help	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
recdel_file	*(char)
=	O
argv	*(*(char))
[	O
optind	int
++	O
]	O
;	O
}	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	*(*(char))
[	O
]	O
)	O
{	O
rec_db_t	*(struct)
db	*(struct)
;	O
recutl_init	(*(char))->(void)
(	O
"recdel"	*(char)
)	O
;	O
recdel_parse_args	(int,*(*(char)))->(void)
(	O
argc	int
,	O
argv	*(*(char))
)	O
;	O
db	*(struct)
=	O
recutl_read_db_from_file	(*(char))->(*(struct))
(	O
recdel_file	*(char)
)	O
;	O
if	O
(	O
!	O
db	*(struct)
)	O
{	O
recutl_fatal	(*(char))->(void)
(	O
_	O
(	O
"cannot read file %s\n"	*(char)
)	O
,	O
recdel_file	*(char)
)	O
;	O
}	O
if	O
(	O
(	O
(	O
recutl_num_indexes	()->(long)
(	O
)	O
!=	O
0	int
)	O
||	O
recutl_sex	*(struct)
||	O
recutl_quick_str	*(char)
)	O
||	O
recdel_force	bool
||	O
(	O
recutl_random	long
>	O
0	int
)	O
)	O
{	O
recdel_delete_records	(*(struct))->(void)
(	O
db	*(struct)
)	O
;	O
}	O
if	O
(	O
!	O
recutl_file_is_writable	(*(char))->(bool)
(	O
recdel_file	*(char)
)	O
)	O
{	O
recutl_error	(*(char))->(void)
(	O
_	O
(	O
"file %s is not writable.\n"	*(char)
)	O
,	O
recdel_file	*(char)
)	O
;	O
return	O
EXIT_FAILURE	int
;	O
}	O
recutl_write_db_to_file	(*(struct),*(char))->(void)
(	O
db	*(struct)
,	O
recdel_file	*(char)
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
