char	O
*	O
text	*(char)
=	O
"From: root\n\nThis is a test message.\noo\n"	*(char)
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
i	long
;	O
char	O
*	O
p	*(char)
;	O
mu_message_t	*(struct)
msg	*(struct)
;	O
mu_stream_t	*(struct)
stream	*(struct)
=	O
NULL	O
;	O
mu_header_t	*(struct)
hdr	*(struct)
;	O
mu_body_t	*(struct)
body	*(struct)
;	O
mu_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
mu_static_memory_stream_create	(*(*(struct)),*(void),long)->(int)
(	O
&	O
stream	*(struct)
,	O
text	*(char)
,	O
strlen	(*(char))->(long)
(	O
text	*(char)
)	O
)	O
;	O
assert	O
(	O
mu_stream_to_message	(*(struct),*(*(struct)))->(int)
(	O
stream	*(struct)
,	O
&	O
msg	*(struct)
)	O
==	O
0	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
assert	O
(	O
mu_message_get_header	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
hdr	*(struct)
)	O
==	O
0	int
)	O
;	O
assert	O
(	O
mu_message_get_body	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
body	*(struct)
)	O
==	O
0	int
)	O
;	O
assert	O
(	O
mu_body_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
body	*(struct)
,	O
&	O
stream	*(struct)
)	O
==	O
0	int
)	O
;	O
assert	O
(	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
0	int
,	O
MU_SEEK_END	int
,	O
NULL	O
)	O
==	O
0	int
)	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
"-h"	*(char)
)	O
==	O
0	int
)	O
{	O
mu_printf	(*(char))->(int)
(	O
"usage: %s [-a HDR:VAL] [-t TEXT]\n"	*(char)
,	O
mu_program_name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
"-a"	*(char)
)	O
==	O
0	int
)	O
{	O
i	long
++	O
;	O
assert	O
(	O
argv	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
)	O
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
':'	O
)	O
;	O
assert	O
(	O
p	*(char)
!=	O
NULL	O
)	O
;	O
*	O
p	*(char)
++	O
=	O
0	int
;	O
while	O
(	O
*	O
p	*(char)
&&	O
mu_isspace	O
(	O
*	O
p	*(char)
)	O
)	O
p	*(char)
++	O
;	O
assert	O
(	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
hdr	*(struct)
,	O
argv	*(*(char))
[	O
i	long
]	O
,	O
p	*(char)
,	O
1	int
)	O
==	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
"-l"	*(char)
)	O
==	O
0	int
)	O
{	O
mu_off_t	long
off	long
;	O
int	O
whence	int
=	O
MU_SEEK_SET	int
;	O
i	long
++	O
;	O
assert	O
(	O
argv	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
)	O
;	O
off	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
assert	O
(	O
*	O
p	*(char)
==	O
0	int
)	O
;	O
if	O
(	O
off	long
<	O
0	int
)	O
whence	int
=	O
MU_SEEK_END	int
;	O
assert	O
(	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
stream	*(struct)
,	O
off	long
,	O
whence	int
,	O
NULL	O
)	O
==	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
"-t"	*(char)
)	O
==	O
0	int
)	O
{	O
mu_wordsplit_t	struct
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
;	O
i	long
++	O
;	O
assert	O
(	O
argv	*(*(char))
[	O
i	long
]	O
!=	O
NULL	O
)	O
;	O
if	O
(	O
mu_wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
argv	*(*(char))
[	O
i	long
]	O
,	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
MU_WRDSF_NOSPLIT	O
|	O
MU_WRDSF_DEFFLAGS	O
)	O
)	O
{	O
mu_error	(*(char))->(int)
(	O
"mu_wordsplit: %s"	*(char)
,	O
mu_wordsplit_strerror	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(*(char))
(	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
else	O
assert	O
(	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
stream	*(struct)
,	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
0	int
]	O
,	O
strlen	(*(char))->(long)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
0	int
]	O
)	O
,	O
NULL	O
)	O
==	O
0	int
)	O
;	O
mu_wordsplit_free	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
}	O
else	O
mu_error	(*(char))->(int)
(	O
"ignoring unknown argument %s"	*(char)
,	O
argv	*(*(char))
[	O
i	long
]	O
)	O
;	O
}	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
assert	O
(	O
mu_message_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
msg	*(struct)
,	O
&	O
stream	*(struct)
)	O
==	O
0	int
)	O
;	O
assert	O
(	O
mu_stream_copy	(*(struct),*(struct),long,*(long))->(int)
(	O
mu_strout	*(struct)
,	O
stream	*(struct)
,	O
0	int
,	O
NULL	O
)	O
==	O
0	int
)	O
;	O
mu_stream_unref	(*(struct))->(void)
(	O
stream	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
