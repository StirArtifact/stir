int	O
grecs_str_is_ipv4	(*(char))->(int)
(	O
const	O
char	O
*	O
addr	*(char)
)	O
{	O
int	O
dot_count	int
=	O
0	int
;	O
int	O
digit_count	int
=	O
0	int
;	O
for	O
(	O
;	O
*	O
addr	*(char)
;	O
addr	*(char)
++	O
)	O
{	O
if	O
(	O
!	O
isascii	(int)->(int)
(	O
*	O
addr	*(char)
)	O
)	O
return	O
0	int
;	O
if	O
(	O
*	O
addr	*(char)
==	O
'.'	O
)	O
{	O
if	O
(	O
++	O
dot_count	int
>	O
3	int
)	O
break	O
;	O
digit_count	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
(	O
isdigit	(int)->(int)
(	O
*	O
addr	*(char)
)	O
&&	O
++	O
digit_count	int
<=	O
3	int
)	O
)	O
return	O
0	int
;	O
}	O
return	O
(	O
dot_count	int
==	O
3	int
)	O
;	O
}	O
int	O
grecs_str_is_ipv6	(*(char))->(int)
(	O
const	O
char	O
*	O
addr	*(char)
)	O
{	O
int	O
col_count	int
=	O
0	int
;	O
int	O
dcol	int
=	O
0	int
;	O
int	O
dig_count	int
=	O
0	int
;	O
for	O
(	O
;	O
*	O
addr	*(char)
;	O
addr	*(char)
++	O
)	O
{	O
if	O
(	O
!	O
isascii	(int)->(int)
(	O
*	O
addr	*(char)
)	O
)	O
return	O
0	int
;	O
else	O
if	O
(	O
isxdigit	(int)->(int)
(	O
*	O
addr	*(char)
)	O
)	O
{	O
if	O
(	O
++	O
dig_count	int
>	O
4	int
)	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
*	O
addr	*(char)
==	O
':'	O
)	O
{	O
if	O
(	O
col_count	int
&&	O
dig_count	int
==	O
0	int
&&	O
++	O
dcol	int
>	O
1	int
)	O
return	O
0	int
;	O
if	O
(	O
++	O
col_count	int
>	O
7	int
)	O
return	O
0	int
;	O
dig_count	int
=	O
0	int
;	O
}	O
else	O
return	O
0	int
;	O
}	O
return	O
(	O
col_count	int
==	O
7	int
||	O
dcol	int
)	O
;	O
}	O
int	O
grecs_str_is_num	(*(char))->(int)
(	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
for	O
(	O
;	O
*	O
s	*(char)
;	O
++	O
s	*(char)
)	O
if	O
(	O
!	O
isdigit	(int)->(int)
(	O
*	O
s	*(char)
)	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
int	O
grecs_str_is_ipaddr	(*(char))->(int)
(	O
const	O
char	O
*	O
addr	*(char)
)	O
{	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
addr	*(char)
,	O
'.'	O
)	O
)	O
return	O
grecs_str_is_ipv4	(*(char))->(int)
(	O
addr	*(char)
)	O
;	O
else	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
addr	*(char)
,	O
':'	O
)	O
)	O
return	O
grecs_str_is_ipv6	(*(char))->(int)
(	O
addr	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
