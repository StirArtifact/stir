typedef	O
struct	O
scrib_buf_s	struct(*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char))),long,long,array(char))
scrib_buf_t	struct
;	O
struct	O
scrib_buf_s	struct(*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char))),long,long,array(char))
{	O
scrib_buf_t	struct
*	O
sb_next	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
ssize_t	long
const	O
sb_size	long
;	O
ssize_t	long
sb_off	long
;	O
unsigned	O
char	O
sb_buf	array(char)
[	O
1	int
]	O
;	O
}	O
;	O
static	O
scrib_buf_t	struct
*	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
NULL	O
;	O
static	O
scrib_buf_t	struct
*	O
*	O
next_buf	*(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
=	O
&	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
static	O
size_t	long
const	O
hdr_sz	long
=	O
(	O
&	O
(	O
(	O
(	O
scrib_buf_t	struct
*	O
)	O
NULL	O
)	O
->	O
sb_buf	array(char)
[	O
0	int
]	O
)	O
)	O
-	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
NULL	O
)	O
;	O
void	O
scribble_init	()->(void)
(	O
void	O
)	O
{	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
NULL	O
;	O
next_buf	*(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
=	O
&	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
}	O
void	O
scribble_deinit	()->(void)
(	O
void	O
)	O
{	O
scrib_buf_t	struct
*	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
scribble_init	()->(void)
(	O
)	O
;	O
while	O
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
!=	O
NULL	O
)	O
{	O
scrib_buf_t	struct
*	O
nxt	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_next	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
free	(*(void))->(void)
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
)	O
;	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
nxt	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
}	O
}	O
void	O
scribble_free	()->(void)
(	O
void	O
)	O
{	O
scrib_buf_t	struct
*	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
while	O
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
!=	O
NULL	O
)	O
{	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_off	long
=	O
0	int
;	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_next	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
}	O
}	O
static	O
scrib_buf_t	struct
*	O
new_scribble_block	(long)->(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
(	O
size_t	long
min_size	long
)	O
{	O
scrib_buf_t	struct
*	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
NULL	O
;	O
min_size	long
=	O
ROUND_SCRIBBLE	O
(	O
min_size	long
+	O
hdr_sz	long
,	O
0x2000U	int
)	O
;	O
*	O
next_buf	*(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
=	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
malloc	(long)->(*(void))
(	O
min_size	long
)	O
;	O
if	O
(	O
*	O
next_buf	*(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
next_buf	*(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
=	O
&	O
(	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_next	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
)	O
;	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_next	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
NULL	O
;	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_off	long
=	O
0	int
;	O
{	O
size_t	long
*	O
psz	*(long)
=	O
(	O
void	O
*	O
)	O
&	O
(	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_size	long
)	O
;	O
*	O
psz	*(long)
=	O
min_size	long
-	O
hdr_sz	long
;	O
}	O
return	O
res	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
}	O
void	O
*	O
scribble_get	(long)->(*(void))
(	O
ssize_t	long
size	long
)	O
{	O
scrib_buf_t	struct
*	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
bufs	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
char	O
*	O
buf	*(char)
;	O
size	long
=	O
ROUND_SCRIBBLE	O
(	O
size	long
+	O
1	int
,	O
(	O
ssize_t	long
)	O
sizeof	O
(	O
void	O
*	O
)	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
==	O
NULL	O
)	O
{	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
new_scribble_block	(long)->(*(struct(*(struct(*`,long,long,array(char))),long,long,array(char))))
(	O
(	O
size_t	long
)	O
size	long
)	O
;	O
if	O
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
break	O
;	O
}	O
if	O
(	O
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_size	long
-	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_off	long
)	O
>=	O
size	long
)	O
break	O
;	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
=	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_next	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
;	O
}	O
buf	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_buf	array(char)
+	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_off	long
)	O
;	O
sb	*(struct(*(struct(*(struct`),long,long,array(char))),long,long,array(char)))
->	O
sb_off	long
+=	O
size	long
;	O
return	O
buf	*(char)
;	O
}	O
void	O
*	O
xscribble_get	(long)->(*(void))
(	O
ssize_t	long
sz	long
)	O
{	O
void	O
*	O
p	*(void)
=	O
scribble_get	(long)->(*(void))
(	O
sz	long
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"could not allocate %u bytes of scribble space"	*(char)
)	O
,	O
(	O
unsigned	O
int	O
)	O
sz	long
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
return	O
p	*(void)
;	O
}	O
