char	O
*	O
mu_getcwd	()->(*(char))
(	O
)	O
{	O
char	O
*	O
ret	*(char)
;	O
unsigned	O
path_max	int
;	O
char	O
buf	array(char)
[	O
128	int
]	O
;	O
errno	O
=	O
0	int
;	O
ret	*(char)
=	O
getcwd	(*(char),long)->(*(char))
(	O
buf	array(char)
,	O
sizeof	O
(	O
buf	array(char)
)	O
)	O
;	O
if	O
(	O
ret	*(char)
!=	O
NULL	O
)	O
return	O
strdup	(*(char))->(*(char))
(	O
buf	array(char)
)	O
;	O
if	O
(	O
errno	O
!=	O
ERANGE	int
)	O
return	O
NULL	O
;	O
path_max	int
=	O
128	int
;	O
path_max	int
+=	O
2	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
*	O
cwd	*(char)
=	O
(	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
path_max	int
)	O
;	O
errno	O
=	O
0	int
;	O
ret	*(char)
=	O
getcwd	(*(char),long)->(*(char))
(	O
cwd	*(char)
,	O
path_max	int
)	O
;	O
if	O
(	O
ret	*(char)
!=	O
NULL	O
)	O
return	O
ret	*(char)
;	O
if	O
(	O
errno	O
!=	O
ERANGE	int
)	O
{	O
int	O
save_errno	int
=	O
errno	O
;	O
free	(*(void))->(void)
(	O
cwd	*(char)
)	O
;	O
errno	O
=	O
save_errno	int
;	O
return	O
NULL	O
;	O
}	O
free	(*(void))->(void)
(	O
cwd	*(char)
)	O
;	O
path_max	int
+=	O
path_max	int
/	O
16	int
;	O
path_max	int
+=	O
32	int
;	O
}	O
return	O
NULL	O
;	O
}	O
