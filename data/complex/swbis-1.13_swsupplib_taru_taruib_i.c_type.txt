static	O
char	O
*	O
md5sum_adjunct_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/adjunct_md5sum"	*(char)
,	O
"*/catalog/*/adjunct_md5sum"	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
md5sum_full_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/md5sum"	*(char)
,	O
"*/catalog/*/md5sum"	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
sha1sum_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/sha1sum"	*(char)
,	O
"*/catalog/*/sha1sum"	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
sha512sum_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/sha512sum"	*(char)
,	O
"*/catalog/*/sha512sum"	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
signature_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/"	*(char)
SWBN_SIGNATURE	*(char)
,	O
"*/catalog/*/"	*(char)
SWBN_SIGNATURE	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
size_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/size"	*(char)
,	O
"*/catalog/*/size"	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
signature_header_pattern	array(*(char))
[	O
3	int
]	O
=	O
{	O
"catalog/*/"	*(char)
SWBN_SIG_HEADER	*(char)
,	O
"*/catalog/*/"	*(char)
SWBN_SIG_HEADER	*(char)
,	O
(	O
char	O
*	O
)	O
NULL	O
}	O
;	O
static	O
char	O
*	O
*	O
determine_pattern_array	(*(int),*(char))->(*(*(char)))
(	O
int	O
*	O
detpat	*(int)
,	O
char	O
*	O
name	array(char)
)	O
{	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/md5sum"	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_MD5	int
;	O
return	O
md5sum_full_pattern	array(*(char))
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/adjunct_md5sum"	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_ADJUNCT_MD5	int
;	O
return	O
md5sum_adjunct_pattern	array(*(char))
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/sha1sum"	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_SHA1	int
;	O
return	O
sha1sum_pattern	array(*(char))
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/sha512sum"	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_SHA512	int
;	O
return	O
sha512sum_pattern	array(*(char))
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/size"	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_SIZE	int
;	O
return	O
size_pattern	array(*(char))
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/"	*(char)
SWBN_SIGNATURE	*(char)
)	O
&&	O
strlen	(*(char))->(long)
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/"	*(char)
SWBN_SIGNATURE	*(char)
)	O
)	O
==	O
strlen	(*(char))->(long)
(	O
"/"	*(char)
SWBN_SIGNATURE	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_SIG	int
;	O
return	O
signature_pattern	array(*(char))
;	O
}	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/"	*(char)
SWBN_SIG_HEADER	*(char)
)	O
&&	O
strlen	(*(char))->(long)
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
"/"	*(char)
SWBN_SIG_HEADER	*(char)
)	O
)	O
==	O
strlen	(*(char))->(long)
(	O
"/"	*(char)
SWBN_SIG_HEADER	*(char)
)	O
)	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_SIG_HDR	int
;	O
return	O
signature_header_pattern	array(*(char))
;	O
}	O
else	O
{	O
*	O
detpat	*(int)
=	O
TARUIB_N_OTHER	O
;	O
return	O
(	O
char	O
*	O
*	O
)	O
NULL	O
;	O
}	O
}	O
static	O
int	O
check_useArray	(*(int),int,int)->(int)
(	O
int	O
*	O
useArray	*(int)
,	O
int	O
digest_type	int
,	O
int	O
dfd	int
)	O
{	O
int	O
ret	int
=	O
-	O
1	int
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
if	O
(	O
useArray	*(int)
)	O
{	O
if	O
(	O
digest_type	int
>	O
TARUIB_N_MAX_INDEX	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
useArray	*(int)
[	O
digest_type	int
]	O
&&	O
digest_type	int
!=	O
TARUIB_N_SIG	int
)	O
{	O
ret	int
=	O
-	O
1	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"swbis: catalog file error : type = %d\n"	*(char)
,	O
digest_type	int
)	O
;	O
}	O
else	O
{	O
useArray	*(int)
[	O
digest_type	int
]	O
++	O
;	O
ret	int
=	O
dfd	int
;	O
}	O
}	O
else	O
{	O
ret	int
=	O
dfd	int
;	O
}	O
return	O
ret	int
;	O
}	O
static	O
int	O
verbose_decode	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(int),*(int),*(char),*(char),int,int,int,int,int,int,int,int)->(int)
(	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
int	O
*	O
useArray	*(int)
,	O
int	O
*	O
detpat	*(int)
,	O
char	O
*	O
prepath	*(char)
,	O
char	O
*	O
name	array(char)
,	O
int	O
nullfd	int
,	O
int	O
digest_type	int
,	O
int	O
verbose	int
,	O
int	O
md5digestfd	int
,	O
int	O
sha1digestfd	int
,	O
int	O
sizefd	int
,	O
int	O
sigfd	int
,	O
int	O
sha512digestfd	int
)	O
{	O
int	O
i	int
=	O
0	int
;	O
int	O
ret	int
;	O
int	O
passfd	int
=	O
nullfd	int
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
*	O
*	O
pattern_array	*(*(char))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
intmax_t	long
filesize	long
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
if	O
(	O
verbose	int
==	O
0	int
)	O
return	O
nullfd	int
;	O
if	O
(	O
prepath	*(char)
&&	O
strlen	(*(char))->(long)
(	O
prepath	*(char)
)	O
)	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strstr	(*(char),*(char))->(*(char))
(	O
name	array(char)
,	O
prepath	*(char)
)	O
;	O
if	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
name	array(char)
)	O
{	O
name	array(char)
+=	O
(	O
strlen	(*(char))->(long)
(	O
prepath	*(char)
)	O
)	O
;	O
if	O
(	O
*	O
name	array(char)
==	O
'/'	O
)	O
name	array(char)
++	O
;	O
}	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
pattern_array	*(*(char))
=	O
determine_pattern_array	(*(int),*(char))->(*(*(char)))
(	O
detpat	*(int)
,	O
name	array(char)
)	O
;	O
digest_type	int
=	O
*	O
detpat	*(int)
;	O
if	O
(	O
pattern_array	*(*(char))
==	O
NULL	O
)	O
return	O
nullfd	int
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
while	O
(	O
pattern_array	*(*(char))
[	O
i	int
]	O
)	O
{	O
if	O
(	O
!	O
name	array(char)
||	O
!	O
strlen	(*(char))->(long)
(	O
name	array(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"internal error in taruib::verbose_decode\n"	*(char)
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
nullfd	int
;	O
}	O
E_DEBUG3	O
(	O
"fnmatch [%s] [%s]"	*(char)
,	O
pattern_array	*(*(char))
[	O
i	int
]	O
,	O
name	array(char)
)	O
;	O
ret	int
=	O
fnmatch	(*(char),*(char),int)->(int)
(	O
pattern_array	*(*(char))
[	O
i	int
]	O
,	O
name	array(char)
,	O
1	int
)	O
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
{	O
filesize	long
=	O
xformat_get_filesize	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
if	O
(	O
digest_type	int
==	O
TARUIB_N_MD5	int
&&	O
md5digestfd	int
>=	O
0	int
)	O
{	O
passfd	int
=	O
check_useArray	(*(int),int,int)->(int)
(	O
useArray	*(int)
,	O
digest_type	int
,	O
md5digestfd	int
)	O
;	O
}	O
else	O
if	O
(	O
digest_type	int
==	O
TARUIB_N_SIG	int
&&	O
sigfd	int
>=	O
0	int
)	O
{	O
passfd	int
=	O
check_useArray	(*(int),int,int)->(int)
(	O
useArray	*(int)
,	O
digest_type	int
,	O
sigfd	int
)	O
;	O
}	O
else	O
if	O
(	O
digest_type	int
==	O
TARUIB_N_SHA1	int
&&	O
sha1digestfd	int
>=	O
0	int
)	O
{	O
passfd	int
=	O
check_useArray	(*(int),int,int)->(int)
(	O
useArray	*(int)
,	O
digest_type	int
,	O
sha1digestfd	int
)	O
;	O
}	O
else	O
if	O
(	O
digest_type	int
==	O
TARUIB_N_SHA512	int
&&	O
sha512digestfd	int
>=	O
0	int
)	O
{	O
passfd	int
=	O
check_useArray	(*(int),int,int)->(int)
(	O
useArray	*(int)
,	O
digest_type	int
,	O
sha512digestfd	int
)	O
;	O
}	O
else	O
if	O
(	O
digest_type	int
==	O
TARUIB_N_SIZE	int
&&	O
sizefd	int
>=	O
0	int
)	O
{	O
passfd	int
=	O
check_useArray	(*(int),int,int)->(int)
(	O
useArray	*(int)
,	O
digest_type	int
,	O
sizefd	int
)	O
;	O
}	O
else	O
if	O
(	O
digest_type	int
==	O
TARUIB_N_SIG_HDR	int
)	O
{	O
passfd	int
=	O
nullfd	int
;	O
}	O
else	O
{	O
if	O
(	O
detpat	*(int)
)	O
{	O
passfd	int
=	O
nullfd	int
;	O
}	O
else	O
{	O
passfd	int
=	O
STDERR_FILENO	int
;	O
}	O
}	O
break	O
;	O
}	O
i	int
++	O
;	O
}	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
return	O
passfd	int
;	O
}	O
static	O
int	O
check_signature_name	(*(char),*(char))->(int)
(	O
char	O
*	O
sigfilename	*(char)
,	O
char	O
*	O
prevname	*(char)
)	O
{	O
int	O
ret	int
;	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strstr	(*(char),*(char))->(*(char))
(	O
sigfilename	*(char)
,	O
"/"	*(char)
SWBN_SIGNATURE	*(char)
)	O
;	O
if	O
(	O
!	O
s	*(struct(*(char),*(char),int,int,int,char,int))
||	O
*	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
+	O
strlen	(*(char))->(long)
(	O
"/"	*(char)
SWBN_SIGNATURE	*(char)
)	O
)	O
!=	O
'\0'	O
)	O
{	O
return	O
1	int
;	O
}	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
'\0'	O
;	O
if	O
(	O
(	O
p	*(char)
=	O
strstr	(*(char),*(char))->(*(char))
(	O
prevname	*(char)
,	O
sigfilename	*(char)
)	O
)	O
==	O
NULL	O
||	O
p	*(char)
!=	O
prevname	*(char)
)	O
{	O
ret	int
=	O
1	int
;	O
}	O
else	O
{	O
ret	int
=	O
0	int
;	O
}	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
's'	O
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
do_sig_safety_checks	(int,int,int)->(int)
(	O
int	O
memfd	int
,	O
int	O
sigsize	int
,	O
int	O
whichsig	int
)	O
{	O
char	O
*	O
data	*(char)
;	O
int	O
data_len	int
;	O
int	O
cnt	int
=	O
0	int
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
foundnull	int
=	O
0	int
;	O
int	O
foundchar	int
=	O
0	int
;	O
int	O
which_offset	int
=	O
0	int
;	O
int	O
nsig	int
;	O
int	O
start_sig	int
;	O
int	O
end_sig	int
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
if	O
(	O
uxfio_get_dynamic_buffer	(int,*(*(char)),*(int),*(int))->(int)
(	O
memfd	int
,	O
&	O
data	*(char)
,	O
NULL	O
,	O
&	O
data_len	int
)	O
<	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
E_DEBUG2	O
(	O
"data_len=[%d]"	*(char)
,	O
data_len	int
)	O
;	O
if	O
(	O
whichsig	int
==	O
0	int
)	O
{	O
if	O
(	O
data_len	int
<	O
sigsize	int
)	O
{	O
return	O
-	O
3	int
;	O
}	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
whichsig	int
>	O
0	int
)	O
{	O
if	O
(	O
data_len	int
<	O
(	O
whichsig	int
*	O
sigsize	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: invalid signature number specified\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
4	int
;	O
}	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
data_len	int
%	O
sigsize	int
)	O
{	O
E_DEBUG	O
(	O
"error"	*(char)
)	O
;	O
return	O
-	O
5	int
;	O
}	O
nsig	int
=	O
data_len	int
/	O
sigsize	int
;	O
E_DEBUG2	O
(	O
"number of sigs are [%d]"	*(char)
,	O
nsig	int
)	O
;	O
if	O
(	O
nsig	int
<	O
1	int
)	O
{	O
E_DEBUG	O
(	O
"error"	*(char)
)	O
;	O
return	O
-	O
6	int
;	O
}	O
if	O
(	O
whichsig	int
==	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"whichsig = 0"	*(char)
)	O
;	O
which_offset	int
=	O
(	O
nsig	int
-	O
1	int
)	O
*	O
sigsize	int
;	O
start_sig	int
=	O
end_sig	int
=	O
nsig	int
;	O
}	O
else	O
if	O
(	O
whichsig	int
>	O
0	int
)	O
{	O
E_DEBUG	O
(	O
"whichsig > 0"	*(char)
)	O
;	O
which_offset	int
=	O
(	O
whichsig	int
-	O
1	int
)	O
*	O
sigsize	int
;	O
start_sig	int
=	O
end_sig	int
=	O
whichsig	int
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"whichsig < 0"	*(char)
)	O
;	O
start_sig	int
=	O
1	int
;	O
end_sig	int
=	O
nsig	int
;	O
}	O
while	O
(	O
start_sig	int
++	O
<=	O
end_sig	int
)	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
data	*(char)
+	O
(	O
(	O
start_sig	int
-	O
2	int
)	O
*	O
sigsize	int
)	O
;	O
E_DEBUG2	O
(	O
"((start_sig-2) * sigsize) = %d"	*(char)
,	O
(	O
(	O
start_sig	int
-	O
2	int
)	O
*	O
sigsize	int
)	O
)	O
;	O
while	O
(	O
cnt	int
<	O
sigsize	int
)	O
{	O
switch	O
(	O
(	O
int	O
)	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
{	O
case	O
'\0'	O
:	O
if	O
(	O
!	O
foundchar	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: Corrupt char in sigfile\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
3	int
;	O
}	O
foundnull	int
++	O
;	O
break	O
;	O
default	O
:	O
if	O
(	O
foundnull	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: Corrupt char in sigfile\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
2	int
;	O
}	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
(	O
int	O
)	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
&&	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
!=	O
'\x0a'	O
&&	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
!=	O
'\x0d'	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: Corrupt char in sigfile\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
1	int
;	O
}	O
foundchar	int
++	O
;	O
break	O
;	O
}	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
cnt	int
++	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
do_header_safety_checks	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(char),*(char),*(char))->(int)
(	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
char	O
*	O
name	array(char)
,	O
char	O
*	O
prevname	*(char)
,	O
char	O
*	O
signature_header	*(char)
)	O
{	O
int	O
type	*(char)
;	O
mode_t	int
mode	array(char)
;	O
char	O
*	O
linkname	array(char)
;	O
intmax_t	long
sigsize	int
;	O
unsigned	O
long	O
trusted_sigsize	long
;	O
char	O
*	O
header_bytes	*(char)
;	O
int	O
ret	int
=	O
0	int
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
if	O
(	O
check_signature_name	(*(char),*(char))->(int)
(	O
name	array(char)
,	O
prevname	*(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Warning: *** The file name [%s]\n"	*(char)
"         *** indicate strong possibility of tampering.\n"	*(char)
"         *** Use of this package is a security risk.\n"	*(char)
,	O
name	array(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
header_bytes	*(char)
=	O
taru_get_recorded_header	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(int))->(*(char))
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
taruM	*(void)
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
;	O
type	*(char)
=	O
xformat_get_tar_typeflag	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(char)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
mode	array(char)
=	O
xformat_get_perms	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
linkname	array(char)
=	O
xformat_get_linkname	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(char))->(*(char))
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
NULL	O
)	O
;	O
sigsize	int
=	O
xformat_get_filesize	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
if	O
(	O
S_ISDIR	O
(	O
mode	array(char)
)	O
==	O
0	int
&&	O
(	O
(	O
mode	array(char)
&	O
S_ISUID	O
)	O
||	O
(	O
mode	array(char)
&	O
S_ISGID	O
)	O
||	O
(	O
mode	array(char)
&	O
S_ISVTX	O
)	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Warning: *** The file mode permissions on %s\n"	*(char)
"         *** indicate strong possibility of tampering.\n"	*(char)
"         *** Use of this package is a security risk.\n"	*(char)
,	O
name	array(char)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
if	O
(	O
type	*(char)
!=	O
REGTYPE	char
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Warning: *** The file type flag on %s\n"	*(char)
"         *** indicate strong possibility of tampering.\n"	*(char)
"         *** Use of this package is a security risk.\n"	*(char)
,	O
name	array(char)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
if	O
(	O
linkname	array(char)
&&	O
strlen	(*(char))->(long)
(	O
linkname	array(char)
)	O
)	O
{	O
return	O
-	O
3	int
;	O
}	O
if	O
(	O
signature_header	*(char)
)	O
{	O
taru_otoul	(*(char),*(long))->(int)
(	O
signature_header	*(char)
+	O
THB_BO_size	int
,	O
&	O
trusted_sigsize	long
)	O
;	O
if	O
(	O
header_bytes	*(char)
&&	O
(	O
int	O
)	O
trusted_sigsize	long
==	O
sigsize	int
)	O
{	O
ret	int
=	O
memcmp	(*(void),*(void),long)->(int)
(	O
signature_header	*(char)
,	O
header_bytes	*(char)
,	O
TARRECORDSIZE	int
)	O
;	O
if	O
(	O
ret	int
)	O
ret	int
=	O
-	O
5	int
;	O
}	O
else	O
{	O
ret	int
=	O
-	O
6	int
;	O
}	O
}	O
else	O
{	O
}	O
if	O
(	O
ret	int
<	O
0	int
)	O
return	O
ret	int
;	O
if	O
(	O
ret	int
>	O
0	int
)	O
return	O
-	O
ret	int
;	O
return	O
sigsize	int
;	O
}	O
static	O
int	O
read_catalog_section	(*(void),int)->(int)
(	O
void	O
*	O
vp	*(void)
,	O
int	O
ifd	int
)	O
{	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
vp	*(void)
;	O
int	O
nullfd	int
;	O
int	O
copyret	int
;	O
int	O
ret	int
;	O
int	O
retval	int
=	O
0	int
;	O
int	O
path_ret	int
;	O
int	O
is_catalog	int
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
100	int
)	O
;	O
char	O
*	O
name	array(char)
;	O
SWPATH	struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct(*`,int,int,long,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int,int)
*	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
=	O
swpath_open	(*(char))->(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))
(	O
""	*(char)
)	O
;	O
int	O
header_bytes	*(char)
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
nullfd	int
=	O
swbis_devnull_open	O
(	O
"/dev/null"	*(char)
,	O
O_RDWR	int
,	O
0	int
)	O
;	O
if	O
(	O
!	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
return	O
-	O
21	int
;	O
if	O
(	O
nullfd	int
<	O
0	int
)	O
return	O
-	O
22	int
;	O
if	O
(	O
ifd	int
<	O
0	int
)	O
return	O
-	O
32	int
;	O
taruib_set_fd	(int)->(void)
(	O
nullfd	int
)	O
;	O
taruib_set_overflow_release	(int)->(void)
(	O
0	int
)	O
;	O
while	O
(	O
(	O
ret	int
=	O
xformat_read_header	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
)	O
>	O
0	int
)	O
{	O
header_bytes	*(char)
=	O
ret	int
;	O
retval	int
+=	O
ret	int
;	O
if	O
(	O
xformat_is_end_of_archive	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
)	O
{	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
swpath_close	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
swbis_devnull_close	O
(	O
nullfd	int
)	O
;	O
return	O
0	int
;	O
}	O
xformat_get_name	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
name	array(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
path_ret	int
=	O
swpath_parse_path	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)),*(char))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
,	O
name	array(char)
)	O
;	O
if	O
(	O
path_ret	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"read_catalog_section:"	*(char)
" error parsing path [%s].\n"	*(char)
,	O
name	array(char)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
is_catalog	int
=	O
swpath_get_is_catalog	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
if	O
(	O
is_catalog	int
!=	O
SWPATH_CTYPE_STORE	int
)	O
{	O
taruib_set_overflow_release	(int)->(void)
(	O
0	int
)	O
;	O
taruib_set_fd	(int)->(void)
(	O
0	int
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
nullfd	int
,	O
ifd	int
)	O
;	O
if	O
(	O
copyret	int
<	O
0	int
)	O
{	O
swpath_close	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
swbis_devnull_close	O
(	O
nullfd	int
)	O
;	O
return	O
copyret	int
;	O
}	O
taruib_set_fd	(int)->(void)
(	O
nullfd	int
)	O
;	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
}	O
else	O
{	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
swpath_close	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
swbis_devnull_close	O
(	O
nullfd	int
)	O
;	O
return	O
0	int
;	O
}	O
}	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
swpath_close	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
swbis_devnull_close	O
(	O
nullfd	int
)	O
;	O
return	O
1	int
;	O
}	O
static	O
int	O
taruib_write_signedfile_if_i	(*(void),int,*(char),int,int,int,int,int,*(int))->(int)
(	O
void	O
*	O
vp	*(void)
,	O
int	O
ofd	int
,	O
char	O
*	O
sigfile	*(char)
,	O
int	O
md5digestfd	int
,	O
int	O
sha1digestfd	int
,	O
int	O
sizefd	int
,	O
int	O
sigfd	int
,	O
int	O
sha512digestfd	int
,	O
int	O
*	O
p_has_storage_section	*(int)
)	O
{	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
vp	*(void)
;	O
int	O
i	int
;	O
int	O
nullfd	int
=	O
swbis_devnull_open	O
(	O
"/dev/null"	*(char)
,	O
O_RDWR	int
,	O
0	int
)	O
;	O
int	O
memfd	int
=	O
-	O
1	int
;	O
int	O
ifd	int
=	O
xformat_get_ifd	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
int	O
passfd	int
;	O
int	O
copyret	int
;	O
int	O
ret	int
;	O
int	O
retval	int
=	O
0	int
;	O
int	O
is_catalog	int
;	O
char	O
*	O
name	array(char)
;	O
char	O
*	O
prepath	*(char)
;	O
int	O
debug	int
=	O
0	int
;	O
int	O
header_bytes	*(char)
;	O
int	O
pattern_code	int
=	O
0	int
;	O
int	O
verbose	int
=	O
1	int
;	O
int	O
path_ret	int
;	O
int	O
detected_pattern_code	int
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
100	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
oldnamebuf	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
100	int
)	O
;	O
SWPATH	struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct(*`,int,int,long,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int,int)
*	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
=	O
swpath_open	(*(char))->(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))
(	O
""	*(char)
)	O
;	O
int	O
useArray	*(int)
[	O
TARUIB_N_MAX_INDEX	int
+	O
1	int
]	O
;	O
int	O
sigsize	int
=	O
0	int
;	O
int	O
sighdr_len	int
=	O
0	int
;	O
int	O
got_md5	int
=	O
0	int
;	O
int	O
got_sha1	int
=	O
0	int
;	O
int	O
got_sha512	int
=	O
0	int
;	O
int	O
got_size	int
=	O
0	int
;	O
int	O
got_sig	int
=	O
0	int
;	O
char	O
*	O
sighdr_addr	*(char)
=	O
NULL	O
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
*	O
p_has_storage_section	*(int)
=	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
TARUIB_N_MAX_INDEX	int
;	O
i	int
++	O
)	O
useArray	*(int)
[	O
i	int
]	O
=	O
0	int
;	O
if	O
(	O
!	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
return	O
-	O
21	int
;	O
if	O
(	O
nullfd	int
<	O
0	int
)	O
return	O
-	O
22	int
;	O
if	O
(	O
ifd	int
<	O
0	int
)	O
return	O
-	O
32	int
;	O
taruib_set_fd	(int)->(void)
(	O
nullfd	int
)	O
;	O
taruib_set_overflow_release	(int)->(void)
(	O
0	int
)	O
;	O
taru_set_header_recording	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),int)->(void)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
taruM	*(void)
,	O
1	int
)	O
;	O
while	O
(	O
(	O
ret	int
=	O
xformat_read_header	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
)	O
>	O
0	int
)	O
{	O
header_bytes	*(char)
=	O
ret	int
;	O
retval	int
+=	O
ret	int
;	O
if	O
(	O
xformat_is_end_of_archive	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
)	O
{	O
taruib_set_fd	(int)->(void)
(	O
ofd	int
)	O
;	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
retval	int
=	O
ret	int
;	O
taruib_set_fd	(int)->(void)
(	O
0	int
)	O
;	O
*	O
p_has_storage_section	*(int)
=	O
0	int
;	O
break	O
;	O
}	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
oldnamebuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
xformat_get_name	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
name	array(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
path_ret	int
=	O
swpath_parse_path	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)),*(char))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
,	O
name	array(char)
)	O
;	O
if	O
(	O
path_ret	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" error parsing path [%s].\n"	*(char)
,	O
name	array(char)
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	*(char)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
is_catalog	int
=	O
swpath_get_is_catalog	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
if	O
(	O
debug	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s : %d\n"	*(char)
,	O
name	array(char)
,	O
is_catalog	int
)	O
;	O
prepath	*(char)
=	O
swpath_get_prepath	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(*(char))
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
if	O
(	O
is_catalog	int
==	O
SWPATH_CTYPE_CAT	int
)	O
{	O
taruib_set_overflow_release	(int)->(void)
(	O
0	int
)	O
;	O
taruib_set_fd	(int)->(void)
(	O
0	int
)	O
;	O
passfd	int
=	O
verbose_decode	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(int),*(int),*(char),*(char),int,int,int,int,int,int,int,int)->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
useArray	*(int)
,	O
&	O
detected_pattern_code	int
,	O
prepath	*(char)
,	O
name	array(char)
,	O
nullfd	int
,	O
pattern_code	int
,	O
verbose	int
,	O
md5digestfd	int
,	O
sha1digestfd	int
,	O
sizefd	int
,	O
sigfd	int
,	O
sha512digestfd	int
)	O
;	O
pattern_code	int
=	O
detected_pattern_code	int
;	O
if	O
(	O
passfd	int
<	O
0	int
)	O
{	O
E_DEBUG2	O
(	O
"name=[%s] passfd < 0 error"	*(char)
,	O
name	array(char)
)	O
;	O
copyret	int
=	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_OTHER	O
)	O
{	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_SIG_HDR	int
)	O
{	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
if	O
(	O
got_sig	int
)	O
{	O
return	O
-	O
3	int
;	O
}	O
memfd	int
=	O
swlib_open_memfd	()->(int)
(	O
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
memfd	int
,	O
ifd	int
)	O
;	O
sighdr_addr	*(char)
=	O
uxfio_get_fd_mem	(int,*(int))->(*(char))
(	O
memfd	int
,	O
&	O
sighdr_len	int
)	O
;	O
if	O
(	O
sighdr_addr	*(char)
==	O
NULL	O
||	O
(	O
sighdr_len	int
!=	O
512	int
)	O
)	O
{	O
return	O
-	O
4	int
;	O
}	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_SIG	int
)	O
{	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
if	O
(	O
(	O
sigsize	int
=	O
do_header_safety_checks	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),*(char),*(char),*(char))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
oldnamebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
sighdr_addr	*(char)
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nWarning: *** The signature header checks failed (status=%d)\n"	*(char)
"         *** This indicates possibility of tampering or corruption.\n"	*(char)
"         *** Use of this package is a security risk.\n"	*(char)
,	O
sigsize	int
)	O
;	O
return	O
-	O
5	int
;	O
}	O
got_sig	int
++	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
if	O
(	O
(	O
sigsize	int
!=	O
512	int
&&	O
sigsize	int
!=	O
1024	int
)	O
||	O
sigsize	int
!=	O
copyret	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nWarning: *** The signature file size and data length does not match. (%d %d)\n"	*(char)
"         *** This indicates possibility of tampering or corruption.\n"	*(char)
"         *** Use of this package is a security risk.\n"	*(char)
,	O
sigsize	int
,	O
copyret	int
)	O
;	O
return	O
-	O
7	int
;	O
}	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_MD5	int
)	O
{	O
got_md5	int
++	O
;	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_SHA1	int
)	O
{	O
got_sha1	int
++	O
;	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_SHA512	int
)	O
{	O
got_sha512	int
++	O
;	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
}	O
else	O
if	O
(	O
pattern_code	int
==	O
TARUIB_N_SIZE	int
)	O
{	O
got_size	int
++	O
;	O
E_DEBUG3	O
(	O
"name=[%s] pattern code = %d"	*(char)
,	O
name	array(char)
,	O
pattern_code	int
)	O
;	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
}	O
else	O
if	O
(	O
passfd	int
==	O
nullfd	int
)	O
{	O
copyret	int
=	O
xformat_copy_pass	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
passfd	int
,	O
ifd	int
)	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"internal error loc = 5a\n"	*(char)
)	O
;	O
copyret	int
=	O
-	O
1	int
;	O
}	O
if	O
(	O
copyret	int
<	O
0	int
)	O
{	O
swpath_close	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
oldnamebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
swbis_devnull_close	O
(	O
nullfd	int
)	O
;	O
return	O
-	O
8	int
;	O
}	O
E_DEBUG3	O
(	O
"copyret = %d for %s"	*(char)
,	O
copyret	int
,	O
name	array(char)
)	O
;	O
taruib_set_fd	(int)->(void)
(	O
nullfd	int
)	O
;	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
}	O
else	O
if	O
(	O
is_catalog	int
==	O
SWPATH_CTYPE_DIR	O
)	O
{	O
if	O
(	O
debug	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"in leading dirs\n"	*(char)
)	O
;	O
taruib_set_fd	(int)->(void)
(	O
ofd	int
)	O
;	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
}	O
else	O
{	O
taruib_set_fd	(int)->(void)
(	O
ofd	int
)	O
;	O
taruib_clear_buffer	()->(int)
(	O
)	O
;	O
retval	int
=	O
ret	int
;	O
taruib_set_fd	(int)->(void)
(	O
0	int
)	O
;	O
break	O
;	O
}	O
taruib_set_overflow_release	(int)->(void)
(	O
1	int
)	O
;	O
}	O
taru_set_header_recording	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),int)->(void)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
->	O
taruM	*(void)
,	O
0	int
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
oldnamebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
namebuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
swpath_close	(*(struct(int,int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*`,*`)),int,int,int)))->(int)
(	O
swpath	*(struct(int,int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(int,int,*(struct`),*(struct`))),int,int,int))
)	O
;	O
swbis_devnull_close	O
(	O
nullfd	int
)	O
;	O
if	O
(	O
got_sha1	int
&&	O
!	O
got_md5	int
)	O
{	O
return	O
-	O
9	int
;	O
}	O
if	O
(	O
!	O
got_sig	int
&&	O
!	O
got_md5	int
&&	O
!	O
got_sha1	int
)	O
{	O
return	O
-	O
TARUIB_TEXIT_NOT_SIGNED	int
;	O
}	O
if	O
(	O
!	O
got_sig	int
||	O
!	O
got_md5	int
)	O
{	O
return	O
-	O
10	int
;	O
}	O
if	O
(	O
sigsize	int
==	O
0	int
)	O
{	O
return	O
-	O
11	int
;	O
}	O
if	O
(	O
got_sig	int
&&	O
got_md5	int
)	O
{	O
return	O
sigsize	int
;	O
}	O
return	O
-	O
12	int
;	O
}	O
static	O
void	O
truncate_sigfile	(*(char))->(void)
(	O
char	O
*	O
sigfile	*(char)
)	O
{	O
int	O
sigfd	int
=	O
open	(*(char),int)->(int)
(	O
sigfile	*(char)
,	O
O_RDWR	int
|	O
O_TRUNC	int
|	O
O_CREAT	int
,	O
0600	int
)	O
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
if	O
(	O
sigfd	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"open failed ( %s ) : %s\n"	*(char)
,	O
sigfile	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
;	O
}	O
close	*((*(void))->(int))
(	O
sigfd	int
)	O
;	O
return	O
;	O
}	O
static	O
int	O
write_selected_sig_i	(int,int,int,int)->(int)
(	O
int	O
sigfd	int
,	O
int	O
memfd	int
,	O
int	O
whichsig	int
,	O
int	O
sigsize	int
)	O
{	O
int	O
offset	int
;	O
int	O
ret	int
;	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
*	O
sigbuf	*(char)
;	O
char	O
*	O
nsig	int
;	O
if	O
(	O
whichsig	int
==	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
whichsig	int
<	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
offset	int
=	O
sigsize	int
*	O
(	O
whichsig	int
-	O
1	int
)	O
;	O
}	O
if	O
(	O
uxfio_lseek	(int,long,int)->(long)
(	O
memfd	int
,	O
(	O
off_t	long
)	O
0	int
,	O
SEEK_END	int
)	O
<	O
0	int
)	O
{	O
return	O
-	O
1	int
;	O
}	O
uxfio_write	(int,*(void),long)->(long)
(	O
memfd	int
,	O
"\0"	*(char)
,	O
1	int
)	O
;	O
sigbuf	*(char)
=	O
uxfio_get_fd_mem	(int,*(int))->(*(char))
(	O
memfd	int
,	O
NULL	O
)	O
;	O
nsig	int
=	O
sigbuf	*(char)
+	O
offset	int
;	O
if	O
(	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strstr	(*(char),*(char))->(*(char))
(	O
nsig	int
,	O
"\n\n\n\n\n\n\n\n\n\n"	*(char)
)	O
)	O
!=	O
NULL	O
)	O
{	O
*	O
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
+	O
4	int
)	O
=	O
'\0'	O
;	O
ret	int
=	O
uxfio_write	(int,*(void),long)->(long)
(	O
sigfd	int
,	O
nsig	int
,	O
strlen	(*(char))->(long)
(	O
nsig	int
)	O
)	O
;	O
if	O
(	O
ret	int
!=	O
(	O
int	O
)	O
strlen	(*(char))->(long)
(	O
nsig	int
)	O
)	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
ret	int
=	O
uxfio_write	(int,*(void),long)->(long)
(	O
sigfd	int
,	O
nsig	int
,	O
sigsize	int
)	O
;	O
if	O
(	O
ret	int
!=	O
sigsize	int
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
write_selected_sig	(int,int,int,int)->(int)
(	O
int	O
sigfd	int
,	O
int	O
memfd	int
,	O
int	O
whichsig	int
,	O
int	O
sigsize	int
)	O
{	O
int	O
len	int
;	O
int	O
start_sig	int
,	O
end_sig	int
;	O
int	O
ret	int
;	O
len	int
=	O
uxfio_lseek	(int,long,int)->(long)
(	O
memfd	int
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
if	O
(	O
len	int
<	O
0	int
)	O
return	O
-	O
2	int
;	O
end_sig	int
=	O
len	int
/	O
sigsize	int
;	O
if	O
(	O
whichsig	int
==	O
0	int
)	O
{	O
start_sig	int
=	O
end_sig	int
;	O
}	O
else	O
if	O
(	O
whichsig	int
<	O
0	int
)	O
{	O
start_sig	int
=	O
1	int
;	O
}	O
else	O
{	O
start_sig	int
=	O
whichsig	int
;	O
end_sig	int
=	O
whichsig	int
;	O
}	O
while	O
(	O
start_sig	int
++	O
<=	O
end_sig	int
)	O
{	O
ret	int
=	O
write_selected_sig_i	(int,int,int,int)->(int)
(	O
sigfd	int
,	O
memfd	int
,	O
start_sig	int
-	O
1	int
,	O
sigsize	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
report_dig_error	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,*(char),int,int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
msgfd	int
,	O
int	O
efd	int
,	O
char	O
*	O
digname	*(char)
,	O
int	O
dlen	int
,	O
int	O
verbose	int
)	O
{	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s FAIL (Bad)\n"	*(char)
,	O
digname	*(char)
)	O
;	O
if	O
(	O
dlen	int
>	O
0	int
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
efd	int
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: package integrity error: archive %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
digname	*(char)
)	O
;	O
}	O
if	O
(	O
dlen	int
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: Warning: %s digest not present\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
digname	*(char)
)	O
;	O
}	O
}	O
int	O
taruib_write_signedfile_if	(*(void),int,*(char),int,int,int)->(int)
(	O
void	O
*	O
vp	*(void)
,	O
int	O
ofd	int
,	O
char	O
*	O
sigfile	*(char)
,	O
int	O
verbose	int
,	O
int	O
whichsig	int
,	O
int	O
logger_fd	int
)	O
{	O
pid_t	int
pid	int
[	O
3	int
]	O
;	O
int	O
status	int
[	O
3	int
]	O
;	O
int	O
md5dig	array(int)
[	O
2	int
]	O
;	O
int	O
sha1dig	array(int)
[	O
2	int
]	O
;	O
int	O
sha512dig	array(int)
[	O
2	int
]	O
;	O
int	O
filesizefd	array(int)
[	O
2	int
]	O
;	O
int	O
digfile	array(int)
[	O
2	int
]	O
;	O
int	O
sigpipefd	array(int)
[	O
2	int
]	O
;	O
int	O
msgfd	int
;	O
char	O
md5digbuf	array(char)
[	O
1024	int
]	O
;	O
char	O
sha1digbuf	array(char)
[	O
1024	int
]	O
;	O
char	O
sha512digbuf	array(char)
[	O
1024	int
]	O
;	O
char	O
sizebuf	array(char)
[	O
1024	int
]	O
;	O
char	O
calc_md5digbuf	array(char)
[	O
64	int
]	O
;	O
char	O
calc_sha1digbuf	array(char)
[	O
64	int
]	O
;	O
char	O
calc_sha512digbuf	array(char)
[	O
129	int
]	O
;	O
char	O
calc_size	array(char)
[	O
64	int
]	O
;	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
=	O
(	O
XFORMAT	struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct(int,int,int,array(char),int,int,int,*`,array(int),int,int,*`,*`,struct`,struct`,int,int,array(int),int,*`,*`,*`,*`)),int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`)),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct(*`,int,long,*`,*`,int)),*(struct(*`,int,long,*`,*`,int)),*((*`,*`,*`)->(int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,*(struct(*`,int,long,*`,*`,int)),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct(int,int,*`)),*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),int)),*(struct(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*`,*`,*`,*`,char,char,char,char,int,int,*`,*`,long,long,long,long)))),*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(struct(*`,*`)),*(void))),*(struct(int,int,int,int,*(struct(int,int,*`)))),*(struct(int,int,int,int,*(struct(int,int,*`)))),int,int,int,*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
)	O
vp	*(void)
;	O
int	O
sigsize	int
;	O
int	O
ifd	int
=	O
xformat_get_ifd	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
;	O
int	O
efd	int
;	O
int	O
sigfd	int
;	O
int	O
ret	int
;	O
int	O
pri_ret	int
;	O
int	O
memfd	int
;	O
int	O
ifret	int
;	O
int	O
has_storage_section	int
;	O
unsigned	O
long	O
actual_read_size	long
;	O
unsigned	O
long	O
claimed_size	long
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
;	O
E_DEBUG	O
(	O
"ENTERING"	*(char)
)	O
;	O
E_DEBUG2	O
(	O
"ENTERING whichsig=[%d]"	*(char)
,	O
whichsig	int
)	O
;	O
msgfd	int
=	O
logger_fd	int
;	O
efd	int
=	O
STDERR_FILENO	int
;	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
sizebuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
sizebuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
sha1digbuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
sha1digbuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
sha512digbuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
sha512digbuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
md5digbuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
md5digbuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
calc_sha1digbuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
calc_sha1digbuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
calc_sha512digbuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
calc_sha512digbuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
calc_md5digbuf	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
calc_md5digbuf	array(char)
)	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
calc_size	array(char)
,	O
'\0'	O
,	O
sizeof	O
(	O
calc_size	array(char)
)	O
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
uxfio_lseek	(int,long,int)->(long)
(	O
ifd	int
,	O
0	int
,	O
UXFIO_SEEK_VCUR	int
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"uxfio_lseek error fd=%d loc=1 ret=%d\n"	*(char)
,	O
ifd	int
,	O
ret	int
)	O
;	O
return	O
1	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
uxfio_fcntl	(int,int,int)->(int)
(	O
ifd	int
,	O
UXFIO_F_SET_BUFTYPE	O
,	O
UXFIO_BUFTYPE_DYNAMIC_MEM	int
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
read_catalog_section	(*(void),int)->(int)
(	O
vp	*(void)
,	O
ifd	int
)	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"internal error from read_catalog_section, ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
return	O
2	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
uxfio_lseek	(int,long,int)->(long)
(	O
ifd	int
,	O
0	int
,	O
UXFIO_SEEK_VSET	int
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"uxfio_lseek error loc=2 ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
return	O
3	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
pipe	(array(int))->(int)
(	O
digfile	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
sha1dig	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
sha512dig	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
filesizefd	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
md5dig	array(int)
)	O
;	O
pipe	(array(int))->(int)
(	O
sigpipefd	array(int)
)	O
;	O
pid	int
[	O
0	int
]	O
=	O
swfork	O
(	O
(	O
sigset_t	struct(array(long))
*	O
)	O
(	O
NULL	O
)	O
)	O
;	O
if	O
(	O
pid	int
[	O
0	int
]	O
<	O
0	int
)	O
return	O
1	int
;	O
if	O
(	O
pid	int
[	O
0	int
]	O
==	O
0	int
)	O
{	O
int	O
cret	int
;	O
close	*((*(void))->(int))
(	O
filesizefd	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sha1dig	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sha512dig	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
md5dig	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
digfile	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sigpipefd	array(int)
[	O
0	int
]	O
)	O
;	O
E_DEBUG	O
(	O
"entering taruib_write_signedfile_if_i in child"	*(char)
)	O
;	O
cret	int
=	O
taruib_write_signedfile_if_i	(*(void),int,*(char),int,int,int,int,int,*(int))->(int)
(	O
vp	*(void)
,	O
digfile	array(int)
[	O
1	int
]	O
,	O
sigfile	*(char)
,	O
md5dig	array(int)
[	O
1	int
]	O
,	O
sha1dig	array(int)
[	O
1	int
]	O
,	O
filesizefd	array(int)
[	O
1	int
]	O
,	O
sigpipefd	array(int)
[	O
1	int
]	O
,	O
sha512dig	array(int)
[	O
1	int
]	O
,	O
&	O
has_storage_section	int
)	O
;	O
E_DEBUG2	O
(	O
"taruib_write_signedfile_if_i cret=%d"	*(char)
,	O
cret	int
)	O
;	O
if	O
(	O
cret	int
<=	O
0	int
)	O
{	O
E_DEBUG2	O
(	O
"exiting with value cret=%d"	*(char)
,	O
cret	int
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
if	O
(	O
cret	int
==	O
0	int
)	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_ERROR_CONDITION_0	int
)	O
;	O
else	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_ERROR_CONDITION_1	int
)	O
;	O
}	O
sigsize	int
=	O
cret	int
;	O
uxfio_fcntl	(int,int,int)->(int)
(	O
ifd	int
,	O
UXFIO_F_SET_BUFACTIVE	O
,	O
UXFIO_OFF	int
)	O
;	O
if	O
(	O
has_storage_section	int
)	O
{	O
if	O
(	O
xformat_file_has_data	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))))->(int)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
)	O
)	O
{	O
E_DEBUG	O
(	O
"xformat_file_has_data is true"	*(char)
)	O
;	O
E_DEBUG	O
(	O
"into xformat_copy_pass2"	*(char)
)	O
;	O
if	O
(	O
xformat_copy_pass2	(*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*`,int,int,*`,*`,*`,*`,*`,*`,*`,int,int,int,array(struct(*(char),*(char),int)),*`,*`,int,int,*`,*`,*`,*`,int,*`,int,int,*`,int,long,long,int,int,int,int,*`,*`,*`,int)),*(struct(*`)),*(struct(int,int,*`)),*(struct(int,*`,*`)),*(struct(int,int,int,int,*`)),*(struct(int,int,int,int,*`)),int,int,int,*(struct(char,*`,int,int,int,*`,*`,int,*`,int,int,int,*`,*`,int,*`,*`,*`)),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)))),int,int,int)->(long)
(	O
package	*(struct(int,int,enum(int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int),int,long,int,*(struct(*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,int,array(struct(*(char),*(char),int)),*(char),*(char),int,int,*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(struct`),int,*(struct`),int,int,*(struct`),int,long,long,int,int,int,int,*((*`,*`)->(int)),*(struct`),*(struct`),int)),*(struct(*(struct`))),*(struct(int,int,*(struct`))),*(struct(int,*(struct`),*(void))),*(struct(int,int,int,int,*(struct`))),*(struct(int,int,int,int,*(struct`))),int,int,int,*(struct(char,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),int,int,int,*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`))),struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int))))
,	O
digfile	array(int)
[	O
1	int
]	O
,	O
ifd	int
,	O
-	O
1	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" error from xformat_copy_pass2\n"	*(char)
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_ERROR_CONDITION_2	int
)	O
;	O
}	O
E_DEBUG	O
(	O
"out of xformat_copy_pass2"	*(char)
)	O
;	O
}	O
}	O
close	*((*(void))->(int))
(	O
sigpipefd	array(int)
[	O
1	int
]	O
)	O
;	O
E_DEBUG	O
(	O
"entering taruib_write_pass_files"	*(char)
)	O
;	O
cret	int
=	O
taruib_write_pass_files	(*(void),int,int)->(int)
(	O
vp	*(void)
,	O
digfile	array(int)
[	O
1	int
]	O
,	O
-	O
1	int
)	O
;	O
E_DEBUG2	O
(	O
"taruib_write_pass_files exited cret=%d"	*(char)
,	O
cret	int
)	O
;	O
if	O
(	O
cret	int
<	O
0	int
)	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_ERROR_CONDITION_3	int
)	O
;	O
E_DEBUG2	O
(	O
"sigsize=%d"	*(char)
,	O
sigsize	int
)	O
;	O
if	O
(	O
sigsize	int
==	O
512	int
)	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_512	int
)	O
;	O
if	O
(	O
sigsize	int
==	O
1024	int
)	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_1024	int
)	O
;	O
_exit	(int)->(void)
(	O
TARUIB_TEXIT_ERROR_CONDITION_4	int
)	O
;	O
}	O
close	*((*(void))->(int))
(	O
filesizefd	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sha1dig	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sha512dig	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
md5dig	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
digfile	array(int)
[	O
1	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sigpipefd	array(int)
[	O
1	int
]	O
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
calc_sha1digbuf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
calc_sha512digbuf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
calc_md5digbuf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
swlib_digests	(int,*(char),*(char),*(char),*(char))->(int)
(	O
digfile	array(int)
[	O
0	int
]	O
,	O
calc_md5digbuf	array(char)
,	O
calc_sha1digbuf	array(char)
,	O
calc_size	array(char)
,	O
calc_sha512digbuf	array(char)
)	O
;	O
if	O
(	O
ret	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if: error reading archive data\n"	*(char)
)	O
;	O
return	O
15	int
;	O
}	O
md5digbuf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
sha1digbuf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
sha512digbuf	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
safeio	(*((int,*(void),long)->(long)),int,*(void),long)->(long)
(	O
read	*((*(void),*(char),long)->(long))
,	O
md5dig	array(int)
[	O
0	int
]	O
,	O
md5digbuf	array(char)
,	O
513	int
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii digest loc=1\n"	*(char)
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
4	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
||	O
(	O
ret	int
>	O
0	int
&&	O
ret	int
<	O
MD5_ASCII_LEN	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii digest loc=2, ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
5	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
safeio	(*((int,*(void),long)->(long)),int,*(void),long)->(long)
(	O
read	*((*(void),*(char),long)->(long))
,	O
sha1dig	array(int)
[	O
0	int
]	O
,	O
sha1digbuf	array(char)
,	O
513	int
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii sha1 digest loc=1\n"	*(char)
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
6	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
safeio	(*((int,*(void),long)->(long)),int,*(void),long)->(long)
(	O
read	*((*(void),*(char),long)->(long))
,	O
sha512dig	array(int)
[	O
0	int
]	O
,	O
sha512digbuf	array(char)
,	O
513	int
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii sha512 digest loc=1\n"	*(char)
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
10	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
||	O
(	O
ret	int
>	O
0	int
&&	O
ret	int
<	O
SHA1_ASCII_LEN	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii sha1 digest loc=2,"	*(char)
" ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
7	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
safeio	(*((int,*(void),long)->(long)),int,*(void),long)->(long)
(	O
read	*((*(void),*(char),long)->(long))
,	O
filesizefd	array(int)
[	O
0	int
]	O
,	O
sizebuf	array(char)
,	O
513	int
)	O
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii size loc=1\n"	*(char)
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
16	int
;	O
}	O
swlib_squash_all_trailing_vnewline	(*(char))->(void)
(	O
sizebuf	array(char)
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
||	O
(	O
ret	int
>	O
0	int
&&	O
ret	int
<	O
30	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading ascii size loc=2,"	*(char)
" ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
17	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
memfd	int
=	O
swlib_open_memfd	()->(int)
(	O
)	O
;	O
ret	int
=	O
swlib_pipe_pump	(int,int)->(int)
(	O
memfd	int
,	O
sigpipefd	array(int)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if:"	*(char)
" internal error reading sigpipdfd,  ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
return	O
18	int
;	O
}	O
E_DEBUG2	O
(	O
"ret from sigpipefd is [%d]"	*(char)
,	O
ret	int
)	O
;	O
if	O
(	O
uxfio_lseek	(int,long,int)->(long)
(	O
memfd	int
,	O
0	int
,	O
SEEK_SET	int
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taruib_write_signedfile_if: internal error : uxfio_lseek\n"	*(char)
)	O
;	O
truncate_sigfile	(*(char))->(void)
(	O
sigfile	*(char)
)	O
;	O
return	O
8	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
close	*((*(void))->(int))
(	O
sigpipefd	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
digfile	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
md5dig	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
filesizefd	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sha1dig	array(int)
[	O
0	int
]	O
)	O
;	O
close	*((*(void))->(int))
(	O
sha512dig	array(int)
[	O
0	int
]	O
)	O
;	O
swlib_wait_on_all_pids	(*(int),int,*(int),int,int)->(int)
(	O
pid	int
,	O
1	int
,	O
status	int
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
WIFEXITED	O
(	O
status	int
[	O
0	int
]	O
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: %d exited abnormally : status = %d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
int	O
)	O
pid	int
[	O
0	int
]	O
,	O
status	int
[	O
0	int
]	O
)	O
;	O
return	O
9	int
;	O
}	O
ifret	int
=	O
WEXITSTATUS	O
(	O
status	int
[	O
0	int
]	O
)	O
;	O
if	O
(	O
ifret	int
==	O
TARUIB_TEXIT_NOT_SIGNED	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: Package not signed.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
12	int
;	O
}	O
E_DEBUG2	O
(	O
"ifret=%d"	*(char)
,	O
ifret	int
)	O
;	O
if	O
(	O
ifret	int
!=	O
TARUIB_TEXIT_512	int
&&	O
ifret	int
!=	O
TARUIB_TEXIT_1024	int
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: pid[%d] exited with ifret=%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
int	O
)	O
pid	int
[	O
0	int
]	O
,	O
ifret	int
)	O
;	O
return	O
13	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
ifret	int
==	O
TARUIB_TEXIT_512	int
)	O
sigsize	int
=	O
512	int
;	O
else	O
sigsize	int
=	O
1024	int
;	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: Archive digest: "	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
}	O
pri_ret	int
=	O
1	int
;	O
calc_md5digbuf	array(char)
[	O
MD5_ASCII_LEN	int
]	O
=	O
'\0'	O
;	O
md5digbuf	array(char)
[	O
MD5_ASCII_LEN	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
md5digbuf	array(char)
)	O
==	O
MD5_ASCII_LEN	int
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
calc_md5digbuf	array(char)
,	O
md5digbuf	array(char)
,	O
MD5_ASCII_LEN	int
)	O
==	O
0	int
)	O
{	O
pri_ret	int
=	O
0	int
;	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"md5 OK (Good)\n"	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
pri_ret	int
=	O
2	int
;	O
if	O
(	O
verbose	int
>=	O
1	int
)	O
{	O
report_dig_error	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,*(char),int,int)->(void)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
msgfd	int
,	O
efd	int
,	O
"md5"	*(char)
,	O
strlen	(*(char))->(long)
(	O
md5digbuf	array(char)
)	O
,	O
verbose	int
)	O
;	O
}	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: Archive digest: "	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
}	O
calc_sha1digbuf	array(char)
[	O
SHA1_ASCII_LEN	int
]	O
=	O
'\0'	O
;	O
sha1digbuf	array(char)
[	O
SHA1_ASCII_LEN	int
]	O
=	O
'\0'	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
sha1digbuf	array(char)
)	O
==	O
SHA1_ASCII_LEN	int
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
calc_sha1digbuf	array(char)
,	O
sha1digbuf	array(char)
,	O
SHA1_ASCII_LEN	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"sha1 OK (Good)\n"	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
report_dig_error	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,*(char),int,int)->(void)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
msgfd	int
,	O
efd	int
,	O
"sha1"	*(char)
,	O
strlen	(*(char))->(long)
(	O
md5digbuf	array(char)
)	O
,	O
verbose	int
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
sha1digbuf	array(char)
)	O
)	O
{	O
pri_ret	int
=	O
1	int
;	O
}	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: Archive size: "	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
sizebuf	array(char)
)	O
)	O
{	O
int	O
size_failed	int
;	O
char	O
*	O
e	*(struct(*(char),int,int,*(char),int,int))
;	O
size_failed	int
=	O
1	int
;	O
E_DEBUG2	O
(	O
"calc_size is [%s]"	*(char)
,	O
calc_size	array(char)
)	O
;	O
actual_read_size	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
calc_size	array(char)
,	O
&	O
e	*(struct(*(char),int,int,*(char),int,int))
,	O
10	int
)	O
;	O
if	O
(	O
(	O
int	O
)	O
(	O
e	*(struct(*(char),int,int,*(char),int,int))
-	O
calc_size	array(char)
)	O
==	O
0	int
||	O
actual_read_size	long
==	O
0	int
)	O
{	O
pri_ret	int
=	O
1	int
;	O
}	O
E_DEBUG2	O
(	O
"file size is [%s]"	*(char)
,	O
sizebuf	array(char)
)	O
;	O
claimed_size	long
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
sizebuf	array(char)
,	O
&	O
e	*(struct(*(char),int,int,*(char),int,int))
,	O
10	int
)	O
;	O
if	O
(	O
(	O
int	O
)	O
(	O
e	*(struct(*(char),int,int,*(char),int,int))
-	O
calc_size	array(char)
)	O
==	O
0	int
||	O
claimed_size	long
==	O
0	int
)	O
{	O
pri_ret	int
=	O
1	int
;	O
}	O
if	O
(	O
claimed_size	long
!=	O
actual_read_size	long
)	O
{	O
pri_ret	int
=	O
1	int
;	O
size_failed	int
=	O
1	int
;	O
}	O
else	O
{	O
size_failed	int
=	O
0	int
;	O
}	O
if	O
(	O
size_failed	int
)	O
{	O
if	O
(	O
verbose	int
>=	O
1	int
)	O
{	O
report_dig_error	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,*(char),int,int)->(void)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
msgfd	int
,	O
efd	int
,	O
"size"	*(char)
,	O
-	O
1	int
,	O
verbose	int
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"OK (Good)\n"	*(char)
)	O
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
verbose	int
>=	O
2	int
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
efd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"Warning, the package does not contain an archive size attribute.\n"	*(char)
)	O
;	O
}	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
sha512digbuf	array(char)
[	O
SHA512_ASCII_LEN	int
]	O
=	O
'\0'	O
;	O
calc_sha512digbuf	array(char)
[	O
SHA512_ASCII_LEN	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: Archive digest: "	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
sha512digbuf	array(char)
)	O
==	O
SHA512_ASCII_LEN	int
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
calc_sha512digbuf	array(char)
,	O
sha512digbuf	array(char)
,	O
SHA512_ASCII_LEN	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
verbose	int
>=	O
DIG_VERBOSE_LEVEL	O
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
msgfd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"sha512 OK (Good)\n"	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
sha512digbuf	array(char)
)	O
)	O
{	O
pri_ret	int
=	O
1	int
;	O
}	O
report_dig_error	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,*(char),int,int)->(void)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
msgfd	int
,	O
efd	int
,	O
"sha512"	*(char)
,	O
strlen	(*(char))->(long)
(	O
sha512digbuf	array(char)
)	O
,	O
verbose	int
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
sigfd	int
=	O
open	(*(char),int)->(int)
(	O
sigfile	*(char)
,	O
O_RDWR	int
|	O
O_TRUNC	int
|	O
O_CREAT	int
,	O
0600	int
)	O
;	O
if	O
(	O
sigfd	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"open failed ( %s ) : %s\n"	*(char)
,	O
sigfile	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
14	int
;	O
}	O
E_DEBUG2	O
(	O
"whichsig=%d"	*(char)
,	O
whichsig	int
)	O
;	O
if	O
(	O
pri_ret	int
==	O
0	int
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
do_sig_safety_checks	(int,int,int)->(int)
(	O
memfd	int
,	O
sigsize	int
,	O
whichsig	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: error reading signature block\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
pri_ret	int
=	O
10	int
;	O
}	O
else	O
{	O
write_selected_sig	(int,int,int,int)->(int)
(	O
sigfd	int
,	O
memfd	int
,	O
whichsig	int
,	O
sigsize	int
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
close	*((*(void))->(int))
(	O
sigfd	int
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
uxfio_close	(int)->(int)
(	O
memfd	int
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
verbose	int
>=	O
4	int
)	O
{	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: size: %s from archive.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
sizebuf	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: size: %s calculated.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
calc_size	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: md5: %s from archive.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
md5digbuf	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: md5: %s calculated.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
calc_md5digbuf	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: sha1: %s from archive.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
sha1digbuf	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: sha1: %s calculated.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
calc_sha1digbuf	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: sha512: %s from archive.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
sha512digbuf	array(char)
)	O
;	O
swlib_writef	(int,*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
logger_fd	int
,	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"%s: sha512: %s calculated.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
calc_sha512digbuf	array(char)
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
uxfio_lseek	(int,long,int)->(long)
(	O
ifd	int
,	O
0	int
,	O
UXFIO_SEEK_VSET	int
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"uxfio_lseek error loc=3 ret=%d\n"	*(char)
,	O
ret	int
)	O
;	O
return	O
10	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
uxfio_fcntl	(int,int,int)->(int)
(	O
ifd	int
,	O
UXFIO_F_ARM_AUTO_DISABLE	O
,	O
1	int
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
taruib_write_catalog_stream	(*(void),int,int,int)->(int)
(	O
vp	*(void)
,	O
ofd	int
,	O
1	int
,	O
0	int
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
ret	int
<=	O
0	int
)	O
{	O
pri_ret	int
=	O
9	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
verbose	int
>	O
2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"swbis: md5: %s from archive.\n"	*(char)
,	O
md5digbuf	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"swbis: md5: %s calculated.\n"	*(char)
,	O
calc_md5digbuf	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"swbis: sha1: %s from archive.\n"	*(char)
,	O
sha1digbuf	array(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"swbis: sha1: %s calculated.\n"	*(char)
,	O
calc_sha1digbuf	array(char)
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
close	*((*(void))->(int))
(	O
sigfd	int
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
uxfio_close	(int)->(int)
(	O
memfd	int
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
}	O
strob_close	(*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
E_DEBUG2	O
(	O
"ret=%d"	*(char)
,	O
pri_ret	int
)	O
;	O
return	O
pri_ret	int
;	O
}	O
