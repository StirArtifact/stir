VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
VCreatePolygon	(int,*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))->(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
(	O
int	O
numVtces	short
,	O
VPoint	struct(double,double,double)
*	O
vert	*(struct(double,double,double))
,	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
color	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
)	O
{	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
;	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
.	O
color	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
=	O
color	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
;	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
.	O
backColor	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
=	O
(	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
)	O
NULL	O
;	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
.	O
flags	short
=	O
0	int
;	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
.	O
assignedDepth	short
=	O
-	O
1	int
;	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
.	O
cullDistance	double
=	O
0.0	int
;	O
return	O
VCreatePolygonFromTemplate	(int,*(struct(double,double,double)),*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))->(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
(	O
numVtces	short
,	O
vert	*(struct(double,double,double))
,	O
&	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
)	O
;	O
}	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
VCreatePolygonFromTemplate	(int,*(struct(double,double,double)),*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))->(*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*`,short,short,*`)),*(struct(*`,short,short,*`)),double)))
(	O
int	O
numVtces	short
,	O
VPoint	struct(double,double,double)
*	O
vert	*(struct(double,double,double))
,	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
)	O
{	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
VPoint	struct(double,double,double)
a	*(struct(double,double,double))
,	O
b	*(struct(double,double,double))
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
(	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
*	O
)	O
Vmalloc	(int)->(*(char))
(	O
sizeof	O
(	O
VPolygon	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
)	O
)	O
;	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
*	O
template	struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),*(struct(*(char),short,short,*(struct(*`,short,short,*`)))),double)
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
numVtces	short
=	O
numVtces	short
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
vertex	*(struct(double,double,double))
=	O
(	O
VPoint	struct(double,double,double)
*	O
)	O
Vmalloc	(int)->(*(char))
(	O
sizeof	O
(	O
VPoint	struct(double,double,double)
)	O
*	O
numVtces	short
)	O
;	O
memcpy	O
(	O
(	O
char	O
*	O
)	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
vertex	*(struct(double,double,double))
,	O
(	O
char	O
*	O
)	O
vert	*(struct(double,double,double))
,	O
sizeof	O
(	O
VPoint	struct(double,double,double)
)	O
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
numVtces	short
)	O
;	O
if	O
(	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
flags	short
&	O
PolyNormalValid	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
flags	short
&	O
PolyClipBackface	int
)	O
!=	O
0	int
||	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
backColor	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
!=	O
(	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
)	O
NULL	O
)	O
{	O
a	*(struct(double,double,double))
.	O
x	double
=	O
vert	*(struct(double,double,double))
[	O
0	int
]	O
.	O
x	double
-	O
vert	*(struct(double,double,double))
[	O
1	int
]	O
.	O
x	double
;	O
a	*(struct(double,double,double))
.	O
y	double
=	O
vert	*(struct(double,double,double))
[	O
0	int
]	O
.	O
y	double
-	O
vert	*(struct(double,double,double))
[	O
1	int
]	O
.	O
y	double
;	O
a	*(struct(double,double,double))
.	O
z	double
=	O
vert	*(struct(double,double,double))
[	O
0	int
]	O
.	O
z	double
-	O
vert	*(struct(double,double,double))
[	O
1	int
]	O
.	O
z	double
;	O
b	*(struct(double,double,double))
.	O
x	double
=	O
vert	*(struct(double,double,double))
[	O
2	int
]	O
.	O
x	double
-	O
vert	*(struct(double,double,double))
[	O
1	int
]	O
.	O
x	double
;	O
b	*(struct(double,double,double))
.	O
y	double
=	O
vert	*(struct(double,double,double))
[	O
2	int
]	O
.	O
y	double
-	O
vert	*(struct(double,double,double))
[	O
1	int
]	O
.	O
y	double
;	O
b	*(struct(double,double,double))
.	O
z	double
=	O
vert	*(struct(double,double,double))
[	O
2	int
]	O
.	O
z	double
-	O
vert	*(struct(double,double,double))
[	O
1	int
]	O
.	O
z	double
;	O
VCrossProd	(*(struct(double,double,double)),*(struct(double,double,double)),*(struct(double,double,double)))->(void)
(	O
&	O
a	*(struct(double,double,double))
,	O
&	O
b	*(struct(double,double,double))
,	O
&	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
normal	struct(double,double,double)
)	O
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
flags	short
|=	O
PolyNormalValid	int
;	O
}	O
}	O
return	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
}	O
