int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
struct	O
grecs_version_info	struct(*(char),*(char),*(char),int,int,int,*(char),*(char))
*	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
;	O
int	O
res	int
;	O
if	O
(	O
argc	int
>	O
3	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"usage: %s [version [version]]\n"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
argc	int
==	O
2	int
)	O
exit	(int)->(void)
(	O
!	O
grecs_version_ok	(*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
)	O
)	O
;	O
if	O
(	O
argc	int
==	O
3	int
)	O
exit	(int)->(void)
(	O
grecs_version_cmp	(*(char),*(char),*(int))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
argv	*(*(char))
[	O
2	int
]	O
,	O
&	O
res	int
)	O
?	O
1	int
:	O
res	int
==	O
0	int
?	O
0	int
:	O
res	int
<	O
0	int
?	O
2	int
:	O
3	int
)	O
;	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
=	O
grecs_version	()->(*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char))))
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
"package: %s\n"	*(char)
,	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
package	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"version: %s\n"	*(char)
,	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
version	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"major: %d\n"	*(char)
,	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
major	int
)	O
;	O
printf	(*(char))->(int)
(	O
"minor: %d\n"	*(char)
,	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
minor	int
)	O
;	O
printf	(*(char))->(int)
(	O
"patch: %d\n"	*(char)
,	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
patch	int
)	O
;	O
printf	(*(char))->(int)
(	O
"suffix:"	*(char)
)	O
;	O
if	O
(	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
suffix	*(char)
&&	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
suffix	*(char)
[	O
0	int
]	O
)	O
printf	(*(char))->(int)
(	O
" %s"	*(char)
,	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
->	O
suffix	*(char)
)	O
;	O
putchar	(int)->(int)
(	O
'\n'	O
)	O
;	O
grecs_version_info_free	(*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char))))->(void)
(	O
vinfo	*(struct(*(char),*(char),*(char),int,int,int,*(char),*(char)))
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
