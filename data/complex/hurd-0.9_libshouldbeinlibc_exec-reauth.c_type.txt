error_t	O
exec_reauth	(int,int,int,*(int),int,*(int),int)->(int)
(	O
auth_t	O
auth	int
,	O
int	O
secure	int
,	O
int	O
must_reauth	int
,	O
mach_port_t	O
*	O
ports	*(int)
,	O
unsigned	O
num_ports	int
,	O
mach_port_t	O
*	O
fds	*(int)
,	O
unsigned	O
num_fds	int
)	O
{	O
unsigned	O
int	O
i	int
;	O
error_t	O
err	O
=	O
0	int
;	O
error_t	O
reauth	()->(int)
(	O
mach_port_t	O
*	O
port	O
,	O
int	O
isproc	O
)	O
{	O
if	O
(	O
*	O
port	O
!=	O
MACH_PORT_NULL	O
)	O
{	O
mach_port_t	O
newport	O
;	O
mach_port_t	O
ref	O
=	O
mach_reply_port	O
(	O
)	O
;	O
error_t	O
err	O
=	O
(	O
isproc	O
?	O
proc_reauthenticate	O
:	O
io_reauthenticate	O
)	O
(	O
*	O
port	O
,	O
ref	O
,	O
MACH_MSG_TYPE_MAKE_SEND	O
)	O
;	O
if	O
(	O
!	O
err	O
)	O
err	O
=	O
auth_user_authenticate	O
(	O
auth	int
,	O
ref	O
,	O
MACH_MSG_TYPE_MAKE_SEND	O
,	O
&	O
newport	O
)	O
;	O
mach_port_mod_refs	O
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
ref	O
,	O
MACH_PORT_RIGHT_RECEIVE	O
,	O
-	O
1	int
)	O
;	O
if	O
(	O
err	O
)	O
{	O
if	O
(	O
must_reauth	int
)	O
return	O
err	O
;	O
}	O
else	O
{	O
if	O
(	O
isproc	O
)	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
newport	O
)	O
;	O
else	O
{	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
*	O
port	O
)	O
;	O
*	O
port	O
=	O
newport	O
;	O
}	O
}	O
}	O
return	O
0	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
num_fds	int
&&	O
!	O
err	O
;	O
++	O
i	int
)	O
err	O
=	O
reauth	()->(int)
(	O
&	O
fds	*(int)
[	O
i	int
]	O
,	O
0	int
)	O
;	O
if	O
(	O
!	O
err	O
)	O
{	O
if	O
(	O
secure	int
)	O
ports	*(int)
[	O
INIT_PORT_CRDIR	O
]	O
=	O
MACH_PORT_NULL	O
;	O
else	O
err	O
=	O
reauth	()->(int)
(	O
&	O
ports	*(int)
[	O
INIT_PORT_CRDIR	O
]	O
,	O
0	int
)	O
;	O
}	O
if	O
(	O
!	O
err	O
)	O
err	O
=	O
reauth	()->(int)
(	O
&	O
ports	*(int)
[	O
INIT_PORT_PROC	O
]	O
,	O
1	int
)	O
;	O
if	O
(	O
!	O
err	O
)	O
err	O
=	O
reauth	()->(int)
(	O
&	O
ports	*(int)
[	O
INIT_PORT_CWDIR	O
]	O
,	O
0	int
)	O
;	O
if	O
(	O
!	O
err	O
)	O
{	O
mach_port_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
ports	*(int)
[	O
INIT_PORT_AUTH	O
]	O
)	O
;	O
ports	*(int)
[	O
INIT_PORT_AUTH	O
]	O
=	O
auth	int
;	O
}	O
return	O
0	int
;	O
}	O
