int	O
_mu_imap_response	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void)),*(void))->(int)
(	O
mu_imap_t	*(struct)
imap	*(struct)
,	O
mu_imap_response_action_t	*((*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct`),*(struct`),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void))
fun	*((*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct`),*(struct`),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void))
,	O
void	O
*	O
data	*(void)
)	O
{	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
imap	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
MU_IMAP_FISSET	O
(	O
imap	*(struct)
,	O
MU_IMAP_RESP	int
)	O
)	O
return	O
0	int
;	O
_mu_imap_clrerrstr	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))))->(void)
(	O
imap	*(struct)
)	O
;	O
while	O
(	O
1	int
)	O
{	O
status	int
=	O
mu_imapio_getline	(*(struct))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
char	O
*	O
*	O
wv	*(*(char))
;	O
size_t	long
wc	long
;	O
mu_imapio_get_words	(*(struct),*(long),*(*(*(char))))->(int)
(	O
imap	*(struct)
->	O
io	*(struct)
,	O
&	O
wc	long
,	O
&	O
wv	*(*(char))
)	O
;	O
if	O
(	O
wc	long
==	O
0	int
)	O
{	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
break	O
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
wv	*(*(char))
[	O
0	int
]	O
,	O
"*"	*(char)
)	O
==	O
0	int
)	O
{	O
mu_list_t	*(struct)
list	*(struct)
;	O
status	int
=	O
_mu_imap_untagged_response_to_list	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(*(struct)))->(int)
(	O
imap	*(struct)
,	O
&	O
list	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
_mu_imap_process_untagged_response	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*((*(struct(int,enum(int,int,int),int,*`,long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*`,*`,*`,*`,*`,int,struct`,array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void)),*(void))->(int)
(	O
imap	*(struct)
,	O
list	*(struct)
,	O
fun	*((*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct`),*(struct`),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct),*(void))->(void))
,	O
data	*(void)
)	O
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
&	O
list	*(struct)
)	O
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
strlen	(*(char))->(long)
(	O
wv	*(*(char))
[	O
0	int
]	O
)	O
==	O
imap	*(struct)
->	O
tag_len	long
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
wv	*(*(char))
[	O
0	int
]	O
,	O
imap	*(struct)
->	O
tag_str	*(char)
,	O
imap	*(struct)
->	O
tag_len	long
)	O
==	O
0	int
)	O
{	O
if	O
(	O
wc	long
<	O
2	int
)	O
{	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
}	O
else	O
{	O
mu_list_t	*(struct)
list	*(struct)
;	O
status	int
=	O
_mu_imap_untagged_response_to_list	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(*(struct)))->(int)
(	O
imap	*(struct)
,	O
&	O
list	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
if	O
(	O
_mu_imap_process_tagged_response	(*(struct(int,enum(int,int,int),int,*(char),long,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int),long,*(int),*(char),*(struct),*(struct),*(char),int,struct(int,int,int,long,long,long,long,long),array(struct(*((*(void),int,long,*(void))->(void)),*(void))))),*(struct))->(int)
(	O
imap	*(struct)
,	O
list	*(struct)
)	O
)	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
&	O
list	*(struct)
)	O
;	O
}	O
}	O
MU_IMAP_FSET	O
(	O
imap	*(struct)
,	O
MU_IMAP_RESP	int
)	O
;	O
}	O
else	O
{	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
}	O
}	O
else	O
imap	*(struct)
->	O
client_state	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
break	O
;	O
}	O
return	O
status	int
;	O
}	O
