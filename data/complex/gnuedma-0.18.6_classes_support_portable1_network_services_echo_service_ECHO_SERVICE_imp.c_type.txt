ESint32	int
EDMAPROC	O
ECHO_SERVICEserviceOrS23	(int,int)->(int)
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
id	int
)	O
{	O
EDMAT_BUFFER	struct(long,long,*(void))
rbuf	struct(long,long,*(void))
,	O
sbuf	struct(long,long,*(void))
;	O
ESint32	int
len	int
=	O
1023	int
;	O
edma_buffer_alloc	(*(struct(long,long,*(void))),long)->(int)
(	O
&	O
rbuf	struct(long,long,*(void))
,	O
1024	int
)	O
;	O
edma_buffer_alloc	(*(struct(long,long,*(void))),long)->(int)
(	O
&	O
sbuf	struct(long,long,*(void))
,	O
1024	int
)	O
;	O
if	O
(	O
(	O
(	O
ESint32	int
)	O
edma_met3	(int,*(char))->(int)
(	O
id	int
,	O
"recv"	*(char)
,	O
&	O
rbuf	struct(long,long,*(void))
,	O
&	O
len	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
edma_printf_obj	(int,*(char))->(long)
(	O
IdObj	int
,	O
"[ERROR] receviving data"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
len	int
=	O
snprintf	(*(char),int,*(char))->(int)
(	O
(	O
char	O
*	O
)	O
sbuf	struct(long,long,*(void))
.	O
dat	*(void)
,	O
1023	int
,	O
"server says:: '%s' \n"	*(char)
,	O
(	O
char	O
*	O
)	O
rbuf	struct(long,long,*(void))
.	O
dat	*(void)
)	O
;	O
if	O
(	O
(	O
(	O
ESint32	int
)	O
edma_met3	(int,*(char))->(int)
(	O
id	int
,	O
"send"	*(char)
,	O
sbuf	struct(long,long,*(void))
,	O
len	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
edma_printf_obj	(int,*(char))->(long)
(	O
IdObj	int
,	O
"[ERROR] sending data"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
edma_buffer_free	(*(struct(long,long,*(void))))->(int)
(	O
&	O
rbuf	struct(long,long,*(void))
)	O
;	O
edma_buffer_free	(*(struct(long,long,*(void))))->(int)
(	O
&	O
sbuf	struct(long,long,*(void))
)	O
;	O
return	O
0	int
;	O
}	O
