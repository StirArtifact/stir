void	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
i	int
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
26	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ABORIGINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANZAC_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
be_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BE"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLEMISH_CULTURE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
11	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DYNASTY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FRENCH_CULTURE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
27	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1917	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
br_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"BR"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SAO_PAULO_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RIO_DE_JANEIRO_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
20	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TIRADENTES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OUR_LADY_APARECIDA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
5	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_FOOLS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HALLOWEEN	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
10	int
-	O
1	int
]	O
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
21	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VALENTINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1867	int
)	O
{	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
7	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WHIT_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
50	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_BERCHTOLDS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
2	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PENTECOST	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
49	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_STEPHENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_QUINQUAGESIMA_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
49	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1992	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cn_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CN"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
if	O
(	O
year	int
>	O
1911	int
)	O
{	O
register	O
int	O
day	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARBOR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TEACHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1918	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_YOUTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1920	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FOUNDING_OF_THE_COMMUNIST_PARTY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1926	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1948	int
)	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
de_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
if	O
(	O
year	int
>	O
1953	int
)	O
{	O
register	O
int	O
month	int
;	O
if	O
(	O
year	int
>	O
1989	int
)	O
{	O
day	int
=	O
3	int
;	O
month	int
=	O
10	int
;	O
}	O
else	O
{	O
day	int
=	O
17	int
;	O
month	int
=	O
6	int
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GERMAN_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_SHROVE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
52	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
DAY_MAX	int
,	O
FALSE	O
)	O
;	O
day	int
-=	O
(	O
DAY_MAX	int
*	O
4	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SUNDAY_OF_THE_DEAD	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
11	int
-	O
1	int
]	O
+	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
-=	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_MOURNING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
11	int
-	O
1	int
]	O
+	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_FOOLS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_WEDNESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
;	O
if	O
(	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
!=	O
easter	int
+	O
49	int
)	O
day	int
+=	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SEVEN_SLEEPERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
27	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_NICHOLAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
5	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THANKSGIVING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VALENTINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VALBORGS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
4	int
-	O
1	int
]	O
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
es_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"ES"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JAMES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_ANDALUCIA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
28	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_CATALONIA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
11	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_GALICIA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BASQUE_NATIONAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PALM_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
DAY_MAX	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_STEPHENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
fr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
if	O
(	O
!	O
use_other_cc	int
)	O
ptr_cc_id	*(char)
=	O
"FR"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_QUINQUAGESIMA_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
49	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1788	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1917	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
gb_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
auto	O
Greg_struct	struct(int,int,int,int)
tmp_greg	struct(int,int,int,int)
;	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
8	int
-	O
1	int
]	O
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
}	O
day	int
=	O
5	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
7	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TYNWALD_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
9	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_DAVIDS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SWALLOW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_GEORGES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
23	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GROTTO_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
25	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_EDWARDS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
13	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
5	int
-	O
1	int
]	O
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HALLOWEEN	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
10	int
-	O
1	int
]	O
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ANNUNCIATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
25	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
21	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
(	O
year	int
==	O
1999	int
)	O
?	O
"+"	*(char)
:	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
tmp_greg	struct(int,int,int,int)
.	O
first_day	int
=	O
greg	*(struct(int,int,int,int))
->	O
first_day	int
;	O
tmp_greg	struct(int,int,int,int)
.	O
last_day	int
=	O
greg	*(struct(int,int,int,int))
->	O
last_day	int
;	O
tmp_greg	struct(int,int,int,int)
.	O
month	int
=	O
greg	*(struct(int,int,int,int))
->	O
month	int
;	O
tmp_greg	struct(int,int,int,int)
.	O
year	int
=	O
greg	*(struct(int,int,int,int))
->	O
year	int
;	O
greg	*(struct(int,int,int,int))
->	O
last_day	int
=	O
greg	*(struct(int,int,int,int))
->	O
first_day	int
=	O
DAY_MIN	int
;	O
greg	*(struct(int,int,int,int))
->	O
month	int
=	O
MONTH_MIN	int
;	O
greg	*(struct(int,int,int,int))
->	O
year	int
=	O
YEAR_MAX	int
+	O
1	int
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
25	int
,	O
3	int
,	O
year	int
)	O
;	O
greg	*(struct(int,int,int,int))
->	O
year	int
=	O
1752	int
;	O
greg	*(struct(int,int,int,int))
->	O
month	int
=	O
9	int
;	O
greg	*(struct(int,int,int,int))
->	O
first_day	int
=	O
3	int
;	O
greg	*(struct(int,int,int,int))
->	O
last_day	int
=	O
13	int
;	O
if	O
(	O
year	int
>	O
greg	*(struct(int,int,int,int))
->	O
year	int
)	O
day	int
+=	O
julian_gregorian_diff	(int,int,int)->(int)
(	O
greg	*(struct(int,int,int,int))
->	O
last_day	int
+	O
1	int
,	O
greg	*(struct(int,int,int,int))
->	O
month	int
,	O
year	int
)	O
;	O
greg	*(struct(int,int,int,int))
->	O
year	int
=	O
tmp_greg	struct(int,int,int,int)
.	O
year	int
;	O
greg	*(struct(int,int,int,int))
->	O
month	int
=	O
tmp_greg	struct(int,int,int,int)
.	O
month	int
;	O
greg	*(struct(int,int,int,int))
->	O
last_day	int
=	O
tmp_greg	struct(int,int,int,int)
.	O
last_day	int
;	O
greg	*(struct(int,int,int,int))
->	O
first_day	int
=	O
tmp_greg	struct(int,int,int,int)
.	O
first_day	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BEGINNING_OF_FINANCIAL_YEAR	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1604	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GUY_FAWKES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
5	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
il_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"IL"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
hebrew_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
if	O
(	O
year	int
>	O
1999	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
9	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
it_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
month	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"IT"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
2	int
;	O
month	int
=	O
6	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
3	int
)	O
day	int
+=	O
(	O
DAY_MAX	int
-	O
i	int
)	O
;	O
else	O
if	O
(	O
i	int
>	O
1	int
)	O
{	O
i	int
-=	O
2	int
;	O
day	int
=	O
dvec	array(int)
[	O
--	O
month	int
-	O
1	int
]	O
-	O
i	int
;	O
}	O
else	O
day	int
-=	O
i	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VENICE_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
58	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1917	int
)	O
{	O
day	int
=	O
4	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
3	int
)	O
day	int
+=	O
(	O
DAY_MAX	int
-	O
i	int
)	O
;	O
else	O
day	int
-=	O
i	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
jp_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"JP"	*(char)
;	O
if	O
(	O
year	int
<	O
1873	int
)	O
{	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
japanese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
else	O
{	O
register	O
int	O
hour	int
;	O
register	O
int	O
min	int
;	O
register	O
int	O
i	int
;	O
auto	O
int	O
day	int
;	O
auto	O
int	O
month	int
;	O
auto	O
int	O
y	double
=	O
year	int
;	O
if	O
(	O
year	int
<	O
1888	int
)	O
{	O
hour	int
=	O
7	int
;	O
min	int
=	O
45	int
;	O
}	O
else	O
{	O
hour	int
=	O
9	int
;	O
min	int
=	O
0	int
;	O
}	O
day	int
=	O
15	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COMING_OF_AGE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
2	int
,	O
year	int
,	O
4	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SAPPORO_SNOW_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
2	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
2	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SPRING_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
3	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
3	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PEACH_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
8	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BUDDHAS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
29	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GREENERY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
7	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
7	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_STAR_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
20	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
7	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARINE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
13	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
8	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
4	int
;	O
i	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_FORTUNE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
+	O
i	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
9	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
9	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRYSANTHENUM_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
15	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
9	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RESPECT_FOR_THE_AGED_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
10	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
10	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEALTH_AND_SPORTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
15	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_7_5_3_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
23	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_THANKSGIVING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
13	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SOOT_SWEEPING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
23	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EMPERORS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
5	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
3	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CULTURE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
4	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
<	O
6	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VALENTINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
2	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
3	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
equinox_solstice	(double,*(int),*(int),*(int),int,int)->(double)
(	O
NH_VE	int
,	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
,	O
hour	int
,	O
min	int
)	O
!=	O
(	O
double	O
)	O
SPECIAL_VALUE	O
)	O
{	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
y	double
)	O
==	O
DAY_MAX	int
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EQUINOX_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
y	double
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
else	O
y	double
=	O
year	int
;	O
if	O
(	O
equinox_solstice	(double,*(int),*(int),*(int),int,int)->(double)
(	O
NH_AE	int
,	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
,	O
hour	int
,	O
min	int
)	O
!=	O
(	O
double	O
)	O
SPECIAL_VALUE	O
)	O
{	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
y	double
)	O
==	O
DAY_MAX	int
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EQUINOX_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
y	double
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
else	O
y	double
=	O
year	int
;	O
if	O
(	O
equinox_solstice	(double,*(int),*(int),*(int),int,int)->(double)
(	O
NH_WS	int
,	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
,	O
hour	int
,	O
min	int
)	O
!=	O
(	O
double	O
)	O
SPECIAL_VALUE	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_JAPANESE_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
month	int
,	O
y	double
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
else	O
y	double
=	O
year	int
;	O
if	O
(	O
sun_longitude	(double,*(int),*(int),*(int),int,int,int)->(double)
(	O
315.0	int
,	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
,	O
hour	int
,	O
min	int
,	O
FALSE	O
)	O
!=	O
(	O
double	O
)	O
SPECIAL_VALUE	O
)	O
{	O
(	O
void	O
)	O
prev_date	(*(int),*(int),*(int))->(int)
(	O
&	O
day	int
,	O
&	O
month	int
,	O
&	O
y	double
)	O
;	O
if	O
(	O
y	double
==	O
year	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SEASON_CHANGE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
month	int
,	O
y	double
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>	O
1946	int
)	O
{	O
day	int
=	O
3	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
11	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
2	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_FOUNDATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
}	O
void	O
kr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"KR"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
if	O
(	O
(	O
year	int
>	O
1909	int
)	O
&&	O
(	O
year	int
<	O
1945	int
)	O
)	O
japanese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
else	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
if	O
(	O
year	int
>	O
1911	int
)	O
{	O
register	O
int	O
day	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PARENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARBOR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
10	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MIN	int
;	O
day	int
<=	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TEACHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALPHABET_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
(	O
year	int
>	O
1995	int
)	O
?	O
DIS_HLS_PREF	*(char)
:	O
"+"	*(char)
,	O
9	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1918	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_MOVEMENT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1947	int
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
17	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_FOUNDATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>	O
1952	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
mx_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"MX"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BENITO_JUAREZ_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BATTLE_OF_PUEBLA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
5	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GUADALUPE_VIRGINS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
12	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
DAY_MAX	int
;	O
day	int
;	O
day	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
-	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
4	int
-	O
1	int
]	O
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLUMBUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HOLY_INNOCENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
28	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_PROCLAMATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
10	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
!	O
(	O
year	int
%	O
6	int
)	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRESIDENTIAL_INAUGURATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRESIDENTS_INFORM	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
20	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nl_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"NL"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EINDHOVENS_LIBERATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
18	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
2	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRINCESS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WORLD_ANIMAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
4	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
;	O
if	O
(	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
!=	O
easter	int
+	O
49	int
)	O
day	int
+=	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_NICHOLAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
5	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1890	int
&&	O
year	int
<	O
1949	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
31	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
else	O
if	O
(	O
year	int
>	O
1948	int
&&	O
year	int
<	O
2014	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
else	O
if	O
(	O
year	int
>	O
2013	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
4	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
(	O
year	int
>	O
1944	int
)	O
&&	O
!	O
(	O
year	int
%	O
5	int
)	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
nz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
ptr_cc_id	*(char)
=	O
"NZ"	*(char)
;	O
day	int
=	O
29	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_AUCKLAND	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
3	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_CANTERBURY_SOUTH	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
30	int
,	O
11	int
,	O
year	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
30	int
,	O
11	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_CHATHAM_ISLANDS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
DAY_MIN	int
,	O
2	int
,	O
year	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
DAY_MIN	int
,	O
2	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_NELSON	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
23	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
3	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_OTAGO	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
17	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_SOUTHLAND	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_TARANAKI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
22	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_WELLINGTON	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_WESTLAND	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANZAC_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
3	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_HAWKES_BAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
-	O
3	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_MARLBOROUGH	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
10	int
,	O
year	int
)	O
+	O
DAY_MAX	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_CANTERBURY_NORTH	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
10	int
,	O
year	int
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
+	O
4	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
2	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
pt_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"PT"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CAMOES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ru_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
auto	O
int	O
greg_diff	*(int)
;	O
auto	O
int	O
d	int
;	O
auto	O
int	O
m	int
;	O
auto	O
int	O
y	double
;	O
ptr_cc_id	*(char)
=	O
"RU"	*(char)
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COSMONAUTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
12	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
d	int
=	O
23	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
2	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DEFENDERS_OF_MOTHERLAND_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
5	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
2	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
5	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
d	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SPRING_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
2	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
d	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
DAY_MIN	int
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
d	int
+=	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ORTHODOX_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
8	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
3	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
{	O
d	int
=	O
24	int
;	O
m	int
=	O
MONTH_MAX	int
;	O
y	double
=	O
year	int
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
greg_diff	*(int)
;	O
i	int
++	O
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	double
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	double
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	double
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
{	O
d	int
=	O
9	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
5	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>	O
1991	int
)	O
{	O
d	int
=	O
12	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
6	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
12	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
7	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
d	int
,	O
11	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
d	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_RECONCILIATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
else	O
if	O
(	O
year	int
>	O
1916	int
)	O
for	O
(	O
i	int
=	O
6	int
;	O
i	int
<=	O
7	int
;	O
i	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
i	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
us_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
month	int
;	O
register	O
int	O
i	int
=	O
0	int
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLUMBUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTIN_LUTHER_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
2	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRESIDENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
day	int
=	O
25	int
;	O
month	int
=	O
MONTH_MAX	int
;	O
switch	O
(	O
observe_us_hdy	int
)	O
{	O
case	O
SASA_SUSU	int
:	O
break	O
;	O
case	O
SASA_SUMO	int
:	O
case	O
SASAFR_SUMO	int
:	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
break	O
;	O
case	O
SAMO_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
break	O
;	O
case	O
SAFR_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
else	O
if	O
(	O
i	int
==	O
6	int
)	O
day	int
--	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
4	int
;	O
month	int
=	O
7	int
;	O
switch	O
(	O
observe_us_hdy	int
)	O
{	O
case	O
SASA_SUSU	int
:	O
break	O
;	O
case	O
SASA_SUMO	int
:	O
case	O
SASAFR_SUMO	int
:	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
break	O
;	O
case	O
SAMO_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
break	O
;	O
case	O
SAFR_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
else	O
if	O
(	O
i	int
==	O
6	int
)	O
day	int
--	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
month	int
=	O
MONTH_MIN	int
;	O
switch	O
(	O
observe_us_hdy	int
)	O
{	O
case	O
SASA_SUSU	int
:	O
break	O
;	O
case	O
SASA_SUMO	int
:	O
case	O
SASAFR_SUMO	int
:	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
break	O
;	O
case	O
SAMO_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
break	O
;	O
case	O
SAFR_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
else	O
if	O
(	O
i	int
==	O
6	int
)	O
i	int
=	O
SPECIAL_VALUE	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
i	int
!=	O
SPECIAL_VALUE	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
(	O
observe_us_hdy	int
==	O
SAFR_SUMO	int
)	O
&&	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
+	O
1	int
)	O
==	O
6	int
)	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
11	int
;	O
month	int
=	O
11	int
;	O
switch	O
(	O
observe_us_hdy	int
)	O
{	O
case	O
SASA_SUSU	int
:	O
break	O
;	O
case	O
SASA_SUMO	int
:	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
break	O
;	O
case	O
SAMO_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
break	O
;	O
case	O
SAFR_SUMO	int
:	O
case	O
SASAFR_SUMO	int
:	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
else	O
if	O
(	O
i	int
==	O
6	int
)	O
day	int
--	O
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VETERANS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GRANDPARENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
+	O
6	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
5	int
-	O
1	int
]	O
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
4	int
,	O
TRUE	O
)	O
+	O
(	O
3	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THANKSGIVING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_FOOLS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOSSES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
16	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CITIZENSHIP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
17	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FRIENDSHIP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HALLOWEEN	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
10	int
-	O
1	int
]	O
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GROUNDHOG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
2	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
26	int
;	O
day	int
<=	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KWANZAA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHER_IN_LAWS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
26	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NURSES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
6	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
3	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PARENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
4	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRAYER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PATRICKS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
17	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_VALENTINES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
14	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SWEETEST_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
