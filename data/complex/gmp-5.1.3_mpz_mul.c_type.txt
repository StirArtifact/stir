void	O
mpz_mul	O
(	O
mpz_ptr	*(struct(int,int,*(long)))
w	*(struct(int,int,*(long)))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
u	array(array(long))
,	O
mpz_srcptr	*(struct(int,int,*(long)))
v	*(struct(int,int,*(long)))
)	O
{	O
mp_size_t	long
usize	*(long)
;	O
mp_size_t	long
vsize	long
;	O
mp_size_t	long
wsize	long
;	O
mp_size_t	long
sign_product	long
;	O
mp_ptr	*(long)
up	*(long)
,	O
vp	*(long)
;	O
mp_ptr	*(long)
wp	*(long)
;	O
mp_ptr	*(long)
free_me	*(long)
;	O
size_t	long
free_me_size	long
;	O
mp_limb_t	long
cy_limb	long
;	O
TMP_DECL	O
;	O
usize	*(long)
=	O
SIZ	O
(	O
u	array(array(long))
)	O
;	O
vsize	long
=	O
SIZ	O
(	O
v	*(struct(int,int,*(long)))
)	O
;	O
sign_product	long
=	O
usize	*(long)
^	O
vsize	long
;	O
usize	*(long)
=	O
ABS	O
(	O
usize	*(long)
)	O
;	O
vsize	long
=	O
ABS	O
(	O
vsize	long
)	O
;	O
if	O
(	O
usize	*(long)
<	O
vsize	long
)	O
{	O
MPZ_SRCPTR_SWAP	O
(	O
u	array(array(long))
,	O
v	*(struct(int,int,*(long)))
)	O
;	O
MP_SIZE_T_SWAP	O
(	O
usize	*(long)
,	O
vsize	long
)	O
;	O
}	O
if	O
(	O
vsize	long
==	O
0	int
)	O
{	O
SIZ	O
(	O
w	*(struct(int,int,*(long)))
)	O
=	O
0	int
;	O
return	O
;	O
}	O
if	O
(	O
vsize	long
<=	O
2	int
)	O
{	O
wp	*(long)
=	O
MPZ_REALLOC	O
(	O
w	*(struct(int,int,*(long)))
,	O
usize	*(long)
+	O
vsize	long
)	O
;	O
if	O
(	O
vsize	long
==	O
1	int
)	O
cy_limb	long
=	O
mpn_mul_1	O
(	O
wp	*(long)
,	O
PTR	O
(	O
u	array(array(long))
)	O
,	O
usize	*(long)
,	O
PTR	O
(	O
v	*(struct(int,int,*(long)))
)	O
[	O
0	int
]	O
)	O
;	O
else	O
{	O
cy_limb	long
=	O
mpn_mul_2	O
(	O
wp	*(long)
,	O
PTR	O
(	O
u	array(array(long))
)	O
,	O
usize	*(long)
,	O
PTR	O
(	O
v	*(struct(int,int,*(long)))
)	O
)	O
;	O
usize	*(long)
++	O
;	O
}	O
wp	*(long)
[	O
usize	*(long)
]	O
=	O
cy_limb	long
;	O
usize	*(long)
+=	O
(	O
cy_limb	long
!=	O
0	int
)	O
;	O
SIZ	O
(	O
w	*(struct(int,int,*(long)))
)	O
=	O
(	O
sign_product	long
>=	O
0	int
?	O
usize	*(long)
:	O
-	O
usize	*(long)
)	O
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
free_me	*(long)
=	O
NULL	O
;	O
up	*(long)
=	O
PTR	O
(	O
u	array(array(long))
)	O
;	O
vp	*(long)
=	O
PTR	O
(	O
v	*(struct(int,int,*(long)))
)	O
;	O
wp	*(long)
=	O
PTR	O
(	O
w	*(struct(int,int,*(long)))
)	O
;	O
wsize	long
=	O
usize	*(long)
+	O
vsize	long
;	O
if	O
(	O
ALLOC	O
(	O
w	*(struct(int,int,*(long)))
)	O
<	O
wsize	long
)	O
{	O
if	O
(	O
wp	*(long)
==	O
up	*(long)
||	O
wp	*(long)
==	O
vp	*(long)
)	O
{	O
free_me	*(long)
=	O
wp	*(long)
;	O
free_me_size	long
=	O
ALLOC	O
(	O
w	*(struct(int,int,*(long)))
)	O
;	O
}	O
else	O
(	O
*	O
__gmp_free_func	*((*(void),long)->(void))
)	O
(	O
wp	*(long)
,	O
ALLOC	O
(	O
w	*(struct(int,int,*(long)))
)	O
*	O
BYTES_PER_MP_LIMB	int
)	O
;	O
ALLOC	O
(	O
w	*(struct(int,int,*(long)))
)	O
=	O
wsize	long
;	O
wp	*(long)
=	O
(	O
mp_ptr	*(long)
)	O
(	O
*	O
__gmp_allocate_func	*((long)->(*(void)))
)	O
(	O
wsize	long
*	O
BYTES_PER_MP_LIMB	int
)	O
;	O
PTR	O
(	O
w	*(struct(int,int,*(long)))
)	O
=	O
wp	*(long)
;	O
}	O
else	O
{	O
if	O
(	O
wp	*(long)
==	O
up	*(long)
)	O
{	O
up	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
usize	*(long)
)	O
;	O
if	O
(	O
wp	*(long)
==	O
vp	*(long)
)	O
vp	*(long)
=	O
up	*(long)
;	O
MPN_COPY	O
(	O
up	*(long)
,	O
wp	*(long)
,	O
usize	*(long)
)	O
;	O
}	O
else	O
if	O
(	O
wp	*(long)
==	O
vp	*(long)
)	O
{	O
vp	*(long)
=	O
TMP_ALLOC_LIMBS	O
(	O
vsize	long
)	O
;	O
MPN_COPY	O
(	O
vp	*(long)
,	O
wp	*(long)
,	O
vsize	long
)	O
;	O
}	O
}	O
if	O
(	O
up	*(long)
==	O
vp	*(long)
)	O
{	O
mpn_sqr	O
(	O
wp	*(long)
,	O
up	*(long)
,	O
usize	*(long)
)	O
;	O
cy_limb	long
=	O
wp	*(long)
[	O
wsize	long
-	O
1	int
]	O
;	O
}	O
else	O
{	O
cy_limb	long
=	O
mpn_mul	O
(	O
wp	*(long)
,	O
up	*(long)
,	O
usize	*(long)
,	O
vp	*(long)
,	O
vsize	long
)	O
;	O
}	O
wsize	long
-=	O
cy_limb	long
==	O
0	int
;	O
SIZ	O
(	O
w	*(struct(int,int,*(long)))
)	O
=	O
sign_product	long
<	O
0	int
?	O
-	O
wsize	long
:	O
wsize	long
;	O
if	O
(	O
free_me	*(long)
!=	O
NULL	O
)	O
(	O
*	O
__gmp_free_func	*((*(void),long)->(void))
)	O
(	O
free_me	*(long)
,	O
free_me_size	long
*	O
BYTES_PER_MP_LIMB	int
)	O
;	O
TMP_FREE	O
;	O
}	O
