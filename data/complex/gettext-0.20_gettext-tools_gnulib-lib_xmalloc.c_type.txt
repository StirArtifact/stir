int	O
xmalloc_exit_failure	int
=	O
EXIT_FAILURE	int
;	O
void	O
xalloc_die	()->(void)
(	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
xmalloc_exit_failure	int
,	O
0	int
,	O
_	O
(	O
"memory exhausted"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
*	O
fixup_null_alloc	(long)->(*(void))
(	O
size_t	long
n	long
)	O
{	O
void	O
*	O
p	*(void)
;	O
p	*(void)
=	O
NULL	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
p	*(void)
=	O
malloc	(long)->(*(void))
(	O
(	O
size_t	long
)	O
1	int
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xmalloc	(long)->(*(void))
(	O
size_t	long
n	long
)	O
{	O
void	O
*	O
p	*(void)
;	O
p	*(void)
=	O
malloc	(long)->(*(void))
(	O
n	long
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
p	*(void)
=	O
fixup_null_alloc	(long)->(*(void))
(	O
n	long
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xnmalloc	(long,long)->(*(void))
(	O
size_t	long
nmemb	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
n	long
;	O
void	O
*	O
p	*(void)
;	O
if	O
(	O
xalloc_oversized	O
(	O
nmemb	long
,	O
size	long
)	O
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
n	long
=	O
nmemb	long
*	O
size	long
;	O
p	*(void)
=	O
malloc	(long)->(*(void))
(	O
n	long
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
p	*(void)
=	O
fixup_null_alloc	(long)->(*(void))
(	O
n	long
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xzalloc	(long)->(*(void))
(	O
size_t	long
size	long
)	O
{	O
void	O
*	O
p	*(void)
;	O
p	*(void)
=	O
xmalloc	(long)->(*(void))
(	O
size	long
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
p	*(void)
,	O
0	int
,	O
size	long
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xcalloc	(long,long)->(*(void))
(	O
size_t	long
n	long
,	O
size_t	long
s	long
)	O
{	O
void	O
*	O
p	*(void)
;	O
p	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
n	long
,	O
s	long
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
p	*(void)
=	O
fixup_null_alloc	(long)->(*(void))
(	O
n	long
)	O
;	O
return	O
p	*(void)
;	O
}	O
void	O
*	O
xrealloc	(*(void),long)->(*(void))
(	O
void	O
*	O
p	*(void)
,	O
size_t	long
n	long
)	O
{	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
return	O
xmalloc	(long)->(*(void))
(	O
n	long
)	O
;	O
p	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
p	*(void)
,	O
n	long
)	O
;	O
if	O
(	O
p	*(void)
==	O
NULL	O
)	O
p	*(void)
=	O
fixup_null_alloc	(long)->(*(void))
(	O
n	long
)	O
;	O
return	O
p	*(void)
;	O
}	O
