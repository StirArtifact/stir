static	O
int	O
fdfridge_f	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
void	O
*	O
params	*(void)
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
f	*(double)
)	O
;	O
static	O
int	O
fdfridge_df	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
void	O
*	O
params	*(void)
,	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
gsl_multifit_fdfridge_alloc	(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),long,long)->(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))
(	O
const	O
gsl_multifit_fdfsolver_type	struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)))->(int)),*((*(void),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)))->(int)),*((*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(void))->(void)))
*	O
T	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
,	O
const	O
size_t	long
n	int
,	O
const	O
size_t	long
p	int
)	O
{	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
;	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
)	O
)	O
;	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
==	O
NULL	O
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate workspace"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
s	*(float)
=	O
gsl_multifit_fdfsolver_alloc	(*(struct(*(char),long,*((*`,long,long)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`,*`,*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(void)))),long,long)->(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))
(	O
T	*(struct(*(char),long,*((*(void),long,long)->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void),*(struct`),*(struct`),*(struct`),*(struct`))->(int)),*((*(void))->(void))))
,	O
n	int
+	O
p	int
,	O
p	int
)	O
;	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
s	*(float)
==	O
NULL	O
)	O
{	O
gsl_multifit_fdfridge_free	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for fdfsolver"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
n	int
+	O
p	int
)	O
;	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
==	O
NULL	O
)	O
{	O
gsl_multifit_fdfridge_free	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for weight vector"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
f	*(double)
=	O
gsl_vector_alloc	(long)->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
n	int
)	O
;	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
f	*(double)
==	O
NULL	O
)	O
{	O
gsl_multifit_fdfridge_free	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for f vector"	*(char)
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
n	int
=	O
n	int
;	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
p	int
=	O
p	int
;	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
lambda	double
=	O
0.0	int
;	O
gsl_vector_set_all	(*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
1.0	int
)	O
;	O
return	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
;	O
}	O
void	O
gsl_multifit_fdfridge_free	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(void)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
)	O
{	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
s	*(float)
)	O
gsl_multifit_fdfsolver_free	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
s	*(float)
)	O
;	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
if	O
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
f	*(double)
)	O
gsl_vector_free	(*(struct(long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
->	O
f	*(double)
)	O
;	O
free	(*(void))->(void)
(	O
work	*(struct(long,long,double,*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(long,long,*(double),*(struct`),int)),*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)))
)	O
;	O
}	O
const	O
char	O
*	O
gsl_multifit_fdfridge_name	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(*(char))
(	O
const	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
return	O
gsl_multifit_fdfsolver_name	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(*(char))
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
)	O
;	O
}	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
gsl_multifit_fdfridge_position	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
const	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
return	O
gsl_multifit_fdfsolver_position	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
)	O
;	O
}	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
gsl_multifit_fdfridge_residual	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
const	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
return	O
gsl_multifit_fdfsolver_residual	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(*(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
)	O
;	O
}	O
size_t	long
gsl_multifit_fdfridge_niter	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(long)
(	O
const	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
return	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
->	O
niter	long
;	O
}	O
int	O
gsl_multifit_fdfridge_set	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
double	O
lambda	double
)	O
{	O
return	O
gsl_multifit_fdfridge_wset	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
f	*(double)
,	O
x	double
,	O
lambda	double
,	O
NULL	O
)	O
;	O
}	O
int	O
gsl_multifit_fdfridge_wset	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
double	O
lambda	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
const	O
size_t	long
n	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
n	int
;	O
const	O
size_t	long
p	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
p	int
;	O
if	O
(	O
n	int
!=	O
f	*(double)
->	O
n	int
||	O
p	int
!=	O
f	*(double)
->	O
p	int
)	O
{	O
GSL_ERROR	O
(	O
"function size does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
!=	O
x	double
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
!=	O
NULL	O
&&	O
n	int
!=	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"weight vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
int	O
status	int
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
wv	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
n	int
)	O
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
=	O
f	*(double)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
f	*(double)
=	O
&	O
fdfridge_f	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
df	*(double)
=	O
&	O
fdfridge_df	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
n	int
=	O
n	int
+	O
p	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
p	int
=	O
p	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
params	*(void)
=	O
(	O
void	O
*	O
)	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
lambda	double
=	O
lambda	double
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
NULL	O
;	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
wv	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
status	int
=	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
&	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
)	O
,	O
x	double
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
else	O
{	O
status	int
=	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
&	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
)	O
,	O
x	double
,	O
NULL	O
)	O
;	O
}	O
f	*(double)
->	O
nevalf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevalf	long
;	O
f	*(double)
->	O
nevaldf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevaldf	long
;	O
return	O
status	int
;	O
}	O
}	O
int	O
gsl_multifit_fdfridge_set2	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
lambda	double
)	O
{	O
return	O
gsl_multifit_fdfridge_wset2	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
f	*(double)
,	O
x	double
,	O
lambda	double
,	O
NULL	O
)	O
;	O
}	O
int	O
gsl_multifit_fdfridge_wset2	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
lambda	double
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
const	O
size_t	long
n	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
n	int
;	O
const	O
size_t	long
p	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
p	int
;	O
if	O
(	O
n	int
!=	O
f	*(double)
->	O
n	int
||	O
p	int
!=	O
f	*(double)
->	O
p	int
)	O
{	O
GSL_ERROR	O
(	O
"function size does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
!=	O
x	double
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
lambda	double
->	O
size	long
!=	O
p	int
)	O
{	O
GSL_ERROR	O
(	O
"lambda vector size does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
!=	O
NULL	O
&&	O
n	int
!=	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"weight vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
int	O
status	int
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
wv	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
n	int
)	O
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
=	O
f	*(double)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevalf	long
=	O
0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevaldf	long
=	O
0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
f	*(double)
=	O
&	O
fdfridge_f	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
df	*(double)
=	O
&	O
fdfridge_df	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
n	int
=	O
n	int
+	O
p	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
p	int
=	O
p	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
params	*(void)
=	O
(	O
void	O
*	O
)	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
lambda	double
=	O
0.0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L_diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
lambda	double
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
NULL	O
;	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
wv	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
status	int
=	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
&	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
)	O
,	O
x	double
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
else	O
{	O
status	int
=	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
&	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
)	O
,	O
x	double
,	O
NULL	O
)	O
;	O
}	O
f	*(double)
->	O
nevalf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevalf	long
;	O
f	*(double)
->	O
nevaldf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevaldf	long
;	O
return	O
status	int
;	O
}	O
}	O
int	O
gsl_multifit_fdfridge_set3	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
return	O
gsl_multifit_fdfridge_wset3	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
f	*(double)
,	O
x	double
,	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
NULL	O
)	O
;	O
}	O
int	O
gsl_multifit_fdfridge_wset3	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
gsl_multifit_function_fdf	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
*	O
f	*(double)
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
const	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
const	O
size_t	long
n	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
n	int
;	O
const	O
size_t	long
p	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
p	int
;	O
if	O
(	O
n	int
!=	O
f	*(double)
->	O
n	int
||	O
p	int
!=	O
f	*(double)
->	O
p	int
)	O
{	O
GSL_ERROR	O
(	O
"function size does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
p	int
!=	O
x	double
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
->	O
size2	long
!=	O
p	int
)	O
{	O
GSL_ERROR	O
(	O
"L matrix size2 does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
!=	O
NULL	O
&&	O
n	int
!=	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
->	O
size	long
)	O
{	O
GSL_ERROR	O
(	O
"weight vector length does not match solver"	*(char)
,	O
GSL_EBADLEN	int
)	O
;	O
}	O
else	O
{	O
int	O
status	int
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
wv	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
n	int
)	O
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
=	O
f	*(double)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevalf	long
=	O
0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevaldf	long
=	O
0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
f	*(double)
=	O
&	O
fdfridge_f	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
df	*(double)
=	O
&	O
fdfridge_df	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
n	int
=	O
n	int
+	O
p	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
p	int
=	O
p	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
params	*(void)
=	O
(	O
void	O
*	O
)	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
lambda	double
=	O
0.0	int
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L_diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
NULL	O
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
;	O
if	O
(	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
wv	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
status	int
=	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
&	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
)	O
,	O
x	double
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
wts	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
else	O
{	O
status	int
=	O
gsl_multifit_fdfsolver_wset	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
&	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
)	O
,	O
x	double
,	O
NULL	O
)	O
;	O
}	O
f	*(double)
->	O
nevalf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevalf	long
;	O
f	*(double)
->	O
nevaldf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevaldf	long
;	O
return	O
status	int
;	O
}	O
}	O
int	O
gsl_multifit_fdfridge_iterate	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
)	O
{	O
int	O
status	int
=	O
gsl_multifit_fdfsolver_iterate	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
)	O
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevalf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevalf	long
;	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
nevaldf	long
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdftik	struct(*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,long,*`,*`,int)))->(int)),*((*(struct(long,long,*`,*`,int)),*(void),*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)))->(int)),long,long,*(void),long,long)
.	O
nevaldf	long
;	O
return	O
status	int
;	O
}	O
int	O
gsl_multifit_fdfridge_driver	(*(struct(long,long,double,*(struct(long,long,*`,*`,int)),*(struct(long,long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(*`,*`,*`,*`,*`,*`,*`,long,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long))),long,double,double,double,*(int))->(int)
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
,	O
const	O
size_t	long
maxiter	long
,	O
const	O
double	O
xtol	double
,	O
const	O
double	O
gtol	double
,	O
const	O
double	O
ftol	double
,	O
int	O
*	O
info	*(int)
)	O
{	O
int	O
status	int
=	O
gsl_multifit_fdfsolver_driver	(*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),long,double,double,double,*(int))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
s	*(float)
,	O
maxiter	long
,	O
xtol	double
,	O
gtol	double
,	O
ftol	double
,	O
info	*(int)
)	O
;	O
return	O
status	int
;	O
}	O
static	O
int	O
fdfridge_f	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
void	O
*	O
params	*(void)
,	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
f	*(double)
)	O
{	O
int	O
status	int
;	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
)	O
params	*(void)
;	O
const	O
size_t	long
n	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
n	int
;	O
const	O
size_t	long
p	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
p	int
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
f_user	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
f	*(double)
,	O
0	int
,	O
n	int
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
f_tik	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_vector_subvector	(*(struct(long,long,*(double),*(struct(long,*`)),int)),long,long)->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
f	*(double)
,	O
n	int
,	O
p	int
)	O
;	O
status	int
=	O
gsl_multifit_eval_wf	(*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
x	double
,	O
NULL	O
,	O
&	O
f_user	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L_diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
f_tik	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
x	double
)	O
;	O
gsl_vector_mul	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
f_tik	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L_diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
else	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_blas_dgemv	(enum(int,int,int),double,*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),double,*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
CblasNoTrans	int
,	O
1.0	int
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
x	double
,	O
0.0	int
,	O
&	O
f_tik	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
}	O
else	O
{	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
f_tik	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
x	double
)	O
;	O
gsl_vector_scale	(*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(int)
(	O
&	O
f_tik	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
lambda	double
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
fdfridge_df	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(void),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
const	O
gsl_vector	struct(long,long,*(double),*(struct(long,*(double))),int)
*	O
x	double
,	O
void	O
*	O
params	*(void)
,	O
gsl_matrix	struct(long,long,long,*(double),*(struct(long,*(double))),int)
*	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
int	O
status	int
;	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
=	O
(	O
gsl_multifit_fdfridge	struct(long,long,double,*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*(struct(*`,long,*`,*`,*`,*`,*`,*`)),*(struct(*`,*`,*`,long,long,*`,long,long)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),*(struct(long,long,*`,*`,int)),long,*(void))),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),struct(*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`))->(int)),*((*(struct`),*(void),*(struct`),*(struct`))->(int)),long,long,*(void),long,long))
*	O
)	O
params	*(void)
;	O
const	O
size_t	long
n	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
n	int
;	O
const	O
size_t	long
p	int
=	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
p	int
;	O
gsl_matrix_view	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
J_user	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_submatrix	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,long,long)->(struct(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
0	int
,	O
0	int
,	O
n	int
,	O
p	int
)	O
;	O
gsl_matrix_view	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
J_tik	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_submatrix	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),long,long,long,long)->(struct(struct(long,long,long,*(double),*(struct(long,*`)),int)))
(	O
J	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
,	O
n	int
,	O
0	int
,	O
p	int
,	O
p	int
)	O
;	O
gsl_vector_view	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
diag	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
=	O
gsl_matrix_diagonal	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(struct(struct(long,long,*(double),*(struct(long,*`)),int)))
(	O
&	O
J_tik	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
->	O
df	*(double)
)	O
status	int
=	O
gsl_multifit_eval_wdf	(*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
x	double
,	O
NULL	O
,	O
&	O
J_user	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
else	O
{	O
status	int
=	O
gsl_multifit_eval_wf	(*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
x	double
,	O
NULL	O
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
f	*(double)
)	O
;	O
status	int
+=	O
gsl_multifit_fdfsolver_dif_df	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(*((*`,*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`,*`,*`)->(int)),long,long,*(void),long,long)),*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
x	double
,	O
NULL	O
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
fdf	*((double,*(void),*(double),*(double))->(void))
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
f	*(double)
,	O
&	O
J_user	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
}	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L_diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_matrix_set_zero	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
&	O
J_tik	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
gsl_vector_memcpy	(*(struct(long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
diag	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L_diag	*(struct(long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
else	O
if	O
(	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
{	O
gsl_matrix_memcpy	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)),*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(int)
(	O
&	O
J_tik	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
L	*(struct(long,long,long,*(double),*(struct(long,*(double))),int))
)	O
;	O
}	O
else	O
{	O
gsl_matrix_set_zero	(*(struct(long,long,long,*(double),*(struct(long,*`)),int)))->(void)
(	O
&	O
J_tik	struct(struct(long,long,long,*(double),*(struct(long,*(double))),int))
.	O
matrix	struct(long,long,long,*(long double),*(struct(long,*(long double))),int)
)	O
;	O
gsl_vector_set_all	(*(struct(long,long,*(double),*(struct(long,*`)),int)),double)->(void)
(	O
&	O
diag	struct(struct(long,long,*(double),*(struct(long,*(double))),int))
.	O
vector	struct(long,long,*(long double),*(struct(long,*(long double))),int)
,	O
w	*(struct(long,long,*(long double),*(struct(long,*(long double))),int))
->	O
lambda	double
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
