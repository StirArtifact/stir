int	O
mu_url_set_user	(*(struct),*(char))->(int)
(	O
mu_url_t	*(struct)
url	*(struct)
,	O
const	O
char	O
*	O
user	*(char)
)	O
{	O
char	O
*	O
copy	*(char)
;	O
if	O
(	O
!	O
url	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
user	*(char)
)	O
{	O
copy	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
user	*(char)
)	O
;	O
if	O
(	O
!	O
copy	*(char)
)	O
return	O
ENOMEM	int
;	O
url	*(struct)
->	O
flags	int
|=	O
MU_URL_USER	int
;	O
}	O
else	O
{	O
url	*(struct)
->	O
flags	int
&=	O
~	O
MU_URL_USER	int
;	O
copy	*(char)
=	O
NULL	O
;	O
}	O
free	(*(void))->(void)
(	O
url	*(struct)
->	O
user	*(char)
)	O
;	O
url	*(struct)
->	O
user	*(char)
=	O
copy	*(char)
;	O
url	*(struct)
->	O
_get_user	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(char),long,*(long))->(int))
=	O
NULL	O
;	O
mu_url_invalidate	(*(struct))->(int)
(	O
url	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
