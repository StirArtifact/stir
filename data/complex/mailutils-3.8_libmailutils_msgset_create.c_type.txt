static	O
int	O
compare_msgnum	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
a	*(struct)
,	O
const	O
void	O
*	O
b	*(struct)
)	O
{	O
struct	O
mu_msgrange	struct(long,long)
const	O
*	O
range	*(char)
=	O
a	*(struct)
;	O
size_t	long
msgno	long
=	O
*	O
(	O
size_t	long
*	O
)	O
b	*(struct)
;	O
if	O
(	O
range	*(char)
->	O
msg_beg	long
<=	O
msgno	long
&&	O
msgno	long
<=	O
range	*(char)
->	O
msg_end	long
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
int	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
mu_msgset_t	*(struct)
*	O
pres	*(*(struct(*(struct),*(struct),int,long)))
,	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
int	O
flags	int
)	O
{	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
int	O
rc	int
;	O
msgset	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
msgset	*(struct)
)	O
)	O
;	O
if	O
(	O
!	O
msgset	*(struct)
)	O
return	O
ENOMEM	int
;	O
rc	int
=	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
msgset	*(struct)
->	O
list	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	(*(void))->(void)
(	O
msgset	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
mu_list_set_destroy_item	(*(struct),*((*(void))->(void)))->(*((*(void))->(void)))
(	O
msgset	*(struct)
->	O
list	*(struct)
,	O
mu_list_free_item	(*(void))->(void)
)	O
;	O
mu_list_set_comparator	(*(struct),*((*(void),*(void))->(int)))->(*((*(void),*(void))->(int)))
(	O
msgset	*(struct)
->	O
list	*(struct)
,	O
compare_msgnum	(*(void),*(void))->(int)
)	O
;	O
msgset	*(struct)
->	O
mbox	*(struct)
=	O
mbox	*(struct)
;	O
msgset	*(struct)
->	O
flags	int
=	O
_MU_MSGSET_MODE	O
(	O
flags	int
)	O
;	O
*	O
pres	*(*(struct(*(struct),*(struct),int,long)))
=	O
msgset	*(struct)
;	O
return	O
0	int
;	O
}	O
