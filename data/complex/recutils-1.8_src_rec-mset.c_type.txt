struct	O
rec_mset_elem_s	struct(int,*(void),*(struct),*(struct))
{	O
rec_mset_type_t	int
type	enum(int,int,int,int)
;	O
void	O
*	O
data	*(void)
;	O
gl_list_node_t	*(struct)
list_node	*(struct)
;	O
rec_mset_t	*(struct)
mset	*(struct)
;	O
}	O
;	O
struct	O
rec_mset_s	struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))
{	O
int	O
ntypes	int
;	O
char	O
*	O
name	*(char)
[	O
MAX_NTYPES	int
]	O
;	O
rec_mset_disp_fn_t	*((*(void))->(void))
disp_fn	*((*(void))->(void))
[	O
MAX_NTYPES	int
]	O
;	O
rec_mset_equal_fn_t	*((*(void),*(void))->(bool))
equal_fn	*((*(void),*(void))->(bool))
[	O
MAX_NTYPES	int
]	O
;	O
rec_mset_dup_fn_t	*((*(void))->(*(void)))
dup_fn	*((*(void))->(*(void)))
[	O
MAX_NTYPES	int
]	O
;	O
rec_mset_compare_fn_t	*((*(void),*(void),int)->(int))
compare_fn	*((*(void),*(void),int)->(int))
[	O
MAX_NTYPES	int
]	O
;	O
size_t	long
count	long
[	O
MAX_NTYPES	int
]	O
;	O
gl_list_t	*(struct)
elem_list	*(struct)
;	O
}	O
;	O
static	O
void	O
rec_mset_init	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))))->(void)
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
;	O
static	O
bool	bool
rec_mset_elem_equal_fn	(*(void),*(void))->(bool)
(	O
const	O
void	O
*	O
e1	*(void)
,	O
const	O
void	O
*	O
e2	*(void)
)	O
;	O
static	O
void	O
rec_mset_elem_dispose_fn	(*(void))->(void)
(	O
const	O
void	O
*	O
e	*(void)
)	O
;	O
static	O
int	O
rec_mset_elem_compare_fn	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
e1	*(void)
,	O
const	O
void	O
*	O
e2	*(void)
)	O
;	O
static	O
rec_mset_list_iter_t	struct(*(void),*(void),long,*(void),*(void),long,long)
rec_mset_iter_gl2mset	(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))->(struct(*(void),*(void),long,*(void),*(void),long,long))
(	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
static	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
rec_mset_iter_mset2gl	(struct(*(void),*(void),long,*(void),*(void),long,long))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
rec_mset_list_iter_t	struct(*(void),*(void),long,*(void),*(void),long,long)
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
static	O
rec_mset_elem_t	*(struct)
rec_mset_elem_new	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))),int,*(void))->(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
void	O
*	O
data	*(void)
)	O
;	O
static	O
void	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
;	O
rec_mset_t	*(struct)
rec_mset_new	()->(*(struct))
(	O
void	O
)	O
{	O
rec_mset_t	*(struct)
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
;	O
int	O
i	long
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
rec_mset_s	struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))
)	O
)	O
;	O
if	O
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
{	O
rec_mset_init	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))))->(void)
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
ntypes	int
=	O
1	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
MAX_NTYPES	int
;	O
i	long
++	O
)	O
{	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
count	long
[	O
i	long
]	O
=	O
0	int
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
name	*(char)
[	O
i	long
]	O
=	O
NULL	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
equal_fn	*((*(void),*(void))->(bool))
[	O
i	long
]	O
=	O
NULL	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
disp_fn	*((*(void))->(void))
[	O
i	long
]	O
=	O
NULL	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
dup_fn	*((*(void))->(*(void)))
[	O
i	long
]	O
=	O
NULL	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
compare_fn	*((*(void),*(void),int)->(int))
[	O
i	long
]	O
=	O
NULL	O
;	O
}	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
elem_list	*(struct)
=	O
gl_list_nx_create_empty	(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)->(*(struct))
(	O
GL_ARRAY_LIST	O
,	O
rec_mset_elem_equal_fn	(*(void),*(void))->(bool)
,	O
NULL	O
,	O
rec_mset_elem_dispose_fn	(*(void))->(void)
,	O
true	int
)	O
;	O
if	O
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
elem_list	*(struct)
==	O
NULL	O
)	O
{	O
rec_mset_destroy	(*(struct))->(void)
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
=	O
NULL	O
;	O
}	O
}	O
return	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
;	O
}	O
void	O
rec_mset_destroy	(*(struct))->(void)
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
{	O
if	O
(	O
mset	*(struct)
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mset	*(struct)
->	O
ntypes	int
;	O
i	long
++	O
)	O
free	(*(void))->(void)
(	O
mset	*(struct)
->	O
name	*(char)
[	O
i	long
]	O
)	O
;	O
gl_list_free	(*(struct))->(void)
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
mset	*(struct)
)	O
;	O
}	O
}	O
rec_mset_t	*(struct)
rec_mset_dup	(*(struct))->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
{	O
rec_mset_t	*(struct)
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
;	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
;	O
int	O
i	long
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
=	O
rec_mset_new	()->(*(struct))
(	O
)	O
;	O
if	O
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
{	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
ntypes	int
=	O
mset	*(struct)
->	O
ntypes	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
ntypes	int
;	O
i	long
++	O
)	O
{	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
count	long
[	O
i	long
]	O
=	O
0	int
;	O
if	O
(	O
mset	*(struct)
->	O
name	*(char)
[	O
i	long
]	O
)	O
{	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
name	*(char)
[	O
i	long
]	O
=	O
strdup	(*(char))->(*(char))
(	O
mset	*(struct)
->	O
name	*(char)
[	O
i	long
]	O
)	O
;	O
if	O
(	O
!	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
name	*(char)
[	O
i	long
]	O
)	O
{	O
rec_mset_destroy	(*(struct))->(void)
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
disp_fn	*((*(void))->(void))
[	O
i	long
]	O
=	O
mset	*(struct)
->	O
disp_fn	*((*(void))->(void))
[	O
i	long
]	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
equal_fn	*((*(void),*(void))->(bool))
[	O
i	long
]	O
=	O
mset	*(struct)
->	O
equal_fn	*((*(void),*(void))->(bool))
[	O
i	long
]	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
dup_fn	*((*(void))->(*(void)))
[	O
i	long
]	O
=	O
mset	*(struct)
->	O
dup_fn	*((*(void))->(*(void)))
[	O
i	long
]	O
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
compare_fn	*((*(void),*(void),int)->(int))
[	O
i	long
]	O
=	O
mset	*(struct)
->	O
compare_fn	*((*(void),*(void),int)->(int))
[	O
i	long
]	O
;	O
}	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
=	O
gl_list_iterator	(*(struct))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
while	O
(	O
gl_list_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
elem	*(struct)
,	O
NULL	O
)	O
)	O
{	O
void	O
*	O
data	*(void)
=	O
NULL	O
;	O
if	O
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
dup_fn	*((*(void))->(*(void)))
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
)	O
{	O
data	*(void)
=	O
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
dup_fn	*((*(void))->(*(void)))
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
)	O
(	O
elem	*(struct)
->	O
data	*(void)
)	O
;	O
if	O
(	O
!	O
data	*(void)
)	O
{	O
rec_mset_destroy	(*(struct))->(void)
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
else	O
{	O
data	*(void)
=	O
elem	*(struct)
->	O
data	*(void)
;	O
}	O
rec_mset_append	(*(struct),int,*(void),int)->(*(struct))
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
,	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
,	O
data	*(void)
,	O
MSET_ANY	int
)	O
;	O
}	O
gl_list_iterator_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)))->(void)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
)	O
;	O
}	O
return	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
;	O
}	O
rec_mset_t	*(struct)
rec_mset_sort	(*(struct))->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
{	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
;	O
gl_list_t	*(struct)
list	*(void)
;	O
list	*(void)
=	O
mset	*(struct)
->	O
elem_list	*(struct)
;	O
mset	*(struct)
->	O
elem_list	*(struct)
=	O
gl_list_nx_create_empty	(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)->(*(struct))
(	O
GL_ARRAY_LIST	O
,	O
rec_mset_elem_equal_fn	(*(void),*(void))->(bool)
,	O
NULL	O
,	O
rec_mset_elem_dispose_fn	(*(void))->(void)
,	O
true	int
)	O
;	O
if	O
(	O
!	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
{	O
return	O
NULL	O
;	O
}	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
=	O
gl_list_iterator	(*(struct))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
list	*(void)
)	O
;	O
while	O
(	O
gl_list_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
elem	*(struct)
,	O
NULL	O
)	O
)	O
{	O
if	O
(	O
!	O
rec_mset_add_sorted	(*(struct),int,*(void))->(*(struct))
(	O
mset	*(struct)
,	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
,	O
elem	*(struct)
->	O
data	*(void)
)	O
)	O
{	O
gl_list_free	(*(struct))->(void)
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
mset	*(struct)
->	O
elem_list	*(struct)
=	O
list	*(void)
;	O
return	O
NULL	O
;	O
}	O
elem	*(struct)
->	O
data	*(void)
=	O
NULL	O
;	O
}	O
gl_list_iterator_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)))->(void)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
)	O
;	O
gl_list_free	(*(struct))->(void)
(	O
list	*(void)
)	O
;	O
return	O
mset	*(struct)
;	O
}	O
bool	bool
rec_mset_type_p	(*(struct),int)->(bool)
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
)	O
{	O
return	O
type	enum(int,int,int,int)
<	O
mset	*(struct)
->	O
ntypes	int
;	O
}	O
rec_mset_type_t	int
rec_mset_register_type	(*(struct),*(char),*((*(void))->(void)),*((*(void),*(void))->(bool)),*((*(void))->(*(void))),*((*(void),*(void),int)->(int)))->(int)
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
char	O
*	O
name	*(char)
,	O
rec_mset_disp_fn_t	*((*(void))->(void))
disp_fn	*((*(void))->(void))
,	O
rec_mset_equal_fn_t	*((*(void),*(void))->(bool))
equal_fn	*((*(void),*(void))->(bool))
,	O
rec_mset_dup_fn_t	*((*(void))->(*(void)))
dup_fn	*((*(void))->(*(void)))
,	O
rec_mset_compare_fn_t	*((*(void),*(void),int)->(int))
compare_fn	*((*(void),*(void),int)->(int))
)	O
{	O
rec_mset_type_t	int
new_type	int
;	O
new_type	int
=	O
mset	*(struct)
->	O
ntypes	int
++	O
;	O
mset	*(struct)
->	O
count	long
[	O
new_type	int
]	O
=	O
0	int
;	O
mset	*(struct)
->	O
name	*(char)
[	O
new_type	int
]	O
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
mset	*(struct)
->	O
disp_fn	*((*(void))->(void))
[	O
new_type	int
]	O
=	O
disp_fn	*((*(void))->(void))
;	O
mset	*(struct)
->	O
equal_fn	*((*(void),*(void))->(bool))
[	O
new_type	int
]	O
=	O
equal_fn	*((*(void),*(void))->(bool))
;	O
mset	*(struct)
->	O
dup_fn	*((*(void))->(*(void)))
[	O
new_type	int
]	O
=	O
dup_fn	*((*(void))->(*(void)))
;	O
mset	*(struct)
->	O
compare_fn	*((*(void),*(void),int)->(int))
[	O
new_type	int
]	O
=	O
compare_fn	*((*(void),*(void),int)->(int))
;	O
return	O
new_type	int
;	O
}	O
size_t	long
rec_mset_count	(*(struct),int)->(long)
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
)	O
{	O
return	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
;	O
}	O
void	O
*	O
rec_mset_get_at	(*(struct),int,long)->(*(void))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
size_t	long
position	long
)	O
{	O
void	O
*	O
result	*(*(char))
;	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
if	O
(	O
(	O
position	long
<	O
0	int
)	O
||	O
(	O
position	long
>=	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
)	O
)	O
{	O
return	O
NULL	O
;	O
}	O
if	O
(	O
type	enum(int,int,int,int)
==	O
MSET_ANY	int
)	O
{	O
elem	*(struct)
=	O
(	O
rec_mset_elem_t	*(struct)
)	O
gl_list_get_at	(*(struct),long)->(*(void))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
position	long
)	O
;	O
}	O
else	O
{	O
rec_mset_elem_t	*(struct)
cur_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
;	O
gl_list_node_t	*(struct)
node	*(struct)
;	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
;	O
int	O
count	long
[	O
MAX_NTYPES	int
]	O
;	O
int	O
i	long
=	O
0	int
;	O
elem	*(struct)
=	O
NULL	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
MAX_NTYPES	int
;	O
i	long
++	O
)	O
{	O
count	long
[	O
i	long
]	O
=	O
0	int
;	O
}	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
=	O
gl_list_iterator	(*(struct))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
while	O
(	O
gl_list_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
cur_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
,	O
&	O
node	*(struct)
)	O
)	O
{	O
if	O
(	O
(	O
type	enum(int,int,int,int)
==	O
MSET_ANY	int
)	O
||	O
(	O
(	O
type	enum(int,int,int,int)
==	O
cur_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
type	enum(int,int,int,int)
)	O
&&	O
(	O
count	long
[	O
cur_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
type	enum(int,int,int,int)
]	O
==	O
position	long
)	O
)	O
)	O
{	O
elem	*(struct)
=	O
cur_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
;	O
break	O
;	O
}	O
else	O
{	O
count	long
[	O
cur_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
type	enum(int,int,int,int)
]	O
++	O
;	O
count	long
[	O
0	int
]	O
++	O
;	O
}	O
}	O
}	O
if	O
(	O
elem	*(struct)
)	O
{	O
result	*(*(char))
=	O
elem	*(struct)
->	O
data	*(void)
;	O
}	O
else	O
{	O
result	*(*(char))
=	O
NULL	O
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
bool	bool
rec_mset_remove_at	(*(struct),int,long)->(bool)
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
size_t	long
position	long
)	O
{	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
void	O
*	O
data	*(void)
;	O
bool	bool
removed	bool
=	O
false	int
;	O
if	O
(	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
>	O
0	int
)	O
{	O
if	O
(	O
position	long
<	O
0	int
)	O
{	O
position	long
=	O
0	int
;	O
}	O
if	O
(	O
position	long
>=	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
)	O
{	O
position	long
=	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
-	O
1	int
;	O
}	O
data	*(void)
=	O
rec_mset_get_at	(*(struct),int,long)->(*(void))
(	O
mset	*(struct)
,	O
type	enum(int,int,int,int)
,	O
position	long
)	O
;	O
elem	*(struct)
=	O
rec_mset_search	(*(struct),*(void))->(*(struct))
(	O
mset	*(struct)
,	O
data	*(void)
)	O
;	O
if	O
(	O
rec_mset_remove_elem	(*(struct),*(struct))->(bool)
(	O
mset	*(struct)
,	O
elem	*(struct)
)	O
)	O
{	O
removed	bool
=	O
true	int
;	O
}	O
}	O
return	O
removed	bool
;	O
}	O
rec_mset_elem_t	*(struct)
rec_mset_insert_at	(*(struct),int,*(void),long)->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
void	O
*	O
data	*(void)
,	O
size_t	long
position	long
)	O
{	O
rec_mset_elem_t	*(struct)
elem	*(struct)
=	O
NULL	O
;	O
gl_list_node_t	*(struct)
node	*(struct)
;	O
node	*(struct)
=	O
NULL	O
;	O
elem	*(struct)
=	O
rec_mset_elem_new	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))),int,*(void))->(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))
(	O
mset	*(struct)
,	O
type	enum(int,int,int,int)
,	O
data	*(void)
)	O
;	O
if	O
(	O
!	O
elem	*(struct)
)	O
{	O
return	O
NULL	O
;	O
}	O
if	O
(	O
position	long
<	O
0	int
)	O
{	O
node	*(struct)
=	O
gl_list_nx_add_first	(*(struct),*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
(	O
void	O
*	O
)	O
elem	*(struct)
)	O
;	O
}	O
else	O
if	O
(	O
position	long
>=	O
mset	*(struct)
->	O
count	long
[	O
0	int
]	O
)	O
{	O
node	*(struct)
=	O
gl_list_nx_add_last	(*(struct),*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
(	O
void	O
*	O
)	O
elem	*(struct)
)	O
;	O
}	O
else	O
{	O
node	*(struct)
=	O
gl_list_nx_add_at	(*(struct),long,*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
position	long
,	O
(	O
void	O
*	O
)	O
elem	*(struct)
)	O
;	O
}	O
if	O
(	O
node	*(struct)
==	O
NULL	O
)	O
{	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
elem	*(struct)
)	O
;	O
elem	*(struct)
=	O
NULL	O
;	O
}	O
else	O
{	O
elem	*(struct)
->	O
list_node	*(struct)
=	O
node	*(struct)
;	O
mset	*(struct)
->	O
count	long
[	O
0	int
]	O
++	O
;	O
if	O
(	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
!=	O
MSET_ANY	int
)	O
{	O
mset	*(struct)
->	O
count	long
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
++	O
;	O
}	O
}	O
return	O
elem	*(struct)
;	O
}	O
rec_mset_elem_t	*(struct)
rec_mset_append	(*(struct),int,*(void),int)->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
elem_type	int
,	O
void	O
*	O
data	*(void)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
)	O
{	O
return	O
rec_mset_insert_at	(*(struct),int,*(void),long)->(*(struct))
(	O
mset	*(struct)
,	O
elem_type	int
,	O
data	*(void)
,	O
rec_mset_count	(*(struct),int)->(long)
(	O
mset	*(struct)
,	O
type	enum(int,int,int,int)
)	O
)	O
;	O
}	O
bool	bool
rec_mset_remove_elem	(*(struct),*(struct))->(bool)
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
{	O
rec_mset_type_t	int
type	enum(int,int,int,int)
=	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
;	O
bool	bool
res	bool
=	O
gl_list_remove_node	(*(struct),*(struct))->(bool)
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
elem	*(struct)
->	O
list_node	*(struct)
)	O
;	O
if	O
(	O
res	bool
)	O
{	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
--	O
;	O
if	O
(	O
type	enum(int,int,int,int)
!=	O
MSET_ANY	int
)	O
{	O
mset	*(struct)
->	O
count	long
[	O
MSET_ANY	int
]	O
--	O
;	O
}	O
}	O
return	O
res	bool
;	O
}	O
rec_mset_elem_t	*(struct)
rec_mset_insert_after	(*(struct),int,*(void),*(struct))->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
void	O
*	O
data	*(void)
,	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
{	O
rec_mset_elem_t	*(struct)
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
;	O
gl_list_node_t	*(struct)
node	*(struct)
;	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
=	O
rec_mset_elem_new	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))),int,*(void))->(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))
(	O
mset	*(struct)
,	O
type	enum(int,int,int,int)
,	O
data	*(void)
)	O
;	O
if	O
(	O
!	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
)	O
{	O
return	O
NULL	O
;	O
}	O
node	*(struct)
=	O
gl_list_search	(*(struct),*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
(	O
void	O
*	O
)	O
elem	*(struct)
)	O
;	O
if	O
(	O
node	*(struct)
)	O
{	O
node	*(struct)
=	O
gl_list_nx_add_after	(*(struct),*(struct),*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
node	*(struct)
,	O
(	O
void	O
*	O
)	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
node	*(struct)
)	O
{	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
list_node	*(struct)
=	O
node	*(struct)
;	O
mset	*(struct)
->	O
count	long
[	O
0	int
]	O
++	O
;	O
if	O
(	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
type	enum(int,int,int,int)
!=	O
MSET_ANY	int
)	O
{	O
mset	*(struct)
->	O
count	long
[	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
type	enum(int,int,int,int)
]	O
++	O
;	O
}	O
}	O
else	O
{	O
node	*(struct)
=	O
gl_list_nx_add_last	(*(struct),*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
(	O
void	O
*	O
)	O
elem	*(struct)
)	O
;	O
if	O
(	O
!	O
node	*(struct)
)	O
{	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
list_node	*(struct)
=	O
node	*(struct)
;	O
}	O
return	O
new_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
;	O
}	O
rec_mset_elem_t	*(struct)
rec_mset_search	(*(struct),*(void))->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
void	O
*	O
data	*(void)
)	O
{	O
rec_mset_elem_t	*(struct)
result	*(*(char))
=	O
NULL	O
;	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
;	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
=	O
gl_list_iterator	(*(struct))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
while	O
(	O
gl_list_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
elem	*(struct)
,	O
NULL	O
)	O
)	O
{	O
if	O
(	O
elem	*(struct)
->	O
data	*(void)
==	O
data	*(void)
)	O
{	O
result	*(*(char))
=	O
elem	*(struct)
;	O
break	O
;	O
}	O
}	O
gl_list_iterator_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)))->(void)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
)	O
;	O
return	O
result	*(*(char))
;	O
}	O
rec_mset_iterator_t	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
rec_mset_iterator	(*(struct))->(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
{	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
rec_mset_iterator_t	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
mset	*(struct)
=	O
mset	*(struct)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
=	O
gl_list_iterator	(*(struct))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
=	O
rec_mset_iter_gl2mset	(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))->(struct(*(void),*(void),long,*(void),*(void),long,long))
(	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
return	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
}	O
bool	bool
rec_mset_iterator_next	(*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))),int,*(*(void)),*(*(struct)))->(bool)
(	O
rec_mset_iterator_t	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
*	O
iterator	*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
const	O
void	O
*	O
*	O
data	*(void)
,	O
rec_mset_elem_t	*(struct)
*	O
elem	*(struct)
)	O
{	O
bool	bool
found	bool
=	O
true	int
;	O
rec_mset_elem_t	*(struct)
mset_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
;	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
gl_list_node_t	*(struct)
list_node	*(struct)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
=	O
rec_mset_iter_mset2gl	(struct(*(void),*(void),long,*(void),*(void),long,long))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
iterator	*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
->	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
while	O
(	O
(	O
found	bool
=	O
gl_list_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
&	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
mset_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
,	O
&	O
list_node	*(struct)
)	O
)	O
&&	O
(	O
type	enum(int,int,int,int)
!=	O
0	int
)	O
&&	O
(	O
mset_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
type	enum(int,int,int,int)
!=	O
type	enum(int,int,int,int)
)	O
)	O
;	O
if	O
(	O
found	bool
)	O
{	O
iterator	*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
->	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
=	O
rec_mset_iter_gl2mset	(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))->(struct(*(void),*(void),long,*(void),*(void),long,long))
(	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
if	O
(	O
data	*(void)
)	O
*	O
data	*(void)
=	O
mset_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
data	*(void)
;	O
if	O
(	O
elem	*(struct)
)	O
{	O
mset_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
->	O
list_node	*(struct)
=	O
list_node	*(struct)
;	O
*	O
elem	*(struct)
=	O
mset_elem	*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct`)))))
;	O
}	O
}	O
return	O
found	bool
;	O
}	O
void	O
rec_mset_iterator_free	(*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))))->(void)
(	O
rec_mset_iterator_t	struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long))
*	O
iterator	*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
)	O
{	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
=	O
rec_mset_iter_mset2gl	(struct(*(void),*(void),long,*(void),*(void),long,long))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
iterator	*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
->	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
gl_list_iterator_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)))->(void)
(	O
&	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
iterator	*(struct(*(struct),struct(*(void),*(void),long,*(void),*(void),long,long)))
->	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
=	O
rec_mset_iter_gl2mset	(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))->(struct(*(void),*(void),long,*(void),*(void),long,long))
(	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
;	O
}	O
int	O
rec_mset_elem_type	(*(struct))->(int)
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
{	O
return	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
;	O
}	O
void	O
rec_mset_elem_set_type	(*(struct),int)->(void)
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
)	O
{	O
elem	*(struct)
->	O
mset	*(struct)
->	O
count	long
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
--	O
;	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
=	O
type	enum(int,int,int,int)
;	O
elem	*(struct)
->	O
mset	*(struct)
->	O
count	long
[	O
type	enum(int,int,int,int)
]	O
++	O
;	O
}	O
void	O
*	O
rec_mset_elem_data	(*(struct))->(*(void))
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
{	O
return	O
elem	*(struct)
->	O
data	*(void)
;	O
}	O
void	O
rec_mset_elem_set_data	(*(struct),*(void))->(void)
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
,	O
void	O
*	O
data	*(void)
)	O
{	O
elem	*(struct)
->	O
data	*(void)
=	O
data	*(void)
;	O
}	O
bool	bool
rec_mset_elem_equal_p	(*(struct),*(struct))->(bool)
(	O
rec_mset_elem_t	*(struct)
elem1	*(struct)
,	O
rec_mset_elem_t	*(struct)
elem2	*(struct)
)	O
{	O
return	O
rec_mset_elem_equal_fn	(*(void),*(void))->(bool)
(	O
(	O
void	O
*	O
)	O
elem1	*(struct)
,	O
(	O
void	O
*	O
)	O
elem2	*(struct)
)	O
;	O
}	O
void	O
*	O
rec_mset_elem_dup_data	(*(struct))->(*(void))
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
{	O
return	O
elem	*(struct)
->	O
mset	*(struct)
->	O
dup_fn	*((*(void))->(*(void)))
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
(	O
elem	*(struct)
->	O
data	*(void)
)	O
;	O
}	O
void	O
rec_mset_dump	(*(struct))->(void)
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
{	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
;	O
gl_list_node_t	*(struct)
node	*(struct)
;	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
int	O
i	long
;	O
printf	(*(char))->(int)
(	O
"MSET:\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"  ntypes: %d\n"	*(char)
,	O
mset	*(struct)
->	O
ntypes	int
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
mset	*(struct)
->	O
ntypes	int
;	O
i	long
++	O
)	O
{	O
printf	(*(char))->(int)
(	O
"  type %d:\n"	*(char)
,	O
i	long
)	O
;	O
printf	(*(char))->(int)
(	O
"    count:     %zd\n"	*(char)
,	O
mset	*(struct)
->	O
count	long
[	O
i	long
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"    disp_fn:   %p\n"	*(char)
,	O
mset	*(struct)
->	O
disp_fn	*((*(void))->(void))
[	O
i	long
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"    equal_fn:  %p\n"	*(char)
,	O
mset	*(struct)
->	O
equal_fn	*((*(void),*(void))->(bool))
[	O
i	long
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
"    dup_fn:    %p\n"	*(char)
,	O
mset	*(struct)
->	O
dup_fn	*((*(void))->(*(void)))
[	O
i	long
]	O
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"  nodes:\n"	*(char)
)	O
;	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
=	O
gl_list_iterator	(*(struct))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
)	O
;	O
while	O
(	O
gl_list_iterator_next	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)
(	O
&	O
iter	struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long)
,	O
(	O
const	O
void	O
*	O
*	O
)	O
&	O
elem	*(struct)
,	O
&	O
node	*(struct)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
"    node=%p elem=%p elem->type=%d elem->data=%p contained=%p\n"	*(char)
,	O
node	*(struct)
,	O
elem	*(struct)
,	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
,	O
elem	*(struct)
->	O
data	*(void)
,	O
elem	*(struct)
->	O
mset	*(struct)
)	O
;	O
i	long
++	O
;	O
}	O
printf	(*(char))->(int)
(	O
"END MSET\n"	*(char)
)	O
;	O
}	O
rec_mset_elem_t	*(struct)
rec_mset_add_sorted	(*(struct),int,*(void))->(*(struct))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
void	O
*	O
data	*(void)
)	O
{	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
gl_list_node_t	*(struct)
node	*(struct)
;	O
elem	*(struct)
=	O
rec_mset_elem_new	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))),int,*(void))->(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))
(	O
mset	*(struct)
,	O
type	enum(int,int,int,int)
,	O
data	*(void)
)	O
;	O
if	O
(	O
!	O
elem	*(struct)
)	O
{	O
return	O
NULL	O
;	O
}	O
node	*(struct)
=	O
gl_sortedlist_nx_add	(*(struct),*((*(void),*(void))->(int)),*(void))->(*(struct))
(	O
mset	*(struct)
->	O
elem_list	*(struct)
,	O
rec_mset_elem_compare_fn	(*(void),*(void))->(int)
,	O
(	O
void	O
*	O
)	O
elem	*(struct)
)	O
;	O
if	O
(	O
!	O
node	*(struct)
)	O
{	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
elem	*(struct)
)	O
;	O
return	O
NULL	O
;	O
}	O
elem	*(struct)
->	O
list_node	*(struct)
=	O
node	*(struct)
;	O
mset	*(struct)
->	O
count	long
[	O
0	int
]	O
++	O
;	O
if	O
(	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
!=	O
MSET_ANY	int
)	O
{	O
mset	*(struct)
->	O
count	long
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
++	O
;	O
}	O
return	O
elem	*(struct)
;	O
}	O
static	O
void	O
rec_mset_init	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))))->(void)
(	O
rec_mset_t	*(struct)
mset	*(struct)
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
mset	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
struct	O
rec_mset_s	struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))
)	O
)	O
;	O
}	O
static	O
bool	bool
rec_mset_elem_equal_fn	(*(void),*(void))->(bool)
(	O
const	O
void	O
*	O
e1	*(void)
,	O
const	O
void	O
*	O
e2	*(void)
)	O
{	O
rec_mset_elem_t	*(struct)
elem1	*(struct)
;	O
rec_mset_elem_t	*(struct)
elem2	*(struct)
;	O
elem1	*(struct)
=	O
(	O
rec_mset_elem_t	*(struct)
)	O
e1	*(void)
;	O
elem2	*(struct)
=	O
(	O
rec_mset_elem_t	*(struct)
)	O
e2	*(void)
;	O
if	O
(	O
(	O
elem1	*(struct)
->	O
mset	*(struct)
!=	O
elem2	*(struct)
->	O
mset	*(struct)
)	O
||	O
(	O
elem1	*(struct)
->	O
type	enum(int,int,int,int)
!=	O
elem2	*(struct)
->	O
type	enum(int,int,int,int)
)	O
)	O
{	O
return	O
false	int
;	O
}	O
return	O
(	O
elem1	*(struct)
->	O
mset	*(struct)
->	O
equal_fn	*((*(void),*(void))->(bool))
[	O
elem1	*(struct)
->	O
type	enum(int,int,int,int)
]	O
)	O
(	O
elem1	*(struct)
->	O
data	*(void)
,	O
elem2	*(struct)
->	O
data	*(void)
)	O
;	O
}	O
static	O
void	O
rec_mset_elem_dispose_fn	(*(void))->(void)
(	O
const	O
void	O
*	O
e	*(void)
)	O
{	O
rec_mset_elem_t	*(struct)
elem	*(struct)
;	O
elem	*(struct)
=	O
(	O
rec_mset_elem_t	*(struct)
)	O
e	*(void)
;	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
elem	*(struct)
)	O
;	O
}	O
static	O
int	O
rec_mset_elem_compare_fn	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
e1	*(void)
,	O
const	O
void	O
*	O
e2	*(void)
)	O
{	O
int	O
result	*(*(char))
=	O
0	int
;	O
rec_mset_elem_t	*(struct)
elem1	*(struct)
;	O
rec_mset_elem_t	*(struct)
elem2	*(struct)
;	O
elem1	*(struct)
=	O
(	O
rec_mset_elem_t	*(struct)
)	O
e1	*(void)
;	O
elem2	*(struct)
=	O
(	O
rec_mset_elem_t	*(struct)
)	O
e2	*(void)
;	O
if	O
(	O
elem1	*(struct)
->	O
mset	*(struct)
->	O
compare_fn	*((*(void),*(void),int)->(int))
)	O
{	O
result	*(*(char))
=	O
(	O
elem1	*(struct)
->	O
mset	*(struct)
->	O
compare_fn	*((*(void),*(void),int)->(int))
[	O
elem1	*(struct)
->	O
type	enum(int,int,int,int)
]	O
)	O
(	O
elem1	*(struct)
->	O
data	*(void)
,	O
elem2	*(struct)
->	O
data	*(void)
,	O
elem2	*(struct)
->	O
type	enum(int,int,int,int)
)	O
;	O
}	O
return	O
result	*(*(char))
;	O
}	O
static	O
rec_mset_list_iter_t	struct(*(void),*(void),long,*(void),*(void),long,long)
rec_mset_iter_gl2mset	(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))->(struct(*(void),*(void),long,*(void),*(void),long,long))
(	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
{	O
rec_mset_list_iter_t	struct(*(void),*(void),long,*(void),*(void),long,long)
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
vtable	*(void)
=	O
(	O
void	O
*	O
)	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
vtable	*(void)
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
list	*(void)
=	O
(	O
void	O
*	O
)	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
list	*(void)
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
count	long
=	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
count	long
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
p	*(void)
=	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
p	*(void)
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
q	*(void)
=	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
q	*(void)
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
i	long
=	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
i	long
;	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
j	long
=	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
j	long
;	O
return	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
}	O
static	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
rec_mset_iter_mset2gl	(struct(*(void),*(void),long,*(void),*(void),long,long))->(struct(*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*(struct),long,*(void),*(void),long,long))
(	O
rec_mset_list_iter_t	struct(*(void),*(void),long,*(void),*(void),long,long)
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
)	O
{	O
gl_list_iterator_t	struct(*(struct),*(struct),long,*(void),*(void),long,long)
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
vtable	*(void)
=	O
(	O
const	O
struct	O
gl_list_implementation	struct(*((*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool)->(*(struct))),*((*(struct(*((*`,*`,*`,*`,bool)->(*`)),*((*`,*`,*`,*`,bool,long,*`)->(*`)),*((*`)->(long)),*((*`,*`)->(*`)),*((*`,*`,*`)->(int)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,long)->(*`)),*((*`,long,*`)->(*`)),*((*`,long,long,*`)->(*`)),*((*`,long,long,*`)->(long)),*((*`,*`)->(*`)),*((*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(*`)),*((*`,long,*`)->(*`)),*((*`,*`)->(bool)),*((*`,long)->(bool)),*((*`,*`)->(bool)),*((*`)->(void)),*((*`)->(struct`)),*((*`,long,long)->(struct`)),*((*`,*`,*`)->(bool)),*((*`)->(void)),*((*`,*`,*`)->(*`)),*((*`,*`,long,long,*`)->(*`)),*((*`,*`,*`)->(long)),*((*`,*`,long,long,*`)->(long)),*((*`,*`,*`)->(*`)),*((*`,*`,*`)->(bool)))),*((*(void),*(void))->(bool)),*((*(void))->(long)),*((*(void))->(void)),bool,long,*(*(void)))->(*(struct))),*((*(struct))->(long)),*((*(struct),*(struct))->(*(void))),*((*(struct),*(struct),*(void))->(int)),*((*(struct),*(struct))->(*(struct))),*((*(struct),*(struct))->(*(struct))),*((*(struct),long)->(*(void))),*((*(struct),long,*(void))->(*(struct))),*((*(struct),long,long,*(void))->(*(struct))),*((*(struct),long,long,*(void))->(long)),*((*(struct),*(void))->(*(struct))),*((*(struct),*(void))->(*(struct))),*((*(struct),*(struct),*(void))->(*(struct))),*((*(struct),*(struct),*(void))->(*(struct))),*((*(struct),long,*(void))->(*(struct))),*((*(struct),*(struct))->(bool)),*((*(struct),long)->(bool)),*((*(struct),*(void))->(bool)),*((*(struct))->(void)),*((*(struct))->(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long))),*((*(struct),long,long)->(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct),long,*(void),*(void),long,long))),*((*(struct(*(struct`),*(struct`),long,*(void),*(void),long,long)),*(*(void)),*(*(struct)))->(bool)),*((*(struct(*(struct`),*(struct`),long,*(void),*(void),long,long)))->(void)),*((*(struct),*((*(void),*(void))->(int)),*(void))->(*(struct))),*((*(struct),*((*(void),*(void))->(int)),long,long,*(void))->(*(struct))),*((*(struct),*((*(void),*(void))->(int)),*(void))->(long)),*((*(struct),*((*(void),*(void))->(int)),long,long,*(void))->(long)),*((*(struct),*((*(void),*(void))->(int)),*(void))->(*(struct))),*((*(struct),*((*(void),*(void))->(int)),*(void))->(bool)))
*	O
)	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
vtable	*(void)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
list	*(void)
=	O
(	O
gl_list_t	*(struct)
)	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
list	*(void)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
count	long
=	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
count	long
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
p	*(void)
=	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
p	*(void)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
q	*(void)
=	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
q	*(void)
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
i	long
=	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
i	long
;	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
j	long
=	O
mset_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
.	O
j	long
;	O
return	O
list_iter	struct(*(void),*(void),long,*(void),*(void),long,long)
;	O
}	O
static	O
rec_mset_elem_t	*(struct)
rec_mset_elem_new	(*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct))),int,*(void))->(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))
(	O
rec_mset_t	*(struct)
mset	*(struct)
,	O
rec_mset_type_t	int
type	enum(int,int,int,int)
,	O
void	O
*	O
data	*(void)
)	O
{	O
rec_mset_elem_t	*(struct)
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
;	O
if	O
(	O
type	enum(int,int,int,int)
>=	O
mset	*(struct)
->	O
ntypes	int
)	O
{	O
return	O
NULL	O
;	O
}	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
rec_mset_elem_s	struct(int,*(void),*(struct),*(struct))
)	O
)	O
;	O
if	O
(	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
)	O
{	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
type	enum(int,int,int,int)
=	O
type	enum(int,int,int,int)
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
data	*(void)
=	O
data	*(void)
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
mset	*(struct)
=	O
mset	*(struct)
;	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
->	O
list_node	*(struct)
=	O
NULL	O
;	O
}	O
return	O
new	*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*(struct)))
;	O
}	O
static	O
void	O
rec_mset_elem_destroy	(*(struct(int,*(void),*(struct),*(struct(int,array(*(char)),array(*((*(void))->(void))),array(*((*(void),*(void))->(bool))),array(*((*(void))->(*(void)))),array(*((*(void),*(void),int)->(int))),array(long),*`)))))->(void)
(	O
rec_mset_elem_t	*(struct)
elem	*(struct)
)	O
{	O
if	O
(	O
elem	*(struct)
)	O
{	O
if	O
(	O
elem	*(struct)
->	O
data	*(void)
&&	O
elem	*(struct)
->	O
mset	*(struct)
->	O
disp_fn	*((*(void))->(void))
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
)	O
{	O
elem	*(struct)
->	O
mset	*(struct)
->	O
disp_fn	*((*(void))->(void))
[	O
elem	*(struct)
->	O
type	enum(int,int,int,int)
]	O
(	O
elem	*(struct)
->	O
data	*(void)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
elem	*(struct)
)	O
;	O
}	O
}	O
