void	O
MY_CONNECT	(int,*(char),*(char))->(void)
(	O
int	O
sockfd	int
,	O
char	O
*	O
host	*(char)
,	O
char	O
*	O
port	*(char)
)	O
{	O
struct	O
hostent	struct(*(char),*(*(char)),int,int,*(*(char)))
*	O
h	*(struct(*(char),*(*(char)),int,int,*(*(char))))
;	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
addr	*(struct(short,array(char)))
;	O
int	O
n	long
;	O
h	*(struct(*(char),*(*(char)),int,int,*(*(char))))
=	O
gethostbyname	(*(char))->(*(struct(*(char),*(*(char)),int,int,*(*(char)))))
(	O
host	*(char)
)	O
;	O
if	O
(	O
h	*(struct(*(char),*(*(char)),int,int,*(*(char))))
==	O
NULL	O
)	O
{	O
herror	(*(char))->(void)
(	O
"gethostbyname"	*(char)
)	O
;	O
xexit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
addr	*(struct(short,array(char)))
.	O
sin_zero	array(char)
,	O
0	int
,	O
sizeof	O
(	O
addr	*(struct(short,array(char)))
.	O
sin_zero	array(char)
)	O
)	O
;	O
addr	*(struct(short,array(char)))
.	O
sin_family	short
=	O
AF_INET	O
;	O
addr	*(struct(short,array(char)))
.	O
sin_port	short
=	O
htons	(short)->(short)
(	O
atoi	(*(char))->(int)
(	O
port	*(char)
)	O
)	O
;	O
addr	*(struct(short,array(char)))
.	O
sin_addr	struct(int)
=	O
*	O
(	O
struct	O
in_addr	struct(int)
*	O
)	O
h	*(struct(*(char),*(*(char)),int,int,*(*(char))))
->	O
h_addr	O
;	O
if	O
(	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
==	O
DIRECT	int
)	O
{	O
n	long
=	O
connect	(int,union(*(struct(short,array(char))),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct),*(struct)),int)->(int)
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
&	O
addr	*(struct(short,array(char)))
,	O
sizeof	O
(	O
struct	O
sockaddr	struct(short,array(char))
)	O
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
perror	(*(char))->(void)
(	O
__FILE__	O
"connect"	*(char)
)	O
;	O
xexit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
(	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
==	O
HTTP_CONNECT	int
)	O
||	O
(	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
==	O
HTTP_CONNECT_AUTH	int
)	O
)	O
{	O
n	long
=	O
CONVIAHTTP_MAIN	(int,*(char),*(char))->(int)
(	O
sockfd	int
,	O
host	*(char)
,	O
port	*(char)
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %s: CONNVIAHTTP_MAIN\n"	*(char)
,	O
progname	*(char)
,	O
__FILE__	O
)	O
;	O
xexit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
(	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
==	O
SOCKS5_CONNECT	int
)	O
||	O
(	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
==	O
SOCKS5_CONNECT_AUTH	int
)	O
)	O
{	O
n	long
=	O
CONVIASOCKS5_MAIN	(int,*(struct(short,array(char))))->(int)
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
(	O
&	O
addr	*(struct(short,array(char)))
)	O
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %s: CONVIASOCKS5_MAIN\n"	*(char)
,	O
progname	*(char)
,	O
__FILE__	O
)	O
;	O
xexit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
else	O
if	O
(	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
==	O
SOCKS4_CONNECT	int
)	O
{	O
n	long
=	O
CONVIASOCKS4_MAIN	()->(int)
(	O
sockfd	int
,	O
(	O
struct	O
sockaddr	struct(short,array(char))
*	O
)	O
(	O
&	O
addr	*(struct(short,array(char)))
)	O
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %s: CONVIASOCKS4_MAIN\n"	*(char)
,	O
progname	*(char)
,	O
__FILE__	O
)	O
;	O
xexit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s %s: mytype=%d is not supported!\n"	*(char)
,	O
progname	*(char)
,	O
__FILE__	O
,	O
my	struct(int,*(char),int,int,*(char),*(char),struct(int),struct(short,short,struct(int),array(char)),*(char),*(char),*(char),*(char))
.	O
mytype	int
)	O
;	O
xexit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
}	O
