int	O
auth_user	(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
struct	O
credentials	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)
*	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
)	O
{	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
guest	int
=	O
0	int
;	O
switch	O
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
auth_type	int
)	O
{	O
case	O
AUTH_TYPE_PASSWD	int
:	O
default	O
:	O
{	O
size_t	long
len	long
;	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
)	O
;	O
len	long
=	O
(	O
size_t	long
)	O
(	O
64	int
+	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
)	O
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
=	O
malloc	(long)->(*(void))
(	O
len	long
)	O
;	O
if	O
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"ftp"	*(char)
)	O
==	O
0	int
||	O
strcmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
"anonymous"	*(char)
)	O
==	O
0	int
)	O
{	O
int	O
err	int
=	O
0	int
;	O
if	O
(	O
checkuser	(*(char),*(char))->(int)
(	O
PATH_FTPUSERS	O
,	O
"ftp"	*(char)
)	O
||	O
checkuser	(*(char),*(char))->(int)
(	O
PATH_FTPUSERS	O
,	O
"anonymous"	*(char)
)	O
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
,	O
len	long
,	O
"User %s access denied."	*(char)
,	O
name	*(char)
)	O
;	O
err	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
sgetcred	(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)))->(int)
(	O
"ftp"	*(char)
,	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
)	O
==	O
0	int
)	O
{	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
guest	int
=	O
1	int
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
,	O
"Guest login ok, type your name as password."	*(char)
)	O
;	O
}	O
else	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
,	O
len	long
,	O
"User %s unknown."	*(char)
,	O
name	*(char)
)	O
;	O
err	int
=	O
1	int
;	O
}	O
return	O
err	int
;	O
}	O
if	O
(	O
sgetcred	(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)))->(int)
(	O
name	*(char)
,	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
)	O
==	O
0	int
)	O
{	O
const	O
char	O
*	O
cp	*(char)
;	O
const	O
char	O
*	O
shell	*(char)
;	O
shell	*(char)
=	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
shell	*(char)
;	O
if	O
(	O
shell	*(char)
==	O
NULL	O
||	O
*	O
shell	*(char)
==	O
0	int
)	O
shell	*(char)
=	O
PATH_BSHELL	O
;	O
setusershell	()->(void)
(	O
)	O
;	O
while	O
(	O
(	O
cp	*(char)
=	O
getusershell	()->(*(char))
(	O
)	O
)	O
!=	O
NULL	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
cp	*(char)
,	O
shell	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
endusershell	()->(void)
(	O
)	O
;	O
if	O
(	O
cp	*(char)
==	O
NULL	O
||	O
checkuser	(*(char),*(char))->(int)
(	O
PATH_FTPUSERS	O
,	O
name	*(char)
)	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
,	O
"User %s access denied."	*(char)
,	O
name	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
else	O
{	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
)	O
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
=	O
NULL	O
;	O
return	O
1	int
;	O
}	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
dochroot	int
=	O
checkuser	(*(char),*(char))->(int)
(	O
PATH_FTPCHROOT	O
,	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
name	*(char)
)	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
message	*(char)
,	O
len	long
,	O
"Password required for %s."	*(char)
,	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
auth_pass	(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)))->(int)
(	O
const	O
char	O
*	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
,	O
struct	O
credentials	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)
*	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
)	O
{	O
switch	O
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
auth_type	int
)	O
{	O
case	O
AUTH_TYPE_PASSWD	int
:	O
default	O
:	O
{	O
char	O
*	O
xpasswd	*(char)
;	O
char	O
*	O
salt	*(char)
=	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
;	O
if	O
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
==	O
NULL	O
||	O
*	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
==	O
'\0'	O
)	O
return	O
1	int
;	O
xpasswd	*(char)
=	O
crypt	(*(char),*(char))->(*(char))
(	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
,	O
salt	*(char)
)	O
;	O
return	O
(	O
!	O
xpasswd	*(char)
||	O
strcmp	(*(char),*(char))->(int)
(	O
xpasswd	*(char)
,	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
)	O
!=	O
0	int
)	O
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
sgetcred	(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
struct	O
credentials	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int)
*	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
1	int
;	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
name	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
)	O
;	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
homedir	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
rootdir	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
shell	*(char)
)	O
;	O
if	O
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_passwd	*(char)
==	O
NULL	O
||	O
strlen	(*(char))->(long)
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_passwd	*(char)
)	O
==	O
1	int
)	O
{	O
struct	O
spwd	struct(*(char),*(char),long,long,long,long,long,long,long)
*	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
;	O
setspent	()->(void)
(	O
)	O
;	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
=	O
getspnam	(*(char))->(*(struct(*(char),*(char),long,long,long,long,long,long,long)))
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
)	O
;	O
if	O
(	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
!=	O
NULL	O
)	O
{	O
time_t	long
now	long
;	O
long	O
today	long
;	O
now	long
=	O
time	struct(long,long)
(	O
(	O
time_t	long
*	O
)	O
0	int
)	O
;	O
today	long
=	O
now	long
/	O
(	O
60	int
*	O
60	int
*	O
24	int
)	O
;	O
if	O
(	O
(	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_expire	long
>	O
0	int
&&	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_expire	long
<	O
today	long
)	O
||	O
(	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_max	long
>	O
0	int
&&	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_lstchg	long
>	O
0	int
&&	O
(	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_lstchg	long
+	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_max	long
<	O
today	long
)	O
)	O
)	O
{	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_passwd	*(char)
=	O
NULL	O
;	O
}	O
else	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_passwd	*(char)
=	O
spw	*(struct(*(char),*(char),long,long,long,long,long,long,long))
->	O
sp_pwdp	*(char)
;	O
}	O
endspent	()->(void)
(	O
)	O
;	O
}	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
uid	int
=	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
gid	int
=	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_gid	int
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
name	*(char)
=	O
sgetsave	(*(char))->(*(char))
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
)	O
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
=	O
sgetsave	(*(char))->(*(char))
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_passwd	*(char)
)	O
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
rootdir	*(char)
=	O
sgetsave	(*(char))->(*(char))
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_dir	*(char)
)	O
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
homedir	*(char)
=	O
sgetsave	(*(char))->(*(char))
(	O
"/"	*(char)
)	O
;	O
pcred	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),int,int,int,int,int,int))
->	O
shell	*(char)
=	O
sgetsave	(*(char))->(*(char))
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_shell	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
