int	O
osip_authentication_info_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
osip_authentication_info_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
*	O
dest	*(char)
=	O
(	O
osip_authentication_info_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_authentication_info_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
*	O
dest	*(char)
,	O
0	int
,	O
sizeof	O
(	O
osip_authentication_info_t	struct
)	O
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_authentication_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
int	O
i	int
;	O
if	O
(	O
hvalue	*(char)
==	O
NULL	O
||	O
hvalue	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_authentication_info_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
&	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
i	int
=	O
osip_authentication_info_parse	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(int)
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
hvalue	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_authentication_info_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
return	O
i	int
;	O
}	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
2	int
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
authentication_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_authentication_info_parse	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(int)
(	O
osip_authentication_info_t	struct
*	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
const	O
char	O
*	O
space	*(char)
,	O
*	O
hack	*(char)
;	O
const	O
char	O
*	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
=	O
NULL	O
;	O
int	O
i	int
;	O
space	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
hvalue	*(char)
,	O
' '	O
)	O
;	O
hack	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
hvalue	*(char)
,	O
'='	O
)	O
;	O
if	O
(	O
space	*(char)
&&	O
hack	*(char)
&&	O
hack	*(char)
>	O
space	*(char)
)	O
{	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
space	*(char)
-	O
hvalue	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	(*(char),*(char),long)->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
,	O
hvalue	*(char)
,	O
space	*(char)
-	O
hvalue	*(char)
)	O
;	O
}	O
else	O
space	*(char)
=	O
hvalue	*(char)
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
parse_ok	int
=	O
0	int
;	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"nextnonce"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"cnonce"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"rspauth"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"nc"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"qop"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"snum"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"srand"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"targetname"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"realm"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	(*(char),*(char),*(*(char)),*(*(char)))->(int)
(	O
"opaque"	*(char)
,	O
space	*(char)
,	O
&	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
,	O
&	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
!=	O
space	*(char)
)	O
{	O
space	*(char)
=	O
next	*(struct(*(struct(*(struct`),*(void))),*(void)))
;	O
parse_ok	int
++	O
;	O
}	O
if	O
(	O
0	int
==	O
parse_ok	int
)	O
{	O
const	O
char	O
*	O
quote1	*(char)
,	O
*	O
quote2	*(char)
,	O
*	O
tmp	*(char)
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
space	*(char)
)	O
<	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
tmp	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
space	*(char)
+	O
1	int
,	O
','	O
)	O
;	O
if	O
(	O
tmp	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
quote1	*(char)
=	O
__osip_quote_find	(*(char))->(*(char))
(	O
space	*(char)
)	O
;	O
if	O
(	O
(	O
quote1	*(char)
!=	O
NULL	O
)	O
&&	O
(	O
quote1	*(char)
<	O
tmp	*(char)
)	O
)	O
{	O
quote2	*(char)
=	O
__osip_quote_find	(*(char))->(*(char))
(	O
quote1	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
quote2	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
tmp	*(char)
<	O
quote2	*(char)
)	O
space	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
quote2	*(char)
,	O
','	O
)	O
;	O
else	O
space	*(char)
=	O
tmp	*(char)
;	O
if	O
(	O
space	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
space	*(char)
=	O
tmp	*(char)
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_authentication_info	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int,*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
int	O
pos	int
,	O
osip_authentication_info_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
authentication_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<=	O
pos	int
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
=	O
(	O
osip_authentication_info_t	struct
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
authentication_infos	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
*	O
dest	*(char)
=	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
return	O
pos	int
;	O
}	O
char	O
*	O
osip_authentication_info_get_auth_type	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
;	O
}	O
void	O
osip_authentication_info_set_auth_type	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
auth_type	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
=	O
(	O
char	O
*	O
)	O
auth_type	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_nextnonce	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
;	O
}	O
void	O
osip_authentication_info_set_nextnonce	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
nextnonce	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
=	O
(	O
char	O
*	O
)	O
nextnonce	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_cnonce	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
;	O
}	O
void	O
osip_authentication_info_set_cnonce	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
cnonce	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
=	O
(	O
char	O
*	O
)	O
cnonce	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_rspauth	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
;	O
}	O
void	O
osip_authentication_info_set_rspauth	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
rspauth	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
=	O
(	O
char	O
*	O
)	O
rspauth	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_nonce_count	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
;	O
}	O
void	O
osip_authentication_info_set_nonce_count	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
nonce_count	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
=	O
(	O
char	O
*	O
)	O
nonce_count	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_qop_options	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
;	O
}	O
void	O
osip_authentication_info_set_qop_options	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
qop_options	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
=	O
(	O
char	O
*	O
)	O
qop_options	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_snum	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
;	O
}	O
void	O
osip_authentication_info_set_snum	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
snum	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
=	O
(	O
char	O
*	O
)	O
snum	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_srand	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
;	O
}	O
void	O
osip_authentication_info_set_srand	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
srand	(int)->(void)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
=	O
(	O
char	O
*	O
)	O
srand	(int)->(void)
;	O
}	O
char	O
*	O
osip_authentication_info_get_targetname	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
;	O
}	O
void	O
osip_authentication_info_set_targetname	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
targetname	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
=	O
(	O
char	O
*	O
)	O
targetname	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_realm	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
;	O
}	O
void	O
osip_authentication_info_set_realm	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
realm	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
=	O
(	O
char	O
*	O
)	O
realm	*(char)
;	O
}	O
char	O
*	O
osip_authentication_info_get_opaque	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(*(char))
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
return	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
;	O
}	O
void	O
osip_authentication_info_set_opaque	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(char))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
opaque	*(char)
)	O
{	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
=	O
(	O
char	O
*	O
)	O
opaque	*(char)
;	O
}	O
int	O
osip_authentication_info_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(char)))->(int)
(	O
const	O
osip_authentication_info_t	struct
*	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
size_t	long
len	long
;	O
char	O
*	O
tmp	*(char)
,	O
*	O
start	*(char)
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
0	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
+	O
1	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
)	O
+	O
12	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
)	O
+	O
10	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
)	O
+	O
9	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
)	O
+	O
5	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
+	O
6	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
)	O
+	O
7	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
)	O
+	O
8	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
+	O
13	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
+	O
8	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	(*(char))->(long)
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
+	O
9	int
;	O
if	O
(	O
len	long
==	O
0	int
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
++	O
;	O
tmp	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
tmp	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
*	O
dest	*(char)
=	O
tmp	*(char)
;	O
start	*(char)
=	O
tmp	*(char)
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
!=	O
NULL	O
)	O
{	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
" "	*(char)
)	O
;	O
start	*(char)
=	O
tmp	*(char)
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"qop="	*(char)
,	O
4	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"nextnonce="	*(char)
,	O
10	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"rspauth="	*(char)
,	O
8	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"cnonce="	*(char)
,	O
7	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"nc="	*(char)
,	O
3	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"snum="	*(char)
,	O
5	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"srand="	*(char)
,	O
6	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"targetname="	*(char)
,	O
11	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"realm="	*(char)
,	O
6	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
;	O
}	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	*(char)
!=	O
start	*(char)
)	O
{	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
", "	*(char)
,	O
2	int
)	O
;	O
}	O
tmp	*(char)
=	O
osip_strn_append	(*(char),*(char),long)->(*(char))
(	O
tmp	*(char)
,	O
"opaque="	*(char)
,	O
7	int
)	O
;	O
tmp	*(char)
=	O
osip_str_append	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_authentication_info_free	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))))->(void)
(	O
osip_authentication_info_t	struct
*	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
;	O
osip_free	O
(	O
authentication_info	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
}	O
int	O
osip_authentication_info_clone	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char))),*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
const	O
osip_authentication_info_t	struct
*	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
,	O
osip_authentication_info_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
int	O
i	int
;	O
osip_authentication_info_t	struct
*	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_authentication_info_init	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))))->(int)
(	O
&	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
auth_type	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nextnonce	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
cnonce	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
rspauth	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
nonce_count	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
qop_options	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
snum	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
srand	(int)->(void)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
targetname	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
realm	*(char)
)	O
;	O
if	O
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
!=	O
NULL	O
)	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
ainfo	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
->	O
opaque	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
wa	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)))
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
