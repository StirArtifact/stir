int	O
doradwtmp	int
=	O
1	int
;	O
static	O
int	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
static	O
int	O
write_nas_restart	(int,int)->(int)
(	O
int	O
status	int
,	O
grad_uint32_t	int
addr	int
)	O
;	O
static	O
int	O
check_ts	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
int	O
rad_acct_system	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int)->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
int	O
dowtmp	int
)	O
;	O
int	O
rad_acct_db	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int)->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
int	O
authtype	int
)	O
;	O
int	O
rad_acct_ext	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))))->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
)	O
;	O
int	O
radzap	(int,int,*(char),long)->(int)
(	O
grad_uint32_t	int
nasaddr	int
,	O
int	O
port	array(int)
,	O
char	O
*	O
user	*(char)
,	O
time_t	long
t	long
)	O
{	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
radut_file_t	*(struct)
file	*(char)
;	O
grad_uint32_t	int
netaddr	int
;	O
if	O
(	O
t	long
==	O
0	int
)	O
time	struct(long,long)
(	O
&	O
t	long
)	O
;	O
netaddr	int
=	O
htonl	(int)->(int)
(	O
nasaddr	int
)	O
;	O
if	O
(	O
file	*(char)
=	O
grad_ut_setent	(*(char),int)->(*(struct))
(	O
grad_utmp_file	*(char)
,	O
0	int
)	O
)	O
{	O
while	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_ut_getent	(*(struct))->(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))
(	O
file	*(char)
)	O
)	O
{	O
if	O
(	O
(	O
(	O
nasaddr	int
!=	O
0	int
&&	O
netaddr	int
!=	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
nas_address	int
)	O
||	O
(	O
port	array(int)
>=	O
0	int
&&	O
port	array(int)
!=	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
nas_port	int
)	O
||	O
(	O
user	*(char)
!=	O
NULL	O
&&	O
strcmp	(*(char),*(char))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
,	O
user	*(char)
)	O
!=	O
0	int
)	O
||	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
!=	O
P_LOGIN	int
)	O
)	O
continue	O
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
=	O
P_IDLE	int
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
time	struct(long,long)
=	O
t	long
;	O
grad_ut_putent	(*(struct),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
file	*(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
grad_ut_endent	(*(struct))->(void)
(	O
file	*(char)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
store_session_id	(*(char),int,*(char),int)->(void)
(	O
char	O
*	O
buffer	*(char)
,	O
int	O
len	int
,	O
char	O
*	O
id	char
,	O
int	O
idlen	int
)	O
{	O
int	O
off	long
=	O
idlen	int
-	O
len	int
;	O
if	O
(	O
off	long
<	O
0	int
)	O
off	long
=	O
0	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
id	char
+	O
off	long
,	O
len	int
)	O
;	O
buffer	*(char)
[	O
len	int
-	O
1	int
]	O
=	O
0	int
;	O
}	O
int	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
{	O
return	O
grad_radwtmp_putent	(*(char),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
grad_wtmp_file	*(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
void	O
backslashify	(*(char),*(char),int)->(void)
(	O
char	O
*	O
dst	*(char)
,	O
char	O
*	O
src	*(struct(*(char),int,array(int),*(char),long))
,	O
int	O
len	int
)	O
{	O
while	O
(	O
*	O
src	*(struct(*(char),int,array(int),*(char),long))
&&	O
len	int
>	O
1	int
)	O
{	O
switch	O
(	O
*	O
src	*(struct(*(char),int,array(int),*(char),long))
)	O
{	O
case	O
'\\'	O
:	O
ESCAPE	O
(	O
'\\'	O
)	O
;	O
break	O
;	O
case	O
'\a'	O
:	O
ESCAPE	O
(	O
'a'	O
)	O
;	O
break	O
;	O
case	O
'\b'	O
:	O
ESCAPE	O
(	O
'b'	O
)	O
;	O
break	O
;	O
case	O
'\f'	O
:	O
ESCAPE	O
(	O
'f'	O
)	O
;	O
break	O
;	O
case	O
'\n'	O
:	O
ESCAPE	O
(	O
'n'	O
)	O
;	O
break	O
;	O
case	O
'\r'	O
:	O
ESCAPE	O
(	O
'r'	O
)	O
;	O
break	O
;	O
case	O
'\t'	O
:	O
ESCAPE	O
(	O
't'	O
)	O
;	O
break	O
;	O
default	O
:	O
*	O
dst	*(char)
++	O
=	O
*	O
src	*(struct(*(char),int,array(int),*(char),long))
++	O
;	O
len	int
--	O
;	O
}	O
}	O
end	*(long)
:	O
*	O
dst	*(char)
=	O
0	int
;	O
}	O
int	O
check_attribute	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int,int,int)->(int)
(	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
check_pairs	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
int	O
pair_attr	int
,	O
int	O
pair_value	int
,	O
int	O
def	int
)	O
{	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
if	O
(	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
check_pairs	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
pair_attr	int
)	O
)	O
==	O
NULL	O
)	O
return	O
def	int
;	O
do	O
{	O
if	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
==	O
pair_value	int
)	O
return	O
1	int
;	O
check_pairs	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
}	O
while	O
(	O
check_pairs	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
&&	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
check_pairs	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
pair_attr	int
)	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
rad_acct_system	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int)->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
int	O
dowtmp	int
)	O
{	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
int	O
status	int
=	O
-	O
1	int
;	O
int	O
nas_address	int
=	O
0	int
;	O
int	O
protocol	int
=	O
-	O
1	int
;	O
time_t	long
t	long
;	O
int	O
ret	int
=	O
0	int
,	O
rc	int
;	O
int	O
port_seen	int
=	O
0	int
;	O
char	O
buf	*(char)
[	O
GRAD_MAX_LONGNAME	int
]	O
;	O
if	O
(	O
!	O
acct_system	int
)	O
return	O
0	int
;	O
if	O
(	O
(	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_ACCT_STATUS_TYPE	int
)	O
)	O
==	O
NULL	O
)	O
{	O
grad_log_req	(int,*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char))->(void)
(	O
GRAD_LOG_ERR	int
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
_	O
(	O
"no Acct-Status-Type attribute"	*(char)
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
status	int
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
time	struct(long,long)
(	O
&	O
t	long
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
0	int
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
porttype	int
=	O
-	O
1	int
;	O
if	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
realm	array(char)
)	O
{	O
grad_server_t	struct
*	O
server	*(struct(*(char),int,array(int),*(char),long))
=	O
grad_list_item	(*(struct),long)->(*(void))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
realm	array(char)
->	O
queue	*(struct(int,int,int,long,*(struct)))
->	O
servers	*(struct)
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
server_no	int
)	O
;	O
if	O
(	O
server	*(struct(*(char),int,array(int),*(char),long))
)	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
realm_address	int
=	O
server	*(struct(*(char),int,array(int),*(char),long))
->	O
addr	int
;	O
}	O
for	O
(	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
)	O
{	O
switch	O
(	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
attribute	int
)	O
{	O
case	O
DA_USER_NAME	int
:	O
backslashify	(*(char),*(char),int)->(void)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
,	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
,	O
RUT_NAMESIZE	int
)	O
;	O
break	O
;	O
case	O
DA_ORIG_USER_NAME	int
:	O
backslashify	(*(char),*(char),int)->(void)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
orig_login	array(char)
,	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
,	O
RUT_NAMESIZE	int
)	O
;	O
break	O
;	O
case	O
DA_LOGIN_IP_HOST	int
:	O
case	O
DA_FRAMED_IP_ADDRESS	int
:	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
framed_address	int
=	O
htonl	(int)->(int)
(	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
)	O
;	O
break	O
;	O
case	O
DA_FRAMED_PROTOCOL	int
:	O
protocol	int
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
break	O
;	O
case	O
DA_NAS_IP_ADDRESS	int
:	O
nas_address	int
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_address	int
=	O
htonl	(int)->(int)
(	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
)	O
;	O
break	O
;	O
case	O
DA_NAS_PORT_ID	int
:	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_port	int
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
port_seen	int
=	O
1	int
;	O
break	O
;	O
case	O
DA_ACCT_DELAY_TIME	int
:	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
delay	long
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
break	O
;	O
case	O
DA_CALLING_STATION_ID	int
:	O
store_session_id	(*(char),int,*(char),int)->(void)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
caller_id	array(char)
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
caller_id	array(char)
)	O
,	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
,	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
)	O
;	O
break	O
;	O
case	O
DA_CALLED_STATION_ID	int
:	O
break	O
;	O
case	O
DA_ACCT_SESSION_ID	int
:	O
store_session_id	(*(char),int,*(char),int)->(void)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
session_id	array(char)
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
session_id	array(char)
)	O
,	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strvalue	O
,	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_strlength	O
)	O
;	O
break	O
;	O
case	O
DA_NAS_PORT_TYPE	int
:	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
porttype	int
=	O
vp	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
orig_login	array(char)
[	O
0	int
]	O
==	O
0	int
)	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
orig_login	array(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
orig_login	array(char)
)	O
)	O
;	O
if	O
(	O
nas_address	int
==	O
0	int
)	O
{	O
nas_address	int
=	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
ipaddr	int
;	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_address	int
=	O
htonl	(int)->(int)
(	O
nas_address	int
)	O
;	O
}	O
if	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
[	O
0	int
]	O
==	O
0	int
&&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
caller_id	array(char)
[	O
0	int
]	O
!=	O
0	int
)	O
{	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
[	O
0	int
]	O
=	O
'#'	O
;	O
store_session_id	(*(char),int,*(char),int)->(void)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
+	O
1	int
,	O
RUT_NAMESIZE	int
-	O
2	int
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
caller_id	array(char)
,	O
strlen	(*(char))->(long)
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
caller_id	array(char)
)	O
)	O
;	O
}	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
proto	int
=	O
protocol	int
;	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
time	struct(long,long)
=	O
t	long
-	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
delay	long
;	O
if	O
(	O
status	int
==	O
DV_ACCT_STATUS_TYPE_ACCOUNTING_ON	int
&&	O
nas_address	int
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
_	O
(	O
"NAS %s started (Accounting-On packet seen)"	*(char)
)	O
,	O
grad_nas_ip_to_name	(int,*(char),long)->(*(char))
(	O
nas_address	int
,	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
)	O
)	O
;	O
radzap	(int,int,*(char),long)->(int)
(	O
nas_address	int
,	O
-	O
1	int
,	O
NULL	O
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
time	struct(long,long)
)	O
;	O
write_nas_restart	(int,int)->(int)
(	O
status	int
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_address	int
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
status	int
==	O
DV_ACCT_STATUS_TYPE_ACCOUNTING_OFF	int
&&	O
nas_address	int
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
_	O
(	O
"NAS %s shut down (Accounting-Off packet seen)"	*(char)
)	O
,	O
grad_nas_ip_to_name	(int,*(char),long)->(*(char))
(	O
nas_address	int
,	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
)	O
)	O
;	O
radzap	(int,int,*(char),long)->(int)
(	O
nas_address	int
,	O
-	O
1	int
,	O
NULL	O
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
time	struct(long,long)
)	O
;	O
write_nas_restart	(int,int)->(int)
(	O
status	int
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_address	int
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
status	int
!=	O
DV_ACCT_STATUS_TYPE_START	int
&&	O
status	int
!=	O
DV_ACCT_STATUS_TYPE_STOP	int
&&	O
status	int
!=	O
DV_ACCT_STATUS_TYPE_ALIVE	int
)	O
{	O
grad_log_req	(int,*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
_	O
(	O
"unknown packet type (%d)"	*(char)
)	O
,	O
status	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
status	int
==	O
DV_ACCT_STATUS_TYPE_START	int
||	O
status	int
==	O
DV_ACCT_STATUS_TYPE_STOP	int
)	O
{	O
GRAD_DEBUG7	O
(	O
1	int
,	O
"%s: User %s at NAS %s port %d session %-*.*s"	*(char)
,	O
status	int
==	O
DV_ACCT_STATUS_TYPE_START	int
?	O
"start"	*(char)
:	O
"stop"	*(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
,	O
grad_nas_ip_to_name	(int,*(char),long)->(*(char))
(	O
nas_address	int
,	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
)	O
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_port	int
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
session_id	array(char)
)	O
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
session_id	array(char)
)	O
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
session_id	array(char)
)	O
;	O
}	O
if	O
(	O
!	O
port_seen	int
)	O
return	O
0	int
;	O
if	O
(	O
!	O
ACCT_TYPE	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DV_ACCT_TYPE_SYSTEM	int
)	O
)	O
{	O
GRAD_DEBUG1	O
(	O
1	int
,	O
"Acct type system disabled for %s"	*(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
)	O
;	O
return	O
0	int
;	O
}	O
rc	int
=	O
grad_utmp_putent	(*(char),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))),int)->(int)
(	O
grad_utmp_file	*(char)
,	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
status	int
)	O
;	O
GRAD_DEBUG3	O
(	O
1	int
,	O
"grad_utmp_putent=%d for %s/%s"	*(char)
,	O
rc	int
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
session_id	array(char)
)	O
;	O
if	O
(	O
(	O
status	int
!=	O
DV_ACCT_STATUS_TYPE_STOP	int
&&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
[	O
0	int
]	O
==	O
0	int
)	O
||	O
rc	int
==	O
PUTENT_UPDATE	int
)	O
dowtmp	int
=	O
0	int
;	O
if	O
(	O
dowtmp	int
)	O
{	O
stat_update	O
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
status	int
)	O
;	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
else	O
if	O
(	O
rc	int
==	O
PUTENT_UPDATE	int
)	O
{	O
stat_update	O
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
status	int
)	O
;	O
}	O
else	O
{	O
ret	int
=	O
-	O
1	int
;	O
stat_inc	O
(	O
acct	(*(char))->(int)
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
ipaddr	int
,	O
num_norecords	O
)	O
;	O
grad_log_req	(int,*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
_	O
(	O
"NOT writing wtmp record"	*(char)
)	O
)	O
;	O
}	O
return	O
ret	int
;	O
}	O
static	O
void	O
disable_system_acct	()->(void)
(	O
)	O
{	O
radut_file_t	*(struct)
file	*(char)
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
int	O
written	int
=	O
0	int
;	O
if	O
(	O
(	O
file	*(char)
=	O
grad_ut_setent	(*(char),int)->(*(struct))
(	O
grad_utmp_file	*(char)
,	O
0	int
)	O
)	O
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_ut_getent	(*(struct))->(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))
(	O
file	*(char)
)	O
)	O
{	O
switch	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
)	O
{	O
case	O
P_LOGIN	int
:	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
=	O
P_IDLE	int
;	O
time	struct(long,long)
(	O
&	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
time	struct(long,long)
)	O
;	O
grad_ut_putent	(*(struct),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
file	*(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
break	O
;	O
case	O
P_ACCT_ENABLED	int
:	O
time	struct(long,long)
(	O
&	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
time	struct(long,long)
)	O
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
=	O
P_ACCT_DISABLED	int
;	O
grad_ut_putent	(*(struct),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
file	*(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
written	int
=	O
1	int
;	O
break	O
;	O
case	O
P_ACCT_DISABLED	int
:	O
written	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
written	int
)	O
{	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
0	int
,	O
sizeof	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
time	struct(long,long)
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
time	struct(long,long)
)	O
;	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
type	enum(int,int,int,int)
=	O
P_ACCT_DISABLED	int
;	O
grad_ut_putent	(*(struct),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
file	*(char)
,	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
grad_ut_endent	(*(struct))->(void)
(	O
file	*(char)
)	O
;	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_INFO	int
,	O
_	O
(	O
"System accounting is disabled"	*(char)
)	O
)	O
;	O
}	O
static	O
void	O
enable_system_acct	()->(void)
(	O
)	O
{	O
radut_file_t	*(struct)
file	*(char)
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
if	O
(	O
(	O
file	*(char)
=	O
grad_ut_setent	(*(char),int)->(*(struct))
(	O
grad_utmp_file	*(char)
,	O
0	int
)	O
)	O
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_ut_getent	(*(struct))->(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))
(	O
file	*(char)
)	O
)	O
{	O
if	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
==	O
P_ACCT_DISABLED	int
)	O
{	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
=	O
P_ACCT_ENABLED	int
;	O
time	struct(long,long)
(	O
&	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
time	struct(long,long)
)	O
;	O
grad_ut_putent	(*(struct),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
file	*(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
}	O
grad_ut_endent	(*(struct))->(void)
(	O
file	*(char)
)	O
;	O
}	O
void	O
system_acct_init	()->(void)
(	O
)	O
{	O
if	O
(	O
acct_system	int
)	O
enable_system_acct	()->(void)
(	O
)	O
;	O
else	O
disable_system_acct	()->(void)
(	O
)	O
;	O
}	O
int	O
mkdir_path	(*(char),int)->(int)
(	O
char	O
*	O
path	*(char)
,	O
int	O
perms	int
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
path	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
{	O
char	O
*	O
p	*(struct)
;	O
if	O
(	O
errno	O
!=	O
ENOENT	int
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
|	O
GRAD_LOG_PERROR	int
,	O
_	O
(	O
"Cannot stat path component: %s"	*(char)
)	O
,	O
path	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
p	*(struct)
=	O
strrchr	(*(char),int)->(*(char))
(	O
path	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
p	*(struct)
&&	O
p	*(struct)
>	O
path	*(char)
)	O
{	O
int	O
rc	int
;	O
*	O
p	*(struct)
=	O
0	int
;	O
rc	int
=	O
mkdir_path	(*(char),int)->(int)
(	O
path	*(char)
,	O
perms	int
)	O
;	O
*	O
p	*(struct)
=	O
'/'	O
;	O
if	O
(	O
rc	int
)	O
return	O
1	int
;	O
}	O
if	O
(	O
mkdir	(*(char),int)->(int)
(	O
path	*(char)
,	O
perms	int
)	O
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
|	O
GRAD_LOG_PERROR	int
,	O
_	O
(	O
"Cannot create directory %s"	*(char)
)	O
,	O
path	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
!	O
S_ISDIR	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
,	O
_	O
(	O
"Path component is not a directory: %s"	*(char)
)	O
,	O
path	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
check_acct_dir	()->(int)
(	O
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
grad_acct_dir	*(char)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
0	int
)	O
{	O
if	O
(	O
S_ISDIR	O
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
access	(*(char),int)->(int)
(	O
grad_acct_dir	*(char)
,	O
W_OK	int
)	O
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
,	O
_	O
(	O
"%s: directory not writable"	*(char)
)	O
,	O
grad_acct_dir	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
else	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
,	O
_	O
(	O
"%s: not a directory"	*(char)
)	O
,	O
grad_acct_dir	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
if	O
(	O
mkdir_path	(*(char),int)->(int)
(	O
grad_acct_dir	*(char)
,	O
0755	int
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
acct_dir_status	int
;	O
static	O
void	O
acct_after_config_hook	(*(void),*(void))->(void)
(	O
void	O
*	O
arg	*(void)
ARG_UNUSED	O
,	O
void	O
*	O
data	*(void)
ARG_UNUSED	O
)	O
{	O
if	O
(	O
auth_detail	int
||	O
acct_detail	int
)	O
{	O
acct_dir_status	int
=	O
check_acct_dir	()->(int)
(	O
)	O
;	O
if	O
(	O
acct_dir_status	int
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_NOTICE	int
,	O
_	O
(	O
"Detailed accounting is disabled"	*(char)
)	O
)	O
;	O
auth_detail	int
=	O
acct_detail	int
=	O
0	int
;	O
}	O
}	O
}	O
void	O
acct_init	()->(void)
(	O
)	O
{	O
radiusd_set_postconfig_hook	(*((*(void),*(void))->(void)),*(void),int)->(void)
(	O
acct_after_config_hook	(*(void),*(void))->(void)
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
static	O
char	O
*	O
make_legacy_detail_filename	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char))->(*(char))
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
char	O
*	O
default_filename	*(char)
)	O
{	O
char	O
nasname	array(char)
[	O
GRAD_MAX_LONGNAME	int
]	O
;	O
grad_nas_t	struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void))
*	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
;	O
grad_uint32_t	int
ip	*(struct)
;	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
=	O
NULL	O
;	O
ip	*(struct)
=	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
ipaddr	int
;	O
if	O
(	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_NAS_IP_ADDRESS	int
)	O
)	O
!=	O
NULL	O
)	O
ip	*(struct)
=	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
avp_lvalue	O
;	O
if	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
realm	array(char)
)	O
{	O
grad_server_t	struct
*	O
server	*(struct(*(char),int,array(int),*(char),long))
=	O
grad_list_item	(*(struct),long)->(*(void))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
realm	array(char)
->	O
queue	*(struct(int,int,int,long,*(struct)))
->	O
servers	*(struct)
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
server_no	int
)	O
;	O
if	O
(	O
server	*(struct(*(char),int,array(int),*(char),long))
)	O
ip	*(struct)
=	O
server	*(struct(*(char),int,array(int),*(char),long))
->	O
addr	int
;	O
}	O
if	O
(	O
(	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
=	O
grad_nas_lookup_ip	(int)->(*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void))))
(	O
ip	*(struct)
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
->	O
shortname	array(char)
[	O
0	int
]	O
)	O
strcpy	(*(char),*(char))->(*(char))
(	O
nasname	array(char)
,	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
->	O
shortname	array(char)
)	O
;	O
else	O
strcpy	(*(char),*(char))->(*(char))
(	O
nasname	array(char)
,	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
->	O
longname	array(char)
)	O
;	O
}	O
if	O
(	O
cl	*(struct(struct(int,int),array(char),array(char),array(char),*(struct),*(void)))
==	O
NULL	O
)	O
grad_ip_gethostname	(int,*(char),long)->(*(char))
(	O
ip	*(struct)
,	O
nasname	array(char)
,	O
sizeof	O
(	O
nasname	array(char)
)	O
)	O
;	O
return	O
grad_mkfilename	(*(char),*(char))->(*(char))
(	O
nasname	array(char)
,	O
default_filename	*(char)
)	O
;	O
}	O
static	O
char	O
*	O
make_detail_filename	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char),*(char))->(*(char))
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
req	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
char	O
*	O
template	*(char)
,	O
char	O
*	O
default_filename	*(char)
)	O
{	O
if	O
(	O
!	O
template	*(char)
)	O
{	O
return	O
make_legacy_detail_filename	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char))->(*(char))
(	O
req	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
default_filename	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
template	*(char)
[	O
0	int
]	O
==	O
'='	O
)	O
{	O
grad_value_t	struct(enum(int,int,int),union(int,struct(long,*(char))))
val	array(int)
;	O
if	O
(	O
rewrite_interpret	(*(char),*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(struct(enum(int,int,int),union(int,struct(long,*`)))))->(int)
(	O
template	*(char)
+	O
1	int
,	O
req	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
&	O
val	array(int)
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
val	array(int)
.	O
type	enum(int,int,int,int)
!=	O
String	int
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
,	O
"%s: %s"	*(char)
,	O
template	*(char)
+	O
1	int
,	O
_	O
(	O
"wrong return type"	*(char)
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
val	array(int)
.	O
datum	union(int,struct(long,*(char)))
.	O
sval	struct(long,*(char))
.	O
data	*(void)
;	O
}	O
else	O
{	O
struct	O
obstack	struct(long,*(struct(*(char),*(struct(*(char),*(struct`),array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*(char),*(struct`),array(char))))),*((*(void),*(struct(*(char),*(struct`),array(char))))->(void)),*(void),int,int,int)
stk	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
;	O
char	O
*	O
ptr	*(*(void))
;	O
obstack_init	O
(	O
&	O
stk	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
)	O
;	O
ptr	*(*(void))
=	O
radius_xlate	(*(struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int)),*(char),*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))->(*(char))
(	O
&	O
stk	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
,	O
template	*(char)
,	O
req	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
NULL	O
)	O
;	O
if	O
(	O
ptr	*(*(void))
)	O
ptr	*(*(void))
=	O
grad_estrdup	(*(char))->(*(char))
(	O
ptr	*(*(void))
)	O
;	O
obstack_free	(*(struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int)),*(void))->(void)
(	O
&	O
stk	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
,	O
NULL	O
)	O
;	O
return	O
ptr	*(*(void))
;	O
}	O
}	O
static	O
int	O
make_path_to_file	(*(char),int)->(int)
(	O
char	O
*	O
filename	*(char)
,	O
int	O
perms	int
)	O
{	O
char	O
*	O
p	*(struct)
=	O
strrchr	(*(char),int)->(*(char))
(	O
filename	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
p	*(struct)
)	O
{	O
int	O
rc	int
;	O
*	O
p	*(struct)
=	O
0	int
;	O
rc	int
=	O
mkdir_path	(*(char),int)->(int)
(	O
filename	*(char)
,	O
perms	int
)	O
;	O
*	O
p	*(struct)
=	O
'/'	O
;	O
return	O
rc	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
write_detail	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,int)->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
int	O
authtype	int
,	O
int	O
rtype	int
)	O
{	O
FILE	struct
*	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
*	O
save	*(*(char))
;	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
time_t	long
curtime	long
;	O
int	O
ret	int
=	O
0	int
;	O
char	O
*	O
filename	*(char)
;	O
char	O
*	O
template	*(char)
;	O
char	O
*	O
deffilename	*(char)
;	O
if	O
(	O
acct_dir_status	int
)	O
return	O
1	int
;	O
curtime	long
=	O
time	struct(long,long)
(	O
0	int
)	O
;	O
switch	O
(	O
rtype	int
)	O
{	O
case	O
R_ACCT	int
:	O
template	*(char)
=	O
acct_detail_template	*(char)
;	O
deffilename	*(char)
=	O
"detail"	*(char)
;	O
break	O
;	O
case	O
R_AUTH	int
:	O
template	*(char)
=	O
auth_detail_template	*(char)
;	O
deffilename	*(char)
=	O
"detail.auth"	*(char)
;	O
break	O
;	O
default	O
:	O
return	O
1	int
;	O
}	O
filename	*(char)
=	O
make_detail_filename	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(char),*(char))->(*(char))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
template	*(char)
,	O
deffilename	*(char)
)	O
;	O
if	O
(	O
!	O
filename	*(char)
)	O
return	O
1	int
;	O
if	O
(	O
chdir	(*(char))->(int)
(	O
grad_acct_dir	*(char)
)	O
)	O
{	O
grad_free	(*(void))->(void)
(	O
filename	*(char)
)	O
;	O
return	O
1	int
;	O
}	O
make_path_to_file	(*(char),int)->(int)
(	O
filename	*(char)
,	O
0755	int
)	O
;	O
if	O
(	O
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
,	O
"a"	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
|	O
GRAD_LOG_PERROR	int
,	O
_	O
(	O
"can't open %s"	*(char)
)	O
,	O
filename	*(char)
)	O
;	O
ret	int
=	O
1	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
ctime	(*(long))->(*(char))
(	O
&	O
curtime	long
)	O
)	O
;	O
if	O
(	O
!	O
strip_names	int
)	O
{	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_ORIG_USER_NAME	int
)	O
;	O
if	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
)	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
name	*(char)
=	O
"User-Name"	*(char)
;	O
else	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_USER_NAME	int
)	O
;	O
if	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t%s\n"	*(char)
,	O
grad_format_pair	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int,*(*(char)))->(*(char))
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
0	int
,	O
&	O
save	*(*(char))
)	O
)	O
;	O
free	(*(void))->(void)
(	O
save	*(*(char))
)	O
;	O
}	O
}	O
for	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
;	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
=	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
next	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
)	O
{	O
if	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
prop	int
&	O
GRAD_AP_INTERNAL	int
)	O
continue	O
;	O
switch	O
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
->	O
attribute	int
)	O
{	O
case	O
DA_USER_PASSWORD	int
:	O
break	O
;	O
case	O
DA_USER_NAME	int
:	O
case	O
DA_ORIG_USER_NAME	int
:	O
if	O
(	O
!	O
strip_names	int
)	O
break	O
;	O
default	O
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\t%s\n"	*(char)
,	O
grad_format_pair	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int,*(*(char)))->(*(char))
(	O
pair	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
0	int
,	O
&	O
save	*(*(char))
)	O
)	O
;	O
free	(*(void))->(void)
(	O
save	*(*(char))
)	O
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tTimestamp = %ld\n"	*(char)
,	O
curtime	long
)	O
;	O
switch	O
(	O
authtype	int
)	O
{	O
case	O
REQ_AUTH_OK	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tRequest-Authenticator = Verified\n"	*(char)
)	O
;	O
break	O
;	O
case	O
REQ_AUTH_ZERO	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tRequest-Authenticator = None\n"	*(char)
)	O
;	O
break	O
;	O
case	O
REQ_AUTH_BAD	int
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tRequest-Authenticator = Unverified\n"	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\tRequest-Authenticator = %d\n"	*(char)
,	O
authtype	int
)	O
;	O
break	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
outfd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
ret	int
=	O
0	int
;	O
}	O
grad_free	(*(void))->(void)
(	O
filename	*(char)
)	O
;	O
chdir	(*(char))->(int)
(	O
"/"	*(char)
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
rad_acct_db	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int)->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
int	O
authtype	int
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
if	O
(	O
acct_detail	int
&&	O
ACCT_TYPE	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DV_ACCT_TYPE_DETAIL	int
)	O
)	O
rc	int
=	O
write_detail	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,int)->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
authtype	int
,	O
R_ACCT	int
)	O
;	O
if	O
(	O
ACCT_TYPE	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DV_ACCT_TYPE_SQL	int
)	O
)	O
radiusd_sql_acct	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
rad_acct_ext	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))))->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
)	O
{	O
grad_avp_t	struct(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char))))
*	O
p	*(struct)
;	O
int	O
rc	int
=	O
0	int
;	O
for	O
(	O
p	*(struct)
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
avlist	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_ACCT_EXT_PROGRAM	int
)	O
;	O
p	*(struct)
;	O
p	*(struct)
=	O
grad_avl_find	(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
(	O
p	*(struct)
->	O
next	*(struct(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`))),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*(char)))))
,	O
DA_ACCT_EXT_PROGRAM	int
)	O
)	O
{	O
radius_eval_avp	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),int)->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
p	*(struct)
,	O
NULL	O
,	O
1	int
)	O
;	O
switch	O
(	O
p	*(struct)
->	O
avp_strvalue	O
[	O
0	int
]	O
)	O
{	O
case	O
'/'	O
:	O
rc	int
=	O
radius_exec_program	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))),int)->(int)
(	O
p	*(struct)
->	O
avp_strvalue	O
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
NULL	O
,	O
1	int
)	O
;	O
break	O
;	O
case	O
'|'	O
:	O
filter_acct	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))))->(int)
(	O
p	*(struct)
->	O
avp_strvalue	O
+	O
1	int
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
)	O
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
int	O
rad_accounting	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,int)->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
int	O
activefd	int
,	O
int	O
verified	int
)	O
{	O
log_open	(int)->(void)
(	O
GRAD_LOG_ACCT	O
)	O
;	O
huntgroup_access	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(struct(*(char),long)))->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
NULL	O
)	O
;	O
if	O
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
code	char
==	O
RT_ASCEND_EVENT_REQUEST	int
)	O
{	O
write_detail	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,int)->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
verified	int
,	O
R_ACCT	int
)	O
;	O
radius_send_reply	(int,*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int)->(void)
(	O
RT_ASCEND_EVENT_RESPONSE	int
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
NULL	O
,	O
NULL	O
,	O
activefd	int
)	O
;	O
stat_inc	O
(	O
acct	(*(char))->(int)
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
ipaddr	int
,	O
num_resp	O
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
rad_acct_system	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int)->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
doradwtmp	int
)	O
==	O
0	int
&&	O
rad_acct_db	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int)->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
verified	int
)	O
==	O
0	int
&&	O
rad_acct_ext	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))))->(int)
(	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
)	O
==	O
0	int
)	O
{	O
radius_send_reply	(int,*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),int)->(void)
(	O
RT_ACCOUNTING_RESPONSE	int
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
NULL	O
,	O
NULL	O
,	O
activefd	int
)	O
;	O
stat_inc	O
(	O
acct	(*(char))->(int)
,	O
radreq	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
ipaddr	int
,	O
num_resp	O
)	O
;	O
return	O
0	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
write_nas_restart	(int,int)->(int)
(	O
int	O
status	int
,	O
grad_uint32_t	int
addr	int
)	O
{	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
0	int
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
if	O
(	O
status	int
==	O
DV_ACCT_STATUS_TYPE_ACCOUNTING_ON	int
)	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
type	enum(int,int,int,int)
=	O
P_NAS_START	int
;	O
else	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
type	enum(int,int,int,int)
=	O
P_NAS_SHUTDOWN	int
;	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_address	int
=	O
addr	int
;	O
time	struct(long,long)
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
time	struct(long,long)
)	O
;	O
return	O
write_wtmp	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
int	O
radutmp_mlc_collect_user	(*(char),*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
(	O
char	O
*	O
name	*(char)
,	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
grad_list_t	struct
*	O
*	O
sess_list	*(*(struct))
)	O
{	O
radut_file_t	*(struct)
file	*(char)
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
if	O
(	O
(	O
file	*(char)
=	O
grad_ut_setent	(*(char),int)->(*(struct))
(	O
grad_utmp_file	*(char)
,	O
0	int
)	O
)	O
==	O
NULL	O
)	O
return	O
1	int
;	O
while	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_ut_getent	(*(struct))->(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))
(	O
file	*(char)
)	O
)	O
{	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
name	*(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
,	O
RUT_NAMESIZE	int
)	O
==	O
0	int
&&	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
==	O
P_LOGIN	int
)	O
{	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
if	O
(	O
*	O
sess_list	*(*(struct))
==	O
NULL	O
)	O
*	O
sess_list	*(*(struct))
=	O
grad_list_create	()->(*(struct))
(	O
)	O
;	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_emalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
sizeof	O
(	O
*	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
grad_list_append	(*(struct),*(void))->(void)
(	O
*	O
sess_list	*(*(struct))
,	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
}	O
grad_ut_endent	(*(struct))->(void)
(	O
file	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
radutmp_mlc_collect_realm	(*(struct(*(struct(int,short,char,char,array(char),*`,*`)),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),*(struct),*(struct(array(char),*`,*`)),int,int,int,int,*(char),array(char),int,*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),*(*(struct)))->(int)
(	O
radiusd_request_t	struct(*(struct(int,short,char,char,array(char),*(char),*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)))),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))),*(char),*(struct),*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int,int,int,int,*(char),array(char),int,*(struct(*(struct(*`,*`,int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union`)),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct(long,*`)))))
*	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
,	O
grad_list_t	struct
*	O
*	O
sess_list	*(*(struct))
)	O
{	O
radut_file_t	*(struct)
file	*(char)
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
if	O
(	O
(	O
file	*(char)
=	O
grad_ut_setent	(*(char),int)->(*(struct))
(	O
grad_utmp_file	*(char)
,	O
0	int
)	O
)	O
==	O
NULL	O
)	O
return	O
1	int
;	O
while	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_ut_getent	(*(struct))->(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))
(	O
file	*(char)
)	O
)	O
{	O
if	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
==	O
P_LOGIN	int
&&	O
grad_realm_verify_ip	(*(struct(array(char),*(struct),*(struct(int,int,int,long,*`)))),int)->(int)
(	O
request	*(struct(int,short,char,char,array(char),*(char),*(struct(*(struct`),*(char),int,int,enum(int,int,int),int,enum(int,int,int,int,int,int,int),union(int,struct`)))))
->	O
realm	array(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
realm_address	int
)	O
)	O
{	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
if	O
(	O
*	O
sess_list	*(*(struct))
==	O
NULL	O
)	O
*	O
sess_list	*(*(struct))
=	O
grad_list_create	()->(*(struct))
(	O
)	O
;	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_emalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
sizeof	O
(	O
*	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
grad_list_append	(*(struct),*(void))->(void)
(	O
*	O
sess_list	*(*(struct))
,	O
tmp	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
}	O
}	O
grad_ut_endent	(*(struct))->(void)
(	O
file	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
void	O
radutmp_mlc_close	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(void)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
{	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	enum(int,int,int,int)
=	O
P_IDLE	int
;	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
time	struct(long,long)
=	O
time	struct(long,long)
(	O
NULL	O
)	O
;	O
grad_utmp_putent	(*(char),*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))),int)->(int)
(	O
grad_utmp_file	*(char)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
DV_ACCT_STATUS_TYPE_STOP	int
)	O
;	O
}	O
int	O
radutmp_mlc_enabled_p	()->(int)
(	O
)	O
{	O
return	O
acct_system	int
;	O
}	O
