static	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
,	O
*	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
static	O
int	O
X_Offset	int
=	O
0	int
;	O
static	O
int	O
Y_Offset	int
=	O
0	int
;	O
static	O
void	O
swapout_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
const	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
if	O
(	O
fseek	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,int)->(int)
(	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
(	O
long	O
)	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
index	(*(char),int)->(*(char))
*	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
*	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
,	O
SEEK_SET	int
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"swapout_RowBuf (on seek)"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
if	O
(	O
(	O
int	O
)	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
(	O
char	O
*	O
)	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
,	O
(	O
size_t	long
)	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
,	O
(	O
size_t	long
)	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
,	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
)	O
{	O
PError	(*(char))->(void)
(	O
"swapout_RowBuf (on write)"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
static	O
void	O
swapin_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
const	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
if	O
(	O
fseek	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,int)->(int)
(	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
(	O
long	O
)	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
index	(*(char),int)->(*(char))
*	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
*	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
,	O
SEEK_SET	int
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"swapin_RowBuf (on seek)"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
if	O
(	O
(	O
int	O
)	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
(	O
char	O
*	O
)	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
,	O
(	O
size_t	long
)	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
,	O
(	O
size_t	long
)	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
,	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
)	O
{	O
PError	(*(char))->(void)
(	O
"swapin_RowBuf (on read)"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
static	O
void	O
link_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
{	O
if	O
(	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
{	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
return	O
;	O
}	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
}	O
else	O
{	O
if	O
(	O
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
!=	O
NULL	O
)	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
}	O
}	O
static	O
void	O
unlink_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
&&	O
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
)	O
return	O
;	O
if	O
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
else	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
if	O
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
else	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
}	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
get_RowBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),int)->(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
(	O
const	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
int	O
index	(*(char),int)->(*(char))
)	O
{	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
if	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
index	(*(char),int)->(*(char))
<	O
0	int
||	O
index	(*(char),int)->(*(char))
>=	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"get_RowBuf: Illegal y (%d not in [0, %d])\n"	*(char)
,	O
index	(*(char),int)->(*(char))
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
-	O
1	int
)	O
;	O
return	O
NULL	O
;	O
}	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
+	O
index	(*(char),int)->(*(char))
;	O
if	O
(	O
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
&&	O
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
)	O
{	O
swapout_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
=	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
;	O
unlink_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
;	O
swapin_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
link_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
!=	O
NULL	O
)	O
{	O
unlink_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
;	O
link_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
NULL	O
)	O
;	O
}	O
return	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
}	O
static	O
void	O
plot_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),int,int,short)->(void)
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
int	O
x	int
,	O
int	O
depth	int
,	O
PEN_C	short
color_index	short
)	O
{	O
int	O
i	int
,	O
Mask	int
;	O
Byte	char
*	O
addr	*(char)
;	O
if	O
(	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
depth	int
==	O
1	int
)	O
{	O
if	O
(	O
color_index	short
>	O
1	int
)	O
color_index	short
=	O
1	int
;	O
Mask	int
=	O
0x80	int
;	O
if	O
(	O
(	O
i	int
=	O
x	int
&	O
0x07	int
)	O
!=	O
0	int
)	O
{	O
Mask	int
>>=	O
i	int
;	O
if	O
(	O
i	int
!=	O
7	int
)	O
color_index	short
<<=	O
(	O
7	int
-	O
i	int
)	O
;	O
}	O
else	O
color_index	short
<<=	O
7	int
;	O
addr	*(char)
=	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
+	O
(	O
x	int
>>	O
3	int
)	O
;	O
}	O
else	O
if	O
(	O
depth	int
==	O
4	int
)	O
{	O
Mask	int
=	O
0xF0	int
;	O
if	O
(	O
(	O
x	int
&	O
0x01	int
)	O
!=	O
0	int
)	O
Mask	int
>>=	O
4	int
;	O
else	O
color_index	short
<<=	O
4	int
;	O
addr	*(char)
=	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
+	O
(	O
x	int
>>	O
1	int
)	O
;	O
}	O
else	O
{	O
addr	*(char)
=	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
+	O
x	int
;	O
Mask	int
=	O
0x00	int
;	O
}	O
if	O
(	O
depth	int
<	O
8	int
)	O
{	O
*	O
addr	*(char)
&=	O
~	O
Mask	int
;	O
*	O
addr	*(char)
|=	O
color_index	short
;	O
}	O
else	O
*	O
addr	*(char)
=	O
(	O
Byte	char
)	O
color_index	short
;	O
}	O
int	O
index_from_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),int,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(int)
(	O
const	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
int	O
x	int
,	O
const	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
int	O
i	int
,	O
Mask	int
,	O
color_index	short
;	O
Byte	char
*	O
addr	*(char)
;	O
if	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
==	O
1	int
)	O
{	O
Mask	int
=	O
0x80	int
;	O
if	O
(	O
(	O
i	int
=	O
x	int
&	O
0x07	int
)	O
!=	O
0	int
)	O
Mask	int
>>=	O
i	int
;	O
addr	*(char)
=	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
+	O
(	O
x	int
>>	O
3	int
)	O
;	O
return	O
(	O
*	O
addr	*(char)
&	O
Mask	int
)	O
?	O
xxForeground	int
:	O
xxBackground	int
;	O
}	O
else	O
if	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
==	O
4	int
)	O
{	O
Mask	int
=	O
0xF0	int
;	O
if	O
(	O
(	O
x	int
&	O
0x01	int
)	O
!=	O
0	int
)	O
Mask	int
>>=	O
4	int
;	O
addr	*(char)
=	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
+	O
(	O
x	int
>>	O
1	int
)	O
;	O
color_index	short
=	O
*	O
addr	*(char)
&	O
Mask	int
;	O
if	O
(	O
(	O
x	int
&	O
0x01	int
)	O
==	O
0	int
)	O
color_index	short
>>=	O
4	int
;	O
return	O
color_index	short
;	O
}	O
else	O
{	O
addr	*(char)
=	O
rowbuf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
+	O
x	int
;	O
color_index	short
=	O
*	O
addr	*(char)
;	O
return	O
color_index	short
;	O
}	O
}	O
static	O
void	O
HPcoord_to_dotcoord	(*(struct(float,float)),*(struct(int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
const	O
HPGL_Pt	struct(float,float)
*	O
HP_P	*(struct(float,float))
,	O
DevPt	struct(int,int)
*	O
DevP	*(struct(int,int))
,	O
const	O
OUT_PAR	struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),double,double)
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
{	O
DevP	*(struct(int,int))
->	O
x	int
=	O
(	O
int	O
)	O
(	O
(	O
HP_P	*(struct(float,float))
->	O
x	int
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmin	double
)	O
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
)	O
;	O
DevP	*(struct(int,int))
->	O
y	int
=	O
(	O
int	O
)	O
(	O
(	O
HP_P	*(struct(float,float))
->	O
y	int
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymin	double
)	O
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_ydots	double
)	O
;	O
}	O
void	O
size_PicBuf	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)),*(int),*(int))->(void)
(	O
const	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
const	O
OUT_PAR	struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),double,double)
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
,	O
int	O
*	O
p_rows	*(int)
,	O
int	O
*	O
p_cols	*(int)
)	O
{	O
HPGL_Pt	struct(float,float)
HP_Pt	struct(float,float)
;	O
DevPt	struct(int,int)
D_Pt	struct(int,int)
;	O
int	O
maxps	int
;	O
HP_Pt	struct(float,float)
.	O
x	int
=	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmax	double
;	O
HP_Pt	struct(float,float)
.	O
y	int
=	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymax	double
;	O
HPcoord_to_dotcoord	(*(struct(float,float)),*(struct(int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
&	O
HP_Pt	struct(float,float)
,	O
&	O
D_Pt	struct(int,int)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
;	O
maxps	int
=	O
1	int
+	O
ceil	(double)->(double)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpensize	float
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
/	O
0.025	int
)	O
;	O
X_Offset	int
=	O
maxps	int
/	O
2	int
;	O
Y_Offset	int
=	O
maxps	int
/	O
2	int
;	O
*	O
p_cols	*(int)
=	O
D_Pt	struct(int,int)
.	O
x	int
+	O
maxps	int
+	O
1	int
;	O
*	O
p_rows	*(int)
=	O
D_Pt	struct(int,int)
.	O
y	int
+	O
maxps	int
+	O
1	int
;	O
}	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
allocate_PicBuf	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),int,int)->(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))
(	O
const	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
int	O
n_rows	int
,	O
int	O
n_cols	int
)	O
{	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
;	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
*	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
int	O
nr	int
,	O
not_allocated	int
;	O
if	O
(	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
=	O
(	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"Cannot malloc() PicBuf structure\n"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
=	O
n_rows	int
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
=	O
n_cols	int
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sf_name	*(char)
=	O
NULL	O
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
first_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
=	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
>>	O
3	int
)	O
;	O
if	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
&	O
7	int
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
++	O
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
=	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
is_color	int
)	O
?	O
4	int
:	O
1	int
;	O
if	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
is_color	int
&&	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxcolor	int
>	O
15	int
)	O
{	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
=	O
8	int
;	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"using 8bpp picbuf for NP>15\n"	*(char)
)	O
;	O
}	O
if	O
(	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
)	O
calloc	(long,long)->(*(void))
(	O
(	O
unsigned	O
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
,	O
sizeof	O
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"Cannot calloc() %d RowBuf structures\n"	*(char)
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
)	O
;	O
free_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
not_allocated	int
=	O
0	int
;	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
(	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
)	O
NULL	O
;	O
for	O
(	O
nr	int
=	O
0	int
,	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
nr	int
<	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
;	O
nr	int
++	O
,	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
++	O
)	O
{	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
NULL	O
;	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
index	(*(char),int)->(*(char))
=	O
nr	int
;	O
if	O
(	O
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
=	O
(	O
Byte	char
*	O
)	O
calloc	(long,long)->(*(void))
(	O
(	O
unsigned	O
)	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
)	O
,	O
1	int
)	O
)	O
==	O
NULL	O
)	O
not_allocated	int
++	O
;	O
else	O
{	O
link_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
;	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
act	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
}	O
}	O
if	O
(	O
not_allocated	int
)	O
{	O
if	O
(	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
index	(*(char),int)->(*(char))
>	O
GIVE_BACK	int
)	O
for	O
(	O
nr	int
=	O
0	int
;	O
nr	int
<	O
GIVE_BACK	int
;	O
nr	int
++	O
)	O
{	O
free	(*(void))->(void)
(	O
(	O
char	O
*	O
)	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
)	O
;	O
unlink_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))->(void)
(	O
last_buf	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
;	O
not_allocated	int
++	O
;	O
}	O
else	O
{	O
Eprintf	(*(char))->(void)
(	O
"\nNot enough memory for swapping -- sorry!\n"	*(char)
)	O
;	O
free_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
Eprintf	(*(char))->(void)
(	O
"\nCouldn't allocate %d out of %d row buffers.\n"	*(char)
,	O
not_allocated	int
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Swapping to disk...\n"	*(char)
)	O
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sf_name	*(char)
=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
swapfile	*(char)
;	O
if	O
(	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sf_name	*(char)
,	O
WRITE_BIN	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"Couldn't open swap file '%s'\n"	*(char)
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sf_name	*(char)
)	O
;	O
PError	(*(char))->(void)
(	O
"hp2xx"	*(char)
)	O
;	O
free_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
for	O
(	O
nr	int
=	O
0	int
;	O
nr	int
<	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
;	O
nr	int
++	O
)	O
if	O
(	O
(	O
int	O
)	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
(	O
char	O
*	O
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
[	O
0	int
]	O
.	O
buf	*(char)
,	O
(	O
size_t	long
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nb	int
,	O
(	O
size_t	long
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"Couldn't clear swap file!\n"	*(char)
)	O
;	O
PError	(*(char))->(void)
(	O
"hp2xx"	*(char)
)	O
;	O
free_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
return	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
;	O
}	O
void	O
free_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
RowBuf	struct(*(char),int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
*	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
int	O
i	int
;	O
if	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
unlink	(*(char))->(int)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
sf_name	*(char)
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nr	int
;	O
i	int
++	O
)	O
{	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
=	O
&	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
[	O
i	int
]	O
)	O
;	O
if	O
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
!=	O
NULL	O
&&	O
(	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
prev	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
!=	O
NULL	O
||	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
!=	O
NULL	O
)	O
)	O
free	(*(void))->(void)
(	O
(	O
char	O
*	O
)	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
->	O
buf	*(char)
)	O
;	O
}	O
free	(*(void))->(void)
(	O
(	O
char	O
*	O
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
row	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
)	O
;	O
free	(*(void))->(void)
(	O
(	O
char	O
*	O
)	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
}	O
void	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
DevPt	struct(int,int)
*	O
pt	struct(array(float),array(short),array(array(char)))
,	O
PEN_C	short
color_index	short
)	O
{	O
if	O
(	O
(	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
+	O
X_Offset	int
)	O
<	O
0	int
||	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
>	O
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
-	O
X_Offset	int
)	O
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"plot_PicBuf: Illegal x (%d not in [0, %d])\n"	*(char)
,	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
+	O
X_Offset	int
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
)	O
;	O
return	O
;	O
}	O
plot_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),int,int,short)->(void)
(	O
get_RowBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),int)->(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
pt	struct(array(float),array(short),array(array(char)))
->	O
y	int
+	O
Y_Offset	int
)	O
,	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
+	O
X_Offset	int
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
depth	int
,	O
color_index	short
)	O
;	O
}	O
int	O
index_from_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)))->(int)
(	O
const	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
const	O
DevPt	struct(int,int)
*	O
pt	struct(array(float),array(short),array(array(char)))
)	O
{	O
if	O
(	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
<	O
0	int
||	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
>	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"index_from_PicBuf: Illegal x (%d not in [0, %d])\n"	*(char)
,	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
nc	int
)	O
;	O
return	O
0	int
;	O
}	O
return	O
index_from_RowBuf	(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),int,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(int)
(	O
get_RowBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),int)->(*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))))
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
pt	struct(array(float),array(short),array(array(char)))
->	O
y	int
)	O
,	O
pt	struct(array(float),array(short),array(array(char)))
->	O
x	int
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
}	O
static	O
void	O
dot_PicBuf	(*(struct(int,int)),int,short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
DevPt	struct(int,int)
*	O
p0	struct(int,int)
,	O
int	O
pensize	int
,	O
PEN_C	short
pencolor	short
,	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
DevPt	struct(int,int)
pt	struct(array(float),array(short),array(array(char)))
;	O
int	O
dd	int
=	O
3	int
-	O
(	O
pensize	int
)	O
;	O
int	O
dx	int
=	O
0	int
;	O
int	O
dy	int
=	O
pensize	int
/	O
2	int
;	O
for	O
(	O
;	O
dx	int
<=	O
dy	int
;	O
dx	int
++	O
)	O
{	O
for	O
(	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
dx	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
+	O
dy	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
<=	O
p0	struct(int,int)
->	O
x	int
+	O
dx	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
++	O
)	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
&	O
pt	struct(array(float),array(short),array(array(char)))
,	O
pencolor	short
)	O
;	O
for	O
(	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
dx	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
dy	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
<=	O
p0	struct(int,int)
->	O
x	int
+	O
dx	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
++	O
)	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
&	O
pt	struct(array(float),array(short),array(array(char)))
,	O
pencolor	short
)	O
;	O
for	O
(	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
dy	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
+	O
dx	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
<=	O
p0	struct(int,int)
->	O
x	int
+	O
dy	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
++	O
)	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
&	O
pt	struct(array(float),array(short),array(array(char)))
,	O
pencolor	short
)	O
;	O
for	O
(	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
dy	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
dx	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
<=	O
p0	struct(int,int)
->	O
x	int
+	O
dy	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
x	int
++	O
)	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
&	O
pt	struct(array(float),array(short),array(array(char)))
,	O
pencolor	short
)	O
;	O
if	O
(	O
dd	int
<	O
0	int
)	O
{	O
dd	int
+=	O
(	O
4	int
*	O
dx	int
)	O
+	O
6	int
;	O
}	O
else	O
{	O
dd	int
+=	O
4	int
*	O
(	O
dx	int
-	O
dy	int
)	O
+	O
10	int
;	O
dy	int
--	O
;	O
}	O
}	O
}	O
static	O
void	O
line_PicBuf	(*(struct(int,int)),*(struct(int,int)),float,short,int,*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
DevPt	struct(int,int)
*	O
p0	struct(int,int)
,	O
DevPt	struct(int,int)
*	O
p1	struct(int,int)
,	O
PEN_W	float
pensize	int
,	O
PEN_C	short
pencolor	short
,	O
int	O
consecutive	int
,	O
const	O
OUT_PAR	struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),double,double)
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
{	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
=	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
picbuf	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
;	O
DevPt	struct(int,int)
*	O
p_act	*(struct(int,int))
;	O
DevPt	struct(int,int)
t0	struct(int,int)
,	O
t1	struct(int,int)
,	O
t2	struct(int,int)
,	O
t3	struct(int,int)
;	O
double	O
len	double
,	O
xoff	double
,	O
yoff	double
;	O
int	O
dx	int
,	O
dy	int
;	O
int	O
linewidth	int
=	O
(	O
int	O
)	O
ceil	(double)->(double)
(	O
pensize	int
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
/	O
0.025	int
)	O
;	O
if	O
(	O
linewidth	int
==	O
0	int
)	O
return	O
;	O
if	O
(	O
pencolor	short
==	O
xxBackground	int
)	O
return	O
;	O
if	O
(	O
linewidth	int
<	O
5	int
)	O
consecutive	int
=	O
0	int
;	O
if	O
(	O
linewidth	int
==	O
1	int
)	O
{	O
p_act	*(struct(int,int))
=	O
bresenham_init	(*(struct(int,int)),*(struct(int,int)))->(*(struct(int,int)))
(	O
p0	struct(int,int)
,	O
p1	struct(int,int)
)	O
;	O
do	O
{	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
p_act	*(struct(int,int))
,	O
pencolor	short
)	O
;	O
}	O
while	O
(	O
bresenham_next	()->(int)
(	O
)	O
!=	O
BRESENHAM_ERR	int
)	O
;	O
return	O
;	O
}	O
if	O
(	O
(	O
p1	struct(int,int)
->	O
x	int
==	O
p0	struct(int,int)
->	O
x	int
)	O
&&	O
(	O
p1	struct(int,int)
->	O
y	int
==	O
p0	struct(int,int)
->	O
y	int
)	O
)	O
{	O
dot_PicBuf	(*(struct(int,int)),int,short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
p0	struct(int,int)
,	O
linewidth	int
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
return	O
;	O
}	O
murphy_init	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
pencolor	short
)	O
;	O
murphy_wideline	(struct(int,int),struct(int,int),int,int)->(void)
(	O
*	O
p0	struct(int,int)
,	O
*	O
p1	struct(int,int)
,	O
linewidth	int
,	O
consecutive	int
)	O
;	O
if	O
(	O
pensize	int
>	O
0.35	int
)	O
{	O
switch	O
(	O
CurrentLineAttr	struct(enum(int,int,int,int),enum(int,int,int,int,int,int),int)
.	O
End	enum(int,int,int,int)
)	O
{	O
case	O
LAE_square	int
:	O
dx	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
p1	struct(int,int)
->	O
x	int
;	O
dy	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
p1	struct(int,int)
->	O
y	int
;	O
len	double
=	O
HYPOT	O
(	O
dx	int
,	O
dy	int
)	O
;	O
xoff	double
=	O
0.5	int
*	O
fabs	(double)->(double)
(	O
dx	int
/	O
len	double
)	O
;	O
yoff	double
=	O
0.5	int
*	O
fabs	(double)->(double)
(	O
dy	int
/	O
len	double
)	O
;	O
t0	struct(int,int)
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t0	struct(int,int)
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t1	struct(int,int)
.	O
x	int
=	O
t0	struct(int,int)
.	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t1	struct(int,int)
.	O
y	int
=	O
t0	struct(int,int)
.	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
x	int
=	O
t3	struct(int,int)
.	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
y	int
=	O
t3	struct(int,int)
.	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
polygon_PicBuf	(struct(int,int),struct(int,int),struct(int,int),struct(int,int),short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
t1	struct(int,int)
,	O
t3	struct(int,int)
,	O
t0	struct(int,int)
,	O
t2	struct(int,int)
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
t0	struct(int,int)
.	O
x	int
=	O
p1	struct(int,int)
->	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t0	struct(int,int)
.	O
y	int
=	O
p1	struct(int,int)
->	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t1	struct(int,int)
.	O
x	int
=	O
t0	struct(int,int)
.	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t1	struct(int,int)
.	O
y	int
=	O
t0	struct(int,int)
.	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
x	int
=	O
p1	struct(int,int)
->	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
y	int
=	O
p1	struct(int,int)
->	O
y	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
x	int
=	O
t3	struct(int,int)
.	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
y	int
=	O
t3	struct(int,int)
.	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
polygon_PicBuf	(struct(int,int),struct(int,int),struct(int,int),struct(int,int),short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
t1	struct(int,int)
,	O
t3	struct(int,int)
,	O
t0	struct(int,int)
,	O
t2	struct(int,int)
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
break	O
;	O
case	O
LAE_butt	int
:	O
default	O
:	O
break	O
;	O
case	O
LAE_triangular	int
:	O
dx	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
p1	struct(int,int)
->	O
x	int
;	O
dy	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
p1	struct(int,int)
->	O
y	int
;	O
len	double
=	O
HYPOT	O
(	O
dx	int
,	O
dy	int
)	O
;	O
xoff	double
=	O
0.5	int
*	O
fabs	(double)->(double)
(	O
dx	int
/	O
len	double
)	O
;	O
yoff	double
=	O
0.5	int
*	O
fabs	(double)->(double)
(	O
dy	int
/	O
len	double
)	O
;	O
t0	struct(int,int)
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t0	struct(int,int)
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t1	struct(int,int)
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t1	struct(int,int)
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
x	int
=	O
p0	struct(int,int)
->	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
y	int
=	O
p0	struct(int,int)
->	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
polygon_PicBuf	(struct(int,int),struct(int,int),struct(int,int),struct(int,int),short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
t1	struct(int,int)
,	O
t3	struct(int,int)
,	O
t0	struct(int,int)
,	O
t2	struct(int,int)
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
t0	struct(int,int)
.	O
x	int
=	O
p1	struct(int,int)
->	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t0	struct(int,int)
.	O
y	int
=	O
p1	struct(int,int)
->	O
y	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t1	struct(int,int)
.	O
x	int
=	O
p1	struct(int,int)
->	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t1	struct(int,int)
.	O
y	int
=	O
p1	struct(int,int)
->	O
y	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
x	int
=	O
p1	struct(int,int)
->	O
x	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
t2	struct(int,int)
.	O
y	int
=	O
p1	struct(int,int)
->	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
x	int
=	O
p1	struct(int,int)
->	O
x	int
-	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
yoff	double
;	O
t3	struct(int,int)
.	O
y	int
=	O
p1	struct(int,int)
->	O
y	int
+	O
(	O
linewidth	int
-	O
1	int
)	O
*	O
xoff	double
;	O
polygon_PicBuf	(struct(int,int),struct(int,int),struct(int,int),struct(int,int),short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
t1	struct(int,int)
,	O
t3	struct(int,int)
,	O
t0	struct(int,int)
,	O
t2	struct(int,int)
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
break	O
;	O
case	O
LAE_round	int
:	O
dot_PicBuf	(*(struct(int,int)),int,short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
p0	struct(int,int)
,	O
linewidth	int
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
dot_PicBuf	(*(struct(int,int)),int,short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
p1	struct(int,int)
,	O
linewidth	int
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
break	O
;	O
}	O
}	O
else	O
{	O
dot_PicBuf	(*(struct(int,int)),int,short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
p0	struct(int,int)
,	O
linewidth	int
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
dot_PicBuf	(*(struct(int,int)),int,short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
p1	struct(int,int)
,	O
linewidth	int
,	O
pencolor	short
,	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
}	O
}	O
void	O
polygon_PicBuf	(struct(int,int),struct(int,int),struct(int,int),struct(int,int),short,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
DevPt	struct(int,int)
p4	struct(int,int)
,	O
DevPt	struct(int,int)
p2	struct(int,int)
,	O
DevPt	struct(int,int)
p1	struct(int,int)
,	O
DevPt	struct(int,int)
p3	struct(int,int)
,	O
PEN_C	short
pencolor	short
,	O
PicBuf	struct(int,int,int,int,*(struct(*(char),int,*(struct(*`,int,*`,*`)),*(struct(*`,int,*`,*`)))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
DevPt	struct(int,int)
polygon	array(struct(float,float))
[	O
8	int
]	O
;	O
int	O
xmin	double
,	O
ymin	double
,	O
xmax	double
,	O
ymax	double
;	O
int	O
start	int
,	O
end	int
,	O
tmp	int
;	O
DevPt	struct(int,int)
p_act	*(struct(int,int))
;	O
double	O
denominator	double
;	O
double	O
A1	double
,	O
B1	double
,	O
C1	double
,	O
A2	double
,	O
B2	double
,	O
C2	double
;	O
int	O
scany	int
;	O
int	O
segx	int
,	O
numlines	int
;	O
int	O
i	int
,	O
j	int
,	O
k	int
;	O
polygon	array(struct(float,float))
[	O
0	int
]	O
=	O
p1	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
1	int
]	O
=	O
p2	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
2	int
]	O
=	O
p2	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
3	int
]	O
=	O
p3	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
4	int
]	O
=	O
p3	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
5	int
]	O
=	O
p4	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
6	int
]	O
=	O
p4	struct(int,int)
;	O
polygon	array(struct(float,float))
[	O
7	int
]	O
=	O
p1	struct(int,int)
;	O
xmin	double
=	O
MIN	O
(	O
p1	struct(int,int)
.	O
x	int
,	O
p2	struct(int,int)
.	O
x	int
)	O
;	O
xmin	double
=	O
MIN	O
(	O
xmin	double
,	O
p3	struct(int,int)
.	O
x	int
)	O
;	O
xmin	double
=	O
MIN	O
(	O
xmin	double
,	O
p4	struct(int,int)
.	O
x	int
)	O
;	O
xmax	double
=	O
MAX	O
(	O
p1	struct(int,int)
.	O
x	int
,	O
p2	struct(int,int)
.	O
x	int
)	O
;	O
xmax	double
=	O
MAX	O
(	O
xmax	double
,	O
p3	struct(int,int)
.	O
x	int
)	O
;	O
xmax	double
=	O
MAX	O
(	O
xmax	double
,	O
p4	struct(int,int)
.	O
x	int
)	O
;	O
ymin	double
=	O
MIN	O
(	O
p1	struct(int,int)
.	O
y	int
,	O
p2	struct(int,int)
.	O
y	int
)	O
;	O
ymin	double
=	O
MIN	O
(	O
ymin	double
,	O
p3	struct(int,int)
.	O
y	int
)	O
;	O
ymin	double
=	O
MIN	O
(	O
ymin	double
,	O
p4	struct(int,int)
.	O
y	int
)	O
;	O
ymax	double
=	O
MAX	O
(	O
p1	struct(int,int)
.	O
y	int
,	O
p2	struct(int,int)
.	O
y	int
)	O
;	O
ymax	double
=	O
MAX	O
(	O
ymax	double
,	O
p3	struct(int,int)
.	O
y	int
)	O
;	O
ymax	double
=	O
MAX	O
(	O
ymax	double
,	O
p4	struct(int,int)
.	O
y	int
)	O
;	O
numlines	int
=	O
1	int
+	O
ymax	double
-	O
ymin	double
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
numlines	int
;	O
i	int
++	O
)	O
{	O
k	int
=	O
-	O
1	int
;	O
start	int
=	O
end	int
=	O
0	int
;	O
scany	int
=	O
ymin	double
+	O
i	int
;	O
A1	double
=	O
0.	int
;	O
B1	double
=	O
(	O
double	O
)	O
(	O
xmin	double
-	O
xmax	double
)	O
;	O
C1	double
=	O
(	O
double	O
)	O
(	O
scany	int
*	O
(	O
xmax	double
-	O
xmin	double
)	O
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<=	O
6	int
;	O
j	int
=	O
j	int
+	O
2	int
)	O
{	O
if	O
(	O
(	O
scany	int
<	O
MIN	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
y	int
,	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
y	int
)	O
)	O
||	O
(	O
scany	int
>	O
MAX	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
y	int
,	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
y	int
)	O
)	O
)	O
continue	O
;	O
A2	double
=	O
(	O
double	O
)	O
(	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
y	int
-	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
y	int
)	O
;	O
B2	double
=	O
(	O
double	O
)	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
x	int
-	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
x	int
)	O
;	O
C2	double
=	O
(	O
double	O
)	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
x	int
*	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
y	int
-	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
y	int
)	O
+	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
y	int
*	O
(	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
x	int
-	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
x	int
)	O
)	O
;	O
denominator	double
=	O
A1	double
*	O
B2	double
-	O
A2	double
*	O
B1	double
;	O
if	O
(	O
fabs	(double)->(double)
(	O
denominator	double
)	O
>	O
1.e-5	int
)	O
{	O
segx	int
=	O
(	O
int	O
)	O
(	O
(	O
B1	double
*	O
C2	double
-	O
B2	double
*	O
C1	double
)	O
/	O
denominator	double
)	O
;	O
if	O
(	O
(	O
segx	int
>	O
xmax	double
)	O
||	O
(	O
segx	int
<	O
xmin	double
)	O
||	O
(	O
segx	int
<	O
MIN	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
x	int
,	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
x	int
)	O
)	O
||	O
(	O
segx	int
>	O
MAX	O
(	O
polygon	array(struct(float,float))
[	O
j	int
]	O
.	O
x	int
,	O
polygon	array(struct(float,float))
[	O
j	int
+	O
1	int
]	O
.	O
x	int
)	O
)	O
)	O
{	O
}	O
else	O
{	O
k	int
++	O
;	O
if	O
(	O
k	int
==	O
0	int
)	O
{	O
start	int
=	O
segx	int
;	O
}	O
else	O
if	O
(	O
segx	int
!=	O
start	int
)	O
{	O
end	int
=	O
segx	int
;	O
}	O
else	O
if	O
(	O
k	int
>	O
0	int
)	O
k	int
--	O
;	O
}	O
}	O
}	O
if	O
(	O
k	int
>=	O
1	int
)	O
{	O
if	O
(	O
start	int
>	O
end	int
)	O
{	O
tmp	int
=	O
end	int
;	O
end	int
=	O
start	int
;	O
start	int
=	O
tmp	int
;	O
}	O
for	O
(	O
p_act	*(struct(int,int))
.	O
x	int
=	O
start	int
,	O
p_act	*(struct(int,int))
.	O
y	int
=	O
scany	int
;	O
p_act	*(struct(int,int))
.	O
x	int
<=	O
end	int
;	O
p_act	*(struct(int,int))
.	O
x	int
++	O
)	O
plot_PicBuf	(*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(int,int)),short)->(void)
(	O
pb	*(struct(int,int,int,int,*(struct(*(char),int,*(struct`),*(struct`))),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
&	O
p_act	*(struct(int,int))
,	O
pencolor	short
)	O
;	O
}	O
}	O
}	O
void	O
tmpfile_to_PicBuf	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
const	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
const	O
OUT_PAR	struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),double,double)
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
{	O
HPGL_Pt	struct(float,float)
pt1	struct(float,float)
;	O
static	O
DevPt	struct(int,int)
ref	struct(int,int)
=	O
{	O
0	int
,	O
0	int
}	O
;	O
DevPt	struct(int,int)
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
;	O
PlotCmd	enum(int,int,int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int,int,int)
;	O
static	O
int	O
consecutive	int
=	O
0	int
;	O
int	O
pen_no	int
=	O
1	int
;	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
Eprintf	(*(char))->(void)
(	O
"\nPlotting in buffer\n"	*(char)
)	O
;	O
rewind	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
while	O
(	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
PlotCmd_from_tmpfile	()->(enum(int,int,int,int,int,int,int,int,int))
(	O
)	O
)	O
!=	O
CMD_EOF	int
)	O
switch	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
NOP	int
:	O
break	O
;	O
case	O
SET_PEN	int
:	O
if	O
(	O
(	O
pen_no	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
EOF	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
consecutive	int
=	O
0	int
;	O
break	O
;	O
case	O
DEF_PW	int
:	O
if	O
(	O
!	O
load_pen_width_table	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
break	O
;	O
case	O
DEF_PC	int
:	O
if	O
(	O
load_pen_color_table	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
<	O
0	int
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
consecutive	int
=	O
0	int
;	O
break	O
;	O
case	O
DEF_LA	int
:	O
if	O
(	O
load_line_attr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
<	O
0	int
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
consecutive	int
=	O
0	int
;	O
break	O
;	O
case	O
MOVE_TO	int
:	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
pt1	struct(float,float)
)	O
;	O
HPcoord_to_dotcoord	(*(struct(float,float)),*(struct(int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
&	O
pt1	struct(float,float)
,	O
&	O
ref	struct(int,int)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
;	O
consecutive	int
=	O
0	int
;	O
break	O
;	O
case	O
DRAW_TO	int
:	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
pt1	struct(float,float)
)	O
;	O
HPcoord_to_dotcoord	(*(struct(float,float)),*(struct(int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
&	O
pt1	struct(float,float)
,	O
&	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
;	O
line_PicBuf	(*(struct(int,int)),*(struct(int,int)),float,short,int,*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
&	O
ref	struct(int,int)
,	O
&	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen_no	int
]	O
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
pen_no	int
]	O
,	O
consecutive	int
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
ref	struct(int,int)
,	O
&	O
next	*(struct(*(char),int,*(struct(*(char),int,*(struct`),*(struct`))),*(struct(*(char),int,*(struct`),*(struct`)))))
,	O
sizeof	O
(	O
ref	struct(int,int)
)	O
)	O
;	O
consecutive	int
++	O
;	O
break	O
;	O
case	O
PLOT_AT	int
:	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
pt1	struct(float,float)
)	O
;	O
HPcoord_to_dotcoord	(*(struct(float,float)),*(struct(int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
&	O
pt1	struct(float,float)
,	O
&	O
ref	struct(int,int)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
;	O
line_PicBuf	(*(struct(int,int)),*(struct(int,int)),float,short,int,*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
&	O
ref	struct(int,int)
,	O
&	O
ref	struct(int,int)
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen_no	int
]	O
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
pen_no	int
]	O
,	O
consecutive	int
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
;	O
consecutive	int
=	O
0	int
;	O
break	O
;	O
default	O
:	O
Eprintf	(*(char))->(void)
(	O
"Illegal cmd in temp. file!\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
