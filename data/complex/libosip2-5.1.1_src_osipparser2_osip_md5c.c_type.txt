static	O
void	O
osip_MD5Transform	(array(int),array(char))->(void)
PROTO_LIST	O
(	O
(	O
UINT4	int
[	O
4	int
]	O
,	O
unsigned	O
char	O
[	O
64	int
]	O
)	O
)	O
;	O
static	O
void	O
osip_Encode	(*(char),*(int),int)->(void)
PROTO_LIST	O
(	O
(	O
unsigned	O
char	O
*	O
,	O
UINT4	int
*	O
,	O
unsigned	O
int	O
)	O
)	O
;	O
static	O
void	O
osip_Decode	(*(int),*(char),int)->(void)
PROTO_LIST	O
(	O
(	O
UINT4	int
*	O
,	O
unsigned	O
char	O
*	O
,	O
unsigned	O
int	O
)	O
)	O
;	O
static	O
void	O
osip_MD5_memcpy	(*(char),*(char),int)->(void)
PROTO_LIST	O
(	O
(	O
POINTER	*(char)
,	O
POINTER	*(char)
,	O
unsigned	O
int	O
)	O
)	O
;	O
static	O
void	O
osip_MD5_memset	(*(char),int,int)->(void)
PROTO_LIST	O
(	O
(	O
POINTER	*(char)
,	O
int	O
,	O
unsigned	O
int	O
)	O
)	O
;	O
static	O
unsigned	O
char	O
PADDING	array(char)
[	O
64	int
]	O
=	O
{	O
0x80	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
;	O
void	O
osip_MD5Init	(*(struct(array(int),array(int),array(char))))->(void)
(	O
osip_MD5_CTX	struct(array(int),array(int),array(char))
*	O
context	*(struct(array(int),array(int),array(char)))
)	O
{	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
0	int
]	O
=	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
1	int
]	O
=	O
0	int
;	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
[	O
0	int
]	O
=	O
0x67452301	int
;	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
[	O
1	int
]	O
=	O
0xefcdab89	int
;	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
[	O
2	int
]	O
=	O
0x98badcfe	int
;	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
[	O
3	int
]	O
=	O
0x10325476	int
;	O
}	O
void	O
osip_MD5Update	(*(struct(array(int),array(int),array(char))),*(char),int)->(void)
(	O
osip_MD5_CTX	struct(array(int),array(int),array(char))
*	O
context	*(struct(array(int),array(int),array(char)))
,	O
unsigned	O
char	O
*	O
input	*(char)
,	O
unsigned	O
int	O
inputLen	int
)	O
{	O
unsigned	O
int	O
i	int
,	O
index	int
,	O
partLen	int
;	O
index	int
=	O
(	O
unsigned	O
int	O
)	O
(	O
(	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
0	int
]	O
>>	O
3	int
)	O
&	O
0x3F	int
)	O
;	O
if	O
(	O
(	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
0	int
]	O
+=	O
(	O
(	O
UINT4	int
)	O
inputLen	int
<<	O
3	int
)	O
)	O
<	O
(	O
(	O
UINT4	int
)	O
inputLen	int
<<	O
3	int
)	O
)	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
1	int
]	O
++	O
;	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
1	int
]	O
+=	O
(	O
(	O
UINT4	int
)	O
inputLen	int
>>	O
29	int
)	O
;	O
partLen	int
=	O
64	int
-	O
index	int
;	O
if	O
(	O
inputLen	int
>=	O
partLen	int
)	O
{	O
osip_MD5_memcpy	(*(char),*(char),int)->(void)
(	O
(	O
POINTER	*(char)
)	O
&	O
context	*(struct(array(int),array(int),array(char)))
->	O
buffer	array(char)
[	O
index	int
]	O
,	O
(	O
POINTER	*(char)
)	O
input	*(char)
,	O
partLen	int
)	O
;	O
osip_MD5Transform	(array(int),array(char))->(void)
(	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
,	O
context	*(struct(array(int),array(int),array(char)))
->	O
buffer	array(char)
)	O
;	O
for	O
(	O
i	int
=	O
partLen	int
;	O
i	int
+	O
63	int
<	O
inputLen	int
;	O
i	int
+=	O
64	int
)	O
osip_MD5Transform	(array(int),array(char))->(void)
(	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
,	O
&	O
input	*(char)
[	O
i	int
]	O
)	O
;	O
index	int
=	O
0	int
;	O
}	O
else	O
i	int
=	O
0	int
;	O
osip_MD5_memcpy	(*(char),*(char),int)->(void)
(	O
(	O
POINTER	*(char)
)	O
&	O
context	*(struct(array(int),array(int),array(char)))
->	O
buffer	array(char)
[	O
index	int
]	O
,	O
(	O
POINTER	*(char)
)	O
&	O
input	*(char)
[	O
i	int
]	O
,	O
inputLen	int
-	O
i	int
)	O
;	O
}	O
void	O
osip_MD5Final	(array(char),*(struct(array(int),array(int),array(char))))->(void)
(	O
unsigned	O
char	O
digest	array(char)
[	O
16	int
]	O
,	O
osip_MD5_CTX	struct(array(int),array(int),array(char))
*	O
context	*(struct(array(int),array(int),array(char)))
)	O
{	O
unsigned	O
char	O
bits	array(char)
[	O
8	int
]	O
;	O
unsigned	O
int	O
index	int
,	O
padLen	int
;	O
osip_Encode	(*(char),*(int),int)->(void)
(	O
bits	array(char)
,	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
,	O
8	int
)	O
;	O
index	int
=	O
(	O
unsigned	O
int	O
)	O
(	O
(	O
context	*(struct(array(int),array(int),array(char)))
->	O
count	array(int)
[	O
0	int
]	O
>>	O
3	int
)	O
&	O
0x3f	int
)	O
;	O
padLen	int
=	O
(	O
index	int
<	O
56	int
)	O
?	O
(	O
56	int
-	O
index	int
)	O
:	O
(	O
120	int
-	O
index	int
)	O
;	O
osip_MD5Update	(*(struct(array(int),array(int),array(char))),*(char),int)->(void)
(	O
context	*(struct(array(int),array(int),array(char)))
,	O
PADDING	array(char)
,	O
padLen	int
)	O
;	O
osip_MD5Update	(*(struct(array(int),array(int),array(char))),*(char),int)->(void)
(	O
context	*(struct(array(int),array(int),array(char)))
,	O
bits	array(char)
,	O
8	int
)	O
;	O
osip_Encode	(*(char),*(int),int)->(void)
(	O
digest	array(char)
,	O
context	*(struct(array(int),array(int),array(char)))
->	O
state	array(int)
,	O
16	int
)	O
;	O
osip_MD5_memset	(*(char),int,int)->(void)
(	O
(	O
POINTER	*(char)
)	O
context	*(struct(array(int),array(int),array(char)))
,	O
0	int
,	O
sizeof	O
(	O
*	O
context	*(struct(array(int),array(int),array(char)))
)	O
)	O
;	O
}	O
static	O
void	O
osip_MD5Transform	(array(int),array(char))->(void)
(	O
UINT4	int
state	array(int)
[	O
4	int
]	O
,	O
unsigned	O
char	O
block	array(char)
[	O
64	int
]	O
)	O
{	O
UINT4	int
a	int
=	O
state	array(int)
[	O
0	int
]	O
,	O
b	int
=	O
state	array(int)
[	O
1	int
]	O
,	O
c	int
=	O
state	array(int)
[	O
2	int
]	O
,	O
d	int
=	O
state	array(int)
[	O
3	int
]	O
,	O
x	array(int)
[	O
16	int
]	O
;	O
osip_Decode	(*(int),*(char),int)->(void)
(	O
x	array(int)
,	O
block	array(char)
,	O
64	int
)	O
;	O
FF	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
0	int
]	O
,	O
S11	int
,	O
0xd76aa478	int
)	O
;	O
FF	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
1	int
]	O
,	O
S12	int
,	O
0xe8c7b756	int
)	O
;	O
FF	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
2	int
]	O
,	O
S13	int
,	O
0x242070db	int
)	O
;	O
FF	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
3	int
]	O
,	O
S14	int
,	O
0xc1bdceee	int
)	O
;	O
FF	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
4	int
]	O
,	O
S11	int
,	O
0xf57c0faf	int
)	O
;	O
FF	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
5	int
]	O
,	O
S12	int
,	O
0x4787c62a	int
)	O
;	O
FF	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
6	int
]	O
,	O
S13	int
,	O
0xa8304613	int
)	O
;	O
FF	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
7	int
]	O
,	O
S14	int
,	O
0xfd469501	int
)	O
;	O
FF	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
8	int
]	O
,	O
S11	int
,	O
0x698098d8	int
)	O
;	O
FF	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
9	int
]	O
,	O
S12	int
,	O
0x8b44f7af	int
)	O
;	O
FF	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
10	int
]	O
,	O
S13	int
,	O
0xffff5bb1	int
)	O
;	O
FF	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
11	int
]	O
,	O
S14	int
,	O
0x895cd7be	int
)	O
;	O
FF	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
12	int
]	O
,	O
S11	int
,	O
0x6b901122	int
)	O
;	O
FF	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
13	int
]	O
,	O
S12	int
,	O
0xfd987193	int
)	O
;	O
FF	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
14	int
]	O
,	O
S13	int
,	O
0xa679438e	int
)	O
;	O
FF	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
15	int
]	O
,	O
S14	int
,	O
0x49b40821	int
)	O
;	O
GG	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
1	int
]	O
,	O
S21	int
,	O
0xf61e2562	int
)	O
;	O
GG	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
6	int
]	O
,	O
S22	int
,	O
0xc040b340	int
)	O
;	O
GG	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
11	int
]	O
,	O
S23	int
,	O
0x265e5a51	int
)	O
;	O
GG	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
0	int
]	O
,	O
S24	int
,	O
0xe9b6c7aa	int
)	O
;	O
GG	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
5	int
]	O
,	O
S21	int
,	O
0xd62f105d	int
)	O
;	O
GG	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
10	int
]	O
,	O
S22	int
,	O
0x2441453	int
)	O
;	O
GG	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
15	int
]	O
,	O
S23	int
,	O
0xd8a1e681	int
)	O
;	O
GG	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
4	int
]	O
,	O
S24	int
,	O
0xe7d3fbc8	int
)	O
;	O
GG	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
9	int
]	O
,	O
S21	int
,	O
0x21e1cde6	int
)	O
;	O
GG	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
14	int
]	O
,	O
S22	int
,	O
0xc33707d6	int
)	O
;	O
GG	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
3	int
]	O
,	O
S23	int
,	O
0xf4d50d87	int
)	O
;	O
GG	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
8	int
]	O
,	O
S24	int
,	O
0x455a14ed	int
)	O
;	O
GG	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
13	int
]	O
,	O
S21	int
,	O
0xa9e3e905	int
)	O
;	O
GG	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
2	int
]	O
,	O
S22	int
,	O
0xfcefa3f8	int
)	O
;	O
GG	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
7	int
]	O
,	O
S23	int
,	O
0x676f02d9	int
)	O
;	O
GG	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
12	int
]	O
,	O
S24	int
,	O
0x8d2a4c8a	int
)	O
;	O
HH	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
5	int
]	O
,	O
S31	int
,	O
0xfffa3942	int
)	O
;	O
HH	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
8	int
]	O
,	O
S32	int
,	O
0x8771f681	int
)	O
;	O
HH	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
11	int
]	O
,	O
S33	int
,	O
0x6d9d6122	int
)	O
;	O
HH	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
14	int
]	O
,	O
S34	int
,	O
0xfde5380c	int
)	O
;	O
HH	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
1	int
]	O
,	O
S31	int
,	O
0xa4beea44	int
)	O
;	O
HH	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
4	int
]	O
,	O
S32	int
,	O
0x4bdecfa9	int
)	O
;	O
HH	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
7	int
]	O
,	O
S33	int
,	O
0xf6bb4b60	int
)	O
;	O
HH	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
10	int
]	O
,	O
S34	int
,	O
0xbebfbc70	int
)	O
;	O
HH	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
13	int
]	O
,	O
S31	int
,	O
0x289b7ec6	int
)	O
;	O
HH	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
0	int
]	O
,	O
S32	int
,	O
0xeaa127fa	int
)	O
;	O
HH	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
3	int
]	O
,	O
S33	int
,	O
0xd4ef3085	int
)	O
;	O
HH	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
6	int
]	O
,	O
S34	int
,	O
0x4881d05	int
)	O
;	O
HH	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
9	int
]	O
,	O
S31	int
,	O
0xd9d4d039	int
)	O
;	O
HH	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
12	int
]	O
,	O
S32	int
,	O
0xe6db99e5	int
)	O
;	O
HH	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
15	int
]	O
,	O
S33	int
,	O
0x1fa27cf8	int
)	O
;	O
HH	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
2	int
]	O
,	O
S34	int
,	O
0xc4ac5665	int
)	O
;	O
II	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
0	int
]	O
,	O
S41	int
,	O
0xf4292244	int
)	O
;	O
II	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
7	int
]	O
,	O
S42	int
,	O
0x432aff97	int
)	O
;	O
II	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
14	int
]	O
,	O
S43	int
,	O
0xab9423a7	int
)	O
;	O
II	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
5	int
]	O
,	O
S44	int
,	O
0xfc93a039	int
)	O
;	O
II	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
12	int
]	O
,	O
S41	int
,	O
0x655b59c3	int
)	O
;	O
II	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
3	int
]	O
,	O
S42	int
,	O
0x8f0ccc92	int
)	O
;	O
II	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
10	int
]	O
,	O
S43	int
,	O
0xffeff47d	int
)	O
;	O
II	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
1	int
]	O
,	O
S44	int
,	O
0x85845dd1	int
)	O
;	O
II	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
8	int
]	O
,	O
S41	int
,	O
0x6fa87e4f	int
)	O
;	O
II	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
15	int
]	O
,	O
S42	int
,	O
0xfe2ce6e0	int
)	O
;	O
II	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
6	int
]	O
,	O
S43	int
,	O
0xa3014314	int
)	O
;	O
II	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
13	int
]	O
,	O
S44	int
,	O
0x4e0811a1	int
)	O
;	O
II	O
(	O
a	int
,	O
b	int
,	O
c	int
,	O
d	int
,	O
x	array(int)
[	O
4	int
]	O
,	O
S41	int
,	O
0xf7537e82	int
)	O
;	O
II	O
(	O
d	int
,	O
a	int
,	O
b	int
,	O
c	int
,	O
x	array(int)
[	O
11	int
]	O
,	O
S42	int
,	O
0xbd3af235	int
)	O
;	O
II	O
(	O
c	int
,	O
d	int
,	O
a	int
,	O
b	int
,	O
x	array(int)
[	O
2	int
]	O
,	O
S43	int
,	O
0x2ad7d2bb	int
)	O
;	O
II	O
(	O
b	int
,	O
c	int
,	O
d	int
,	O
a	int
,	O
x	array(int)
[	O
9	int
]	O
,	O
S44	int
,	O
0xeb86d391	int
)	O
;	O
state	array(int)
[	O
0	int
]	O
+=	O
a	int
;	O
state	array(int)
[	O
1	int
]	O
+=	O
b	int
;	O
state	array(int)
[	O
2	int
]	O
+=	O
c	int
;	O
state	array(int)
[	O
3	int
]	O
+=	O
d	int
;	O
osip_MD5_memset	(*(char),int,int)->(void)
(	O
(	O
POINTER	*(char)
)	O
x	array(int)
,	O
0	int
,	O
sizeof	O
(	O
x	array(int)
)	O
)	O
;	O
}	O
static	O
void	O
osip_Encode	(*(char),*(int),int)->(void)
(	O
unsigned	O
char	O
*	O
output	*(char)
,	O
UINT4	int
*	O
input	*(char)
,	O
unsigned	O
int	O
len	int
)	O
{	O
unsigned	O
int	O
i	int
,	O
j	int
;	O
for	O
(	O
i	int
=	O
0	int
,	O
j	int
=	O
0	int
;	O
j	int
<	O
len	int
;	O
i	int
++	O
,	O
j	int
+=	O
4	int
)	O
{	O
output	*(char)
[	O
j	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
input	*(char)
[	O
i	int
]	O
&	O
0xff	int
)	O
;	O
output	*(char)
[	O
j	int
+	O
1	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
(	O
input	*(char)
[	O
i	int
]	O
>>	O
8	int
)	O
&	O
0xff	int
)	O
;	O
output	*(char)
[	O
j	int
+	O
2	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
(	O
input	*(char)
[	O
i	int
]	O
>>	O
16	int
)	O
&	O
0xff	int
)	O
;	O
output	*(char)
[	O
j	int
+	O
3	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
(	O
(	O
input	*(char)
[	O
i	int
]	O
>>	O
24	int
)	O
&	O
0xff	int
)	O
;	O
}	O
}	O
static	O
void	O
osip_Decode	(*(int),*(char),int)->(void)
(	O
UINT4	int
*	O
output	*(char)
,	O
unsigned	O
char	O
*	O
input	*(char)
,	O
unsigned	O
int	O
len	int
)	O
{	O
unsigned	O
int	O
i	int
,	O
j	int
;	O
for	O
(	O
i	int
=	O
0	int
,	O
j	int
=	O
0	int
;	O
j	int
<	O
len	int
;	O
i	int
++	O
,	O
j	int
+=	O
4	int
)	O
output	*(char)
[	O
i	int
]	O
=	O
(	O
(	O
UINT4	int
)	O
input	*(char)
[	O
j	int
]	O
)	O
|	O
(	O
(	O
(	O
UINT4	int
)	O
input	*(char)
[	O
j	int
+	O
1	int
]	O
)	O
<<	O
8	int
)	O
|	O
(	O
(	O
(	O
UINT4	int
)	O
input	*(char)
[	O
j	int
+	O
2	int
]	O
)	O
<<	O
16	int
)	O
|	O
(	O
(	O
(	O
UINT4	int
)	O
input	*(char)
[	O
j	int
+	O
3	int
]	O
)	O
<<	O
24	int
)	O
;	O
}	O
static	O
void	O
osip_MD5_memcpy	(*(char),*(char),int)->(void)
(	O
POINTER	*(char)
output	*(char)
,	O
POINTER	*(char)
input	*(char)
,	O
unsigned	O
int	O
len	int
)	O
{	O
unsigned	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
output	*(char)
[	O
i	int
]	O
=	O
input	*(char)
[	O
i	int
]	O
;	O
}	O
static	O
void	O
osip_MD5_memset	(*(char),int,int)->(void)
(	O
POINTER	*(char)
output	*(char)
,	O
int	O
value	int
,	O
unsigned	O
int	O
len	int
)	O
{	O
unsigned	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
(	O
(	O
char	O
*	O
)	O
output	*(char)
)	O
[	O
i	int
]	O
=	O
(	O
char	O
)	O
value	int
;	O
}	O
