bool	O
hard_locale	O
(	O
int	O
category	O
)	O
{	O
bool	O
hard	O
=	O
true	O
;	O
char	O
const	O
*	O
p	O
=	O
setlocale	O
(	O
category	O
,	O
NULL	O
)	O
;	O
if	O
(	O
p	O
)	O
{	O
if	O
(	O
2	int
<=	O
GLIBC_VERSION	int
)	O
{	O
if	O
(	O
strcmp	O
(	O
p	O
,	O
"C"	*(char)
)	O
==	O
0	int
||	O
strcmp	O
(	O
p	O
,	O
"POSIX"	*(char)
)	O
==	O
0	int
)	O
hard	O
=	O
false	O
;	O
}	O
else	O
{	O
char	O
*	O
locale	O
=	O
strdup	O
(	O
p	O
)	O
;	O
if	O
(	O
locale	O
)	O
{	O
if	O
(	O
(	O
(	O
p	O
=	O
setlocale	O
(	O
category	O
,	O
"C"	*(char)
)	O
)	O
&&	O
strcmp	O
(	O
p	O
,	O
locale	O
)	O
==	O
0	int
)	O
||	O
(	O
(	O
p	O
=	O
setlocale	O
(	O
category	O
,	O
"POSIX"	*(char)
)	O
)	O
&&	O
strcmp	O
(	O
p	O
,	O
locale	O
)	O
==	O
0	int
)	O
)	O
hard	O
=	O
false	O
;	O
setlocale	O
(	O
category	O
,	O
locale	O
)	O
;	O
free	O
(	O
locale	O
)	O
;	O
}	O
}	O
}	O
return	O
hard	O
;	O
}	O
