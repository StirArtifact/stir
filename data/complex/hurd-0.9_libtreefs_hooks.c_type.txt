treefs_hook_vector_t	*(*(()->(void)))
treefs_hooks_clone	(*(*(()->(void))))->(*(*(()->(void))))
(	O
treefs_hook_vector_t	*(*(()->(void)))
hooks	*(*(()->(void)))
)	O
{	O
treefs_hook_vector_t	*(*(()->(void)))
clone	(*((*(void))->(int)),*(void),int,*(void))->(int)
=	O
malloc	O
(	O
HV_SIZE	O
)	O
;	O
if	O
(	O
clone	(*((*(void))->(int)),*(void),int,*(void))->(int)
!=	O
NULL	O
)	O
{	O
if	O
(	O
hooks	*(*(()->(void)))
==	O
NULL	O
)	O
hooks	*(*(()->(void)))
=	O
treefs_default_hooks	*(()->(void))
;	O
bcopy	()->(int)
(	O
hooks	*(*(()->(void)))
,	O
clone	(*((*(void))->(int)),*(void),int,*(void))->(int)
,	O
HV_SIZE	O
)	O
;	O
}	O
return	O
clone	(*((*(void))->(int)),*(void),int,*(void))->(int)
;	O
}	O
void	O
treefs_hooks_override	(*(*(()->(void))),*(*(()->(void))))->(void)
(	O
treefs_hook_vector_t	*(*(()->(void)))
hooks	*(*(()->(void)))
,	O
treefs_hook_vector_t	*(*(()->(void)))
overrides	*(*(()->(void)))
)	O
{	O
int	O
num	int
;	O
for	O
(	O
num	int
=	O
0	int
;	O
num	int
<	O
TREEFS_NUM_HOOKS	O
;	O
num	int
++	O
)	O
if	O
(	O
overrides	*(*(()->(void)))
[	O
num	int
]	O
!=	O
NULL	O
)	O
hooks	*(*(()->(void)))
[	O
num	int
]	O
=	O
overrides	*(*(()->(void)))
[	O
num	int
]	O
;	O
}	O
void	O
treefs_hooks_set	(*(*(()->(void))),int,*(()->(void)))->(void)
(	O
treefs_hook_vector_t	*(*(()->(void)))
hooks	*(*(()->(void)))
,	O
unsigned	O
num	int
,	O
void	O
(	O
*	O
hook	*(()->(void))
)	O
(	O
)	O
)	O
{	O
hooks	*(*(()->(void)))
[	O
num	int
]	O
=	O
hook	*(()->(void))
;	O
}	O
