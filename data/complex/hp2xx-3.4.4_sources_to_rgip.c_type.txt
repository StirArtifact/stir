static	O
float	O
ax	float
,	O
ay	float
;	O
static	O
int	O
startx	int
,	O
starty	int
,	O
endx	int
,	O
endy	int
;	O
static	O
int	O
lwid	int
,	O
lsty	int
,	O
lcol	int
;	O
static	O
int	O
firstmove	int
;	O
static	O
int	O
rgipx	(float)->(int)
(	O
float	O
x	int
)	O
{	O
return	O
(	O
int	O
)	O
(	O
x	int
*	O
ax	float
)	O
;	O
}	O
static	O
int	O
rgipy	(float)->(int)
(	O
float	O
y	int
)	O
{	O
return	O
(	O
int	O
)	O
(	O
y	int
*	O
ay	float
)	O
;	O
}	O
static	O
void	O
rgip_set_linewidth	(int)->(void)
(	O
int	O
width	array(float)
)	O
{	O
lwid	int
=	O
width	array(float)
;	O
}	O
static	O
void	O
rgip_set_linestyle	(int)->(void)
(	O
int	O
style	int
)	O
{	O
lsty	int
=	O
style	int
;	O
}	O
static	O
void	O
rgip_set_color	(double,double,double)->(void)
(	O
double	O
red	int
,	O
double	O
green	int
,	O
double	O
blue	int
)	O
{	O
float	O
max	float
,	O
min	float
,	O
delta	float
,	O
r	char
,	O
g	char
,	O
b	char
,	O
h	float
,	O
s	float
,	O
v	float
;	O
if	O
(	O
red	int
>=	O
green	int
)	O
{	O
if	O
(	O
red	int
>=	O
blue	int
)	O
max	float
=	O
(	O
float	O
)	O
red	int
;	O
else	O
max	float
=	O
(	O
float	O
)	O
blue	int
;	O
}	O
else	O
{	O
if	O
(	O
green	int
>=	O
blue	int
)	O
max	float
=	O
(	O
float	O
)	O
green	int
;	O
else	O
max	float
=	O
(	O
float	O
)	O
blue	int
;	O
}	O
if	O
(	O
red	int
<=	O
green	int
)	O
{	O
if	O
(	O
red	int
<=	O
blue	int
)	O
min	float
=	O
(	O
float	O
)	O
red	int
;	O
else	O
min	float
=	O
(	O
float	O
)	O
blue	int
;	O
}	O
else	O
{	O
if	O
(	O
green	int
<=	O
blue	int
)	O
min	float
=	O
(	O
float	O
)	O
green	int
;	O
else	O
min	float
=	O
(	O
float	O
)	O
blue	int
;	O
}	O
delta	float
=	O
max	float
-	O
min	float
;	O
v	float
=	O
max	float
;	O
h	float
=	O
(	O
-	O
1	int
)	O
;	O
s	float
=	O
0.0	int
;	O
if	O
(	O
max	float
!=	O
0.0	int
)	O
{	O
s	float
=	O
delta	float
/	O
max	float
;	O
if	O
(	O
s	float
!=	O
0.0	int
)	O
{	O
r	char
=	O
(	O
max	float
-	O
red	int
)	O
/	O
delta	float
;	O
g	char
=	O
(	O
max	float
-	O
green	int
)	O
/	O
delta	float
;	O
b	char
=	O
(	O
max	float
-	O
blue	int
)	O
/	O
delta	float
;	O
if	O
(	O
red	int
==	O
max	float
)	O
h	float
=	O
b	char
-	O
g	char
;	O
else	O
if	O
(	O
green	int
==	O
max	float
)	O
h	float
=	O
2	int
+	O
r	char
-	O
b	char
;	O
else	O
h	float
=	O
4	int
+	O
g	char
-	O
r	char
;	O
h	float
=	O
h	float
*	O
60	int
;	O
if	O
(	O
h	float
<	O
0	int
)	O
h	float
=	O
h	float
+	O
360	int
;	O
}	O
}	O
lcol	int
=	O
7	int
;	O
if	O
(	O
s	float
>=	O
.2	int
)	O
{	O
if	O
(	O
(	O
(	O
h	float
>=	O
0	int
)	O
&&	O
(	O
h	float
<	O
30	int
)	O
)	O
||	O
(	O
h	float
>=	O
330	int
)	O
)	O
lcol	int
=	O
1	int
;	O
else	O
if	O
(	O
(	O
h	float
>=	O
30	int
)	O
&&	O
(	O
h	float
<	O
90	int
)	O
)	O
lcol	int
=	O
2	int
;	O
else	O
if	O
(	O
(	O
h	float
>=	O
90	int
)	O
&&	O
(	O
h	float
<	O
150	int
)	O
)	O
lcol	int
=	O
3	int
;	O
else	O
if	O
(	O
(	O
h	float
>=	O
150	int
)	O
&&	O
(	O
h	float
<	O
210	int
)	O
)	O
lcol	int
=	O
4	int
;	O
else	O
if	O
(	O
(	O
h	float
>=	O
210	int
)	O
&&	O
(	O
h	float
<	O
270	int
)	O
)	O
lcol	int
=	O
5	int
;	O
else	O
lcol	int
=	O
6	int
;	O
}	O
else	O
{	O
if	O
(	O
delta	float
==	O
0	int
)	O
lcol	int
=	O
7	int
;	O
else	O
{	O
if	O
(	O
v	float
<	O
0.15	int
)	O
lcol	int
=	O
8	int
;	O
else	O
if	O
(	O
v	float
<	O
0.5	int
)	O
lcol	int
=	O
16	int
;	O
else	O
if	O
(	O
v	float
<	O
0.75	int
)	O
lcol	int
=	O
15	int
;	O
else	O
lcol	int
=	O
7	int
;	O
}	O
}	O
}	O
int	O
to_rgip	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(int)
(	O
const	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
const	O
OUT_PAR	struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),double,double)
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
{	O
PlotCmd	enum(int,int,int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int,int,int)
;	O
HPGL_Pt	struct(float,float)
pt1	struct(float,float)
=	O
{	O
0	int
,	O
0	int
}	O
;	O
FILE	struct
*	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
PEN_W	float
pensize	float
;	O
PEN_C	short
pencolor	short
;	O
int	O
pen_no	int
=	O
0	int
,	O
err	int
=	O
0	int
;	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"\n\n- Writing RGIP code to \"%s\"\n"	*(char)
,	O
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
outfile	*(char)
==	O
'-'	O
?	O
"stdout"	*(char)
:	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
outfile	*(char)
)	O
;	O
}	O
if	O
(	O
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
outfile	*(char)
!=	O
'-'	O
)	O
{	O
if	O
(	O
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
outfile	*(char)
,	O
"w"	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
PError	(*(char))->(void)
(	O
"hp2xx (rgip)"	*(char)
)	O
;	O
err	int
=	O
ERROR	O
;	O
goto	O
RGIP_exit	O
;	O
}	O
}	O
else	O
{	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
}	O
firstmove	int
=	O
1	int
;	O
ax	float
=	O
RGIPXMAX	int
/	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmax	double
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmin	double
)	O
;	O
ay	float
=	O
RGIPYMAX	int
/	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymax	double
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymin	double
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%RGIP_METAFILE  :1.0a\n"	*(char)
)	O
;	O
pensize	float
=	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
DEFAULT_PEN_NO	int
]	O
;	O
if	O
(	O
pensize	float
>	O
0.05	int
)	O
{	O
rgip_set_linewidth	(int)->(void)
(	O
(	O
int	O
)	O
(	O
1	int
+	O
pensize	float
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
/	O
0.025	int
)	O
)	O
;	O
}	O
rgip_set_linestyle	(int)->(void)
(	O
1	int
)	O
;	O
rgip_set_color	(double,double,double)->(void)
(	O
1.0	int
,	O
1.0	int
,	O
1.0	int
)	O
;	O
while	O
(	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
PlotCmd_from_tmpfile	()->(enum(int,int,int,int,int,int,int,int,int))
(	O
)	O
)	O
!=	O
CMD_EOF	int
)	O
{	O
switch	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
NOP	int
:	O
break	O
;	O
case	O
SET_PEN	int
:	O
if	O
(	O
(	O
pen_no	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
EOF	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file: "	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
pensize	float
=	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen_no	int
]	O
;	O
if	O
(	O
pensize	float
>	O
0.05	int
)	O
{	O
rgip_set_linewidth	(int)->(void)
(	O
(	O
int	O
)	O
(	O
1	int
+	O
pensize	float
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
/	O
0.025	int
)	O
)	O
;	O
}	O
pencolor	short
=	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
pen_no	int
]	O
;	O
rgip_set_color	(double,double,double)->(void)
(	O
pt	struct(array(float),array(short),array(array(char)))
.	O
clut	array(array(char))
[	O
pencolor	short
]	O
[	O
0	int
]	O
/	O
255.0	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
clut	array(array(char))
[	O
pencolor	short
]	O
[	O
1	int
]	O
/	O
255.0	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
clut	array(array(char))
[	O
pencolor	short
]	O
[	O
2	int
]	O
/	O
255.0	int
)	O
;	O
break	O
;	O
case	O
DEF_PC	int
:	O
if	O
(	O
!	O
load_pen_color_table	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
pencolor	short
=	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
pen_no	int
]	O
;	O
rgip_set_color	(double,double,double)->(void)
(	O
pt	struct(array(float),array(short),array(array(char)))
.	O
clut	array(array(char))
[	O
pencolor	short
]	O
[	O
0	int
]	O
/	O
255.0	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
clut	array(array(char))
[	O
pencolor	short
]	O
[	O
1	int
]	O
/	O
255.0	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
clut	array(array(char))
[	O
pencolor	short
]	O
[	O
2	int
]	O
/	O
255.0	int
)	O
;	O
break	O
;	O
case	O
DEF_PW	int
:	O
if	O
(	O
!	O
load_pen_width_table	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Unexpected end of temp. file"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
pensize	float
=	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen_no	int
]	O
;	O
if	O
(	O
pensize	float
>	O
0.05	int
)	O
{	O
rgip_set_linewidth	(int)->(void)
(	O
(	O
int	O
)	O
(	O
1	int
+	O
pensize	float
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
/	O
0.025	int
)	O
)	O
;	O
}	O
break	O
;	O
case	O
MOVE_TO	int
:	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
pt1	struct(float,float)
)	O
;	O
if	O
(	O
firstmove	int
==	O
1	int
)	O
{	O
firstmove	int
=	O
0	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%RI_GROUPEND\n"	*(char)
)	O
;	O
}	O
startx	int
=	O
rgipx	(float)->(int)
(	O
(	O
(	O
&	O
pt1	struct(float,float)
)	O
->	O
x	int
)	O
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmin	double
)	O
;	O
starty	int
=	O
rgipy	(float)->(int)
(	O
(	O
(	O
&	O
pt1	struct(float,float)
)	O
->	O
y	int
)	O
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymin	double
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%RI_GROUPSTART\n"	*(char)
)	O
;	O
break	O
;	O
case	O
DRAW_TO	int
:	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
pt1	struct(float,float)
)	O
;	O
if	O
(	O
pensize	float
!=	O
0	int
)	O
{	O
endx	int
=	O
rgipx	(float)->(int)
(	O
(	O
(	O
&	O
pt1	struct(float,float)
)	O
->	O
x	int
)	O
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmin	double
)	O
;	O
endy	int
=	O
rgipy	(float)->(int)
(	O
(	O
(	O
&	O
pt1	struct(float,float)
)	O
->	O
y	int
)	O
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymin	double
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%d %d %d %d %d %d %d LINE\n"	*(char)
,	O
startx	int
,	O
starty	int
,	O
endx	int
,	O
endy	int
,	O
lwid	int
,	O
lsty	int
,	O
lcol	int
)	O
;	O
startx	int
=	O
endx	int
;	O
starty	int
=	O
endy	int
;	O
}	O
break	O
;	O
case	O
PLOT_AT	int
:	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
pt1	struct(float,float)
)	O
;	O
if	O
(	O
pensize	float
!=	O
0	int
)	O
{	O
startx	int
=	O
rgipx	(float)->(int)
(	O
(	O
(	O
&	O
pt1	struct(float,float)
)	O
->	O
x	int
)	O
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmin	double
)	O
;	O
starty	int
=	O
rgipy	(float)->(int)
(	O
(	O
(	O
&	O
pt1	struct(float,float)
)	O
->	O
y	int
)	O
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymin	double
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"[ %d %d ] %d DOTS\n"	*(char)
,	O
startx	int
,	O
starty	int
,	O
lcol	int
)	O
;	O
}	O
break	O
;	O
default	O
:	O
Eprintf	(*(char))->(void)
(	O
"Illegal cmd in temp. file!"	*(char)
)	O
;	O
err	int
=	O
ERROR	O
;	O
goto	O
RGIP_exit	O
;	O
}	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%RI_GROUPEND\n"	*(char)
)	O
;	O
RGIP_exit	O
:	O
if	O
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
NULL	O
&&	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
!=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
md	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
Eprintf	(*(char))->(void)
(	O
"\n"	*(char)
)	O
;	O
return	O
err	int
;	O
}	O
