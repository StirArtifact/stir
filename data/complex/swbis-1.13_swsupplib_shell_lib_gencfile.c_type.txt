static	O
HEAP_ALLOC	O
(	O
wrkmem	*(void)
,	O
LZO1X_1_MEM_COMPRESS	O
)	O
;	O
static	O
int	O
unescape_text	(*(char),*(struct(*(char),*(char),int,int,int,char,int)),int)->(int)
(	O
char	O
*	O
text	*(char)
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
len	int
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
char	O
*	O
end	*(char)
;	O
int	O
m	int
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
text	*(char)
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"\\x"	*(char)
,	O
2	int
)	O
==	O
0	int
)	O
{	O
s	*(struct(*(char),*(char),int,int,int,char,int))
+=	O
2	int
;	O
m	int
=	O
(	O
int	O
)	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
&	O
end	*(char)
,	O
16	int
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
+=	O
2	int
;	O
if	O
(	O
end	*(char)
!=	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"unescape_text: error, loc=2\n"	*(char)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
strob_chr	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
m	int
)	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"unescape_text: error, loc=1\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
conv_clump	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
unsigned	O
char	O
*	O
line	*(char)
,	O
int	O
len	int
)	O
{	O
unsigned	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
count	int
;	O
int	O
linecount	int
;	O
linecount	int
=	O
0	int
;	O
count	int
=	O
0	int
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
line	*(char)
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
""	*(char)
)	O
;	O
while	O
(	O
count	int
<	O
len	int
)	O
{	O
if	O
(	O
linecount	int
==	O
0	int
)	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\""	*(char)
)	O
;	O
linecount	int
++	O
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\\x%02x"	*(char)
,	O
(	O
int	O
)	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
count	int
++	O
;	O
if	O
(	O
linecount	int
>	O
15	int
)	O
{	O
linecount	int
=	O
0	int
;	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\"\n"	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
linecount	int
)	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\"\n"	*(char)
)	O
;	O
return	O
;	O
}	O
static	O
int	O
decompress_func	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
dst	*(char)
,	O
unsigned	O
char	O
*	O
z	*(char)
,	O
int	O
compressed_len	int
)	O
{	O
int	O
ret	int
;	O
lzo_uintp	O
dst_len	*(int)
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
dst	*(char)
,	O
""	*(char)
)	O
;	O
strob_set_length	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
dst	*(char)
,	O
compressed_len	int
*	O
40	int
)	O
;	O
ret	int
=	O
lzo1x_decompress_safe	(*(char),int,*(char),*(int),*(void))->(int)
(	O
z	*(char)
,	O
(	O
lzo_uint	int
)	O
compressed_len	int
,	O
(	O
lzo_byte	O
*	O
)	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
dst	*(char)
)	O
,	O
(	O
lzo_uintp	O
)	O
(	O
&	O
dst_len	*(int)
)	O
,	O
NULL	O
)	O
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
compress_func	(*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(*(char)),*(*(int)))->(int)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
plain_text	*(struct(*(char),*(char),int,int,int,char,int))
,	O
unsigned	O
char	O
*	O
*	O
cloc	*(*(char))
,	O
int	O
*	O
*	O
clen	*(*(int))
)	O
{	O
int	O
r	int
;	O
lzo_uint	int
in_len	int
;	O
lzo_uint	int
out_len	int
;	O
int	O
IN_LEN	int
=	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
plain_text	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
100	int
;	O
int	O
OUT_LEN	int
=	O
(	O
IN_LEN	int
+	O
IN_LEN	int
/	O
64	int
+	O
16	int
+	O
3	int
)	O
;	O
lzo_byte	O
*	O
inbuf	*(char)
=	O
malloc	(long)->(*(void))
(	O
IN_LEN	int
)	O
;	O
lzo_byte	O
*	O
outbuf	*(char)
=	O
malloc	(long)->(*(void))
(	O
OUT_LEN	int
)	O
;	O
if	O
(	O
lzo_init	O
(	O
)	O
!=	O
LZO_E_OK	int
)	O
{	O
printf	(*(char))->(int)
(	O
"lzo_init() failed !!!\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
in_len	int
=	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
plain_text	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
1	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
inbuf	*(char)
,	O
(	O
void	O
*	O
)	O
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
plain_text	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
,	O
(	O
size_t	long
)	O
in_len	int
)	O
;	O
r	int
=	O
lzo1x_1_compress	(*(char),int,*(char),*(int),*(void))->(int)
(	O
inbuf	*(char)
,	O
in_len	int
,	O
outbuf	*(char)
,	O
&	O
out_len	int
,	O
wrkmem	*(void)
)	O
;	O
if	O
(	O
r	int
==	O
LZO_E_OK	int
)	O
{	O
;	O
}	O
else	O
{	O
printf	(*(char))->(int)
(	O
"internal error - compression failed: %d\n"	*(char)
,	O
r	int
)	O
;	O
return	O
-	O
2	int
;	O
}	O
if	O
(	O
cloc	*(*(char))
&&	O
clen	*(*(int))
)	O
{	O
*	O
cloc	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
out_len	int
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
*	O
cloc	*(*(char))
,	O
outbuf	*(char)
,	O
out_len	int
)	O
;	O
}	O
conv_clump	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(void)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
outbuf	*(char)
,	O
(	O
int	O
)	O
out_len	int
)	O
;	O
free	(*(void))->(void)
(	O
inbuf	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
outbuf	*(char)
)	O
;	O
return	O
(	O
int	O
)	O
out_len	int
;	O
}	O
static	O
void	O
write_function_data_header	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
funcheader	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
compression	int
,	O
int	O
uncompressed_size	int
,	O
int	O
size	long
)	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
funcheader	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
"\t\"%010d:%010d:COMPRESSION=%d:\",\n"	*(char)
,	O
size	long
,	O
uncompressed_size	int
,	O
compression	int
)	O
;	O
}	O
static	O
void	O
write_file_header	(int)->(void)
(	O
int	O
compression_on	int
)	O
{	O
time_t	long
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
=	O
time	struct(long,long)
(	O
NULL	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"/*\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"This file was automatically generated on %s"	*(char)
,	O
ctime	(*(long))->(*(char))
(	O
&	O
tm	struct(int,int,int,int,int,int,int,int,int,long,*(char))
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"by gencfile.c version "	*(char)
VERSION	*(char)
".\n"	*(char)
)	O
;	O
if	O
(	O
compression_on	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Each shell function is compressed using the minilzo compression library.\n"	*(char)
)	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"*/\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"#include \"shlib.h\"\n"	*(char)
"\n"	*(char)
"\n"	*(char)
"struct shell_lib_function shell_lib_function_pallet[]={\n"	*(char)
)	O
;	O
}	O
static	O
void	O
convert_line	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
line	*(char)
,	O
int	O
compress_on	int
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
line	*(char)
;	O
if	O
(	O
compress_on	int
)	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
line	*(char)
)	O
;	O
return	O
;	O
}	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\""	*(char)
)	O
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\\x%02x"	*(char)
,	O
(	O
int	O
)	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
}	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
1	int
,	O
"\"\n"	*(char)
)	O
;	O
return	O
;	O
}	O
static	O
char	O
*	O
getnextpath	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
*	O
ret	int
;	O
static	O
char	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
[	O
1024	int
]	O
;	O
ret	int
=	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
sizeof	O
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
ret	int
)	O
return	O
NULL	O
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
ret	int
)	O
>=	O
(	O
sizeof	O
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
-	O
1	int
)	O
)	O
exit	(int)->(void)
(	O
9	int
)	O
;	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
[	O
sizeof	O
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
return	O
ret	int
;	O
}	O
static	O
char	O
*	O
get_next_line	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
FILE	struct
*	O
flp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
*	O
path	*(char)
;	O
path	*(char)
=	O
getnextpath	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
flp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
path	*(char)
;	O
}	O
static	O
void	O
parse_name	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(void)
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
function_name	*(struct(*(char),*(char),int,int,int,char,int))
,	O
char	O
*	O
line	*(char)
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
function_name	*(struct(*(char),*(char),int,int,int,char,int))
,	O
line	*(char)
)	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
function_name	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
while	O
(	O
isalnum	(int)->(int)
(	O
(	O
int	O
)	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
||	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'_'	O
)	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
'\0'	O
;	O
return	O
;	O
}	O
static	O
int	O
det_strlen	(*(char))->(int)
(	O
char	O
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
=	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
nq	int
=	O
0	int
;	O
int	O
len	int
=	O
strlen	(*(char))->(long)
(	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
if	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'"'	O
||	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'\n'	O
)	O
nq	int
++	O
;	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
;	O
}	O
return	O
(	O
len	int
-	O
nq	int
)	O
/	O
4	int
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
retval	int
=	O
0	int
;	O
int	O
ret	int
=	O
0	int
;	O
char	O
*	O
line	*(char)
;	O
char	O
*	O
tmp_s	*(char)
;	O
int	O
start_func	int
=	O
0	int
;	O
int	O
compress_on	int
=	O
0	int
;	O
int	O
compressed_len	int
=	O
0	int
;	O
int	O
uncompressed_len	int
=	O
0	int
;	O
FILE	struct
*	O
flp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
function_name	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
shell_function	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
text	*(char)
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
function_header	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
10	int
)	O
;	O
if	O
(	O
argc	int
>	O
1	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"--help"	*(char)
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Usage: gencfile {--compression=0|--compression=1}\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Generate a C file to stdout from a shell library read on stdin.\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"For example: ./gencfile <shell_lib.sh\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
tmp_s	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
(	O
int	O
)	O
'='	O
)	O
;	O
if	O
(	O
tmp_s	*(char)
)	O
{	O
tmp_s	*(char)
++	O
;	O
compress_on	int
=	O
atoi	(*(char))->(int)
(	O
tmp_s	*(char)
)	O
;	O
}	O
}	O
write_file_header	(int)->(void)
(	O
compress_on	int
)	O
;	O
flp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
line	*(char)
=	O
get_next_line	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
flp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
while	O
(	O
ret	int
==	O
0	int
&&	O
line	*(char)
)	O
{	O
if	O
(	O
start_func	int
==	O
0	int
&&	O
isalpha	(int)->(int)
(	O
*	O
line	*(char)
)	O
&&	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(char)
,	O
"()"	*(char)
)	O
)	O
{	O
start_func	int
=	O
1	int
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
parse_name	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(void)
(	O
function_name	*(struct(*(char),*(char),int,int,int,char,int))
,	O
line	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"{\n"	*(char)
"	\"%s\",\n"	*(char)
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
function_name	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
shell_function	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
convert_line	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(void)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
line	*(char)
,	O
compress_on	int
)	O
;	O
}	O
else	O
if	O
(	O
start_func	int
==	O
0	int
&&	O
!	O
isalpha	(int)->(int)
(	O
*	O
line	*(char)
)	O
&&	O
!	O
strstr	(*(char),*(char))->(*(char))
(	O
line	*(char)
,	O
"()"	*(char)
)	O
)	O
{	O
;	O
}	O
else	O
if	O
(	O
start_func	int
&&	O
*	O
line	*(char)
==	O
'}'	O
)	O
{	O
convert_line	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(void)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
line	*(char)
,	O
compress_on	int
)	O
;	O
if	O
(	O
compress_on	int
==	O
0	int
)	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
text	*(char)
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
uncompressed_len	int
=	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
text	*(char)
)	O
;	O
compressed_len	int
=	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
text	*(char)
)	O
;	O
write_function_data_header	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,int)->(void)
(	O
function_header	*(struct(*(char),*(char),int,int,int,char,int))
,	O
compress_on	int
,	O
uncompressed_len	int
,	O
compressed_len	int
)	O
;	O
}	O
else	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
text	*(char)
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
uncompressed_len	int
=	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
text	*(char)
)	O
+	O
1	int
;	O
compressed_len	int
=	O
compress_func	(*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),*(*(char)),*(*(int)))->(int)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
text	*(char)
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
compressed_len	int
<=	O
0	int
)	O
{	O
retval	int
++	O
;	O
}	O
write_function_data_header	(*(struct(*(char),*(char),int,int,int,char,int)),int,int,int)->(void)
(	O
function_header	*(struct(*(char),*(char),int,int,int,char,int))
,	O
compress_on	int
,	O
uncompressed_len	int
,	O
compressed_len	int
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
function_header	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
","	*(char)
"(char*)NULL\n"	*(char)
"}, /* AA */ \n"	*(char)
)	O
;	O
start_func	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
start_func	int
&&	O
*	O
line	*(char)
!=	O
'}'	O
)	O
{	O
convert_line	(*(struct(*(char),*(char),int,int,int,char,int)),*(char),int)->(void)
(	O
convline	*(struct(*(char),*(char),int,int,int,char,int))
,	O
line	*(char)
,	O
compress_on	int
)	O
;	O
}	O
else	O
{	O
;	O
}	O
line	*(char)
=	O
get_next_line	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
flp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"{\n"	*(char)
"(char*)NULL,\n"	*(char)
"(char*)NULL,\n"	*(char)
"(char*)NULL,\n"	*(char)
"(char*)NULL\n"	*(char)
"}\n"	*(char)
"};\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
retval	int
)	O
;	O
}	O
