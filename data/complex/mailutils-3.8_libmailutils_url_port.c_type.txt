int	O
mu_url_get_port	(*(struct),*(int))->(int)
(	O
const	O
mu_url_t	*(struct)
url	*(struct)
,	O
unsigned	O
*	O
pport	*(int)
)	O
{	O
if	O
(	O
url	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
url	*(struct)
->	O
_get_port	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(int))->(int))
)	O
return	O
url	*(struct)
->	O
_get_port	*((*(struct(int,*(char),*(char),*(char),*(struct`),*(char),*(char),short,*(char),*(char),*(*`),int,*(*`),int,*(void),*((*`)->(void)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`,*`)->(int)))),*(int))->(int))
(	O
url	*(struct)
,	O
pport	*(int)
)	O
;	O
*	O
pport	*(int)
=	O
url	*(struct)
->	O
port	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_url_is_same_port	(*(struct),*(struct))->(int)
(	O
mu_url_t	*(struct)
url1	*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int))))
,	O
mu_url_t	*(struct)
url2	*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int))))
)	O
{	O
unsigned	O
p1	int
=	O
0	int
,	O
p2	int
=	O
0	int
;	O
mu_url_get_port	(*(struct),*(int))->(int)
(	O
url1	*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int))))
,	O
&	O
p1	int
)	O
;	O
mu_url_get_port	(*(struct),*(int))->(int)
(	O
url2	*(struct(int,*(char),*(char),*(char),*(struct),*(char),*(char),short,*(char),*(char),*(*(char)),int,*(*(char)),int,*(void),*((*(struct`))->(void)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(int))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(*`))->(int))))
,	O
&	O
p2	int
)	O
;	O
return	O
(	O
p1	int
==	O
p2	int
)	O
;	O
}	O
