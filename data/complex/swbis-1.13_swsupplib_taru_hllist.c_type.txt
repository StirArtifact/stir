static	O
void	O
free_entry	(*(struct(*(char),long,long,long,long)))->(void)
(	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
en	*(struct(*(char),long,long,long,long))
)	O
{	O
if	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
path_	*(char)
)	O
swbis_free	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
path_	*(char)
)	O
;	O
}	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist_open	()->(*(struct(int,int,*(struct(*`,int,int,long,int)))))
(	O
)	O
{	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
=	O
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
)	O
)	O
;	O
HLLIST_E_DEBUG	O
(	O
"Entering"	*(char)
)	O
;	O
if	O
(	O
!	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
return	O
NULL	O
;	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
8	int
)	O
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
,	O
NULL	O
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Leaving %p"	*(char)
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
;	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_find_	int
=	O
0	int
;	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_add_	int
=	O
0	int
;	O
return	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
;	O
}	O
void	O
hllist_close	(*(struct(int,int,*(struct(*`,int,int,long,int)))))->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
en	*(struct(*(char),long,long,long,long))
;	O
HLLIST_E_DEBUG	O
(	O
"Entering"	*(char)
)	O
;	O
while	O
(	O
(	O
en	*(struct(*(char),long,long,long,long))
=	O
(	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
free_entry	(*(struct(*(char),long,long,long,long)))->(void)
(	O
en	*(struct(*(char),long,long,long,long))
)	O
;	O
}	O
cplob_close	(*(struct(*(*(char)),int,int,long,int)))->(void)
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
free	(*(void))->(void)
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
;	O
}	O
void	O
hllist_add_record	(*(struct(int,int,*(struct(*`,int,int,long,int)))),*(char),long,long)->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
char	O
*	O
path	*(char)
,	O
dev_t	long
dev	long
,	O
ino_t	long
ino	long
)	O
{	O
HLLIST_E_DEBUG	O
(	O
"Entering"	*(char)
)	O
;	O
if	O
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_add_	int
)	O
return	O
;	O
hllist_add_vrecord	(*(struct(int,int,*(struct(*`,int,int,long,int)))),*(char),long,long,long,long)->(void)
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
path	*(char)
,	O
dev	long
,	O
ino	long
,	O
0	int
,	O
0	int
)	O
;	O
HLLIST_E_DEBUG	O
(	O
"Leaving"	*(char)
)	O
;	O
}	O
void	O
hllist_add_vrecord	(*(struct(int,int,*(struct(*`,int,int,long,int)))),*(char),long,long,long,long)->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
char	O
*	O
path	*(char)
,	O
dev_t	long
dev	long
,	O
ino_t	long
ino	long
,	O
dev_t	long
v_dev	long
,	O
ino_t	long
v_ino	long
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
lob	*(struct(*(*(char)),int,int,long,int))
=	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
;	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
en	*(struct(*(char),long,long,long,long))
=	O
(	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
)	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
hllist_entry	struct(*(char),long,long,long,long)
)	O
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Entering %p"	*(char)
,	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Adding dev=%d"	*(char)
,	O
(	O
int	O
)	O
dev	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Adding ino=%d"	*(char)
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Adding path=[%s]"	*(char)
,	O
path	*(char)
)	O
;	O
if	O
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_add_	int
)	O
return	O
;	O
en	*(struct(*(char),long,long,long,long))
->	O
path_	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
path	*(char)
)	O
;	O
en	*(struct(*(char),long,long,long,long))
->	O
dev_	long
=	O
dev	long
;	O
en	*(struct(*(char),long,long,long,long))
->	O
ino_	long
=	O
ino	long
;	O
en	*(struct(*(char),long,long,long,long))
->	O
v_dev_	long
=	O
v_dev	long
;	O
en	*(struct(*(char),long,long,long,long))
->	O
v_ino_	long
=	O
v_ino	long
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
,	O
cplob_get_nused	(*(struct(*(*(char)),int,int,long,int)))->(int)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
)	O
-	O
1	int
,	O
(	O
char	O
*	O
)	O
en	*(struct(*(char),long,long,long,long))
)	O
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
,	O
cplob_get_nused	(*(struct(*(*(char)),int,int,long,int)))->(int)
(	O
lob	*(struct(*(*(char)),int,int,long,int))
)	O
,	O
NULL	O
)	O
;	O
HLLIST_E_DEBUG	O
(	O
"Leaving"	*(char)
)	O
;	O
}	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
hllist_find_file_entry	(*(struct(int,int,*(struct(*`,int,int,long,int)))),long,long,int,*(int))->(*(struct(*(char),long,long,long,long)))
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
dev_t	long
dev	long
,	O
ino_t	long
ino	long
,	O
int	O
occurance	int
,	O
int	O
*	O
nfound	*(int)
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
en	*(struct(*(char),long,long,long,long))
;	O
HLLIST_E_DEBUG2	O
(	O
"Entering %p"	*(char)
,	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
;	O
if	O
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_find_	int
)	O
{	O
HLLIST_E_DEBUG	O
(	O
"Leaving because disabled, returning NULL"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
HLLIST_E_DEBUG2	O
(	O
"Looking for dev=%d"	*(char)
,	O
(	O
int	O
)	O
dev	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Looking for ino=%d"	*(char)
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Looking for occurance=%d"	*(char)
,	O
(	O
int	O
)	O
occurance	int
)	O
;	O
while	O
(	O
(	O
en	*(struct(*(char),long,long,long,long))
=	O
(	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
HLLIST_E_DEBUG2	O
(	O
"Entry BEGIN Index=%d"	*(char)
,	O
i	int
-	O
1	int
)	O
;	O
HLLIST_E_DEBUG3	O
(	O
"Entry: dev=%d ino=%d"	*(char)
,	O
(	O
int	O
)	O
dev	long
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Entry: path=%s"	*(char)
,	O
en	*(struct(*(char),long,long,long,long))
->	O
path_	*(char)
)	O
;	O
HLLIST_E_DEBUG2	O
(	O
"Entry END Index=%d"	*(char)
,	O
i	int
-	O
1	int
)	O
;	O
if	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
ino_	long
==	O
ino	long
&&	O
en	*(struct(*(char),long,long,long,long))
->	O
dev_	long
==	O
dev	long
)	O
{	O
(	O
*	O
nfound	*(int)
)	O
++	O
;	O
if	O
(	O
occurance	int
>	O
0	int
&&	O
(	O
*	O
nfound	*(int)
)	O
==	O
occurance	int
)	O
{	O
HLLIST_E_DEBUG3	O
(	O
"Found dev=%d ino=%d"	*(char)
,	O
(	O
int	O
)	O
dev	long
,	O
(	O
int	O
)	O
ino	long
)	O
;	O
return	O
en	*(struct(*(char),long,long,long,long))
;	O
}	O
}	O
}	O
HLLIST_E_DEBUG	O
(	O
"Leaving having not found any, returning NULL"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
void	O
hllist_show_to_file	(*(struct(int,int,*(struct(*`,int,int,long,int)))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
en	*(struct(*(char),long,long,long,long))
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: hllist_show_to_file BEGIN\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
;	O
while	O
(	O
(	O
en	*(struct(*(char),long,long,long,long))
=	O
(	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: Entry %d: BEGIN\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
i	int
-	O
1	int
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: Entry %d: dev=%d ino=%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
i	int
-	O
1	int
,	O
(	O
int	O
)	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
dev_	long
)	O
,	O
(	O
int	O
)	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
ino_	long
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: Entry %d: v_dev=%d v_ino=%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
i	int
-	O
1	int
,	O
(	O
int	O
)	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
v_dev_	long
)	O
,	O
(	O
int	O
)	O
(	O
en	*(struct(*(char),long,long,long,long))
->	O
v_ino_	long
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: Entry %d: path=[%s]\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
i	int
-	O
1	int
,	O
en	*(struct(*(char),long,long,long,long))
->	O
path_	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: Entry %d: END\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
,	O
i	int
-	O
1	int
)	O
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: addr=%p: hllist_show_to_file END\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
void	O
*	O
)	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
;	O
}	O
void	O
hllist_disable_add	(*(struct(int,int,*(struct(*`,int,int,long,int)))))->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
{	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_add_	int
=	O
1	int
;	O
}	O
void	O
hllist_disable_find	(*(struct(int,int,*(struct(*`,int,int,long,int)))))->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
{	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_find_	int
=	O
1	int
;	O
}	O
void	O
hllist_clear_entries_and_disable	(*(struct(int,int,*(struct(*`,int,int,long,int)))))->(void)
(	O
HLLIST	struct(int,int,*(struct(*(*(char)),int,int,long,int)))
*	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
)	O
{	O
int	O
i	int
=	O
0	int
;	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
en	*(struct(*(char),long,long,long,long))
;	O
HLLIST_E_DEBUG	O
(	O
"Entering"	*(char)
)	O
;	O
while	O
(	O
(	O
en	*(struct(*(char),long,long,long,long))
=	O
(	O
hllist_entry	struct(*(char),long,long,long,long)
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
++	O
)	O
)	O
)	O
{	O
free_entry	(*(struct(*(char),long,long,long,long)))->(void)
(	O
en	*(struct(*(char),long,long,long,long))
)	O
;	O
}	O
cplob_close	(*(struct(*(*(char)),int,int,long,int)))->(void)
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
=	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
8	int
)	O
;	O
cplob_additem	(*(struct(*(*(char)),int,int,long,int)),int,*(char))->(void)
(	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
list_	*(struct(*(*(char)),int,int,long,int))
,	O
0	int
,	O
NULL	O
)	O
;	O
hllist	*(struct(int,int,*(struct(*(*`),int,int,long,int))))
->	O
disable_find_	int
=	O
1	int
;	O
}	O
