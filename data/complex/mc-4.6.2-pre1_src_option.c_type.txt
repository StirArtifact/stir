static	O
Dlg_head	struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct),*((*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`))))))
*	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
;	O
static	O
int	O
first_width	int
,	O
second_width	int
;	O
static	O
struct	O
{	O
const	O
char	O
*	O
text	*(char)
;	O
int	O
*	O
variable	*(char)
;	O
void	O
(	O
*	O
toggle_function	*(()->(void))
)	O
(	O
void	O
)	O
;	O
WCheck	struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*((*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int))),*(void))->(int)),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))))),int,*(char),int,int)
*	O
widget	*(struct)
;	O
}	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
]	O
=	O
{	O
{	O
N_	O
(	O
"safe de&Lete"	*(char)
)	O
,	O
&	O
safe_delete	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"cd follows lin&Ks"	*(char)
)	O
,	O
&	O
cd_symlinks	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"L&ynx-like motion"	*(char)
)	O
,	O
&	O
navigate_with_arrows	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"rotatin&G dash"	*(char)
)	O
,	O
&	O
nice_rotating_dash	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"co&Mplete: show all"	*(char)
)	O
,	O
&	O
show_all_if_ambiguous	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"&Use internal view"	*(char)
)	O
,	O
&	O
use_internal_view	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"use internal ed&It"	*(char)
)	O
,	O
&	O
use_internal_edit	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"auto m&Enus"	*(char)
)	O
,	O
&	O
auto_menu	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"&Auto save setup"	*(char)
)	O
,	O
&	O
auto_save_setup	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"shell &Patterns"	*(char)
)	O
,	O
&	O
easy_patterns	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"Compute &Totals"	*(char)
)	O
,	O
&	O
file_op_compute_totals	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"&Verbose operation"	*(char)
)	O
,	O
&	O
verbose	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"&Fast dir reload"	*(char)
)	O
,	O
&	O
fast_reload	int
,	O
toggle_fast_reload	()->(void)
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"mi&X all files"	*(char)
)	O
,	O
&	O
mix_all_files	int
,	O
toggle_mix_all_files	()->(void)
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"&Drop down menus"	*(char)
)	O
,	O
&	O
drop_menus	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"ma&Rk moves down"	*(char)
)	O
,	O
&	O
mark_moves_down	int
,	O
TOGGLE_VARIABLE	int
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"show &Hidden files"	*(char)
)	O
,	O
&	O
show_dot_files	int
,	O
toggle_show_hidden	()->(void)
,	O
0	int
}	O
,	O
{	O
N_	O
(	O
"show &Backup files"	*(char)
)	O
,	O
&	O
show_backups	int
,	O
toggle_show_backup	()->(void)
,	O
0	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
}	O
;	O
static	O
WRadio	struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*((*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*(struct(int,int,int,enum(int,int,int,int,int,int,int,int,int))),*(void))->(int)),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))))),int,int,int,int,*(*(char)))
*	O
pause_radio	*(struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))),int,int,int,int,*(*(char))))
;	O
static	O
const	O
char	O
*	O
pause_options	array(*(char))
[	O
3	int
]	O
=	O
{	O
N_	O
(	O
"&Never"	*(char)
)	O
,	O
N_	O
(	O
"on dumb &Terminals"	*(char)
)	O
,	O
N_	O
(	O
"Alwa&ys"	*(char)
)	O
}	O
;	O
static	O
void	O
init_configure	()->(void)
(	O
void	O
)	O
{	O
int	O
i	array(int)
;	O
static	O
int	O
i18n_config_flag	int
=	O
0	int
;	O
static	O
int	O
b1	int
,	O
b2	int
,	O
b3	int
;	O
const	O
char	O
*	O
ok_button	*(char)
=	O
_	O
(	O
"&OK"	*(char)
)	O
;	O
const	O
char	O
*	O
cancel_button	*(char)
=	O
_	O
(	O
"&Cancel"	*(char)
)	O
;	O
const	O
char	O
*	O
save_button	*(char)
=	O
_	O
(	O
"&Save"	*(char)
)	O
;	O
static	O
const	O
char	O
*	O
title1	*(char)
,	O
*	O
title2	*(char)
,	O
*	O
title3	*(char)
;	O
if	O
(	O
!	O
i18n_config_flag	int
)	O
{	O
register	O
int	O
l1	int
;	O
title1	*(char)
=	O
_	O
(	O
" Panel options "	*(char)
)	O
;	O
title2	*(char)
=	O
_	O
(	O
" Pause after run... "	*(char)
)	O
;	O
title3	*(char)
=	O
_	O
(	O
" Other options "	*(char)
)	O
;	O
first_width	int
=	O
strlen	(*(char))->(long)
(	O
title1	*(char)
)	O
+	O
1	int
;	O
second_width	int
=	O
strlen	(*(char))->(long)
(	O
title3	*(char)
)	O
+	O
1	int
;	O
for	O
(	O
i	array(int)
=	O
0	int
;	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
text	*(char)
;	O
i	array(int)
++	O
)	O
{	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
text	*(char)
=	O
_	O
(	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
text	*(char)
)	O
;	O
l1	int
=	O
strlen	(*(char))->(long)
(	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
text	*(char)
)	O
+	O
7	int
;	O
if	O
(	O
i	array(int)
>=	O
OTHER_OPTIONS	int
)	O
{	O
if	O
(	O
l1	int
>	O
first_width	int
)	O
first_width	int
=	O
l1	int
;	O
}	O
else	O
{	O
if	O
(	O
l1	int
>	O
second_width	int
)	O
second_width	int
=	O
l1	int
;	O
}	O
}	O
i	array(int)
=	O
PAUSE_OPTIONS	O
;	O
while	O
(	O
i	array(int)
--	O
)	O
{	O
pause_options	array(*(char))
[	O
i	array(int)
]	O
=	O
_	O
(	O
pause_options	array(*(char))
[	O
i	array(int)
]	O
)	O
;	O
l1	int
=	O
strlen	(*(char))->(long)
(	O
pause_options	array(*(char))
[	O
i	array(int)
]	O
)	O
+	O
7	int
;	O
if	O
(	O
l1	int
>	O
first_width	int
)	O
first_width	int
=	O
l1	int
;	O
}	O
l1	int
=	O
strlen	(*(char))->(long)
(	O
title2	*(char)
)	O
+	O
1	int
;	O
if	O
(	O
l1	int
>	O
first_width	int
)	O
first_width	int
=	O
l1	int
;	O
l1	int
=	O
11	int
+	O
strlen	(*(char))->(long)
(	O
ok_button	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
save_button	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
cancel_button	*(char)
)	O
;	O
i	array(int)
=	O
(	O
first_width	int
+	O
second_width	int
-	O
l1	int
)	O
/	O
4	int
;	O
b1	int
=	O
5	int
+	O
i	array(int)
;	O
b2	int
=	O
b1	int
+	O
strlen	(*(char))->(long)
(	O
ok_button	*(char)
)	O
+	O
i	array(int)
+	O
6	int
;	O
b3	int
=	O
b2	int
+	O
strlen	(*(char))->(long)
(	O
save_button	*(char)
)	O
+	O
i	array(int)
+	O
4	int
;	O
i18n_config_flag	int
=	O
1	int
;	O
}	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
=	O
create_dlg	(int,int,int,int,*(int),*((*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(char),*(char),int)->(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))))
(	O
0	int
,	O
0	int
,	O
DLG_Y	O
,	O
first_width	int
+	O
second_width	int
+	O
2	int
*	O
X_MARGIN	int
+	O
X_PANE_GAP	int
,	O
dialog_colors	array(int)
,	O
NULL	O
,	O
"[Configuration]"	*(char)
,	O
_	O
(	O
"Configure options"	*(char)
)	O
,	O
DLG_CENTER	O
|	O
DLG_REVERSE	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
groupbox_new	(int,int,int,int,*(char))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),*(char))))
(	O
PX	O
,	O
PY	int
,	O
first_width	int
,	O
PANEL_OPTIONS	int
+	O
2	int
,	O
title1	*(char)
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
groupbox_new	(int,int,int,int,*(char))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),*(char))))
(	O
RX	O
,	O
RY	O
,	O
first_width	int
,	O
PAUSE_OPTIONS	O
+	O
2	int
,	O
title2	*(char)
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
groupbox_new	(int,int,int,int,*(char))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),*(char))))
(	O
OX	O
,	O
OY	O
,	O
second_width	int
,	O
OTHER_OPTIONS	int
+	O
2	int
,	O
title3	*(char)
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
button_new	(int,int,int,int,*(char),*((int)->(int)))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,int,int,*(char),int,int,*((int)->(int)))))
(	O
BY	O
,	O
b3	int
,	O
B_CANCEL	int
,	O
NORMAL_BUTTON	int
,	O
cancel_button	*(char)
,	O
0	int
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
button_new	(int,int,int,int,*(char),*((int)->(int)))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,int,int,*(char),int,int,*((int)->(int)))))
(	O
BY	O
,	O
b2	int
,	O
B_EXIT	int
,	O
NORMAL_BUTTON	int
,	O
save_button	*(char)
,	O
0	int
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
button_new	(int,int,int,int,*(char),*((int)->(int)))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,int,int,*(char),int,int,*((int)->(int)))))
(	O
BY	O
,	O
b1	int
,	O
B_ENTER	int
,	O
DEFPUSH_BUTTON	int
,	O
ok_button	*(char)
,	O
0	int
)	O
)	O
;	O
for	O
(	O
i	array(int)
=	O
0	int
;	O
i	array(int)
<	O
OTHER_OPTIONS	int
;	O
i	array(int)
++	O
)	O
{	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
widget	*(struct)
=	O
check_new	(int,int,int,*(char))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int)))
(	O
OY	O
+	O
(	O
OTHER_OPTIONS	int
-	O
i	array(int)
)	O
,	O
OX	O
+	O
2	int
,	O
XTRACT	O
(	O
i	array(int)
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
widget	*(struct)
)	O
;	O
}	O
pause_radio	*(struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))),int,int,int,int,*(*(char))))
=	O
radio_new	(int,int,int,*(*(char)))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,int,int,int,*(*(char)))))
(	O
RY	O
+	O
1	int
,	O
RX	O
+	O
2	int
,	O
3	int
,	O
pause_options	array(*(char))
)	O
;	O
pause_radio	*(struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))),int,int,int,int,*(*(char))))
->	O
sel	int
=	O
pause_after_run	int
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
pause_radio	*(struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))),int,int,int,int,*(*(char))))
)	O
;	O
for	O
(	O
i	array(int)
=	O
0	int
;	O
i	array(int)
<	O
PANEL_OPTIONS	int
;	O
i	array(int)
++	O
)	O
{	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
+	O
OTHER_OPTIONS	int
]	O
.	O
widget	*(struct)
=	O
check_new	(int,int,int,*(char))->(*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int)))
(	O
PY	int
+	O
(	O
PANEL_OPTIONS	int
-	O
i	array(int)
)	O
,	O
PX	O
+	O
2	int
,	O
XTRACT	O
(	O
i	array(int)
+	O
OTHER_OPTIONS	int
)	O
)	O
;	O
add_widget	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))),*(void))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
,	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
+	O
OTHER_OPTIONS	int
]	O
.	O
widget	*(struct)
)	O
;	O
}	O
}	O
void	O
configure_box	()->(void)
(	O
void	O
)	O
{	O
int	O
result	long
,	O
i	array(int)
;	O
init_configure	()->(void)
(	O
)	O
;	O
run_dlg	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))))->(int)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
)	O
;	O
result	long
=	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
->	O
ret_value	int
;	O
if	O
(	O
result	long
==	O
B_ENTER	int
||	O
result	long
==	O
B_EXIT	int
)	O
{	O
for	O
(	O
i	array(int)
=	O
0	int
;	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
text	*(char)
;	O
i	array(int)
++	O
)	O
if	O
(	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
widget	*(struct)
->	O
state	*(int)
&	O
C_CHANGE	int
)	O
{	O
if	O
(	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
toggle_function	*(()->(void))
)	O
(	O
*	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
toggle_function	*(()->(void))
)	O
(	O
)	O
;	O
else	O
*	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
variable	*(char)
=	O
!	O
(	O
*	O
check_options	array(struct(*(char),*(int),*(()->(void)),*(struct(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`)),int,*(char),int,int))))
[	O
i	array(int)
]	O
.	O
variable	*(char)
)	O
;	O
}	O
pause_after_run	int
=	O
pause_radio	*(struct(struct(int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`))),int,int,int,int,*(*(char))))
->	O
sel	int
;	O
}	O
if	O
(	O
result	long
==	O
B_EXIT	int
)	O
{	O
save_configure	()->(void)
(	O
)	O
;	O
sync_profiles	()->(void)
(	O
)	O
;	O
}	O
destroy_dlg	(*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*`,*`,*`,*`,*`)),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*`,*`,*`,int,int,int,int,int,int,int,int,int,*`,*`,*`)))))->(void)
(	O
conf_dlg	*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,int,*(struct`),*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*((*`,*`)->(int)),*(struct`))),*((*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct(int,*(char),*(int),*(char),int,int,int,int,int,int,int,int,int,*(struct`),*((*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int),int)->(enum(int,int))),*(struct`)))))
)	O
;	O
}	O
