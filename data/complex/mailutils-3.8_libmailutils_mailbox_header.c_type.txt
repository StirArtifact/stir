static	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
mu_hdrent_nth	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
int	O
n	*(long)
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
p	*(char)
;	O
p	*(char)
=	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
if	O
(	O
n	*(long)
--	O
==	O
1	int
)	O
break	O
;	O
return	O
p	*(char)
;	O
}	O
static	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
mu_hdrent_find	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
pos	long
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
;	O
if	O
(	O
pos	long
>	O
0	int
)	O
{	O
for	O
(	O
p	*(char)
=	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
p	*(char)
;	O
p	*(char)
=	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
if	O
(	O
(	O
!	O
name	*(char)
||	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
MU_HDRENT_NAME	O
(	O
hdr	*(struct)
,	O
p	*(char)
)	O
,	O
name	*(char)
)	O
==	O
0	int
)	O
&&	O
pos	long
--	O
==	O
1	int
)	O
break	O
;	O
}	O
else	O
if	O
(	O
pos	long
<	O
0	int
)	O
{	O
for	O
(	O
p	*(char)
=	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
p	*(char)
;	O
p	*(char)
=	O
p	*(char)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
if	O
(	O
(	O
!	O
name	*(char)
||	O
mu_c_strcasecmp	(*(char),*(char))->(int)
(	O
MU_HDRENT_NAME	O
(	O
hdr	*(struct)
,	O
p	*(char)
)	O
,	O
name	*(char)
)	O
==	O
0	int
)	O
&&	O
++	O
pos	long
==	O
0	int
)	O
break	O
;	O
}	O
else	O
p	*(char)
=	O
NULL	O
;	O
return	O
p	*(char)
;	O
}	O
static	O
int	O
mu_hdrent_find_stream_pos	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),long,*(*(struct(*(struct`),*(struct`),long,long,long,long,long))),*(long))->(int)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
mu_off_t	long
pos	long
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
*	O
pent	*(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
,	O
size_t	long
*	O
poff	*(long)
)	O
{	O
mu_off_t	long
x	long
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
x	long
=	O
0	int
;	O
p	*(char)
;	O
p	*(char)
=	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
size_t	long
strsize	long
=	O
MU_STR_SIZE	O
(	O
p	*(char)
->	O
nlen	long
,	O
p	*(char)
->	O
vlen	long
)	O
;	O
if	O
(	O
x	long
<=	O
pos	long
&&	O
pos	long
<	O
x	long
+	O
strsize	long
)	O
{	O
*	O
poff	*(long)
=	O
pos	long
-	O
x	long
;	O
*	O
pent	*(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
=	O
p	*(char)
;	O
return	O
0	int
;	O
}	O
x	long
+=	O
strsize	long
;	O
}	O
if	O
(	O
x	long
==	O
pos	long
&&	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
p	*(char)
=	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
*	O
pent	*(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
=	O
p	*(char)
;	O
*	O
poff	*(long)
=	O
MU_STR_SIZE	O
(	O
p	*(char)
->	O
nlen	long
,	O
p	*(char)
->	O
vlen	long
)	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
void	O
mu_hdrent_count	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(long),*(long),*(long))->(void)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
size_t	long
*	O
pcount	*(long)
,	O
size_t	long
*	O
psize	*(long)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
if	O
(	O
hdr	*(struct)
->	O
flags	int
&	O
HEADER_INVALIDATE	int
)	O
{	O
size_t	long
size	long
=	O
0	int
;	O
size_t	long
count	long
=	O
0	int
;	O
size_t	long
lines	long
=	O
0	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
p	*(char)
;	O
p	*(char)
=	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
count	long
++	O
;	O
size	long
+=	O
MU_STR_SIZE	O
(	O
p	*(char)
->	O
nlen	long
,	O
p	*(char)
->	O
vlen	long
)	O
;	O
lines	long
+=	O
p	*(char)
->	O
nlines	long
;	O
}	O
hdr	*(struct)
->	O
numhdr	long
=	O
count	long
;	O
hdr	*(struct)
->	O
numlines	long
=	O
lines	long
;	O
hdr	*(struct)
->	O
size	long
=	O
size	long
;	O
hdr	*(struct)
->	O
flags	int
&=	O
~	O
HEADER_INVALIDATE	int
;	O
}	O
*	O
pcount	*(long)
=	O
hdr	*(struct)
->	O
numhdr	long
;	O
*	O
psize	*(long)
=	O
hdr	*(struct)
->	O
size	long
;	O
*	O
plines	*(long)
=	O
hdr	*(struct)
->	O
numlines	long
;	O
}	O
static	O
void	O
mu_hdrent_remove	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
p	*(char)
)	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
else	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
p	*(char)
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
if	O
(	O
p	*(char)
)	O
p	*(char)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
else	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
}	O
static	O
void	O
mu_hdrent_prepend	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
=	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
NULL	O
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
p	*(char)
;	O
if	O
(	O
p	*(char)
)	O
p	*(char)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
else	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
}	O
static	O
void	O
mu_hdrent_append	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
=	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
NULL	O
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
p	*(char)
;	O
if	O
(	O
p	*(char)
)	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
else	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
}	O
static	O
int	O
mu_hdrent_insert	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),int,int)->(int)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
pos	long
,	O
int	O
before	int
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ref	*(char)
=	O
mu_hdrent_find	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
hdr	*(struct)
,	O
name	*(char)
,	O
pos	long
)	O
;	O
if	O
(	O
!	O
ref	*(char)
)	O
return	O
MU_ERR_NOENT	O
;	O
if	O
(	O
before	int
)	O
{	O
ref	*(char)
=	O
ref	*(char)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
!	O
ref	*(char)
)	O
{	O
mu_hdrent_prepend	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
hdr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
return	O
0	int
;	O
}	O
}	O
p	*(char)
=	O
ref	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
if	O
(	O
!	O
p	*(char)
)	O
{	O
mu_hdrent_append	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
hdr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
return	O
0	int
;	O
}	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
p	*(char)
;	O
p	*(char)
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ref	*(char)
;	O
ref	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
return	O
0	int
;	O
}	O
static	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
const	O
char	O
*	O
name	*(char)
,	O
size_t	long
nsize	long
,	O
const	O
char	O
*	O
value	*(void)
,	O
size_t	long
vsize	long
)	O
{	O
size_t	long
strsize	long
;	O
size_t	long
sizeleft	long
;	O
const	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
NULL	O
;	O
}	O
strsize	long
=	O
MU_STR_SIZE	O
(	O
nsize	long
,	O
vsize	long
)	O
;	O
sizeleft	long
=	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_size	long
-	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
;	O
if	O
(	O
sizeleft	long
<	O
strsize	long
)	O
{	O
char	O
*	O
newp	*(char)
;	O
size_t	long
delta	long
=	O
(	O
strsize	long
-	O
sizeleft	long
+	O
SPOOLBLKSIZ	int
-	O
1	int
)	O
/	O
SPOOLBLKSIZ	int
;	O
delta	long
*=	O
SPOOLBLKSIZ	int
;	O
newp	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
,	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_size	long
+	O
delta	long
)	O
;	O
if	O
(	O
!	O
newp	*(char)
)	O
return	O
0	int
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
=	O
newp	*(char)
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_size	long
+=	O
delta	long
;	O
}	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
fn	*(char)
=	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
nlen	long
=	O
nsize	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
+	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
,	O
name	*(char)
,	O
nsize	long
)	O
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
+=	O
nsize	long
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
[	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
++	O
]	O
=	O
0	int
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
[	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
++	O
]	O
=	O
' '	O
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
fv	*(char)
=	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
vlen	long
=	O
vsize	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
+	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
,	O
value	*(void)
,	O
vsize	long
)	O
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
+=	O
vsize	long
;	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool	*(char)
[	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
->	O
spool_used	long
++	O
]	O
=	O
0	int
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
nlines	long
=	O
1	int
;	O
for	O
(	O
p	*(char)
=	O
value	*(void)
;	O
p	*(char)
<	O
value	*(void)
+	O
vsize	long
;	O
p	*(char)
++	O
)	O
if	O
(	O
*	O
p	*(char)
==	O
'\n'	O
)	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
nlines	long
++	O
;	O
return	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
}	O
static	O
void	O
mu_hdrent_free_list	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(void)
(	O
struct	O
_mu_header	struct(*(char),long,long,*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char))))),*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))
*	O
hdr	*(struct)
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
p	*(char)
;	O
for	O
(	O
p	*(char)
=	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
p	*(char)
;	O
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
=	O
p	*(char)
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
free	(*(void))->(void)
(	O
p	*(char)
)	O
;	O
p	*(char)
=	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
;	O
}	O
hdr	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
hdr	*(struct)
->	O
tail	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
NULL	O
;	O
hdr	*(struct)
->	O
spool_used	long
=	O
0	int
;	O
}	O
static	O
int	O
header_parse	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
blurb	*(char)
,	O
int	O
len	long
)	O
{	O
const	O
char	O
*	O
header_end	*(char)
;	O
const	O
char	O
*	O
header_start	*(char)
;	O
const	O
char	O
*	O
header_start2	*(char)
;	O
if	O
(	O
blurb	*(char)
==	O
NULL	O
)	O
return	O
0	int
;	O
header	*(struct)
->	O
flags	int
|=	O
HEADER_INVALIDATE	int
;	O
mu_hdrent_free_list	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(void)
(	O
header	*(struct)
)	O
;	O
for	O
(	O
header_start	*(char)
=	O
blurb	*(char)
;	O
len	long
>	O
0	int
;	O
header_start	*(char)
=	O
++	O
header_end	*(char)
)	O
{	O
const	O
char	O
*	O
fn	*(char)
,	O
*	O
fn_end	*(char)
,	O
*	O
fv	*(char)
,	O
*	O
fv_end	*(char)
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
header_start	*(char)
[	O
0	int
]	O
==	O
' '	O
||	O
header_start	*(char)
[	O
0	int
]	O
==	O
'\t'	O
||	O
header_start	*(char)
[	O
0	int
]	O
==	O
'\n'	O
)	O
break	O
;	O
for	O
(	O
header_start2	*(char)
=	O
header_start	*(char)
;	O
len	long
;	O
header_start2	*(char)
=	O
++	O
header_end	*(char)
)	O
{	O
header_end	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
header_start2	*(char)
,	O
'\n'	O
,	O
len	long
)	O
;	O
if	O
(	O
header_end	*(char)
==	O
NULL	O
)	O
{	O
header_end	*(char)
=	O
header_start2	*(char)
+	O
len	long
;	O
len	long
=	O
0	int
;	O
break	O
;	O
}	O
else	O
{	O
len	long
-=	O
(	O
header_end	*(char)
-	O
header_start2	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
!	O
len	long
||	O
(	O
header_end	*(char)
[	O
1	int
]	O
!=	O
' '	O
&&	O
header_end	*(char)
[	O
1	int
]	O
!=	O
'\t'	O
)	O
)	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
header_end	*(char)
-	O
header_start	*(char)
>=	O
5	int
)	O
&&	O
strncmp	(*(char),*(char),long)->(int)
(	O
header_start	*(char)
,	O
"From "	*(char)
,	O
5	int
)	O
==	O
0	int
)	O
{	O
fn	*(char)
=	O
header_start	*(char)
;	O
fn_end	*(char)
=	O
header_start	*(char)
+	O
5	int
;	O
fv	*(char)
=	O
header_start	*(char)
+	O
5	int
;	O
fv_end	*(char)
=	O
header_end	*(char)
;	O
}	O
else	O
{	O
char	O
*	O
colon	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
header_start	*(char)
,	O
':'	O
,	O
header_end	*(char)
-	O
header_start	*(char)
)	O
;	O
if	O
(	O
colon	*(char)
==	O
NULL	O
)	O
break	O
;	O
fn	*(char)
=	O
header_start	*(char)
;	O
fn_end	*(char)
=	O
colon	*(char)
;	O
while	O
(	O
ISLWSP	O
(	O
fn_end	*(char)
[	O
-	O
1	int
]	O
)	O
)	O
fn_end	*(char)
--	O
;	O
fv	*(char)
=	O
colon	*(char)
+	O
1	int
;	O
fv_end	*(char)
=	O
header_end	*(char)
;	O
while	O
(	O
ISLWSP	O
(	O
fv	*(char)
[	O
0	int
]	O
)	O
)	O
fv	*(char)
++	O
;	O
}	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
NULL	O
,	O
fn	*(char)
,	O
fn_end	*(char)
-	O
fn	*(char)
,	O
fv	*(char)
,	O
fv_end	*(char)
-	O
fv	*(char)
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
ENOMEM	int
;	O
mu_hdrent_append	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
)	O
{	O
int	O
status	int
;	O
size_t	long
blurb_len	long
=	O
0	int
;	O
char	O
*	O
blurb	*(char)
=	O
NULL	O
;	O
if	O
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
&&	O
header	*(struct)
->	O
flags	int
&	O
HEADER_STREAMMOD	int
)	O
{	O
mu_off_t	long
end	long
;	O
mu_header_invalidate	(*(struct))->(int)
(	O
header	*(struct)
)	O
;	O
status	int
=	O
mu_stream_size	(*(struct),*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
&	O
end	long
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
blurb_len	long
=	O
end	long
;	O
blurb	*(char)
=	O
malloc	(long)->(*(void))
(	O
blurb_len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
blurb	*(char)
)	O
return	O
ENOMEM	int
;	O
status	int
=	O
mu_stream_read	(*(struct),*(void),long,*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
blurb	*(char)
,	O
blurb_len	long
,	O
NULL	O
)	O
;	O
if	O
(	O
status	int
)	O
{	O
free	(*(void))->(void)
(	O
blurb	*(char)
)	O
;	O
return	O
status	int
;	O
}	O
status	int
=	O
header_parse	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(int)
(	O
header	*(struct)
,	O
blurb	*(char)
,	O
blurb_len	long
)	O
;	O
free	(*(void))->(void)
(	O
blurb	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
header	*(struct)
->	O
flags	int
&=	O
~	O
HEADER_STREAMMOD	int
;	O
return	O
status	int
;	O
}	O
if	O
(	O
header	*(struct)
->	O
spool_used	long
)	O
return	O
0	int
;	O
if	O
(	O
header	*(struct)
->	O
_fill	*((*(void),*(*(char)),*(long))->(int))
==	O
NULL	O
)	O
return	O
0	int
;	O
status	int
=	O
header	*(struct)
->	O
_fill	*((*(void),*(*(char)),*(long))->(int))
(	O
header	*(struct)
->	O
data	*(void)
,	O
&	O
blurb	*(char)
,	O
&	O
blurb_len	long
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
header_parse	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(int)
(	O
header	*(struct)
,	O
blurb	*(char)
,	O
blurb_len	long
)	O
;	O
free	(*(void))->(void)
(	O
blurb	*(char)
)	O
;	O
return	O
status	int
;	O
}	O
int	O
mu_header_create	(*(*(struct)),*(char),long)->(int)
(	O
mu_header_t	*(struct)
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
,	O
const	O
char	O
*	O
blurb	*(char)
,	O
size_t	long
len	long
)	O
{	O
mu_header_t	*(struct)
header	*(struct)
;	O
int	O
status	int
=	O
0	int
;	O
header	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
header	*(struct)
)	O
)	O
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
status	int
=	O
header_parse	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(int)
(	O
header	*(struct)
,	O
blurb	*(char)
,	O
len	long
)	O
;	O
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
=	O
header	*(struct)
;	O
return	O
status	int
;	O
}	O
void	O
mu_header_destroy	(*(*(struct)))->(void)
(	O
mu_header_t	*(struct)
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
)	O
{	O
if	O
(	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
&&	O
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
)	O
{	O
mu_header_t	*(struct)
header	*(struct)
=	O
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
)	O
;	O
mu_stream_destroy	(*(*(struct)))->(void)
(	O
&	O
header	*(struct)
->	O
stream	*(struct)
)	O
;	O
mu_hdrent_free_list	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(void)
(	O
header	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
header	*(struct)
->	O
spool	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
header	*(struct)
)	O
;	O
*	O
ph	*(struct(*(char),long,long,*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(struct),*((*(void),*(*`),*(long))->(int)),*(void)))
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_header_set_value	(*(struct),*(char),*(char),int)->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
fn	*(char)
,	O
const	O
char	O
*	O
fv	*(char)
,	O
int	O
replace	int
)	O
{	O
int	O
status	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
NULL	O
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
||	O
fn	*(char)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
fv	*(char)
==	O
NULL	O
&&	O
!	O
replace	int
)	O
return	O
EINVAL	int
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_find	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
fn	*(char)
,	O
1	int
)	O
;	O
if	O
(	O
replace	int
)	O
{	O
if	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
if	O
(	O
fv	*(char)
==	O
NULL	O
)	O
{	O
mu_hdrent_remove	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
free	(*(void))->(void)
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
return	O
0	int
;	O
}	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
fn	*(char)
,	O
strlen	(*(char))->(long)
(	O
fn	*(char)
)	O
,	O
fv	*(char)
,	O
strlen	(*(char))->(long)
(	O
fv	*(char)
)	O
)	O
;	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
fv	*(char)
==	O
NULL	O
)	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
return	O
MU_ERR_EXISTS	O
;	O
}	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
NULL	O
,	O
fn	*(char)
,	O
strlen	(*(char))->(long)
(	O
fn	*(char)
)	O
,	O
fv	*(char)
,	O
strlen	(*(char))->(long)
(	O
fv	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
ENOMEM	int
;	O
mu_hdrent_append	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_remove	(*(struct),*(char),int)->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
fn	*(char)
,	O
int	O
n	*(long)
)	O
{	O
int	O
status	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_find	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
fn	*(char)
,	O
n	*(long)
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
MU_ERR_NOENT	O
;	O
mu_iterator_delitem	(*(struct),*(void))->(void)
(	O
header	*(struct)
->	O
itr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
mu_hdrent_remove	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_append	(*(struct),*(char),*(char))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
fn	*(char)
,	O
const	O
char	O
*	O
fv	*(char)
)	O
{	O
int	O
status	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
||	O
fn	*(char)
==	O
NULL	O
||	O
fv	*(char)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
NULL	O
,	O
fn	*(char)
,	O
strlen	(*(char))->(long)
(	O
fn	*(char)
)	O
,	O
fv	*(char)
,	O
strlen	(*(char))->(long)
(	O
fv	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
ENOMEM	int
;	O
mu_hdrent_append	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_prepend	(*(struct),*(char),*(char))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
fn	*(char)
,	O
const	O
char	O
*	O
fv	*(char)
)	O
{	O
int	O
status	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
||	O
fn	*(char)
==	O
NULL	O
||	O
fv	*(char)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
NULL	O
,	O
fn	*(char)
,	O
strlen	(*(char))->(long)
(	O
fn	*(char)
)	O
,	O
fv	*(char)
,	O
strlen	(*(char))->(long)
(	O
fv	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
ENOMEM	int
;	O
mu_hdrent_prepend	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_insert	(*(struct),*(char),*(char),*(char),int,int)->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
fn	*(char)
,	O
const	O
char	O
*	O
fv	*(char)
,	O
const	O
char	O
*	O
ref	*(char)
,	O
int	O
n	*(long)
,	O
int	O
flags	int
)	O
{	O
int	O
status	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
||	O
fn	*(char)
==	O
NULL	O
||	O
fv	*(char)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
flags	int
&	O
MU_HEADER_REPLACE	int
)	O
{	O
if	O
(	O
!	O
ref	*(char)
)	O
ref	*(char)
=	O
fn	*(char)
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_find	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
ref	*(char)
,	O
n	*(long)
)	O
;	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
fn	*(char)
,	O
strlen	(*(char))->(long)
(	O
fn	*(char)
)	O
,	O
fv	*(char)
,	O
strlen	(*(char))->(long)
(	O
fv	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_create	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),long,*(char),long)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
NULL	O
,	O
fn	*(char)
,	O
strlen	(*(char))->(long)
(	O
fn	*(char)
)	O
,	O
fv	*(char)
,	O
strlen	(*(char))->(long)
(	O
fv	*(char)
)	O
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
ref	*(char)
)	O
return	O
mu_hdrent_insert	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)),*(char),int,int)->(int)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
ref	*(char)
,	O
n	*(long)
,	O
flags	int
&	O
MU_HEADER_BEFORE	int
)	O
;	O
else	O
mu_hdrent_prepend	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
}	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_clear	(*(struct))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
)	O
{	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_header_invalidate	(*(struct))->(int)
(	O
header	*(struct)
)	O
;	O
HEADER_SET_MODIFIED	O
(	O
header	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_sget_value_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
n	*(long)
,	O
const	O
char	O
*	O
*	O
pval	*(*(char))
)	O
{	O
int	O
status	int
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
||	O
name	*(char)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_find	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(char),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
name	*(char)
,	O
n	*(long)
)	O
;	O
if	O
(	O
!	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
return	O
MU_ERR_NOENT	O
;	O
if	O
(	O
pval	*(*(char))
)	O
*	O
pval	*(*(char))
=	O
MU_HDRENT_VALUE	O
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_aget_value_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
n	*(long)
,	O
char	O
*	O
*	O
pval	*(*(char))
)	O
{	O
const	O
char	O
*	O
s	*(char)
;	O
int	O
status	int
=	O
mu_header_sget_value_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
header	*(struct)
,	O
name	*(char)
,	O
n	*(long)
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
*	O
pval	*(*(char))
=	O
strdup	(*(char))->(*(char))
(	O
s	*(char)
)	O
;	O
if	O
(	O
!	O
*	O
pval	*(*(char))
)	O
status	int
=	O
ENOMEM	int
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_get_value_n	(*(struct),*(char),int,*(char),long,*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
n	*(long)
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pn	*(long)
)	O
{	O
const	O
char	O
*	O
s	*(char)
;	O
int	O
status	int
=	O
mu_header_sget_value_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
header	*(struct)
,	O
name	*(char)
,	O
n	*(long)
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
size_t	long
slen	long
=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
)	O
{	O
if	O
(	O
slen	long
>	O
buflen	long
)	O
slen	long
=	O
buflen	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
s	*(char)
,	O
slen	long
)	O
;	O
buffer	*(char)
[	O
slen	long
]	O
=	O
0	int
;	O
}	O
if	O
(	O
pn	*(long)
)	O
*	O
pn	*(long)
=	O
slen	long
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_get_value_unfold_n	(*(struct),*(char),int,*(char),long,*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
n	*(long)
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pn	*(long)
)	O
{	O
int	O
rc	int
=	O
mu_header_get_value_n	(*(struct),*(char),int,*(char),long,*(long))->(int)
(	O
header	*(struct)
,	O
name	*(char)
,	O
n	*(long)
,	O
buffer	*(char)
,	O
buflen	long
,	O
pn	*(long)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mu_string_unfold	(*(char),*(long))->(int)
(	O
buffer	*(char)
,	O
pn	*(long)
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_header_aget_value_unfold_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
n	*(long)
,	O
char	O
*	O
*	O
pvalue	*(*(char))
)	O
{	O
int	O
rc	int
=	O
mu_header_aget_value_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
header	*(struct)
,	O
name	*(char)
,	O
n	*(long)
,	O
pvalue	*(*(char))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mu_string_unfold	(*(char),*(long))->(int)
(	O
*	O
pvalue	*(*(char))
,	O
NULL	O
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_header_get_address_n	(*(struct),*(char),int,*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
n	*(long)
,	O
mu_address_t	*(struct)
*	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
const	O
char	O
*	O
value	*(void)
=	O
NULL	O
;	O
int	O
status	int
=	O
mu_header_sget_value_n	(*(struct),*(char),int,*(*(char)))->(int)
(	O
header	*(struct)
,	O
name	*(char)
,	O
n	*(long)
,	O
&	O
value	*(void)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
return	O
mu_address_create	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))),*(char))->(int)
(	O
addr	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
,	O
value	*(void)
)	O
;	O
}	O
int	O
mu_header_get_field_count	(*(struct),*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
*	O
pcount	*(long)
)	O
{	O
size_t	long
count	long
;	O
size_t	long
size	long
;	O
size_t	long
lines	long
;	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
mu_hdrent_count	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(long),*(long),*(long))->(void)
(	O
header	*(struct)
,	O
&	O
count	long
,	O
&	O
size	long
,	O
&	O
lines	long
)	O
;	O
if	O
(	O
pcount	*(long)
)	O
*	O
pcount	*(long)
=	O
count	long
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_get_itemptr	(*(struct),long,*(*(void)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
const	O
void	O
*	O
*	O
sptr	*(*(char))
)	O
{	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_nth	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
num	long
)	O
;	O
if	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
*	O
sptr	*(*(char))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
else	O
status	int
=	O
MU_ERR_NOENT	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_sget_field_name	(*(struct),long,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
const	O
char	O
*	O
*	O
sptr	*(*(char))
)	O
{	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_nth	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
num	long
)	O
;	O
if	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
*	O
sptr	*(*(char))
=	O
MU_HDRENT_NAME	O
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
else	O
status	int
=	O
MU_ERR_NOENT	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_get_field_name	(*(struct),long,*(char),long,*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pn	*(long)
)	O
{	O
const	O
char	O
*	O
s	*(char)
;	O
int	O
status	int
=	O
mu_header_sget_field_name	(*(struct),long,*(*(char)))->(int)
(	O
header	*(struct)
,	O
num	long
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
size_t	long
slen	long
=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
)	O
{	O
if	O
(	O
slen	long
>	O
buflen	long
)	O
slen	long
=	O
buflen	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
s	*(char)
,	O
slen	long
)	O
;	O
buffer	*(char)
[	O
slen	long
]	O
=	O
0	int
;	O
}	O
if	O
(	O
pn	*(long)
)	O
*	O
pn	*(long)
=	O
slen	long
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_aget_field_name	(*(struct),long,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
char	O
*	O
*	O
pvalue	*(*(char))
)	O
{	O
const	O
char	O
*	O
s	*(char)
;	O
int	O
status	int
=	O
mu_header_sget_field_name	(*(struct),long,*(*(char)))->(int)
(	O
header	*(struct)
,	O
num	long
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
*	O
pvalue	*(*(char))
=	O
strdup	(*(char))->(*(char))
(	O
s	*(char)
)	O
)	O
==	O
NULL	O
)	O
status	int
=	O
ENOMEM	int
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_sget_field_value	(*(struct),long,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
const	O
char	O
*	O
*	O
sptr	*(*(char))
)	O
{	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
mu_hdrent_nth	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),int)->(*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))
(	O
header	*(struct)
,	O
num	long
)	O
;	O
if	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
*	O
sptr	*(*(char))
=	O
MU_HDRENT_VALUE	O
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
else	O
status	int
=	O
MU_ERR_NOENT	O
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_get_field_value	(*(struct),long,*(char),long,*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pn	*(long)
)	O
{	O
const	O
char	O
*	O
s	*(char)
;	O
int	O
status	int
=	O
mu_header_sget_field_value	(*(struct),long,*(*(char)))->(int)
(	O
header	*(struct)
,	O
num	long
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
size_t	long
slen	long
=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
;	O
if	O
(	O
buffer	*(char)
)	O
{	O
if	O
(	O
slen	long
>	O
buflen	long
)	O
slen	long
=	O
buflen	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
s	*(char)
,	O
slen	long
)	O
;	O
buffer	*(char)
[	O
slen	long
]	O
=	O
0	int
;	O
}	O
if	O
(	O
pn	*(long)
)	O
*	O
pn	*(long)
=	O
slen	long
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_aget_field_value	(*(struct),long,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
char	O
*	O
*	O
pvalue	*(*(char))
)	O
{	O
const	O
char	O
*	O
s	*(char)
;	O
int	O
status	int
=	O
mu_header_sget_field_value	(*(struct),long,*(*(char)))->(int)
(	O
header	*(struct)
,	O
num	long
,	O
&	O
s	*(char)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
*	O
pvalue	*(*(char))
=	O
strdup	(*(char))->(*(char))
(	O
s	*(char)
)	O
)	O
==	O
NULL	O
)	O
status	int
=	O
ENOMEM	int
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_get_field_value_unfold	(*(struct),long,*(char),long,*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
char	O
*	O
buf	*(void)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
nwritten	*(long)
)	O
{	O
int	O
rc	int
=	O
mu_header_get_field_value	(*(struct),long,*(char),long,*(long))->(int)
(	O
header	*(struct)
,	O
num	long
,	O
buf	*(void)
,	O
buflen	long
,	O
nwritten	*(long)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mu_string_unfold	(*(char),*(long))->(int)
(	O
buf	*(void)
,	O
nwritten	*(long)
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_header_aget_field_value_unfold	(*(struct),long,*(*(char)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
num	long
,	O
char	O
*	O
*	O
pvalue	*(*(char))
)	O
{	O
int	O
rc	int
=	O
mu_header_aget_field_value	(*(struct),long,*(*(char)))->(int)
(	O
header	*(struct)
,	O
num	long
,	O
pvalue	*(*(char))
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mu_string_unfold	(*(char),*(long))->(int)
(	O
*	O
pvalue	*(*(char))
,	O
NULL	O
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_header_lines	(*(struct),*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
*	O
plines	*(long)
)	O
{	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
plines	*(long)
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
size_t	long
count	long
;	O
size_t	long
size	long
;	O
size_t	long
lines	long
;	O
mu_hdrent_count	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(long),*(long),*(long))->(void)
(	O
header	*(struct)
,	O
&	O
count	long
,	O
&	O
size	long
,	O
&	O
lines	long
)	O
;	O
*	O
plines	*(long)
=	O
lines	long
+	O
1	int
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_size	(*(struct),*(long))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
size_t	long
*	O
psize	*(long)
)	O
{	O
int	O
status	int
;	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
psize	*(long)
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
size_t	long
count	long
;	O
size_t	long
size	long
;	O
size_t	long
lines	long
;	O
mu_hdrent_count	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(long),*(long),*(long))->(void)
(	O
header	*(struct)
,	O
&	O
count	long
,	O
&	O
size	long
,	O
&	O
lines	long
)	O
;	O
*	O
psize	*(long)
=	O
size	long
+	O
1	int
;	O
}	O
return	O
status	int
;	O
}	O
int	O
mu_header_invalidate	(*(struct))->(int)
(	O
mu_header_t	*(struct)
hdr	*(struct)
)	O
{	O
if	O
(	O
hdr	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
mu_hdrent_free_list	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(void)
(	O
hdr	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
mu_hdrent_fixup	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
mu_header_t	*(struct)
hdr	*(struct)
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
char	O
*	O
s	*(char)
=	O
MU_HDRENT_NAME	O
(	O
hdr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
s	*(char)
[	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
nlen	long
]	O
=	O
':'	O
;	O
s	*(char)
=	O
MU_HDRENT_VALUE	O
(	O
hdr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
s	*(char)
[	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
vlen	long
]	O
=	O
'\n'	O
;	O
}	O
static	O
void	O
mu_hdrent_unroll_fixup	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
mu_header_t	*(struct)
hdr	*(struct)
,	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
{	O
char	O
*	O
s	*(char)
=	O
MU_HDRENT_NAME	O
(	O
hdr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
s	*(char)
[	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
nlen	long
]	O
=	O
0	int
;	O
s	*(char)
=	O
MU_HDRENT_VALUE	O
(	O
hdr	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
s	*(char)
[	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
vlen	long
]	O
=	O
0	int
;	O
}	O
int	O
header_seek	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
str	*(struct)
,	O
mu_off_t	long
off	long
,	O
mu_off_t	long
*	O
presult	*(*(char))
)	O
{	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
=	O
(	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
)	O
str	*(struct)
;	O
size_t	long
size	long
;	O
int	O
status	int
;	O
status	int
=	O
mu_header_size	(*(struct),*(long))->(int)
(	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
hdr	*(struct)
,	O
&	O
size	long
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
off	long
<	O
0	int
||	O
off	long
>	O
size	long
)	O
return	O
ESPIPE	int
;	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
=	O
off	long
;	O
*	O
presult	*(*(char))
=	O
off	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
header_read	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
is	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
char	O
*	O
buffer	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pnread	*(long)
)	O
{	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
=	O
(	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
)	O
is	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
;	O
mu_header_t	*(struct)
header	*(struct)
;	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
size_t	long
ent_off	long
;	O
int	O
status	int
;	O
size_t	long
nread	long
;	O
if	O
(	O
is	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
header	*(struct)
=	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
hdr	*(struct)
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
if	O
(	O
header	*(struct)
->	O
spool_size	long
==	O
0	int
)	O
{	O
size_t	long
len	long
=	O
0	int
;	O
if	O
(	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
==	O
0	int
&&	O
buflen	long
>	O
0	int
)	O
{	O
*	O
buffer	*(char)
=	O
'\n'	O
;	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
++	O
;	O
len	long
=	O
1	int
;	O
}	O
if	O
(	O
pnread	*(long)
)	O
*	O
pnread	*(long)
=	O
len	long
;	O
return	O
0	int
;	O
}	O
if	O
(	O
mu_hdrent_find_stream_pos	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),long,*(*(struct(*(struct`),*(struct`),long,long,long,long,long))),*(long))->(int)
(	O
header	*(struct)
,	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
,	O
&	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
,	O
&	O
ent_off	long
)	O
)	O
{	O
if	O
(	O
pnread	*(long)
)	O
*	O
pnread	*(long)
=	O
0	int
;	O
return	O
0	int
;	O
}	O
for	O
(	O
nread	long
=	O
0	int
;	O
nread	long
<	O
buflen	long
&&	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
{	O
size_t	long
rest	long
=	O
buflen	long
-	O
nread	long
;	O
size_t	long
strsize	long
=	O
MU_STR_SIZE	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
nlen	long
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
vlen	long
)	O
-	O
ent_off	long
;	O
if	O
(	O
rest	long
>	O
strsize	long
)	O
rest	long
=	O
strsize	long
;	O
mu_hdrent_fixup	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buffer	*(char)
+	O
nread	long
,	O
MU_HDRENT_NAME	O
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
+	O
ent_off	long
,	O
rest	long
)	O
;	O
mu_hdrent_unroll_fixup	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
nread	long
+=	O
rest	long
;	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
+=	O
rest	long
;	O
ent_off	long
=	O
0	int
;	O
}	O
if	O
(	O
pnread	*(long)
)	O
*	O
pnread	*(long)
=	O
nread	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
header_write	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)
(	O
mu_stream_t	*(struct)
os	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
const	O
char	O
*	O
buf	*(void)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
pnwrite	*(long)
)	O
{	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
=	O
(	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
)	O
os	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
;	O
mu_header_t	*(struct)
header	*(struct)
;	O
int	O
rc	int
;	O
if	O
(	O
os	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
header	*(struct)
=	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
hdr	*(struct)
;	O
if	O
(	O
!	O
(	O
header	*(struct)
->	O
flags	int
&	O
HEADER_STREAMMOD	int
)	O
)	O
{	O
struct	O
mu_hdrent	struct(*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long)),long,long,long,long,long)
*	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
rc	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
!	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
)	O
{	O
rc	int
=	O
mu_memory_stream_create	(*(*(struct)),int)->(int)
(	O
&	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
MU_STREAM_RDWR	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
0	int
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
header	*(struct)
->	O
spool_used	long
)	O
{	O
for	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
header	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
mu_hdrent_fixup	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
rc	int
=	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
header	*(struct)
->	O
spool	*(char)
,	O
header	*(struct)
->	O
spool_used	long
,	O
NULL	O
)	O
;	O
for	O
(	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
header	*(struct)
->	O
head	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
;	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
=	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
->	O
next	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`)))))
)	O
mu_hdrent_unroll_fixup	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(struct(*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),long,long,long,long,long)))->(void)
(	O
header	*(struct)
,	O
ent	*(struct(*(struct(*(struct`),*(struct`),long,long,long,long,long)),*(struct(*(struct`),*(struct`),long,long,long,long,long)),long,long,long,long,long))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_stream_truncate	(*(struct),long)->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
header	*(struct)
->	O
spool_used	long
)	O
;	O
if	O
(	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
>	O
header	*(struct)
->	O
spool_used	long
)	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
=	O
header	*(struct)
->	O
spool_used	long
;	O
}	O
header	*(struct)
->	O
flags	int
|=	O
HEADER_STREAMMOD	int
;	O
}	O
rc	int
=	O
mu_stream_seek	(*(struct),long,int,*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
hstr	*(struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))),*(struct(*(char),long,long,*(struct`),*(struct`),int,long,long,long,*(struct`),*(struct`),*(struct`),*((*`,*`,*`)->(int)),*(void))),long))
->	O
off	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
return	O
mu_stream_write	(*(struct),*(void),long,*(long))->(int)
(	O
header	*(struct)
->	O
mstream	*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`),*(char),long,int,*(long))->(int)),*((*(struct`),*(char),long,*(long))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(void)),*((*(struct`))->(void)),*((*(struct`),long,*(long))->(int)),*((*(struct`),*(long))->(int)),*((*(struct`),int,int,*(void))->(int)),*((*(struct`),*(int),*(struct`))->(int)),*((*(struct`),long)->(int)),*((*(struct`),int)->(int)),*((*(struct`),int,long,*(void))->(void)),int,*(void),*((*(struct`),enum(int,int,int),long)->(int)),*((*(struct`),int)->(*(char)))))
,	O
buf	*(void)
,	O
buflen	long
,	O
pnwrite	*(long)
)	O
;	O
}	O
static	O
int	O
header_size	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)
(	O
mu_stream_t	*(struct)
str	*(struct)
,	O
mu_off_t	long
*	O
psize	*(long)
)	O
{	O
mu_header_t	*(struct)
header	*(struct)
;	O
int	O
status	int
;	O
size_t	long
size	long
;	O
if	O
(	O
str	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
psize	*(long)
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
header	*(struct)
=	O
(	O
(	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
)	O
str	*(struct)
)	O
->	O
hdr	*(struct)
;	O
status	int
=	O
mu_header_fill	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))))->(int)
(	O
header	*(struct)
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
status	int
=	O
mu_header_size	(*(struct),*(long))->(int)
(	O
header	*(struct)
,	O
&	O
size	long
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
*	O
psize	*(long)
=	O
size	long
;	O
return	O
status	int
;	O
}	O
static	O
int	O
_header_get_stream	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))))),int)->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstream	*(*(struct))
,	O
int	O
ref	*(char)
)	O
{	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pstream	*(*(struct))
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
header	*(struct)
->	O
stream	*(struct)
==	O
NULL	O
)	O
{	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
str	*(struct)
=	O
(	O
struct	O
_mu_header_stream	struct(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,int,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(char),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)))->(void)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long,*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(long))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,int,*(void))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(int),*(struct(long,long)))->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int,long,*(void))->(void)),int,*(void),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),enum(int,int,int),long)->(int)),*((*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),int)->(*(char)))),*(struct),long)
*	O
)	O
_mu_stream_create	(long,int)->(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))))
(	O
sizeof	O
(	O
*	O
str	*(struct)
)	O
,	O
MU_STREAM_RDWR	O
|	O
MU_STREAM_SEEK	int
)	O
;	O
if	O
(	O
!	O
str	*(struct)
)	O
return	O
ENOMEM	int
;	O
str	*(struct)
->	O
stream	*(struct)
.	O
read	*((*(void),*(char),long)->(long))
=	O
header_read	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)
;	O
str	*(struct)
->	O
stream	*(struct)
.	O
write	*((*(void),*(char),long)->(long))
=	O
header_write	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(char),long,*(long))->(int)
;	O
str	*(struct)
->	O
stream	*(struct)
.	O
seek	*((*(void),*(long),int)->(int))
=	O
header_seek	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),long,*(long))->(int)
;	O
str	*(struct)
->	O
stream	*(struct)
.	O
size	long
=	O
header_size	(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`)))),*(long))->(int)
;	O
str	*(struct)
->	O
hdr	*(struct)
=	O
header	*(struct)
;	O
header	*(struct)
->	O
stream	*(struct)
=	O
(	O
mu_stream_t	*(struct)
)	O
str	*(struct)
;	O
}	O
if	O
(	O
!	O
ref	*(char)
)	O
{	O
*	O
pstream	*(*(struct))
=	O
header	*(struct)
->	O
stream	*(struct)
;	O
return	O
0	int
;	O
}	O
return	O
mu_streamref_create	(*(*(struct)),*(struct))->(int)
(	O
pstream	*(*(struct))
,	O
header	*(struct)
->	O
stream	*(struct)
)	O
;	O
}	O
int	O
mu_header_get_stream	(*(struct),*(*(struct)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstream	*(*(struct))
)	O
{	O
return	O
_header_get_stream	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))))),int)->(int)
(	O
header	*(struct)
,	O
pstream	*(*(struct))
,	O
0	int
)	O
;	O
}	O
int	O
mu_header_get_streamref	(*(struct),*(*(struct)))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
mu_stream_t	*(struct)
*	O
pstream	*(*(struct))
)	O
{	O
return	O
_header_get_stream	(*(struct(*(char),long,long,*(struct(*`,*`,long,long,long,long,long)),*(struct(*`,*`,long,long,long,long,long)),int,long,long,long,*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct(int,enum(int,int,int),long,*`,long,long,int,long,int,*`,int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,*`)),*(struct),*((*`,*`,*`)->(int)),*(void))),*(*(struct(int,enum(int,int,int),long,*(char),long,long,int,long,int,*(long),int,*((*`,*`,long,*`)->(int)),*((*`,*`,long,int,*`)->(int)),*((*`,*`,long,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(void)),*((*`)->(void)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,int,int,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,long)->(int)),*((*`,int)->(int)),*((*`,int,long,*`)->(void)),int,*(void),*((*`,enum(int,int,int),long)->(int)),*((*`,int)->(*`))))),int)->(int)
(	O
header	*(struct)
,	O
pstream	*(*(struct))
,	O
1	int
)	O
;	O
}	O
int	O
mu_header_set_fill	(*(struct),*((*(void),*(*(char)),*(long))->(int)),*(void))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
,	O
int	O
(	O
*	O
_fill	*((*(void),*(*(char)),*(long))->(int))
)	O
(	O
void	O
*	O
data	*(void)
,	O
char	O
*	O
*	O
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
data	*(void)
)	O
{	O
if	O
(	O
header	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
header	*(struct)
->	O
_fill	*((*(void),*(*(char)),*(long))->(int))
=	O
_fill	*((*(void),*(*(char)),*(long))->(int))
;	O
header	*(struct)
->	O
data	*(void)
=	O
data	*(void)
;	O
return	O
0	int
;	O
}	O
int	O
mu_header_is_modified	(*(struct))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
)	O
{	O
return	O
header	*(struct)
?	O
(	O
header	*(struct)
->	O
flags	int
&	O
HEADER_MODIFIED	int
)	O
:	O
0	int
;	O
}	O
int	O
mu_header_clear_modified	(*(struct))->(int)
(	O
mu_header_t	*(struct)
header	*(struct)
)	O
{	O
if	O
(	O
header	*(struct)
)	O
header	*(struct)
->	O
flags	int
&=	O
~	O
HEADER_MODIFIED	int
;	O
return	O
0	int
;	O
}	O
