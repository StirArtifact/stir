void	O
mu_mailcap_destroy	(*(*(struct)))->(void)
(	O
mu_mailcap_t	*(struct)
*	O
pmailcap	*(*(struct))
)	O
{	O
if	O
(	O
pmailcap	*(*(struct))
&&	O
*	O
pmailcap	*(*(struct))
)	O
{	O
mu_mailcap_t	*(struct)
mailcap	*(struct)
=	O
*	O
pmailcap	*(*(struct))
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
&	O
mailcap	*(struct)
->	O
elist	*(struct)
)	O
;	O
if	O
(	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
.	O
data	*(void)
&&	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
.	O
data_free	*((*(void))->(void))
)	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
.	O
data_free	*((*(void))->(void))
(	O
mailcap	*(struct)
->	O
selector	*((*(struct),*(void))->(int))
.	O
data	*(void)
)	O
;	O
if	O
(	O
mailcap	*(struct)
->	O
error	*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void))
.	O
data	*(void)
&&	O
mailcap	*(struct)
->	O
error	*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void))
.	O
data_free	*((*(void))->(void))
)	O
mailcap	*(struct)
->	O
error	*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void))
.	O
data_free	*((*(void))->(void))
(	O
mailcap	*(struct)
->	O
error	*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void))
.	O
data	*(void)
)	O
;	O
free	(*(void))->(void)
(	O
mailcap	*(struct)
)	O
;	O
}	O
}	O
