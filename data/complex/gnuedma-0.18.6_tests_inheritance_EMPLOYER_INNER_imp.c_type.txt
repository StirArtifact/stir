typedef	O
struct	O
{	O
ESint32	int
employer_number	int
;	O
}	O
DtEMPLOYER_INNER	struct(int)
;	O
ESint32	int
EDMAPROC	O
EMPLOYER_INNERdisplay	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtEMPLOYER_INNER	struct(int)
*	O
m	*(struct(int))
;	O
OBJID	int
e	int
;	O
m	*(struct(int))
=	O
(	O
DtEMPLOYER_INNER	struct(int)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
EDMA_TRY	O
{	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"INNER<.display"	*(char)
)	O
;	O
}	O
EDMA_CATCH	O
(	O
e	int
)	O
{	O
}	O
EDMA_TRY_END	O
;	O
printf	(*(char))->(int)
(	O
" [%ld] "	*(char)
,	O
m	*(struct(int))
->	O
employer_number	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
EMPLOYER_INNERpayS32	(int,int)->(int)
(	O
OBJID	int
IdObj	int
,	O
ESint32	int
amount	int
)	O
{	O
DtEMPLOYER_INNER	struct(int)
*	O
m	*(struct(int))
;	O
m	*(struct(int))
=	O
(	O
DtEMPLOYER_INNER	struct(int)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
printf	(*(char))->(int)
(	O
"-->EMPLOYER<-- Paying %ld$ to :"	*(char)
,	O
amount	int
)	O
;	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
".display"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
