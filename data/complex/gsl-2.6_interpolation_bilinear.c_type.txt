static	O
int	O
bilinear_init	(*(void),array(double),array(double),array(double),long,long)->(int)
(	O
void	O
*	O
state	*(int)
,	O
const	O
double	O
xa	array(double)
[	O
]	O
,	O
const	O
double	O
ya	array(double)
[	O
]	O
,	O
const	O
double	O
za	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
)	O
{	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bilinear_eval	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
state	*(int)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z	*(double)
)	O
{	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
,	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
t	double
,	O
u	double
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
u	double
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
*	O
z	*(double)
=	O
(	O
1.	int
-	O
t	double
)	O
*	O
(	O
1.	int
-	O
u	double
)	O
*	O
zminmin	double
+	O
t	double
*	O
(	O
1.	int
-	O
u	double
)	O
*	O
zmaxmin	double
+	O
(	O
1.	int
-	O
t	double
)	O
*	O
u	double
*	O
zminmax	double
+	O
t	double
*	O
u	double
*	O
zmaxmax	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bilinear_deriv_x	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
state	*(int)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_p	*(double)
)	O
{	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
,	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
u	double
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
u	double
=	O
(	O
y	*(double)
-	O
ymin	double
)	O
/	O
dy	double
;	O
*	O
z_p	*(double)
=	O
dt	double
*	O
(	O
-	O
(	O
1.	int
-	O
u	double
)	O
*	O
zminmin	double
+	O
(	O
1.	int
-	O
u	double
)	O
*	O
zmaxmin	double
-	O
u	double
*	O
zminmax	double
+	O
u	double
*	O
zmaxmax	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bilinear_deriv_y	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
state	*(int)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_p	*(double)
)	O
{	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
,	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
t	double
,	O
du	double
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
t	double
=	O
(	O
x	double
-	O
xmin	double
)	O
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
*	O
z_p	*(double)
=	O
du	double
*	O
(	O
-	O
(	O
1.	int
-	O
t	double
)	O
*	O
zminmin	double
-	O
t	double
*	O
zmaxmin	double
+	O
(	O
1.	int
-	O
t	double
)	O
*	O
zminmax	double
+	O
t	double
*	O
zmaxmax	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bilinear_deriv2	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
state	*(int)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_pp	*(double)
)	O
{	O
*	O
z_pp	*(double)
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
bilinear_derivxy	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
(	O
const	O
void	O
*	O
state	*(int)
,	O
const	O
double	O
xarr	array(double)
[	O
]	O
,	O
const	O
double	O
yarr	array(double)
[	O
]	O
,	O
const	O
double	O
zarr	array(double)
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	*(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
xa	array(double)
,	O
gsl_interp_accel	struct(long,long,long)
*	O
ya	array(double)
,	O
double	O
*	O
z_pp	*(double)
)	O
{	O
double	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
,	O
zminmin	double
,	O
zminmax	double
,	O
zmaxmin	double
,	O
zmaxmax	double
;	O
double	O
dx	double
,	O
dy	double
;	O
double	O
dt	double
,	O
du	double
;	O
size_t	long
xi	long
,	O
yi	long
;	O
if	O
(	O
xa	array(double)
!=	O
NULL	O
)	O
xi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
xa	array(double)
,	O
xarr	array(double)
,	O
xsize	long
,	O
x	double
)	O
;	O
else	O
xi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
xarr	array(double)
,	O
x	double
,	O
0	int
,	O
xsize	long
-	O
1	int
)	O
;	O
if	O
(	O
ya	array(double)
!=	O
NULL	O
)	O
yi	long
=	O
gsl_interp_accel_find	(*(struct(long,long,long)),array(double),long,double)->(long)
(	O
ya	array(double)
,	O
yarr	array(double)
,	O
ysize	long
,	O
y	*(double)
)	O
;	O
else	O
yi	long
=	O
gsl_interp_bsearch	(array(double),double,long,long)->(long)
(	O
yarr	array(double)
,	O
y	*(double)
,	O
0	int
,	O
ysize	long
-	O
1	int
)	O
;	O
xmin	double
=	O
xarr	array(double)
[	O
xi	long
]	O
;	O
xmax	double
=	O
xarr	array(double)
[	O
xi	long
+	O
1	int
]	O
;	O
ymin	double
=	O
yarr	array(double)
[	O
yi	long
]	O
;	O
ymax	double
=	O
yarr	array(double)
[	O
yi	long
+	O
1	int
]	O
;	O
zminmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zminmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmin	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
zmaxmax	double
=	O
zarr	array(double)
[	O
IDX2D	O
(	O
xi	long
+	O
1	int
,	O
yi	long
+	O
1	int
,	O
xsize	long
,	O
ysize	long
)	O
]	O
;	O
dx	double
=	O
xmax	double
-	O
xmin	double
;	O
dy	double
=	O
ymax	double
-	O
ymin	double
;	O
dt	double
=	O
1.	int
/	O
dx	double
;	O
du	double
=	O
1.	int
/	O
dy	double
;	O
*	O
z_pp	*(double)
=	O
dt	double
*	O
du	double
*	O
(	O
zminmin	double
-	O
zmaxmin	double
-	O
zminmax	double
+	O
zmaxmax	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_interp2d_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
bilinear_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
=	O
{	O
"bilinear"	*(char)
,	O
2	int
,	O
NULL	O
,	O
&	O
bilinear_init	(*(void),array(double),array(double),array(double),long,long)->(int)
,	O
&	O
bilinear_eval	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bilinear_deriv_x	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bilinear_deriv_y	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bilinear_deriv2	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bilinear_derivxy	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
&	O
bilinear_deriv2	(*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)
,	O
NULL	O
}	O
;	O
const	O
gsl_interp2d_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
*	O
gsl_interp2d_bilinear	*(struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct`),*(struct`),*(double))->(int)),*((*(void))->(void))))
=	O
&	O
bilinear_type	struct(*(char),int,*((long,long)->(*(void))),*((*(void),array(double),array(double),array(double),long,long)->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void),array(double),array(double),array(double),long,long,double,double,*(struct(long,long,long)),*(struct(long,long,long)),*(double))->(int)),*((*(void))->(void)))
;	O
