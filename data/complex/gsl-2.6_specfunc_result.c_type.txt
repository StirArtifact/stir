int	O
gsl_sf_result_smash_e	(*(struct(double,double,int)),*(struct(double,double)))->(int)
(	O
const	O
gsl_sf_result_e10	struct(double,double,int)
*	O
re	*(struct(double,double,int))
,	O
gsl_sf_result	struct(double,double)
*	O
r	*(struct(double,double))
)	O
{	O
if	O
(	O
re	*(struct(double,double,int))
->	O
e10	int
==	O
0	int
)	O
{	O
r	*(struct(double,double))
->	O
val	double
=	O
re	*(struct(double,double,int))
->	O
val	double
;	O
r	*(struct(double,double))
->	O
err	double
=	O
re	*(struct(double,double,int))
->	O
err	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
av	double
=	O
fabs	(double)->(double)
(	O
re	*(struct(double,double,int))
->	O
val	double
)	O
;	O
const	O
double	O
ae	double
=	O
fabs	(double)->(double)
(	O
re	*(struct(double,double,int))
->	O
err	double
)	O
;	O
if	O
(	O
GSL_SQRT_DBL_MIN	int
<	O
av	double
&&	O
av	double
<	O
GSL_SQRT_DBL_MAX	int
&&	O
GSL_SQRT_DBL_MIN	int
<	O
ae	double
&&	O
ae	double
<	O
GSL_SQRT_DBL_MAX	int
&&	O
0.49	int
*	O
GSL_LOG_DBL_MIN	O
<	O
re	*(struct(double,double,int))
->	O
e10	int
&&	O
re	*(struct(double,double,int))
->	O
e10	int
<	O
0.49	int
*	O
GSL_LOG_DBL_MAX	int
)	O
{	O
const	O
double	O
scale	double
=	O
exp	(double)->(double)
(	O
re	*(struct(double,double,int))
->	O
e10	int
*	O
M_LN10	int
)	O
;	O
r	*(struct(double,double))
->	O
val	double
=	O
re	*(struct(double,double,int))
->	O
val	double
*	O
scale	double
;	O
r	*(struct(double,double))
->	O
err	double
=	O
re	*(struct(double,double,int))
->	O
err	double
*	O
scale	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
return	O
gsl_sf_exp_mult_err_e	(double,double,double,double,*(struct(double,double)))->(int)
(	O
re	*(struct(double,double,int))
->	O
e10	int
*	O
M_LN10	int
,	O
0.0	int
,	O
re	*(struct(double,double,int))
->	O
val	double
,	O
re	*(struct(double,double,int))
->	O
err	double
,	O
r	*(struct(double,double))
)	O
;	O
}	O
}	O
}	O
