typedef	O
struct	O
singleton_entry_t	struct(array(char),int)
{	O
EChar	char
ClassName	*(char)
[	O
50	int
]	O
;	O
OBJID	int
id	int
;	O
}	O
SINGLETON_ENTRY	struct(array(char),int)
;	O
SINGLETON_ENTRY	struct(array(char),int)
singletons	array(struct(array(char),int))
[	O
MAX_SINGLETONS	int
]	O
;	O
ESint32	int
nItems	int
;	O
ESint32	int
SINGLETONOnLoad	(int)->(int)
(	O
CLASSID	int
Idc	int
)	O
{	O
ESint32	int
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
MAX_SINGLETONS	int
;	O
i	int
++	O
)	O
singletons	array(struct(array(char),int))
[	O
i	int
]	O
.	O
id	int
=	O
-	O
1	int
;	O
nItems	int
=	O
0	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
SINGLETONOnUnload	(int)->(int)
(	O
CLASSID	int
Idc	int
)	O
{	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
SINGLETONRegisterZU32rS32	(int,*(char),int)->(int)
(	O
CLASSID	int
idc	int
,	O
EPChar	*(char)
cn	*(char)
,	O
OBJID	int
id	int
)	O
{	O
ESint32	int
i	int
;	O
if	O
(	O
nItems	int
==	O
MAX_SINGLETONS	int
)	O
{	O
edma_printf	(*(char))->(long)
(	O
"[SINGLETON] ** ERROR: I can't define more singletons"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nItems	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
singletons	array(struct(array(char),int))
[	O
i	int
]	O
.	O
id	int
!=	O
-	O
1	int
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
singletons	array(struct(array(char),int))
[	O
i	int
]	O
.	O
ClassName	*(char)
,	O
cn	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
}	O
if	O
(	O
i	int
==	O
nItems	int
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
singletons	array(struct(array(char),int))
[	O
nItems	int
]	O
.	O
ClassName	*(char)
,	O
cn	*(char)
)	O
;	O
if	O
(	O
id	int
==	O
-	O
1	int
)	O
singletons	array(struct(array(char),int))
[	O
nItems	int
]	O
.	O
id	int
=	O
edma_new_obj	(*(char))->(int)
(	O
cn	*(char)
,	O
NULL	O
)	O
;	O
else	O
singletons	array(struct(array(char),int))
[	O
nItems	int
]	O
.	O
id	int
=	O
id	int
;	O
}	O
nItems	int
++	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
SINGLETONInstanceZrO	(int,*(char))->(int)
(	O
CLASSID	int
idc	int
,	O
EPChar	*(char)
cn	*(char)
)	O
{	O
ESint32	int
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nItems	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
singletons	array(struct(array(char),int))
[	O
i	int
]	O
.	O
id	int
!=	O
-	O
1	int
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
singletons	array(struct(array(char),int))
[	O
i	int
]	O
.	O
ClassName	*(char)
,	O
cn	*(char)
)	O
==	O
0	int
)	O
break	O
;	O
}	O
if	O
(	O
i	int
==	O
nItems	int
)	O
{	O
edma_printf	(*(char))->(long)
(	O
"[SINGLETON] Don't found any instance of class %s"	*(char)
,	O
cn	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
singletons	array(struct(array(char),int))
[	O
i	int
]	O
.	O
id	int
;	O
}	O
