int	O
DISParseEntityID	(*(struct(struct(short,short),short)),*(char),int,*(char))->(int)
(	O
dis_entity_id	struct(struct(short,short),short)
*	O
p	*(struct(char,char,short,char,char,char,char))
,	O
const	O
char	O
*	O
buf	*(char)
,	O
int	O
bufsize	int
,	O
const	O
char	O
*	O
delim	*(char)
)	O
{	O
char	O
pdelim	array(char)
[	O
DMAX	int
+	O
1	int
]	O
;	O
char	O
tbuf	array(char)
[	O
BMAX	int
+	O
1	int
]	O
;	O
char	O
*	O
cur	*(char)
,	O
*	O
next	*(char)
,	O
*	O
endptr	*(char)
;	O
long	O
rval	long
;	O
int	O
result	char
=	O
1	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
p	*(struct(char,char,short,char,char,char,char))
,	O
0	int
,	O
sizeof	O
(	O
dis_entity_id	struct(struct(short,short),short)
)	O
)	O
;	O
if	O
(	O
bufsize	int
>	O
BMAX	int
)	O
{	O
return	O
2	int
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tbuf	array(char)
,	O
buf	*(char)
,	O
BMAX	int
)	O
;	O
tbuf	array(char)
[	O
BMAX	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
delim	*(char)
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
pdelim	array(char)
,	O
delim	*(char)
,	O
DMAX	int
)	O
;	O
pdelim	array(char)
[	O
DMAX	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
pdelim	array(char)
,	O
":./"	*(char)
)	O
;	O
}	O
cur	*(char)
=	O
tbuf	array(char)
;	O
next	*(char)
=	O
strpbrk	(*(char),*(char))->(*(char))
(	O
cur	*(char)
,	O
pdelim	array(char)
)	O
;	O
if	O
(	O
next	*(char)
!=	O
NULL	O
)	O
{	O
pdelim	array(char)
[	O
0	int
]	O
=	O
*	O
next	*(char)
;	O
pdelim	array(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
endptr	*(char)
=	O
next	*(char)
;	O
rval	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
cur	*(char)
,	O
&	O
endptr	*(char)
,	O
0	int
)	O
;	O
if	O
(	O
rval	long
<	O
0	int
||	O
rval	long
>	O
0xffff	int
)	O
{	O
return	O
3	int
;	O
}	O
else	O
{	O
p	*(struct(char,char,short,char,char,char,char))
->	O
sim_id	struct(short,short)
.	O
site_id	short
=	O
(	O
unsigned	O
short	O
)	O
rval	long
;	O
}	O
if	O
(	O
endptr	*(char)
!=	O
next	*(char)
)	O
{	O
return	O
4	int
;	O
}	O
cur	*(char)
=	O
next	*(char)
+	O
1	int
;	O
next	*(char)
=	O
strpbrk	(*(char),*(char))->(*(char))
(	O
cur	*(char)
,	O
pdelim	array(char)
)	O
;	O
if	O
(	O
next	*(char)
!=	O
NULL	O
)	O
{	O
endptr	*(char)
=	O
next	*(char)
;	O
rval	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
cur	*(char)
,	O
&	O
endptr	*(char)
,	O
0	int
)	O
;	O
if	O
(	O
rval	long
<	O
0	int
||	O
rval	long
>	O
0xffff	int
)	O
{	O
return	O
3	int
;	O
}	O
else	O
{	O
p	*(struct(char,char,short,char,char,char,char))
->	O
sim_id	struct(short,short)
.	O
application_id	short
=	O
(	O
unsigned	O
short	O
)	O
rval	long
;	O
}	O
if	O
(	O
endptr	*(char)
!=	O
next	*(char)
)	O
{	O
return	O
4	int
;	O
}	O
cur	*(char)
=	O
next	*(char)
+	O
1	int
;	O
rval	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
cur	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
rval	long
<	O
0	int
||	O
rval	long
>	O
0xffff	int
)	O
{	O
return	O
3	int
;	O
}	O
else	O
{	O
p	*(struct(char,char,short,char,char,char,char))
->	O
entity_id	short
=	O
(	O
unsigned	O
short	O
)	O
rval	long
;	O
}	O
result	char
=	O
0	int
;	O
}	O
}	O
return	O
result	char
;	O
}	O
