VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob_open	()->(*(union(struct(*(*`),int,int,long,int))))
(	O
void	O
)	O
{	O
return	O
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
)	O
(	O
cplob_open	(int)->(*(struct(*(*(char)),int,int,long,int)))
(	O
3	int
)	O
)	O
;	O
}	O
void	O
vplob_close	(*(union(struct(*(*`),int,int,long,int))))->(void)
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
free	(*(void))->(void)
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
->	O
list	*(*(char))
)	O
;	O
free	(*(void))->(void)
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
}	O
void	O
vplob_shallow_close	(*(union(struct(*(*`),int,int,long,int))))->(void)
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
free	(*(void))->(void)
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
)	O
;	O
}	O
void	O
vplob_add	(*(union(struct(*(*`),int,int,long,int))),*(void))->(void)
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
,	O
void	O
*	O
addr	*(char)
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
cplob_add_nta	(*(struct(*(*(char)),int,int,long,int)),*(char))->(void)
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
,	O
addr	*(char)
)	O
;	O
}	O
void	O
*	O
*	O
vplob_get_list	(*(union(struct(*(*`),int,int,long,int))))->(*(*(void)))
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
return	O
(	O
void	O
*	O
*	O
)	O
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
->	O
list	*(*(char))
)	O
;	O
}	O
void	O
*	O
vplob_val	(*(union(struct(*(*`),int,int,long,int))),int)->(*(void))
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
,	O
int	O
index	(*(char),int)->(*(char))
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
return	O
(	O
void	O
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
,	O
index	(*(char),int)->(*(char))
)	O
;	O
}	O
int	O
vplob_get_nstore	(*(union(struct(*(*`),int,int,long,int))))->(int)
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
int	O
i	int
;	O
int	O
ret	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cplob	*(struct(*(*(char)),int,int,long,int))
->	O
nused	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
*	O
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
->	O
list	*(*(char))
+	O
(	O
i	int
)	O
)	O
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
ret	int
++	O
;	O
}	O
}	O
return	O
ret	int
;	O
}	O
int	O
vplob_delete_store	(*(union(struct(*(*`),int,int,long,int))),*((*(void))->(void)))->(int)
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
,	O
void	O
(	O
*	O
f_delete	*((*(void))->(void))
)	O
(	O
void	O
*	O
)	O
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
void	O
*	O
addr	*(char)
;	O
int	O
i	int
;	O
int	O
n	int
=	O
vplob_get_nstore	(*(union(struct(*(*`),int,int,long,int))))->(int)
(	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
addr	*(char)
=	O
*	O
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
->	O
list	*(*(char))
+	O
(	O
i	int
)	O
)	O
;	O
if	O
(	O
addr	*(char)
!=	O
(	O
void	O
*	O
)	O
NULL	O
)	O
{	O
(	O
*	O
f_delete	*((*(void))->(void))
)	O
(	O
addr	*(char)
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
vplob_remove_from_list	(*(union(struct(*(*`),int,int,long,int))),*(void))->(int)
(	O
VPLOB	union(struct(*(*(char)),int,int,long,int))
*	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
,	O
void	O
*	O
addr_to_remove	*(void)
)	O
{	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
cplob	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
;	O
int	O
i	int
;	O
int	O
n	int
;	O
void	O
*	O
addr	*(char)
;	O
n	int
=	O
vplob_get_nstore	(*(union(struct(*(*`),int,int,long,int))))->(int)
(	O
vplob	*(union(struct(*(*(char)),int,int,long,int)))
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
addr	*(char)
=	O
*	O
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
->	O
list	*(*(char))
+	O
(	O
i	int
)	O
)	O
;	O
if	O
(	O
addr	*(char)
==	O
addr_to_remove	*(void)
)	O
{	O
cplob_remove_index	(*(struct(*(*(char)),int,int,long,int)),int)->(int)
(	O
cplob	*(struct(*(*(char)),int,int,long,int))
,	O
i	int
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
