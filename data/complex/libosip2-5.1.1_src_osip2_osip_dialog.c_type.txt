void	O
osip_dialog_set_state	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(void)
(	O
osip_dialog_t	struct
*	O
dialog	*(struct)
,	O
state_t	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
state	*(int)
)	O
{	O
if	O
(	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
;	O
dialog	*(struct)
->	O
state	*(int)
=	O
state	*(int)
;	O
}	O
int	O
osip_dialog_update_route_set_as_uas	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
osip_contact_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
int	O
i	int
;	O
if	O
(	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"missing a contact in invite!\n"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
!=	O
NULL	O
)	O
{	O
osip_contact_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
}	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
NULL	O
;	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
;	O
i	int
=	O
osip_contact_clone	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_update_osip_cseq_as_uas	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
if	O
(	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
==	O
NULL	O
||	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
dialog	*(struct)
->	O
remote_cseq	int
=	O
osip_atoi	(*(char))->(int)
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_update_route_set_as_uac	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
response	*(char)
)	O
{	O
osip_contact_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
int	O
i	int
;	O
if	O
(	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
response	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
response	*(char)
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"missing a contact in response!\n"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
!=	O
NULL	O
)	O
{	O
osip_contact_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
}	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
NULL	O
;	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
response	*(char)
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
;	O
i	int
=	O
osip_contact_clone	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
}	O
if	O
(	O
dialog	*(struct)
->	O
state	*(int)
==	O
DIALOG_EARLY	int
&&	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
dialog	*(struct)
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
>	O
0	int
)	O
{	O
osip_list_special_free	(*(struct(int,*(struct(*`,*`)))),*((*(void))->(void)))->(void)
(	O
&	O
dialog	*(struct)
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_record_route_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
)	O
;	O
osip_list_init	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
dialog	*(struct)
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
;	O
}	O
if	O
(	O
dialog	*(struct)
->	O
state	*(int)
==	O
DIALOG_EARLY	int
&&	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
dialog	*(struct)
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
==	O
0	int
)	O
{	O
int	O
pos	int
=	O
0	int
;	O
while	O
(	O
!	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
response	*(char)
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
)	O
{	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
rr	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
rr	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
(	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
response	*(char)
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
i	int
=	O
osip_record_route_clone	O
(	O
rr	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
dialog	*(struct)
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
0	int
)	O
;	O
pos	int
++	O
;	O
}	O
}	O
if	O
(	O
MSG_IS_STATUS_2XX	O
(	O
response	*(char)
)	O
)	O
dialog	*(struct)
->	O
state	*(int)
=	O
DIALOG_CONFIRMED	int
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_update_tag_as_uac	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
response	*(char)
)	O
{	O
osip_generic_param_t	struct(*(char),*(char))
*	O
tag	*(struct(*(char),*(char)))
;	O
int	O
i	int
;	O
if	O
(	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
response	*(char)
==	O
NULL	O
||	O
response	*(char)
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
dialog	*(struct)
->	O
remote_tag	*(char)
!=	O
NULL	O
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"This dialog already have a remote tag: it can't be changed!\n"	*(char)
)	O
)	O
;	O
return	O
OSIP_WRONG_STATE	O
;	O
}	O
i	int
=	O
osip_to_get_tag	O
(	O
response	*(char)
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
tag	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
||	O
tag	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
tag	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
==	O
NULL	O
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Remote UA is not compliant: missing a tag in response!\n"	*(char)
)	O
)	O
;	O
dialog	*(struct)
->	O
remote_tag	*(char)
=	O
NULL	O
;	O
}	O
else	O
dialog	*(struct)
->	O
remote_tag	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
tag	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_match_as_uac	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
,	O
osip_message_t	struct
*	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
osip_generic_param_t	struct(*(char),*(char))
*	O
tag_param_local	*(struct(*(char),*(char)))
;	O
osip_generic_param_t	struct(*(char),*(char))
*	O
tag_param_remote	*(struct(*(char),*(char)))
;	O
char	O
*	O
tmp	*(char)
;	O
int	O
i	int
;	O
if	O
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
==	O
NULL	O
||	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
call_id	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
==	O
NULL	O
||	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
call_id	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
||	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Using this method is discouraged. See source code explanations!\n"	*(char)
)	O
)	O
;	O
i	int
=	O
osip_call_id_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
(	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
call_id	*(struct(*(char),*(char)))
,	O
&	O
tmp	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
0	int
!=	O
strcmp	(*(char),*(char))->(int)
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
call_id	*(struct(*(char),*(char)))
,	O
tmp	*(char)
)	O
)	O
{	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
i	int
=	O
osip_from_get_tag	O
(	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
tag_param_local	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_tag	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
0	int
!=	O
strcmp	(*(char),*(char))->(int)
(	O
tag_param_local	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
,	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_tag	*(char)
)	O
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
i	int
=	O
osip_to_get_tag	O
(	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
tag_param_remote	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
&&	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
!=	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
i	int
!=	O
0	int
&&	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
==	O
NULL	O
)	O
{	O
if	O
(	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
(	O
osip_from_t	struct
*	O
)	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
(	O
osip_from_t	struct
*	O
)	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
&&	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
==	O
NULL	O
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Remote UA is not compliant: missing a tag in To fields!\n"	*(char)
)	O
)	O
;	O
if	O
(	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
(	O
osip_from_t	struct
*	O
)	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
(	O
osip_from_t	struct
*	O
)	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
&&	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
answer	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
tag_param_remote	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
,	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
int	O
osip_dialog_match_as_uas	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
,	O
osip_message_t	struct
*	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
osip_generic_param_t	struct(*(char),*(char))
*	O
tag_param_remote	*(struct(*(char),*(char)))
;	O
int	O
i	int
;	O
char	O
*	O
tmp	*(char)
;	O
if	O
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
==	O
NULL	O
||	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
call_id	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
==	O
NULL	O
||	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
call_id	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
||	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_call_id_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
(	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
call_id	*(struct(*(char),*(char)))
,	O
&	O
tmp	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
0	int
!=	O
strcmp	(*(char),*(char))->(int)
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
call_id	*(struct(*(char),*(char)))
,	O
tmp	*(char)
)	O
)	O
{	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
osip_free	O
(	O
tmp	*(char)
)	O
;	O
if	O
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_tag	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
i	int
=	O
osip_from_get_tag	O
(	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
tag_param_remote	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
&&	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
!=	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
i	int
!=	O
0	int
&&	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
==	O
NULL	O
)	O
{	O
if	O
(	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
(	O
osip_from_t	struct
*	O
)	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
(	O
osip_from_t	struct
*	O
)	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
&&	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
==	O
NULL	O
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Remote UA is not compliant: missing a tag in To feilds!\n"	*(char)
)	O
)	O
;	O
if	O
(	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
(	O
osip_from_t	struct
*	O
)	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
(	O
osip_from_t	struct
*	O
)	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
&&	O
0	int
==	O
osip_from_compare	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(int)
(	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
local_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
tag_param_remote	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
,	O
dlg	*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),int,int,*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char),*(struct`),struct(int,*`))),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))
->	O
remote_tag	*(char)
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
static	O
int	O
__osip_dialog_init	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
osip_message_t	struct
*	O
response	*(char)
,	O
osip_from_t	struct
*	O
local	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
osip_to_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
remote	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
osip_message_t	struct
*	O
remote_msg	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
int	O
i	int
;	O
int	O
pos	int
;	O
osip_generic_param_t	struct(*(char),*(char))
*	O
tag	*(struct(*(char),*(char)))
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
if	O
(	O
response	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
response	*(char)
->	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
local	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
||	O
remote	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
(	O
*	O
dialog	*(struct)
)	O
=	O
(	O
osip_dialog_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_dialog_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
*	O
dialog	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
osip_dialog_t	struct
)	O
)	O
;	O
(	O
*	O
dialog	*(struct)
)	O
->	O
your_instance	*(void)
=	O
NULL	O
;	O
if	O
(	O
MSG_IS_STATUS_2XX	O
(	O
response	*(char)
)	O
)	O
(	O
*	O
dialog	*(struct)
)	O
->	O
state	*(int)
=	O
DIALOG_CONFIRMED	int
;	O
else	O
(	O
*	O
dialog	*(struct)
)	O
->	O
state	*(int)
=	O
DIALOG_EARLY	int
;	O
i	int
=	O
osip_call_id_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
(	O
response	*(char)
->	O
call_id	*(struct(*(char),*(char)))
,	O
&	O
(	O
(	O
*	O
dialog	*(struct)
)	O
->	O
call_id	*(struct(*(char),*(char)))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Could not establish dialog!\n"	*(char)
)	O
)	O
;	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
*	O
dialog	*(struct)
)	O
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_to_get_tag	O
(	O
local	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
tag	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Could not establish dialog!\n"	*(char)
)	O
)	O
;	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
*	O
dialog	*(struct)
)	O
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
(	O
*	O
dialog	*(struct)
)	O
->	O
local_tag	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
tag	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
;	O
i	int
=	O
osip_from_get_tag	O
(	O
remote	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
tag	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
==	O
0	int
)	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_tag	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
tag	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
;	O
if	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
{	O
osip_uri_param_t	struct
*	O
line_param	*(char)
;	O
i	int
=	O
osip_uri_param_get_byname	(*(struct(int,*(struct(*`,*`)))),*(char),*(*(struct(*(char),*(char)))))->(int)
(	O
&	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
req_uri	*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(char)))
->	O
url_params	*(struct(int,*(struct(*(struct`),*(void)))))
,	O
"line"	*(char)
,	O
&	O
line_param	*(char)
)	O
;	O
if	O
(	O
i	int
==	O
0	int
&&	O
line_param	*(char)
!=	O
NULL	O
&&	O
line_param	*(char)
->	O
gvalue	*(char)
!=	O
NULL	O
)	O
(	O
*	O
dialog	*(struct)
)	O
->	O
line_param	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
line_param	*(char)
->	O
gvalue	*(char)
)	O
;	O
}	O
osip_list_init	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
(	O
*	O
dialog	*(struct)
)	O
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
;	O
pos	int
=	O
0	int
;	O
while	O
(	O
!	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
response	*(char)
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
)	O
{	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
rr	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
rr	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
(	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
response	*(char)
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
i	int
=	O
osip_record_route_clone	O
(	O
rr	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Could not establish dialog!\n"	*(char)
)	O
)	O
;	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
*	O
dialog	*(struct)
)	O
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
if	O
(	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
==	O
NULL	O
)	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
(	O
*	O
dialog	*(struct)
)	O
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
0	int
)	O
;	O
else	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
(	O
*	O
dialog	*(struct)
)	O
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
rr2	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
-	O
1	int
)	O
;	O
pos	int
++	O
;	O
}	O
(	O
*	O
dialog	*(struct)
)	O
->	O
local_cseq	int
=	O
osip_atoi	(*(char))->(int)
(	O
response	*(char)
->	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
;	O
i	int
=	O
osip_from_clone	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
remote	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
(	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Could not establish dialog!\n"	*(char)
)	O
)	O
;	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
*	O
dialog	*(struct)
)	O
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_to_clone	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
local	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
(	O
(	O
*	O
dialog	*(struct)
)	O
->	O
local_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Could not establish dialog!\n"	*(char)
)	O
)	O
;	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
*	O
dialog	*(struct)
)	O
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
{	O
osip_contact_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
;	O
if	O
(	O
!	O
osip_list_eol	(*(struct(int,*(struct(*`,*`)))),int)->(int)
(	O
&	O
remote_msg	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
)	O
{	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
remote_msg	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
contacts	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
0	int
)	O
;	O
i	int
=	O
osip_contact_clone	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
contact	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
&	O
(	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"Could not establish dialog!\n"	*(char)
)	O
)	O
;	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
*	O
dialog	*(struct)
)	O
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
}	O
else	O
{	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
=	O
NULL	O
;	O
OSIP_TRACE	O
(	O
osip_trace	(*(char),int,enum(int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_WARNING	O
,	O
NULL	O
,	O
"Remote UA is not compliant: missing a contact in remote message!\n"	*(char)
)	O
)	O
;	O
}	O
}	O
(	O
*	O
dialog	*(struct)
)	O
->	O
secure	int
=	O
-	O
1	int
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_init_as_uac	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
response	*(char)
)	O
{	O
int	O
i	int
;	O
i	int
=	O
__osip_dialog_init	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
dialog	*(struct)
,	O
NULL	O
,	O
response	*(char)
,	O
response	*(char)
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
response	*(char)
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
response	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
(	O
*	O
dialog	*(struct)
)	O
->	O
type	*(char)
=	O
CALLER	int
;	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_cseq	int
=	O
-	O
1	int
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_init_as_uac_with_remote_request	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int)->(int)
(	O
osip_dialog_t	struct
*	O
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
int	O
local_cseq	int
)	O
{	O
int	O
i	int
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
if	O
(	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
__osip_dialog_init	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
dialog	*(struct)
,	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
(	O
*	O
dialog	*(struct)
)	O
->	O
type	*(char)
=	O
CALLER	int
;	O
(	O
*	O
dialog	*(struct)
)	O
->	O
state	*(int)
=	O
DIALOG_CONFIRMED	int
;	O
(	O
*	O
dialog	*(struct)
)	O
->	O
local_cseq	int
=	O
local_cseq	int
;	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_cseq	int
=	O
osip_atoi	(*(char))->(int)
(	O
next_request	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
->	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_dialog_init_as_uas	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
osip_dialog_t	struct
*	O
*	O
dialog	*(struct)
,	O
osip_message_t	struct
*	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
osip_message_t	struct
*	O
response	*(char)
)	O
{	O
int	O
i	int
;	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
if	O
(	O
response	*(char)
->	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
i	int
=	O
__osip_dialog_init	(*(*(struct(*(char),*(char),*(char),*(char),struct(int,*`),int,int,*(struct`),*(struct`),*(struct`),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(int)
(	O
dialog	*(struct)
,	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
,	O
response	*(char)
,	O
response	*(char)
->	O
to	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
response	*(char)
->	O
from	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
,	O
invite	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),*(char),int,*(char),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char))),*(struct(*(char),*(char),struct(int,*`))),*(struct(*(char),*(char))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),*(struct(*(char))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),*(struct(*(char),*(struct`),struct(int,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),struct(int,*(struct(*`,*`))),int,*(char),long,*(void)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
*	O
dialog	*(struct)
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
(	O
*	O
dialog	*(struct)
)	O
->	O
type	*(char)
=	O
CALLEE	int
;	O
(	O
*	O
dialog	*(struct)
)	O
->	O
remote_cseq	int
=	O
osip_atoi	(*(char))->(int)
(	O
response	*(char)
->	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_dialog_free	(*(struct(*(char),*(char),*(char),*(char),struct(int,*(struct`)),int,int,*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),*(struct(*`,*`,struct`)),int,enum(int,int),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(void))))->(void)
(	O
osip_dialog_t	struct
*	O
dialog	*(struct)
)	O
{	O
if	O
(	O
dialog	*(struct)
==	O
NULL	O
)	O
return	O
;	O
osip_contact_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
dialog	*(struct)
->	O
remote_contact_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
osip_from_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
dialog	*(struct)
->	O
local_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
osip_to_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
dialog	*(struct)
->	O
remote_uri	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*`),struct(int,*`),*(char))),struct(int,*(struct(*`,*`)))))
)	O
;	O
osip_list_special_free	(*(struct(int,*(struct(*`,*`)))),*((*(void))->(void)))->(void)
(	O
&	O
dialog	*(struct)
->	O
route_set	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_record_route_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
)	O
;	O
osip_free	O
(	O
dialog	*(struct)
->	O
line_param	*(char)
)	O
;	O
osip_free	O
(	O
dialog	*(struct)
->	O
remote_tag	*(char)
)	O
;	O
osip_free	O
(	O
dialog	*(struct)
->	O
local_tag	*(char)
)	O
;	O
osip_free	O
(	O
dialog	*(struct)
->	O
call_id	*(struct(*(char),*(char)))
)	O
;	O
osip_free	O
(	O
dialog	*(struct)
)	O
;	O
}	O
