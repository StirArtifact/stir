static	O
size_t	long
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
char	O
*	O
*	O
pbuf	*(*(char))
,	O
size_t	long
*	O
psize	*(long)
,	O
const	O
char	O
*	O
src	*(char)
)	O
{	O
size_t	long
slen	long
=	O
strlen	(*(char))->(long)
(	O
src	*(char)
)	O
;	O
if	O
(	O
pbuf	*(*(char))
==	O
NULL	O
||	O
*	O
pbuf	*(*(char))
==	O
NULL	O
)	O
return	O
slen	long
;	O
else	O
{	O
char	O
*	O
buf	*(void)
=	O
*	O
pbuf	*(*(char))
;	O
size_t	long
size	long
=	O
*	O
psize	*(long)
;	O
if	O
(	O
size	long
>	O
slen	long
)	O
size	long
=	O
slen	long
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
buf	*(void)
,	O
src	*(char)
,	O
size	long
)	O
;	O
*	O
psize	*(long)
-=	O
size	long
;	O
*	O
pbuf	*(*(char))
+=	O
size	long
;	O
if	O
(	O
*	O
psize	*(long)
)	O
*	O
*	O
pbuf	*(*(char))
=	O
0	int
;	O
else	O
(	O
*	O
pbuf	*(*(char))
)	O
[	O
-	O
1	int
]	O
=	O
0	int
;	O
return	O
size	long
;	O
}	O
}	O
void	O
sockaddr_to_str	(*(struct(short,array(char))),int,*(char),long,*(long))->(void)
(	O
const	O
struct	O
sockaddr	struct(short,array(char))
*	O
sa	*(struct(short,array(char)))
,	O
int	O
salen	int
,	O
char	O
*	O
bufptr	*(char)
,	O
size_t	long
buflen	long
,	O
size_t	long
*	O
plen	*(long)
)	O
{	O
char	O
buf	*(void)
[	O
INT_BUFSIZE_BOUND	O
(	O
uintmax_t	long
)	O
]	O
;	O
size_t	long
len	int
=	O
0	int
;	O
switch	O
(	O
sa	*(struct(short,array(char)))
->	O
sa_family	short
)	O
{	O
case	O
AF_INET	O
:	O
case	O
AF_INET6	O
:	O
{	O
char	O
host	*(char)
[	O
NI_MAXHOST	int
]	O
;	O
char	O
srv	array(char)
[	O
NI_MAXSERV	int
]	O
;	O
if	O
(	O
getnameinfo	(*(struct(short,array(char))),int,*(char),int,*(char),int,int)->(int)
(	O
sa	*(struct(short,array(char)))
,	O
salen	int
,	O
host	*(char)
,	O
sizeof	O
(	O
host	*(char)
)	O
,	O
srv	array(char)
,	O
sizeof	O
(	O
srv	array(char)
)	O
,	O
NI_NUMERICHOST	int
|	O
NI_NUMERICSERV	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
sa	*(struct(short,array(char)))
->	O
sa_family	short
==	O
AF_INET6	O
)	O
{	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"inet6://["	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
host	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"]:"	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
srv	array(char)
)	O
;	O
}	O
else	O
{	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"inet://"	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
host	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
":"	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
srv	array(char)
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
sa	*(struct(short,array(char)))
->	O
sa_family	short
==	O
AF_INET6	O
)	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"inet6://[getnameinfo failed]"	*(char)
)	O
;	O
else	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"inet://[getnameinfo failed]"	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
case	O
AF_UNIX	O
:	O
{	O
struct	O
sockaddr_un	struct(short,array(char))
*	O
s_un	*(struct(short,array(char)))
=	O
(	O
struct	O
sockaddr_un	struct(short,array(char))
*	O
)	O
sa	*(struct(short,array(char)))
;	O
if	O
(	O
S_UN_NAME	O
(	O
s_un	*(struct(short,array(char)))
,	O
salen	int
)	O
[	O
0	int
]	O
==	O
0	int
)	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"anonymous socket"	*(char)
)	O
;	O
else	O
{	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"socket "	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
s_un	*(struct(short,array(char)))
->	O
sun_path	array(char)
)	O
;	O
}	O
break	O
;	O
}	O
default	O
:	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"{Unsupported family: "	*(char)
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
umaxtostr	(long,*(char))->(*(char))
(	O
sa	*(struct(short,array(char)))
->	O
sa_family	short
,	O
buf	*(void)
)	O
)	O
;	O
len	int
+=	O
mu_stpcpy	(*(*(char)),*(long),*(char))->(long)
(	O
&	O
bufptr	*(char)
,	O
&	O
buflen	long
,	O
"}"	*(char)
)	O
;	O
}	O
if	O
(	O
plen	*(long)
)	O
*	O
plen	*(long)
=	O
len	int
+	O
1	int
;	O
}	O
char	O
*	O
sockaddr_to_astr	(*(struct(short,array(char))),int)->(*(char))
(	O
const	O
struct	O
sockaddr	struct(short,array(char))
*	O
sa	*(struct(short,array(char)))
,	O
int	O
salen	int
)	O
{	O
size_t	long
size	long
;	O
char	O
*	O
p	*(char)
;	O
sockaddr_to_str	(*(struct(short,array(char))),int,*(char),long,*(long))->(void)
(	O
sa	*(struct(short,array(char)))
,	O
salen	int
,	O
NULL	O
,	O
0	int
,	O
&	O
size	long
)	O
;	O
p	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
size	long
)	O
;	O
sockaddr_to_str	(*(struct(short,array(char))),int,*(char),long,*(long))->(void)
(	O
sa	*(struct(short,array(char)))
,	O
salen	int
,	O
p	*(char)
,	O
size	long
,	O
NULL	O
)	O
;	O
return	O
p	*(char)
;	O
}	O
