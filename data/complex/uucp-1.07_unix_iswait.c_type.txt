typedef	O
int	O
wait_status	int
;	O
int	O
ixswait	(long,*(char))->(int)
(	O
ipid	int
,	O
zreport	*(char)
)	O
unsigned	O
long	O
ipid	int
;	O
const	O
char	O
*	O
zreport	*(char)
;	O
{	O
wait_status	int
istat	int
;	O
while	O
(	O
waitpid	(int,*(int),int)->(int)
(	O
(	O
pid_t	int
)	O
ipid	int
,	O
(	O
pointer	*(void)
)	O
&	O
istat	int
,	O
0	int
)	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
!=	O
EINTR	int
)	O
{	O
if	O
(	O
zreport	*(char)
!=	O
NULL	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"waitpid: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
DEBUG_MESSAGE2	O
(	O
DEBUG_EXECUTE	O
,	O
"%s %d"	*(char)
,	O
WIFEXITED	O
(	O
istat	int
)	O
?	O
"Exit status"	*(char)
:	O
"Signal"	*(char)
,	O
WIFEXITED	O
(	O
istat	int
)	O
?	O
WEXITSTATUS	O
(	O
istat	int
)	O
:	O
WTERMSIG	O
(	O
istat	int
)	O
)	O
;	O
if	O
(	O
WIFEXITED	O
(	O
istat	int
)	O
&&	O
WEXITSTATUS	O
(	O
istat	int
)	O
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
zreport	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
!	O
WIFEXITED	O
(	O
istat	int
)	O
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"%s: Got signal %d"	*(char)
,	O
zreport	*(char)
,	O
WTERMSIG	O
(	O
istat	int
)	O
)	O
;	O
else	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"%s: Exit status %d"	*(char)
,	O
zreport	*(char)
,	O
WEXITSTATUS	O
(	O
istat	int
)	O
)	O
;	O
}	O
if	O
(	O
WIFEXITED	O
(	O
istat	int
)	O
)	O
return	O
WEXITSTATUS	O
(	O
istat	int
)	O
;	O
else	O
return	O
-	O
1	int
;	O
}	O
