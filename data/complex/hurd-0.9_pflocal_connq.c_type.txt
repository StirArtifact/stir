struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
{	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
head	*(struct)
;	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
*	O
tail	*(*(struct))
;	O
unsigned	O
count	int
;	O
unsigned	O
max	int
;	O
pthread_cond_t	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
listeners	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
;	O
unsigned	O
num_listeners	int
;	O
pthread_cond_t	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
connectors	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
;	O
unsigned	O
num_connectors	int
;	O
pthread_mutex_t	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
;	O
}	O
;	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
{	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
struct	O
sock	*(*(struct))
*	O
sock	*(*(struct))
;	O
}	O
;	O
static	O
inline	O
void	O
connq_request_init	(*(struct(*(struct(*`,*`)),*(struct))),*(struct))->(void)
(	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
,	O
struct	O
sock	*(*(struct))
*	O
sock	*(*(struct))
)	O
{	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
->	O
sock	*(*(struct))
=	O
sock	*(*(struct))
;	O
}	O
static	O
void	O
connq_request_enqueue	(*(struct(*(struct(*`,*`)),*(*(struct`)),int,int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long))),*(struct(*(struct(*`,*`)),*(struct))))->(void)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
,	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
)	O
{	O
assert	O
(	O
pthread_mutex_trylock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
)	O
;	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
=	O
NULL	O
;	O
*	O
cq	*(*(struct))
->	O
tail	*(*(struct))
=	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
cq	*(*(struct))
->	O
tail	*(*(struct))
=	O
&	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
cq	*(*(struct))
->	O
count	int
++	O
;	O
}	O
static	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
connq_request_dequeue	(*(struct(*(struct(*`,*`)),*(*(struct`)),int,int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long))))->(*(struct(*(struct(*`,*`)),*(struct))))
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
)	O
{	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
assert	O
(	O
pthread_mutex_trylock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
)	O
;	O
assert	O
(	O
cq	*(*(struct))
->	O
head	*(struct)
)	O
;	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
=	O
cq	*(*(struct))
->	O
head	*(struct)
;	O
cq	*(*(struct))
->	O
head	*(struct)
=	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
if	O
(	O
!	O
cq	*(*(struct))
->	O
head	*(struct)
)	O
cq	*(*(struct))
->	O
tail	*(*(struct))
=	O
&	O
cq	*(*(struct))
->	O
head	*(struct)
;	O
cq	*(*(struct))
->	O
count	int
--	O
;	O
return	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
}	O
error_t	int
connq_create	(*(*(struct)))->(int)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
*	O
cq	*(*(struct))
)	O
{	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
)	O
)	O
;	O
if	O
(	O
!	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
)	O
return	O
ENOBUFS	int
;	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
head	*(struct)
=	O
NULL	O
;	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
tail	*(*(struct))
=	O
&	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
head	*(struct)
;	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
count	int
=	O
0	int
;	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
max	int
=	O
0	int
;	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
num_listeners	int
=	O
0	int
;	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
num_connectors	int
=	O
0	int
;	O
pthread_mutex_init	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)),*(union(array(char),int)))->(int)
(	O
&	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
,	O
NULL	O
)	O
;	O
pthread_cond_init	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)),*(union(array(char),int)))->(int)
(	O
&	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
listeners	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
,	O
NULL	O
)	O
;	O
pthread_cond_init	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)),*(union(array(char),int)))->(int)
(	O
&	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
->	O
connectors	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
,	O
NULL	O
)	O
;	O
*	O
cq	*(*(struct))
=	O
new	*(struct(*(struct(*(struct`),*(struct`))),*(*(struct(*`,*`))),int,int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))
;	O
return	O
0	int
;	O
}	O
void	O
connq_destroy	(*(struct))->(void)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
)	O
{	O
assert	O
(	O
!	O
cq	*(*(struct))
->	O
head	*(struct)
)	O
;	O
assert	O
(	O
cq	*(*(struct))
->	O
count	int
==	O
0	int
)	O
;	O
free	(*(void))->(void)
(	O
cq	*(*(struct))
)	O
;	O
}	O
error_t	int
connq_listen	(*(struct),*(struct(long,long)),*(*(struct)))->(int)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
,	O
struct	O
timespec	struct(long,long)
*	O
tsp	*(struct(long,long))
,	O
struct	O
sock	*(*(struct))
*	O
*	O
sock	*(*(struct))
)	O
{	O
error_t	int
err	int
=	O
0	int
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
if	O
(	O
tsp	*(struct(long,long))
&&	O
tsp	*(struct(long,long))
->	O
tv_sec	long
==	O
0	int
&&	O
tsp	*(struct(long,long))
->	O
tv_nsec	long
==	O
0	int
&&	O
cq	*(*(struct))
->	O
count	int
==	O
0	int
&&	O
cq	*(*(struct))
->	O
num_connectors	int
==	O
0	int
)	O
{	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
EWOULDBLOCK	O
;	O
}	O
if	O
(	O
!	O
sock	*(*(struct))
&&	O
(	O
cq	*(*(struct))
->	O
count	int
>	O
0	int
||	O
cq	*(*(struct))
->	O
num_connectors	int
>	O
0	int
)	O
)	O
{	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
0	int
;	O
}	O
cq	*(*(struct))
->	O
num_listeners	int
++	O
;	O
if	O
(	O
cq	*(*(struct))
->	O
count	int
==	O
0	int
)	O
{	O
assert	O
(	O
!	O
cq	*(*(struct))
->	O
head	*(struct)
)	O
;	O
if	O
(	O
cq	*(*(struct))
->	O
num_connectors	int
>	O
0	int
)	O
pthread_cond_signal	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
connectors	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
)	O
;	O
do	O
{	O
err	int
=	O
pthread_hurd_cond_timedwait_np	()->(int)
(	O
&	O
cq	*(*(struct))
->	O
listeners	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
,	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
,	O
tsp	*(struct(long,long))
)	O
;	O
if	O
(	O
err	int
)	O
{	O
cq	*(*(struct))
->	O
num_listeners	int
--	O
;	O
goto	O
out	O
;	O
}	O
}	O
while	O
(	O
cq	*(*(struct))
->	O
count	int
==	O
0	int
)	O
;	O
}	O
assert	O
(	O
cq	*(*(struct))
->	O
head	*(struct)
)	O
;	O
if	O
(	O
sock	*(*(struct))
)	O
{	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
=	O
connq_request_dequeue	(*(struct(*(struct(*`,*`)),*(*(struct`)),int,int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long))))->(*(struct(*(struct(*`,*`)),*(struct))))
(	O
cq	*(*(struct))
)	O
;	O
*	O
sock	*(*(struct))
=	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
->	O
sock	*(*(struct))
;	O
free	(*(void))->(void)
(	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
)	O
;	O
}	O
else	O
if	O
(	O
cq	*(*(struct))
->	O
num_listeners	int
>	O
0	int
)	O
pthread_cond_signal	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
listeners	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
)	O
;	O
else	O
{	O
}	O
out	O
:	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
err	int
;	O
}	O
error_t	int
connq_connect	(*(struct),int)->(int)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
,	O
int	O
noblock	int
)	O
{	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
if	O
(	O
noblock	int
&&	O
cq	*(*(struct))
->	O
count	int
+	O
cq	*(*(struct))
->	O
num_connectors	int
>=	O
cq	*(*(struct))
->	O
max	int
+	O
cq	*(*(struct))
->	O
num_listeners	int
)	O
{	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
EWOULDBLOCK	O
;	O
}	O
cq	*(*(struct))
->	O
num_connectors	int
++	O
;	O
while	O
(	O
cq	*(*(struct))
->	O
count	int
+	O
cq	*(*(struct))
->	O
num_connectors	int
>	O
cq	*(*(struct))
->	O
max	int
+	O
cq	*(*(struct))
->	O
num_listeners	int
)	O
if	O
(	O
pthread_hurd_cond_wait_np	()->(int)
(	O
&	O
cq	*(*(struct))
->	O
connectors	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
,	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
)	O
{	O
cq	*(*(struct))
->	O
num_connectors	int
--	O
;	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
EINTR	int
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
0	int
;	O
}	O
void	O
connq_connect_complete	(*(struct),*(struct))->(void)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
,	O
struct	O
sock	*(*(struct))
*	O
sock	*(*(struct))
)	O
{	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
*	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
;	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
struct	O
connq_request	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct))),*(struct))
)	O
)	O
;	O
if	O
(	O
!	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
)	O
abort	()->(void)
(	O
)	O
;	O
connq_request_init	(*(struct(*(struct(*`,*`)),*(struct))),*(struct))->(void)
(	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
,	O
sock	*(*(struct))
)	O
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
assert	O
(	O
cq	*(*(struct))
->	O
num_connectors	int
>	O
0	int
)	O
;	O
cq	*(*(struct))
->	O
num_connectors	int
--	O
;	O
connq_request_enqueue	(*(struct(*(struct(*`,*`)),*(*(struct`)),int,int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union`,union`,array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct`),array(char),long))),*(struct(*(struct(*`,*`)),*(struct))))->(void)
(	O
cq	*(*(struct))
,	O
req	*(struct(*(struct(*(struct`),*(struct`))),*(struct)))
)	O
;	O
if	O
(	O
cq	*(*(struct))
->	O
num_listeners	int
>	O
0	int
)	O
{	O
cq	*(*(struct))
->	O
num_listeners	int
--	O
;	O
pthread_cond_signal	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
listeners	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
)	O
;	O
}	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
}	O
void	O
connq_connect_cancel	(*(struct))->(void)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
)	O
{	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
assert	O
(	O
cq	*(*(struct))
->	O
num_connectors	int
>	O
0	int
)	O
;	O
cq	*(*(struct))
->	O
num_connectors	int
--	O
;	O
if	O
(	O
cq	*(*(struct))
->	O
count	int
+	O
cq	*(*(struct))
->	O
num_connectors	int
>=	O
cq	*(*(struct))
->	O
max	int
+	O
cq	*(*(struct))
->	O
num_listeners	int
)	O
pthread_cond_signal	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
connectors	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
)	O
;	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
}	O
error_t	int
connq_set_length	(*(struct),int)->(int)
(	O
struct	O
connq	struct(*(struct),*(*(struct)),int,int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long),int,union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long))
*	O
cq	*(*(struct))
,	O
int	O
max	int
)	O
{	O
int	O
omax	int
;	O
pthread_mutex_lock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
omax	int
=	O
cq	*(*(struct))
->	O
max	int
;	O
cq	*(*(struct))
->	O
max	int
=	O
max	int
;	O
if	O
(	O
max	int
>	O
omax	int
&&	O
cq	*(*(struct))
->	O
count	int
>=	O
omax	int
&&	O
cq	*(*(struct))
->	O
count	int
<	O
max	int
&&	O
cq	*(*(struct))
->	O
num_connectors	int
>=	O
cq	*(*(struct))
->	O
num_listeners	int
)	O
pthread_cond_broadcast	(*(union(struct(union(long long,struct`),union(long long,struct`),array(int),array(int),int,int,array(int)),array(char),long long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
listeners	union(struct(union(long long,struct(int,int)),union(long long,struct(int,int)),array(int),array(int),int,int,array(int)),array(char),long long)
)	O
;	O
pthread_mutex_unlock	(*(union(struct(int,int,int,int,int,short,short,struct(*`,*`)),array(char),long)))->(int)
(	O
&	O
cq	*(*(struct))
->	O
lock	union(struct(int,int,int,int,int,short,short,struct(*(struct(*`,*`)),*(struct(*`,*`)))),array(char),long)
)	O
;	O
return	O
0	int
;	O
}	O
