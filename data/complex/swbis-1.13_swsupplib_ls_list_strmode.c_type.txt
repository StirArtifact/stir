void	O
swbis_strmode	(int,*(char))->(void)
(	O
mode_t	int
mode	int
,	O
char	O
*	O
p	*(char)
)	O
{	O
switch	O
(	O
mode	int
&	O
S_IFMT	O
)	O
{	O
case	O
S_IFDIR	O
:	O
*	O
p	*(char)
++	O
=	O
'd'	O
;	O
break	O
;	O
case	O
S_IFCHR	O
:	O
*	O
p	*(char)
++	O
=	O
'c'	O
;	O
break	O
;	O
case	O
S_IFBLK	O
:	O
*	O
p	*(char)
++	O
=	O
'b'	O
;	O
break	O
;	O
case	O
S_IFREG	O
:	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
break	O
;	O
case	O
S_IFLNK	O
:	O
*	O
p	*(char)
++	O
=	O
'l'	O
;	O
break	O
;	O
case	O
S_IFSOCK	O
:	O
*	O
p	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
case	O
S_IFIFO	O
:	O
*	O
p	*(char)
++	O
=	O
'p'	O
;	O
break	O
;	O
default	O
:	O
*	O
p	*(char)
++	O
=	O
'?'	O
;	O
break	O
;	O
}	O
if	O
(	O
mode	int
&	O
S_IRUSR	O
)	O
*	O
p	*(char)
++	O
=	O
'r'	O
;	O
else	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
if	O
(	O
mode	int
&	O
S_IWUSR	O
)	O
*	O
p	*(char)
++	O
=	O
'w'	O
;	O
else	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
switch	O
(	O
mode	int
&	O
(	O
S_IXUSR	O
|	O
S_ISUID	O
)	O
)	O
{	O
case	O
0	int
:	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
break	O
;	O
case	O
S_IXUSR	O
:	O
*	O
p	*(char)
++	O
=	O
'x'	O
;	O
break	O
;	O
case	O
S_ISUID	O
:	O
*	O
p	*(char)
++	O
=	O
'S'	O
;	O
break	O
;	O
case	O
S_IXUSR	O
|	O
S_ISUID	O
:	O
*	O
p	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
}	O
if	O
(	O
mode	int
&	O
S_IRGRP	O
)	O
*	O
p	*(char)
++	O
=	O
'r'	O
;	O
else	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
if	O
(	O
mode	int
&	O
S_IWGRP	O
)	O
*	O
p	*(char)
++	O
=	O
'w'	O
;	O
else	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
switch	O
(	O
mode	int
&	O
(	O
S_IXGRP	O
|	O
S_ISGID	O
)	O
)	O
{	O
case	O
0	int
:	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
break	O
;	O
case	O
S_IXGRP	O
:	O
*	O
p	*(char)
++	O
=	O
'x'	O
;	O
break	O
;	O
case	O
S_ISGID	O
:	O
*	O
p	*(char)
++	O
=	O
'S'	O
;	O
break	O
;	O
case	O
S_IXGRP	O
|	O
S_ISGID	O
:	O
*	O
p	*(char)
++	O
=	O
's'	O
;	O
break	O
;	O
}	O
if	O
(	O
mode	int
&	O
S_IROTH	O
)	O
*	O
p	*(char)
++	O
=	O
'r'	O
;	O
else	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
if	O
(	O
mode	int
&	O
S_IWOTH	O
)	O
*	O
p	*(char)
++	O
=	O
'w'	O
;	O
else	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
switch	O
(	O
mode	int
&	O
(	O
S_IXOTH	O
|	O
S_ISVTX	O
)	O
)	O
{	O
case	O
0	int
:	O
*	O
p	*(char)
++	O
=	O
'-'	O
;	O
break	O
;	O
case	O
S_IXOTH	O
:	O
*	O
p	*(char)
++	O
=	O
'x'	O
;	O
break	O
;	O
case	O
S_ISVTX	O
:	O
*	O
p	*(char)
++	O
=	O
'T'	O
;	O
break	O
;	O
case	O
S_IXOTH	O
|	O
S_ISVTX	O
:	O
*	O
p	*(char)
++	O
=	O
't'	O
;	O
break	O
;	O
}	O
*	O
p	*(char)
++	O
=	O
' '	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
}	O
