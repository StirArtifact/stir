void	O
flipgeneric	(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))->(void)
(	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
{	O
pixel_t	char
*	O
*	O
line	*(*(char))
;	O
assert	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
nimages	int
==	O
2	int
)	O
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currimage	int
^=	O
1	int
;	O
line	*(*(char))
=	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
=	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
=	O
line	*(*(char))
;	O
}	O
int	O
bytesperpixel	int
(	O
int	O
type	int
)	O
{	O
switch	O
(	O
type	int
)	O
{	O
case	O
MBITMAP	int
:	O
case	O
LBITMAP	int
:	O
case	O
LIBITMAP	int
:	O
case	O
MIBITMAP	int
:	O
return	O
0	int
;	O
case	O
SMALLITER	O
:	O
case	O
FIXEDCOLOR	int
:	O
case	O
GRAYSCALE	int
:	O
case	O
C256	int
:	O
return	O
1	int
;	O
case	O
LARGEITER	int
:	O
case	O
REALCOLOR	int
:	O
case	O
HICOLOR	int
:	O
return	O
2	int
;	O
case	O
TRUECOLOR	int
:	O
case	O
TRUECOLORMI	int
:	O
return	O
4	int
;	O
default	O
:	O
assert	O
(	O
0	int
)	O
;	O
case	O
TRUECOLOR24	int
:	O
return	O
3	int
;	O
}	O
}	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
create_image_lines	(int,int,int,*(*(char)),*(*(char)),*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*((*(struct(float,float,*`,*`,*`,int,int,int,int,int,int,int,int,*`,*`)))->(void)),int,float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
int	O
width	int
,	O
int	O
height	int
,	O
int	O
nimages	int
,	O
pixel_t	char
*	O
*	O
lines1	*(*(char))
,	O
pixel_t	char
*	O
*	O
lines2	*(*(char))
,	O
struct	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
*	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
void	O
(	O
*	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
)	O
(	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
,	O
int	O
flags	int
,	O
float	O
pixelwidth	float
,	O
float	O
pixelheight	float
)	O
{	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
static	O
int	O
version	int
=	O
1	int
;	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
=	O
calloc	(long,long)->(*(void))
(	O
sizeof	O
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
,	O
1	int
)	O
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
==	O
NULL	O
)	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
=	O
flipgeneric	(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))->(void)
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
width	int
=	O
width	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
=	O
height	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
nimages	int
=	O
nimages	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
bytesperpixel	int
=	O
bytesperpixel	int
(	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
->	O
type	int
)	O
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
=	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currimage	int
=	O
0	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
=	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flags	int
=	O
flags	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
version	int
=	O
version	int
;	O
version	int
+=	O
65535	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
=	O
lines1	*(*(char))
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
=	O
lines2	*(*(char))
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
pixelwidth	float
=	O
pixelwidth	float
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
pixelheight	float
=	O
pixelheight	float
;	O
if	O
(	O
lines1	*(*(char))
!=	O
NULL	O
&&	O
(	O
nimages	int
!=	O
2	int
||	O
lines2	*(*(char))
!=	O
NULL	O
)	O
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
=	O
lines1	*(*(char))
[	O
1	int
]	O
-	O
lines1	*(*(char))
[	O
0	int
]	O
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
<	O
0	int
)	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
=	O
-	O
1	int
;	O
else	O
{	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
height	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
if	O
(	O
lines1	*(*(char))
[	O
0	int
]	O
-	O
lines1	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
!=	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
*	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
if	O
(	O
nimages	int
==	O
2	int
&&	O
lines2	*(*(char))
[	O
0	int
]	O
-	O
lines2	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
!=	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
*	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
=	O
-	O
1	int
;	O
break	O
;	O
}	O
}	O
}	O
}	O
else	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
=	O
-	O
1	int
;	O
return	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
}	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
create_image_cont	(int,int,int,int,*(char),*(char),*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*((*(struct(float,float,*`,*`,*`,int,int,int,int,int,int,int,int,*`,*`)))->(void)),int,float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
int	O
width	int
,	O
int	O
height	int
,	O
int	O
scanlinesize	int
,	O
int	O
nimages	int
,	O
pixel_t	char
*	O
buf1	*(char)
,	O
pixel_t	char
*	O
buf2	*(char)
,	O
struct	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
*	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
void	O
(	O
*	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
)	O
(	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
,	O
int	O
flags	int
,	O
float	O
pixelwidth	float
,	O
float	O
pixelheight	float
)	O
{	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
=	O
create_image_lines	(int,int,int,*(*(char)),*(*(char)),*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*((*(struct(float,float,*`,*`,*`,int,int,int,int,int,int,int,int,*`,*`)))->(void)),int,float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
width	int
,	O
height	int
,	O
nimages	int
,	O
NULL	O
,	O
NULL	O
,	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
flip	*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void))
,	O
flags	int
,	O
pixelwidth	float
,	O
pixelheight	float
)	O
;	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
==	O
NULL	O
)	O
{	O
return	O
NULL	O
;	O
}	O
if	O
(	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
)	O
*	O
height	int
)	O
)	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
nimages	int
==	O
2	int
)	O
{	O
if	O
(	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
)	O
*	O
height	int
)	O
)	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
)	O
;	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
=	O
buf1	*(char)
;	O
buf1	*(char)
+=	O
scanlinesize	int
;	O
}	O
if	O
(	O
nimages	int
==	O
2	int
)	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
=	O
buf2	*(char)
;	O
buf2	*(char)
+=	O
scanlinesize	int
;	O
}	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flags	int
|=	O
FREELINES	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
scanline	int
=	O
scanlinesize	int
;	O
return	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
}	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
create_image_mem	(int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
int	O
width	int
,	O
int	O
height	int
,	O
int	O
nimages	int
,	O
struct	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
*	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
float	O
pixelwidth	float
,	O
float	O
pixelheight	float
)	O
{	O
unsigned	O
char	O
*	O
data	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
(	O
(	O
width	int
+	O
3	int
)	O
&	O
~	O
3	int
)	O
*	O
height	int
,	O
bytesperpixel	int
(	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
->	O
type	int
)	O
)	O
;	O
unsigned	O
char	O
*	O
data1	*(char)
=	O
(	O
nimages	int
==	O
2	int
?	O
calloc	(long,long)->(*(void))
(	O
(	O
(	O
width	int
+	O
3	int
)	O
&	O
~	O
3	int
)	O
*	O
height	int
,	O
bytesperpixel	int
(	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
->	O
type	int
)	O
)	O
:	O
NULL	O
)	O
;	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
;	O
if	O
(	O
data	*(void)
==	O
NULL	O
)	O
return	O
(	O
NULL	O
)	O
;	O
if	O
(	O
nimages	int
==	O
2	int
&&	O
data1	*(char)
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
data	*(void)
)	O
;	O
return	O
NULL	O
;	O
}	O
img	*(struct(float,float,*(*(char)),*(*(char))))
=	O
create_image_cont	(int,int,int,int,*(char),*(char),*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*((*(struct(float,float,*`,*`,*`,int,int,int,int,int,int,int,int,*`,*`)))->(void)),int,float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
width	int
,	O
height	int
,	O
(	O
(	O
width	int
+	O
3	int
)	O
&	O
~	O
3	int
)	O
*	O
bytesperpixel	int
(	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
->	O
type	int
)	O
,	O
nimages	int
,	O
data	*(void)
,	O
data1	*(char)
,	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
NULL	O
,	O
0	int
,	O
pixelwidth	float
,	O
pixelheight	float
)	O
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
data	*(void)
)	O
;	O
if	O
(	O
data1	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
data1	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flags	int
|=	O
FREEDATA	int
;	O
return	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
}	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
create_subimage	(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))),int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
,	O
int	O
width	int
,	O
int	O
height	int
,	O
int	O
nimages	int
,	O
struct	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
*	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
float	O
pixelwidth	float
,	O
float	O
pixelheight	float
)	O
{	O
int	O
size	int
=	O
height	int
*	O
bytesperpixel	int
(	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
->	O
type	int
)	O
;	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
int	O
shift1	int
=	O
0	int
,	O
shift2	int
=	O
0	int
;	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
;	O
if	O
(	O
size	int
>	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
height	int
*	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
bytesperpixel	int
||	O
height	int
>	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
height	int
||	O
(	O
nimages	int
==	O
2	int
&&	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
nimages	int
==	O
1	int
)	O
)	O
return	O
(	O
create_image_mem	(int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
width	int
,	O
height	int
,	O
nimages	int
,	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
pixelwidth	float
,	O
pixelheight	float
)	O
)	O
;	O
nimages	int
=	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
nimages	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
=	O
create_image_lines	(int,int,int,*(*(char)),*(*(char)),*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*((*(struct(float,float,*`,*`,*`,int,int,int,int,int,int,int,int,*`,*`)))->(void)),int,float,float)->(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))
(	O
width	int
,	O
height	int
,	O
nimages	int
,	O
NULL	O
,	O
NULL	O
,	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
,	O
NULL	O
,	O
0	int
,	O
pixelwidth	float
,	O
pixelheight	float
)	O
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
)	O
*	O
height	int
)	O
)	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
nimages	int
==	O
2	int
)	O
{	O
if	O
(	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
)	O
*	O
height	int
)	O
)	O
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
)	O
;	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
shift1	int
=	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
height	int
-	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
;	O
shift2	int
=	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
width	int
*	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
bytesperpixel	int
-	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
width	int
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
bytesperpixel	int
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
=	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
currlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
+	O
shift1	int
]	O
+	O
shift2	int
;	O
}	O
if	O
(	O
nimages	int
==	O
2	int
)	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
{	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
=	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
oldlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
+	O
shift1	int
]	O
+	O
shift2	int
;	O
}	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flags	int
|=	O
FREELINES	int
;	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currimage	int
=	O
simg	*(struct(float,float,*(*(char)),*(*(char)),*((*(struct`))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),*(void)))
->	O
currimage	int
;	O
return	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
}	O
void	O
destroy_image	(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))->(void)
(	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
{	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flags	int
&	O
FREEDATA	int
)	O
{	O
free	(*(void))->(void)
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
)	O
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
nimages	int
==	O
2	int
)	O
free	(*(void))->(void)
(	O
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
)	O
;	O
}	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
flags	int
&	O
FREELINES	int
)	O
{	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
)	O
;	O
if	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
nimages	int
==	O
2	int
)	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
oldlines	*(*(char))
)	O
;	O
}	O
free	(*(void))->(void)
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
;	O
}	O
void	O
clear_image	(*(struct(float,float,*(*(char)),*(*(char)),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*`,*`,int,*`,*`,*`,*`,int,*`)),*(void))))->(void)
(	O
struct	O
image	struct(float,float,*(*(char)),*(*(char)),*((*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))))->(void)),int,int,int,int,int,int,int,int,*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct`),int,int,int,int)->(int)),*((*(struct`),int,int,*(array(char)))->(void)),*((*(struct`))->(void)),*((*(struct`),int)->(void)),int,*(void))),*(void))
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
)	O
{	O
int	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
;	O
int	O
width	int
=	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
width	int
*	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
bytesperpixel	int
;	O
if	O
(	O
!	O
width	int
)	O
width	int
=	O
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
width	int
+	O
7	int
)	O
/	O
8	int
;	O
for	O
(	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
=	O
0	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
<	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
height	int
;	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
++	O
)	O
memset	(*(void),int,long)->(*(void))
(	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
currlines	*(*(char))
[	O
i	*(struct(*((*(struct`))->(void)),*(struct(float,float,*(*`),*(*`),*((*`)->(void)),int,int,int,int,int,int,int,int,*(struct`),*(void))),*(struct),int))
]	O
,	O
img	*(struct(float,float,*(*(char)),*(*(char))))
->	O
palette	struct(int,int,int,int,int,*(int),*(array(char)),int,*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,int,int)->(int)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int,int,*(array(char)))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))))->(void)),*((*(struct(int,int,int,int,int,*(int),*(array(char)),int,*((*`,int,int,int,int)->(int)),*((*`,int,int,*`)->(void)),*((*`)->(void)),*((*`,int)->(void)),int,*(void))),int)->(void)),int,*(void))
->	O
pixels	*(int)
[	O
0	int
]	O
,	O
width	int
)	O
;	O
}	O
