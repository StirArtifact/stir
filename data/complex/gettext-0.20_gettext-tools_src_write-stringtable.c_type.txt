static	O
void	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
ostream_t	*(struct)
stream	*(struct)
,	O
const	O
char	O
*	O
str	*(char)
)	O
{	O
const	O
char	O
*	O
str_limit	*(char)
=	O
str	*(char)
+	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\""	*(char)
)	O
;	O
while	O
(	O
str	*(char)
<	O
str_limit	*(char)
)	O
{	O
unsigned	O
char	O
c	char
=	O
(	O
unsigned	O
char	O
)	O
*	O
str	*(char)
++	O
;	O
if	O
(	O
c	char
==	O
'\t'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\t"	*(char)
)	O
;	O
else	O
if	O
(	O
c	char
==	O
'\n'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\n"	*(char)
)	O
;	O
else	O
if	O
(	O
c	char
==	O
'\r'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\r"	*(char)
)	O
;	O
else	O
if	O
(	O
c	char
==	O
'\f'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\\f"	*(char)
)	O
;	O
else	O
if	O
(	O
c	char
==	O
'\\'	O
||	O
c	char
==	O
'"'	O
)	O
{	O
char	O
seq	array(char)
[	O
2	int
]	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
'\\'	O
;	O
seq	array(char)
[	O
1	int
]	O
=	O
c	char
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
2	int
)	O
;	O
}	O
else	O
{	O
char	O
seq	array(char)
[	O
1	int
]	O
;	O
seq	array(char)
[	O
0	int
]	O
=	O
c	char
;	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
seq	array(char)
,	O
1	int
)	O
;	O
}	O
}	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\""	*(char)
)	O
;	O
}	O
static	O
void	O
write_message	(*(struct),*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),long,bool)->(void)
(	O
ostream_t	*(struct)
stream	*(struct)
,	O
const	O
message_ty	struct
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
!=	O
NULL	O
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
const	O
char	O
*	O
s	*(char)
=	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment	*(struct(*(*(char)),long,long))
->	O
item	*(*(char))
[	O
j	long
]	O
;	O
if	O
(	O
c_strstr	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"*/"	*(char)
)	O
==	O
NULL	O
)	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"/*"	*(char)
)	O
;	O
if	O
(	O
*	O
s	*(char)
!=	O
'\0'	O
&&	O
*	O
s	*(char)
!=	O
'\n'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" "	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
s	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" */\n"	*(char)
)	O
;	O
}	O
else	O
do	O
{	O
const	O
char	O
*	O
e	*(char)
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"//"	*(char)
)	O
;	O
if	O
(	O
*	O
s	*(char)
!=	O
'\0'	O
&&	O
*	O
s	*(char)
!=	O
'\n'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" "	*(char)
)	O
;	O
e	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s	*(char)
,	O
'\n'	O
)	O
;	O
if	O
(	O
e	*(char)
==	O
NULL	O
)	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
s	*(char)
)	O
;	O
s	*(char)
=	O
NULL	O
;	O
}	O
else	O
{	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
s	*(char)
,	O
e	*(char)
-	O
s	*(char)
)	O
;	O
s	*(char)
=	O
e	*(char)
+	O
1	int
;	O
}	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\n"	*(char)
)	O
;	O
}	O
while	O
(	O
s	*(char)
!=	O
NULL	O
)	O
;	O
}	O
}	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
!=	O
NULL	O
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
const	O
char	O
*	O
s	*(char)
=	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
comment_dot	*(struct(*(*(char)),long,long))
->	O
item	*(*(char))
[	O
j	long
]	O
;	O
if	O
(	O
c_strstr	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"*/"	*(char)
)	O
==	O
NULL	O
)	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"/* Comment: "	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
s	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" */\n"	*(char)
)	O
;	O
}	O
else	O
{	O
bool	bool
first	*(struct)
=	O
true	int
;	O
do	O
{	O
const	O
char	O
*	O
e	*(char)
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"//"	*(char)
)	O
;	O
if	O
(	O
first	*(struct)
||	O
(	O
*	O
s	*(char)
!=	O
'\0'	O
&&	O
*	O
s	*(char)
!=	O
'\n'	O
)	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" "	*(char)
)	O
;	O
if	O
(	O
first	*(struct)
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"Comment: "	*(char)
)	O
;	O
e	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
s	*(char)
,	O
'\n'	O
)	O
;	O
if	O
(	O
e	*(char)
==	O
NULL	O
)	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
s	*(char)
)	O
;	O
s	*(char)
=	O
NULL	O
;	O
}	O
else	O
{	O
ostream_write_mem	(*(struct),*(void),long)->(void)
(	O
stream	*(struct)
,	O
s	*(char)
,	O
e	*(char)
-	O
s	*(char)
)	O
;	O
s	*(char)
=	O
e	*(char)
+	O
1	int
;	O
}	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\n"	*(char)
)	O
;	O
first	*(struct)
=	O
false	int
;	O
}	O
while	O
(	O
s	*(char)
!=	O
NULL	O
)	O
;	O
}	O
}	O
}	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
filepos_count	long
!=	O
0	int
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
filepos_count	long
;	O
++	O
j	long
)	O
{	O
lex_pos_ty	struct
*	O
pp	*(struct(*(char),long))
=	O
&	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
filepos	*(struct(*(char),long))
[	O
j	long
]	O
;	O
const	O
char	O
*	O
cp	*(char)
=	O
pp	*(struct(*(char),long))
->	O
file_name	*(char)
;	O
char	O
*	O
str	*(char)
;	O
while	O
(	O
cp	*(char)
[	O
0	int
]	O
==	O
'.'	O
&&	O
cp	*(char)
[	O
1	int
]	O
==	O
'/'	O
)	O
cp	*(char)
+=	O
2	int
;	O
str	*(char)
=	O
xasprintf	(*(char))->(*(char))
(	O
"/* File: %s:%ld */\n"	*(char)
,	O
cp	*(char)
,	O
(	O
long	O
)	O
pp	*(struct(*(char),long))
->	O
line_number	long
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
str	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
str	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
is_fuzzy	bool
||	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"/* Flag: untranslated */\n"	*(char)
)	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
obsolete	bool
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"/* Flag: unmatched */\n"	*(char)
)	O
;	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
NFORMATS	int
;	O
i	long
++	O
)	O
if	O
(	O
significant_format_p	(enum(int,int,int,int,int,int))->(bool)
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
is_format	enum(int,int,int,int,int,int)
[	O
i	long
]	O
)	O
)	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"/* Flag: "	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
make_format_description_string	(enum(int,int,int,int,int,int),*(char),bool)->(*(char))
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
is_format	enum(int,int,int,int,int,int)
[	O
i	long
]	O
,	O
format_language	array(*(char))
[	O
i	long
]	O
,	O
debug	bool
)	O
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" */\n"	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
has_range_p	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
range	struct(int,int)
)	O
)	O
{	O
char	O
*	O
string	*(char)
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"/* Flag: "	*(char)
)	O
;	O
string	*(char)
=	O
make_range_description_string	(struct(int,int))->(*(char))
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
range	struct(int,int)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
string	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
string	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" */\n"	*(char)
)	O
;	O
}	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgid	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" = "	*(char)
)	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
[	O
0	int
]	O
!=	O
'\0'	O
)	O
{	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
is_fuzzy	bool
)	O
{	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgid	*(char)
)	O
;	O
if	O
(	O
c_strstr	(*(char),*(char))->(*(char))
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
,	O
"*/"	*(char)
)	O
==	O
NULL	O
)	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" /* = "	*(char)
)	O
;	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
" */"	*(char)
)	O
;	O
}	O
else	O
{	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"; // = "	*(char)
)	O
;	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
)	O
;	O
}	O
}	O
else	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgstr	*(char)
)	O
;	O
}	O
else	O
{	O
write_escaped_string	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgid	*(char)
)	O
;	O
}	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
";"	*(char)
)	O
;	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\n"	*(char)
)	O
;	O
}	O
static	O
void	O
write_stringtable	(*(struct),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),long,bool)->(void)
(	O
ostream_t	*(struct)
stream	*(struct)
,	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
const	O
char	O
*	O
canon_encoding	*(char)
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
bool	bool
blank_line	bool
;	O
size_t	long
j	long
;	O
iconv_message_list	(*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),*(char),*(char))->(bool)
(	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
canon_encoding	*(char)
,	O
po_charset_utf8	*(char)
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
is_ascii_message_list	(*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))))->(bool)
(	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
)	O
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\xef\xbb\xbf"	*(char)
)	O
;	O
blank_line	bool
=	O
false	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
const	O
message_ty	struct
*	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
=	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
->	O
item	*(*(char))
[	O
j	long
]	O
;	O
if	O
(	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
->	O
msgid_plural	*(char)
==	O
NULL	O
)	O
{	O
if	O
(	O
blank_line	bool
)	O
ostream_write_str	(*(struct),*(char))->(void)
(	O
stream	*(struct)
,	O
"\n"	*(char)
)	O
;	O
write_message	(*(struct),*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*`,long,long)),*(struct(*`,long,long)),long,*(struct(*`,long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`)),int,*(struct(*`,long,*`,*`,*`,*`)))),long,bool)->(void)
(	O
stream	*(struct)
,	O
mp	*(struct(*(char),*(char),*(char),*(char),long,struct(*(char),long),*(struct(*(*`),long,long)),*(struct(*(*`),long,long)),long,*(struct(*(char),long)),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct(*(char),*(char),*(char),*(char),long,struct(*`,long),*(struct`),*(struct`),long,*(struct`),bool,array(enum(int,int,int,int,int,int)),struct(int,int),enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*(char),*(char),*(char),bool,int,*(struct`),int,*(struct`))),int,*(struct(*(char),long,*(char),*(struct`),*(struct`),*(char)))))
,	O
page_width	long
,	O
debug	bool
)	O
;	O
blank_line	bool
=	O
true	int
;	O
}	O
}	O
}	O
static	O
void	O
msgdomain_list_print_stringtable	(*(struct(*(*(struct`)),long,long,bool,*(char))),*(struct),long,bool)->(void)
(	O
msgdomain_list_ty	struct
*	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
,	O
ostream_t	*(struct)
stream	*(struct)
,	O
size_t	long
page_width	long
,	O
bool	bool
debug	bool
)	O
{	O
message_list_ty	struct
*	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
;	O
if	O
(	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
nitems	long
==	O
1	int
)	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
=	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
item	*(*(char))
[	O
0	int
]	O
->	O
messages	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
;	O
else	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
=	O
message_list_alloc	(bool)->(*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))))
(	O
false	int
)	O
;	O
write_stringtable	(*(struct),*(struct(*(*(struct`)),long,long,bool,struct(long,long,*(struct`),*(struct`),struct(long,*`,*`,*`,*`,union`,long,union`,union`,*`,int,int,int)))),*(char),long,bool)->(void)
(	O
stream	*(struct)
,	O
mlp	*(struct(*(*(struct(*`,*`,*`,*`,long,struct`,*`,*`,long,*`,bool,array(enum(int,int,int,int,int,int)),struct`,enum(int,int,int,int,int,int),array(enum(int,int,int,int,int,int)),*`,*`,*`,bool,int,*`,int,*`))),long,long,bool,struct(long,long,*(struct),*(struct),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),long,union(*`,*`),union(*`,*`),*(void),int,int,int))))
,	O
mdlp	*(struct(*(*(struct(*`,*`))),long,long,bool,*(char)))
->	O
encoding	*(char)
,	O
page_width	long
,	O
debug	bool
)	O
;	O
}	O
const	O
struct	O
catalog_output_format	struct(*((*(struct(*(*`),long,long,bool,*(char))),*(struct),long,bool)->(void)),bool,bool,bool,bool,bool,bool,bool,bool)
output_format_stringtable	struct(*((*(struct(*`,long,long,bool,*`)),*(struct),long,bool)->(void)),bool,bool,bool,bool,bool,bool,bool,bool)
=	O
{	O
msgdomain_list_print_stringtable	(*(struct(*(*(struct`)),long,long,bool,*(char))),*(struct),long,bool)->(void)
,	O
true	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
,	O
false	int
}	O
;	O
