extern	O
Suser	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
;	O
extern	O
void	O
(	O
*	O
keymap	array(*(()->(void)))
[	O
128	int
]	O
)	O
(	O
)	O
;	O
void	O
init_keymap	()->(void)
(	O
)	O
{	O
int	O
i	int
;	O
void	O
null_key	()->(void)
(	O
)	O
,	O
bad_key	()->(void)
(	O
)	O
,	O
quit	()->(void)
(	O
)	O
,	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
(	O
)	O
,	O
down	()->(void)
(	O
)	O
,	O
right	()->(void)
(	O
)	O
,	O
left	()->(void)
(	O
)	O
,	O
upright	()->(void)
(	O
)	O
,	O
upleft	()->(void)
(	O
)	O
,	O
jhome	()->(void)
(	O
)	O
,	O
jpos	()->(void)
(	O
)	O
,	O
downright	()->(void)
(	O
)	O
,	O
downleft	()->(void)
(	O
)	O
,	O
jup	()->(void)
(	O
)	O
,	O
jdown	()->(void)
(	O
)	O
,	O
jright	()->(void)
(	O
)	O
,	O
jleft	()->(void)
(	O
)	O
,	O
help	()->(void)
(	O
)	O
,	O
redraw	()->(void)
(	O
)	O
,	O
windows	()->(void)
(	O
)	O
,	O
display_menu	()->(void)
(	O
)	O
,	O
mail	()->(void)
(	O
)	O
,	O
report_menu	()->(void)
(	O
)	O
,	O
army_menu	()->(void)
(	O
)	O
,	O
zoom_sector	()->(void)
(	O
)	O
,	O
trade_menu	()->(void)
(	O
)	O
,	O
wizardry_menu	()->(void)
(	O
)	O
,	O
dump_map	()->(void)
(	O
)	O
,	O
news	()->(void)
(	O
)	O
,	O
construct	()->(void)
(	O
)	O
,	O
transport	()->(void)
(	O
)	O
,	O
root_edit	()->(void)
(	O
)	O
,	O
options	()->(void)
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
128	int
;	O
++	O
i	int
)	O
{	O
keymap	array(*(()->(void)))
[	O
i	int
]	O
=	O
bad_key	()->(void)
;	O
}	O
if	O
(	O
user	struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct(array(char),*`)))),*(struct(array(char),int,int,*(struct(array(char),int,int,*`)))),*(struct(int,array(char),int,int,*(*(char)),*(struct(int,array(char),int,int,*`,*`)))),*(struct(array(char),int,*(struct(array(char),int,*`)))),int,int,int,int,int)
.	O
id	short
==	O
0	int
)	O
{	O
keymap	array(*(()->(void)))
[	O
'E'	O
]	O
=	O
root_edit	()->(void)
;	O
}	O
keymap	array(*(()->(void)))
[	O
' '	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'\n'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'\r'	O
]	O
=	O
null_key	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'q'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'Q'	O
]	O
=	O
quit	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'?'	O
]	O
=	O
help	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
''	O
]	O
=	O
redraw	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'h'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'4'	O
]	O
=	O
left	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'l'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'6'	O
]	O
=	O
right	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'k'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'8'	O
]	O
=	O
up	*(struct(int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`))),struct(int,int),struct(int,int),char,int,int,int,int,*(*(int)),*(*(struct(int,int,int))),int,array(array(char)),int,int,int,int,int,int,*(struct(array(char),*(struct`))),*(struct(array(char),int,int,*(struct`))),*(struct(int,array(char),int,int,*(*`),*(struct`))),*(struct(array(char),int,*(struct`))),int,int,int,int,int))
;	O
keymap	array(*(()->(void)))
[	O
'j'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'2'	O
]	O
=	O
down	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'u'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'9'	O
]	O
=	O
upright	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'y'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'7'	O
]	O
=	O
upleft	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'n'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'3'	O
]	O
=	O
downright	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'b'	O
]	O
=	O
keymap	array(*(()->(void)))
[	O
'1'	O
]	O
=	O
downleft	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'H'	O
]	O
=	O
jleft	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'J'	O
]	O
=	O
jdown	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'K'	O
]	O
=	O
jup	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'L'	O
]	O
=	O
jright	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'w'	O
]	O
=	O
windows	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'd'	O
]	O
=	O
display_menu	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'r'	O
]	O
=	O
report_menu	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'a'	O
]	O
=	O
army_menu	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'Z'	O
]	O
=	O
zoom_sector	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'm'	O
]	O
=	O
mail	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'W'	O
]	O
=	O
wizardry_menu	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'F'	O
]	O
=	O
dump_map	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'N'	O
]	O
=	O
news	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'C'	O
]	O
=	O
construct	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
't'	O
]	O
=	O
transport	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'O'	O
]	O
=	O
options	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'P'	O
]	O
=	O
jhome	()->(void)
;	O
keymap	array(*(()->(void)))
[	O
'p'	O
]	O
=	O
jpos	()->(void)
;	O
}	O
void	O
intro	(*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct`)),int,*(struct(int,array(char),array(char),array(char),struct`,struct`,char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*`,*`,int,int,int,int,int,struct`,*`,*`,*`)))),*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))->(void)
(	O
Sworld	struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct(int,int),short,short,short,short,short,short,short,short,short,short,int,long,*(char),*(struct`)))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)),*(struct(struct`,*`)),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*`)),*(struct(int,int,*`,*`,*`,*`)),*(struct(int,int,int,int,int,int,int,int,int,int)))))
*	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
,	O
Snation	struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct(int,int)),*(struct(array(char),array(char),int,int,int,int,int,int,long,struct`,int,int,int,int,int,struct`,*`)))),*(struct(struct(int,int),*(struct(struct`,*`)))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct(int,int,*`)))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int)))
*	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
)	O
{	O
FILE	struct
*	O
mail	()->(void)
;	O
char	O
txt	array(char)
[	O
200	int
]	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
txt	array(char)
,	O
"mail/mail.%d"	*(char)
,	O
np	*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct(array(char),array(char),int,int,int,int,int,int,long,struct(int,int),int,int,int,int,int,struct(int,int,int,int,int,int,struct`),*(struct`))),*(struct(struct(int,int),*(struct`))),int,int,int,int,int,struct(short,short,short,int),*(struct(int,int,*(struct`))),*(struct(int,int,*(char),*(char),*(char),*(char))),*(struct(int,int,int,int,int,int,int,int,int,int))))
->	O
id	short
)	O
;	O
mail	()->(void)
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
txt	array(char)
,	O
"r"	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
txt	array(char)
,	O
"Dominion"	*(char)
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
-	O
12	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
txt	array(char)
,	O
"Version %s"	*(char)
,	O
VERSION	*(char)
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
-	O
10	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
standout	()->(int)
(	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
txt	array(char)
,	O
"Copyright (c) 1990, Free Software Foundation"	*(char)
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
-	O
6	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
standend	()->(int)
(	O
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
txt	array(char)
,	O
"Thon %d"	*(char)
,	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
turn	int
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
-	O
2	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
txt	array(char)
,	O
"%d nation%c"	*(char)
,	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
n_nations	int
,	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
n_nations	int
>	O
1	int
?	O
's'	O
:	O
' '	O
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
LINES	int
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
sprintf	(*(char),*(char))->(int)
(	O
txt	array(char)
,	O
"world size is %d across, %d down"	*(char)
,	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
xmax	int
,	O
wp	*(struct(struct(int,int,double,double,double),int,int,int,*(*(struct(struct`,short,short,short,short,short,short,short,short,short,short,int,long,*`,*`))),int,*(struct(int,array(char),array(char),array(char),struct(int,int),struct(array(char),char,int,int,int,int,int,int,int,int,int,int,int,int),char,int,int,int,int,int,int,int,int,int,int,int,int,int,int,array(char),int,int,int,int,int,int,int,int,int,*(struct`),*(struct`),int,int,int,int,int,struct(short,short,short,int),*(struct`),*(struct`),*(struct`)))))
->	O
ymax	int
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
-	O
2	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
standout	()->(int)
(	O
)	O
;	O
if	O
(	O
mail	()->(void)
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
txt	array(char)
,	O
"You have mail!"	*(char)
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
+	O
6	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
mail	()->(void)
)	O
;	O
}	O
strcpy	(*(char),*(char))->(*(char))
(	O
txt	array(char)
,	O
"Press any key to begin"	*(char)
)	O
;	O
mvprintw	(int,int,*(char))->(int)
(	O
(	O
LINES	int
+	O
10	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	(*(char))->(long)
(	O
txt	array(char)
)	O
)	O
/	O
2	int
,	O
txt	array(char)
)	O
;	O
standend	()->(int)
(	O
)	O
;	O
refresh	()->(int)
(	O
)	O
;	O
to_getch	()->(int)
(	O
)	O
;	O
clear	()->(int)
(	O
)	O
;	O
}	O
