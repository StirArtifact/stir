int	O
mu_list_create	(*(*(struct)))->(int)
(	O
mu_list_t	*(struct)
*	O
plist	*(*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))))
)	O
{	O
mu_list_t	*(struct)
list	*(struct)
;	O
int	O
status	int
;	O
if	O
(	O
plist	*(*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))))
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
list	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
sizeof	O
(	O
*	O
list	*(struct)
)	O
,	O
1	int
)	O
;	O
if	O
(	O
list	*(struct)
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
status	int
=	O
mu_monitor_create	(*(*(struct(*(void),*(void),int,int))),int,*(void))->(int)
(	O
&	O
list	*(struct)
->	O
monitor	*(struct(*(void),*(void),int,int))
,	O
0	int
,	O
list	*(struct)
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
free	(*(void))->(void)
(	O
list	*(struct)
)	O
;	O
return	O
status	int
;	O
}	O
list	*(struct)
->	O
head	struct(*(void),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
.	O
next	*((*(void))->(int))
=	O
&	O
list	*(struct)
->	O
head	struct(*(void),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
;	O
list	*(struct)
->	O
head	struct(*(void),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
.	O
prev	*(struct(*(void),*(struct(*(void),*(struct`),*(struct`))),*(struct(*(void),*(struct`),*(struct`)))))
=	O
&	O
list	*(struct)
->	O
head	struct(*(void),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))),*(struct(*(void),*(struct(*`,*`,*`)),*(struct(*`,*`,*`)))))
;	O
*	O
plist	*(*(struct(struct(*(void),*(struct`),*(struct`)),long,*(struct(*`,*`,int,int)),*((*`,*`)->(int)),*((*`)->(void)),*(struct))))
=	O
list	*(struct)
;	O
return	O
0	int
;	O
}	O
