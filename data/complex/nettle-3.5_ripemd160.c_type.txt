void	O
ripemd160_init	O
(	O
struct	O
ripemd160_ctx	struct(array(int),long,int,array(char))
*	O
ctx	*(void)
)	O
{	O
static	O
const	O
uint32_t	int
iv	array(int)
[	O
_RIPEMD160_DIGEST_LENGTH	int
]	O
=	O
{	O
0x67452301	int
,	O
0xEFCDAB89	int
,	O
0x98BADCFE	int
,	O
0x10325476	int
,	O
0xC3D2E1F0	int
,	O
}	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
ctx	*(void)
->	O
state	array(int)
,	O
iv	array(int)
,	O
sizeof	O
(	O
ctx	*(void)
->	O
state	array(int)
)	O
)	O
;	O
ctx	*(void)
->	O
count	long
=	O
0	int
;	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
}	O
void	O
ripemd160_update	O
(	O
struct	O
ripemd160_ctx	struct(array(int),long,int,array(char))
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	*(char)
)	O
{	O
MD_UPDATE	O
(	O
ctx	*(void)
,	O
length	long
,	O
data	*(char)
,	O
COMPRESS	O
,	O
ctx	*(void)
->	O
count	long
++	O
)	O
;	O
}	O
void	O
ripemd160_digest	O
(	O
struct	O
ripemd160_ctx	struct(array(int),long,int,array(char))
*	O
ctx	*(void)
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	*(char)
)	O
{	O
uint64_t	long
bit_count	long
;	O
assert	O
(	O
length	long
<=	O
RIPEMD160_DIGEST_SIZE	int
)	O
;	O
MD_PAD	O
(	O
ctx	*(void)
,	O
8	int
,	O
COMPRESS	O
)	O
;	O
bit_count	long
=	O
(	O
ctx	*(void)
->	O
count	long
<<	O
9	int
)	O
|	O
(	O
ctx	*(void)
->	O
index	(*(char),int)->(*(char))
<<	O
3	int
)	O
;	O
LE_WRITE_UINT64	O
(	O
ctx	*(void)
->	O
block	array(char)
+	O
56	int
,	O
bit_count	long
)	O
;	O
_nettle_ripemd160_compress	(*(int),*(char))->(void)
(	O
ctx	*(void)
->	O
state	array(int)
,	O
ctx	*(void)
->	O
block	array(char)
)	O
;	O
_nettle_write_le32	(long,*(char),*(int))->(void)
(	O
length	long
,	O
digest	*(char)
,	O
ctx	*(void)
->	O
state	array(int)
)	O
;	O
ripemd160_init	O
(	O
ctx	*(void)
)	O
;	O
}	O
