int	O
_gdbm_full_read	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),long)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
buffer	*(void)
,	O
size_t	long
size	int
)	O
{	O
char	O
*	O
ptr	*(char)
=	O
buffer	*(void)
;	O
while	O
(	O
size	int
)	O
{	O
ssize_t	long
rdbytes	long
=	O
gdbm_file_read	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),long)->(long)
(	O
dbf	*(struct)
,	O
ptr	*(char)
,	O
size	int
)	O
;	O
if	O
(	O
rdbytes	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
continue	O
;	O
if	O
(	O
gdbm_last_errno	(*(struct))->(int)
(	O
dbf	*(struct)
)	O
==	O
GDBM_NO_ERROR	int
)	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_READ_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
rdbytes	long
==	O
0	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_EOF	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ptr	*(char)
+=	O
rdbytes	long
;	O
size	int
-=	O
rdbytes	long
;	O
}	O
return	O
0	int
;	O
}	O
int	O
_gdbm_full_write	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),long)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
void	O
*	O
buffer	*(void)
,	O
size_t	long
size	int
)	O
{	O
char	O
*	O
ptr	*(char)
=	O
buffer	*(void)
;	O
while	O
(	O
size	int
)	O
{	O
ssize_t	long
wrbytes	long
=	O
gdbm_file_write	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),*(void),long)->(long)
(	O
dbf	*(struct)
,	O
ptr	*(char)
,	O
size	int
)	O
;	O
if	O
(	O
wrbytes	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
continue	O
;	O
if	O
(	O
gdbm_last_errno	(*(struct))->(int)
(	O
dbf	*(struct)
)	O
==	O
GDBM_NO_ERROR	int
)	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
TRUE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
wrbytes	long
==	O
0	int
)	O
{	O
errno	O
=	O
ENOSPC	int
;	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
TRUE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ptr	*(char)
+=	O
wrbytes	long
;	O
size	int
-=	O
wrbytes	long
;	O
}	O
return	O
0	int
;	O
}	O
int	O
_gdbm_file_extend	(*(struct(*(char),int,int,int,int,int,int,int,int,int,int,*(char),enum(int,int,int,int),*((*`)->(void)),int,*(struct(int,int,long,int,int,int,int,long,struct`)),*(long),*(struct(*`,long,char,struct`)),long,long,*(struct(int,array(struct(int,long)),int,int,array(struct(int,array(char),long,int,int)))),int,*(struct(*`,long,char,struct`)),int,int,int,int,long,*(void),long,long,long)),long)->(int)
(	O
GDBM_FILE	*(struct)
dbf	*(struct)
,	O
off_t	long
size	int
)	O
{	O
size_t	long
page_size	long
=	O
sysconf	(int)->(long)
(	O
_SC_PAGESIZE	int
)	O
;	O
char	O
*	O
buf	*(void)
;	O
off_t	long
file_end	long
;	O
file_end	long
=	O
lseek	(int,long,int)->(long)
(	O
dbf	*(struct)
->	O
desc	int
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
if	O
(	O
!	O
file_end	long
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_SEEK_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
size	int
-=	O
file_end	long
;	O
if	O
(	O
size	int
>	O
0	int
)	O
{	O
if	O
(	O
size	int
<	O
page_size	long
)	O
page_size	long
=	O
size	int
;	O
buf	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
page_size	long
)	O
;	O
if	O
(	O
!	O
buf	*(void)
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_MALLOC_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
while	O
(	O
size	int
)	O
{	O
ssize_t	long
n	int
=	O
write	(int,*(void),long)->(long)
(	O
dbf	*(struct)
->	O
desc	int
,	O
buf	*(void)
,	O
size	int
<	O
page_size	long
?	O
size	int
:	O
page_size	long
)	O
;	O
if	O
(	O
n	int
<=	O
0	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
dbf	*(struct)
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
TRUE	int
)	O
;	O
break	O
;	O
}	O
size	int
-=	O
n	int
;	O
}	O
free	(*(void))->(void)
(	O
buf	*(void)
)	O
;	O
if	O
(	O
size	int
)	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
