static	O
int	O
GetLoadav	()->(int)
__P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
LOADAV_TYPE	double
loadav	array(double)
[	O
LOADAV_NUM	int
]	O
;	O
static	O
int	O
loadok	int
;	O
void	O
InitLoadav	()->(void)
(	O
)	O
{	O
loadok	int
=	O
1	int
;	O
}	O
static	O
int	O
GetLoadav	()->(int)
(	O
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
buf	*(char)
[	O
128	int
]	O
,	O
*	O
s	*(char)
;	O
int	O
i	int
;	O
double	O
d	int
,	O
e	double
;	O
if	O
(	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
secfopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
"/proc/loadavg"	*(char)
,	O
"r"	*(char)
)	O
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
*	O
buf	*(char)
=	O
0	int
;	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	*(char)
,	O
sizeof	O
(	O
buf	*(char)
)	O
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
s	*(char)
=	O
buf	*(char)
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
(	O
LOADAV_NUM	int
>	O
3	int
?	O
3	int
:	O
LOADAV_NUM	int
)	O
;	O
i	int
++	O
)	O
{	O
d	int
=	O
e	double
=	O
0	int
;	O
while	O
(	O
*	O
s	*(char)
==	O
' '	O
)	O
s	*(char)
++	O
;	O
if	O
(	O
*	O
s	*(char)
==	O
0	int
)	O
break	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
*	O
s	*(char)
==	O
'.'	O
)	O
e	double
=	O
1	int
;	O
else	O
if	O
(	O
*	O
s	*(char)
>=	O
'0'	O
&&	O
*	O
s	*(char)
<=	O
'9'	O
)	O
{	O
d	int
=	O
d	int
*	O
10	int
+	O
(	O
*	O
s	*(char)
-	O
'0'	O
)	O
;	O
if	O
(	O
e	double
)	O
e	double
*=	O
10	int
;	O
}	O
else	O
break	O
;	O
s	*(char)
++	O
;	O
}	O
loadav	array(double)
[	O
i	int
]	O
=	O
e	double
?	O
d	int
/	O
e	double
:	O
d	int
;	O
}	O
return	O
i	int
;	O
}	O
void	O
AddLoadav	(*(char))->(void)
(	O
p	*(char)
)	O
char	O
*	O
p	*(char)
;	O
{	O
int	O
i	int
,	O
j	int
;	O
if	O
(	O
loadok	int
==	O
0	int
)	O
return	O
;	O
j	int
=	O
GetLoadav	()->(int)
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
j	int
;	O
i	int
++	O
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
p	*(char)
,	O
" %2.2f"	*(char)
+	O
!	O
i	int
,	O
FIX_TO_DBL	O
(	O
loadav	array(double)
[	O
i	int
]	O
)	O
)	O
;	O
p	*(char)
+=	O
strlen	(*(char))->(long)
(	O
p	*(char)
)	O
;	O
}	O
}	O
