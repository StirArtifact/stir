__BEGIN_DECLARATIONS	O
static	O
void	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
__P_	O
(	O
(	O
Bool	int
*	O
init_data	*(int)
,	O
const	O
Bool	int
detected	int
,	O
int	O
easter	int
,	O
const	O
int	O
year	int
,	O
int	O
*	O
hd_elems	*(int)
,	O
const	O
int	O
fday	int
,	O
const	O
int	O
count	int
)	O
)	O
;	O
static	O
void	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
__P_	O
(	O
(	O
Bool	int
*	O
init_data	*(int)
,	O
const	O
Bool	int
detected	int
,	O
int	O
easter	int
,	O
const	O
int	O
year	int
,	O
int	O
*	O
hd_elems	*(int)
,	O
const	O
int	O
fday	int
,	O
const	O
int	O
count	int
)	O
)	O
;	O
__END_DECLARATIONS	O
void	O
ad_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AD"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_CHARLES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ae_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AE"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHEIKH_ZAYEDS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
af_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AF"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
persian_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LOSS_OF_MUSLIM_NATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1989	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ag_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AG"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARICOM_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
2	int
;	O
i	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
+	O
i	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MERCHANT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1980	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AI"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SEPARATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
DAY_MAX	int
;	O
i	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
+	O
i	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
+	O
4	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
5	int
-	O
1	int
]	O
,	O
5	int
,	O
year	int
,	O
5	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
al_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AL"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
persian_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1943	int
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
NULL	O
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
am_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AM"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERHOOD_AND_BEAUTY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1894	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1991	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
{	O
register	O
int	O
i	int
;	O
auto	O
int	O
greg_diff	*(int)
;	O
auto	O
int	O
d	int
;	O
auto	O
int	O
m	int
;	O
auto	O
int	O
y	int
;	O
(	O
void	O
)	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
d	int
=	O
25	int
;	O
m	int
=	O
MONTH_MAX	int
;	O
y	int
=	O
year	int
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
greg_diff	*(int)
;	O
i	int
++	O
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
an_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
4	int
-	O
1	int
]	O
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
an_bo_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AN_BO"	*(char)
;	O
an_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BONAIRE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
an_cu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AN_CU"	*(char)
;	O
an_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANTILLIAN_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_NICHOLAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
an_ma_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AN_MA"	*(char)
;	O
an_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTINIMAS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTOR_SCHOELCHER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
an_sa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AN_SA"	*(char)
;	O
an_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANTILLIAN_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_STATIA_AMERICA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
16	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
;	O
day	int
<	O
i	int
+	O
2	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SABA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
7	int
-	O
1	int
]	O
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
%	O
5	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ao_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AO"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FAMILY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANNIVERSARY_OF_ARMED_STRUGGLE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FOUNDATION_OF_NPLA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PIONEER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
27	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_YOUTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
14	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ar_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AR"	*(char)
;	O
day	int
=	O
10	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
6	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MALVINAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
20	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
6	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
2	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GENERAL_SAN_MARTINS_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_STUDENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
21	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLUMBUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FATHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1809	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
as_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AS"	*(char)
;	O
observe_us_hdy	int
=	O
SASA_SUSU	int
;	O
us_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
at_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AT"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_ct_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AU_CT"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CANBERRA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_nt_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AU_NT"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PICNIC_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALICE_SPRINGS_SHOW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TENNANT_CREEK_SHOW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KATHERINE_SHOW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
3	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DARWIN_SHOW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_qu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AU_QU"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_sa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"AU_SA"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ADELAIDE_CUP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
18	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PROCLAMATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_sw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AU_SW"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_ta_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AU_TA"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
2	int
,	O
year	int
,	O
2	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REGATTA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
2	int
-	O
1	int
]	O
,	O
2	int
,	O
year	int
,	O
3	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LAUNCESTON_CUP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EIGHT_HOURS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
18	int
,	O
10	int
,	O
year	int
,	O
4	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HOBART_SHOW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RECREATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_vi_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"AU_VI"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
day	int
=	O
26	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
2	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MELBOURNE_CUP_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
au_wa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"AU_WA"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_FOUNDATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
aw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AW"	*(char)
;	O
an_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MIDSUMMER_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_NICHOLAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1985	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FLAG_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
else	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANTILLIAN_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
az_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"AZ"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
persian_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
if	O
(	O
year	int
>	O
1917	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
(	O
year	int
>	O
1916	int
)	O
&&	O
(	O
year	int
<	O
1991	int
)	O
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>	O
1990	int
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SOLIDARITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
ba_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
auto	O
int	O
d	int
;	O
auto	O
int	O
greg_diff	*(int)
;	O
ptr_cc_id	*(char)
=	O
"BA"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1992	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SOULS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_NATIVITY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
8	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
d	int
=	O
DAY_MIN	int
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
d	int
+=	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ORTHODOX_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
23	int
,	O
4	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_GEORGES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
15	int
,	O
8	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
8	int
,	O
9	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_NATIVITY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
29	int
,	O
6	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
15	int
,	O
6	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VIDOVDAN	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
20	int
,	O
7	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_ELIAHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
d	int
=	O
day_of_year	(int,int,int)->(int)
(	O
26	int
,	O
10	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_DEMETRIUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
{	O
register	O
int	O
i	int
;	O
auto	O
int	O
m	int
;	O
auto	O
int	O
y	int
;	O
d	int
=	O
25	int
;	O
m	int
=	O
MONTH_MAX	int
;	O
y	int
=	O
year	int
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
greg_diff	*(int)
;	O
i	int
++	O
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
bb_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"BB"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ERROL_BARROW_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_UNITED_NATIONS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1965	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
11	int
-	O
1	int
]	O
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bd_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"BD"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHAHEED_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_MOURNING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bf_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BF"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PEOPLES_UPRISING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
4	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
auto	O
int	O
greg_diff	*(int)
;	O
ptr_cc_id	*(char)
=	O
"BG"	*(char)
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CULTURE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_REVIVAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
23	int
,	O
4	int
,	O
year	int
)	O
+	O
greg_diff	*(int)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_GEORGES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1884	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_UNION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1990	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bh_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BH"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bi_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BI"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RWAGASORE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
13	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NDADAYE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bj_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BJ"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_TRADITIONAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bm_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"BM"	*(char)
;	O
day	int
=	O
24	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
,	O
8	int
,	O
year	int
)	O
-	O
4	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CUP_MATCH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SOMERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
11	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bn_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BN"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
chinese_hdy	(*(int),int,int,*(int),int,int,*(char),int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
,	O
FALSE	O
)	O
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
5	int
-	O
1	int
]	O
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
23	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bo_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"BO"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
for	O
(	O
i	int
=	O
DAY_MAX	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
27	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bs_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"BS"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DISCOVERY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
5	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SLAVE_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bt_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BT"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_KINGS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
bv_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"BV"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
no_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
bw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"BW"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SERETSE_KHAMA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
day_of_year	(int,int,int)->(int)
(	O
dvec	array(int)
[	O
9	int
-	O
1	int
]	O
,	O
9	int
,	O
year	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
2	int
;	O
i	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOTSWANA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
+	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
15	int
;	O
day	int
<=	O
16	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRESIDENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
by_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
auto	O
int	O
greg_diff	*(int)
;	O
ptr_cc_id	*(char)
=	O
"BY"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REMEMBRANCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1916	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1944	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1991	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
3	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1993	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
easter	int
=	O
orthodox_easter	(int,*(int),int,int,int,int)->(int)
(	O
year	int
,	O
&	O
greg_diff	*(int)
,	O
1924	int
,	O
3	int
,	O
10	int
,	O
22	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
!=	O
1924	int
)	O
{	O
register	O
int	O
i	int
;	O
auto	O
int	O
d	int
;	O
auto	O
int	O
m	int
;	O
auto	O
int	O
y	int
;	O
d	int
=	O
25	int
;	O
m	int
=	O
MONTH_MAX	int
;	O
y	int
=	O
year	int
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
greg_diff	*(int)
;	O
i	int
++	O
)	O
(	O
void	O
)	O
next_date	(*(int),*(int),*(int))->(int)
(	O
&	O
d	int
,	O
&	O
m	int
,	O
&	O
y	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
d	int
,	O
m	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
bz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"BZ"	*(char)
;	O
day	int
=	O
9	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
3	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BARON_BLISS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
19	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GARIFUNA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
DAY_MAX	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
easter	int
-	O
46	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
24	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COMMONWEALTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
21	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
9	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
5	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
10	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
9	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_GEORGES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_al_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_AL"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
2	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FAMILY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_bc_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_BC"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_ma_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_MA"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_nb_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_NB"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_nf_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_NF"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DISCOVERY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
3	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REGATTA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_ns_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_NS"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_nw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CA_NW"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_on_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_ON"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_pe_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_PE"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_qu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CA_QU"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JEAN_BAPTISTE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_sa_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CA_SA"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ca_yu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"CA_YU"	*(char)
;	O
ca_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
17	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
8	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
4	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
else	O
day	int
+=	O
(	O
DAY_MIN	int
-	O
i	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DISCOVERY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
dvec	array(int)
[	O
2	int
-	O
1	int
]	O
,	O
2	int
,	O
year	int
,	O
DAY_MAX	int
,	O
FALSE	O
)	O
-	O
2	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HERITAGE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cc_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"CC"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cd_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CD"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NAMING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
27	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_REGIME_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_MOVEMENT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTYRS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_FOUNDATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PARENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_YOUTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
14	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1959	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
30	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cf_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CF"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOGANDA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
13	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CG"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARIEN_NGOUABI_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
22	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHILDRENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_MOVEMENT_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
7	int
-	O
1	int
]	O
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PRESIDENTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WOMENS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_YOUTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ar_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_AR"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
13	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ag_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CH_AG"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
7	int
,	O
year	int
,	O
5	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
if	O
(	O
!	O
use_other_cc	int
)	O
{	O
ptr_cc_id	*(char)
=	O
"CH_AI"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_bl_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_BL"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
1	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_be_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"CH_BE"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
3	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
42	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_bs_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_BS"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
1	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_fr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_FR"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
ch_gr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_GR"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_gl_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CH_GL"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
4	int
,	O
TRUE	O
)	O
;	O
if	O
(	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
==	O
easter	int
-	O
3	int
)	O
day	int
+=	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BATTLE_OF_NAEFELS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ge_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CH_GE"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARRIVAL_OF_THE_SWISS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
4	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WHIT_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
50	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ju_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_JU"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
23	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_lu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_LU"	*(char)
;	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARTINIMAS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ne_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CH_NE"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
+	O
1	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_nw_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_NW"	*(char)
;	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ow_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_OW"	*(char)
;	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_NICHOLAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_sg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_SG"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
16	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_sh_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_SH"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_so_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_SO"	*(char)
;	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_sz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_SZ"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ti_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_TI"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
ch_ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_WHIT_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
50	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_tg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_TG"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_ur_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_UR"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_vd_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CH_VD"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
+	O
1	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_vs_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_VS"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_zg_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CH_ZG"	*(char)
;	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
ch_ai_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHROVE_TUESDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
47	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ch_zh_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"CH_ZH"	*(char)
;	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
i	int
=	O
3	int
;	O
i	int
;	O
i	int
--	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CARNIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
42	int
-	O
i	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
(	O
2	int
*	O
DAY_MAX	int
)	O
;	O
if	O
(	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
==	O
easter	int
+	O
1	int
)	O
day	int
+=	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SECHSELAEUTEN	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
6	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
3	int
;	O
i	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KNABENSCHIESSEN	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
+	O
i	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ci_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CI"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMISTICE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_RE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
base_christian_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
ck_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"CK"	*(char)
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
7	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOSPEL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
10	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOSPEL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
4	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ANZAC_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
25	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
4	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
8	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CONSTITUTION_ANNIVERSARY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cl_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CL"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BATTLE_OF_IQUIQUE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARMED_FORCES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
19	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BANK_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLUMBUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
18	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_UNITY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
9	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_RECONCILIATION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
(	O
year	int
>	O
1995	int
)	O
?	O
DIS_HLS_PREF	*(char)
:	O
"+"	*(char)
,	O
11	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cm_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CM"	*(char)
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
islamic_hdy	(*(int),int,int,*(int),int,int,*(char))->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
,	O
ptr_cc_id	*(char)
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SHEEP_FESTIVAL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
21	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_YOUTH_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
2	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
co_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
i	int
;	O
register	O
int	O
j	int
;	O
auto	O
int	O
day	int
;	O
auto	O
int	O
month	int
;	O
ptr_cc_id	*(char)
=	O
"CO"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BATTLE_OF_BOYACA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
7	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
DAY_MIN	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
12	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
10	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLUMBUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
11	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
11	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_OF_CARTAGENA	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
15	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
8	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
6	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THREE_KINGS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
29	int
;	O
month	int
=	O
6	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
{	O
j	int
=	O
day_of_year	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
+	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
(	O
void	O
)	O
doy2date	(int,int,*(int),*(int))->(int)
(	O
j	int
,	O
(	O
days_of_february	(int)->(int)
(	O
year	int
)	O
==	O
29	int
)	O
,	O
&	O
day	int
,	O
&	O
month	int
)	O
;	O
}	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
month	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
j	int
=	O
easter	int
+	O
39	int
;	O
(	O
void	O
)	O
doy2date	(int,int,*(int),*(int))->(int)
(	O
j	int
,	O
(	O
days_of_february	(int)->(int)
(	O
year	int
)	O
==	O
29	int
)	O
,	O
&	O
day	int
,	O
&	O
month	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
j	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
j	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
j	int
=	O
easter	int
+	O
60	int
;	O
(	O
void	O
)	O
doy2date	(int,int,*(int),*(int))->(int)
(	O
j	int
,	O
(	O
days_of_february	(int)->(int)
(	O
year	int
)	O
==	O
29	int
)	O
,	O
&	O
day	int
,	O
&	O
month	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
j	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
j	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
j	int
=	O
easter	int
+	O
68	int
;	O
(	O
void	O
)	O
doy2date	(int,int,*(int),*(int))->(int)
(	O
j	int
,	O
(	O
days_of_february	(int)->(int)
(	O
year	int
)	O
==	O
29	int
)	O
,	O
&	O
day	int
,	O
&	O
month	int
)	O
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
month	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
j	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_HEART_JESUS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
j	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1917	int
)	O
{	O
day	int
=	O
19	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
3	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
!=	O
DAY_MIN	int
)	O
day	int
+=	O
(	O
(	O
DAY_MAX	int
-	O
i	int
)	O
+	O
1	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SAN_JOSE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
}	O
void	O
cr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CR"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GUACANASTE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_OUR_LADY_OF_LOS_ANGELES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
2	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_COLUMBUS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_FEAST_OF_CORPUS_CHRISTI	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
+	O
60	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_FRIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
2	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_JOSEPHS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF2	*(char)
,	O
19	int
,	O
3	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_IMMACULATE_CONCEPTION	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
8	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MAUNDY_THURSDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
easter	int
-	O
3	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_PETER_AND_ST_PAUL	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
29	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
28	int
;	O
day	int
<=	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CIVIC_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"#"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>	O
1855	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
11	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cu_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CU"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
10	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
for	O
(	O
day	int
=	O
25	int
;	O
day	int
<=	O
27	int
;	O
day	int
++	O
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_REVOLUTION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORY_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
2	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cv_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CV"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ASH_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
48	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
24	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_HEROES_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
20	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MARYS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
15	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
12	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cx_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
register	O
int	O
i	int
;	O
ptr_cc_id	*(char)
=	O
"CX"	*(char)
;	O
au_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_GOOD_SATURDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
-	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
26	int
;	O
i	int
=	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
;	O
if	O
(	O
i	int
>	O
5	int
)	O
day	int
+=	O
2	int
;	O
else	O
if	O
(	O
i	int
==	O
DAY_MIN	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
6	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THE_QUEENS_BIRTHDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
6	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
void	O
cy_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ptr_cc_id	*(char)
=	O
"CY"	*(char)
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARCHBISHOP_MAKARIOS_NAME_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
19	int
,	O
MONTH_MIN	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ARCHBISHOP_MAKARIOS_MEMORIAL_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
3	int
,	O
8	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NATIONAL_HOLIDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
DAY_MIN	int
,	O
4	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
gr_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
use_other_cc	int
=	O
!	O
use_other_cc	int
;	O
}	O
void	O
cz_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
ptr_cc_id	*(char)
=	O
"CZ"	*(char)
;	O
if	O
(	O
*	O
init_data	*(int)
)	O
*	O
init_data	*(int)
=	O
FALSE	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
5	int
,	O
year	int
,	O
DAY_MAX	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_MOTHERS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_PEOPLES_UPRISING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
5	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ALL_SAINTS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
1	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_ST_NICHOLAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
6	int
,	O
12	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_SYLVESTER	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
DIS_HLS_PREF	*(char)
,	O
dvec	array(int)
[	O
MONTH_MAX	int
-	O
1	int
]	O
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_NEW_YEARS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
1	int
,	O
1	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_SUNDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LABOUR_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
1	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>=	O
1992	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
8	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
else	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_LIBERATION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
9	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>=	O
1990	int
)	O
{	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_KONSTANTIN_AND_METHODIUS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
5	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BURNING_OF_JAN_HUS	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
6	int
,	O
7	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
if	O
(	O
year	int
>=	O
2000	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_CZECH_STATEHOOD	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
9	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>=	O
1988	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_INDEPENDENCE_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
28	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>=	O
2000	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_DAY_OF_STUDENTS_REVOLT	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
17	int
,	O
11	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
year	int
>=	O
1990	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_EVE	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
24	int
,	O
12	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTMAS_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
25	int
,	O
12	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
26	int
,	O
12	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
static	O
void	O
ca_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
register	O
int	O
day	int
;	O
day	int
=	O
26	int
;	O
if	O
(	O
weekday_of_date	(int,int,int)->(int)
(	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
)	O
==	O
DAY_MAX	int
)	O
day	int
++	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_BOXING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
MONTH_MAX	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
24	int
,	O
5	int
,	O
year	int
,	O
DAY_MIN	int
,	O
FALSE	O
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_VICTORIA_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
5	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
day	int
=	O
eval_holiday	(int,int,int,int,int)->(int)
(	O
DAY_MIN	int
,	O
10	int
,	O
year	int
,	O
DAY_MIN	int
,	O
TRUE	O
)	O
+	O
DAY_MAX	int
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_THANKSGIVING_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
day	int
,	O
10	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
if	O
(	O
!	O
use_other_cc	int
)	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
static	O
void	O
ch_base_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
Bool	int
*	O
init_data	*(int)
;	O
const	O
Bool	int
detected	int
;	O
int	O
easter	int
;	O
const	O
int	O
year	int
;	O
int	O
*	O
hd_elems	*(int)
;	O
const	O
int	O
fday	int
;	O
const	O
int	O
count	int
;	O
{	O
ch_hdy	(*(int),int,int,int,*(int),int,int)->(void)
(	O
init_data	*(int)
,	O
detected	int
,	O
easter	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_EASTER_MONDAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
1	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
holiday	(int,int,*(char),*(char),*(char),int,int,int,*(int),int,int)->(void)
(	O
*	O
init_data	*(int)
,	O
detected	int
,	O
_	O
(	O
hd_text	array(struct(int,*(char)))
[	O
HD_CHRISTS_ASCENSION_DAY	int
]	O
.	O
ht_text	*(char)
)	O
,	O
ptr_cc_id	*(char)
,	O
"+"	*(char)
,	O
easter	int
+	O
39	int
,	O
0	int
,	O
year	int
,	O
hd_elems	*(int)
,	O
fday	int
,	O
count	int
)	O
;	O
}	O
