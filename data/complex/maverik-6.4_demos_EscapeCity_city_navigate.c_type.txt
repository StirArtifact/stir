void	O
Render_Background	(float)->(void)
(	O
float	O
radius	float
)	O
;	O
void	O
Display_Objects	()->(void)
(	O
void	O
)	O
;	O
void	O
Redisplay_Objects	()->(void)
(	O
void	O
)	O
;	O
void	O
mav_initialiseLensFlare	()->(void)
(	O
void	O
)	O
;	O
void	O
mav_displayLensFlare	(int)->(void)
(	O
MAV_vector	O
sunpos	int
)	O
;	O
void	O
initTime	()->(void)
(	O
)	O
;	O
double	O
calcTime	()->(double)
(	O
)	O
;	O
double	O
mav_getTimer	()->(double)
(	O
void	O
)	O
;	O
extern	O
MAV_class	O
*	O
mav_class_avatar	*(int)
;	O
extern	O
MAV_callback	O
*	O
mav_callback_enlist	*(int)
;	O
extern	O
int	O
size	int
;	O
extern	O
float	O
block_width	float
;	O
extern	O
MAV_SMS	O
*	O
city_sms	*(int)
;	O
extern	O
int	O
bb_pos	int
;	O
extern	O
int	O
current_texture	int
;	O
extern	O
int	O
num_visible_objects	int
;	O
extern	O
int	O
num_polys	int
;	O
extern	O
int	O
num_cells	int
;	O
extern	O
int	O
num_occluders	int
;	O
extern	O
MAV_cityCell	O
*	O
bounce_cell	*(int)
;	O
extern	O
int	O
wire	int
;	O
extern	O
double	O
cull_time	double
,	O
render_time	double
;	O
extern	O
double	O
other_time	double
;	O
extern	O
int	O
routereader	int
;	O
extern	O
int	O
routewriter	int
;	O
float	O
fog_distance	float
=	O
600.0	int
;	O
MAV_viewParams	O
vp	int
;	O
MAV_viewModifierParams	O
sp	int
;	O
unsigned	O
int	O
current_frame	int
=	O
0	int
;	O
int	O
write_anim	int
;	O
int	O
anim_frame	int
;	O
int	O
info	int
=	O
0	int
;	O
int	O
max_rendered_cells	int
=	O
400	int
;	O
float	O
zoom	float
=	O
250.0	int
;	O
int	O
culling	int
=	O
1	int
;	O
int	O
show_flare	int
=	O
0	int
;	O
static	O
int	O
Keyboard_Function	(*(int),*(int))->(int)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_keyboardEvent	O
*	O
event	*(int)
)	O
{	O
if	O
(	O
event	*(int)
->	O
movement	O
==	O
MAV_PRESSED	O
)	O
{	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'c'	O
)	O
{	O
culling	int
=	O
!	O
culling	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"culling %d\n"	*(char)
,	O
culling	int
)	O
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'.'	O
)	O
{	O
zoom	float
+=	O
50.0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"zoom= %f\n"	*(char)
,	O
zoom	float
)	O
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
','	O
)	O
{	O
zoom	float
-=	O
50.0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"zoom= %f\n"	*(char)
,	O
zoom	float
)	O
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'x'	O
)	O
{	O
fog_distance	float
+=	O
100.0	int
;	O
glFogf	()->(int)
(	O
GL_FOG_END	O
,	O
fog_distance	float
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%f\n"	*(char)
,	O
fog_distance	float
)	O
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'z'	O
)	O
{	O
fog_distance	float
-=	O
100.0	int
;	O
glFogf	()->(int)
(	O
GL_FOG_END	O
,	O
fog_distance	float
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%f\n"	*(char)
,	O
fog_distance	float
)	O
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'w'	O
)	O
{	O
wire	int
=	O
!	O
wire	int
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'a'	O
)	O
{	O
write_anim	int
=	O
!	O
write_anim	int
;	O
if	O
(	O
write_anim	int
)	O
anim_frame	int
=	O
0	int
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'i'	O
)	O
{	O
info	int
=	O
!	O
info	int
;	O
return	O
1	int
;	O
}	O
else	O
if	O
(	O
event	*(int)
->	O
key	O
==	O
'f'	O
)	O
{	O
show_flare	int
=	O
!	O
show_flare	int
;	O
return	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
void	O
mav_SMSEnlistFn	(*(int),*(int),*(void))->(void)
(	O
MAV_object	O
*	O
obj	*(int)
,	O
MAV_drawInfo	O
*	O
di	*(int)
,	O
void	O
*	O
params	*(void)
)	O
{	O
mav_callbackExec	()->(int)
(	O
mav_callback_enlist	*(int)
,	O
mav_win_current	O
,	O
obj	*(int)
,	O
NULL	O
,	O
NULL	O
)	O
;	O
}	O
int	O
mav_SMSEnlist	(*(int),*(int))->(int)
(	O
MAV_window	O
*	O
w	*(int)
,	O
MAV_SMS	O
*	O
sms	*(int)
)	O
{	O
MAV_window	O
*	O
win	O
,	O
*	O
orig_win	O
=	O
mav_win_current	O
;	O
MAV_SMSExecFn	O
fn	O
;	O
MAV_drawInfo	O
di	*(int)
;	O
int	O
rv	int
=	O
0	int
;	O
fn	O
.	O
fn	O
=	O
mav_SMSEnlistFn	(*(int),*(int),*(void))->(void)
;	O
fn	O
.	O
params	*(void)
=	O
NULL	O
;	O
if	O
(	O
w	*(int)
==	O
mav_win_all	O
)	O
{	O
mav_listPointerReset	()->(int)
(	O
mav_win_list	O
)	O
;	O
while	O
(	O
mav_listItemNext	()->(int)
(	O
mav_win_list	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
win	O
)	O
)	O
mav_SMSEnlist	(*(int),*(int))->(int)
(	O
win	O
,	O
sms	*(int)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
w	*(int)
!=	O
orig_win	O
)	O
mav_windowSet	()->(int)
(	O
w	*(int)
)	O
;	O
di	*(int)
.	O
vp	int
=	O
*	O
(	O
mav_win_current	O
->	O
vp	int
)	O
;	O
di	*(int)
.	O
cp	O
=	O
mav_clipPlanesGet	()->(int)
(	O
w	*(int)
,	O
-	O
1.0	int
,	O
1.0	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
w	*(int)
->	O
ncp	O
/	O
w	*(int)
->	O
fcp	O
,	O
1.0	int
)	O
;	O
rv	int
=	O
mav_SMSCallbackExecFnExec	()->(int)
(	O
sms	*(int)
,	O
&	O
di	*(int)
,	O
&	O
fn	O
)	O
;	O
if	O
(	O
w	*(int)
!=	O
orig_win	O
)	O
mav_windowSet	()->(int)
(	O
orig_win	O
)	O
;	O
}	O
return	O
rv	int
;	O
}	O
void	O
WalkAround	()->(void)
(	O
void	O
)	O
{	O
MAV_vector	O
sunpos	int
;	O
char	O
fname	array(char)
[	O
100	int
]	O
;	O
MAV_SMS	O
*	O
list	O
;	O
int	O
num_legoman	int
;	O
MAV_avatarCurves	O
*	O
curves	O
;	O
MAV_object	O
*	O
legoman	O
[	O
10	int
]	O
;	O
MAV_vector	O
start	O
[	O
10	int
]	O
;	O
MAV_vector	O
dir	O
[	O
10	int
]	O
;	O
float	O
height	array(float)
[	O
10	int
]	O
;	O
int	O
frames	array(int)
[	O
10	int
]	O
;	O
int	O
num_avatars	int
=	O
50	int
;	O
MAV_avatar	O
*	O
avatar	O
[	O
100	int
]	O
;	O
int	O
follow	array(int)
[	O
100	int
]	O
;	O
float	O
time	array(float)
[	O
100	int
]	O
;	O
MAV_vector	O
dr	O
;	O
float	O
d	float
;	O
float	O
t	float
;	O
int	O
i	int
;	O
double	O
tm	double
;	O
GLfloat	O
fogColour	O
[	O
4	int
]	O
=	O
{	O
0.85	int
,	O
0.85	int
,	O
1.0	int
,	O
1.0	int
}	O
;	O
MAV_surfaceParams	O
jumper	O
;	O
MAV_surfaceParams	O
trousers	O
;	O
float	O
rnd	float
;	O
FILE	struct
*	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
MAV_timer	O
tim	O
;	O
mav_windowBackgroundColourSet	()->(int)
(	O
mav_win_all	O
,	O
0.5	int
,	O
0.5	int
,	O
0.5	int
)	O
;	O
mav_windowPerspectiveSet	()->(int)
(	O
mav_win_all	O
,	O
0.25	int
,	O
1500.0	int
,	O
50.0	int
,	O
(	O
(	O
float	O
)	O
mav_win_current	O
->	O
width	O
)	O
/	O
mav_win_current	O
->	O
height	array(float)
)	O
;	O
mav_navigationMouse	()->(int)
(	O
mav_win_all	O
,	O
mav_navigationMouseDefault	O
)	O
;	O
mav_navigationMouseDefaultParams	()->(int)
(	O
mav_win_all	O
,	O
MAV_LEFT_BUTTON	O
,	O
mav_navigateYawFixedUp	O
,	O
0.01	int
,	O
-	O
0.001	int
,	O
mav_navigateForwardsFixedUp	O
,	O
0.01	int
,	O
0.001	int
)	O
;	O
mav_navigationMouseDefaultParams	()->(int)
(	O
mav_win_all	O
,	O
MAV_MIDDLE_BUTTON	O
,	O
mav_navigateYawFixedUp	O
,	O
0.01	int
,	O
-	O
0.001	int
,	O
mav_navigatePitchFixedUp	O
,	O
0.01	int
,	O
0.001	int
)	O
;	O
mav_navigationMouseDefaultParams	()->(int)
(	O
mav_win_all	O
,	O
MAV_RIGHT_BUTTON	O
,	O
mav_navigateRightFixedUp	O
,	O
0.01	int
,	O
-	O
0.001	int
,	O
mav_navigateUpFixedUp	O
,	O
0.01	int
,	O
0.001	int
)	O
;	O
mav_callbackKeyboardSet	()->(int)
(	O
mav_win_all	O
,	O
mav_class_world	O
,	O
Keyboard_Function	(*(int),*(int))->(int)
)	O
;	O
sunpos	int
.	O
x	O
=	O
1000.0	int
;	O
sunpos	int
.	O
y	O
=	O
4000.0	int
;	O
sunpos	int
.	O
z	O
=	O
-	O
10000.0	int
;	O
vp	int
.	O
eye	O
.	O
x	O
=	O
43.0	int
;	O
vp	int
.	O
eye	O
.	O
y	O
=	O
1.8	int
;	O
vp	int
.	O
eye	O
.	O
z	O
=	O
28.0	int
;	O
vp	int
.	O
view	O
.	O
x	O
=	O
0.65	int
;	O
vp	int
.	O
view	O
.	O
y	O
=	O
0.0	int
;	O
vp	int
.	O
view	O
.	O
z	O
=	O
0.75	int
;	O
vp	int
.	O
view	O
=	O
mav_vectorNormalize	()->(int)
(	O
vp	int
.	O
view	O
)	O
;	O
vp	int
.	O
up	O
.	O
x	O
=	O
0.0	int
;	O
vp	int
.	O
up	O
.	O
y	O
=	O
1.0	int
;	O
vp	int
.	O
up	O
.	O
z	O
=	O
0.0	int
;	O
vp	int
.	O
fixed_up	O
=	O
vp	int
.	O
up	O
;	O
vp	int
.	O
mod	O
=	O
NULL	O
;	O
mav_windowViewParamsSet	()->(int)
(	O
mav_win_all	O
,	O
&	O
vp	int
)	O
;	O
mav_paletteLightingModelSet	()->(int)
(	O
mav_palette_default	O
,	O
0.2	int
,	O
0.2	int
,	O
0.2	int
,	O
0.0	int
,	O
1.0	int
)	O
;	O
mav_paletteLightSet	()->(int)
(	O
mav_palette_default	O
,	O
1	int
,	O
0.3	int
,	O
0.3	int
,	O
0.3	int
,	O
0.0	int
,	O
1.0	int
,	O
1.0	int
,	O
1.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
)	O
;	O
mav_paletteLightSet	()->(int)
(	O
mav_palette_default	O
,	O
2	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.5	int
,	O
0.5	int
,	O
0.5	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
,	O
0.0	int
)	O
;	O
mav_paletteLightPos	()->(int)
(	O
mav_palette_default	O
,	O
1	int
,	O
sunpos	int
)	O
;	O
mav_windowBackfaceCullSet	()->(int)
(	O
mav_win_all	O
,	O
MAV_TRUE	O
)	O
;	O
mav_avatarInitialise	()->(int)
(	O
)	O
;	O
curves	O
=	O
mav_avatarReadCurves	()->(int)
(	O
"./models/walking.cset"	*(char)
)	O
;	O
mav_windowSet	()->(int)
(	O
mav_win_left	O
)	O
;	O
glFogi	()->(int)
(	O
GL_FOG_MODE	O
,	O
GL_LINEAR	O
)	O
;	O
glFogfv	()->(int)
(	O
GL_FOG_COLOR	O
,	O
fogColour	O
)	O
;	O
glFogf	()->(int)
(	O
GL_FOG_DENSITY	O
,	O
0.01	int
)	O
;	O
glHint	()->(int)
(	O
GL_FOG_HINT	O
,	O
GL_FASTEST	O
)	O
;	O
glFogf	()->(int)
(	O
GL_FOG_START	O
,	O
1.0	int
)	O
;	O
glFogf	()->(int)
(	O
GL_FOG_END	O
,	O
fog_distance	float
)	O
;	O
glEnable	()->(int)
(	O
GL_FOG	O
)	O
;	O
if	O
(	O
routereader	int
)	O
{	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
"city_route1"	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
!	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
printf	(*(char))->(int)
(	O
"cant open route file\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
mav_timerStart	()->(int)
(	O
&	O
tim	O
)	O
;	O
}	O
current_frame	int
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
mav_eventsCheck	()->(int)
(	O
)	O
;	O
if	O
(	O
routereader	int
)	O
{	O
if	O
(	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
mav_timerStop	()->(int)
(	O
&	O
tim	O
)	O
;	O
mav_timerPrint	()->(int)
(	O
""	*(char)
,	O
tim	O
)	O
;	O
printf	(*(char))->(int)
(	O
"all over\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*s %f %f %f"	*(char)
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
eye	O
.	O
x	O
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
eye	O
.	O
y	O
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
eye	O
.	O
z	O
)	O
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*s %f %f %f"	*(char)
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
view	O
.	O
x	O
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
view	O
.	O
y	O
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
view	O
.	O
z	O
)	O
;	O
fscanf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
rfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%*s %f %f %f"	*(char)
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
up	O
.	O
x	O
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
up	O
.	O
y	O
,	O
&	O
mav_win_current	O
->	O
vp	int
->	O
up	O
.	O
z	O
)	O
;	O
}	O
mav_frameBegin	()->(int)
(	O
)	O
;	O
if	O
(	O
routewriter	int
)	O
mav_viewParamsPrint	()->(int)
(	O
""	*(char)
,	O
*	O
mav_win_current	O
->	O
vp	int
)	O
;	O
mav_paletteLightPos	()->(int)
(	O
mav_palette_default	O
,	O
2	int
,	O
vp	int
.	O
eye	O
)	O
;	O
bb_pos	int
=	O
0	int
;	O
num_visible_objects	int
=	O
0	int
;	O
mav_windowSet	()->(int)
(	O
mav_win_left	O
)	O
;	O
if	O
(	O
!	O
wire	int
)	O
{	O
Render_Background	(float)->(void)
(	O
1000.0	int
)	O
;	O
}	O
initTime	()->(void)
(	O
)	O
;	O
mav_SMSEnlist	(*(int),*(int))->(int)
(	O
mav_win_left	O
,	O
city_sms	*(int)
)	O
;	O
Display_Objects	()->(void)
(	O
)	O
;	O
if	O
(	O
info	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%.2f culltime %.2f rendertime\n"	*(char)
,	O
cull_time	double
,	O
render_time	double
)	O
;	O
mav_frameEnd	()->(int)
(	O
)	O
;	O
if	O
(	O
write_anim	int
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
fname	array(char)
,	O
"/usr/tmp/movie/image%.4d.rgb"	*(char)
,	O
anim_frame	int
++	O
)	O
;	O
mav_windowDump	()->(int)
(	O
mav_win_left	O
,	O
fname	array(char)
)	O
;	O
}	O
current_frame	int
++	O
;	O
}	O
}	O
