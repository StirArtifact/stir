int	O
mu_mailcap_entry_create	(*(*(struct)),*(char),*(char))->(int)
(	O
mu_mailcap_entry_t	*(struct)
*	O
ret_ent	*(*(struct(*(char),*(char),*(struct),*(struct(struct`,struct`)))))
,	O
char	O
*	O
type	*(char)
,	O
char	O
*	O
command	*(char)
)	O
{	O
int	O
rc	int
;	O
mu_mailcap_entry_t	*(struct)
ent	*(struct)
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
ent	*(struct)
)	O
)	O
;	O
if	O
(	O
!	O
ent	*(struct)
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
!	O
ret_ent	*(*(struct(*(char),*(char),*(struct),*(struct(struct`,struct`)))))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
ent	*(struct)
->	O
type	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
type	*(char)
)	O
;	O
ent	*(struct)
->	O
command	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
command	*(char)
)	O
;	O
if	O
(	O
!	O
ent	*(struct)
->	O
type	*(char)
||	O
!	O
ent	*(struct)
->	O
command	*(char)
)	O
{	O
mu_mailcap_entry_destroy	(*(*(struct)))->(void)
(	O
&	O
ent	*(struct)
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
rc	int
=	O
mu_assoc_create	(*(*(struct)),int)->(int)
(	O
&	O
ent	*(struct)
->	O
fields	*(struct)
,	O
MU_ASSOC_ICASE	int
)	O
;	O
if	O
(	O
rc	int
)	O
mu_mailcap_entry_destroy	(*(*(struct)))->(void)
(	O
&	O
ent	*(struct)
)	O
;	O
else	O
{	O
mu_assoc_set_destroy_item	(*(struct),*((*(void))->(void)))->(int)
(	O
ent	*(struct)
->	O
fields	*(struct)
,	O
mu_mailcap_entry_field_deallocate	(*(void))->(void)
)	O
;	O
*	O
ret_ent	*(*(struct(*(char),*(char),*(struct),*(struct(struct`,struct`)))))
=	O
ent	*(struct)
;	O
}	O
return	O
rc	int
;	O
}	O
