struct	O
json_dumper	O
{	O
FILE	struct
*	O
fp	O
;	O
int	O
indent	O
;	O
int	O
level	O
;	O
int	O
first	O
;	O
}	O
;	O
static	O
void	O
dumper_init	O
(	O
struct	O
json_dumper	O
*	O
dmp	O
,	O
FILE	struct
*	O
fp	O
,	O
int	O
indent	O
)	O
{	O
dmp	O
->	O
fp	O
=	O
fp	O
;	O
dmp	O
->	O
indent	O
=	O
indent	O
;	O
dmp	O
->	O
level	O
=	O
1	int
;	O
dmp	O
->	O
first	O
=	O
1	int
;	O
}	O
static	O
void	O
dumper_copy	O
(	O
struct	O
json_dumper	O
*	O
dst	*(char)
,	O
struct	O
json_dumper	O
*	O
src	*(char)
)	O
{	O
dst	*(char)
->	O
fp	O
=	O
src	*(char)
->	O
fp	O
;	O
dst	*(char)
->	O
indent	O
=	O
src	*(char)
->	O
indent	O
;	O
dst	*(char)
->	O
level	O
=	O
src	*(char)
->	O
level	O
+	O
1	int
;	O
dst	*(char)
->	O
first	O
=	O
1	int
;	O
}	O
static	O
void	O
dump_indent	O
(	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
int	O
i	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
dmp	O
->	O
indent	O
*	O
dmp	O
->	O
level	O
;	O
i	O
++	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
' '	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
static	O
void	O
dump_separator	O
(	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
if	O
(	O
dmp	O
->	O
indent	O
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
dump_indent	O
(	O
dmp	O
)	O
;	O
}	O
else	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
' '	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
static	O
void	O
dump_delim	O
(	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
','	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
dump_separator	O
(	O
dmp	O
)	O
;	O
}	O
static	O
void	O
dump_id	O
(	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
if	O
(	O
dmp	O
->	O
first	O
)	O
dmp	O
->	O
first	O
=	O
0	int
;	O
else	O
dump_delim	O
(	O
dmp	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
dmp	O
->	O
fp	O
,	O
"\"%s\":"	*(char)
,	O
id	O
)	O
;	O
}	O
static	O
void	O
dump_null	O
(	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"null"	*(char)
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
void	O
dumpstr	O
(	O
char	O
const	O
*	O
string	O
,	O
FILE	struct
*	O
fp	O
)	O
{	O
int	O
c	int
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\"'	O
,	O
fp	O
)	O
;	O
for	O
(	O
;	O
(	O
c	int
=	O
*	O
string	O
)	O
!=	O
0	int
;	O
string	O
++	O
)	O
{	O
int	O
ec	O
;	O
if	O
(	O
c	int
==	O
'\\'	O
||	O
c	int
==	O
'\"'	O
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\\'	O
,	O
fp	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
fp	O
)	O
;	O
}	O
else	O
if	O
(	O
c_isprint	(int)->(bool)
(	O
c	int
)	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
fp	O
)	O
;	O
else	O
if	O
(	O
(	O
ec	O
=	O
wordsplit_c_quote_char	(int)->(int)
(	O
c	int
)	O
)	O
!=	O
0	int
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\\'	O
,	O
fp	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ec	O
,	O
fp	O
)	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
fp	O
,	O
"\\%03o"	*(char)
,	O
c	int
)	O
;	O
}	O
}	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\"'	O
,	O
fp	O
)	O
;	O
}	O
static	O
void	O
dump_string_data	O
(	O
char	O
const	O
*	O
string	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
if	O
(	O
!	O
string	O
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"null"	*(char)
,	O
dmp	O
->	O
fp	O
)	O
;	O
return	O
;	O
}	O
dumpstr	O
(	O
string	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
static	O
void	O
dump_string	O
(	O
char	O
const	O
*	O
string	O
,	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
dump_string_data	O
(	O
string	O
,	O
dmp	O
)	O
;	O
}	O
static	O
void	O
dump_raw_argv	O
(	O
char	O
*	O
*	O
argv	*(*(char))
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
size_t	long
i	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
argv	*(*(char))
[	O
i	O
]	O
;	O
i	O
++	O
)	O
{	O
if	O
(	O
i	O
)	O
dump_delim	O
(	O
dmp	O
)	O
;	O
dump_string_data	O
(	O
argv	*(*(char))
[	O
i	O
]	O
,	O
dmp	O
)	O
;	O
}	O
}	O
static	O
int	O
cmp_ptr	O
(	O
const	O
void	O
*	O
a	O
,	O
const	O
void	O
*	O
b	O
)	O
{	O
char	O
*	O
*	O
const	O
aptr	O
=	O
(	O
char	O
*	O
*	O
const	O
)	O
a	O
;	O
char	O
*	O
*	O
const	O
bptr	O
=	O
(	O
char	O
*	O
*	O
const	O
)	O
b	O
;	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
*	O
aptr	O
,	O
*	O
bptr	O
)	O
;	O
}	O
static	O
void	O
dump_argv	O
(	O
char	O
*	O
*	O
argv	*(*(char))
,	O
char	O
const	O
*	O
id	O
,	O
int	O
sort	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
size_t	long
i	O
;	O
struct	O
json_dumper	O
nest_dmp	O
;	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
if	O
(	O
!	O
argv	*(*(char))
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"null"	*(char)
,	O
dmp	O
->	O
fp	O
)	O
;	O
return	O
;	O
}	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'['	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
if	O
(	O
!	O
argv	*(*(char))
[	O
0	int
]	O
)	O
{	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
']'	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
return	O
;	O
}	O
if	O
(	O
dmp	O
->	O
indent	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
dumper_copy	O
(	O
&	O
nest_dmp	O
,	O
dmp	O
)	O
;	O
dump_indent	O
(	O
&	O
nest_dmp	O
)	O
;	O
if	O
(	O
sort	O
)	O
{	O
char	O
*	O
*	O
newargv	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
argv	*(*(char))
[	O
i	O
]	O
;	O
i	O
++	O
)	O
;	O
newargv	O
=	O
xcalloc	(long,long)->(*(void))
(	O
i	O
+	O
1	int
,	O
sizeof	O
(	O
newargv	O
[	O
0	int
]	O
)	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
(	O
newargv	O
[	O
i	O
]	O
=	O
argv	*(*(char))
[	O
i	O
]	O
)	O
!=	O
NULL	O
;	O
i	O
++	O
)	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
newargv	O
,	O
i	O
,	O
sizeof	O
(	O
newargv	O
[	O
0	int
]	O
)	O
,	O
cmp_ptr	O
)	O
;	O
dump_raw_argv	O
(	O
newargv	O
,	O
&	O
nest_dmp	O
)	O
;	O
free	(*(void))->(void)
(	O
newargv	O
)	O
;	O
}	O
else	O
{	O
dump_raw_argv	O
(	O
argv	*(*(char))
,	O
&	O
nest_dmp	O
)	O
;	O
}	O
dump_separator	O
(	O
dmp	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
']'	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
static	O
void	O
dump_umax	O
(	O
uintmax_t	long
val	array(int)
,	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
char	O
buf	O
[	O
INT_BUFSIZE_BOUND	O
(	O
uintmax_t	long
)	O
]	O
;	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
umaxtostr	(long,*(char))->(*(char))
(	O
val	array(int)
,	O
buf	O
)	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
static	O
void	O
dump_octal	O
(	O
unsigned	O
val	array(int)
,	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
dmp	O
->	O
fp	O
,	O
"%03o"	*(char)
,	O
val	array(int)
)	O
;	O
}	O
static	O
void	O
dump_int	O
(	O
int	O
val	array(int)
,	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
dmp	O
->	O
fp	O
,	O
"%d"	*(char)
,	O
val	array(int)
)	O
;	O
}	O
static	O
char	O
*	O
*	O
kv_ar	O
;	O
static	O
int	O
cmp_idx	O
(	O
void	O
const	O
*	O
a	O
,	O
void	O
const	O
*	O
b	O
)	O
{	O
size_t	long
const	O
*	O
ai	O
=	O
a	O
;	O
size_t	long
const	O
*	O
bi	O
=	O
b	O
;	O
return	O
strcmp	(*(char),*(char))->(int)
(	O
kv_ar	O
[	O
*	O
ai	O
]	O
,	O
kv_ar	O
[	O
*	O
bi	O
]	O
)	O
;	O
}	O
static	O
void	O
dump_vars	O
(	O
struct	O
rush_request	O
*	O
req	O
,	O
char	O
const	O
*	O
id	O
,	O
struct	O
json_dumper	O
*	O
dmp	O
)	O
{	O
dump_id	O
(	O
id	O
,	O
dmp	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'{'	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
if	O
(	O
req	O
->	O
var_count	O
)	O
{	O
size_t	long
i	O
,	O
ic	O
;	O
size_t	long
*	O
iv	O
;	O
struct	O
json_dumper	O
nest_dmp	O
;	O
ic	O
=	O
req	O
->	O
var_count	O
/	O
2	int
;	O
iv	O
=	O
xcalloc	(long,long)->(*(void))
(	O
ic	O
,	O
sizeof	O
(	O
iv	O
[	O
0	int
]	O
)	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
ic	O
;	O
i	O
++	O
)	O
{	O
iv	O
[	O
i	O
]	O
=	O
2	int
*	O
i	O
;	O
}	O
kv_ar	O
=	O
req	O
->	O
var_kv	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
iv	O
,	O
ic	O
,	O
sizeof	O
(	O
iv	O
[	O
0	int
]	O
)	O
,	O
cmp_idx	O
)	O
;	O
dumper_copy	O
(	O
&	O
nest_dmp	O
,	O
dmp	O
)	O
;	O
dump_separator	O
(	O
&	O
nest_dmp	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
ic	O
;	O
i	O
++	O
)	O
{	O
dump_id	O
(	O
req	O
->	O
var_kv	O
[	O
iv	O
[	O
i	O
]	O
]	O
,	O
&	O
nest_dmp	O
)	O
;	O
dump_string_data	O
(	O
req	O
->	O
var_kv	O
[	O
iv	O
[	O
i	O
]	O
+	O
1	int
]	O
,	O
&	O
nest_dmp	O
)	O
;	O
}	O
dump_separator	O
(	O
dmp	O
)	O
;	O
}	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'}'	O
,	O
dmp	O
->	O
fp	O
)	O
;	O
}	O
static	O
char	O
allkw	O
[	O
]	O
=	O
"cmdline,"	*(char)
"argv,"	*(char)
"prog,"	*(char)
"interactive,"	*(char)
"pw_name,"	*(char)
"pw_uid,"	*(char)
"pw_gid,"	*(char)
"pw_dir,"	*(char)
"umask,"	*(char)
"chroot_dir,"	*(char)
"home_dir,"	*(char)
"gid,"	*(char)
"fork,"	*(char)
"acct,"	*(char)
"text_domain,"	*(char)
"localedir,"	*(char)
"locale,"	*(char)
"environ,"	*(char)
"vars"	*(char)
;	O
void	O
dump_request	O
(	O
struct	O
rush_request	O
*	O
req	O
,	O
FILE	struct
*	O
fp	O
)	O
{	O
size_t	long
i	O
;	O
struct	O
json_dumper	O
dmp	O
;	O
struct	O
wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
;	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_delim	*(char)
=	O
","	*(char)
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
dump_option	O
,	O
"all"	*(char)
)	O
==	O
0	int
)	O
dump_option	O
=	O
allkw	O
;	O
if	O
(	O
wordsplit	struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct(long,*(*`),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*`),*(*`),long,long,*(*`),long,*(*`),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct`),*(struct`),array(char),int)))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*(char)),*(char),long,*(void))->(int)),*(void),*((*(*(char)),*(char),long,*(*(char)),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)
(	O
dump_option	O
,	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
,	O
WRDSF_DELIM	O
|	O
WRDSF_WS	O
|	O
WRDSF_SQUEEZE_DELIMS	O
|	O
WRDSF_NOVAR	O
|	O
WRDSF_NOCMD	O
|	O
WRDSF_SHOWERR	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
dumper_init	O
(	O
&	O
dmp	O
,	O
fp	O
,	O
4	int
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'{'	O
,	O
fp	O
)	O
;	O
dump_separator	O
(	O
&	O
dmp	O
)	O
;	O
for	O
(	O
i	O
=	O
0	int
;	O
i	O
<	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordc	long
;	O
i	O
++	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"cmdline"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
cmdline	O
,	O
"cmdline"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"argv"	*(char)
)	O
==	O
0	int
)	O
dump_argv	O
(	O
req	O
->	O
argv	*(*(char))
,	O
"argv"	*(char)
,	O
0	int
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"prog"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
prog	O
,	O
"prog"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"interactive"	*(char)
)	O
==	O
0	int
)	O
dump_int	O
(	O
req	O
->	O
interactive	O
,	O
"interactive"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"pw_name"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
pw	O
->	O
pw_name	*(char)
,	O
"pw_name"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"pw_uid"	*(char)
)	O
==	O
0	int
)	O
dump_umax	O
(	O
req	O
->	O
pw	O
->	O
pw_uid	int
,	O
"pw_uid"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"pw_gid"	*(char)
)	O
==	O
0	int
)	O
dump_umax	O
(	O
req	O
->	O
pw	O
->	O
pw_gid	int
,	O
"pw_gid"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"pw_dir"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
pw	O
->	O
pw_dir	*(char)
,	O
"pw_dir"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"umask"	*(char)
)	O
==	O
0	int
)	O
dump_octal	O
(	O
req	O
->	O
umask	(int)->(int)
,	O
"umask"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"chroot_dir"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
chroot_dir	O
,	O
"chroot_dir"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"home_dir"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
home_dir	O
,	O
"home_dir"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"gid"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
req	O
->	O
gid	int
==	O
NO_GID	O
)	O
dump_null	O
(	O
"gid"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
dump_umax	O
(	O
req	O
->	O
gid	int
,	O
"gid"	*(char)
,	O
&	O
dmp	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"fork"	*(char)
)	O
==	O
0	int
)	O
dump_int	O
(	O
req	O
->	O
fork	()->(int)
,	O
"fork"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"acct"	*(char)
)	O
==	O
0	int
)	O
dump_int	O
(	O
req	O
->	O
acct	(*(char))->(int)
,	O
"acct"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"text_domain"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
i18n	O
.	O
text_domain	O
,	O
"text_domain"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"localedir"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
i18n	O
.	O
localedir	O
,	O
"localedir"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"locale"	*(char)
)	O
==	O
0	int
)	O
dump_string	O
(	O
req	O
->	O
i18n	O
.	O
locale	*(char)
,	O
"locale"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"environ"	*(char)
)	O
==	O
0	int
)	O
dump_argv	O
(	O
req	O
->	O
env	O
,	O
"environ"	*(char)
,	O
1	int
,	O
&	O
dmp	O
)	O
;	O
else	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
,	O
"vars"	*(char)
)	O
==	O
0	int
)	O
dump_vars	O
(	O
req	O
,	O
"vars"	*(char)
,	O
&	O
dmp	O
)	O
;	O
else	O
logmsg	O
(	O
LOG_ERR	O
,	O
_	O
(	O
"unknown keyword: %s"	*(char)
)	O
,	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
.	O
ws_wordv	*(*(char))
[	O
i	O
]	O
)	O
;	O
}	O
if	O
(	O
dmp	O
.	O
indent	O
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
fp	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'}'	O
,	O
fp	O
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
fp	O
)	O
;	O
wordsplit_free	(*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*`)->(void)),*((*`)->(void)),*((*`)->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*`,*`,long,*`)->(int)),*(void),*((*`,*`,long,*`,*`)->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int)))->(void)
(	O
&	O
ws	*(struct(long,*(*(char)),long,long,int,int,long,long,*(char),*(char),array(*(char)),*((*(struct`))->(void)),*((*(char))->(void)),*((*(char))->(void)),*(*(char)),*(*(char)),long,long,*(*(char)),long,*(*(char)),long,long,*((*(*`),*(char),long,*(void))->(int)),*(void),*((*(*`),*(char),long,*(*`),*(void))->(int)),*(char),long,long,int,*(char),*(char),*(struct),*(struct),array(char),int))
)	O
;	O
}	O
