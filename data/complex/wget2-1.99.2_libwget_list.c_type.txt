struct	O
wget_list_st	struct(*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))),*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`))))))
{	O
wget_list	struct
*	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
*	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
;	O
void	O
*	O
wget_list_append	(*(*(struct)),*(void),long)->(*(void))
(	O
wget_list	struct
*	O
*	O
list	*(*(struct))
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	long
size	*(long)
)	O
{	O
wget_list	struct
*	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
wget_malloc	(long)->(*(void))
(	O
sizeof	O
(	O
wget_list	struct
)	O
+	O
size	*(long)
)	O
;	O
if	O
(	O
!	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
return	O
NULL	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
+	O
1	int
,	O
data	*(void)
,	O
size	*(long)
)	O
;	O
if	O
(	O
!	O
*	O
list	*(*(struct))
)	O
{	O
*	O
list	*(*(struct))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
else	O
{	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
*	O
list	*(*(struct))
;	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
(	O
*	O
list	*(*(struct))
)	O
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
(	O
*	O
list	*(*(struct))
)	O
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
(	O
*	O
list	*(*(struct))
)	O
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
return	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
+	O
1	int
;	O
}	O
void	O
*	O
wget_list_prepend	(*(*(struct)),*(void),long)->(*(void))
(	O
wget_list	struct
*	O
*	O
list	*(*(struct))
,	O
const	O
void	O
*	O
data	*(void)
,	O
size_t	long
size	*(long)
)	O
{	O
if	O
(	O
!	O
*	O
list	*(*(struct))
)	O
{	O
return	O
wget_list_append	(*(*(struct)),*(void),long)->(*(void))
(	O
list	*(*(struct))
,	O
data	*(void)
,	O
size	*(long)
)	O
;	O
}	O
else	O
{	O
return	O
wget_list_append	(*(*(struct)),*(void),long)->(*(void))
(	O
&	O
(	O
*	O
list	*(*(struct))
)	O
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
data	*(void)
,	O
size	*(long)
)	O
;	O
}	O
}	O
void	O
wget_list_remove	(*(*(struct)),*(void))->(void)
(	O
wget_list	struct
*	O
*	O
list	*(*(struct))
,	O
void	O
*	O
elem	*(void)
)	O
{	O
wget_list	struct
*	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
(	O
(	O
wget_list	struct
*	O
)	O
elem	*(void)
)	O
-	O
1	int
;	O
if	O
(	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
==	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
&&	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
==	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
*	O
list	*(*(struct))
&&	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
==	O
*	O
list	*(*(struct))
)	O
*	O
list	*(*(struct))
=	O
NULL	O
;	O
}	O
else	O
{	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
if	O
(	O
*	O
list	*(*(struct))
&&	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
==	O
*	O
list	*(*(struct))
)	O
*	O
list	*(*(struct))
=	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
}	O
xfree	O
(	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
;	O
}	O
void	O
*	O
wget_list_getfirst	(*(struct))->(*(void))
(	O
const	O
wget_list	struct
*	O
list	*(*(struct))
)	O
{	O
return	O
(	O
void	O
*	O
)	O
(	O
list	*(*(struct))
?	O
list	*(*(struct))
+	O
1	int
:	O
list	*(*(struct))
)	O
;	O
}	O
void	O
*	O
wget_list_getlast	(*(struct))->(*(void))
(	O
const	O
wget_list	struct
*	O
list	*(*(struct))
)	O
{	O
return	O
(	O
void	O
*	O
)	O
(	O
list	*(*(struct))
?	O
list	*(*(struct))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
+	O
1	int
:	O
list	*(*(struct))
)	O
;	O
}	O
void	O
*	O
wget_list_getnext	(*(void))->(*(void))
(	O
const	O
void	O
*	O
elem	*(void)
)	O
{	O
if	O
(	O
elem	*(void)
)	O
{	O
wget_list	struct
*	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
(	O
(	O
wget_list	struct
*	O
)	O
elem	*(void)
)	O
-	O
1	int
;	O
return	O
node	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
+	O
1	int
;	O
}	O
return	O
NULL	O
;	O
}	O
int	O
wget_list_browse	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
const	O
wget_list	struct
*	O
list	*(*(struct))
,	O
wget_list_browse_fn	(*(void),*(void))->(int)
*	O
browse	*((*(void),*(void))->(int))
,	O
void	O
*	O
context	*(void)
)	O
{	O
if	O
(	O
!	O
list	*(*(struct))
)	O
return	O
-	O
1	int
;	O
int	O
ret	int
;	O
const	O
wget_list	struct
*	O
end	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
list	*(*(struct))
->	O
prev	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
,	O
*	O
cur	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
list	*(*(struct))
;	O
while	O
(	O
(	O
ret	int
=	O
browse	*((*(void),*(void))->(int))
(	O
context	*(void)
,	O
(	O
void	O
*	O
)	O
(	O
cur	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
+	O
1	int
)	O
)	O
)	O
==	O
0	int
&&	O
cur	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
!=	O
end	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
)	O
cur	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
=	O
cur	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
->	O
next	*(struct(*(struct(*(struct`),*(struct`))),*(struct(*(struct`),*(struct`)))))
;	O
return	O
ret	int
;	O
}	O
void	O
wget_list_free	(*(*(struct)))->(void)
(	O
wget_list	struct
*	O
*	O
list	*(*(struct))
)	O
{	O
while	O
(	O
*	O
list	*(*(struct))
)	O
wget_list_remove	(*(*(struct)),*(void))->(void)
(	O
list	*(*(struct))
,	O
*	O
list	*(*(struct))
+	O
1	int
)	O
;	O
}	O
