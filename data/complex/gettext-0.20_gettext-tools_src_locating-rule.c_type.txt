struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
{	O
char	O
*	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
;	O
char	O
*	O
local_name	*(char)
;	O
char	O
*	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
;	O
struct	O
document_locating_rule_list_ty	struct(*(struct(*(char),*(char),*(char))),long,long)
{	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
*	O
items	*(struct(*(char),*(char),*(char)))
;	O
size_t	long
nitems	long
;	O
size_t	long
nitems_max	long
;	O
}	O
;	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
{	O
char	O
*	O
pattern	*(char)
;	O
char	O
*	O
name	*(char)
;	O
struct	O
document_locating_rule_list_ty	struct(*(struct(*(char),*(char),*(char))),long,long)
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
;	O
char	O
*	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
;	O
struct	O
locating_rule_list_ty	struct
{	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
*	O
items	*(struct(*(char),*(char),*(char)))
;	O
size_t	long
nitems	long
;	O
size_t	long
nitems_max	long
;	O
}	O
;	O
static	O
char	O
*	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
)	O
{	O
xmlChar	char
*	O
value	*(char)
;	O
char	O
*	O
result	*(*(void))
;	O
value	*(char)
=	O
xmlGetProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
attr	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct),*(struct),*(struct),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int),*(void)))
)	O
;	O
result	*(*(void))
=	O
xstrdup	(*(char))->(*(char))
(	O
(	O
const	O
char	O
*	O
)	O
value	*(char)
)	O
;	O
xmlFree	*((*(void))->(void))
(	O
value	*(char)
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
static	O
const	O
char	O
*	O
document_locating_rule_match	(*(struct(*(char),*(char),*(char))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(char))
(	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
*	O
rule	*(struct(*(char),*(char),*(char)))
,	O
xmlDoc	struct
*	O
doc	*(struct)
)	O
{	O
xmlNode	struct
*	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
xmlDocGetRootElement	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
doc	*(struct)
)	O
;	O
if	O
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
!=	O
NULL	O
)	O
{	O
if	O
(	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
==	O
NULL	O
||	O
!	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
->	O
href	*(char)
,	O
BAD_CAST	O
rule	*(struct(*(char),*(char),*(char)))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
)	O
)	O
return	O
NULL	O
;	O
}	O
if	O
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
local_name	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
!	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
,	O
BAD_CAST	O
rule	*(struct(*(char),*(char),*(char)))
->	O
local_name	*(char)
)	O
)	O
return	O
NULL	O
;	O
}	O
return	O
rule	*(struct(*(char),*(char),*(char)))
->	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
static	O
const	O
char	O
*	O
locating_rule_match	(*(struct(*(char),*(char),struct(*(struct`),long,long),*(char))),*(char),*(char))->(*(char))
(	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
*	O
rule	*(struct(*(char),*(char),*(char)))
,	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
name	*(char)
!=	O
NULL	O
)	O
{	O
if	O
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
name	*(char)
==	O
NULL	O
||	O
c_strcasecmp	(*(char),*(char))->(int)
(	O
name	*(char)
,	O
rule	*(struct(*(char),*(char),*(char)))
->	O
name	*(char)
)	O
!=	O
0	int
)	O
return	O
NULL	O
;	O
}	O
else	O
{	O
const	O
char	O
*	O
base	*(char)
;	O
char	O
*	O
reduced	*(char)
;	O
int	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
;	O
base	*(char)
=	O
strrchr	(*(char),int)->(*(char))
(	O
filename	*(char)
,	O
'/'	O
)	O
;	O
if	O
(	O
!	O
base	*(char)
)	O
base	*(char)
=	O
filename	*(char)
;	O
reduced	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
base	*(char)
)	O
;	O
while	O
(	O
strlen	(*(char))->(long)
(	O
reduced	*(char)
)	O
>=	O
3	int
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
reduced	*(char)
+	O
strlen	(*(char))->(long)
(	O
reduced	*(char)
)	O
-	O
3	int
,	O
".in"	*(char)
,	O
3	int
)	O
==	O
0	int
)	O
reduced	*(char)
[	O
strlen	(*(char))->(long)
(	O
reduced	*(char)
)	O
-	O
3	int
]	O
=	O
'\0'	O
;	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
=	O
fnmatch	(*(char),*(char),int)->(int)
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
pattern	*(char)
,	O
basename	(*(char))->(*(char))
(	O
reduced	*(char)
)	O
,	O
FNM_PATHNAME	O
)	O
;	O
free	*((*(char))->(void))
(	O
reduced	*(char)
)	O
;	O
if	O
(	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
!=	O
0	int
)	O
return	O
NULL	O
;	O
}	O
if	O
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
.	O
nitems	long
>	O
0	int
)	O
{	O
const	O
char	O
*	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
size_t	long
i	long
;	O
doc	*(struct)
=	O
xmlReadFile	(*(char),*(char),int)->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))
(	O
filename	*(char)
,	O
NULL	O
,	O
XML_PARSE_NONET	int
|	O
XML_PARSE_NOWARNING	int
|	O
XML_PARSE_NOBLANKS	int
|	O
XML_PARSE_NOERROR	int
)	O
;	O
if	O
(	O
doc	*(struct)
==	O
NULL	O
)	O
{	O
xmlError	struct
*	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
=	O
xmlGetLastError	()->(*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void))))
(	O
)	O
;	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot read %s: %s"	*(char)
)	O
,	O
filename	*(char)
,	O
err	*(struct(int,int,*(char),enum(int,int,int,int),*(char),int,*(char),*(char),*(char),int,int,*(void),*(void)))
->	O
message	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
,	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
NULL	O
;	O
i	long
<	O
rule	*(struct(*(char),*(char),*(char)))
->	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
.	O
nitems	long
;	O
i	long
++	O
)	O
{	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
document_locating_rule_match	(*(struct(*(char),*(char),*(char))),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(char))
(	O
&	O
rule	*(struct(*(char),*(char),*(char)))
->	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
.	O
items	*(struct(*(char),*(char),*(char)))
[	O
i	long
]	O
,	O
doc	*(struct)
)	O
;	O
if	O
(	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
break	O
;	O
}	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
if	O
(	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
!=	O
NULL	O
)	O
return	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
if	O
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
!=	O
NULL	O
)	O
return	O
rule	*(struct(*(char),*(char),*(char)))
->	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
return	O
NULL	O
;	O
}	O
const	O
char	O
*	O
locating_rule_list_locate	(*(struct),*(char),*(char))->(*(char))
(	O
struct	O
locating_rule_list_ty	struct
*	O
rules	*(struct)
,	O
const	O
char	O
*	O
filename	*(char)
,	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
const	O
char	O
*	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
NULL	O
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rules	*(struct)
->	O
nitems	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
IS_ABSOLUTE_PATH	O
(	O
filename	*(char)
)	O
)	O
{	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
locating_rule_match	(*(struct(*(char),*(char),struct(*(struct`),long,long),*(char))),*(char),*(char))->(*(char))
(	O
&	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
[	O
i	long
]	O
,	O
filename	*(char)
,	O
name	*(char)
)	O
;	O
if	O
(	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
!=	O
NULL	O
)	O
return	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
else	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
;	O
++	O
j	int
)	O
{	O
const	O
char	O
*	O
dir	*(char)
=	O
dir_list_nth	(int)->(*(char))
(	O
j	int
)	O
;	O
char	O
*	O
new_filename	*(char)
;	O
if	O
(	O
dir	*(char)
==	O
NULL	O
)	O
break	O
;	O
new_filename	*(char)
=	O
xconcatenated_filename	(*(char),*(char),*(char))->(*(char))
(	O
dir	*(char)
,	O
filename	*(char)
,	O
NULL	O
)	O
;	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
locating_rule_match	(*(struct(*(char),*(char),struct(*(struct`),long,long),*(char))),*(char),*(char))->(*(char))
(	O
&	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
[	O
i	long
]	O
,	O
new_filename	*(char)
,	O
name	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
new_filename	*(char)
)	O
;	O
if	O
(	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
!=	O
NULL	O
)	O
return	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
}	O
}	O
}	O
return	O
NULL	O
;	O
}	O
static	O
void	O
missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
const	O
char	O
*	O
attribute	*(char)
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"\"%s\" node does not have \"%s\""	*(char)
)	O
,	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
,	O
attribute	*(char)
)	O
;	O
}	O
static	O
void	O
document_locating_rule_destroy	(*(struct(*(char),*(char),*(char))))->(void)
(	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
*	O
rule	*(struct(*(char),*(char),*(char)))
)	O
{	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
)	O
;	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
local_name	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
}	O
static	O
void	O
document_locating_rule_list_add	(*(struct(*(struct(*`,*`,*`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
struct	O
document_locating_rule_list_ty	struct(*(struct(*(char),*(char),*(char))),long,long)
*	O
rules	*(struct)
,	O
xmlNode	struct
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
{	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
rule	*(struct(*(char),*(char),*(char)))
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"target"	*(char)
)	O
)	O
{	O
missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"target"	*(char)
)	O
;	O
return	O
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
rule	*(struct(*(char),*(char),*(char)))
,	O
0	int
,	O
sizeof	O
(	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
)	O
)	O
;	O
if	O
(	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"ns"	*(char)
)	O
)	O
rule	*(struct(*(char),*(char),*(char)))
.	O
ns	*(struct(*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct)))
=	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"ns"	*(char)
)	O
;	O
if	O
(	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"localName"	*(char)
)	O
)	O
rule	*(struct(*(char),*(char),*(char)))
.	O
local_name	*(char)
=	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"localName"	*(char)
)	O
;	O
rule	*(struct(*(char),*(char),*(char)))
.	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"target"	*(char)
)	O
;	O
if	O
(	O
rules	*(struct)
->	O
nitems	long
==	O
rules	*(struct)
->	O
nitems_max	long
)	O
{	O
rules	*(struct)
->	O
nitems_max	long
=	O
2	int
*	O
rules	*(struct)
->	O
nitems_max	long
+	O
1	int
;	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
)	O
*	O
rules	*(struct)
->	O
nitems_max	long
)	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
[	O
rules	*(struct)
->	O
nitems	long
++	O
]	O
,	O
&	O
rule	*(struct(*(char),*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
document_locating_rule_ty	struct(*(char),*(char),*(char))
)	O
)	O
;	O
}	O
static	O
void	O
locating_rule_destroy	(*(struct(*(char),*(char),struct(*(struct`),long,long),*(char))))->(void)
(	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
*	O
rule	*(struct(*(char),*(char),*(char)))
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
rule	*(struct(*(char),*(char),*(char)))
->	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
.	O
nitems	long
;	O
i	long
++	O
)	O
document_locating_rule_destroy	(*(struct(*(char),*(char),*(char))))->(void)
(	O
&	O
rule	*(struct(*(char),*(char),*(char)))
->	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
.	O
items	*(struct(*(char),*(char),*(char)))
[	O
i	long
]	O
)	O
;	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
.	O
items	*(struct(*(char),*(char),*(char)))
)	O
;	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
name	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
pattern	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
rule	*(struct(*(char),*(char),*(char)))
->	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
)	O
;	O
}	O
static	O
bool	bool
locating_rule_list_add_from_file	(*(struct(*(struct(*`,*`,struct`,*`)),long,long)),*(char))->(bool)
(	O
struct	O
locating_rule_list_ty	struct
*	O
rules	*(struct)
,	O
const	O
char	O
*	O
rule_file_name	*(char)
)	O
{	O
xmlDoc	struct
*	O
doc	*(struct)
;	O
xmlNode	struct
*	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
*	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
doc	*(struct)
=	O
xmlReadFile	(*(char),*(char),int)->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))
(	O
rule_file_name	*(char)
,	O
"utf-8"	*(char)
,	O
XML_PARSE_NONET	int
|	O
XML_PARSE_NOWARNING	int
|	O
XML_PARSE_NOBLANKS	int
|	O
XML_PARSE_NOERROR	int
)	O
;	O
if	O
(	O
doc	*(struct)
==	O
NULL	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"cannot read XML file %s"	*(char)
)	O
,	O
rule_file_name	*(char)
)	O
;	O
return	O
false	int
;	O
}	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
xmlDocGetRootElement	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))
(	O
doc	*(struct)
)	O
;	O
if	O
(	O
!	O
(	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
,	O
BAD_CAST	O
"locatingRules"	*(char)
)	O
)	O
)	O
{	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"the root element is not \"locatingRules\""	*(char)
)	O
)	O
;	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
return	O
false	int
;	O
}	O
for	O
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
root	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
;	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
if	O
(	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
name	*(char)
,	O
BAD_CAST	O
"locatingRule"	*(char)
)	O
)	O
{	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
rule	*(struct(*(char),*(char),*(char)))
;	O
if	O
(	O
!	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"pattern"	*(char)
)	O
)	O
{	O
missing_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(void)
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"pattern"	*(char)
)	O
;	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
continue	O
;	O
}	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
rule	*(struct(*(char),*(char),*(char)))
,	O
0	int
,	O
sizeof	O
(	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
)	O
)	O
;	O
rule	*(struct(*(char),*(char),*(char)))
.	O
pattern	*(char)
=	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"pattern"	*(char)
)	O
;	O
if	O
(	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"name"	*(char)
)	O
)	O
rule	*(struct(*(char),*(char),*(char)))
.	O
name	*(char)
=	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"name"	*(char)
)	O
;	O
if	O
(	O
xmlHasProp	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),enum(int,int,int,int,int,int,int,int,int,int),*(void))))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
BAD_CAST	O
"target"	*(char)
)	O
)	O
rule	*(struct(*(char),*(char),*(char)))
.	O
target	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
=	O
get_attribute	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)),*(char))->(*(char))
(	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
,	O
"target"	*(char)
)	O
;	O
else	O
{	O
xmlNode	struct
*	O
n	long
;	O
for	O
(	O
n	long
=	O
node	*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(char),*(struct`),*(struct`),*(void),short,short)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,int,*(struct`),*(struct`),*(struct`),*(char),*(char),*(void),*(void),*(char),int,*(struct`),*(void),int,int)),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(char),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),enum(int,int,int,int,int,int,int,int,int,int),*(void))),*(struct(*(struct`),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),*(void),*(struct`))),*(void),short,short))
->	O
children	*(struct)
;	O
n	long
;	O
n	long
=	O
n	long
->	O
next	*(struct(*(struct(*(struct`),*(char))),*(char)))
)	O
{	O
if	O
(	O
xmlStrEqual	(*(char),*(char))->(int)
(	O
n	long
->	O
name	*(char)
,	O
BAD_CAST	O
"documentRule"	*(char)
)	O
)	O
document_locating_rule_list_add	(*(struct(*(struct(*`,*`,*`)),long,long)),*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,enum(int,int,int,int,int,int,int,int,int,int),*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(void),short,short)))->(void)
(	O
&	O
rule	*(struct(*(char),*(char),*(char)))
.	O
doc_rules	struct(*(struct(*(char),*(char),*(char))),long,long)
,	O
n	long
)	O
;	O
}	O
}	O
if	O
(	O
rules	*(struct)
->	O
nitems	long
==	O
rules	*(struct)
->	O
nitems_max	long
)	O
{	O
rules	*(struct)
->	O
nitems_max	long
=	O
2	int
*	O
rules	*(struct)
->	O
nitems_max	long
+	O
1	int
;	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
)	O
*	O
rules	*(struct)
->	O
nitems_max	long
)	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
&	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
[	O
rules	*(struct)
->	O
nitems	long
++	O
]	O
,	O
&	O
rule	*(struct(*(char),*(char),*(char)))
,	O
sizeof	O
(	O
struct	O
locating_rule_ty	struct(*(char),*(char),struct(*(struct(*(char),*(char),*(char))),long,long),*(char))
)	O
)	O
;	O
}	O
}	O
xmlFreeDoc	(*(struct(*(void),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,short,short)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,int,int,*`,*`,*`,*`,*`,*`,*`,*`,int,*`,*`,int,int)),int,int,*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,*`,*`)),*(char),*(char),*(void),*(void),*(char),int,*(struct),*(void),int,int)))->(void)
(	O
doc	*(struct)
)	O
;	O
return	O
true	int
;	O
}	O
bool	bool
locating_rule_list_add_from_directory	(*(struct),*(char))->(bool)
(	O
struct	O
locating_rule_list_ty	struct
*	O
rules	*(struct)
,	O
const	O
char	O
*	O
directory	*(char)
)	O
{	O
DIR	struct
*	O
dirp	*(struct)
;	O
dirp	*(struct)
=	O
opendir	(*(char))->(*(struct))
(	O
directory	*(char)
)	O
;	O
if	O
(	O
dirp	*(struct)
==	O
NULL	O
)	O
return	O
false	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
struct	O
dirent	struct(long,long,short,char,array(char))
*	O
dp	*(struct(long,long,short,char,array(char)))
;	O
errno	O
=	O
0	int
;	O
dp	*(struct(long,long,short,char,array(char)))
=	O
readdir	(*(struct))->(*(struct(long,long,short,char,array(char))))
(	O
dirp	*(struct)
)	O
;	O
if	O
(	O
dp	*(struct(long,long,short,char,array(char)))
!=	O
NULL	O
)	O
{	O
const	O
char	O
*	O
name	*(char)
=	O
dp	*(struct(long,long,short,char,array(char)))
->	O
d_name	array(char)
;	O
size_t	long
namlen	long
=	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
;	O
if	O
(	O
namlen	long
>	O
4	int
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
name	*(char)
+	O
namlen	long
-	O
4	int
,	O
".loc"	*(char)
,	O
4	int
)	O
==	O
0	int
)	O
{	O
char	O
*	O
locator_file_name	*(char)
=	O
xconcatenated_filename	(*(char),*(char),*(char))->(*(char))
(	O
directory	*(char)
,	O
name	*(char)
,	O
NULL	O
)	O
;	O
locating_rule_list_add_from_file	(*(struct(*(struct(*`,*`,struct`,*`)),long,long)),*(char))->(bool)
(	O
rules	*(struct)
,	O
locator_file_name	*(char)
)	O
;	O
free	*((*(char))->(void))
(	O
locator_file_name	*(char)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
errno	O
!=	O
0	int
)	O
return	O
false	int
;	O
else	O
break	O
;	O
}	O
if	O
(	O
closedir	(*(struct))->(int)
(	O
dirp	*(struct)
)	O
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
struct	O
locating_rule_list_ty	struct
*	O
locating_rule_list_alloc	()->(*(struct))
(	O
void	O
)	O
{	O
struct	O
locating_rule_list_ty	struct
*	O
result	*(*(void))
;	O
xmlCheckVersion	(int)->(void)
(	O
LIBXML_VERSION	int
)	O
;	O
result	*(*(void))
=	O
XCALLOC	O
(	O
1	int
,	O
struct	O
locating_rule_list_ty	struct
)	O
;	O
return	O
result	*(*(void))
;	O
}	O
void	O
locating_rule_list_destroy	(*(struct(*(struct(*`,*`,struct`,*`)),long,long)))->(void)
(	O
struct	O
locating_rule_list_ty	struct
*	O
rules	*(struct)
)	O
{	O
while	O
(	O
rules	*(struct)
->	O
nitems	long
--	O
>	O
0	int
)	O
locating_rule_destroy	(*(struct(*(char),*(char),struct(*(struct`),long,long),*(char))))->(void)
(	O
&	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
[	O
rules	*(struct)
->	O
nitems	long
]	O
)	O
;	O
free	*((*(char))->(void))
(	O
rules	*(struct)
->	O
items	*(struct(*(char),*(char),*(char)))
)	O
;	O
}	O
void	O
locating_rule_list_free	(*(struct))->(void)
(	O
struct	O
locating_rule_list_ty	struct
*	O
rules	*(struct)
)	O
{	O
if	O
(	O
rules	*(struct)
!=	O
NULL	O
)	O
locating_rule_list_destroy	(*(struct(*(struct(*`,*`,struct`,*`)),long,long)))->(void)
(	O
rules	*(struct)
)	O
;	O
free	*((*(char))->(void))
(	O
rules	*(struct)
)	O
;	O
}	O
