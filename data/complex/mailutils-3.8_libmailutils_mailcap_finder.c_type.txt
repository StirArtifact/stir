static	O
int	O
finder_init	(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))),int,*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void)))),*(*(char)))->(int)
(	O
mu_mailcap_finder_t	*(struct)
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
,	O
int	O
flags	int
,	O
struct	O
mu_mailcap_selector_closure	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
*	O
sc	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
,	O
struct	O
mu_mailcap_error_closure	struct(*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void)),*(void),*((*(void))->(void)))
*	O
ec	*(struct(*((*(void),*(struct`),*(char))->(void)),*(void),*((*(void))->(void))))
,	O
char	O
*	O
*	O
file_names	*(*(char))
)	O
;	O
int	O
mu_mailcap_finder_create	(*(*(struct)),int,*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void)))),*(*(char)))->(int)
(	O
mu_mailcap_finder_t	*(struct)
*	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
,	O
int	O
flags	int
,	O
struct	O
mu_mailcap_selector_closure	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
*	O
sc	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
,	O
struct	O
mu_mailcap_error_closure	struct(*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void)),*(void),*((*(void))->(void)))
*	O
ec	*(struct(*((*(void),*(struct`),*(char))->(void)),*(void),*((*(void))->(void))))
,	O
char	O
*	O
*	O
file_names	*(*(char))
)	O
{	O
int	O
rc	int
;	O
mu_mailcap_finder_t	*(struct)
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
;	O
if	O
(	O
!	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
!	O
file_names	*(*(char))
)	O
return	O
EINVAL	int
;	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
*	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
)	O
;	O
if	O
(	O
!	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
)	O
return	O
ENOMEM	int
;	O
rc	int
=	O
finder_init	(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))),int,*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void)))),*(*(char)))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
,	O
flags	int
,	O
sc	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
,	O
ec	*(struct(*((*(void),*(struct`),*(char))->(void)),*(void),*((*(void))->(void))))
,	O
file_names	*(*(char))
)	O
;	O
if	O
(	O
rc	int
)	O
mu_mailcap_finder_destroy	(*(*(struct)))->(void)
(	O
&	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
)	O
;	O
else	O
*	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
=	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
finder_init	(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))),int,*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))),*(struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void)))),*(*(char)))->(int)
(	O
mu_mailcap_finder_t	*(struct)
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
,	O
int	O
flags	int
,	O
struct	O
mu_mailcap_selector_closure	struct(*((*(struct),*(void))->(int)),*(void),*((*(void))->(void)))
*	O
sc	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
,	O
struct	O
mu_mailcap_error_closure	struct(*((*(void),*(struct(struct(*`,int,int),struct(*`,int,int))),*(char))->(void)),*(void),*((*(void))->(void)))
*	O
ec	*(struct(*((*(void),*(struct`),*(char))->(void)),*(void),*((*(void))->(void))))
,	O
char	O
*	O
*	O
file_names	*(*(char))
)	O
{	O
int	O
rc	int
;	O
size_t	long
i	long
;	O
rc	int
=	O
mu_mailcap_create	(*(*(struct)))->(int)
(	O
&	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_mailcap_set_flags	(*(struct),int)->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
,	O
flags	int
)	O
;	O
if	O
(	O
sc	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
)	O
{	O
rc	int
=	O
mu_mailcap_set_selector	(*(struct),*(struct(*((*`,*`)->(int)),*(void),*((*`)->(void)))))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
,	O
sc	*(struct(*((*(struct`),*(void))->(int)),*(void),*((*(void))->(void))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
ec	*(struct(*((*(void),*(struct`),*(char))->(void)),*(void),*((*(void))->(void))))
)	O
{	O
rc	int
=	O
mu_mailcap_set_error	(*(struct),*(struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void)))))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
,	O
ec	*(struct(*((*(void),*(struct`),*(char))->(void)),*(void),*((*(void))->(void))))
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
file_names	*(*(char))
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
access	(*(char),int)->(int)
(	O
file_names	*(*(char))
[	O
i	long
]	O
,	O
F_OK	int
)	O
)	O
continue	O
;	O
mu_mailcap_parse_file	(*(struct),*(char))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
,	O
file_names	*(*(char))
[	O
i	long
]	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
void	O
mu_mailcap_finder_destroy	(*(*(struct)))->(void)
(	O
mu_mailcap_finder_t	*(struct)
*	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
)	O
{	O
if	O
(	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
&&	O
*	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
)	O
{	O
mu_mailcap_finder_t	*(struct)
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
=	O
*	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
;	O
mu_iterator_destroy	(*(*(struct)))->(void)
(	O
&	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
)	O
;	O
mu_mailcap_destroy	(*(*(struct)))->(void)
(	O
&	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
)	O
;	O
free	(*(void))->(void)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
)	O
;	O
*	O
pfinder	*(*(struct(*(struct(int,*`,struct`,struct`,struct`)),*(struct))))
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_mailcap_finder_next_match	(*(struct),*(*(struct)))->(int)
(	O
mu_mailcap_finder_t	*(struct)
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
,	O
mu_mailcap_entry_t	*(struct)
*	O
ret_entry	*(*(struct))
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
!	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
ret_entry	*(*(struct))
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
!	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
)	O
{	O
rc	int
=	O
mu_mailcap_get_iterator	(*(struct),*(*(struct)))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
mcp	*(struct(int,*(struct),struct(*((*`,*`)->(int)),*(void),*((*`)->(void))),struct(*((*`,*`,*`)->(void)),*(void),*((*`)->(void))),struct(struct(*(char),int,int),struct(*(char),int,int))))
,	O
&	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_iterator_first	(*(struct))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
)	O
;	O
}	O
else	O
rc	int
=	O
mu_iterator_next	(*(struct))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
mu_iterator_is_done	(*(struct))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
)	O
)	O
return	O
MU_ERR_NOENT	O
;	O
return	O
mu_iterator_current	(*(struct),*(*(void)))->(int)
(	O
finder	*(struct(*(struct(int,*(struct`),struct(*`,*`,*`),struct(*`,*`,*`),struct(struct`,struct`))),*(struct)))
->	O
itr	*(struct)
,	O
(	O
void	O
*	O
*	O
)	O
ret_entry	*(*(struct))
)	O
;	O
}	O
