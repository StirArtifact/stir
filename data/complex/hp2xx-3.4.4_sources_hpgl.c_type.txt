LineType	enum(int,int,int,int)
CurrentLineType	enum(int,int,int,int)
=	O
LT_solid	int
;	O
short	O
scale_flag	int
=	O
FALSE	int
;	O
short	O
record_off	short
=	O
FALSE	int
;	O
long	O
vec_cntr_w	long
=	O
0L	int
;	O
long	O
n_commands	long
=	O
0L	int
;	O
short	O
silent_mode	short
=	O
FALSE	int
;	O
FILE	struct
*	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
HPGL_Pt	struct(float,float)
HP_pos	struct(float,float)
=	O
{	O
0	int
,	O
0	int
}	O
;	O
HPGL_Pt	struct(float,float)
P1	struct(float,float)
=	O
{	O
P1X_default	int
,	O
P1Y_default	int
}	O
;	O
HPGL_Pt	struct(float,float)
P2	struct(float,float)
=	O
{	O
P2X_default	int
,	O
P2Y_default	int
}	O
;	O
int	O
iwflag	int
=	O
0	int
;	O
int	O
mode_vert	int
=	O
0	int
;	O
HPGL_Pt	struct(float,float)
C1	struct(float,float)
=	O
{	O
P1X_default	int
,	O
P1Y_default	int
}	O
;	O
HPGL_Pt	struct(float,float)
C2	struct(float,float)
=	O
{	O
P2X_default	int
,	O
P2Y_default	int
}	O
;	O
HPGL_Pt	struct(float,float)
S1	struct(float,float)
=	O
{	O
P1X_default	int
,	O
P1Y_default	int
}	O
;	O
HPGL_Pt	struct(float,float)
S2	struct(float,float)
=	O
{	O
P2X_default	int
,	O
P2Y_default	int
}	O
;	O
HPGL_Pt	struct(float,float)
Q	struct(float,float)
=	O
{	O
1.	int
,	O
1.	int
}	O
;	O
HPGL_Pt	struct(float,float)
M	struct(float,float)
;	O
extern	O
TextPar	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
;	O
static	O
float	O
xmin	double
,	O
xmax	double
,	O
ymin	double
,	O
ymax	double
,	O
neg_ticklen	float
,	O
pos_ticklen	float
;	O
static	O
double	O
Diag_P1_P2	double
,	O
pat_pos	double
;	O
static	O
HPGL_Pt	struct(float,float)
p_last	struct(float,float)
=	O
{	O
M_PI	int
,	O
M_PI	int
}	O
;	O
static	O
HPGL_Pt	struct(float,float)
polygons	array(struct(float,float))
[	O
MAXPOLY	int
]	O
;	O
static	O
int	O
vertices	int
=	O
-	O
1	int
;	O
static	O
short	O
polygon_mode	short
=	O
FALSE	int
;	O
static	O
int	O
filltype	int
=	O
1	int
;	O
static	O
float	O
hatchspace	float
=	O
0.	int
;	O
static	O
float	O
hatchangle	float
=	O
0.	int
;	O
static	O
float	O
saved_hatchspace	array(float)
[	O
2	int
]	O
=	O
{	O
0.	int
,	O
0.	int
}	O
;	O
static	O
float	O
saved_hatchangle	array(float)
[	O
2	int
]	O
=	O
{	O
0.	int
,	O
0.	int
}	O
;	O
static	O
float	O
thickness	float
=	O
0.	int
;	O
static	O
short	O
polygon_penup	short
=	O
FALSE	int
;	O
static	O
HPGL_Pt	struct(float,float)
anchor	struct(float,float)
=	O
{	O
100000.0	int
,	O
100000.0	int
}	O
;	O
static	O
HPGL_Pt	struct(float,float)
polystart	struct(float,float)
=	O
{	O
0.0	int
,	O
0.0	int
}	O
;	O
static	O
float	O
rot_cos	float
,	O
rot_sin	float
;	O
static	O
short	O
rotate_flag	short
=	O
FALSE	int
;	O
static	O
short	O
ps_flag	short
=	O
FALSE	int
;	O
static	O
short	O
ac_flag	short
=	O
FALSE	int
;	O
static	O
double	O
rot_ang	double
=	O
0.	int
;	O
static	O
double	O
rot_tmp	double
=	O
0.	int
;	O
static	O
short	O
mv_flag	short
=	O
FALSE	int
;	O
static	O
short	O
pg_flag	short
=	O
FALSE	int
;	O
static	O
short	O
ct_dist	short
=	O
FALSE	int
;	O
static	O
short	O
fixedcolor	short
=	O
FALSE	int
;	O
static	O
short	O
fixedwidth	short
=	O
FALSE	int
;	O
static	O
int	O
first_page	int
=	O
0	int
;	O
static	O
int	O
last_page	int
=	O
0	int
;	O
static	O
int	O
n_unexpected	int
=	O
0	int
;	O
static	O
int	O
n_unknown	int
=	O
0	int
;	O
static	O
int	O
page_number	int
=	O
1	int
;	O
static	O
long	O
vec_cntr_r	long
=	O
0L	int
;	O
static	O
short	O
pen	int
=	O
-	O
1	int
;	O
static	O
short	O
pens_in_use	array(short)
[	O
NUMPENS	int
]	O
;	O
static	O
short	O
pen_down	short
=	O
FALSE	int
;	O
static	O
short	O
plot_rel	short
=	O
FALSE	int
;	O
static	O
short	O
saved_penstate	short
=	O
FALSE	int
;	O
static	O
short	O
wu_relative	short
=	O
FALSE	int
;	O
static	O
int	O
again	int
=	O
FALSE	int
;	O
static	O
char	O
StrTerm	char
=	O
ETX	char
;	O
static	O
short	O
StrTermSilent	short
=	O
1	int
;	O
static	O
char	O
*	O
strbuf	*(char)
=	O
NULL	O
;	O
static	O
unsigned	O
int	O
strbufsize	int
=	O
MAX_LB_LEN	int
+	O
1	int
;	O
static	O
char	O
symbol_char	char
=	O
'\0'	O
;	O
static	O
unsigned	O
char	O
r_base	char
=	O
0	int
;	O
static	O
unsigned	O
char	O
g_base	char
=	O
0	int
;	O
static	O
unsigned	O
char	O
b_base	char
=	O
0	int
;	O
static	O
unsigned	O
char	O
r_max	char
=	O
255	int
;	O
static	O
unsigned	O
char	O
g_max	char
=	O
255	int
;	O
static	O
unsigned	O
char	O
b_max	char
=	O
255	int
;	O
static	O
void	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
int	O
code	int
,	O
int	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
const	O
char	O
*	O
msg	*(char)
;	O
char	O
tmpstr	array(char)
[	O
21	int
]	O
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
0	int
:	O
msg	*(char)
=	O
"Illegal parameters"	*(char)
;	O
break	O
;	O
case	O
1	int
:	O
msg	*(char)
=	O
"Error in first parameter"	*(char)
;	O
break	O
;	O
case	O
2	int
:	O
msg	*(char)
=	O
"No second parameter"	*(char)
;	O
break	O
;	O
case	O
3	int
:	O
msg	*(char)
=	O
"No third parameter"	*(char)
;	O
break	O
;	O
case	O
4	int
:	O
msg	*(char)
=	O
"No fourth parameter"	*(char)
;	O
break	O
;	O
case	O
98	int
:	O
msg	*(char)
=	O
"sscanf error: corrupted file?"	*(char)
;	O
break	O
;	O
case	O
99	int
:	O
default	O
:	O
msg	*(char)
=	O
"Internal error"	*(char)
;	O
break	O
;	O
}	O
Eprintf	(*(char))->(void)
(	O
"\nError in command %c%c: %s\n"	*(char)
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
>>	O
8	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
&	O
0xFF	int
,	O
msg	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
" @ Cmd %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
fseek	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),long,int)->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
-	O
10L	int
,	O
SEEK_CUR	int
)	O
;	O
read_string	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
tmpstr	array(char)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tmpstr	array(char)
[	O
20	int
]	O
=	O
'\0'	O
;	O
Eprintf	(*(char))->(void)
(	O
" lately read: %s\n"	*(char)
,	O
tmpstr	array(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
static	O
void	O
reset_HPGL	()->(void)
(	O
void	O
)	O
{	O
int	O
i	int
;	O
p_last	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
y	int
=	O
M_PI	int
;	O
pen_down	short
=	O
FALSE	int
;	O
plot_rel	short
=	O
FALSE	int
;	O
pen	int
=	O
-	O
1	int
;	O
mv_flag	short
=	O
FALSE	int
;	O
wu_relative	short
=	O
FALSE	int
;	O
pg_flag	short
=	O
FALSE	int
;	O
iwflag	int
=	O
FALSE	int
;	O
ps_flag	short
=	O
FALSE	int
;	O
ac_flag	short
=	O
FALSE	int
;	O
filltype	int
=	O
1	int
;	O
saved_hatchangle	array(float)
[	O
0	int
]	O
=	O
saved_hatchangle	array(float)
[	O
1	int
]	O
=	O
0.	int
;	O
saved_hatchspace	array(float)
[	O
0	int
]	O
=	O
saved_hatchspace	array(float)
[	O
1	int
]	O
=	O
0.	int
;	O
ct_dist	short
=	O
FALSE	int
;	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_solid	int
;	O
set_line_style_defaults	()->(void)
(	O
)	O
;	O
CurrentLineAttr	struct(enum(int,int,int,int),enum(int,int,int,int,int,int),int)
.	O
Join	enum(int,int,int,int,int,int)
=	O
LAJ_plain_miter	int
;	O
CurrentLineAttr	struct(enum(int,int,int,int),enum(int,int,int,int,int,int),int)
.	O
End	enum(int,int,int,int)
=	O
LAE_butt	int
;	O
CurrentLineAttr	struct(enum(int,int,int,int),enum(int,int,int,int,int,int),int)
.	O
Limit	int
=	O
5	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
sstrokewidth	double
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
astrokewidth	double
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
strokewidth	double
=	O
0.11	int
;	O
StrTerm	char
=	O
ETX	char
;	O
StrTermSilent	short
=	O
1	int
;	O
if	O
(	O
strbuf	*(char)
==	O
NULL	O
)	O
{	O
strbuf	*(char)
=	O
malloc	(long)->(*(void))
(	O
strbufsize	int
)	O
;	O
if	O
(	O
strbuf	*(char)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nNo memory !\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
strbuf	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
P1	struct(float,float)
.	O
x	int
=	O
P1X_default	int
;	O
P1	struct(float,float)
.	O
y	int
=	O
P1Y_default	int
;	O
Diag_P1_P2	double
=	O
HYPOT	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
CurrentLinePatLen	double
=	O
0.04	int
*	O
Diag_P1_P2	double
;	O
pat_pos	double
=	O
0.0	int
;	O
scale_flag	int
=	O
FALSE	int
;	O
S1	struct(float,float)
=	O
P1	struct(float,float)
;	O
S2	struct(float,float)
=	O
P2	struct(float,float)
;	O
Q	struct(float,float)
.	O
x	int
=	O
Q	struct(float,float)
.	O
y	int
=	O
1.0	int
;	O
HP_pos	struct(float,float)
.	O
x	int
=	O
HP_pos	struct(float,float)
.	O
y	int
=	O
0.0	int
;	O
neg_ticklen	float
=	O
0.005	int
;	O
pos_ticklen	float
=	O
0.005	int
;	O
symbol_char	char
=	O
'\0'	O
;	O
rot_ang	double
-=	O
rot_tmp	double
;	O
rot_tmp	double
=	O
0.	int
;	O
if	O
(	O
rot_ang	double
==	O
0.	int
)	O
rotate_flag	short
=	O
FALSE	int
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
rot_cos	float
=	O
cos	(double)->(double)
(	O
M_PI	int
*	O
rot_ang	double
/	O
180.0	int
)	O
;	O
rot_sin	float
=	O
sin	(double)->(double)
(	O
M_PI	int
*	O
rot_ang	double
/	O
180.0	int
)	O
;	O
}	O
init_text_par	()->(void)
(	O
)	O
;	O
if	O
(	O
fixedcolor	short
==	O
FALSE	int
)	O
{	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxBackground	int
,	O
255	int
,	O
255	int
,	O
255	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxForeground	int
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxRed	int
,	O
255	int
,	O
0	int
,	O
0	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxGreen	int
,	O
0	int
,	O
255	int
,	O
0	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxBlue	int
,	O
0	int
,	O
0	int
,	O
255	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxCyan	int
,	O
0	int
,	O
255	int
,	O
255	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxMagenta	int
,	O
255	int
,	O
0	int
,	O
255	int
)	O
;	O
set_color_rgb	(short,char,char,char)->(void)
(	O
xxYellow	int
,	O
255	int
,	O
255	int
,	O
0	int
)	O
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
0	int
]	O
=	O
xxBackground	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
1	int
]	O
=	O
xxForeground	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
2	int
]	O
=	O
xxRed	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
3	int
]	O
=	O
xxGreen	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
4	int
]	O
=	O
xxBlue	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
5	int
]	O
=	O
xxCyan	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
6	int
]	O
=	O
xxMagenta	int
;	O
pt	struct(array(float),array(short),array(array(char)))
.	O
color	array(short)
[	O
7	int
]	O
=	O
xxYellow	int
;	O
}	O
if	O
(	O
fixedwidth	short
==	O
FALSE	int
)	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
8	int
;	O
i	int
++	O
)	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
i	int
]	O
=	O
0.1	int
;	O
record_off	short
=	O
(	O
first_page	int
>	O
page_number	int
)	O
||	O
(	O
(	O
last_page	int
<	O
page_number	int
)	O
&&	O
(	O
last_page	int
>	O
0	int
)	O
)	O
;	O
}	O
static	O
void	O
init_HPGL	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
const	O
IN_PAR	struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
silent_mode	short
=	O
(	O
short	O
)	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
;	O
xmin	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
x0	double
;	O
ymin	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
y0	(double)->(double)
;	O
xmax	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
x1	double
;	O
ymax	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
y1	(double)->(double)
;	O
fixedcolor	short
=	O
(	O
short	O
)	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hwcolor	int
;	O
fixedwidth	short
=	O
(	O
short	O
)	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hwsize	int
;	O
r_base	char
=	O
g_base	char
=	O
b_base	char
=	O
0	int
;	O
r_max	char
=	O
g_max	char
=	O
b_max	char
=	O
255	int
;	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
=	O
8	int
;	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxcolor	int
=	O
1	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
pens_in_use	array(short)
,	O
0	int
,	O
NUMPENS	int
*	O
sizeof	O
(	O
short	O
)	O
)	O
;	O
first_page	int
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
first_page	int
;	O
last_page	int
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
last_page	int
;	O
record_off	short
=	O
(	O
first_page	int
>	O
page_number	int
)	O
||	O
(	O
(	O
last_page	int
<	O
page_number	int
)	O
&&	O
(	O
last_page	int
>	O
0	int
)	O
)	O
;	O
rot_ang	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
rotation	double
;	O
rotate_flag	short
=	O
(	O
rot_ang	double
!=	O
0.0	int
)	O
?	O
TRUE	int
:	O
FALSE	int
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
rot_cos	float
=	O
cos	(double)->(double)
(	O
M_PI	int
*	O
rot_ang	double
/	O
180.0	int
)	O
;	O
rot_sin	float
=	O
sin	(double)->(double)
(	O
M_PI	int
*	O
rot_ang	double
/	O
180.0	int
)	O
;	O
}	O
vec_cntr_r	long
=	O
0L	int
;	O
vec_cntr_w	long
=	O
0L	int
;	O
n_unexpected	int
=	O
0	int
;	O
n_commands	long
=	O
0	int
;	O
n_unknown	int
=	O
0	int
;	O
if	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hwlimit	struct(float,float)
.	O
x	int
>	O
0.	int
)	O
P2	struct(float,float)
.	O
x	int
=	O
S2	struct(float,float)
.	O
x	int
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hwlimit	struct(float,float)
.	O
x	int
;	O
if	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hwlimit	struct(float,float)
.	O
y	int
>	O
0.	int
)	O
P2	struct(float,float)
.	O
y	int
=	O
S2	struct(float,float)
.	O
y	int
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hwlimit	struct(float,float)
.	O
y	int
;	O
reset_HPGL	()->(void)
(	O
)	O
;	O
}	O
static	O
void	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
const	O
HPGL_Pt	struct(float,float)
*	O
p_usr	*(struct(float,float))
,	O
HPGL_Pt	struct(float,float)
*	O
p_plot	*(struct(float,float))
)	O
{	O
p_plot	*(struct(float,float))
->	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p_usr	*(struct(float,float))
->	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
p_plot	*(struct(float,float))
->	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p_usr	*(struct(float,float))
->	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
}	O
static	O
void	O
Plotter_to_User_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
const	O
HPGL_Pt	struct(float,float)
*	O
p_plot	*(struct(float,float))
,	O
HPGL_Pt	struct(float,float)
*	O
p_usr	*(struct(float,float))
)	O
{	O
p_usr	*(struct(float,float))
->	O
x	int
=	O
S1	struct(float,float)
.	O
x	int
+	O
(	O
p_plot	*(struct(float,float))
->	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
;	O
p_usr	*(struct(float,float))
->	O
y	int
=	O
S1	struct(float,float)
.	O
y	int
+	O
(	O
p_plot	*(struct(float,float))
->	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
;	O
}	O
void	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
PlotCmd	enum(int,int,int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int,int,int)
)	O
{	O
if	O
(	O
record_off	short
)	O
return	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
switch	O
(	O
vec_cntr_w	long
++	O
)	O
{	O
case	O
0	int
:	O
Eprintf	(*(char))->(void)
(	O
"Writing Cmd: "	*(char)
)	O
;	O
break	O
;	O
case	O
1	int
:	O
Eprintf	(*(char))->(void)
(	O
"1 "	*(char)
)	O
;	O
break	O
;	O
case	O
2	int
:	O
Eprintf	(*(char))->(void)
(	O
"2 "	*(char)
)	O
;	O
break	O
;	O
case	O
5	int
:	O
Eprintf	(*(char))->(void)
(	O
"5 "	*(char)
)	O
;	O
break	O
;	O
case	O
10	int
:	O
Eprintf	(*(char))->(void)
(	O
"10 "	*(char)
)	O
;	O
break	O
;	O
case	O
20	int
:	O
Eprintf	(*(char))->(void)
(	O
"20 "	*(char)
)	O
;	O
break	O
;	O
case	O
50	int
:	O
Eprintf	(*(char))->(void)
(	O
"50 "	*(char)
)	O
;	O
break	O
;	O
case	O
100	int
:	O
Eprintf	(*(char))->(void)
(	O
"100 "	*(char)
)	O
;	O
break	O
;	O
case	O
200	int
:	O
Eprintf	(*(char))->(void)
(	O
"200 "	*(char)
)	O
;	O
break	O
;	O
case	O
500	int
:	O
Eprintf	(*(char))->(void)
(	O
"500 "	*(char)
)	O
;	O
break	O
;	O
case	O
1000	int
:	O
Eprintf	(*(char))->(void)
(	O
"1k "	*(char)
)	O
;	O
break	O
;	O
case	O
2000	int
:	O
Eprintf	(*(char))->(void)
(	O
"2k "	*(char)
)	O
;	O
break	O
;	O
case	O
5000	int
:	O
Eprintf	(*(char))->(void)
(	O
"5k "	*(char)
)	O
;	O
break	O
;	O
case	O
10000	int
:	O
Eprintf	(*(char))->(void)
(	O
"10k "	*(char)
)	O
;	O
break	O
;	O
case	O
20000	int
:	O
Eprintf	(*(char))->(void)
(	O
"20k "	*(char)
)	O
;	O
break	O
;	O
case	O
50000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"50k "	*(char)
)	O
;	O
break	O
;	O
case	O
100000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"100k "	*(char)
)	O
;	O
break	O
;	O
case	O
200000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"200k "	*(char)
)	O
;	O
break	O
;	O
case	O
500000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"500k "	*(char)
)	O
;	O
break	O
;	O
case	O
1000000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"1000k "	*(char)
)	O
;	O
break	O
;	O
case	O
2000000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"2000k "	*(char)
)	O
;	O
break	O
;	O
case	O
3000000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"3000k "	*(char)
)	O
;	O
break	O
;	O
case	O
4000000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"4000k "	*(char)
)	O
;	O
break	O
;	O
case	O
5000000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"5000k... "	*(char)
)	O
;	O
break	O
;	O
case	O
10000000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"10000k "	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
(	O
int	O
)	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
{	O
PError	(*(char))->(void)
(	O
"PlotCmd_to_tmpfile"	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Error @ Cmd %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
void	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
const	O
HPGL_Pt	struct(float,float)
*	O
pf	*(struct(float,float))
)	O
{	O
if	O
(	O
record_off	short
)	O
return	O
;	O
if	O
(	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
(	O
VOID	void
*	O
)	O
pf	*(struct(float,float))
,	O
sizeof	O
(	O
*	O
pf	*(struct(float,float))
)	O
,	O
1	int
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
1	int
)	O
{	O
PError	(*(char))->(void)
(	O
"HPGL_Pt_to_tmpfile"	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Error @ Cmd %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
xmin	double
=	O
MIN	O
(	O
pf	*(struct(float,float))
->	O
x	int
,	O
xmin	double
)	O
;	O
ymin	double
=	O
MIN	O
(	O
pf	*(struct(float,float))
->	O
y	int
,	O
ymin	double
)	O
;	O
xmax	double
=	O
MAX	O
(	O
pf	*(struct(float,float))
->	O
x	int
,	O
xmax	double
)	O
;	O
ymax	double
=	O
MAX	O
(	O
pf	*(struct(float,float))
->	O
y	int
,	O
ymax	double
)	O
;	O
}	O
void	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
HPGL_Pt	struct(float,float)
pf	*(struct(float,float))
)	O
{	O
if	O
(	O
record_off	short
)	O
return	O
;	O
polygons	array(struct(float,float))
[	O
++	O
vertices	int
]	O
=	O
pf	*(struct(float,float))
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
double	O
tmp	double
=	O
rot_cos	float
*	O
pf	*(struct(float,float))
.	O
x	int
-	O
rot_sin	float
*	O
pf	*(struct(float,float))
.	O
y	int
;	O
pf	*(struct(float,float))
.	O
y	int
=	O
rot_sin	float
*	O
pf	*(struct(float,float))
.	O
x	int
+	O
rot_cos	float
*	O
pf	*(struct(float,float))
.	O
y	int
;	O
pf	*(struct(float,float))
.	O
x	int
=	O
tmp	double
;	O
}	O
xmin	double
=	O
MIN	O
(	O
pf	*(struct(float,float))
.	O
x	int
,	O
xmin	double
)	O
;	O
ymin	double
=	O
MIN	O
(	O
pf	*(struct(float,float))
.	O
y	int
,	O
ymin	double
)	O
;	O
xmax	double
=	O
MAX	O
(	O
pf	*(struct(float,float))
.	O
x	int
,	O
xmax	double
)	O
;	O
ymax	double
=	O
MAX	O
(	O
pf	*(struct(float,float))
.	O
y	int
,	O
ymax	double
)	O
;	O
}	O
static	O
void	O
LPattern_Generator	(*(struct(float,float)),double,double,double,double)->(void)
(	O
HPGL_Pt	struct(float,float)
*	O
pa	*(struct(float,float))
,	O
double	O
dx	double
,	O
double	O
dy	double
,	O
double	O
start_of_pat	double
,	O
double	O
end_of_pat	double
)	O
{	O
double	O
length_of_ele	double
,	O
start_of_action	double
,	O
end_of_action	double
;	O
static	O
double	O
*	O
p_cur_pat	*(double)
;	O
p_cur_pat	*(double)
=	O
lt	array(array(double))
[	O
(	O
LT_MIN	O
*	O
-	O
1	int
)	O
+	O
(	O
int	O
)	O
CurrentLinePattern	int
]	O
;	O
if	O
(	O
CurrentLineType	enum(int,int,int,int)
==	O
LT_adaptive	int
)	O
for	O
(	O
;	O
;	O
)	O
{	O
length_of_ele	double
=	O
(	O
double	O
)	O
*	O
p_cur_pat	*(double)
++	O
/	O
100	int
;	O
if	O
(	O
length_of_ele	double
<	O
0.	int
)	O
return	O
;	O
if	O
(	O
length_of_ele	double
<	O
1.e-5	int
)	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
PLOT_AT	int
)	O
;	O
else	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DRAW_TO	int
)	O
;	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
length_of_ele	double
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
length_of_ele	double
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
length_of_ele	double
=	O
(	O
double	O
)	O
*	O
p_cur_pat	*(double)
++	O
/	O
100	int
;	O
if	O
(	O
length_of_ele	double
<	O
0.	int
)	O
return	O
;	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
length_of_ele	double
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
length_of_ele	double
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
}	O
else	O
for	O
(	O
end_of_action	double
=	O
0.0	int
;	O
;	O
)	O
{	O
start_of_action	double
=	O
end_of_action	double
;	O
length_of_ele	double
=	O
(	O
double	O
)	O
*	O
p_cur_pat	*(double)
++	O
/	O
100	int
;	O
if	O
(	O
length_of_ele	double
<	O
0.	int
)	O
return	O
;	O
if	O
(	O
length_of_ele	double
<	O
1.e-5	int
)	O
{	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
PLOT_AT	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
}	O
else	O
{	O
end_of_action	double
+=	O
length_of_ele	double
;	O
if	O
(	O
end_of_action	double
>	O
start_of_pat	double
)	O
{	O
if	O
(	O
start_of_pat	double
<=	O
start_of_action	double
)	O
{	O
if	O
(	O
end_of_action	double
<=	O
end_of_pat	double
)	O
{	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
length_of_ele	double
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
length_of_ele	double
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DRAW_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
}	O
else	O
{	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
(	O
end_of_pat	double
-	O
start_of_action	double
)	O
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
(	O
end_of_pat	double
-	O
start_of_action	double
)	O
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DRAW_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
return	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
end_of_action	double
<=	O
end_of_pat	double
)	O
{	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
(	O
end_of_action	double
-	O
start_of_pat	double
)	O
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
(	O
end_of_action	double
-	O
start_of_pat	double
)	O
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DRAW_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
}	O
else	O
{	O
if	O
(	O
end_of_pat	double
==	O
start_of_pat	double
)	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
PLOT_AT	int
)	O
;	O
else	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DRAW_TO	int
)	O
;	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
(	O
end_of_pat	double
-	O
start_of_pat	double
)	O
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
(	O
end_of_pat	double
-	O
start_of_pat	double
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
return	O
;	O
}	O
}	O
}	O
}	O
start_of_action	double
=	O
end_of_action	double
;	O
length_of_ele	double
=	O
(	O
double	O
)	O
*	O
p_cur_pat	*(double)
++	O
/	O
100	int
;	O
if	O
(	O
length_of_ele	double
<	O
0	int
)	O
return	O
;	O
end_of_action	double
+=	O
length_of_ele	double
;	O
if	O
(	O
end_of_action	double
>	O
start_of_pat	double
)	O
{	O
if	O
(	O
start_of_pat	double
<=	O
start_of_action	double
)	O
{	O
if	O
(	O
end_of_action	double
<=	O
end_of_pat	double
)	O
{	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
length_of_ele	double
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
length_of_ele	double
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
}	O
else	O
{	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
(	O
end_of_pat	double
-	O
start_of_action	double
)	O
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
(	O
end_of_pat	double
-	O
start_of_action	double
)	O
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
return	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
end_of_action	double
<=	O
end_of_pat	double
)	O
{	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
(	O
end_of_action	double
-	O
start_of_pat	double
)	O
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
(	O
end_of_action	double
-	O
start_of_pat	double
)	O
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
}	O
else	O
{	O
if	O
(	O
end_of_pat	double
==	O
start_of_pat	double
)	O
return	O
;	O
pa	*(struct(float,float))
->	O
x	int
+=	O
dx	double
*	O
(	O
end_of_pat	double
-	O
start_of_pat	double
)	O
;	O
pa	*(struct(float,float))
->	O
y	int
+=	O
dy	double
*	O
(	O
end_of_pat	double
-	O
start_of_pat	double
)	O
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pa	*(struct(float,float))
)	O
;	O
return	O
;	O
}	O
}	O
}	O
}	O
}	O
static	O
void	O
rect	int
(	O
int	O
relative	int
,	O
int	O
filled	int
,	O
float	O
cur_pensize	float
,	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
)	O
{	O
HPGL_Pt	struct(float,float)
p1	struct(float,float)
;	O
if	O
(	O
relative	int
)	O
{	O
p	struct(float,float)
.	O
x	int
+=	O
p_last	struct(float,float)
.	O
x	int
;	O
p	struct(float,float)
.	O
y	int
+=	O
p_last	struct(float,float)
.	O
y	int
;	O
}	O
if	O
(	O
!	O
filled	int
)	O
{	O
p1	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p_last	struct(float,float)
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p_last	struct(float,float)
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
else	O
{	O
vertices	int
=	O
-	O
1	int
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p_last	struct(float,float)
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p1	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p1	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p_last	struct(float,float)
.	O
y	int
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p1	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p1	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p_last	struct(float,float)
)	O
;	O
if	O
(	O
hatchspace	float
==	O
0.	int
)	O
hatchspace	float
=	O
cur_pensize	float
;	O
if	O
(	O
filltype	int
<	O
3	int
&&	O
thickness	float
>	O
0.	int
)	O
hatchspace	float
=	O
thickness	float
;	O
if	O
(	O
ac_flag	short
==	O
0	int
)	O
{	O
anchor	struct(float,float)
.	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
;	O
anchor	struct(float,float)
.	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
;	O
}	O
fill	(array(struct(float,float)),int,struct(float,float),struct(float,float),int,int,float,float)->(void)
(	O
polygons	array(struct(float,float))
,	O
vertices	int
,	O
anchor	struct(float,float)
,	O
P2	struct(float,float)
,	O
scale_flag	int
,	O
filltype	int
,	O
hatchspace	float
,	O
hatchangle	float
)	O
;	O
}	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p_last	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
static	O
void	O
rects	(int,int,float,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
int	O
relative	int
,	O
int	O
filled	int
,	O
float	O
cur_pensize	float
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
EA	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
rect	int
(	O
relative	int
,	O
filled	int
,	O
cur_pensize	float
,	O
p	struct(float,float)
)	O
;	O
}	O
}	O
int	O
read_PE_flags	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)))->(int)
(	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
int	O
c	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PE_flags	struct(int,int,int,int,int,int)
*	O
fl	*(struct(int,int,int,int,int,int))
)	O
{	O
short	O
old_pen	short
;	O
float	O
ftmp	float
;	O
int	O
ctmp	int
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
183	int
:	O
case	O
'7'	O
:	O
fl	*(struct(int,int,int,int,int,int))
->	O
sbmode	int
=	O
1	int
;	O
break	O
;	O
case	O
185	int
:	O
case	O
'9'	O
:	O
fl	*(struct(int,int,int,int,int,int))
->	O
rect	int
=	O
1	int
;	O
fl	*(struct(int,int,int,int,int,int))
->	O
up	int
=	O
1	int
;	O
break	O
;	O
case	O
186	int
:	O
case	O
':'	O
:	O
if	O
(	O
EOF	O
==	O
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
pen	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
PE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
old_pen	short
=	O
pen	int
;	O
read_PE_coord	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)),*(float))->(int)
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
pen	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fl	*(struct(int,int,int,int,int,int))
,	O
&	O
ftmp	float
)	O
;	O
pen	int
=	O
(	O
short	O
)	O
ftmp	float
;	O
if	O
(	O
pen	int
<	O
0	int
||	O
(	O
int	O
)	O
pen	int
>	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"\nIllegal pen number %d: replaced by %d\n"	*(char)
,	O
pen	int
,	O
pen	int
%	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
;	O
n_unexpected	int
++	O
;	O
pen	int
=	O
pen	int
%	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
;	O
}	O
if	O
(	O
pen	int
==	O
0	int
&&	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
>	O
-	O
1	int
)	O
pen	int
=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
;	O
if	O
(	O
old_pen	short
!=	O
pen	int
)	O
{	O
if	O
(	O
(	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
SET_PEN	int
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
||	O
(	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pen	int
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Writing to temporary file:"	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Error @ Cmd %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
if	O
(	O
pen	int
)	O
pens_in_use	array(short)
[	O
pen	int
]	O
=	O
1	int
;	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxcolor	int
=	O
MAX	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxcolor	int
,	O
(	O
int	O
)	O
pen	int
)	O
;	O
break	O
;	O
case	O
190	int
:	O
case	O
'>'	O
:	O
if	O
(	O
EOF	O
==	O
(	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
PE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
fl	*(struct(int,int,int,int,int,int))
->	O
fract	int
=	O
decode_PE_char	(int,*(struct(int,int,int,int,int,int)))->(int)
(	O
ctmp	int
,	O
fl	*(struct(int,int,int,int,int,int))
)	O
;	O
fl	*(struct(int,int,int,int,int,int))
->	O
fract	int
=	O
(	O
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
fract	int
>>	O
1	int
)	O
*	O
(	O
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
fract	int
&	O
0x01	int
)	O
?	O
-	O
1	int
:	O
1	int
)	O
)	O
;	O
break	O
;	O
case	O
188	int
:	O
case	O
'<'	O
:	O
fl	*(struct(int,int,int,int,int,int))
->	O
up	int
=	O
1	int
;	O
fl	*(struct(int,int,int,int,int,int))
->	O
rect	int
=	O
0	int
;	O
break	O
;	O
case	O
189	int
:	O
case	O
'='	O
:	O
fl	*(struct(int,int,int,int,int,int))
->	O
abs	(int)->(int)
=	O
1	int
;	O
break	O
;	O
default	O
:	O
return	O
(	O
0	int
)	O
;	O
}	O
return	O
(	O
1	int
)	O
;	O
}	O
int	O
isPEterm	(int,*(struct(int,int,int,int,int,int)))->(int)
(	O
int	O
c	int
,	O
PE_flags	struct(int,int,int,int,int,int)
*	O
fl	*(struct(int,int,int,int,int,int))
)	O
{	O
if	O
(	O
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
sbmode	int
)	O
&&	O
(	O
(	O
c	int
>	O
94	int
)	O
||	O
(	O
c	int
<	O
63	int
)	O
)	O
)	O
return	O
1	int
;	O
if	O
(	O
(	O
!	O
fl	*(struct(int,int,int,int,int,int))
->	O
sbmode	int
)	O
&&	O
(	O
(	O
c	int
>	O
190	int
)	O
||	O
(	O
c	int
<	O
63	int
)	O
)	O
)	O
return	O
1	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
decode_PE_char	(int,*(struct(int,int,int,int,int,int)))->(int)
(	O
int	O
c	int
,	O
PE_flags	struct(int,int,int,int,int,int)
*	O
fl	*(struct(int,int,int,int,int,int))
)	O
{	O
if	O
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
sbmode	int
)	O
{	O
c	int
&=	O
0x7f	int
;	O
return	O
(	O
(	O
c	int
>	O
94	int
)	O
?	O
(	O
c	int
-	O
95	int
)	O
:	O
(	O
c	int
-	O
63	int
)	O
)	O
;	O
}	O
else	O
{	O
return	O
(	O
(	O
c	int
>	O
190	int
)	O
?	O
(	O
c	int
-	O
191	int
)	O
:	O
(	O
c	int
-	O
63	int
)	O
)	O
;	O
}	O
}	O
int	O
read_PE_coord	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)),*(float))->(int)
(	O
int	O
c	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PE_flags	struct(int,int,int,int,int,int)
*	O
fl	*(struct(int,int,int,int,int,int))
,	O
float	O
*	O
fv	*(float)
)	O
{	O
long	O
lv	long
=	O
0	int
;	O
int	O
i	int
=	O
0	int
;	O
int	O
shft	int
=	O
(	O
fl	*(struct(int,int,int,int,int,int))
->	O
sbmode	int
)	O
?	O
5	int
:	O
6	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
c	int
<	O
63	int
)	O
{	O
if	O
(	O
!	O
i	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"error in PE data!\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
}	O
lv	long
|=	O
(	O
(	O
long	O
)	O
decode_PE_char	(int,*(struct(int,int,int,int,int,int)))->(int)
(	O
c	int
,	O
fl	*(struct(int,int,int,int,int,int))
)	O
)	O
<<	O
(	O
i	int
*	O
shft	int
)	O
;	O
i	int
++	O
;	O
if	O
(	O
isPEterm	(int,*(struct(int,int,int,int,int,int)))->(int)
(	O
c	int
,	O
fl	*(struct(int,int,int,int,int,int))
)	O
)	O
{	O
break	O
;	O
}	O
if	O
(	O
EOF	O
==	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
PE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
*	O
fv	*(float)
=	O
(	O
float	O
)	O
(	O
(	O
(	O
lv	long
>>	O
1	int
)	O
*	O
(	O
(	O
lv	long
&	O
0x01	int
)	O
?	O
-	O
1	int
:	O
1	int
)	O
)	O
<<	O
fl	*(struct(int,int,int,int,int,int))
->	O
fract	int
)	O
;	O
return	O
(	O
1	int
)	O
;	O
}	O
int	O
read_PE_pair	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)),*(struct(float,float)))->(int)
(	O
int	O
c	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PE_flags	struct(int,int,int,int,int,int)
*	O
fl	*(struct(int,int,int,int,int,int))
,	O
HPGL_Pt	struct(float,float)
*	O
p	struct(float,float)
)	O
{	O
if	O
(	O
!	O
read_PE_coord	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)),*(float))->(int)
(	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fl	*(struct(int,int,int,int,int,int))
,	O
&	O
(	O
p	struct(float,float)
->	O
x	int
)	O
)	O
)	O
return	O
0	int
;	O
if	O
(	O
EOF	O
==	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
PE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
!	O
read_PE_coord	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)),*(float))->(int)
(	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fl	*(struct(int,int,int,int,int,int))
,	O
&	O
(	O
p	struct(float,float)
->	O
y	int
)	O
)	O
)	O
return	O
0	int
;	O
return	O
(	O
1	int
)	O
;	O
}	O
void	O
read_PE	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
c	int
;	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
;	O
PE_flags	struct(int,int,int,int,int,int)
fl	*(struct(int,int,int,int,int,int))
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
fract	int
=	O
0	int
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
sbmode	int
=	O
0	int
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
abs	(int)->(int)
=	O
0	int
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
up	int
=	O
0	int
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
pen	int
=	O
0	int
;	O
for	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
(	O
c	int
!=	O
EOF	O
)	O
&&	O
(	O
c	int
!=	O
';'	O
)	O
;	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
!	O
read_PE_flags	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)))->(int)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
fl	*(struct(int,int,int,int,int,int))
)	O
)	O
{	O
if	O
(	O
!	O
read_PE_pair	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,int,int,int,int)),*(struct(float,float)))->(int)
(	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
fl	*(struct(int,int,int,int,int,int))
,	O
&	O
p	struct(float,float)
)	O
)	O
continue	O
;	O
switch	O
(	O
fl	*(struct(int,int,int,int,int,int))
.	O
rect	int
)	O
{	O
case	O
1	int
:	O
pen_down	short
=	O
0	int
;	O
line	(int,struct(float,float))->(void)
(	O
!	O
fl	*(struct(int,int,int,int,int,int))
.	O
abs	(int)->(int)
,	O
p	struct(float,float)
)	O
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
rect	int
=	O
2	int
;	O
break	O
;	O
case	O
2	int
:	O
pen_down	short
=	O
1	int
;	O
rect	int
(	O
1	int
,	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
nofill	int
?	O
0	int
:	O
1	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
,	O
p	struct(float,float)
)	O
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
rect	int
=	O
1	int
;	O
pen_down	short
=	O
0	int
;	O
break	O
;	O
default	O
:	O
pen_down	short
=	O
(	O
fl	*(struct(int,int,int,int,int,int))
.	O
up	int
)	O
?	O
FALSE	int
:	O
TRUE	int
;	O
line	(int,struct(float,float))->(void)
(	O
!	O
fl	*(struct(int,int,int,int,int,int))
.	O
abs	(int)->(int)
,	O
p	struct(float,float)
)	O
;	O
fl	*(struct(int,int,int,int,int,int))
.	O
up	int
=	O
0	int
;	O
break	O
;	O
}	O
fl	*(struct(int,int,int,int,int,int))
.	O
abs	(int)->(int)
=	O
0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
}	O
}	O
}	O
double	O
ceil_with_tolerance	(double,double)->(double)
(	O
double	O
x	int
,	O
double	O
tol	double
)	O
{	O
double	O
rounded	double
;	O
rounded	double
=	O
(	O
double	O
)	O
(	O
x	int
+	O
0.5	int
)	O
;	O
if	O
(	O
fabs	(double)->(double)
(	O
rounded	double
-	O
x	int
)	O
<=	O
tol	double
)	O
return	O
(	O
rounded	double
)	O
;	O
else	O
return	O
(	O
ceil	(double)->(double)
(	O
x	int
)	O
)	O
;	O
}	O
static	O
void	O
Line_Generator	(*(struct(float,float)),*(struct(float,float)),int)->(void)
(	O
HPGL_Pt	struct(float,float)
*	O
pa	*(struct(float,float))
,	O
const	O
HPGL_Pt	struct(float,float)
*	O
pb	*(struct(float,float))
,	O
int	O
mv_flag	short
)	O
{	O
double	O
seg_len	double
,	O
dx	double
,	O
dy	double
,	O
quot	int
;	O
int	O
n_pat	int
,	O
i	int
;	O
dx	double
=	O
pb	*(struct(float,float))
->	O
x	int
-	O
pa	*(struct(float,float))
->	O
x	int
;	O
dy	double
=	O
pb	*(struct(float,float))
->	O
y	int
-	O
pa	*(struct(float,float))
->	O
y	int
;	O
seg_len	double
=	O
HYPOT	O
(	O
dx	double
,	O
dy	double
)	O
;	O
switch	O
(	O
CurrentLineType	enum(int,int,int,int)
)	O
{	O
case	O
LT_solid	int
:	O
if	O
(	O
seg_len	double
<	O
1.e-8	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"Warning: Zero line segment length -- skipped\n"	*(char)
)	O
;	O
return	O
;	O
}	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DRAW_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pb	*(struct(float,float))
)	O
;	O
return	O
;	O
case	O
LT_adaptive	int
:	O
if	O
(	O
seg_len	double
<	O
1.e-8	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"Warning: Zero line segment length -- skipped\n"	*(char)
)	O
;	O
return	O
;	O
}	O
pat_pos	double
=	O
0.0	int
;	O
n_pat	int
=	O
(	O
int	O
)	O
ceil_with_tolerance	(double,double)->(double)
(	O
seg_len	double
/	O
CurrentLinePatLen	double
,	O
CurrentLinePatLen	double
*	O
LT_PATTERN_TOL	int
)	O
;	O
if	O
(	O
n_pat	int
==	O
0	int
)	O
{	O
n_pat	int
=	O
1	int
;	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"very short pattern run encountered\n"	*(char)
)	O
;	O
}	O
dx	double
/=	O
n_pat	int
;	O
dy	double
/=	O
n_pat	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n_pat	int
;	O
i	int
++	O
)	O
LPattern_Generator	(*(struct(float,float)),double,double,double,double)->(void)
(	O
pa	*(struct(float,float))
,	O
dx	double
,	O
dy	double
,	O
0.0	int
,	O
1.0	int
)	O
;	O
return	O
;	O
case	O
LT_plot_at	int
:	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
PLOT_AT	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pb	*(struct(float,float))
)	O
;	O
return	O
;	O
case	O
LT_fixed	int
:	O
if	O
(	O
seg_len	double
<	O
1.e-8	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"Warning: Zero line segment length -- skipped\n"	*(char)
)	O
;	O
return	O
;	O
}	O
if	O
(	O
mv_flag	short
)	O
pat_pos	double
=	O
0.0	int
;	O
quot	int
=	O
seg_len	double
/	O
CurrentLinePatLen	double
;	O
dx	double
/=	O
quot	int
;	O
dy	double
/=	O
quot	int
;	O
while	O
(	O
quot	int
>=	O
1.0	int
)	O
{	O
LPattern_Generator	(*(struct(float,float)),double,double,double,double)->(void)
(	O
pa	*(struct(float,float))
,	O
dx	double
,	O
dy	double
,	O
pat_pos	double
,	O
1.0	int
)	O
;	O
quot	int
-=	O
(	O
1.0	int
-	O
pat_pos	double
)	O
;	O
pat_pos	double
=	O
0.0	int
;	O
}	O
quot	int
+=	O
pat_pos	double
;	O
if	O
(	O
quot	int
>=	O
1.0	int
)	O
{	O
LPattern_Generator	(*(struct(float,float)),double,double,double,double)->(void)
(	O
pa	*(struct(float,float))
,	O
dx	double
,	O
dy	double
,	O
pat_pos	double
,	O
1.0	int
)	O
;	O
quot	int
-=	O
1.0	int
;	O
pat_pos	double
=	O
0.0	int
;	O
}	O
if	O
(	O
quot	int
>	O
LT_PATTERN_TOL	int
)	O
{	O
LPattern_Generator	(*(struct(float,float)),double,double,double,double)->(void)
(	O
pa	*(struct(float,float))
,	O
dx	double
,	O
dy	double
,	O
pat_pos	double
,	O
quot	int
)	O
;	O
pat_pos	double
=	O
quot	int
;	O
}	O
else	O
{	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
pb	*(struct(float,float))
)	O
;	O
}	O
return	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
void	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
PlotCmd	enum(int,int,int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
const	O
HPGL_Pt	struct(float,float)
*	O
p	struct(float,float)
,	O
int	O
scaled	int
)	O
{	O
static	O
HPGL_Pt	struct(float,float)
P_last	struct(float,float)
;	O
HPGL_Pt	struct(float,float)
P	struct(float,float)
;	O
double	O
tmp	double
;	O
if	O
(	O
record_off	short
)	O
return	O
;	O
if	O
(	O
scaled	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
p	struct(float,float)
,	O
&	O
P	struct(float,float)
)	O
;	O
else	O
P	struct(float,float)
=	O
*	O
p	struct(float,float)
;	O
HP_pos	struct(float,float)
=	O
P	struct(float,float)
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
tmp	double
=	O
rot_cos	float
*	O
P	struct(float,float)
.	O
x	int
-	O
rot_sin	float
*	O
P	struct(float,float)
.	O
y	int
;	O
P	struct(float,float)
.	O
y	int
=	O
rot_sin	float
*	O
P	struct(float,float)
.	O
x	int
+	O
rot_cos	float
*	O
P	struct(float,float)
.	O
y	int
;	O
P	struct(float,float)
.	O
x	int
=	O
tmp	double
;	O
}	O
switch	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
MOVE_TO	int
:	O
mv_flag	short
=	O
TRUE	int
;	O
break	O
;	O
case	O
DRAW_TO	int
:	O
if	O
(	O
mv_flag	short
)	O
{	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
MOVE_TO	int
)	O
;	O
HPGL_Pt_to_tmpfile	(*(struct(float,float)))->(void)
(	O
&	O
P_last	struct(float,float)
)	O
;	O
}	O
case	O
PLOT_AT	int
:	O
Line_Generator	(*(struct(float,float)),*(struct(float,float)),int)->(void)
(	O
&	O
P_last	struct(float,float)
,	O
&	O
P	struct(float,float)
,	O
mv_flag	short
)	O
;	O
mv_flag	short
=	O
FALSE	int
;	O
break	O
;	O
default	O
:	O
Eprintf	(*(char))->(void)
(	O
"Illegal Pen Action: %d\n"	*(char)
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Error @ Cmd %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
P_last	struct(float,float)
=	O
P	struct(float,float)
;	O
}	O
int	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
float	O
*	O
pnum	*(float)
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
c	int
;	O
char	O
*	O
ptr	*(char)
,	O
numbuf	array(char)
[	O
80	int
]	O
;	O
for	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
(	O
c	int
!=	O
'.'	O
)	O
&&	O
(	O
c	int
!=	O
'+'	O
)	O
&&	O
(	O
c	int
!=	O
'-'	O
)	O
&&	O
(	O
(	O
c	int
<	O
'0'	O
)	O
||	O
(	O
c	int
>	O
'9'	O
)	O
)	O
;	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
c	int
==	O
EOF	O
)	O
return	O
EOF	O
;	O
if	O
(	O
c	int
==	O
';'	O
)	O
return	O
1	int
;	O
if	O
(	O
(	O
(	O
c	int
>=	O
'A'	O
)	O
&&	O
(	O
c	int
<=	O
'Z'	O
)	O
)	O
||	O
(	O
(	O
c	int
>=	O
'a'	O
)	O
&&	O
(	O
c	int
<=	O
'a'	O
)	O
)	O
||	O
(	O
c	int
==	O
ESC	char
)	O
)	O
{	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
1	int
;	O
}	O
}	O
ptr	*(char)
=	O
numbuf	array(char)
;	O
for	O
(	O
*	O
ptr	*(char)
++	O
=	O
c	int
,	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
(	O
(	O
c	int
>=	O
'0'	O
)	O
&&	O
(	O
c	int
<=	O
'9'	O
)	O
)	O
||	O
(	O
c	int
==	O
'.'	O
)	O
;	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
*	O
ptr	*(char)
++	O
=	O
c	int
;	O
*	O
ptr	*(char)
=	O
'\0'	O
;	O
if	O
(	O
c	int
!=	O
EOF	O
)	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
sscanf	(*(char),*(char))->(int)
(	O
numbuf	array(char)
,	O
"%f"	*(char)
,	O
pnum	*(float)
)	O
!=	O
1	int
)	O
return	O
11	int
;	O
return	O
0	int
;	O
}	O
void	O
read_string	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
*	O
buf	*(char)
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
c	int
;	O
unsigned	O
int	O
n	int
;	O
for	O
(	O
n	int
=	O
0	int
,	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
(	O
c	int
!=	O
EOF	O
)	O
&&	O
(	O
c	int
!=	O
StrTerm	char
)	O
;	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
n	int
>	O
strbufsize	int
/	O
2	int
)	O
{	O
strbufsize	int
*=	O
2	int
;	O
strbuf	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
strbuf	*(char)
,	O
strbufsize	int
)	O
;	O
if	O
(	O
strbuf	*(char)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nNo memory !\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
buf	*(char)
=	O
strbuf	*(char)
+	O
n	int
;	O
}	O
if	O
(	O
c	int
==	O
'\0'	O
)	O
continue	O
;	O
if	O
(	O
n	int
++	O
<	O
strbufsize	int
)	O
*	O
buf	*(char)
++	O
=	O
c	int
;	O
}	O
if	O
(	O
c	int
!=	O
StrTerm	char
||	O
StrTermSilent	short
==	O
0	int
)	O
*	O
buf	*(char)
++	O
=	O
c	int
;	O
*	O
buf	*(char)
=	O
'\0'	O
;	O
}	O
static	O
void	O
read_symbol_char	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
c	int
;	O
for	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
;	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
switch	O
(	O
c	int
)	O
{	O
case	O
' '	O
:	O
case	O
_HT	char
:	O
case	O
_LF	char
:	O
break	O
;	O
case	O
_CR	char
:	O
case	O
EOF	O
:	O
case	O
';'	O
:	O
symbol_char	char
=	O
'\0'	O
;	O
return	O
;	O
default	O
:	O
if	O
(	O
c	int
<	O
' '	O
||	O
c	int
>	O
'~'	O
)	O
break	O
;	O
else	O
{	O
symbol_char	char
=	O
c	int
;	O
return	O
;	O
}	O
}	O
}	O
static	O
void	O
read_ESC_HP7550A	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
c	int
;	O
switch	O
(	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
EOF	O
:	O
n_unexpected	int
++	O
;	O
Eprintf	(*(char))->(void)
(	O
"\nUnexpected EOF!\n"	*(char)
)	O
;	O
return	O
;	O
break	O
;	O
case	O
'A'	O
:	O
case	O
'B'	O
:	O
case	O
'E'	O
:	O
case	O
'J'	O
:	O
case	O
'K'	O
:	O
case	O
'L'	O
:	O
case	O
'O'	O
:	O
case	O
'U'	O
:	O
case	O
'Y'	O
:	O
case	O
'('	O
:	O
case	O
')'	O
:	O
return	O
;	O
case	O
'@'	O
:	O
case	O
'H'	O
:	O
case	O
'I'	O
:	O
case	O
'M'	O
:	O
case	O
'N'	O
:	O
case	O
'P'	O
:	O
case	O
'Q'	O
:	O
case	O
'S'	O
:	O
case	O
'T'	O
:	O
do	O
{	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
while	O
(	O
(	O
c	int
!=	O
':'	O
)	O
&&	O
(	O
c	int
!=	O
EOF	O
)	O
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
{	O
n_unexpected	int
++	O
;	O
Eprintf	(*(char))->(void)
(	O
"\nUnexpected EOF!\n"	*(char)
)	O
;	O
}	O
return	O
;	O
default	O
:	O
n_unknown	int
++	O
;	O
return	O
;	O
}	O
}	O
static	O
int	O
read_PJL	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
strbuf	*(char)
[	O
PJLBS	int
]	O
;	O
int	O
i	int
,	O
j	int
,	O
ov	int
,	O
ctmp	int
,	O
qt	int
,	O
el	int
=	O
0	int
,	O
nw	int
=	O
0	int
,	O
rc	int
=	O
-	O
2	int
,	O
nl	int
=	O
0	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
for	O
(	O
i	int
=	O
ov	int
=	O
qt	int
=	O
0	int
;	O
;	O
i	int
++	O
)	O
{	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ctmp	int
==	O
ESC	char
)	O
{	O
while	O
(	O
ctmp	int
!=	O
'X'	O
)	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
PJLBS	int
-	O
1	int
==	O
i	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"PJL buffer overflow, rest of token dropped\n"	*(char)
)	O
;	O
ov	int
=	O
1	int
;	O
strbuf	*(char)
[	O
i	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
!	O
ov	int
)	O
strbuf	*(char)
[	O
i	int
]	O
=	O
(	O
0	int
==	O
nw	int
||	O
qt	int
)	O
?	O
ctmp	int
:	O
toupper	(int)->(int)
(	O
ctmp	int
)	O
;	O
if	O
(	O
EOF	O
==	O
ctmp	int
)	O
{	O
if	O
(	O
!	O
ov	int
)	O
strbuf	*(char)
[	O
i	int
]	O
=	O
0	int
;	O
break	O
;	O
}	O
else	O
if	O
(	O
'='	O
==	O
ctmp	int
&&	O
0	int
==	O
i	int
)	O
{	O
strbuf	*(char)
[	O
i	int
]	O
=	O
'='	O
;	O
strbuf	*(char)
[	O
++	O
i	int
]	O
=	O
'\0'	O
;	O
ctmp	int
=	O
' '	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
" \t="	*(char)
,	O
ctmp	int
)	O
)	O
{	O
if	O
(	O
!	O
qt	int
)	O
{	O
if	O
(	O
!	O
ov	int
)	O
strbuf	*(char)
[	O
i	int
]	O
=	O
0	int
;	O
break	O
;	O
}	O
}	O
else	O
if	O
(	O
'\n'	O
==	O
ctmp	int
||	O
'\r'	O
==	O
ctmp	int
)	O
{	O
if	O
(	O
!	O
ov	int
)	O
strbuf	*(char)
[	O
i	int
]	O
=	O
0	int
;	O
nl	int
=	O
1	int
;	O
break	O
;	O
}	O
else	O
if	O
(	O
'"'	O
==	O
ctmp	int
)	O
{	O
qt	int
=	O
!	O
qt	int
;	O
}	O
}	O
if	O
(	O
i	int
)	O
{	O
if	O
(	O
0	int
==	O
nw	int
&&	O
strcmp	(*(char),*(char))->(int)
(	O
strbuf	*(char)
,	O
"@PJL"	*(char)
)	O
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"unexpected end of a PJL header!\n"	*(char)
)	O
;	O
return	O
(	O
TRUE	int
)	O
;	O
}	O
else	O
if	O
(	O
1	int
==	O
nw	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
strbuf	*(char)
,	O
"EOJ"	*(char)
)	O
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"end of a PJL job\n"	*(char)
)	O
;	O
rc	int
=	O
TRUE	int
;	O
}	O
else	O
if	O
(	O
1	int
==	O
nw	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
strbuf	*(char)
,	O
"ENTER"	*(char)
)	O
)	O
{	O
el	int
++	O
;	O
}	O
else	O
if	O
(	O
2	int
==	O
nw	int
&&	O
1	int
==	O
el	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
strbuf	*(char)
,	O
"LANGUAGE"	*(char)
)	O
)	O
{	O
el	int
++	O
;	O
}	O
else	O
if	O
(	O
3	int
==	O
nw	int
&&	O
2	int
==	O
el	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
strbuf	*(char)
,	O
"="	*(char)
)	O
)	O
{	O
el	int
++	O
;	O
}	O
else	O
if	O
(	O
4	int
==	O
nw	int
&&	O
3	int
==	O
el	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"Entering %s context\n"	*(char)
,	O
strbuf	*(char)
)	O
;	O
rc	int
=	O
strncmp	(*(char),*(char),long)->(int)
(	O
strbuf	*(char)
,	O
"HPGL"	*(char)
,	O
4	int
)	O
?	O
FALSE	int
:	O
TRUE	int
;	O
}	O
nw	int
++	O
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
EOF	O
!=	O
ctmp	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
!	O
strchr	(*(char),int)->(*(char))
(	O
" \t\n\r"	*(char)
,	O
ctmp	int
)	O
)	O
{	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ctmp	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
}	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
'\n'	O
==	O
ctmp	int
)	O
{	O
nl	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
nl	int
)	O
{	O
nw	int
=	O
el	int
=	O
nl	int
=	O
0	int
;	O
if	O
(	O
-	O
2	int
!=	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
EOF	O
==	O
ctmp	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"EOF in PJL context\n"	*(char)
)	O
;	O
return	O
(	O
FALSE	int
)	O
;	O
}	O
}	O
}	O
static	O
void	O
read_ESC_RTL	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int)->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
c1	int
,	O
int	O
hp	int
)	O
{	O
int	O
c0	int
,	O
c2	int
,	O
ctmp	int
=	O
0	int
,	O
nf	int
;	O
for	O
(	O
c0	int
=	O
ESC	char
,	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
nf	int
=	O
0	int
;	O
EOF	O
!=	O
c2	int
;	O
c0	int
=	O
c1	int
,	O
c1	int
=	O
c2	int
,	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
(	O
ESC	char
==	O
c0	int
)	O
&&	O
(	O
c1	int
==	O
'%'	O
)	O
)	O
{	O
if	O
(	O
'-'	O
==	O
c2	int
)	O
{	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
nf	int
=	O
1	int
;	O
}	O
switch	O
(	O
c2	int
)	O
{	O
case	O
EOF	O
:	O
n_unexpected	int
++	O
;	O
Eprintf	(*(char))->(void)
(	O
"\nUnexpected EOF!\n"	*(char)
)	O
;	O
return	O
;	O
break	O
;	O
case	O
'1'	O
:	O
case	O
'0'	O
:	O
switch	O
(	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
'A'	O
:	O
if	O
(	O
hp	int
&&	O
!	O
silent_mode	short
)	O
{	O
hp	int
=	O
FALSE	int
;	O
}	O
continue	O
;	O
case	O
'B'	O
:	O
return	O
;	O
case	O
'2'	O
:	O
if	O
(	O
nf	int
&&	O
'1'	O
==	O
c2	int
&&	O
'3'	O
==	O
(	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
&&	O
'4'	O
==	O
(	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
&&	O
'5'	O
==	O
(	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
&&	O
'X'	O
==	O
(	O
c2	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
if	O
(	O
read_PJL	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
return	O
;	O
}	O
else	O
{	O
hp	int
=	O
0	int
;	O
continue	O
;	O
}	O
}	O
else	O
{	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ctmp	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
hp	int
)	O
return	O
;	O
}	O
break	O
;	O
default	O
:	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"unknown escape: ESC%%%s%c%c\n"	*(char)
,	O
nf	int
?	O
"-"	*(char)
:	O
""	*(char)
,	O
c2	int
,	O
ctmp	int
)	O
;	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ctmp	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
hp	int
)	O
return	O
;	O
}	O
break	O
;	O
default	O
:	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"unknown escape: ESC%%%s%c"	*(char)
,	O
nf	int
?	O
"-"	*(char)
:	O
""	*(char)
,	O
c2	int
)	O
;	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ctmp	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
hp	int
)	O
return	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
hp	int
==	O
TRUE	int
&&	O
!	O
nf	int
&&	O
c1	int
!=	O
'%'	O
&&	O
c1	int
!=	O
'E'	O
)	O
{	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
ctmp	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"invalid escape ESC%c%c\n"	*(char)
,	O
c1	int
,	O
c2	int
)	O
;	O
return	O
;	O
}	O
}	O
}	O
static	O
void	O
read_ESC_cmd	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
hp	int
)	O
{	O
int	O
ctmp	int
;	O
switch	O
(	O
ctmp	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
'.'	O
:	O
read_ESC_HP7550A	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
EOF	O
:	O
n_unexpected	int
++	O
;	O
Eprintf	(*(char))->(void)
(	O
"\nUnexpected EOF!\n"	*(char)
)	O
;	O
return	O
;	O
default	O
:	O
read_ESC_RTL	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int)->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
ctmp	int
,	O
hp	int
)	O
;	O
break	O
;	O
}	O
}	O
static	O
void	O
lines	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
int	O
relative	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
;	O
int	O
numcmds	int
=	O
0	int
;	O
int	O
outside	int
=	O
0	int
;	O
double	O
p1x	double
,	O
p1y	double
,	O
p2x	double
,	O
p2y	double
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
numcmds	int
>	O
0	int
)	O
return	O
;	O
if	O
(	O
pen_down	short
&&	O
mv_flag	short
&&	O
pen	int
>	O
0	int
&&	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
<	O
0.35	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
x	int
+	O
0.01	int
;	O
p	struct(float,float)
.	O
y	int
=	O
p_last	struct(float,float)
.	O
y	int
+	O
0.01	int
;	O
outside	int
=	O
0	int
;	O
if	O
(	O
iwflag	int
)	O
{	O
p1x	double
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p_last	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
p1y	double
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p_last	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
p2x	double
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
p2y	double
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
outside	int
=	O
(	O
DtClipLine	(double,double,double,double,*(double),*(double),*(double),*(double))->(short)
(	O
C1	struct(float,float)
.	O
x	int
,	O
C1	struct(float,float)
.	O
y	int
,	O
C2	struct(float,float)
.	O
x	int
,	O
C2	struct(float,float)
.	O
y	int
,	O
&	O
p1x	double
,	O
&	O
p1y	double
,	O
&	O
p2x	double
,	O
&	O
p2y	double
)	O
==	O
CLIP_NODRAW	int
)	O
;	O
}	O
if	O
(	O
!	O
outside	int
)	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p_last	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
return	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
PA	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
line	(int,struct(float,float))->(void)
(	O
relative	int
,	O
p	struct(float,float)
)	O
;	O
numcmds	int
++	O
;	O
}	O
}	O
void	O
line	(int,struct(float,float))->(void)
(	O
int	O
relative	int
,	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
)	O
{	O
HPGL_Pt	struct(float,float)
pl	struct(float,float)
,	O
porig	struct(float,float)
;	O
int	O
outside	int
=	O
0	int
;	O
double	O
x1	double
,	O
y1	(double)->(double)
,	O
x2	*(double)
,	O
y2	*(double)
;	O
if	O
(	O
relative	int
)	O
{	O
p	struct(float,float)
.	O
x	int
+=	O
p_last	struct(float,float)
.	O
x	int
;	O
p	struct(float,float)
.	O
y	int
+=	O
p_last	struct(float,float)
.	O
y	int
;	O
}	O
porig	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
porig	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
if	O
(	O
iwflag	int
)	O
{	O
x1	double
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p_last	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
y1	(double)->(double)
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p_last	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
x2	*(double)
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
y2	*(double)
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
outside	int
=	O
(	O
DtClipLine	(double,double,double,double,*(double),*(double),*(double),*(double))->(short)
(	O
C1	struct(float,float)
.	O
x	int
,	O
C1	struct(float,float)
.	O
y	int
,	O
C2	struct(float,float)
.	O
x	int
,	O
C2	struct(float,float)
.	O
y	int
,	O
&	O
x1	double
,	O
&	O
y1	(double)->(double)
,	O
&	O
x2	*(double)
,	O
&	O
y2	*(double)
)	O
==	O
CLIP_NODRAW	int
)	O
;	O
if	O
(	O
!	O
outside	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
(	O
x2	*(double)
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
+	O
S1	struct(float,float)
.	O
x	int
;	O
p	struct(float,float)
.	O
y	int
=	O
(	O
y2	*(double)
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
+	O
S1	struct(float,float)
.	O
y	int
;	O
pl	struct(float,float)
.	O
x	int
=	O
(	O
x1	double
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
+	O
S1	struct(float,float)
.	O
x	int
;	O
pl	struct(float,float)
.	O
y	int
=	O
(	O
y1	(double)->(double)
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
+	O
S1	struct(float,float)
.	O
y	int
;	O
if	O
(	O
pl	struct(float,float)
.	O
x	int
!=	O
p_last	struct(float,float)
.	O
x	int
||	O
pl	struct(float,float)
.	O
y	int
!=	O
p_last	struct(float,float)
.	O
y	int
)	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
pl	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
else	O
pl	struct(float,float)
=	O
p_last	struct(float,float)
;	O
if	O
(	O
polygon_mode	short
&&	O
polygon_penup	short
)	O
pen_down	short
=	O
FALSE	int
;	O
if	O
(	O
pen_down	short
&&	O
!	O
outside	int
)	O
{	O
if	O
(	O
polygon_mode	short
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
pl	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
}	O
else	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
iwflag	int
)	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
porig	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
else	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
if	O
(	O
polygon_mode	short
&&	O
polygon_penup	short
)	O
{	O
polygon_penup	short
=	O
FALSE	int
;	O
polystart	struct(float,float)
=	O
p	struct(float,float)
;	O
pen_down	short
=	O
TRUE	int
;	O
}	O
if	O
(	O
symbol_char	char
)	O
{	O
plot_symbol_char	(char)->(void)
(	O
symbol_char	char
)	O
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
outside	int
=	O
0	int
;	O
p_last	struct(float,float)
=	O
porig	struct(float,float)
;	O
}	O
static	O
void	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
HPGL_Pt	struct(float,float)
*	O
pcenter	*(struct(float,float))
,	O
double	O
r	char
,	O
double	O
phi	double
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
;	O
int	O
outside	int
=	O
0	int
;	O
p	struct(float,float)
.	O
x	int
=	O
pcenter	*(struct(float,float))
->	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
phi	double
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
pcenter	*(struct(float,float))
->	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
phi	double
)	O
;	O
if	O
(	O
iwflag	int
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
>	O
C2	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
>	O
C2	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
polygon_mode	short
)	O
{	O
if	O
(	O
polygon_penup	short
)	O
polygon_penup	short
=	O
FALSE	int
;	O
else	O
if	O
(	O
pen_down	short
&&	O
!	O
outside	int
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p_last	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
}	O
else	O
if	O
(	O
(	O
p	struct(float,float)
.	O
x	int
!=	O
p_last	struct(float,float)
.	O
x	int
)	O
||	O
(	O
p	struct(float,float)
.	O
y	int
!=	O
p_last	struct(float,float)
.	O
y	int
)	O
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p_last	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
pen_down	short
&&	O
!	O
outside	int
)	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
else	O
if	O
(	O
!	O
outside	int
&&	O
(	O
(	O
p	struct(float,float)
.	O
x	int
!=	O
p_last	struct(float,float)
.	O
x	int
)	O
||	O
(	O
p	struct(float,float)
.	O
y	int
!=	O
p_last	struct(float,float)
.	O
y	int
)	O
)	O
)	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
p_last	struct(float,float)
=	O
p	struct(float,float)
;	O
}	O
static	O
void	O
bezier	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
int	O
relative	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
,	O
p1	struct(float,float)
,	O
p2	struct(float,float)
,	O
p3	struct(float,float)
,	O
polyp	struct(float,float)
;	O
int	O
i	int
,	O
outside	int
;	O
float	O
t	float
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
BZ	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
BZ	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p3	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
BZ	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p3	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
BZ	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
relative	int
)	O
{	O
p1	struct(float,float)
.	O
x	int
=	O
p1	struct(float,float)
.	O
x	int
+	O
p_last	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
p1	struct(float,float)
.	O
y	int
+	O
p_last	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
x	int
=	O
p2	struct(float,float)
.	O
x	int
+	O
p_last	struct(float,float)
.	O
x	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
p2	struct(float,float)
.	O
y	int
+	O
p_last	struct(float,float)
.	O
y	int
;	O
p3	struct(float,float)
.	O
x	int
=	O
p3	struct(float,float)
.	O
x	int
+	O
p_last	struct(float,float)
.	O
x	int
;	O
p3	struct(float,float)
.	O
y	int
=	O
p3	struct(float,float)
.	O
y	int
+	O
p_last	struct(float,float)
.	O
y	int
;	O
}	O
polyp	struct(float,float)
=	O
p_last	struct(float,float)
;	O
outside	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
51	int
;	O
i	int
++	O
)	O
{	O
t	float
=	O
(	O
float	O
)	O
i	int
/	O
50.	int
;	O
p	struct(float,float)
.	O
x	int
=	O
t	float
*	O
t	float
*	O
t	float
*	O
p3	struct(float,float)
.	O
x	int
+	O
3	int
*	O
t	float
*	O
t	float
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
p2	struct(float,float)
.	O
x	int
+	O
3	int
*	O
t	float
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
p1	struct(float,float)
.	O
x	int
+	O
(	O
1.	int
-	O
t	float
)	O
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
p_last	struct(float,float)
.	O
x	int
;	O
p	struct(float,float)
.	O
y	int
=	O
t	float
*	O
t	float
*	O
t	float
*	O
p3	struct(float,float)
.	O
y	int
+	O
3	int
*	O
t	float
*	O
t	float
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
p2	struct(float,float)
.	O
y	int
+	O
3	int
*	O
t	float
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
p1	struct(float,float)
.	O
y	int
+	O
(	O
1.	int
-	O
t	float
)	O
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
(	O
1.	int
-	O
t	float
)	O
*	O
p_last	struct(float,float)
.	O
y	int
;	O
if	O
(	O
iwflag	int
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
>	O
C2	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
>	O
C2	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
outside	int
)	O
{	O
if	O
(	O
polygon_mode	short
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
polyp	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
polyp	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
polyp	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
else	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
outside	int
=	O
0	int
;	O
}	O
p_last	struct(float,float)
.	O
x	int
=	O
p3	struct(float,float)
.	O
x	int
;	O
p_last	struct(float,float)
.	O
y	int
=	O
p3	struct(float,float)
.	O
y	int
;	O
}	O
}	O
static	O
void	O
tarcs	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
int	O
relative	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
,	O
p2	struct(float,float)
,	O
p3	struct(float,float)
,	O
center	struct(float,float)
,	O
d	struct(float,float)
;	O
float	O
alpha	float
,	O
eps	float
;	O
double	O
phi	double
,	O
phi0	double
,	O
r	char
;	O
double	O
SafeLinePatLen	double
=	O
CurrentLinePatLen	double
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
AT	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p3	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
AT	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p3	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
AT	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
switch	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
eps	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
0	int
:	O
if	O
(	O
eps	float
<	O
0.5	int
)	O
eps	float
=	O
0.5	int
;	O
break	O
;	O
case	O
1	int
:	O
eps	float
=	O
5.0	int
;	O
break	O
;	O
case	O
2	int
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
AT	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
case	O
EOF	O
:	O
return	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
99	int
,	O
AT	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
ct_dist	short
==	O
FALSE	int
)	O
eps	float
*=	O
M_PI	int
/	O
180.0	int
;	O
d	struct(float,float)
=	O
p_last	struct(float,float)
;	O
if	O
(	O
!	O
relative	int
)	O
{	O
p2	struct(float,float)
.	O
x	int
=	O
p2	struct(float,float)
.	O
x	int
-	O
p_last	struct(float,float)
.	O
x	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
p2	struct(float,float)
.	O
y	int
-	O
p_last	struct(float,float)
.	O
y	int
;	O
p3	struct(float,float)
.	O
x	int
=	O
p3	struct(float,float)
.	O
x	int
-	O
p_last	struct(float,float)
.	O
x	int
;	O
p3	struct(float,float)
.	O
y	int
=	O
p3	struct(float,float)
.	O
y	int
-	O
p_last	struct(float,float)
.	O
y	int
;	O
}	O
center	struct(float,float)
.	O
x	int
=	O
(	O
2.	int
*	O
p2	struct(float,float)
.	O
y	int
*	O
(	O
p3	struct(float,float)
.	O
x	int
*	O
p3	struct(float,float)
.	O
x	int
+	O
p3	struct(float,float)
.	O
y	int
*	O
p3	struct(float,float)
.	O
y	int
)	O
-	O
2.	int
*	O
p3	struct(float,float)
.	O
y	int
*	O
p2	struct(float,float)
.	O
x	int
*	O
p2	struct(float,float)
.	O
x	int
-	O
2.	int
*	O
p3	struct(float,float)
.	O
y	int
*	O
p2	struct(float,float)
.	O
y	int
*	O
p2	struct(float,float)
.	O
y	int
)	O
/	O
(	O
2.	int
*	O
p3	struct(float,float)
.	O
x	int
-	O
4.	int
*	O
p2	struct(float,float)
.	O
x	int
*	O
p3	struct(float,float)
.	O
y	int
)	O
;	O
center	struct(float,float)
.	O
y	int
=	O
(	O
p2	struct(float,float)
.	O
x	int
*	O
p2	struct(float,float)
.	O
x	int
+	O
p2	struct(float,float)
.	O
y	int
*	O
p2	struct(float,float)
.	O
y	int
-	O
2.	int
*	O
p2	struct(float,float)
.	O
x	int
*	O
center	struct(float,float)
.	O
x	int
)	O
/	O
(	O
2.	int
*	O
p2	struct(float,float)
.	O
y	int
)	O
;	O
r	char
=	O
sqrt	(double)->(double)
(	O
center	struct(float,float)
.	O
x	int
*	O
center	struct(float,float)
.	O
x	int
+	O
center	struct(float,float)
.	O
y	int
*	O
center	struct(float,float)
.	O
y	int
)	O
;	O
if	O
(	O
ct_dist	short
==	O
TRUE	int
)	O
eps	float
=	O
2.	int
*	O
acos	(double)->(double)
(	O
(	O
r	char
-	O
eps	float
)	O
/	O
r	char
)	O
;	O
center	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
p_last	struct(float,float)
.	O
x	int
;	O
center	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
p_last	struct(float,float)
.	O
y	int
;	O
d	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
x	int
-	O
center	struct(float,float)
.	O
x	int
;	O
d	struct(float,float)
.	O
y	int
=	O
p_last	struct(float,float)
.	O
y	int
-	O
center	struct(float,float)
.	O
y	int
;	O
phi0	double
=	O
atan2	(double,double)->(double)
(	O
d	struct(float,float)
.	O
y	int
,	O
d	struct(float,float)
.	O
x	int
)	O
;	O
d	struct(float,float)
.	O
x	int
=	O
p3	struct(float,float)
.	O
x	int
+	O
p_last	struct(float,float)
.	O
x	int
-	O
center	struct(float,float)
.	O
x	int
;	O
d	struct(float,float)
.	O
y	int
=	O
p3	struct(float,float)
.	O
y	int
+	O
p_last	struct(float,float)
.	O
y	int
-	O
center	struct(float,float)
.	O
y	int
;	O
alpha	float
=	O
2.	int
*	O
atan2	(double,double)->(double)
(	O
d	struct(float,float)
.	O
y	int
,	O
d	struct(float,float)
.	O
x	int
)	O
;	O
if	O
(	O
CurrentLineType	enum(int,int,int,int)
==	O
LT_adaptive	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
r	char
*	O
cos	(double)->(double)
(	O
eps	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
r	char
*	O
sin	(double)->(double)
(	O
eps	float
)	O
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p	struct(float,float)
,	O
&	O
p	struct(float,float)
)	O
;	O
CurrentLinePatLen	double
=	O
HYPOT	O
(	O
p	struct(float,float)
.	O
x	int
,	O
p	struct(float,float)
.	O
y	int
)	O
;	O
}	O
if	O
(	O
alpha	float
>	O
0.0	int
)	O
{	O
for	O
(	O
phi	double
=	O
phi0	double
+	O
MIN	O
(	O
eps	float
,	O
alpha	float
)	O
;	O
phi	double
<	O
phi0	double
+	O
alpha	float
;	O
phi	double
+=	O
eps	float
)	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi	double
)	O
;	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi0	double
+	O
alpha	float
)	O
;	O
}	O
else	O
{	O
for	O
(	O
phi	double
=	O
phi0	double
-	O
MIN	O
(	O
eps	float
,	O
-	O
alpha	float
)	O
;	O
phi	double
>	O
phi0	double
+	O
alpha	float
;	O
phi	double
-=	O
eps	float
)	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi	double
)	O
;	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi0	double
+	O
alpha	float
)	O
;	O
}	O
CurrentLinePatLen	double
=	O
SafeLinePatLen	double
;	O
p_last	struct(float,float)
.	O
x	int
=	O
p_last	struct(float,float)
.	O
x	int
+	O
p3	struct(float,float)
.	O
x	int
;	O
p_last	struct(float,float)
.	O
y	int
=	O
p_last	struct(float,float)
.	O
y	int
+	O
p3	struct(float,float)
.	O
y	int
;	O
}	O
static	O
void	O
arcs	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
int	O
relative	int
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
,	O
d	struct(float,float)
,	O
center	struct(float,float)
;	O
float	O
alpha	float
,	O
eps	float
;	O
double	O
phi	double
,	O
phi0	double
,	O
r	char
;	O
double	O
SafeLinePatLen	double
=	O
CurrentLinePatLen	double
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
AA	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
alpha	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
AA	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
alpha	float
*=	O
M_PI	int
/	O
180.0	int
;	O
switch	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
eps	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
0	int
:	O
if	O
(	O
eps	float
<	O
0.5	int
)	O
eps	float
=	O
0.5	int
;	O
break	O
;	O
case	O
1	int
:	O
eps	float
=	O
5.0	int
;	O
break	O
;	O
case	O
2	int
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
AA	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
case	O
EOF	O
:	O
return	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
99	int
,	O
AA	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
ct_dist	short
==	O
FALSE	int
)	O
eps	float
*=	O
M_PI	int
/	O
180.0	int
;	O
if	O
(	O
relative	int
)	O
{	O
d	struct(float,float)
=	O
p	struct(float,float)
;	O
center	struct(float,float)
.	O
x	int
=	O
d	struct(float,float)
.	O
x	int
+	O
p_last	struct(float,float)
.	O
x	int
;	O
center	struct(float,float)
.	O
y	int
=	O
d	struct(float,float)
.	O
y	int
+	O
p_last	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
d	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
-	O
p_last	struct(float,float)
.	O
x	int
;	O
d	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
-	O
p_last	struct(float,float)
.	O
y	int
;	O
center	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
center	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
}	O
if	O
(	O
(	O
(	O
r	char
=	O
sqrt	(double)->(double)
(	O
d	struct(float,float)
.	O
x	int
*	O
d	struct(float,float)
.	O
x	int
+	O
d	struct(float,float)
.	O
y	int
*	O
d	struct(float,float)
.	O
y	int
)	O
)	O
==	O
0.0	int
)	O
||	O
(	O
alpha	float
==	O
0.0	int
)	O
)	O
return	O
;	O
if	O
(	O
ct_dist	short
==	O
TRUE	int
)	O
eps	float
=	O
2.	int
*	O
acos	(double)->(double)
(	O
(	O
r	char
-	O
eps	float
)	O
/	O
r	char
)	O
;	O
phi0	double
=	O
atan2	(double,double)->(double)
(	O
-	O
d	struct(float,float)
.	O
y	int
,	O
-	O
d	struct(float,float)
.	O
x	int
)	O
;	O
if	O
(	O
CurrentLineType	enum(int,int,int,int)
==	O
LT_adaptive	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
r	char
*	O
cos	(double)->(double)
(	O
eps	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
r	char
*	O
sin	(double)->(double)
(	O
eps	float
)	O
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p	struct(float,float)
,	O
&	O
p	struct(float,float)
)	O
;	O
CurrentLinePatLen	double
=	O
HYPOT	O
(	O
p	struct(float,float)
.	O
x	int
,	O
p	struct(float,float)
.	O
y	int
)	O
;	O
}	O
if	O
(	O
alpha	float
>	O
0.0	int
)	O
{	O
for	O
(	O
phi	double
=	O
phi0	double
+	O
MIN	O
(	O
eps	float
,	O
alpha	float
)	O
;	O
phi	double
<	O
phi0	double
+	O
alpha	float
;	O
phi	double
+=	O
eps	float
)	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi	double
)	O
;	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi0	double
+	O
alpha	float
)	O
;	O
}	O
else	O
{	O
for	O
(	O
phi	double
=	O
phi0	double
-	O
MIN	O
(	O
eps	float
,	O
-	O
alpha	float
)	O
;	O
phi	double
>	O
phi0	double
+	O
alpha	float
;	O
phi	double
-=	O
eps	float
)	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi	double
)	O
;	O
arc_increment	(*(struct(float,float)),double,double)->(void)
(	O
&	O
center	struct(float,float)
,	O
r	char
,	O
phi0	double
+	O
alpha	float
)	O
;	O
}	O
CurrentLinePatLen	double
=	O
SafeLinePatLen	double
;	O
}	O
static	O
void	O
fwedges	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),float)->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
float	O
cur_pensize	float
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
,	O
oldp	struct(float,float)
,	O
center	struct(float,float)
;	O
float	O
eps	float
,	O
r	char
,	O
start	float
,	O
sweep	float
;	O
double	O
phi	double
;	O
double	O
SafeLinePatLen	double
=	O
CurrentLinePatLen	double
;	O
int	O
outside	int
=	O
0	int
;	O
int	O
i	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
r	char
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
start	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
sweep	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
switch	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
eps	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
0	int
:	O
if	O
(	O
eps	float
<	O
0.5	int
)	O
eps	float
=	O
0.5	int
;	O
break	O
;	O
case	O
1	int
:	O
eps	float
=	O
5.0	int
;	O
break	O
;	O
case	O
2	int
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
EW	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
case	O
EOF	O
:	O
return	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
99	int
,	O
EW	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
ct_dist	short
==	O
TRUE	int
)	O
eps	float
=	O
2.	int
*	O
acos	(double)->(double)
(	O
(	O
r	char
-	O
eps	float
)	O
/	O
r	char
)	O
;	O
else	O
eps	float
*=	O
M_PI	int
/	O
180.0	int
;	O
start	float
*=	O
M_PI	int
/	O
180.0	int
;	O
sweep	float
*=	O
M_PI	int
/	O
180.0	int
;	O
center	struct(float,float)
=	O
p_last	struct(float,float)
;	O
vertices	int
=	O
-	O
1	int
;	O
if	O
(	O
r	char
==	O
0.0	int
)	O
return	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p_last	struct(float,float)
)	O
;	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
start	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
start	float
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
if	O
(	O
CurrentLineType	enum(int,int,int,int)
==	O
LT_adaptive	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
r	char
*	O
cos	(double)->(double)
(	O
eps	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
r	char
*	O
sin	(double)->(double)
(	O
eps	float
)	O
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p	struct(float,float)
,	O
&	O
p	struct(float,float)
)	O
;	O
CurrentLinePatLen	double
=	O
HYPOT	O
(	O
p	struct(float,float)
.	O
x	int
,	O
p	struct(float,float)
.	O
y	int
)	O
;	O
}	O
i	int
=	O
1	int
;	O
for	O
(	O
phi	double
=	O
eps	float
;	O
phi	double
<=	O
sweep	float
;	O
phi	double
+=	O
eps	float
)	O
{	O
oldp	struct(float,float)
=	O
p	struct(float,float)
;	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
start	float
+	O
phi	double
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
start	float
+	O
phi	double
)	O
;	O
if	O
(	O
iwflag	int
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
>	O
C2	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
>	O
C2	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
outside	int
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
oldp	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
}	O
outside	int
=	O
0	int
;	O
}	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
center	struct(float,float)
)	O
;	O
if	O
(	O
hatchspace	float
==	O
0.	int
)	O
hatchspace	float
=	O
cur_pensize	float
;	O
if	O
(	O
filltype	int
<	O
3	int
&&	O
thickness	float
>	O
0.	int
)	O
hatchspace	float
=	O
thickness	float
;	O
if	O
(	O
!	O
ac_flag	short
)	O
{	O
anchor	struct(float,float)
.	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
;	O
anchor	struct(float,float)
.	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
;	O
}	O
fill	(array(struct(float,float)),int,struct(float,float),struct(float,float),int,int,float,float)->(void)
(	O
polygons	array(struct(float,float))
,	O
vertices	int
,	O
anchor	struct(float,float)
,	O
P2	struct(float,float)
,	O
scale_flag	int
,	O
filltype	int
,	O
hatchspace	float
,	O
hatchangle	float
)	O
;	O
CurrentLinePatLen	double
=	O
SafeLinePatLen	double
;	O
}	O
static	O
void	O
circles	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
,	O
center	struct(float,float)
,	O
polyp	struct(float,float)
;	O
float	O
eps	float
,	O
r	char
;	O
double	O
phi	double
;	O
double	O
SafeLinePatLen	double
=	O
CurrentLinePatLen	double
;	O
int	O
outside	int
=	O
0	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
r	char
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
switch	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
eps	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
0	int
:	O
if	O
(	O
eps	float
<	O
0.5	int
)	O
eps	float
=	O
0.5	int
;	O
break	O
;	O
case	O
1	int
:	O
eps	float
=	O
5.0	int
;	O
break	O
;	O
case	O
2	int
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
CI	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
case	O
EOF	O
:	O
return	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
99	int
,	O
CI	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
ct_dist	short
==	O
TRUE	int
)	O
eps	float
=	O
2.	int
*	O
acos	(double)->(double)
(	O
(	O
r	char
-	O
eps	float
)	O
/	O
r	char
)	O
;	O
else	O
eps	float
*=	O
M_PI	int
/	O
180.0	int
;	O
center	struct(float,float)
=	O
p_last	struct(float,float)
;	O
if	O
(	O
r	char
==	O
0.0	int
)	O
return	O
;	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
if	O
(	O
polygon_mode	short
)	O
{	O
polyp	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
polyp	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
}	O
if	O
(	O
CurrentLineType	enum(int,int,int,int)
==	O
LT_adaptive	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
r	char
*	O
cos	(double)->(double)
(	O
eps	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
r	char
*	O
sin	(double)->(double)
(	O
eps	float
)	O
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p	struct(float,float)
,	O
&	O
p	struct(float,float)
)	O
;	O
CurrentLinePatLen	double
=	O
HYPOT	O
(	O
p	struct(float,float)
.	O
x	int
,	O
p	struct(float,float)
.	O
y	int
)	O
;	O
}	O
for	O
(	O
phi	double
=	O
eps	float
;	O
phi	double
<	O
2.0	int
*	O
M_PI	int
;	O
phi	double
+=	O
eps	float
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
phi	double
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
phi	double
)	O
;	O
if	O
(	O
iwflag	int
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
>	O
C2	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
>	O
C2	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
outside	int
)	O
{	O
if	O
(	O
polygon_mode	short
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
polyp	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
polyp	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
polyp	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
else	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
outside	int
=	O
0	int
;	O
}	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
;	O
if	O
(	O
polygon_mode	short
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
polyp	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
}	O
else	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
if	O
(	O
!	O
polygon_mode	short
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
eps	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
eps	float
)	O
;	O
if	O
(	O
iwflag	int
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
>	O
C2	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
>	O
C2	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
outside	int
)	O
{	O
if	O
(	O
polygon_mode	short
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
polyp	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p	struct(float,float)
)	O
;	O
polyp	struct(float,float)
.	O
x	int
=	O
p	struct(float,float)
.	O
x	int
;	O
polyp	struct(float,float)
.	O
y	int
=	O
p	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
}	O
}	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
center	struct(float,float)
,	O
scale_flag	int
)	O
;	O
CurrentLinePatLen	double
=	O
SafeLinePatLen	double
;	O
}	O
static	O
void	O
wedges	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
HPGL_Pt	struct(float,float)
p	struct(float,float)
,	O
center	struct(float,float)
;	O
float	O
eps	float
,	O
r	char
,	O
start	float
,	O
sweep	float
;	O
double	O
phi	double
;	O
double	O
SafeLinePatLen	double
=	O
CurrentLinePatLen	double
;	O
int	O
outside	int
=	O
0	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
r	char
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
start	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
sweep	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
switch	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
eps	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
0	int
:	O
if	O
(	O
eps	float
<	O
0.5	int
)	O
eps	float
=	O
0.5	int
;	O
break	O
;	O
case	O
1	int
:	O
eps	float
=	O
5.0	int
;	O
break	O
;	O
case	O
2	int
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
98	int
,	O
EW	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
case	O
EOF	O
:	O
return	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
99	int
,	O
EW	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
ct_dist	short
==	O
TRUE	int
)	O
eps	float
=	O
2.	int
*	O
acos	(double)->(double)
(	O
(	O
r	char
-	O
eps	float
)	O
/	O
r	char
)	O
;	O
else	O
eps	float
*=	O
M_PI	int
/	O
180.0	int
;	O
start	float
*=	O
M_PI	int
/	O
180.0	int
;	O
sweep	float
*=	O
M_PI	int
/	O
180.0	int
;	O
center	struct(float,float)
=	O
p_last	struct(float,float)
;	O
if	O
(	O
r	char
==	O
0.0	int
)	O
return	O
;	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
start	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
start	float
)	O
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
if	O
(	O
CurrentLineType	enum(int,int,int,int)
==	O
LT_adaptive	int
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
r	char
*	O
cos	(double)->(double)
(	O
eps	float
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
r	char
*	O
sin	(double)->(double)
(	O
eps	float
)	O
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p	struct(float,float)
,	O
&	O
p	struct(float,float)
)	O
;	O
CurrentLinePatLen	double
=	O
HYPOT	O
(	O
p	struct(float,float)
.	O
x	int
,	O
p	struct(float,float)
.	O
y	int
)	O
;	O
}	O
for	O
(	O
phi	double
=	O
eps	float
;	O
phi	double
<=	O
sweep	float
;	O
phi	double
+=	O
eps	float
)	O
{	O
p	struct(float,float)
.	O
x	int
=	O
center	struct(float,float)
.	O
x	int
+	O
r	char
*	O
cos	(double)->(double)
(	O
start	float
+	O
phi	double
)	O
;	O
p	struct(float,float)
.	O
y	int
=	O
center	struct(float,float)
.	O
y	int
+	O
r	char
*	O
sin	(double)->(double)
(	O
start	float
+	O
phi	double
)	O
;	O
if	O
(	O
iwflag	int
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
>	O
C2	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
>	O
C2	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
||	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
outside	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
outside	int
)	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
else	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p	struct(float,float)
,	O
scale_flag	int
)	O
;	O
outside	int
=	O
0	int
;	O
}	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
center	struct(float,float)
,	O
scale_flag	int
)	O
;	O
CurrentLinePatLen	double
=	O
SafeLinePatLen	double
;	O
}	O
static	O
void	O
ax_ticks	(int)->(void)
(	O
int	O
mode	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
HPGL_Pt	struct(float,float)
p0	struct(float,float)
,	O
p1	struct(float,float)
,	O
p2	struct(float,float)
;	O
LineType	enum(int,int,int,int)
SafeLineType	enum(int,int,int,int)
=	O
CurrentLineType	enum(int,int,int,int)
;	O
p0	struct(float,float)
=	O
p1	struct(float,float)
=	O
p2	struct(float,float)
=	O
p_last	struct(float,float)
;	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_solid	int
;	O
if	O
(	O
mode	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
0	int
)	O
{	O
if	O
(	O
scale_flag	int
)	O
{	O
p1	struct(float,float)
.	O
y	int
-=	O
neg_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
y	int
+=	O
pos_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
p1	struct(float,float)
.	O
y	int
-=	O
neg_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
p2	struct(float,float)
.	O
y	int
+=	O
pos_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
scale_flag	int
)	O
{	O
p1	struct(float,float)
.	O
x	int
-=	O
neg_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
;	O
p2	struct(float,float)
.	O
x	int
+=	O
pos_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
;	O
}	O
else	O
{	O
p1	struct(float,float)
.	O
x	int
-=	O
neg_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
;	O
p2	struct(float,float)
.	O
x	int
+=	O
pos_ticklen	float
*	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
;	O
}	O
}	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p2	struct(float,float)
,	O
scale_flag	int
)	O
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p0	struct(float,float)
,	O
scale_flag	int
)	O
;	O
CurrentLineType	enum(int,int,int,int)
=	O
SafeLineType	enum(int,int,int,int)
;	O
}	O
static	O
void	O
read_HPGL_cmd	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
int	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
FILE	struct
*	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
short	O
old_pen	short
;	O
HPGL_Pt	struct(float,float)
p1	struct(float,float)
=	O
{	O
0.	int
,	O
0.	int
}	O
,	O
p2	struct(float,float)
=	O
{	O
0.	int
,	O
0.	int
}	O
;	O
float	O
ftmp	float
;	O
float	O
csfont	float
;	O
int	O
mypen	int
,	O
myred	int
,	O
mygreen	int
,	O
myblue	int
,	O
i	int
;	O
float	O
mywidth	float
,	O
myheight	float
;	O
char	O
tmpstr	array(char)
[	O
1024	int
]	O
;	O
char	O
SafeTerm	char
;	O
static	O
int	O
FoundUserFill	int
=	O
0	int
;	O
switch	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
&	O
0xDFDF	int
)	O
{	O
case	O
AA	int
:	O
arcs	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FALSE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
AR	int
:	O
arcs	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
TRUE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
AT	int
:	O
tarcs	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FALSE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
BR	int
:	O
bezier	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
TRUE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
BZ	int
:	O
bezier	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FALSE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
AC	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
anchor	struct(float,float)
.	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
;	O
anchor	struct(float,float)
.	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
anchor	struct(float,float)
,	O
&	O
anchor	struct(float,float)
)	O
;	O
break	O
;	O
}	O
else	O
{	O
ac_flag	short
=	O
1	int
;	O
anchor	struct(float,float)
.	O
x	int
=	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
anchor	struct(float,float)
.	O
y	int
=	O
0.	int
;	O
else	O
anchor	struct(float,float)
.	O
y	int
=	O
ftmp	float
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
anchor	struct(float,float)
,	O
&	O
anchor	struct(float,float)
)	O
;	O
break	O
;	O
case	O
AD	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
altfont	int
=	O
0	int
;	O
else	O
{	O
switch	O
(	O
(	O
int	O
)	O
ftmp	float
)	O
{	O
case	O
1	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
altfont	int
=	O
(	O
int	O
)	O
csfont	float
;	O
break	O
;	O
case	O
2	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
(	O
int	O
)	O
csfont	float
==	O
1	int
&&	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"only fixed fonts available\n"	*(char)
)	O
;	O
break	O
;	O
case	O
3	int
:	O
case	O
4	int
:	O
case	O
5	int
:	O
case	O
6	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ftmp	float
==	O
9999	int
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
astrokewidth	double
=	O
ftmp	float
;	O
else	O
{	O
if	O
(	O
ftmp	float
<	O
-	O
7.	int
||	O
ftmp	float
>	O
7.	int
)	O
ftmp	float
=	O
0.	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
astrokewidth	double
=	O
0.11	int
+	O
ftmp	float
/	O
70.	int
;	O
}	O
break	O
;	O
case	O
7	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"pitch/height/posture/typeface unsupported\n"	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
1	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
break	O
;	O
case	O
CA	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
altfont	int
=	O
0	int
;	O
else	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
altfont	int
=	O
(	O
int	O
)	O
csfont	float
;	O
break	O
;	O
case	O
CI	int
:	O
circles	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
CO	int
:	O
SafeTerm	char
=	O
StrTerm	char
;	O
StrTerm	char
=	O
';'	O
;	O
read_string	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
tmpstr	array(char)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
StrTerm	char
=	O
SafeTerm	char
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tmpstr	array(char)
)	O
>	O
0	int
)	O
tmpstr	array(char)
[	O
strlen	(*(char))->(long)
(	O
tmpstr	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
printf	(*(char))->(int)
(	O
"\n%s\n"	*(char)
,	O
tmpstr	array(char)
)	O
;	O
break	O
;	O
case	O
CR	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
r_base	char
=	O
g_base	char
=	O
b_base	char
=	O
0	int
;	O
r_max	char
=	O
g_max	char
=	O
b_max	char
=	O
255	int
;	O
break	O
;	O
}	O
else	O
{	O
r_base	char
=	O
(	O
unsigned	O
char	O
)	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
r_max	char
=	O
255	int
;	O
break	O
;	O
}	O
else	O
{	O
r_max	char
=	O
(	O
unsigned	O
char	O
)	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
break	O
;	O
}	O
else	O
{	O
g_base	char
=	O
(	O
unsigned	O
char	O
)	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
g_max	char
=	O
255	int
;	O
break	O
;	O
}	O
else	O
{	O
g_max	char
=	O
(	O
unsigned	O
char	O
)	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
break	O
;	O
}	O
else	O
{	O
b_base	char
=	O
(	O
unsigned	O
char	O
)	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
b_max	char
=	O
255	int
;	O
break	O
;	O
}	O
else	O
{	O
b_max	char
=	O
(	O
unsigned	O
char	O
)	O
ftmp	float
;	O
break	O
;	O
}	O
case	O
CS	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
=	O
0	int
;	O
else	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
=	O
(	O
int	O
)	O
csfont	float
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
stdfont	int
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
;	O
break	O
;	O
case	O
CT	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
ftmp	float
!=	O
1.	int
)	O
ct_dist	short
=	O
FALSE	int
;	O
else	O
ct_dist	short
=	O
TRUE	int
;	O
break	O
;	O
case	O
EP	int
:	O
if	O
(	O
polygon_penup	short
==	O
TRUE	int
)	O
if	O
(	O
p_last	struct(float,float)
.	O
x	int
!=	O
polystart	struct(float,float)
.	O
x	int
||	O
p_last	struct(float,float)
.	O
y	int
!=	O
polystart	struct(float,float)
.	O
y	int
)	O
vertices	int
-=	O
2	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
vertices	int
;	O
i	int
=	O
i	int
+	O
2	int
)	O
{	O
p1	struct(float,float)
.	O
x	int
=	O
polygons	array(struct(float,float))
[	O
i	int
]	O
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
polygons	array(struct(float,float))
[	O
i	int
]	O
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
polygons	array(struct(float,float))
[	O
i	int
+	O
1	int
]	O
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
polygons	array(struct(float,float))
[	O
i	int
+	O
1	int
]	O
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p_last	struct(float,float)
,	O
scale_flag	int
)	O
;	O
break	O
;	O
case	O
EW	int
:	O
wedges	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
EC	int
:	O
break	O
;	O
case	O
FP	int
:	O
if	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
nofill	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"FP : suppressed\n"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
vertices	int
;	O
i	int
=	O
i	int
+	O
2	int
)	O
{	O
p1	struct(float,float)
.	O
x	int
=	O
polygons	array(struct(float,float))
[	O
i	int
]	O
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
polygons	array(struct(float,float))
[	O
i	int
]	O
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
polygons	array(struct(float,float))
[	O
i	int
+	O
1	int
]	O
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
polygons	array(struct(float,float))
[	O
i	int
+	O
1	int
]	O
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
DRAW_TO	int
,	O
&	O
p1	struct(float,float)
,	O
scale_flag	int
)	O
;	O
}	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p_last	struct(float,float)
,	O
scale_flag	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
hatchspace	float
==	O
0.	int
)	O
hatchspace	float
=	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
;	O
if	O
(	O
filltype	int
<	O
3	int
&&	O
thickness	float
>	O
0.	int
)	O
hatchspace	float
=	O
thickness	float
;	O
if	O
(	O
!	O
ac_flag	short
)	O
{	O
anchor	struct(float,float)
.	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
;	O
anchor	struct(float,float)
.	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
;	O
}	O
fill	(array(struct(float,float)),int,struct(float,float),struct(float,float),int,int,float,float)->(void)
(	O
polygons	array(struct(float,float))
,	O
vertices	int
,	O
anchor	struct(float,float)
,	O
P2	struct(float,float)
,	O
scale_flag	int
,	O
filltype	int
,	O
hatchspace	float
,	O
hatchangle	float
)	O
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p_last	struct(float,float)
,	O
scale_flag	int
)	O
;	O
break	O
;	O
case	O
FT	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
filltype	int
=	O
1	int
;	O
break	O
;	O
}	O
else	O
{	O
filltype	int
=	O
(	O
int	O
)	O
ftmp	float
;	O
}	O
if	O
(	O
filltype	int
<	O
3	int
)	O
break	O
;	O
if	O
(	O
filltype	int
>	O
4	int
)	O
{	O
if	O
(	O
FoundUserFill	int
==	O
0	int
)	O
{	O
FoundUserFill	int
=	O
1	int
;	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\nNo support for user-defined fill types, using type 1 instead\n"	*(char)
)	O
;	O
}	O
filltype	int
=	O
1	int
;	O
break	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
hatchspace	float
=	O
saved_hatchspace	array(float)
[	O
filltype	int
-	O
3	int
]	O
;	O
if	O
(	O
hatchspace	float
==	O
0.	int
)	O
hatchspace	float
=	O
0.01	int
*	O
Diag_P1_P2	double
;	O
hatchangle	float
=	O
saved_hatchangle	array(float)
[	O
filltype	int
-	O
3	int
]	O
;	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
ftmp	float
<=	O
0.	int
)	O
ftmp	float
=	O
0.01	int
*	O
Diag_P1_P2	double
;	O
hatchspace	float
=	O
ftmp	float
;	O
saved_hatchspace	array(float)
[	O
filltype	int
-	O
3	int
]	O
=	O
hatchspace	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
hatchangle	float
=	O
saved_hatchangle	array(float)
[	O
filltype	int
-	O
3	int
]	O
;	O
break	O
;	O
}	O
else	O
{	O
hatchangle	float
=	O
ftmp	float
;	O
saved_hatchangle	array(float)
[	O
filltype	int
-	O
3	int
]	O
=	O
hatchangle	float
;	O
}	O
break	O
;	O
case	O
NP	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
ftmp	float
>	O
NUMPENS	int
)	O
break	O
;	O
else	O
{	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
=	O
(	O
int	O
)	O
ftmp	float
;	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"NP: %d pens requested\n"	*(char)
,	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
;	O
}	O
break	O
;	O
case	O
NR	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
break	O
;	O
break	O
;	O
case	O
PA	int
:	O
lines	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
=	O
FALSE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
PC	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
fixedcolor	short
||	O
(	O
int	O
)	O
ftmp	float
>	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
{	O
break	O
;	O
}	O
else	O
{	O
mypen	int
=	O
(	O
int	O
)	O
ftmp	float
;	O
if	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
==	O
mypen	int
)	O
break	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
myred	int
=	O
0	int
;	O
else	O
myred	int
=	O
255	int
*	O
(	O
ftmp	float
-	O
r_base	char
)	O
/	O
r_max	char
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
mygreen	int
=	O
0	int
;	O
else	O
mygreen	int
=	O
255	int
*	O
(	O
ftmp	float
-	O
g_base	char
)	O
/	O
g_max	char
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
myblue	int
=	O
0	int
;	O
else	O
myblue	int
=	O
255	int
*	O
(	O
ftmp	float
-	O
b_base	char
)	O
/	O
b_max	char
;	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
is_color	int
=	O
TRUE	int
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DEF_PC	int
)	O
;	O
if	O
(	O
mypen	int
==	O
0	int
&&	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
>	O
-	O
1	int
)	O
mypen	int
=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
;	O
Pen_Color_to_tmpfile	(int,int,int,int)->(void)
(	O
mypen	int
,	O
myred	int
,	O
mygreen	int
,	O
myblue	int
)	O
;	O
break	O
;	O
}	O
case	O
PD	int
:	O
pen_down	short
=	O
TRUE	int
;	O
lines	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
PE	int
:	O
read_PE	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
PM	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
ftmp	float
==	O
0	int
)	O
{	O
polygon_mode	short
=	O
TRUE	int
;	O
polygon_penup	short
=	O
FALSE	int
;	O
saved_penstate	short
=	O
pen_down	short
;	O
vertices	int
=	O
-	O
1	int
;	O
polystart	struct(float,float)
=	O
p_last	struct(float,float)
;	O
break	O
;	O
}	O
if	O
(	O
ftmp	float
==	O
1	int
)	O
{	O
if	O
(	O
vertices	int
>	O
0	int
)	O
polygon_penup	short
=	O
TRUE	int
;	O
pen_down	short
=	O
FALSE	int
;	O
break	O
;	O
}	O
if	O
(	O
ftmp	float
==	O
2	int
)	O
{	O
polygon_mode	short
=	O
FALSE	int
;	O
pen_down	short
=	O
saved_penstate	short
;	O
if	O
(	O
p_last	struct(float,float)
.	O
x	int
!=	O
polystart	struct(float,float)
.	O
x	int
||	O
p_last	struct(float,float)
.	O
y	int
!=	O
polystart	struct(float,float)
.	O
y	int
)	O
{	O
int	O
outside	int
=	O
0	int
;	O
double	O
x1	double
,	O
y1	(double)->(double)
,	O
x2	*(double)
,	O
y2	*(double)
;	O
if	O
(	O
iwflag	int
)	O
{	O
x1	double
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
p_last	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
y1	(double)->(double)
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
p_last	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
x2	*(double)
=	O
P1	struct(float,float)
.	O
x	int
+	O
(	O
polystart	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
*	O
Q	struct(float,float)
.	O
x	int
;	O
y2	*(double)
=	O
P1	struct(float,float)
.	O
y	int
+	O
(	O
polystart	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
*	O
Q	struct(float,float)
.	O
y	int
;	O
outside	int
=	O
(	O
DtClipLine	(double,double,double,double,*(double),*(double),*(double),*(double))->(short)
(	O
C1	struct(float,float)
.	O
x	int
,	O
C1	struct(float,float)
.	O
y	int
,	O
C2	struct(float,float)
.	O
x	int
,	O
C2	struct(float,float)
.	O
y	int
,	O
&	O
x1	double
,	O
&	O
y1	(double)->(double)
,	O
&	O
x2	*(double)
,	O
&	O
y2	*(double)
)	O
==	O
CLIP_NODRAW	int
)	O
;	O
if	O
(	O
!	O
outside	int
)	O
{	O
p_last	struct(float,float)
.	O
x	int
=	O
(	O
x2	*(double)
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
+	O
S1	struct(float,float)
.	O
x	int
;	O
p_last	struct(float,float)
.	O
y	int
=	O
(	O
y2	*(double)
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
+	O
S1	struct(float,float)
.	O
y	int
;	O
polystart	struct(float,float)
.	O
x	int
=	O
(	O
x1	double
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
+	O
S1	struct(float,float)
.	O
x	int
;	O
polystart	struct(float,float)
.	O
y	int
=	O
(	O
y1	(double)->(double)
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
+	O
S1	struct(float,float)
.	O
y	int
;	O
}	O
}	O
if	O
(	O
!	O
outside	int
)	O
{	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
p_last	struct(float,float)
)	O
;	O
HPGL_Pt_to_polygon	(struct(float,float))->(void)
(	O
polystart	struct(float,float)
)	O
;	O
}	O
}	O
}	O
break	O
;	O
case	O
PR	int
:	O
lines	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
=	O
TRUE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
PS	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
ftmp	float
==	O
0.	int
)	O
{	O
break	O
;	O
}	O
else	O
{	O
myheight	float
=	O
ftmp	float
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
mywidth	float
=	O
P2	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
mywidth	float
=	O
ftmp	float
;	O
if	O
(	O
mywidth	float
>	O
myheight	float
)	O
{	O
mywidth	float
=	O
myheight	float
;	O
myheight	float
=	O
ftmp	float
;	O
}	O
}	O
if	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
no_ps	int
==	O
TRUE	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"PS: suppressed\n"	*(char)
)	O
;	O
break	O
;	O
}	O
ps_flag	short
=	O
1	int
;	O
M	struct(float,float)
.	O
x	int
=	O
myheight	float
;	O
M	struct(float,float)
.	O
y	int
=	O
mywidth	float
;	O
p1	struct(float,float)
.	O
x	int
=	O
0	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
0	int
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p1	struct(float,float)
,	O
&	O
p2	struct(float,float)
)	O
;	O
else	O
p2	struct(float,float)
=	O
p1	struct(float,float)
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
ftmp	float
=	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
x	int
-	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
x	int
+	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
x	int
=	O
ftmp	float
;	O
}	O
xmin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmin	double
)	O
;	O
ymin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymin	double
)	O
;	O
xmax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmax	double
)	O
;	O
ymax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymax	double
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
myheight	float
;	O
p1	struct(float,float)
.	O
y	int
=	O
mywidth	float
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p1	struct(float,float)
,	O
&	O
p2	struct(float,float)
)	O
;	O
else	O
p2	struct(float,float)
=	O
p1	struct(float,float)
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
ftmp	float
=	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
x	int
-	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
x	int
+	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
x	int
=	O
ftmp	float
;	O
}	O
xmin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmin	double
)	O
;	O
ymin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymin	double
)	O
;	O
xmax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmax	double
)	O
;	O
ymax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymax	double
)	O
;	O
P1	struct(float,float)
.	O
x	int
=	O
0.	int
;	O
P1	struct(float,float)
.	O
y	int
=	O
0.	int
;	O
P2	struct(float,float)
.	O
x	int
=	O
myheight	float
;	O
P2	struct(float,float)
.	O
y	int
=	O
mywidth	float
;	O
if	O
(	O
rotate_flag	short
)	O
{	O
P2	struct(float,float)
.	O
x	int
=	O
mywidth	float
;	O
P2	struct(float,float)
.	O
y	int
=	O
myheight	float
;	O
}	O
Diag_P1_P2	double
=	O
HYPOT	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
CurrentLinePatLen	double
=	O
0.04	int
*	O
Diag_P1_P2	double
;	O
S1	struct(float,float)
=	O
P1	struct(float,float)
;	O
S2	struct(float,float)
=	O
P2	struct(float,float)
;	O
break	O
;	O
case	O
PT	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
thickness	float
=	O
0.3	int
;	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
ftmp	float
>=	O
0.1	int
&&	O
ftmp	float
<=	O
5.	int
)	O
thickness	float
=	O
ftmp	float
;	O
}	O
case	O
PU	int
:	O
pen_down	short
=	O
FALSE	int
;	O
if	O
(	O
polygon_mode	short
)	O
polygon_penup	short
=	O
TRUE	int
;	O
lines	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
PW	int
:	O
if	O
(	O
fixedwidth	short
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"PW: ignored (hardware mode)\n"	*(char)
)	O
;	O
break	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
mywidth	float
=	O
0.35	int
;	O
if	O
(	O
wu_relative	short
)	O
mywidth	float
=	O
Diag_P1_P2	double
/	O
1000.	int
;	O
if	O
(	O
mywidth	float
<	O
0.1	int
)	O
mywidth	float
=	O
0.1	int
;	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DEF_PW	int
)	O
;	O
Pen_Width_to_tmpfile	(int,float)->(void)
(	O
0	int
,	O
mywidth	float
)	O
;	O
break	O
;	O
}	O
else	O
{	O
mywidth	float
=	O
ftmp	float
;	O
if	O
(	O
wu_relative	short
)	O
mywidth	float
=	O
Diag_P1_P2	double
*	O
ftmp	float
/	O
1000.	int
;	O
if	O
(	O
mywidth	float
<	O
0.1	int
)	O
mywidth	float
=	O
0.1	int
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DEF_PW	int
)	O
;	O
Pen_Width_to_tmpfile	(int,float)->(void)
(	O
0	int
,	O
mywidth	float
)	O
;	O
if	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpensize	float
<	O
mywidth	float
)	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpensize	float
=	O
mywidth	float
;	O
}	O
else	O
{	O
PlotCmd_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int))->(void)
(	O
DEF_PW	int
)	O
;	O
Pen_Width_to_tmpfile	(int,float)->(void)
(	O
(	O
int	O
)	O
ftmp	float
,	O
mywidth	float
)	O
;	O
if	O
(	O
(	O
int	O
)	O
ftmp	float
<=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
{	O
if	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpensize	float
<	O
mywidth	float
)	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpensize	float
=	O
mywidth	float
;	O
}	O
}	O
break	O
;	O
case	O
TL	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
neg_ticklen	float
=	O
pos_ticklen	float
=	O
0.005	int
;	O
return	O
;	O
}	O
else	O
pos_ticklen	float
=	O
ftmp	float
/	O
100.0	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
neg_ticklen	float
=	O
0.0	int
;	O
return	O
;	O
}	O
else	O
neg_ticklen	float
=	O
ftmp	float
/	O
100.0	int
;	O
break	O
;	O
case	O
WG	int
:	O
fwedges	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),float)->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
)	O
;	O
break	O
;	O
case	O
WU	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
ftmp	float
==	O
0.	int
)	O
wu_relative	short
=	O
FALSE	int
;	O
else	O
wu_relative	short
=	O
TRUE	int
;	O
break	O
;	O
case	O
XT	int
:	O
ax_ticks	(int)->(void)
(	O
0	int
)	O
;	O
break	O
;	O
case	O
YT	int
:	O
ax_ticks	(int)->(void)
(	O
1	int
)	O
;	O
break	O
;	O
case	O
IP	int
:	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
/=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
/=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
P1	struct(float,float)
.	O
x	int
=	O
P1X_default	int
;	O
P1	struct(float,float)
.	O
y	int
=	O
P1Y_default	int
;	O
P2	struct(float,float)
.	O
x	int
=	O
P2X_default	int
;	O
P2	struct(float,float)
.	O
y	int
=	O
P2Y_default	int
;	O
goto	O
IP_Exit	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
P2	struct(float,float)
.	O
x	int
+=	O
p1	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
;	O
P2	struct(float,float)
.	O
y	int
+=	O
p1	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
;	O
P1	struct(float,float)
=	O
p1	struct(float,float)
;	O
goto	O
IP_Exit	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
4	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
P1	struct(float,float)
=	O
p1	struct(float,float)
;	O
P2	struct(float,float)
=	O
p2	struct(float,float)
;	O
IP_Exit	O
:	O
S1	struct(float,float)
=	O
P1	struct(float,float)
;	O
S2	struct(float,float)
=	O
P2	struct(float,float)
;	O
Q	struct(float,float)
.	O
x	int
=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
;	O
Q	struct(float,float)
.	O
y	int
=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
;	O
Diag_P1_P2	double
=	O
HYPOT	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
CurrentLinePatLen	double
=	O
0.04	int
*	O
Diag_P1_P2	double
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
*=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
*=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
return	O
;	O
case	O
IR	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
mywidth	float
=	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
;	O
myheight	float
=	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
;	O
ftmp	float
=	O
p1	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
;	O
P1	struct(float,float)
.	O
x	int
=	O
p1	struct(float,float)
.	O
x	int
+	O
ftmp	float
/	O
100.	int
*	O
mywidth	float
;	O
ftmp	float
=	O
p1	struct(float,float)
.	O
y	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
;	O
P1	struct(float,float)
.	O
y	int
=	O
p1	struct(float,float)
.	O
y	int
+	O
ftmp	float
/	O
100.	int
*	O
myheight	float
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
P2	struct(float,float)
.	O
x	int
=	O
P1	struct(float,float)
.	O
x	int
+	O
mywidth	float
;	O
P2	struct(float,float)
.	O
y	int
=	O
P1	struct(float,float)
.	O
y	int
+	O
myheight	float
;	O
return	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
4	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
P2	struct(float,float)
.	O
x	int
=	O
p1	struct(float,float)
.	O
x	int
+	O
p2	struct(float,float)
.	O
x	int
/	O
100.	int
*	O
mywidth	float
;	O
P2	struct(float,float)
.	O
y	int
=	O
p1	struct(float,float)
.	O
y	int
+	O
p2	struct(float,float)
.	O
y	int
/	O
100.	int
*	O
myheight	float
;	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
==	O
P2	struct(float,float)
.	O
x	int
)	O
P2	struct(float,float)
.	O
x	int
=	O
P2	struct(float,float)
.	O
x	int
+	O
1.	int
;	O
if	O
(	O
P1	struct(float,float)
.	O
y	int
==	O
P2	struct(float,float)
.	O
y	int
)	O
P2	struct(float,float)
.	O
y	int
=	O
P2	struct(float,float)
.	O
y	int
+	O
1.	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"P1,P2 nach IR: %f %f, %f %f\n"	*(char)
,	O
P1	struct(float,float)
.	O
x	int
,	O
P1	struct(float,float)
.	O
y	int
,	O
P2	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
)	O
;	O
Q	struct(float,float)
.	O
x	int
=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
;	O
Q	struct(float,float)
.	O
y	int
=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
;	O
Diag_P1_P2	double
=	O
HYPOT	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
CurrentLinePatLen	double
=	O
0.04	int
*	O
Diag_P1_P2	double
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
*=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
*=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
return	O
;	O
case	O
IW	int
:	O
iwflag	int
=	O
1	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
C1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
P1	struct(float,float)
.	O
x	int
==	O
P1X_default	int
&&	O
P1	struct(float,float)
.	O
y	int
==	O
P1Y_default	int
&&	O
P2	struct(float,float)
.	O
x	int
==	O
P2X_default	int
&&	O
P2	struct(float,float)
.	O
y	int
==	O
P2Y_default	int
)	O
{	O
iwflag	int
=	O
0	int
;	O
break	O
;	O
}	O
C1	struct(float,float)
=	O
P1	struct(float,float)
;	O
C2	struct(float,float)
=	O
P2	struct(float,float)
;	O
if	O
(	O
scale_flag	int
)	O
{	O
C1	struct(float,float)
=	O
S1	struct(float,float)
;	O
C2	struct(float,float)
=	O
S2	struct(float,float)
;	O
}	O
if	O
(	O
rotate_flag	short
&&	O
!	O
ps_flag	short
)	O
{	O
switch	O
(	O
(	O
int	O
)	O
fabs	(double)->(double)
(	O
rot_tmp	double
)	O
)	O
{	O
case	O
90	int
:	O
case	O
270	int
:	O
ftmp	float
=	O
C1	struct(float,float)
.	O
x	int
;	O
C1	struct(float,float)
.	O
x	int
=	O
C1	struct(float,float)
.	O
y	int
;	O
C1	struct(float,float)
.	O
y	int
=	O
ftmp	float
;	O
ftmp	float
=	O
C2	struct(float,float)
.	O
x	int
;	O
C2	struct(float,float)
.	O
x	int
=	O
C2	struct(float,float)
.	O
y	int
;	O
C2	struct(float,float)
.	O
y	int
=	O
ftmp	float
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
C1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
C2	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
C2	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
4	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
if	O
(	O
scale_flag	int
)	O
{	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
C1	struct(float,float)
,	O
&	O
C1	struct(float,float)
)	O
;	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
C2	struct(float,float)
,	O
&	O
C2	struct(float,float)
)	O
;	O
}	O
if	O
(	O
C2	struct(float,float)
.	O
x	int
<	O
C1	struct(float,float)
.	O
x	int
)	O
{	O
ftmp	float
=	O
C2	struct(float,float)
.	O
x	int
;	O
C2	struct(float,float)
.	O
x	int
=	O
C1	struct(float,float)
.	O
x	int
;	O
C1	struct(float,float)
.	O
x	int
=	O
ftmp	float
;	O
}	O
if	O
(	O
C2	struct(float,float)
.	O
y	int
<	O
C1	struct(float,float)
.	O
y	int
)	O
{	O
ftmp	float
=	O
C2	struct(float,float)
.	O
y	int
;	O
C2	struct(float,float)
.	O
y	int
=	O
C1	struct(float,float)
.	O
y	int
;	O
C1	struct(float,float)
.	O
y	int
=	O
ftmp	float
;	O
}	O
C1	struct(float,float)
.	O
x	int
-=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
extraclip	int
;	O
C1	struct(float,float)
.	O
y	int
-=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
extraclip	int
;	O
C2	struct(float,float)
.	O
x	int
+=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
extraclip	int
;	O
C2	struct(float,float)
.	O
y	int
+=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
extraclip	int
;	O
break	O
;	O
case	O
OP	int
:	O
if	O
(	O
!	O
silent_mode	short
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"\nP1 = (%g, %g)\n"	*(char)
,	O
P1	struct(float,float)
.	O
x	int
,	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"P2 = (%g, %g)\n"	*(char)
,	O
P2	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
)	O
;	O
}	O
break	O
;	O
case	O
OW	int
:	O
if	O
(	O
!	O
silent_mode	short
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"\nC1 = (%g, %g)\n"	*(char)
,	O
C1	struct(float,float)
.	O
x	int
,	O
C1	struct(float,float)
.	O
y	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"C2 = (%g, %g)\n"	*(char)
,	O
C2	struct(float,float)
.	O
x	int
,	O
C2	struct(float,float)
.	O
y	int
)	O
;	O
}	O
break	O
;	O
case	O
AF	int
:	O
case	O
AH	int
:	O
case	O
PG	int
:	O
page_number	int
++	O
;	O
record_off	short
=	O
(	O
first_page	int
>	O
page_number	int
)	O
||	O
(	O
(	O
last_page	int
<	O
page_number	int
)	O
&&	O
(	O
last_page	int
>	O
0	int
)	O
)	O
;	O
pg_flag	short
=	O
TRUE	int
;	O
return	O
;	O
break	O
;	O
case	O
EA	int
:	O
rects	(int,int,float,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
=	O
FALSE	int
,	O
0	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
ER	int
:	O
rects	(int,int,float,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
TRUE	int
,	O
0	int
,	O
0.	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
RA	int
:	O
rects	(int,int,float,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
=	O
FALSE	int
,	O
1	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
RR	int
:	O
rects	(int,int,float,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
plot_rel	short
=	O
TRUE	int
,	O
1	int
,	O
pt	struct(array(float),array(short),array(array(char)))
.	O
width	array(float)
[	O
pen	int
]	O
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
RT	int
:	O
tarcs	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
TRUE	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
LT	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_solid	int
;	O
else	O
{	O
if	O
(	O
(	O
(	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
)	O
>=	O
LT_MIN	O
)	O
&&	O
(	O
(	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
)	O
<	O
LT_ZERO	int
)	O
)	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_adaptive	int
;	O
else	O
if	O
(	O
(	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
)	O
==	O
LT_ZERO	int
)	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_plot_at	int
;	O
else	O
if	O
(	O
(	O
(	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
)	O
>	O
LT_ZERO	int
)	O
&&	O
(	O
(	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
)	O
<=	O
LT_MAX	int
)	O
)	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_fixed	int
;	O
else	O
{	O
Eprintf	(*(char))->(void)
(	O
"Illegal line type:\t%d\n"	*(char)
,	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
)	O
;	O
CurrentLineType	enum(int,int,int,int)
=	O
LT_solid	int
;	O
}	O
CurrentLinePattern	int
=	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
;	O
if	O
(	O
!	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
p1	struct(float,float)
.	O
y	int
<=	O
0.0	int
)	O
Eprintf	(*(char))->(void)
(	O
"Illegal pattern length:\t%g\n"	*(char)
,	O
p1	struct(float,float)
.	O
y	int
)	O
;	O
else	O
{	O
Diag_P1_P2	double
=	O
HYPOT	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
,	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
;	O
if	O
(	O
!	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
ftmp	float
==	O
1.0	int
)	O
{	O
CurrentLinePatLen	double
=	O
p1	struct(float,float)
.	O
y	int
*	O
40	int
;	O
}	O
else	O
{	O
CurrentLinePatLen	double
=	O
Diag_P1_P2	double
*	O
p1	struct(float,float)
.	O
y	int
/	O
100.0	int
;	O
}	O
}	O
else	O
{	O
CurrentLinePatLen	double
=	O
Diag_P1_P2	double
*	O
p1	struct(float,float)
.	O
y	int
/	O
100.0	int
;	O
}	O
}	O
}	O
}	O
break	O
;	O
case	O
SC	int
:	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p_last	struct(float,float)
,	O
&	O
p_last	struct(float,float)
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
S1	struct(float,float)
.	O
x	int
=	O
P1X_default	int
;	O
S1	struct(float,float)
.	O
y	int
=	O
P1Y_default	int
;	O
S2	struct(float,float)
.	O
x	int
=	O
P2X_default	int
;	O
S2	struct(float,float)
.	O
y	int
=	O
P2Y_default	int
;	O
scale_flag	int
=	O
FALSE	int
;	O
Q	struct(float,float)
.	O
x	int
=	O
Q	struct(float,float)
.	O
y	int
=	O
1.0	int
;	O
break	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
3	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p2	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
4	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
p1	struct(float,float)
.	O
x	int
==	O
p2	struct(float,float)
.	O
x	int
||	O
p1	struct(float,float)
.	O
y	int
==	O
p2	struct(float,float)
.	O
y	int
)	O
{	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"Warning: Invalid SC command parameters -- ignored\n"	*(char)
)	O
;	O
Q	struct(float,float)
.	O
x	int
=	O
Q	struct(float,float)
.	O
y	int
=	O
1.0	int
;	O
break	O
;	O
}	O
S1	struct(float,float)
.	O
x	int
=	O
p1	struct(float,float)
.	O
x	int
;	O
S1	struct(float,float)
.	O
y	int
=	O
p1	struct(float,float)
.	O
y	int
;	O
S2	struct(float,float)
.	O
x	int
=	O
p2	struct(float,float)
.	O
x	int
;	O
S2	struct(float,float)
.	O
y	int
=	O
p2	struct(float,float)
.	O
y	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
ftmp	float
=	O
0	int
;	O
switch	O
(	O
(	O
int	O
)	O
ftmp	float
)	O
{	O
case	O
0	int
:	O
Q	struct(float,float)
.	O
x	int
=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
;	O
Q	struct(float,float)
.	O
y	int
=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
;	O
break	O
;	O
case	O
1	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
ftmp	float
=	O
50.0	int
;	O
Q	struct(float,float)
.	O
x	int
=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
x	int
-	O
S1	struct(float,float)
.	O
x	int
)	O
;	O
Q	struct(float,float)
.	O
y	int
=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
(	O
S2	struct(float,float)
.	O
y	int
-	O
S1	struct(float,float)
.	O
y	int
)	O
;	O
if	O
(	O
Q	struct(float,float)
.	O
x	int
<	O
Q	struct(float,float)
.	O
y	int
)	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
ftmp	float
=	O
50.0	int
;	O
S1	struct(float,float)
.	O
y	int
+=	O
ftmp	float
*	O
(	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
-	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
)	O
/	O
100.0	int
;	O
Q	struct(float,float)
.	O
y	int
=	O
Q	struct(float,float)
.	O
x	int
;	O
S2	struct(float,float)
.	O
y	int
=	O
S1	struct(float,float)
.	O
y	int
+	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
;	O
}	O
else	O
{	O
S1	struct(float,float)
.	O
x	int
+=	O
ftmp	float
*	O
(	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
-	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
)	O
/	O
100.0	int
;	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
Q	struct(float,float)
.	O
x	int
=	O
Q	struct(float,float)
.	O
y	int
;	O
S2	struct(float,float)
.	O
x	int
=	O
S1	struct(float,float)
.	O
x	int
+	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
;	O
}	O
break	O
;	O
case	O
2	int
:	O
Q	struct(float,float)
.	O
x	int
=	O
S2	struct(float,float)
.	O
x	int
;	O
Q	struct(float,float)
.	O
y	int
=	O
S2	struct(float,float)
.	O
y	int
;	O
S2	struct(float,float)
.	O
x	int
=	O
S1	struct(float,float)
.	O
x	int
+	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
Q	struct(float,float)
.	O
x	int
;	O
S2	struct(float,float)
.	O
y	int
=	O
S1	struct(float,float)
.	O
y	int
+	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
Q	struct(float,float)
.	O
y	int
;	O
break	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
0	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
scale_flag	int
=	O
TRUE	int
;	O
Plotter_to_User_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p_last	struct(float,float)
,	O
&	O
p_last	struct(float,float)
)	O
;	O
break	O
;	O
case	O
SP	int
:	O
old_pen	short
=	O
pen	int
;	O
thickness	float
=	O
0.	int
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
pen	int
=	O
0	int
;	O
else	O
{	O
pen	int
=	O
(	O
short	O
)	O
p1	struct(float,float)
.	O
x	int
;	O
if	O
(	O
pen	int
==	O
0	int
&&	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
>	O
-	O
1	int
)	O
pen	int
=	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
mapzero	int
;	O
}	O
if	O
(	O
pen	int
<	O
0	int
||	O
(	O
int	O
)	O
pen	int
>	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"\nIllegal pen number %d: replaced by %d\n"	*(char)
,	O
pen	int
,	O
pen	int
%	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
)	O
;	O
n_unexpected	int
++	O
;	O
pen	int
=	O
pen	int
%	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxpens	int
;	O
}	O
if	O
(	O
old_pen	short
!=	O
pen	int
)	O
{	O
if	O
(	O
(	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
SET_PEN	int
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
||	O
(	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pen	int
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
==	O
EOF	O
)	O
)	O
{	O
PError	(*(char))->(void)
(	O
"Writing to temporary file:"	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Error @ Cmd %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
}	O
if	O
(	O
pen	int
)	O
pens_in_use	array(short)
[	O
pen	int
]	O
=	O
1	int
;	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxcolor	int
=	O
MAX	O
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
maxcolor	int
,	O
(	O
int	O
)	O
pen	int
)	O
;	O
break	O
;	O
case	O
BP	int
:	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
break	O
;	O
}	O
else	O
{	O
switch	O
(	O
(	O
int	O
)	O
ftmp	float
)	O
{	O
case	O
1	int
:	O
tmpstr	array(char)
[	O
0	int
]	O
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tmpstr	array(char)
[	O
0	int
]	O
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"HPGL picture name: %c"	*(char)
,	O
tmpstr	array(char)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
tmpstr	array(char)
[	O
0	int
]	O
==	O
'"'	O
)	O
{	O
tmpstr	array(char)
[	O
0	int
]	O
=	O
' '	O
;	O
do	O
{	O
tmpstr	array(char)
[	O
0	int
]	O
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
tmpstr	array(char)
[	O
0	int
]	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
while	O
(	O
tmpstr	array(char)
[	O
0	int
]	O
!=	O
'"'	O
)	O
;	O
}	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
break	O
;	O
case	O
2	int
:	O
case	O
3	int
:	O
case	O
4	int
:	O
case	O
5	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
break	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
}	O
case	O
DF	int
:	O
case	O
IN	int
:	O
reset_HPGL	()->(void)
(	O
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
RO	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
break	O
;	O
}	O
else	O
{	O
rotate_flag	short
=	O
1	int
;	O
rot_ang	double
+=	O
ftmp	float
;	O
rot_tmp	double
=	O
ftmp	float
;	O
switch	O
(	O
(	O
int	O
)	O
ftmp	float
)	O
{	O
case	O
90	int
:	O
case	O
270	int
:	O
ftmp	float
=	O
M	struct(float,float)
.	O
x	int
;	O
M	struct(float,float)
.	O
x	int
=	O
M	struct(float,float)
.	O
y	int
;	O
M	struct(float,float)
.	O
y	int
=	O
ftmp	float
;	O
break	O
;	O
case	O
0	int
:	O
case	O
180	int
:	O
break	O
;	O
default	O
:	O
rotate_flag	short
=	O
0	int
;	O
break	O
;	O
}	O
rot_cos	float
=	O
cos	(double)->(double)
(	O
M_PI	int
*	O
rot_ang	double
/	O
180.0	int
)	O
;	O
rot_sin	float
=	O
sin	(double)->(double)
(	O
M_PI	int
*	O
rot_ang	double
/	O
180.0	int
)	O
;	O
if	O
(	O
ps_flag	short
)	O
{	O
xmin	double
=	O
1e10	int
;	O
ymin	double
=	O
1e10	int
;	O
xmax	double
=	O
1e-10	int
;	O
ymax	double
=	O
1e-10	int
;	O
p1	struct(float,float)
.	O
x	int
=	O
0	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
0	int
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p1	struct(float,float)
,	O
&	O
p2	struct(float,float)
)	O
;	O
else	O
p2	struct(float,float)
=	O
p1	struct(float,float)
;	O
HP_pos	struct(float,float)
=	O
p2	struct(float,float)
;	O
ftmp	float
=	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
x	int
-	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
x	int
+	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
x	int
=	O
ftmp	float
;	O
xmin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmin	double
)	O
;	O
ymin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymin	double
)	O
;	O
xmax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmax	double
)	O
;	O
ymax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymax	double
)	O
;	O
p1	struct(float,float)
.	O
x	int
=	O
M	struct(float,float)
.	O
x	int
;	O
p1	struct(float,float)
.	O
y	int
=	O
M	struct(float,float)
.	O
y	int
;	O
if	O
(	O
scale_flag	int
)	O
User_to_Plotter_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
p1	struct(float,float)
,	O
&	O
p2	struct(float,float)
)	O
;	O
else	O
p2	struct(float,float)
=	O
p1	struct(float,float)
;	O
HP_pos	struct(float,float)
=	O
p2	struct(float,float)
;	O
ftmp	float
=	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
x	int
-	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
rot_sin	float
*	O
p2	struct(float,float)
.	O
x	int
+	O
rot_cos	float
*	O
p2	struct(float,float)
.	O
y	int
;	O
p2	struct(float,float)
.	O
x	int
=	O
ftmp	float
;	O
xmin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmin	double
)	O
;	O
ymin	double
=	O
MIN	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymin	double
)	O
;	O
xmax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
x	int
,	O
xmax	double
)	O
;	O
ymax	double
=	O
MAX	O
(	O
p2	struct(float,float)
.	O
y	int
,	O
ymax	double
)	O
;	O
}	O
}	O
break	O
;	O
case	O
BL	int
:	O
read_string	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
strbuf	*(char)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
CP	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
plot_string	(*(char),enum(int,int,int),short)->(void)
(	O
"\n\r"	*(char)
,	O
LB_direct	int
,	O
pen	int
)	O
;	O
return	O
;	O
}	O
else	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
p2	struct(float,float)
.	O
x	int
=	O
p1	struct(float,float)
.	O
x	int
*	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
chardiff	struct(float,float)
.	O
x	int
-	O
p1	struct(float,float)
.	O
y	int
*	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
linediff	struct(float,float)
.	O
x	int
+	O
HP_pos	struct(float,float)
.	O
x	int
;	O
p2	struct(float,float)
.	O
y	int
=	O
p1	struct(float,float)
.	O
x	int
*	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
chardiff	struct(float,float)
.	O
y	int
-	O
p1	struct(float,float)
.	O
y	int
*	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
linediff	struct(float,float)
.	O
y	int
+	O
HP_pos	struct(float,float)
.	O
y	int
;	O
Pen_action_to_tmpfile	(enum(int,int,int,int,int,int,int,int,int),*(struct(float,float)),int)->(void)
(	O
MOVE_TO	int
,	O
&	O
p2	struct(float,float)
,	O
FALSE	int
)	O
;	O
break	O
;	O
case	O
DI	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
dir	float
=	O
0.0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
(	O
p1	struct(float,float)
.	O
x	int
==	O
0.0	int
)	O
&&	O
(	O
p1	struct(float,float)
.	O
y	int
==	O
0.0	int
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
0	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
dir	float
=	O
atan2	(double,double)->(double)
(	O
p1	struct(float,float)
.	O
y	int
,	O
p1	struct(float,float)
.	O
x	int
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
DR	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
dir	float
=	O
0.0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
y	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
(	O
p1	struct(float,float)
.	O
x	int
==	O
0.0	int
)	O
&&	O
(	O
p1	struct(float,float)
.	O
y	int
==	O
0.0	int
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
0	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
dir	float
=	O
atan2	(double,double)->(double)
(	O
p1	struct(float,float)
.	O
y	int
*	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
,	O
p1	struct(float,float)
.	O
x	int
*	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
)	O
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
CR_point	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
DT	int
:	O
StrTerm	char
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
StrTerm	char
==	O
';'	O
)	O
{	O
StrTerm	char
=	O
ETX	char
;	O
StrTermSilent	short
=	O
1	int
;	O
break	O
;	O
}	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
StrTermSilent	short
=	O
1	int
;	O
}	O
else	O
StrTermSilent	short
=	O
(	O
short	O
)	O
ftmp	float
;	O
break	O
;	O
case	O
DV	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
ftmp	float
==	O
0	int
)	O
mode_vert	int
=	O
0	int
;	O
else	O
mode_vert	int
=	O
1	int
;	O
break	O
;	O
case	O
ES	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
espace	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
espace	float
=	O
0.0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
eline	float
=	O
0.0	int
;	O
}	O
else	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
eline	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
eline	float
=	O
0.0	int
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
LA	int
:	O
set_line_attr	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
LB	int
:	O
read_string	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
strbuf	*(char)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
plot_string	(*(char),enum(int,int,int),short)->(void)
(	O
strbuf	*(char)
,	O
LB_direct	int
,	O
pen	int
)	O
;	O
if	O
(	O
scale_flag	int
)	O
Plotter_to_User_coord	(*(struct(float,float)),*(struct(float,float)))->(void)
(	O
&	O
HP_pos	struct(float,float)
,	O
&	O
p_last	struct(float,float)
)	O
;	O
else	O
p_last	struct(float,float)
=	O
HP_pos	struct(float,float)
;	O
break	O
;	O
case	O
LO	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
p1	struct(float,float)
.	O
x	int
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
orig	int
=	O
1	int
;	O
else	O
{	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
orig	int
=	O
(	O
int	O
)	O
p1	struct(float,float)
.	O
x	int
;	O
if	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
orig	int
<	O
1	int
||	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
orig	int
==	O
10	int
||	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
orig	int
>	O
19	int
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
orig	int
=	O
1	int
;	O
}	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
PB	int
:	O
plot_string	(*(char),enum(int,int,int),short)->(void)
(	O
strbuf	*(char)
,	O
LB_buffered	int
,	O
pen	int
)	O
;	O
break	O
;	O
case	O
SI	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
=	O
0.187	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
=	O
0.269	int
;	O
}	O
else	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
==	O
0.0	int
)	O
||	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
==	O
0.0	int
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
0	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
*=	O
400.0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
*=	O
400.0	int
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
SL	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
slant	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
slant	float
=	O
0.0	int
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
SM	int
:	O
read_symbol_char	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
SR	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
=	O
0.75	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
=	O
1.5	int
;	O
}	O
else	O
{	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
(	O
short	O
)	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
==	O
0.0	int
)	O
||	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
==	O
0.0	int
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
0	int
,	O
(	O
short	O
)	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
width	array(float)
*=	O
(	O
P2	struct(float,float)
.	O
x	int
-	O
P1	struct(float,float)
.	O
x	int
)	O
/	O
100.0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
height	double
*=	O
(	O
P2	struct(float,float)
.	O
y	int
-	O
P1	struct(float,float)
.	O
y	int
)	O
/	O
100.0	int
;	O
adjust_text_par	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
SA	int
:	O
if	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
altfont	int
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
altfont	int
;	O
else	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
=	O
0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
strokewidth	double
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
astrokewidth	double
;	O
break	O
;	O
case	O
SD	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
stdfont	int
=	O
0	int
;	O
else	O
{	O
switch	O
(	O
(	O
int	O
)	O
ftmp	float
)	O
{	O
case	O
1	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
stdfont	int
=	O
(	O
int	O
)	O
csfont	float
;	O
break	O
;	O
case	O
2	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
(	O
int	O
)	O
csfont	float
==	O
1	int
&&	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"only fixed fonts available\n"	*(char)
)	O
;	O
break	O
;	O
case	O
3	int
:	O
case	O
4	int
:	O
case	O
5	int
:	O
case	O
6	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ftmp	float
==	O
9999	int
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
sstrokewidth	double
=	O
ftmp	float
;	O
else	O
{	O
if	O
(	O
ftmp	float
<	O
-	O
7.	int
||	O
ftmp	float
>	O
7.	int
)	O
ftmp	float
=	O
0.	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
sstrokewidth	double
=	O
0.11	int
+	O
ftmp	float
/	O
70.	int
;	O
}	O
break	O
;	O
case	O
7	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
csfont	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
2	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
if	O
(	O
!	O
silent_mode	short
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"pitch/height/posture/typeface unsupported\n"	*(char)
)	O
;	O
break	O
;	O
default	O
:	O
par_err_exit	(int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
1	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
break	O
;	O
case	O
SS	int
:	O
if	O
(	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
stdfont	int
)	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
stdfont	int
;	O
else	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
font	int
=	O
0	int
;	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
strokewidth	double
=	O
tp	*(struct(float,float,float,float,float,float,float,float,int,int,int,int,double,double,double,double,struct(float,float),struct(float,float),struct(float,float),struct(float,float),struct(float,float),double,double,double))
->	O
sstrokewidth	double
;	O
break	O
;	O
case	O
UC	int
:	O
plot_user_char	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),short)->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
pen	int
)	O
;	O
break	O
;	O
case	O
UL	int
:	O
set_line_style_by_UL	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
case	O
MG	int
:	O
case	O
WD	int
:	O
read_string	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
strbuf	*(char)
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"\nLABEL: %s\n"	*(char)
,	O
strbuf	*(char)
)	O
;	O
break	O
;	O
case	O
VS	int
:	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
break	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
break	O
;	O
if	O
(	O
read_float	(*(float),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
ftmp	float
,	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
break	O
;	O
default	O
:	O
n_unknown	int
++	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"  %c%c: ignored  "	*(char)
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
>>	O
8	int
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
&	O
0xFF	int
)	O
;	O
if	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
==	O
EOF	O
)	O
{	O
n_unexpected	int
++	O
;	O
if	O
(	O
!	O
silent_mode	short
)	O
Eprintf	(*(char))->(void)
(	O
"\nUnexpected EOF!\t"	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
}	O
void	O
read_HPGL	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
const	O
IN_PAR	struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
int	O
c	int
;	O
int	O
cmd	enum(int,int,int,int,int,int,int,int,int)
;	O
vec_cntr_r	long
=	O
0L	int
;	O
vec_cntr_w	long
=	O
0L	int
;	O
n_unexpected	int
=	O
0	int
;	O
n_commands	long
=	O
0	int
;	O
n_unknown	int
=	O
0	int
;	O
if	O
(	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
EOF	O
)	O
return	O
;	O
else	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
pg_flag	short
)	O
init_HPGL	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
Eprintf	(*(char))->(void)
(	O
"\nReading HPGL file\n"	*(char)
)	O
;	O
while	O
(	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
c	int
)	O
{	O
case	O
ESC	char
:	O
read_ESC_cmd	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(void)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
TRUE	int
)	O
;	O
break	O
;	O
default	O
:	O
if	O
(	O
(	O
c	int
<	O
'A'	O
)	O
||	O
(	O
c	int
>	O
'z'	O
)	O
||	O
(	O
(	O
c	int
>	O
'Z'	O
)	O
&&	O
(	O
c	int
<	O
'a'	O
)	O
)	O
)	O
break	O
;	O
if	O
(	O
c	int
==	O
'P'	O
)	O
{	O
if	O
(	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
'G'	O
)	O
{	O
page_number	int
++	O
;	O
record_off	short
=	O
(	O
first_page	int
>	O
page_number	int
)	O
||	O
(	O
(	O
last_page	int
<	O
page_number	int
)	O
&&	O
(	O
last_page	int
>	O
0	int
)	O
)	O
;	O
goto	O
END	O
;	O
}	O
else	O
{	O
if	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
==	O
EOF	O
)	O
return	O
;	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
if	O
(	O
c	int
==	O
'N'	O
)	O
{	O
if	O
(	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
'R'	O
)	O
{	O
page_number	int
++	O
;	O
record_off	short
=	O
(	O
first_page	int
>	O
page_number	int
)	O
||	O
(	O
(	O
last_page	int
<	O
page_number	int
)	O
&&	O
(	O
last_page	int
>	O
0	int
)	O
)	O
;	O
goto	O
END	O
;	O
}	O
else	O
{	O
if	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
==	O
EOF	O
)	O
return	O
;	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
if	O
(	O
c	int
==	O
'A'	O
)	O
{	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
==	O
'F'	O
||	O
cmd	enum(int,int,int,int,int,int,int,int,int)
==	O
'H'	O
)	O
{	O
page_number	int
++	O
;	O
record_off	short
=	O
(	O
first_page	int
>	O
page_number	int
)	O
||	O
(	O
(	O
last_page	int
<	O
page_number	int
)	O
&&	O
(	O
last_page	int
>	O
0	int
)	O
)	O
;	O
goto	O
END	O
;	O
}	O
else	O
{	O
if	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
==	O
EOF	O
)	O
return	O
;	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
c	int
<<	O
8	int
;	O
if	O
(	O
(	O
c	int
=	O
getc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
==	O
EOF	O
)	O
return	O
;	O
if	O
(	O
(	O
c	int
<	O
'A'	O
)	O
||	O
(	O
c	int
>	O
'z'	O
)	O
||	O
(	O
(	O
c	int
>	O
'Z'	O
)	O
&&	O
(	O
c	int
<	O
'a'	O
)	O
)	O
)	O
{	O
ungetc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	int
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
break	O
;	O
}	O
cmd	enum(int,int,int,int,int,int,int,int,int)
|=	O
(	O
c	int
&	O
0xFF	int
)	O
;	O
n_commands	long
++	O
;	O
read_HPGL_cmd	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
cmd	enum(int,int,int,int,int,int,int,int,int)
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
hd	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
if	O
(	O
c	int
==	O
EOF	O
)	O
{	O
page_number	int
++	O
;	O
}	O
END	O
:	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
&&	O
n_commands	long
>	O
0	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"Page number %d of range %d - %d\n"	*(char)
,	O
page_number	int
-	O
1	int
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
first_page	int
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
last_page	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"\nHPGL commands read: %d\n"	*(char)
,	O
n_commands	long
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"HPGL command(s) ignored: %d\n"	*(char)
,	O
n_unknown	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Unexpected event(s):  %d\n"	*(char)
,	O
n_unexpected	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Internal command(s):  %ld\n"	*(char)
,	O
vec_cntr_w	long
)	O
;	O
if	O
(	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
first_page	int
>	O
page_number	int
-	O
1	int
)	O
||	O
(	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
last_page	int
<	O
page_number	int
-	O
1	int
)	O
&&	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
last_page	int
>	O
0	int
)	O
)	O
)	O
{	O
n_commands	long
=	O
-	O
1	int
;	O
Eprintf	(*(char))->(void)
(	O
"Page %d not drawn (outside selected range %d-%d)\n"	*(char)
,	O
page_number	int
-	O
1	int
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
first_page	int
,	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
last_page	int
)	O
;	O
}	O
Eprintf	(*(char))->(void)
(	O
"Pens used: "	*(char)
)	O
;	O
for	O
(	O
c	int
=	O
0	int
;	O
c	int
<	O
NUMPENS	int
;	O
c	int
++	O
)	O
if	O
(	O
pens_in_use	array(short)
[	O
c	int
]	O
==	O
1	int
)	O
Eprintf	(*(char))->(void)
(	O
"%d "	*(char)
,	O
c	int
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"\nMax. number of pages: %d\n"	*(char)
,	O
page_number	int
-	O
1	int
)	O
;	O
}	O
}	O
void	O
adjust_input_transform	(*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)),*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*`,*`,*`)),double,double)))->(void)
(	O
const	O
GEN_PAR	struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int)
*	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
,	O
const	O
IN_PAR	struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
*	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
,	O
OUT_PAR	struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct(*`,int,*`,*`)),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))),double,double)
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
)	O
{	O
double	O
dot_ratio	double
,	O
Dx	double
,	O
Dy	double
,	O
tmp_w	double
,	O
tmp_h	double
;	O
char	O
*	O
dir_str	*(char)
;	O
Dx	double
=	O
xmax	double
-	O
xmin	double
;	O
Dy	double
=	O
ymax	double
-	O
ymin	double
;	O
dot_ratio	double
=	O
(	O
double	O
)	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
dpi_y	int
/	O
(	O
double	O
)	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
dpi_x	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
width	array(float)
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
height	double
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xoff	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
xoff	double
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
yoff	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
yoff	double
;	O
tmp_w	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
height	double
*	O
Dx	double
/	O
Dy	double
*	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
aspectfactor	double
;	O
tmp_h	double
=	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
width	array(float)
*	O
Dy	double
/	O
Dx	double
/	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
aspectfactor	double
;	O
if	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
truesize	int
)	O
{	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
=	O
Dx	double
/	O
40.0	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
=	O
Dy	double
/	O
40.0	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
=	O
(	O
float	O
)	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
dpi_x	int
/	O
1016.0	int
)	O
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_ydots	double
=	O
(	O
float	O
)	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
dpi_y	int
/	O
1016.0	int
)	O
;	O
dir_str	*(char)
=	O
"true sizes"	*(char)
;	O
if	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
center_mode	int
)	O
{	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"trying to center image\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"po->width ?<? tmp_w: %f %f\n"	*(char)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
,	O
tmp_w	double
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"po->height ?<? tmp_h: %f %f\n"	*(char)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
,	O
tmp_h	double
)	O
;	O
}	O
if	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
<	O
tmp_w	double
)	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xoff	double
+=	O
(	O
tmp_w	double
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
)	O
/	O
2.0	int
;	O
if	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
<	O
tmp_h	double
)	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
yoff	double
+=	O
(	O
tmp_h	double
-	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
)	O
/	O
2.0	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
Dy	double
>	O
Dx	double
)	O
{	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_ydots	double
=	O
(	O
float	O
)	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
dpi_y	int
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
)	O
/	O
Dy	double
/	O
25.4	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
=	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_ydots	double
*	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
aspectfactor	double
/	O
dot_ratio	double
;	O
if	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
center_mode	int
)	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xoff	double
+=	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
-	O
tmp_w	double
)	O
/	O
2.0	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
=	O
tmp_w	double
;	O
dir_str	*(char)
=	O
"width adapted"	*(char)
;	O
}	O
else	O
{	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
=	O
(	O
float	O
)	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
dpi_x	int
*	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
)	O
/	O
Dx	double
/	O
25.4	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_ydots	double
=	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
HP_to_xdots	double
*	O
dot_ratio	double
/	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
aspectfactor	double
;	O
if	O
(	O
pi	*(struct(int,int,int,int,int,int,double,double,double,double,double,double,double,double,double,double,struct(float,float),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
center_mode	int
)	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
yoff	double
+=	O
(	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
-	O
tmp_h	double
)	O
/	O
2.0	int
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
=	O
tmp_h	double
;	O
dir_str	*(char)
=	O
"height adapted"	*(char)
;	O
}	O
}	O
if	O
(	O
!	O
pg	*(struct(*(char),*(char),*(char),int,int,int,int,float,int,int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,int))
->	O
quiet	int
)	O
{	O
Eprintf	(*(char))->(void)
(	O
"\nWidth  x  height: %5.2f x %5.2f mm, %s\n"	*(char)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
width	array(float)
,	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
height	double
,	O
dir_str	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Coordinate range: (%g, %g) ... (%g, %g)\n"	*(char)
,	O
xmin	double
,	O
ymin	double
,	O
xmax	double
,	O
ymax	double
)	O
;	O
}	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmin	double
=	O
xmin	double
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
xmax	double
=	O
xmax	double
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymin	double
=	O
ymin	double
;	O
po	*(struct(char,int,int,int,int,int,int,int,int,*(char),double,double,double,double,double,double,double,double,double,double,*(struct(int,int,int,int,*(struct`),*(char),*(struct`))),double,double))
->	O
ymax	double
=	O
ymax	double
;	O
}	O
PlotCmd	enum(int,int,int,int,int,int,int,int,int)
PlotCmd_from_tmpfile	()->(enum(int,int,int,int,int,int,int,int,int))
(	O
void	O
)	O
{	O
PlotCmd	enum(int,int,int,int,int,int,int,int,int)
cmd	enum(int,int,int,int,int,int,int,int,int)
;	O
if	O
(	O
!	O
silent_mode	short
&&	O
!	O
again	int
)	O
switch	O
(	O
vec_cntr_r	long
++	O
)	O
{	O
case	O
0	int
:	O
Eprintf	(*(char))->(void)
(	O
"\nProcessing Cmd: "	*(char)
)	O
;	O
break	O
;	O
case	O
1	int
:	O
Eprintf	(*(char))->(void)
(	O
"1 "	*(char)
)	O
;	O
break	O
;	O
case	O
2	int
:	O
Eprintf	(*(char))->(void)
(	O
"2 "	*(char)
)	O
;	O
break	O
;	O
case	O
5	int
:	O
Eprintf	(*(char))->(void)
(	O
"5 "	*(char)
)	O
;	O
break	O
;	O
case	O
10	int
:	O
Eprintf	(*(char))->(void)
(	O
"10 "	*(char)
)	O
;	O
break	O
;	O
case	O
20	int
:	O
Eprintf	(*(char))->(void)
(	O
"20 "	*(char)
)	O
;	O
break	O
;	O
case	O
50	int
:	O
Eprintf	(*(char))->(void)
(	O
"50 "	*(char)
)	O
;	O
break	O
;	O
case	O
100	int
:	O
Eprintf	(*(char))->(void)
(	O
"100 "	*(char)
)	O
;	O
break	O
;	O
case	O
200	int
:	O
Eprintf	(*(char))->(void)
(	O
"200 "	*(char)
)	O
;	O
break	O
;	O
case	O
500	int
:	O
Eprintf	(*(char))->(void)
(	O
"500 "	*(char)
)	O
;	O
break	O
;	O
case	O
1000	int
:	O
Eprintf	(*(char))->(void)
(	O
"1k "	*(char)
)	O
;	O
break	O
;	O
case	O
2000	int
:	O
Eprintf	(*(char))->(void)
(	O
"2k "	*(char)
)	O
;	O
break	O
;	O
case	O
5000	int
:	O
Eprintf	(*(char))->(void)
(	O
"5k "	*(char)
)	O
;	O
break	O
;	O
case	O
10000	int
:	O
Eprintf	(*(char))->(void)
(	O
"10k "	*(char)
)	O
;	O
break	O
;	O
case	O
20000	int
:	O
Eprintf	(*(char))->(void)
(	O
"20k "	*(char)
)	O
;	O
break	O
;	O
case	O
50000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"50k "	*(char)
)	O
;	O
break	O
;	O
case	O
100000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"100k "	*(char)
)	O
;	O
break	O
;	O
case	O
200000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"200k "	*(char)
)	O
;	O
break	O
;	O
case	O
500000L	int
:	O
Eprintf	(*(char))->(void)
(	O
"500k "	*(char)
)	O
;	O
break	O
;	O
}	O
switch	O
(	O
cmd	enum(int,int,int,int,int,int,int,int,int)
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
case	O
NOP	int
:	O
case	O
MOVE_TO	int
:	O
case	O
DRAW_TO	int
:	O
case	O
PLOT_AT	int
:	O
case	O
SET_PEN	int
:	O
case	O
DEF_PW	int
:	O
case	O
DEF_PC	int
:	O
case	O
DEF_LA	int
:	O
return	O
cmd	enum(int,int,int,int,int,int,int,int,int)
;	O
case	O
(	O
unsigned	O
int	O
)	O
EOF	O
:	O
default	O
:	O
return	O
CMD_EOF	int
;	O
}	O
}	O
void	O
HPGL_Pt_from_tmpfile	(*(struct(float,float)))->(void)
(	O
HPGL_Pt	struct(float,float)
*	O
pf	*(struct(float,float))
)	O
{	O
if	O
(	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
(	O
VOID	void
*	O
)	O
pf	*(struct(float,float))
,	O
sizeof	O
(	O
*	O
pf	*(struct(float,float))
)	O
,	O
1	int
,	O
td	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
!=	O
1	int
)	O
{	O
PError	(*(char))->(void)
(	O
"HPGL_Pt_from_tmpfile"	*(char)
)	O
;	O
Eprintf	(*(char))->(void)
(	O
"Error @ Cmd %ld\n"	*(char)
,	O
vec_cntr_r	long
)	O
;	O
exit	(int)->(void)
(	O
ERROR	O
)	O
;	O
}	O
if	O
(	O
pf	*(struct(float,float))
->	O
x	int
<	O
xmin	double
||	O
pf	*(struct(float,float))
->	O
x	int
>	O
xmax	double
)	O
Eprintf	(*(char))->(void)
(	O
"HPGL_Pt_from_tmpfile: x out of range (%g not in [%g, %g])\n"	*(char)
,	O
pf	*(struct(float,float))
->	O
x	int
,	O
xmin	double
,	O
xmax	double
)	O
;	O
if	O
(	O
pf	*(struct(float,float))
->	O
y	int
<	O
ymin	double
||	O
pf	*(struct(float,float))
->	O
y	int
>	O
ymax	double
)	O
Eprintf	(*(char))->(void)
(	O
"HPGL_Pt_from_tmpfile: y out of range (%g not in [%g, %g])\n"	*(char)
,	O
pf	*(struct(float,float))
->	O
y	int
,	O
ymin	double
,	O
ymax	double
)	O
;	O
}	O
