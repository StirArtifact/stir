typedef	O
struct	O
{	O
EUint32	long
head	long
;	O
EUint32	long
tail	long
;	O
}	O
DtQUEUE	struct(long,long)
;	O
ESint32	int
EDMAPROC	O
QUEUEaddPrS32	(int,*(void))->(int)
(	O
OBJID	int
IdObj	int
,	O
EPVoid	*(void)
data	*(void)
)	O
{	O
DtQUEUE	struct(long,long)
*	O
m	*(struct(long,long))
;	O
m	*(struct(long,long))
=	O
(	O
DtQUEUE	struct(long,long)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"SUPER>add"	*(char)
,	O
data	*(void)
)	O
;	O
m	*(struct(long,long))
->	O
tail	long
=	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"get_n_items"	*(char)
)	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
EPVoid	*(void)
EDMAPROC	O
QUEUEgetrP	(int)->(*(void))
(	O
OBJID	int
IdObj	int
)	O
{	O
DtQUEUE	struct(long,long)
*	O
m	*(struct(long,long))
;	O
EPVoid	*(void)
data	*(void)
;	O
m	*(struct(long,long))
=	O
(	O
DtQUEUE	struct(long,long)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
if	O
(	O
m	*(struct(long,long))
->	O
tail	long
==	O
-	O
1	int
)	O
{	O
return	O
NULL	O
;	O
}	O
data	*(void)
=	O
(	O
EPVoid	*(void)
)	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"SUPER>get"	*(char)
,	O
0	int
)	O
;	O
if	O
(	O
data	*(void)
!=	O
NULL	O
)	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"del"	*(char)
,	O
0	int
)	O
;	O
m	*(struct(long,long))
->	O
tail	long
=	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"get_n_items"	*(char)
)	O
-	O
1	int
;	O
return	O
data	*(void)
;	O
}	O
EPVoid	*(void)
EDMAPROC	O
QUEUEpeekrP	(int)->(*(void))
(	O
OBJID	int
IdObj	int
)	O
{	O
DtQUEUE	struct(long,long)
*	O
m	*(struct(long,long))
;	O
EPVoid	*(void)
data	*(void)
;	O
m	*(struct(long,long))
=	O
(	O
DtQUEUE	struct(long,long)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
if	O
(	O
m	*(struct(long,long))
->	O
tail	long
==	O
-	O
1	int
)	O
{	O
return	O
NULL	O
;	O
}	O
data	*(void)
=	O
(	O
EPVoid	*(void)
)	O
edma_met3	(int,*(char))->(int)
(	O
IdObj	int
,	O
"SUPER>get"	*(char)
,	O
0	int
)	O
;	O
return	O
data	*(void)
;	O
}	O
ESint32	int
EDMAPROC	O
QUEUEborn	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtQUEUE	struct(long,long)
*	O
m	*(struct(long,long))
;	O
m	*(struct(long,long))
=	O
(	O
DtQUEUE	struct(long,long)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
m	*(struct(long,long))
->	O
head	long
=	O
m	*(struct(long,long))
->	O
tail	long
=	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
QUEUErip	(int)->(int)
(	O
OBJID	int
IdObj	int
)	O
{	O
DtQUEUE	struct(long,long)
*	O
m	*(struct(long,long))
;	O
m	*(struct(long,long))
=	O
(	O
DtQUEUE	struct(long,long)
*	O
)	O
edma_get_data_ref	(int)->(*(void))
(	O
IdObj	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
QUEUE_class_factory	()->(int)
(	O
)	O
{	O
CLASSID	int
cid	int
;	O
cid	int
=	O
edma_idf_get_free_class_id	(int)->(int)
(	O
EDMA_LOCAL_CLASS	int
)	O
;	O
edma_idf_set_class_name	(int,*(char))->(int)
(	O
cid	int
,	O
"QUEUE"	*(char)
)	O
;	O
edma_idf_set_class_namespace	(int,*(char))->(int)
(	O
cid	int
,	O
"system/data_structs"	*(char)
)	O
;	O
edma_idf_set_class_version	(int,int,int)->(int)
(	O
cid	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	(int,*(char),long,int,long)->(int)
(	O
cid	int
,	O
"head"	*(char)
,	O
DT_EUINT32	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	(int,*(char),long,int,long)->(int)
(	O
cid	int
,	O
"tail"	*(char)
,	O
DT_EUINT32	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"add"	*(char)
,	O
"PrS32"	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
QUEUEaddPrS32	(int,*(void))->(int)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"get"	*(char)
,	O
"rP"	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
QUEUEgetrP	(int)->(*(void))
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"peek"	*(char)
,	O
"rP"	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
QUEUEpeekrP	(int)->(*(void))
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"born"	*(char)
,	O
""	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
QUEUEborn	(int)->(int)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	(int,*(char),*(char),*(()->(void)),int,int,int)->(int)
(	O
cid	int
,	O
"rip"	*(char)
,	O
""	*(char)
,	O
(	O
PPROC	*(()->(void))
)	O
QUEUErip	(int)->(int)
,	O
0	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_idf_set_class_id	(int)->(int)
(	O
cid	int
)	O
;	O
return	O
0	int
;	O
}	O
