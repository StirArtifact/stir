int	O
scsi_max_length	()->(int)
(	O
void	O
)	O
{	O
return	O
8	int
;	O
}	O
int	O
scsi_open	(*(char),int,int,*(*(void)))->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
flag	*(int)
UNUSEDP	O
,	O
int	O
mode	int
UNUSEDP	O
,	O
void	O
*	O
*	O
extra_data	*(void)
UNUSEDP	O
)	O
{	O
return	O
open	(*(char),int)->(int)
(	O
name	*(char)
,	O
O_RDONLY	int
|	O
O_LARGEFILE	O
|	O
O_BINARY	int
|	O
O_NDELAY	O
)	O
;	O
}	O
int	O
scsi_cmd	(int,array(char),int,enum(int,int),*(void),long,*(void))->(int)
(	O
int	O
fd	int
,	O
unsigned	O
char	O
*	O
cdb	array(char)
,	O
int	O
cmdlen	int
,	O
scsi_io_mode_t	enum(int,int)
mode	int
,	O
void	O
*	O
data	*(char)
,	O
size_t	long
len	long
,	O
void	O
*	O
extra_data	*(void)
UNUSEDP	O
)	O
{	O
struct	O
sg_io_hdr	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
,	O
0	int
,	O
sizeof	O
(	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
)	O
)	O
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
interface_id	int
=	O
'S'	O
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
dxfer_direction	int
=	O
(	O
mode	int
==	O
SCSI_IO_READ	int
)	O
?	O
(	O
SG_DXFER_FROM_DEV	O
)	O
:	O
(	O
SG_DXFER_TO_DEV	O
)	O
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
cmd_len	char
=	O
cmdlen	int
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
mx_sb_len	char
=	O
0	int
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
dxfer_len	int
=	O
len	long
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
dxferp	*(void)
=	O
data	*(char)
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
cmdp	*(char)
=	O
cdb	array(char)
;	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
timeout	int
=	O
~	O
0	int
;	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
fd	int
,	O
SG_IO	int
,	O
&	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
)	O
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"scsi_io"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
my_scsi_cmd	struct(int,int,char,char,short,int,*(void),*(char),*(char),int,int,int,*(void),char,char,char,char,short,short,int,int,int)
.	O
status	int
&	O
STATUS_MASK	int
;	O
}	O
