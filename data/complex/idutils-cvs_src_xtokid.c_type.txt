void	O
scan_files	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
;	O
void	O
scan_member_file	(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))->(void)
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))),long)
const	O
*	O
member	*(struct(*(struct(union(*`,long),char,array(char))),*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))),long))
)	O
;	O
void	O
usage	()->(void)
(	O
void	O
)	O
;	O
char	O
const	O
*	O
program_name	*(char)
;	O
char	O
*	O
lang_map_file_name	*(char)
=	O
0	int
;	O
int	O
show_version	int
=	O
0	int
;	O
int	O
show_help	int
=	O
0	int
;	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
;	O
void	O
usage	()->(void)
(	O
void	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Try `%s --help' for more information.\n"	*(char)
)	O
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
const	O
long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"include"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'i'	O
}	O
,	O
{	O
"exclude"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'x'	O
}	O
,	O
{	O
"lang-option"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'l'	O
}	O
,	O
{	O
"lang-map"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'm'	O
}	O
,	O
{	O
"default-lang"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'd'	O
}	O
,	O
{	O
"prune"	*(char)
,	O
required_argument	int
,	O
0	int
,	O
'p'	O
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
&	O
show_help	int
,	O
1	int
}	O
,	O
{	O
"version"	*(char)
,	O
no_argument	int
,	O
&	O
show_version	int
,	O
1	int
}	O
,	O
{	O
0	int
}	O
}	O
;	O
static	O
void	O
help_me	()->(void)
(	O
void	O
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Usage: %s [OPTION]... [FILE]...\n"	*(char)
)	O
,	O
program_name	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Print all tokens found in a source file.\n  -i, --include=LANGS     include languages in LANGS (default: \"C C++ asm\")\n  -x, --exclude=LANGS     exclude languages in LANGS\n  -l, --lang-option=L:OPT pass OPT as a default for language L (see below)\n  -m, --lang-map=MAPFILE  use MAPFILE to map file names onto source language\n  -d, --default-lang=LANG make LANG the default source language\n  -p, --prune=NAMES       exclude the named files and/or directories\n      --help              display this help and exit\n      --version           output version information and exit\n\nThe following arguments apply to the language-specific scanners:\n"	*(char)
)	O
)	O
;	O
language_help_me	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"\nReport bugs to "	*(char)
PACKAGE_BUGREPORT	*(char)
"\n\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
program_name	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
setlocale	(int,*(char))->(*(char))
(	O
LC_ALL	O
,	O
""	*(char)
)	O
;	O
bindtextdomain	(*(char),*(char))->(*(char))
(	O
PACKAGE	*(char)
,	O
LOCALEDIR	O
)	O
;	O
textdomain	(*(char))->(*(char))
(	O
PACKAGE	*(char)
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
optc	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	*(*(char))
,	O
"i:x:l:m:d:p:"	*(char)
,	O
long_options	array(struct(*(char),int,*(int),int))
,	O
(	O
int	O
*	O
)	O
0	int
)	O
;	O
if	O
(	O
optc	int
<	O
0	int
)	O
break	O
;	O
switch	O
(	O
optc	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
'i'	O
:	O
include_languages	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'x'	O
:	O
exclude_languages	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'l'	O
:	O
language_save_arg	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'm'	O
:	O
lang_map_file_name	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'd'	O
:	O
set_default_language	(*(char))->(void)
(	O
optarg	*(char)
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
if	O
(	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
==	O
0	int
)	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
init_walker	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(*(struct(union(*(struct`),long),char,array(char))))
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
prune_file_names	(*(char),*(struct(union(*(struct`),long),char,array(char))))->(void)
(	O
optarg	*(char)
,	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
)	O
;	O
break	O
;	O
default	O
:	O
usage	()->(void)
(	O
)	O
;	O
}	O
}	O
if	O
(	O
show_version	int
)	O
{	O
printf	(*(char))->(int)
(	O
"%s - %s\n"	*(char)
,	O
program_name	*(char)
,	O
PACKAGE_VERSION	*(char)
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
if	O
(	O
show_help	int
)	O
help_me	()->(void)
(	O
)	O
;	O
argc	int
-=	O
optind	int
;	O
argv	*(*(char))
+=	O
optind	int
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
{	O
static	O
char	O
dot	array(char)
[	O
]	O
=	O
"."	*(char)
;	O
static	O
char	O
*	O
dotp	*(char)
=	O
dot	array(char)
;	O
argc	int
=	O
1	int
;	O
argv	*(*(char))
=	O
&	O
dotp	*(char)
;	O
}	O
language_getopt	()->(void)
(	O
)	O
;	O
if	O
(	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
==	O
0	int
)	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
init_walker	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(*(struct(union(*(struct`),long),char,array(char))))
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
parse_language_map	(*(char))->(void)
(	O
lang_map_file_name	*(char)
)	O
;	O
while	O
(	O
argc	int
--	O
)	O
{	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
parse_file_name	(*(char),*(struct(union(*(struct`),long),char,array(char))))->(*(struct(union(*(struct`),long),char,array(char))))
(	O
*	O
argv	*(*(char))
++	O
,	O
cw_dlink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
)	O
;	O
if	O
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
)	O
walk_flink	(*(struct(union(*(struct`),long),char,array(char))),*(struct(*(*(void)),int,int)))->(void)
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
,	O
0	int
)	O
;	O
}	O
mark_member_file_links	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
obstack_init	O
(	O
&	O
tokens_obstack	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
)	O
;	O
scan_files	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
&	O
idh	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct`),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct`))),*((*(void),*(struct`))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
return	O
0	int
;	O
}	O
void	O
scan_files	(*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*`),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct`),*(char),*(char),*(char),union(long,*`),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))))->(void)
(	O
struct	O
idhead	struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int))),struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))))
*	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
)	O
{	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))),long)
*	O
*	O
members_0	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
=	O
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))),long)
*	O
*	O
)	O
hash_dump	(*(struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int)))),*(*(void)),*((*(void),*(void))->(int)))->(*(*(void)))
(	O
&	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
,	O
0	int
,	O
member_file_qsort_compare	(*(void),*(void))->(int)
)	O
;	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))),long)
*	O
*	O
end	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
=	O
&	O
members_0	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
[	O
idhp	*(struct(array(char),char,short,long,long,long,long,long,long,long,long,short,short,*(char),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),struct(*(*(void)),long,long,long,long,long,long,int,*((*`)->(long)),*((*`)->(long)),*((*`,*`)->(int))),struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
->	O
idh_member_file_table	struct(*(*(void)),long,long,long,long,long,long,int,*((*(void))->(long)),*((*(void))->(long)),*((*(void),*(void))->(int)))
.	O
ht_fill	long
]	O
;	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))),long)
*	O
*	O
members	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
;	O
if	O
(	O
largest_member_file	long
>	O
MAX_LARGEST_MEMBER_FILE	O
)	O
largest_member_file	long
=	O
MAX_LARGEST_MEMBER_FILE	O
;	O
scanner_buffer	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
largest_member_file	long
+	O
1	int
)	O
;	O
for	O
(	O
members	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
=	O
members_0	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
;	O
members	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
<	O
end	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
;	O
members	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
++	O
)	O
scan_member_file	(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))->(void)
(	O
*	O
members	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
)	O
;	O
free	(*(void))->(void)
(	O
scanner_buffer	*(char)
)	O
;	O
free	(*(void))->(void)
(	O
members_0	*(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))
)	O
;	O
}	O
void	O
scan_member_file	(*(struct(*(struct(union`,char,array(char))),*(struct(*`,*`,*`,*`,int,*`)),long)))->(void)
(	O
struct	O
member_file	struct(*(struct(union(*(struct(union`,char,array(char))),long),char,array(char))),*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))),long)
const	O
*	O
member	*(struct(*(struct(union(*`,long),char,array(char))),*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))),long))
)	O
{	O
struct	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
const	O
*	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
=	O
member	*(struct(*(struct(union(*`,long),char,array(char))),*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))),long))
->	O
mf_lang_args	*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`)))))
;	O
struct	O
language	struct(*(char),*((*(*(char)),int)->(*(void))),*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char))))),*(()->(void)),int,array(*(char)))
const	O
*	O
lang	*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char))))
=	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
->	O
la_language	*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char))))
;	O
get_token_func_t	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
get_token	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
=	O
lang	*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char))))
->	O
lg_get_token	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
;	O
struct	O
file_link	struct(union(*(struct(union(*(struct`),long),char,array(char))),long),char,array(char))
*	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
=	O
member	*(struct(*(struct(union(*`,long),char,array(char))),*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))),long))
->	O
mf_link	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
;	O
FILE	struct
*	O
source_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
chdir_to_link	(*(struct(union(*(struct`),long),char,array(char))))->(int)
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
->	O
fl_parent	O
)	O
;	O
source_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
->	O
fl_name	array(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
source_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
void	O
const	O
*	O
args	*(void)
=	O
lang_args	struct(*(struct(*(char),*((*(*`),int)->(*(void))),*((*(struct`),*(void),*(int))->(*(struct`))),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct(*(char),*((*`,int)->(*`)),*((*`,*`,*`)->(*`)),*(()->(void)),int,array(*(char)))),*(char),*(char),*(void),int,*(struct(*(struct`),*(char),*(char),*(void),int,*(struct`))))))
->	O
la_args_digested	*(void)
;	O
int	O
flags	*(int)
;	O
struct	O
token	struct(short,char,array(char))
*	O
token	struct(short,char,array(char))
;	O
while	O
(	O
(	O
token	struct(short,char,array(char))
=	O
(	O
*	O
get_token	*((*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),*(int))->(*(struct(short,char,array(char)))))
)	O
(	O
source_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
args	*(void)
,	O
&	O
flags	*(int)
)	O
)	O
!=	O
NULL	O
)	O
{	O
puts	(*(char))->(int)
(	O
TOKEN_NAME	O
(	O
token	struct(short,char,array(char))
)	O
)	O
;	O
obstack_free	(*(struct(long,*(struct(*`,*`,array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*`,long)->(*`)),*((*`,*`)->(void)),*(void),int,int,int)),*(void))->(void)
(	O
&	O
tokens_obstack	struct(long,*(struct(*(char),*(struct(*`,*`,array(char))),array(char))),*(char),*(char),*(char),union(long,*(void)),int,*((*(void),long)->(*(struct(*`,*`,array(char))))),*((*(void),*(struct(*`,*`,array(char))))->(void)),*(void),int,int,int)
,	O
token	struct(short,char,array(char))
)	O
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
source_FILE	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
error	(int,int,*(char))->(void)
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"can't open `%s'"	*(char)
)	O
,	O
flink	*(struct(union(*(struct(union`,char,array(char))),long),char,array(char)))
->	O
fl_name	array(char)
)	O
;	O
}	O
