struct	O
{	O
char	O
*	O
name	*(char)
;	O
int	O
type	int
;	O
}	O
encode_tab	array(struct(*(char),int))
[	O
]	O
=	O
{	O
{	O
"ean"	*(char)
,	O
BARCODE_EAN	int
}	O
,	O
{	O
"ean13"	*(char)
,	O
BARCODE_EAN	int
}	O
,	O
{	O
"ean-13"	*(char)
,	O
BARCODE_EAN	int
}	O
,	O
{	O
"ean8"	*(char)
,	O
BARCODE_EAN	int
}	O
,	O
{	O
"ean-8"	*(char)
,	O
BARCODE_EAN	int
}	O
,	O
{	O
"upc"	*(char)
,	O
BARCODE_UPC	int
}	O
,	O
{	O
"upc-a"	*(char)
,	O
BARCODE_UPC	int
}	O
,	O
{	O
"upc-e"	*(char)
,	O
BARCODE_UPC	int
}	O
,	O
{	O
"isbn"	*(char)
,	O
BARCODE_ISBN	int
}	O
,	O
{	O
"39"	*(char)
,	O
BARCODE_39	int
}	O
,	O
{	O
"code39"	*(char)
,	O
BARCODE_39	int
}	O
,	O
{	O
"39ext"	*(char)
,	O
BARCODE_39EXT	int
}	O
,	O
{	O
"code39ext"	*(char)
,	O
BARCODE_39EXT	int
}	O
,	O
{	O
"128c"	*(char)
,	O
BARCODE_128C	int
}	O
,	O
{	O
"code128c"	*(char)
,	O
BARCODE_128C	int
}	O
,	O
{	O
"128b"	*(char)
,	O
BARCODE_128B	int
}	O
,	O
{	O
"code128b"	*(char)
,	O
BARCODE_128B	int
}	O
,	O
{	O
"128"	*(char)
,	O
BARCODE_128	int
}	O
,	O
{	O
"code128"	*(char)
,	O
BARCODE_128	int
}	O
,	O
{	O
"128raw"	*(char)
,	O
BARCODE_128RAW	int
}	O
,	O
{	O
"i25"	*(char)
,	O
BARCODE_I25	int
}	O
,	O
{	O
"interleaved 2 of 5"	*(char)
,	O
BARCODE_I25	int
}	O
,	O
{	O
"cbr"	*(char)
,	O
BARCODE_CBR	int
}	O
,	O
{	O
"codabar"	*(char)
,	O
BARCODE_CBR	int
}	O
,	O
{	O
"msi"	*(char)
,	O
BARCODE_MSI	int
}	O
,	O
{	O
"pls"	*(char)
,	O
BARCODE_PLS	int
}	O
,	O
{	O
"plessey"	*(char)
,	O
BARCODE_PLS	int
}	O
,	O
{	O
"code93"	*(char)
,	O
BARCODE_93	int
}	O
,	O
{	O
"93"	*(char)
,	O
BARCODE_93	int
}	O
,	O
{	O
"code11"	*(char)
,	O
BARCODE_11	int
}	O
,	O
{	O
"11"	*(char)
,	O
BARCODE_11	int
}	O
,	O
{	O
NULL	O
,	O
0	int
}	O
}	O
;	O
int	O
encode_id	(*(char))->(int)
(	O
char	O
*	O
encode_name	*(char)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
name	*(char)
;	O
i	int
++	O
)	O
if	O
(	O
!	O
strcasecmp	(*(char),*(char))->(int)
(	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
name	*(char)
,	O
encode_name	*(char)
)	O
)	O
return	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
type	int
;	O
return	O
-	O
1	int
;	O
}	O
int	O
list_encodes	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
int	O
prev	int
=	O
-	O
1	int
;	O
int	O
i	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Known encodings are (synonyms appear on the same line):"	*(char)
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
name	*(char)
;	O
i	int
++	O
)	O
{	O
if	O
(	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
type	int
!=	O
prev	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n\t"	*(char)
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
", "	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\"%s\""	*(char)
,	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
name	*(char)
)	O
;	O
prev	int
=	O
encode_tab	array(struct(*(char),int))
[	O
i	int
]	O
.	O
type	int
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
char	O
*	O
ifilename	*(char)
,	O
*	O
ofilename	*(char)
;	O
int	O
encoding_type	int
;	O
int	O
code_width	int
,	O
code_height	int
;	O
int	O
lines	int
,	O
columns	int
;	O
int	O
xmargin0	int
,	O
ymargin0	int
;	O
int	O
xmargin1	int
,	O
ymargin1	int
;	O
int	O
ximargin	int
,	O
yimargin	int
;	O
int	O
eps	int
,	O
svg	int
,	O
pcl	int
,	O
ps	int
,	O
noascii	int
,	O
nochecksum	int
;	O
int	O
page_wid	int
,	O
page_hei	int
;	O
char	O
*	O
page_name	*(char)
;	O
double	O
unit	double
=	O
1.0	int
;	O
char	O
*	O
prgname	*(char)
;	O
struct	O
encode_item	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`))))))
{	O
char	O
*	O
string	*(char)
;	O
struct	O
encode_item	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`))))))
*	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
}	O
*	O
list_head	*(struct(*(char),*(struct(*(char),*(struct`)))))
,	O
*	O
list_tail	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
int	O
get_input_string	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
struct	O
encode_item	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`))))))
*	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
)	O
;	O
if	O
(	O
!	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: malloc: %s\n"	*(char)
,	O
prgname	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
return	O
-	O
2	int
;	O
}	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
string	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
arg	*(void)
)	O
;	O
if	O
(	O
!	O
list_head	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
list_head	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
list_tail	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
}	O
else	O
{	O
list_tail	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
list_tail	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
}	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
char	O
*	O
retrieve_input_string	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
FILE	struct
*	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
*	O
string	*(char)
;	O
static	O
char	O
fileline	array(char)
[	O
128	int
]	O
;	O
struct	O
encode_item	struct(*(char),*(struct(*(char),*(struct(*(char),*(struct`))))))
*	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
list_head	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
if	O
(	O
list_tail	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
{	O
if	O
(	O
!	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
return	O
NULL	O
;	O
string	*(char)
=	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
string	*(char)
;	O
list_head	*(struct(*(char),*(struct(*(char),*(struct`)))))
=	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
->	O
next	*(struct(*(char),*(struct(*(char),*(struct`)))))
;	O
free	(*(void))->(void)
(	O
item	*(struct(*(char),*(struct(*(char),*(struct`)))))
)	O
;	O
return	O
string	*(char)
;	O
}	O
if	O
(	O
!	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
fileline	array(char)
,	O
128	int
,	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
fileline	array(char)
[	O
strlen	(*(char))->(long)
(	O
fileline	array(char)
)	O
-	O
1	int
]	O
==	O
'\n'	O
)	O
fileline	array(char)
[	O
strlen	(*(char))->(long)
(	O
fileline	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
fileline	array(char)
[	O
strlen	(*(char))->(long)
(	O
fileline	array(char)
)	O
-	O
1	int
]	O
==	O
'\r'	O
)	O
fileline	array(char)
[	O
strlen	(*(char))->(long)
(	O
fileline	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
return	O
strdup	(*(char))->(*(char))
(	O
fileline	array(char)
)	O
;	O
}	O
int	O
get_unit	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
static	O
struct	O
{	O
char	O
*	O
str	*(char)
;	O
double	O
unit	double
;	O
}	O
*	O
ptr	*(struct(*(char),double))
,	O
unittab	array(struct(*(char),double))
[	O
]	O
=	O
{	O
{	O
"pt"	*(char)
,	O
1.0	int
}	O
,	O
{	O
"in"	*(char)
,	O
72.0	int
}	O
,	O
{	O
"cm"	*(char)
,	O
72.0	int
/	O
2.54	int
}	O
,	O
{	O
"mm"	*(char)
,	O
72.0	int
/	O
25.4	int
}	O
,	O
{	O
NULL	O
,	O
0.0	int
}	O
}	O
;	O
for	O
(	O
ptr	*(struct(*(char),double))
=	O
unittab	array(struct(*(char),double))
;	O
ptr	*(struct(*(char),double))
->	O
str	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
ptr	*(struct(*(char),double))
->	O
str	*(char)
)	O
;	O
ptr	*(struct(*(char),double))
++	O
)	O
;	O
unit	double
=	O
ptr	*(struct(*(char),double))
->	O
unit	double
;	O
if	O
(	O
ptr	*(struct(*(char),double))
->	O
str	*(char)
)	O
return	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: incorrect unit \"%s\" (use one of"	*(char)
,	O
prgname	*(char)
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
for	O
(	O
ptr	*(struct(*(char),double))
=	O
unittab	array(struct(*(char),double))
;	O
ptr	*(struct(*(char),double))
->	O
str	*(char)
;	O
ptr	*(struct(*(char),double))
++	O
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
" \"%s\""	*(char)
,	O
ptr	*(struct(*(char),double))
->	O
str	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
")\n"	*(char)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
int	O
get_encoding	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
encoding_type	int
=	O
encode_id	(*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
if	O
(	O
encoding_type	int
>=	O
0	int
)	O
return	O
0	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: wrong encoding \"%s\"\n"	*(char)
,	O
prgname	*(char)
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
int	O
get_geometry	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
double	O
w	double
=	O
0.0	int
,	O
h	double
=	O
0.0	int
;	O
double	O
x	double
=	O
0.0	int
,	O
y	double
=	O
0.0	int
;	O
int	O
n	long
;	O
if	O
(	O
(	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
[	O
0	int
]	O
==	O
'+'	O
||	O
(	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lf%lf%s"	*(char)
,	O
&	O
x	double
,	O
&	O
y	double
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
}	O
else	O
{	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lfx%lf%lf%lf%s"	*(char)
,	O
&	O
w	double
,	O
&	O
h	double
,	O
&	O
x	double
,	O
&	O
y	double
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
}	O
if	O
(	O
n	long
!=	O
4	int
&&	O
n	long
!=	O
2	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: wrong geometry \"%s\"\n"	*(char)
)	O
,	O
prgname	*(char)
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
code_width	int
=	O
w	double
*	O
unit	double
;	O
code_height	int
=	O
h	double
*	O
unit	double
;	O
xmargin0	int
=	O
x	double
*	O
unit	double
;	O
ymargin0	int
=	O
y	double
*	O
unit	double
;	O
return	O
0	int
;	O
}	O
int	O
get_table	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
double	O
x0	double
=	O
0.0	int
,	O
y0	double
=	O
0.0	int
,	O
x1	double
=	O
0.0	int
,	O
y1	double
=	O
0.0	int
;	O
int	O
n	long
;	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%dx%d+%lf+%lf-%lf-%lf"	*(char)
,	O
&	O
columns	int
,	O
&	O
lines	int
,	O
&	O
x0	double
,	O
&	O
y0	double
,	O
&	O
x1	double
,	O
&	O
y1	double
)	O
;	O
if	O
(	O
n	long
==	O
1	int
||	O
n	long
==	O
3	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: wrong table specification \"%s\"\n"	*(char)
)	O
,	O
prgname	*(char)
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
if	O
(	O
n	long
<	O
6	int
)	O
y1	double
=	O
y0	double
;	O
if	O
(	O
n	long
<	O
5	int
)	O
x1	double
=	O
x0	double
;	O
xmargin0	int
=	O
x0	double
*	O
unit	double
;	O
ymargin0	int
=	O
y0	double
*	O
unit	double
;	O
xmargin1	int
=	O
x1	double
*	O
unit	double
;	O
ymargin1	int
=	O
y1	double
*	O
unit	double
;	O
return	O
0	int
;	O
}	O
int	O
get_margin	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
char	O
separator	char
;	O
double	O
x	double
,	O
y	double
;	O
int	O
n	long
;	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lf%c%lf"	*(char)
,	O
&	O
x	double
,	O
&	O
separator	char
,	O
&	O
y	double
)	O
;	O
if	O
(	O
n	long
==	O
1	int
)	O
{	O
n	long
=	O
3	int
;	O
y	double
=	O
x	double
;	O
}	O
if	O
(	O
n	long
==	O
3	int
)	O
{	O
ximargin	int
=	O
x	double
*	O
unit	double
;	O
yimargin	int
=	O
y	double
*	O
unit	double
;	O
return	O
0	int
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: wrong margin specification \"%s\"\n"	*(char)
)	O
,	O
prgname	*(char)
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
return	O
-	O
2	int
;	O
return	O
0	int
;	O
}	O
int	O
get_page_geometry	(*(void))->(int)
(	O
void	O
*	O
arg	*(void)
)	O
{	O
int	O
n	long
;	O
double	O
dpw	double
,	O
dph	double
;	O
static	O
char	O
tmpstr	array(char)
[	O
20	int
]	O
;	O
page_name	*(char)
=	O
arg	*(void)
;	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lfmmx%lf"	*(char)
,	O
&	O
dpw	double
,	O
&	O
dph	double
)	O
;	O
if	O
(	O
n	long
!=	O
2	int
&&	O
strlen	(*(char))->(long)
(	O
arg	*(void)
)	O
<	O
20	int
)	O
{	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lfx%lf%s"	*(char)
,	O
&	O
dpw	double
,	O
&	O
dph	double
,	O
tmpstr	array(char)
)	O
;	O
if	O
(	O
n	long
==	O
3	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tmpstr	array(char)
,	O
"mm"	*(char)
)	O
)	O
{	O
page_wid	int
=	O
(	O
int	O
)	O
(	O
dpw	double
/	O
25.4	int
*	O
72.0	int
+	O
0.5	int
)	O
;	O
page_hei	int
=	O
(	O
int	O
)	O
(	O
dph	double
/	O
25.4	int
*	O
72.0	int
+	O
0.5	int
)	O
;	O
return	O
0	int
;	O
}	O
}	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lfinx%lf"	*(char)
,	O
&	O
dpw	double
,	O
&	O
dph	double
)	O
;	O
if	O
(	O
n	long
!=	O
2	int
&&	O
strlen	(*(char))->(long)
(	O
arg	*(void)
)	O
<	O
20	int
)	O
{	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lfx%lf%s"	*(char)
,	O
&	O
dpw	double
,	O
&	O
dph	double
,	O
tmpstr	array(char)
)	O
;	O
if	O
(	O
n	long
==	O
3	int
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tmpstr	array(char)
,	O
"in"	*(char)
)	O
)	O
{	O
page_wid	int
=	O
(	O
int	O
)	O
(	O
dpw	double
*	O
72.0	int
+	O
0.5	int
)	O
;	O
page_hei	int
=	O
(	O
int	O
)	O
(	O
dph	double
*	O
72.0	int
+	O
0.5	int
)	O
;	O
return	O
0	int
;	O
}	O
}	O
n	long
=	O
sscanf	(*(char),*(char))->(int)
(	O
(	O
char	O
*	O
)	O
arg	*(void)
,	O
"%lfx%lf"	*(char)
,	O
&	O
dpw	double
,	O
&	O
dph	double
)	O
;	O
if	O
(	O
n	long
==	O
2	int
)	O
{	O
page_wid	int
=	O
dpw	double
*	O
unit	double
;	O
page_hei	int
=	O
dph	double
*	O
unit	double
;	O
if	O
(	O
unit	double
!=	O
1.0	int
)	O
{	O
page_name	*(char)
=	O
malloc	(long)->(*(void))
(	O
32	int
)	O
;	O
if	O
(	O
page_name	*(char)
)	O
sprintf	(*(char),*(char))->(int)
(	O
page_name	*(char)
,	O
"%dx%d\n"	*(char)
,	O
page_wid	int
,	O
page_hei	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: wrong page size specification \"%s\"\n"	*(char)
)	O
,	O
prgname	*(char)
,	O
(	O
char	O
*	O
)	O
arg	*(void)
)	O
;	O
return	O
-	O
2	int
;	O
}	O
struct	O
commandline	struct(int,int,*(void),*((*(void))->(int)),*(char),*(char),*(char))
option_table	array(struct(int,int,*(void),*((*(void))->(int)),*(char),*(char),*(char)))
[	O
]	O
=	O
{	O
{	O
'i'	O
,	O
CMDLINE_S	int
,	O
&	O
ifilename	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"input file (strings to encode), default is stdin"	*(char)
)	O
}	O
,	O
{	O
'o'	O
,	O
CMDLINE_S	int
,	O
&	O
ofilename	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"output file, default is stdout"	*(char)
)	O
}	O
,	O
{	O
'b'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_input_string	(*(void))->(int)
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"string to encode (use input file if missing)"	*(char)
)	O
}	O
,	O
{	O
'e'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_encoding	(*(void))->(int)
,	O
"BARCODE_ENCODING"	*(char)
,	O
NULL	O
,	O
_N	O
(	O
"encoding type (default is best fit for first string)"	*(char)
)	O
}	O
,	O
{	O
'u'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_unit	(*(void))->(int)
,	O
"BARCODE_UNIT"	*(char)
,	O
NULL	O
,	O
_N	O
(	O
"unit (\"mm\", \"in\", ...) used to decode -g, -t, -p"	*(char)
)	O
}	O
,	O
{	O
'g'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_geometry	(*(void))->(int)
,	O
"BARCODE_GEOMETRY"	*(char)
,	O
NULL	O
,	O
_N	O
(	O
"geometry on the page: [<wid>x<hei>][+<margin>+<margin>]"	*(char)
)	O
}	O
,	O
{	O
't'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_table	(*(void))->(int)
,	O
"BARCODE_TABLE"	*(char)
,	O
NULL	O
,	O
_N	O
(	O
"table geometry: <cols>x<lines>[+<margin>+<margin>]"	*(char)
)	O
}	O
,	O
{	O
'm'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_margin	(*(void))->(int)
,	O
"BARCODE_MARGIN"	*(char)
,	O
"10"	*(char)
,	O
_N	O
(	O
"internal margin for each item in a table: <xm>[,<ym>]"	*(char)
)	O
}	O
,	O
{	O
'n'	O
,	O
CMDLINE_NONE	int
,	O
&	O
noascii	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"\"numeric\": avoid printing text along with the bars"	*(char)
)	O
}	O
,	O
{	O
'c'	O
,	O
CMDLINE_NONE	int
,	O
&	O
nochecksum	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"no Checksum character, if the chosen encoding allows it"	*(char)
)	O
}	O
,	O
{	O
'E'	O
,	O
CMDLINE_NONE	int
,	O
&	O
eps	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"print one code as eps file (default: multi-page ps)"	*(char)
)	O
}	O
,	O
{	O
'S'	O
,	O
CMDLINE_NONE	int
,	O
&	O
svg	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"print one code as svg file (default: multi-page ps)"	*(char)
)	O
}	O
,	O
{	O
'P'	O
,	O
CMDLINE_NONE	int
,	O
&	O
pcl	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"create PCL output instead of postscript"	*(char)
)	O
}	O
,	O
{	O
'p'	O
,	O
CMDLINE_S	int
,	O
NULL	O
,	O
get_page_geometry	(*(void))->(int)
,	O
NULL	O
,	O
NULL	O
,	O
_N	O
(	O
"page size (refer to the man page)"	*(char)
)	O
}	O
,	O
{	O
's'	O
,	O
CMDLINE_NONE	int
,	O
&	O
streaming	int
,	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
_N	O
(	O
"streaming mode (refer to the man page)"	*(char)
)	O
}	O
,	O
{	O
0	int
,	O
}	O
}	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
struct	O
Barcode_Item	struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)
*	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
;	O
FILE	struct
*	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
FILE	struct
*	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
char	O
*	O
line	*(char)
;	O
int	O
flags	int
=	O
0	int
;	O
int	O
page	int
,	O
retval	int
;	O
int	O
errors	int
=	O
0	int
;	O
prgname	*(char)
=	O
argv	*(*(char))
[	O
0	int
]	O
;	O
if	O
(	O
argc	int
==	O
2	int
&&	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"--help"	*(char)
)	O
||	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"-h"	*(char)
)	O
)	O
)	O
{	O
SHOW_VERSION	O
(	O
)	O
;	O
commandline_errormsg	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,int,*(void),*((*`)->(int)),*(char),*(char),*(char))),*(char),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
option_table	array(struct(int,int,*(void),*((*(void))->(int)),*(char),*(char),*(char)))
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
_	O
(	O
"Options:\n"	*(char)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
list_encodes	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
SHOW_BUG_REPORT_ADDR	O
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
if	O
(	O
argc	int
==	O
2	int
&&	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	*(*(char))
[	O
1	int
]	O
,	O
"--version"	*(char)
)	O
)	O
)	O
{	O
SHOW_VERSION	O
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"This is free software: you are free to change and redistribute it.\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"There is NO WARRANTY, to the extent permitted by law.\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
SHOW_BUG_REPORT_ADDR	O
(	O
)	O
;	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
retval	int
=	O
commandline	struct(int,int,*(void),*((*(void))->(int)),*(char),*(char),*(char))
(	O
option_table	array(struct(int,int,*(void),*((*(void))->(int)),*(char),*(char),*(char)))
,	O
argc	int
,	O
argv	*(*(char))
,	O
_	O
(	O
"Use: %s [options]\n"	*(char)
)	O
)	O
;	O
if	O
(	O
retval	int
)	O
{	O
if	O
(	O
retval	int
==	O
-	O
1	int
)	O
list_encodes	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: try \"%s --help\"\n"	*(char)
)	O
,	O
prgname	*(char)
,	O
prgname	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
!	O
page_name	*(char)
)	O
{	O
page_wid	int
=	O
595	int
;	O
page_hei	int
=	O
842	int
;	O
page_name	*(char)
=	O
"A4"	*(char)
;	O
}	O
if	O
(	O
!	O
pcl	int
&&	O
streaming	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Streaming is only implemented for PCL mode\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
streaming	int
&&	O
(	O
lines	int
||	O
columns	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"Streaming is not intended for table mode\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
ifilename	*(char)
)	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
ifilename	*(char)
,	O
"r"	*(char)
)	O
;	O
if	O
(	O
!	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: %s: %s\n"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
ifilename	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
ofilename	*(char)
)	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
ofilename	*(char)
,	O
"w"	*(char)
)	O
;	O
if	O
(	O
!	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: %s: %s\n"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
ofilename	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
encoding_type	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: Unknown encoding. Try \"%s --help\"\n"	*(char)
)	O
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
flags	int
|=	O
encoding_type	int
;	O
if	O
(	O
pcl	int
)	O
{	O
flags	int
|=	O
BARCODE_OUT_PCL	int
;	O
}	O
else	O
{	O
ps	int
=	O
!	O
(	O
eps	int
||	O
svg	int
)	O
;	O
if	O
(	O
eps	int
)	O
flags	int
|=	O
BARCODE_OUT_EPS	int
;	O
else	O
if	O
(	O
svg	int
)	O
flags	int
|=	O
BARCODE_OUT_SVG	int
;	O
else	O
flags	int
|=	O
BARCODE_OUT_PS	int
|	O
BARCODE_OUT_NOHEADERS	int
;	O
}	O
if	O
(	O
noascii	int
)	O
flags	int
|=	O
BARCODE_NO_ASCII	int
;	O
if	O
(	O
nochecksum	int
)	O
flags	int
|=	O
BARCODE_NO_CHECKSUM	int
;	O
if	O
(	O
(	O
eps	int
||	O
svg	int
)	O
&&	O
(	O
lines	int
>	O
1	int
||	O
columns	int
>	O
1	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: can't print tables in EPS format\n"	*(char)
)	O
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
if	O
(	O
ps	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%!PS-Adobe-2.0\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%Creator: \"barcode\", "	*(char)
"libbarcode sample frontend\n"	*(char)
)	O
;	O
if	O
(	O
page_name	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%DocumentPaperSizes: %s\n"	*(char)
,	O
page_name	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%EndComments\n"	*(char)
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%EndProlog\n\n"	*(char)
)	O
;	O
}	O
if	O
(	O
!	O
lines	int
&&	O
!	O
columns	int
)	O
{	O
page	int
=	O
0	int
;	O
while	O
(	O
(	O
line	*(char)
=	O
retrieve_input_string	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
page	int
++	O
;	O
if	O
(	O
ps	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%Page: %i %i\n\n"	*(char)
,	O
page	int
,	O
page	int
)	O
;	O
}	O
if	O
(	O
Barcode_Encode_and_Print	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int,int,int,int)->(int)
(	O
line	*(char)
,	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
code_width	int
,	O
code_height	int
,	O
xmargin0	int
,	O
ymargin0	int
,	O
flags	int
)	O
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: can't encode \"%s\"\n"	*(char)
)	O
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
line	*(char)
)	O
;	O
errors	int
++	O
;	O
}	O
if	O
(	O
eps	int
||	O
svg	int
)	O
break	O
;	O
if	O
(	O
ps	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"showpage\n"	*(char)
)	O
;	O
if	O
(	O
pcl	int
&&	O
!	O
streaming	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\f"	*(char)
)	O
;	O
}	O
if	O
(	O
ps	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%Trailer\n\n"	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
int	O
xstep	int
=	O
(	O
page_wid	int
-	O
xmargin0	int
-	O
xmargin1	int
)	O
/	O
columns	int
;	O
int	O
ystep	int
=	O
(	O
page_hei	int
-	O
ymargin0	int
-	O
ymargin1	int
)	O
/	O
lines	int
;	O
int	O
x	double
=	O
columns	int
,	O
y	double
=	O
-	O
1	int
;	O
if	O
(	O
!	O
ximargin	int
)	O
ximargin	int
=	O
BARCODE_DEFAULT_MARGIN	int
;	O
if	O
(	O
!	O
yimargin	int
)	O
yimargin	int
=	O
BARCODE_DEFAULT_MARGIN	int
;	O
if	O
(	O
!	O
code_width	int
&&	O
!	O
code_height	int
)	O
{	O
code_width	int
=	O
xstep	int
-	O
2	int
*	O
ximargin	int
;	O
code_height	int
=	O
ystep	int
-	O
2	int
*	O
yimargin	int
;	O
}	O
page	int
=	O
0	int
;	O
while	O
(	O
(	O
line	*(char)
=	O
retrieve_input_string	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
ifile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
{	O
x	double
++	O
;	O
if	O
(	O
x	double
>=	O
columns	int
)	O
{	O
x	double
=	O
0	int
;	O
y	double
--	O
;	O
if	O
(	O
y	double
<	O
0	int
)	O
{	O
y	double
=	O
lines	int
-	O
1	int
;	O
page	int
++	O
;	O
if	O
(	O
ps	int
&&	O
page	int
>	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"showpage\n"	*(char)
)	O
;	O
if	O
(	O
pcl	int
&&	O
page	int
>	O
1	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\f"	*(char)
)	O
;	O
if	O
(	O
ps	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%%%%Page: %i %i\n\n"	*(char)
,	O
page	int
,	O
page	int
)	O
;	O
}	O
}	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
=	O
Barcode_Create	(*(char))->(*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)))
(	O
line	*(char)
)	O
;	O
if	O
(	O
!	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: Barcode_Create(): %s\n"	*(char)
)	O
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
margin	int
=	O
0	int
;	O
if	O
(	O
(	O
Barcode_Position	(*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)),int,int,int,int,double)->(int)
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
,	O
code_width	int
,	O
code_height	int
,	O
xmargin0	int
+	O
ximargin	int
+	O
x	double
*	O
xstep	int
,	O
ymargin0	int
+	O
yimargin	int
+	O
y	double
*	O
ystep	int
,	O
0.0	int
)	O
<	O
0	int
)	O
||	O
(	O
Barcode_Encode	(*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)),int)->(int)
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
,	O
flags	int
)	O
<	O
0	int
)	O
||	O
(	O
Barcode_Print	(*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int)->(int)
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
,	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
flags	int
)	O
<	O
0	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"%s: can't encode \"%s\": %s\n"	*(char)
)	O
,	O
argv	*(*(char))
[	O
0	int
]	O
,	O
line	*(char)
,	O
strerror	(int)->(*(char))
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
->	O
error	int
)	O
)	O
;	O
}	O
Barcode_Delete	(*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int)))->(int)
(	O
bc	*(struct(int,*(char),*(char),*(char),*(char),int,int,int,int,int,double,int))
)	O
;	O
}	O
if	O
(	O
ps	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"showpage\n\n%%%%Trailer\n\n"	*(char)
)	O
;	O
if	O
(	O
pcl	int
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
ofile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\f"	*(char)
)	O
;	O
}	O
return	O
errors	int
?	O
1	int
:	O
0	int
;	O
}	O
