int	O
sigv_set_action	(int,*(int),*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void)))))->(int)
(	O
int	O
sigc	int
,	O
int	O
*	O
sigv	*(int)
,	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
*	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sigc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
sigv	*(int)
[	O
i	int
]	O
,	O
&	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
[	O
i	int
]	O
,	O
NULL	O
)	O
)	O
return	O
i	int
+	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
sigv_restore_tab	(int,*(struct(int,*((int)->(void)))),*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void)))))->(int)
(	O
int	O
sigc	int
,	O
struct	O
sigtab	struct(int,*((int)->(void)))
*	O
sigtab	struct(int,*((int)->(void)))
,	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
*	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sigc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
sigtab	struct(int,*((int)->(void)))
[	O
i	int
]	O
.	O
signo	int
,	O
&	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
[	O
i	int
]	O
,	O
NULL	O
)	O
)	O
return	O
i	int
+	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
sigv_set_all	(*((int)->(void)),int,*(int),*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void)))))->(int)
(	O
void	O
(	O
*	O
handler	struct(long,struct(int,int),*(struct),*((*(struct),*(struct(int,int)),*(char),*(char),*(void))->(int)),*((*(void))->(void)),*(void))
)	O
(	O
int	O
)	O
,	O
int	O
sigc	int
,	O
int	O
*	O
sigv	*(int)
,	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
*	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
{	O
int	O
i	int
;	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
;	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
.	O
sa_mask	struct(array(long))
)	O
;	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
.	O
sa_flags	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sigc	int
;	O
i	int
++	O
)	O
{	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
.	O
sa_handler	*((int)->(void))
=	O
handler	struct(long,struct(int,int),*(struct),*((*(struct),*(struct(int,int)),*(char),*(char),*(void))->(int)),*((*(void))->(void)),*(void))
;	O
if	O
(	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
sigv	*(int)
[	O
i	int
]	O
,	O
&	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
,	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
?	O
&	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
[	O
i	int
]	O
:	O
NULL	O
)	O
)	O
{	O
if	O
(	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
{	O
int	O
ec	int
=	O
errno	O
;	O
sigv_set_action	(int,*(int),*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void)))))->(int)
(	O
i	int
,	O
sigv	*(int)
,	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
;	O
errno	O
=	O
ec	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
sigv_set_tab	(int,*(struct(int,*((int)->(void)))),*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void)))))->(int)
(	O
int	O
sigc	int
,	O
struct	O
sigtab	struct(int,*((int)->(void)))
*	O
sigtab	struct(int,*((int)->(void)))
,	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
*	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
{	O
int	O
i	int
;	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
;	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
.	O
sa_mask	struct(array(long))
)	O
;	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
.	O
sa_flags	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sigc	int
;	O
i	int
++	O
)	O
{	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
.	O
sa_handler	*((int)->(void))
=	O
sigtab	struct(int,*((int)->(void)))
[	O
i	int
]	O
.	O
sigfun	*((int)->(void))
;	O
if	O
(	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
sigtab	struct(int,*((int)->(void)))
[	O
i	int
]	O
.	O
signo	int
,	O
&	O
sa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
,	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
?	O
&	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
[	O
i	int
]	O
:	O
NULL	O
)	O
)	O
{	O
if	O
(	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
{	O
int	O
ec	int
=	O
errno	O
;	O
sigv_restore_tab	(int,*(struct(int,*((int)->(void)))),*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void)))))->(int)
(	O
i	int
,	O
sigtab	struct(int,*((int)->(void)))
,	O
retsa	*(struct(union(*((int)->(void)),*((int,*`,*`)->(void))),struct(array(long)),int,*(()->(void))))
)	O
;	O
errno	O
=	O
ec	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
