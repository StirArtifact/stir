extern	O
char	O
*	O
program_name	*(char)
;	O
static	O
void	O
(	O
*	O
volatile	O
segv_action	*((int)->(void))
)	O
(	O
int	O
)	O
;	O
static	O
char	O
const	O
*	O
volatile	O
program_error_message	*(char)
;	O
static	O
char	O
const	O
*	O
volatile	O
stack_overflow_message	*(char)
;	O
static	O
_Noreturn	O
void	O
die	(int)->(void)
(	O
int	O
signo	int
)	O
{	O
char	O
const	O
*	O
message	*(char)
;	O
segv_action	*((int)->(void))
(	O
signo	int
)	O
;	O
message	*(char)
=	O
signo	int
?	O
program_error_message	*(char)
:	O
stack_overflow_message	*(char)
;	O
ignore_value	O
(	O
write	(int,*(void),long)->(long)
(	O
STDERR_FILENO	int
,	O
program_name	*(char)
,	O
strlen	(*(char))->(long)
(	O
program_name	*(char)
)	O
)	O
)	O
;	O
ignore_value	O
(	O
write	(int,*(void),long)->(long)
(	O
STDERR_FILENO	int
,	O
": "	*(char)
,	O
2	int
)	O
)	O
;	O
ignore_value	O
(	O
write	(int,*(void),long)->(long)
(	O
STDERR_FILENO	int
,	O
message	*(char)
,	O
strlen	(*(char))->(long)
(	O
message	*(char)
)	O
)	O
)	O
;	O
ignore_value	O
(	O
write	(int,*(void),long)->(long)
(	O
STDERR_FILENO	int
,	O
"\n"	*(char)
,	O
1	int
)	O
)	O
;	O
if	O
(	O
!	O
signo	int
)	O
_exit	(int)->(void)
(	O
exit_failure	int
)	O
;	O
raise	(int)->(int)
(	O
signo	int
)	O
;	O
abort	()->(void)
(	O
)	O
;	O
}	O
static	O
union	O
{	O
char	O
buffer	array(char)
[	O
SIGSTKSZ	int
]	O
;	O
long	O
double	O
ld	long double
;	O
long	O
l	long
;	O
void	O
*	O
p	*(void)
;	O
}	O
alternate_signal_stack	union(array(char),long double,long,*(void))
;	O
static	O
void	O
null_action	(int)->(void)
(	O
int	O
signo	int
__attribute__	O
(	O
(	O
unused	O
)	O
)	O
)	O
{	O
}	O
static	O
_Noreturn	O
void	O
segv_handler	(int,*(struct(int,int,int,int,union(array(int),struct(int,int),struct(int,int,union`),struct(int,int,union`),struct(int,int,int,long,long),struct(*`,short,union`),struct(long,int),struct(*`,int,int)))),*(void))->(void)
(	O
int	O
signo	int
,	O
siginfo_t	struct(int,int,int,int,union(array(int),struct(int,int),struct(int,int,union(int,*(void))),struct(int,int,union(int,*(void))),struct(int,int,int,long,long),struct(*(void),short,union(struct(*`,*`),int)),struct(long,int),struct(*(void),int,int)))
*	O
info	*(struct(int,int,int,int,union(array(int),struct(int,int),struct(int,int,union(int,*`)),struct(int,int,union(int,*`)),struct(int,int,int,long,long),struct(*(void),short,union(struct`,int)),struct(long,int),struct(*(void),int,int))))
,	O
void	O
*	O
context	*(void)
__attribute__	O
(	O
(	O
unused	O
)	O
)	O
)	O
{	O
signo	int
=	O
0	int
;	O
die	(int)->(void)
(	O
signo	int
)	O
;	O
}	O
int	O
c_stack_action	(*((int)->(void)))->(int)
(	O
void	O
(	O
*	O
action	*((int)->(void))
)	O
(	O
int	O
)	O
)	O
{	O
int	O
r	int
;	O
stack_t	struct(*(void),int,long)
st	struct(*(void),int,long)
;	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
;	O
st	struct(*(void),int,long)
.	O
ss_flags	int
=	O
0	int
;	O
st	struct(*(void),int,long)
.	O
ss_sp	*(void)
=	O
alternate_signal_stack	union(array(char),long double,long,*(void))
.	O
buffer	array(char)
;	O
st	struct(*(void),int,long)
.	O
ss_size	long
=	O
sizeof	O
alternate_signal_stack	union(array(char),long double,long,*(void))
.	O
buffer	array(char)
;	O
r	int
=	O
sigaltstack	(*(struct(*(void),int,long)),*(struct(*(void),int,long)))->(int)
(	O
&	O
st	struct(*(void),int,long)
,	O
NULL	O
)	O
;	O
if	O
(	O
r	int
!=	O
0	int
)	O
return	O
r	int
;	O
segv_action	*((int)->(void))
=	O
action	*((int)->(void))
?	O
action	*((int)->(void))
:	O
null_action	(int)->(void)
;	O
program_error_message	*(char)
=	O
_	O
(	O
"program error"	*(char)
)	O
;	O
stack_overflow_message	*(char)
=	O
_	O
(	O
"stack overflow"	*(char)
)	O
;	O
sigemptyset	(*(struct(array(long))))->(int)
(	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_mask	struct(array(long))
)	O
;	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_flags	int
=	O
SA_NODEFER	int
|	O
SA_ONSTACK	int
|	O
SA_RESETHAND	int
|	O
SA_SIGINFO	int
;	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_sigaction	*((int,*(struct(int,int,int,int,union(array(int),struct`,struct`,struct`,struct`,struct`,struct`,struct`))),*(void))->(void))
=	O
segv_handler	(int,*(struct(int,int,int,int,union(array(int),struct(int,int),struct(int,int,union`),struct(int,int,union`),struct(int,int,int,long,long),struct(*`,short,union`),struct(long,int),struct(*`,int,int)))),*(void))->(void)
;	O
return	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGSEGV	int
,	O
&	O
act	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
NULL	O
)	O
;	O
}	O
