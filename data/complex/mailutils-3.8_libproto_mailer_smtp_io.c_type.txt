int	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
ap	array(struct(int,int,*(void),*(void)))
;	O
int	O
rc	int
;	O
va_start	O
(	O
ap	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
rc	int
=	O
mu_stream_vprintf	(*(struct),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
smtp	*(struct)
->	O
carrier	*(struct)
,	O
fmt	*(char)
,	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
ap	array(struct(int,int,*(void),*(void)))
)	O
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mu_smtp_init_mlist	(*(struct(int,*(struct),enum(int,int,int,int,int,int,int,int),*(struct),*(struct),array(*(char)),*(struct),*(struct),*(struct),array(char),*(char),*(char),long,*(char),long,*(struct),struct(int,enum(int,int,int),long))))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
->	O
mlrepl	*(struct)
)	O
{	O
int	O
rc	int
=	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
smtp	*(struct)
->	O
mlrepl	*(struct)
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
mu_list_set_destroy_item	(*(struct),*((*(void))->(void)))->(*((*(void))->(void)))
(	O
smtp	*(struct)
->	O
mlrepl	*(struct)
,	O
mu_list_free_item	(*(void))->(void)
)	O
;	O
return	O
rc	int
;	O
}	O
else	O
mu_list_clear	(*(struct))->(void)
(	O
smtp	*(struct)
->	O
mlrepl	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_response	(*(struct))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
)	O
{	O
int	O
rc	int
;	O
size_t	long
n	long
;	O
rc	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
smtp	*(struct)
->	O
carrier	*(struct)
,	O
&	O
smtp	*(struct)
->	O
rdbuf	*(char)
,	O
&	O
smtp	*(struct)
->	O
rdsize	long
,	O
&	O
n	long
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
rc	int
)	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
EIO	int
)	O
;	O
n	long
=	O
mu_rtrim_class	(*(char),int)->(long)
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
n	long
<	O
3	int
||	O
!	O
mu_isdigit	O
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
[	O
0	int
]	O
)	O
)	O
{	O
mu_diag_output	(int,*(char))->(void)
(	O
MU_DIAG_NOTICE	O
,	O
"received invalid reply from SMTP server"	*(char)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
MU_ERR_BADREPLY	O
)	O
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
smtp	*(struct)
->	O
replcode	array(char)
,	O
smtp	*(struct)
->	O
rdbuf	*(char)
,	O
3	int
)	O
;	O
smtp	*(struct)
->	O
replcode	array(char)
[	O
3	int
]	O
=	O
0	int
;	O
if	O
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
[	O
3	int
]	O
==	O
'-'	O
)	O
{	O
smtp	*(struct)
->	O
flags	int
|=	O
_MU_SMTP_MLREPL	int
;	O
n	long
-=	O
3	int
;	O
if	O
(	O
smtp	*(struct)
->	O
flsize	long
<	O
n	long
)	O
{	O
char	O
*	O
p	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
smtp	*(struct)
->	O
flbuf	*(char)
,	O
n	long
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
ENOMEM	int
)	O
;	O
smtp	*(struct)
->	O
flbuf	*(char)
=	O
p	*(char)
;	O
smtp	*(struct)
->	O
flsize	long
=	O
n	long
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
smtp	*(struct)
->	O
flbuf	*(char)
,	O
smtp	*(struct)
->	O
rdbuf	*(char)
+	O
4	int
,	O
n	long
-	O
1	int
)	O
;	O
smtp	*(struct)
->	O
flbuf	*(char)
[	O
n	long
-	O
1	int
]	O
=	O
0	int
;	O
smtp	*(struct)
->	O
replptr	*(char)
=	O
smtp	*(struct)
->	O
flbuf	*(char)
;	O
rc	int
=	O
_mu_smtp_init_mlist	(*(struct(int,*(struct),enum(int,int,int,int,int,int,int,int),*(struct),*(struct),array(*(char)),*(struct),*(struct),*(struct),array(char),*(char),*(char),long,*(char),long,*(struct),struct(int,enum(int,int,int),long))))->(int)
(	O
smtp	*(struct)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
rc	int
)	O
;	O
do	O
{	O
char	O
*	O
p	*(char)
;	O
rc	int
=	O
mu_stream_getline	(*(struct),*(*(char)),*(long),*(long))->(int)
(	O
smtp	*(struct)
->	O
carrier	*(struct)
,	O
&	O
smtp	*(struct)
->	O
rdbuf	*(char)
,	O
&	O
smtp	*(struct)
->	O
rdsize	long
,	O
&	O
n	long
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
rc	int
)	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
EIO	int
)	O
;	O
n	long
=	O
mu_rtrim_class	(*(char),int)->(long)
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
,	O
MU_CTYPE_ENDLN	int
)	O
;	O
if	O
(	O
n	long
<	O
3	int
||	O
memcmp	(*(void),*(void),long)->(int)
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
,	O
smtp	*(struct)
->	O
replcode	array(char)
,	O
3	int
)	O
)	O
{	O
mu_diag_output	(int,*(char))->(void)
(	O
MU_DIAG_NOTICE	O
,	O
"received invalid reply from SMTP server"	*(char)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
MU_ERR_BADREPLY	O
)	O
;	O
}	O
p	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
+	O
4	int
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
ENOMEM	int
)	O
;	O
mu_list_append	(*(struct),*(void))->(int)
(	O
smtp	*(struct)
->	O
mlrepl	*(struct)
,	O
p	*(char)
)	O
;	O
}	O
while	O
(	O
smtp	*(struct)
->	O
rdbuf	*(char)
[	O
3	int
]	O
==	O
'-'	O
)	O
;	O
}	O
else	O
{	O
smtp	*(struct)
->	O
flags	int
&=	O
~	O
_MU_SMTP_MLREPL	int
;	O
smtp	*(struct)
->	O
replptr	*(char)
=	O
smtp	*(struct)
->	O
rdbuf	*(char)
+	O
4	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_replcode	(*(struct),*(char))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
char	O
*	O
buf	*(char)
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
||	O
!	O
buf	*(char)
)	O
return	O
EINVAL	int
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
buf	*(char)
,	O
smtp	*(struct)
->	O
replcode	array(char)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_sget_reply	(*(struct),*(*(char)))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
const	O
char	O
*	O
*	O
pbuf	*(*(char))
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
||	O
!	O
pbuf	*(*(char))
)	O
return	O
EINVAL	int
;	O
*	O
pbuf	*(*(char))
=	O
smtp	*(struct)
->	O
replptr	*(char)
;	O
return	O
0	int
;	O
}	O
int	O
mu_smtp_get_reply_iterator	(*(struct),*(*(struct)))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
mu_iterator_t	*(struct)
*	O
pitr	*(*(struct))
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
||	O
!	O
pitr	*(*(struct))
)	O
return	O
EINVAL	int
;	O
return	O
mu_list_get_iterator	(*(struct),*(*(struct)))->(int)
(	O
smtp	*(struct)
->	O
mlrepl	*(struct)
,	O
pitr	*(*(struct))
)	O
;	O
}	O
