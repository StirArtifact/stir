static	O
void	O
die	(*(char))->(void)
(	O
char	O
const	O
*	O
msg	*(char)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
PRELOAD	*(char)
": %s\n"	*(char)
,	O
msg	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
char	O
*	O
e_textdomain	*(char)
=	O
0	int
;	O
static	O
char	O
*	O
e_localedir	*(char)
=	O
0	int
;	O
static	O
char	O
*	O
(	O
*	O
r_textdomain	*((*(char))->(*(char)))
)	O
(	O
char	O
const	O
*	O
)	O
=	O
0	int
;	O
static	O
char	O
*	O
(	O
*	O
r_bindtextdomain	*((*(char),*(char))->(*(char)))
)	O
(	O
char	O
const	O
*	O
,	O
char	O
const	O
*	O
)	O
=	O
0	int
;	O
static	O
char	O
*	O
(	O
*	O
r_bind_textdomain_codeset	*((*(char),*(char))->(*(char)))
)	O
(	O
char	O
const	O
*	O
,	O
char	O
const	O
*	O
)	O
=	O
0	int
;	O
void	O
setup	()->(void)
(	O
)	O
{	O
static	O
int	O
done	int
=	O
0	int
;	O
if	O
(	O
done	int
++	O
)	O
return	O
;	O
if	O
(	O
!	O
(	O
e_textdomain	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"TEXTDOMAIN"	*(char)
)	O
)	O
)	O
die	(*(char))->(void)
(	O
"TEXTDOMAIN not set"	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
e_localedir	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"LOCALEDIR"	*(char)
)	O
)	O
)	O
die	(*(char))->(void)
(	O
"LOCALEDIR not set"	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
r_textdomain	*((*(char))->(*(char)))
=	O
dlsym	(*(void),*(char))->(*(void))
(	O
RTLD_NEXT	O
,	O
"textdomain"	*(char)
)	O
)	O
)	O
die	(*(char))->(void)
(	O
"can't find symbol \"textdomain\""	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
r_bindtextdomain	*((*(char),*(char))->(*(char)))
=	O
dlsym	(*(void),*(char))->(*(void))
(	O
RTLD_NEXT	O
,	O
"bindtextdomain"	*(char)
)	O
)	O
)	O
die	(*(char))->(void)
(	O
"can't find symbol \"bindtextdomain\""	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
r_bind_textdomain_codeset	*((*(char),*(char))->(*(char)))
=	O
dlsym	(*(void),*(char))->(*(void))
(	O
RTLD_NEXT	O
,	O
"bind_textdomain_codeset"	*(char)
)	O
)	O
)	O
die	(*(char))->(void)
(	O
"can't find symbol \"bind_textdomain_codeset\""	*(char)
)	O
;	O
}	O
char	O
*	O
textdomain	(*(char))->(*(char))
(	O
char	O
const	O
*	O
domainname	*(char)
)	O
{	O
char	O
*	O
r	*(char)
;	O
setup	()->(void)
(	O
)	O
;	O
r	*(char)
=	O
r_textdomain	*((*(char))->(*(char)))
(	O
domainname	*(char)
)	O
;	O
if	O
(	O
domainname	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
domainname	*(char)
,	O
e_textdomain	*(char)
)	O
)	O
r_bindtextdomain	*((*(char),*(char))->(*(char)))
(	O
domainname	*(char)
,	O
e_localedir	*(char)
)	O
;	O
return	O
r	*(char)
;	O
}	O
char	O
*	O
bindtextdomain	(*(char),*(char))->(*(char))
(	O
char	O
const	O
*	O
domainname	*(char)
,	O
char	O
const	O
*	O
dirname	*(char)
)	O
{	O
char	O
const	O
*	O
dir	*(char)
=	O
dirname	*(char)
;	O
setup	()->(void)
(	O
)	O
;	O
if	O
(	O
domainname	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
domainname	*(char)
,	O
e_textdomain	*(char)
)	O
)	O
dir	*(char)
=	O
e_localedir	*(char)
;	O
return	O
r_bindtextdomain	*((*(char),*(char))->(*(char)))
(	O
domainname	*(char)
,	O
dir	*(char)
)	O
;	O
}	O
char	O
*	O
bind_textdomain_codeset	(*(char),*(char))->(*(char))
(	O
char	O
const	O
*	O
domainname	*(char)
,	O
char	O
const	O
*	O
codeset	*(char)
)	O
{	O
char	O
*	O
r	*(char)
;	O
setup	()->(void)
(	O
)	O
;	O
r	*(char)
=	O
r_bind_textdomain_codeset	*((*(char),*(char))->(*(char)))
(	O
domainname	*(char)
,	O
codeset	*(char)
)	O
;	O
if	O
(	O
domainname	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
domainname	*(char)
,	O
e_textdomain	*(char)
)	O
)	O
r_bindtextdomain	*((*(char),*(char))->(*(char)))
(	O
domainname	*(char)
,	O
e_localedir	*(char)
)	O
;	O
return	O
r	*(char)
;	O
}	O
