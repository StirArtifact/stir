static	O
error_t	O
proclist_get_contents	(*(void),*(*(char)),*(long))->(int)
(	O
void	O
*	O
hook	*(void)
,	O
char	O
*	O
*	O
contents	*(*(char))
,	O
ssize_t	long
*	O
contents_len	*(long)
)	O
{	O
struct	O
ps_context	O
*	O
pc	*(struct)
=	O
hook	*(void)
;	O
pidarray_t	O
pids	O
;	O
mach_msg_type_number_t	O
num_pids	O
;	O
error_t	O
err	O
;	O
int	O
i	int
;	O
num_pids	O
=	O
0	int
;	O
err	O
=	O
proc_getallpids	()->(int)
(	O
pc	*(struct)
->	O
server	O
,	O
&	O
pids	O
,	O
&	O
num_pids	O
)	O
;	O
if	O
(	O
err	O
)	O
return	O
EIO	O
;	O
*	O
contents	*(*(char))
=	O
malloc	(long)->(*(void))
(	O
num_pids	O
*	O
PID_STR_SIZE	O
)	O
;	O
if	O
(	O
*	O
contents	*(*(char))
)	O
{	O
*	O
contents_len	*(long)
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
num_pids	O
;	O
i	int
++	O
)	O
{	O
int	O
n	int
=	O
sprintf	(*(char),*(char))->(int)
(	O
*	O
contents	*(*(char))
+	O
*	O
contents_len	*(long)
,	O
"%d"	*(char)
,	O
pids	O
[	O
i	int
]	O
)	O
;	O
assert	()->(int)
(	O
n	int
>=	O
0	int
)	O
;	O
*	O
contents_len	*(long)
+=	O
(	O
n	int
+	O
1	int
)	O
;	O
}	O
}	O
else	O
err	O
=	O
ENOMEM	O
;	O
vm_deallocate	()->(int)
(	O
mach_task_self	()->(int)
(	O
)	O
,	O
(	O
vm_address_t	O
)	O
pids	O
,	O
num_pids	O
*	O
sizeof	O
pids	O
[	O
0	int
]	O
)	O
;	O
return	O
err	O
;	O
}	O
static	O
error_t	O
proclist_lookup	(*(void),*(char),*(*(struct)))->(int)
(	O
void	O
*	O
hook	*(void)
,	O
const	O
char	O
*	O
name	*(char)
,	O
struct	O
node	O
*	O
*	O
np	*(*(struct))
)	O
{	O
struct	O
ps_context	O
*	O
pc	*(struct)
=	O
hook	*(void)
;	O
char	O
*	O
endp	*(char)
;	O
pid_t	int
pid	int
;	O
assert	()->(int)
(	O
name	*(char)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
name	*(char)
[	O
0	int
]	O
==	O
'0'	O
&&	O
name	*(char)
[	O
1	int
]	O
)	O
return	O
ENOENT	O
;	O
pid	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
name	*(char)
,	O
&	O
endp	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
endp	*(char)
)	O
return	O
ENOENT	O
;	O
return	O
process_lookup_pid	()->(int)
(	O
pc	*(struct)
,	O
pid	int
,	O
np	*(*(struct))
)	O
;	O
}	O
struct	O
node	O
*	O
proclist_make_node	(*(struct))->(*(struct))
(	O
struct	O
ps_context	O
*	O
pc	*(struct)
)	O
{	O
static	O
const	O
struct	O
procfs_node_ops	O
ops	struct
=	O
{	O
.	O
get_contents	O
=	O
proclist_get_contents	(*(void),*(*(char)),*(long))->(int)
,	O
.	O
lookup	O
=	O
proclist_lookup	(*(void),*(char),*(*(struct)))->(int)
,	O
.	O
cleanup_contents	O
=	O
procfs_cleanup_contents_with_free	O
,	O
}	O
;	O
return	O
procfs_make_node	()->(int)
(	O
&	O
ops	struct
,	O
pc	*(struct)
)	O
;	O
}	O
