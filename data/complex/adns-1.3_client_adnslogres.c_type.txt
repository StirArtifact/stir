static	O
const	O
char	O
*	O
const	O
cvsid	*(char)
=	O
"$Id: adnslogres.c,v 1.23 2006/05/09 19:37:58 ian Exp $"	*(char)
;	O
static	O
const	O
char	O
*	O
const	O
progname	*(char)
=	O
"adnslogres"	*(char)
;	O
static	O
const	O
char	O
*	O
config_text	*(char)
;	O
static	O
void	O
msg	(*(char))->(void)
(	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: "	*(char)
,	O
progname	*(char)
)	O
;	O
va_start	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
vfprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
fputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
'\n'	O
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
void	O
aargh	(*(char))->(void)
(	O
const	O
char	O
*	O
cause	*(char)
)	O
{	O
const	O
char	O
*	O
why	*(char)
=	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
;	O
if	O
(	O
!	O
why	*(char)
)	O
why	*(char)
=	O
"Unknown error"	*(char)
;	O
msg	(*(char))->(void)
(	O
"%s: %s (%d)"	*(char)
,	O
cause	*(char)
,	O
why	*(char)
,	O
errno	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
static	O
char	O
*	O
ipaddr2domain	(*(char),*(*(char)),*(*(char)))->(*(char))
(	O
char	O
*	O
start	*(char)
,	O
char	O
*	O
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
char	O
*	O
*	O
rest	*(*(char))
)	O
{	O
static	O
char	O
buf	array(char)
[	O
30	int
]	O
;	O
char	O
*	O
ptrs	array(*(char))
[	O
5	int
]	O
;	O
int	O
i	int
;	O
ptrs	array(*(char))
[	O
0	int
]	O
=	O
start	*(char)
;	O
retry	long
:	O
while	O
(	O
!	O
sensible_ctype	O
(	O
isdigit	(int)->(int)
,	O
*	O
ptrs	array(*(char))
[	O
0	int
]	O
)	O
)	O
if	O
(	O
!	O
*	O
ptrs	array(*(char))
[	O
0	int
]	O
++	O
)	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
buf	array(char)
,	O
"invalid."	*(char)
)	O
;	O
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
=	O
*	O
rest	*(*(char))
=	O
NULL	O
;	O
return	O
buf	array(char)
;	O
}	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
5	int
;	O
i	int
++	O
)	O
{	O
ptrs	array(*(char))
[	O
i	int
]	O
=	O
ptrs	array(*(char))
[	O
i	int
-	O
1	int
]	O
;	O
while	O
(	O
sensible_ctype	O
(	O
isdigit	(int)->(int)
,	O
*	O
ptrs	array(*(char))
[	O
i	int
]	O
++	O
)	O
)	O
;	O
if	O
(	O
(	O
i	int
==	O
4	int
&&	O
!	O
sensible_ctype	O
(	O
isspace	(int)->(int)
,	O
ptrs	array(*(char))
[	O
i	int
]	O
[	O
-	O
1	int
]	O
)	O
)	O
||	O
(	O
i	int
!=	O
4	int
&&	O
ptrs	array(*(char))
[	O
i	int
]	O
[	O
-	O
1	int
]	O
!=	O
'.'	O
)	O
||	O
(	O
ptrs	array(*(char))
[	O
i	int
]	O
-	O
ptrs	array(*(char))
[	O
i	int
-	O
1	int
]	O
>	O
4	int
)	O
)	O
{	O
ptrs	array(*(char))
[	O
0	int
]	O
=	O
ptrs	array(*(char))
[	O
i	int
]	O
-	O
1	int
;	O
goto	O
retry	long
;	O
}	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
buf	array(char)
,	O
"%.*s.%.*s.%.*s.%.*s.in-addr.arpa."	*(char)
,	O
(	O
int	O
)	O
(	O
ptrs	array(*(char))
[	O
4	int
]	O
-	O
ptrs	array(*(char))
[	O
3	int
]	O
-	O
1	int
)	O
,	O
ptrs	array(*(char))
[	O
3	int
]	O
,	O
(	O
int	O
)	O
(	O
ptrs	array(*(char))
[	O
3	int
]	O
-	O
ptrs	array(*(char))
[	O
2	int
]	O
-	O
1	int
)	O
,	O
ptrs	array(*(char))
[	O
2	int
]	O
,	O
(	O
int	O
)	O
(	O
ptrs	array(*(char))
[	O
2	int
]	O
-	O
ptrs	array(*(char))
[	O
1	int
]	O
-	O
1	int
)	O
,	O
ptrs	array(*(char))
[	O
1	int
]	O
,	O
(	O
int	O
)	O
(	O
ptrs	array(*(char))
[	O
1	int
]	O
-	O
ptrs	array(*(char))
[	O
0	int
]	O
-	O
1	int
)	O
,	O
ptrs	array(*(char))
[	O
0	int
]	O
)	O
;	O
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
=	O
ptrs	array(*(char))
[	O
0	int
]	O
;	O
*	O
rest	*(*(char))
=	O
ptrs	array(*(char))
[	O
4	int
]	O
-	O
1	int
;	O
return	O
buf	array(char)
;	O
}	O
static	O
void	O
printline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),*(char),*(char))->(void)
(	O
FILE	struct
*	O
outf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
char	O
*	O
start	*(char)
,	O
char	O
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
char	O
*	O
rest	*(*(char))
,	O
char	O
*	O
domain	*(char)
)	O
{	O
if	O
(	O
domain	*(char)
)	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
outf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%.*s%s%s"	*(char)
,	O
(	O
int	O
)	O
(	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
-	O
start	*(char)
)	O
,	O
start	*(char)
,	O
domain	*(char)
,	O
rest	*(*(char))
)	O
;	O
else	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
start	*(char)
,	O
outf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
outf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
aargh	(*(char))->(void)
(	O
"write output"	*(char)
)	O
;	O
}	O
typedef	O
struct	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
{	O
struct	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
*	O
next	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
char	O
*	O
start	*(char)
,	O
*	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
*	O
rest	*(*(char))
;	O
adns_query	*(struct)
query	*(struct)
;	O
}	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
;	O
static	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
*	O
readline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct),int)->(*(struct(*(struct(*`,*`,*`,*`,*`)),*(char),*(char),*(char),*(struct))))
(	O
FILE	struct
*	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
adns_state	*(struct)
adns	*(struct)
,	O
int	O
opts	int
)	O
{	O
static	O
char	O
buf	array(char)
[	O
MAXLINE	int
]	O
;	O
char	O
*	O
str	*(char)
;	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
*	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
if	O
(	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
buf	array(char)
,	O
MAXLINE	int
,	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
str	*(char)
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
)	O
+	O
strlen	(*(char))->(long)
(	O
buf	array(char)
)	O
+	O
1	int
)	O
;	O
if	O
(	O
!	O
str	*(char)
)	O
aargh	(*(char))->(void)
(	O
"malloc"	*(char)
)	O
;	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
(	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
*	O
)	O
str	*(char)
;	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
NULL	O
;	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
start	*(char)
=	O
str	*(char)
+	O
sizeof	O
(	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
start	*(char)
,	O
buf	array(char)
)	O
;	O
str	*(char)
=	O
ipaddr2domain	(*(char),*(*(char)),*(*(char)))->(*(char))
(	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
start	*(char)
,	O
&	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
&	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
rest	*(*(char))
)	O
;	O
if	O
(	O
opts	int
&	O
OPT_DEBUG	int
)	O
msg	(*(char))->(void)
(	O
"submitting %.*s -> %s"	*(char)
,	O
(	O
int	O
)	O
(	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
rest	*(*(char))
-	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
)	O
,	O
guard_null	O
(	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
)	O
,	O
str	*(char)
)	O
;	O
if	O
(	O
adns_submit	(*(struct),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),enum(int,int,int,int,int,int,int,int,int,int,int),*(void),*(*(struct)))->(int)
(	O
adns	*(struct)
,	O
str	*(char)
,	O
adns_r_ptr	int
,	O
adns_qf_quoteok_cname	int
|	O
adns_qf_cname_loose	int
,	O
NULL	O
,	O
&	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
query	*(struct)
)	O
)	O
aargh	(*(char))->(void)
(	O
"adns_submit"	*(char)
)	O
;	O
return	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
}	O
if	O
(	O
!	O
feof	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
aargh	(*(char))->(void)
(	O
"fgets"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
static	O
void	O
proclog	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int)->(void)
(	O
FILE	struct
*	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
FILE	struct
*	O
outf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
maxpending	int
,	O
int	O
opts	int
)	O
{	O
int	O
eof	int
,	O
err	int
,	O
len	int
;	O
adns_state	*(struct)
adns	*(struct)
;	O
adns_answer	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct(int,*`))),*(struct(int,union(struct`,struct`))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`))),*(struct(int,*(char)))))
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
;	O
logline	struct(*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct))),*(char),*(char),*(char),*(struct))
*	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
,	O
*	O
tail	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
,	O
*	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
adns_initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
;	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
=	O
(	O
opts	int
&	O
OPT_DEBUG	int
)	O
?	O
adns_if_debug	int
:	O
0	int
;	O
if	O
(	O
config_text	*(char)
)	O
{	O
errno	O
=	O
adns_init_strcfg	(*(*(struct)),enum(int,int,int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
&	O
adns	*(struct)
,	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
config_text	*(char)
)	O
;	O
}	O
else	O
{	O
errno	O
=	O
adns_init	(*(*(struct)),enum(int,int,int,int,int,int,int,int,int,int,int),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
&	O
adns	*(struct)
,	O
initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
0	int
)	O
;	O
}	O
if	O
(	O
errno	O
)	O
aargh	(*(char))->(void)
(	O
"adns_init"	*(char)
)	O
;	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
tail	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
readline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct),int)->(*(struct(*(struct(*`,*`,*`,*`,*`)),*(char),*(char),*(char),*(struct))))
(	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
adns	*(struct)
,	O
opts	int
)	O
;	O
len	int
=	O
1	int
;	O
eof	int
=	O
0	int
;	O
while	O
(	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
)	O
{	O
while	O
(	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
)	O
{	O
if	O
(	O
opts	int
&	O
OPT_DEBUG	int
)	O
msg	(*(char))->(void)
(	O
"%d in queue; checking %.*s"	*(char)
,	O
len	int
,	O
(	O
int	O
)	O
(	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
rest	*(*(char))
-	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
)	O
,	O
guard_null	O
(	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
)	O
)	O
;	O
if	O
(	O
eof	int
||	O
len	int
>=	O
maxpending	int
)	O
{	O
if	O
(	O
opts	int
&	O
OPT_POLL	int
)	O
err	int
=	O
adns_wait_poll	(*(struct),*(*(struct)),*(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(void)))->(int)
(	O
adns	*(struct)
,	O
&	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
query	*(struct)
,	O
&	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
,	O
NULL	O
)	O
;	O
else	O
err	int
=	O
adns_wait	(*(struct),*(*(struct)),*(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(void)))->(int)
(	O
adns	*(struct)
,	O
&	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
query	*(struct)
,	O
&	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
,	O
NULL	O
)	O
;	O
}	O
else	O
{	O
err	int
=	O
adns_check	(*(struct),*(*(struct)),*(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(void)))->(int)
(	O
adns	*(struct)
,	O
&	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
query	*(struct)
,	O
&	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
,	O
NULL	O
)	O
;	O
}	O
if	O
(	O
err	int
==	O
EAGAIN	int
)	O
break	O
;	O
if	O
(	O
err	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: adns_wait/check: %s"	*(char)
,	O
progname	*(char)
,	O
strerror	(int)->(*(char))
(	O
err	int
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
printline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char),*(char),*(char),*(char))->(void)
(	O
outf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
start	*(char)
,	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
,	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
rest	*(*(char))
,	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_s_ok	int
?	O
*	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
->	O
rrs	union(*(void),*(char),*(*(char)),*(*(struct(int,*(char)))),*(struct(int,union(struct(short,array(char)),struct(short,short,struct`,array(char))))),*(struct(int)),*(struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct(int,union`)))),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))),*(struct(int,*(char))),*(struct(*(char),*(char),long,long,long,long,long)),*(struct(int,int,int,*(char))),*(struct(int,int,int,struct(*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*(struct`)))),*(struct(int,*(char))))
.	O
str	*(char)
:	O
NULL	O
)	O
;	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
free	(*(void))->(void)
(	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
)	O
;	O
free	(*(void))->(void)
(	O
answer	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union(*(void),*(char),*(*(char)),*(*(struct`)),*(struct(int,union`)),*(struct(int)),*(struct(*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),int,*`)),*(struct(array(struct(int,*(char))))),*(struct(array(*(char)))),*(struct(int,struct`)),*(struct(int,*`)),*(struct(*`,*`,long,long,long,long,long)),*(struct(int,int,int,*`)),*(struct(int,int,int,struct`)),*(struct(int,*`)))))
)	O
;	O
len	int
--	O
;	O
}	O
if	O
(	O
!	O
eof	int
)	O
{	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
readline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct),int)->(*(struct(*(struct(*`,*`,*`,*`,*`)),*(char),*(char),*(char),*(struct))))
(	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
adns	*(struct)
,	O
opts	int
)	O
;	O
if	O
(	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
)	O
{	O
if	O
(	O
!	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
)	O
head	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
else	O
tail	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
->	O
next	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
tail	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
=	O
line	*(struct(*(struct(*(struct`),*(char),*(char),*(char),*(struct`))),*(char),*(char),*(char),*(struct)))
;	O
len	int
++	O
;	O
}	O
else	O
{	O
eof	int
=	O
1	int
;	O
}	O
}	O
}	O
adns_finish	(*(struct))->(void)
(	O
adns	*(struct)
)	O
;	O
}	O
static	O
void	O
printhelp	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
file	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"usage: adnslogres [<options>] [<logfile>]\n"	*(char)
"       adnslogres --version|--help\n"	*(char)
"options: -c <concurrency>  set max number of outstanding queries\n"	*(char)
"         -p                use poll(2) instead of select(2)\n"	*(char)
"         -d                turn on debugging\n"	*(char)
"         -C <config>       use instead of contents of resolv.conf\n"	*(char)
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
void	O
usage	()->(void)
(	O
void	O
)	O
{	O
printhelp	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
c	int
,	O
opts	int
,	O
maxpending	int
;	O
extern	O
char	O
*	O
optarg	*(char)
;	O
FILE	struct
*	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
if	O
(	O
argv	array(*(char))
[	O
1	int
]	O
&&	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"--"	*(char)
,	O
2	int
)	O
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"--help"	*(char)
)	O
)	O
{	O
printhelp	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"--version"	*(char)
)	O
)	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
VERSION_MESSAGE	O
(	O
"adnslogres"	*(char)
)	O
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
{	O
usage	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
||	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
perror	(*(char))->(void)
(	O
"stdout"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
exit	(int)->(void)
(	O
0	int
)	O
;	O
}	O
maxpending	int
=	O
DEFMAXPENDING	int
;	O
opts	int
=	O
0	int
;	O
while	O
(	O
(	O
c	int
=	O
getopt	(int,*(*(char)),*(char))->(int)
(	O
argc	int
,	O
argv	array(*(char))
,	O
"c:C:dp"	*(char)
)	O
)	O
!=	O
-	O
1	int
)	O
switch	O
(	O
c	int
)	O
{	O
case	O
'c'	O
:	O
maxpending	int
=	O
atoi	(*(char))->(int)
(	O
optarg	*(char)
)	O
;	O
if	O
(	O
maxpending	int
<	O
1	int
||	O
maxpending	int
>	O
MAXMAXPENDING	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: unfeasible concurrency %d\n"	*(char)
,	O
progname	*(char)
,	O
maxpending	int
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
'C'	O
:	O
config_text	*(char)
=	O
optarg	*(char)
;	O
break	O
;	O
case	O
'd'	O
:	O
opts	int
|=	O
OPT_DEBUG	int
;	O
break	O
;	O
case	O
'p'	O
:	O
opts	int
|=	O
OPT_POLL	int
;	O
break	O
;	O
default	O
:	O
usage	()->(void)
(	O
)	O
;	O
}	O
argc	int
-=	O
optind	int
;	O
argv	array(*(char))
+=	O
optind	int
;	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
else	O
if	O
(	O
argc	int
==	O
1	int
)	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
*	O
argv	array(*(char))
,	O
"r"	*(char)
)	O
;	O
else	O
usage	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
aargh	(*(char))->(void)
(	O
"couldn't open input"	*(char)
)	O
;	O
proclog	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),int,int)->(void)
(	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
maxpending	int
,	O
opts	int
)	O
;	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
inf	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
aargh	(*(char))->(void)
(	O
"fclose input"	*(char)
)	O
;	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
aargh	(*(char))->(void)
(	O
"fclose output"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
