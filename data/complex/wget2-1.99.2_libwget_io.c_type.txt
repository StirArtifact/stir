static	O
ssize_t	long
__read	(*(void),*(char),long)->(long)
(	O
const	O
void	O
*	O
f	*(void)
,	O
char	O
*	O
dst	*(char)
,	O
size_t	long
len	long
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
(	O
FILE	struct
*	O
)	O
f	*(void)
;	O
ssize_t	long
ret	long
=	O
(	O
ssize_t	long
)	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
dst	*(char)
,	O
1	int
,	O
len	long
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
ferror	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
return	O
-	O
1	int
;	O
return	O
ret	long
;	O
}	O
static	O
ssize_t	long
__readfd	(*(void),*(char),long)->(long)
(	O
const	O
void	O
*	O
f	*(void)
,	O
char	O
*	O
dst	*(char)
,	O
size_t	long
len	long
)	O
{	O
int	O
*	O
fd	array(int)
=	O
(	O
int	O
*	O
)	O
f	*(void)
;	O
return	O
read	(int,*(void),long)->(long)
(	O
*	O
fd	array(int)
,	O
dst	*(char)
,	O
len	long
)	O
;	O
}	O
static	O
ssize_t	long
_getline_internal	(*(*(char)),*(long),*(void),*((*(void),*(char),long)->(long)))->(long)
(	O
char	O
*	O
*	O
buf	*(char)
,	O
size_t	long
*	O
bufsize	long
,	O
const	O
void	O
*	O
f	*(void)
,	O
ssize_t	long
(	O
*	O
reader	*((*(void),*(char),long)->(long))
)	O
(	O
const	O
void	O
*	O
f	*(void)
,	O
char	O
*	O
dst	*(char)
,	O
size_t	long
len	long
)	O
)	O
{	O
ssize_t	long
nbytes	long
=	O
0	int
;	O
size_t	long
*	O
sizep	*(long)
,	O
length	long
=	O
0	int
;	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
!	O
buf	*(char)
||	O
!	O
bufsize	long
)	O
return	O
WGET_E_INVALID	int
;	O
if	O
(	O
!	O
*	O
buf	*(char)
||	O
!	O
*	O
bufsize	long
)	O
{	O
if	O
(	O
!	O
(	O
p	*(char)
=	O
wget_malloc	(long)->(*(void))
(	O
10240	int
)	O
)	O
)	O
return	O
WGET_E_MEMORY	int
;	O
*	O
buf	*(char)
=	O
p	*(char)
;	O
*	O
bufsize	long
=	O
10240	int
;	O
sizep	*(long)
=	O
(	O
size_t	long
*	O
)	O
(	O
void	O
*	O
)	O
(	O
*	O
buf	*(char)
+	O
*	O
bufsize	long
-	O
2	int
*	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
sizep	*(long)
[	O
0	int
]	O
=	O
sizep	*(long)
[	O
1	int
]	O
=	O
0	int
;	O
}	O
else	O
{	O
sizep	*(long)
=	O
(	O
size_t	long
*	O
)	O
(	O
void	O
*	O
)	O
(	O
*	O
buf	*(char)
+	O
*	O
bufsize	long
-	O
2	int
*	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
if	O
(	O
sizep	*(long)
[	O
1	int
]	O
)	O
{	O
if	O
(	O
(	O
p	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
*	O
buf	*(char)
+	O
sizep	*(long)
[	O
0	int
]	O
,	O
'\n'	O
,	O
sizep	*(long)
[	O
1	int
]	O
)	O
)	O
)	O
{	O
*	O
p	*(char)
++	O
=	O
0	int
;	O
length	long
=	O
p	*(char)
-	O
(	O
*	O
buf	*(char)
+	O
sizep	*(long)
[	O
0	int
]	O
)	O
;	O
if	O
(	O
sizep	*(long)
[	O
0	int
]	O
)	O
memmove	(*(void),*(void),long)->(*(void))
(	O
*	O
buf	*(char)
,	O
*	O
buf	*(char)
+	O
sizep	*(long)
[	O
0	int
]	O
,	O
length	long
)	O
;	O
sizep	*(long)
[	O
0	int
]	O
+=	O
length	long
;	O
sizep	*(long)
[	O
1	int
]	O
-=	O
length	long
;	O
return	O
length	long
-	O
1	int
;	O
}	O
length	long
=	O
sizep	*(long)
[	O
1	int
]	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
*	O
buf	*(char)
,	O
*	O
buf	*(char)
+	O
sizep	*(long)
[	O
0	int
]	O
,	O
length	long
+	O
1	int
)	O
;	O
sizep	*(long)
[	O
0	int
]	O
=	O
sizep	*(long)
[	O
1	int
]	O
=	O
0	int
;	O
}	O
else	O
*	O
*	O
buf	*(char)
=	O
0	int
;	O
}	O
while	O
(	O
(	O
nbytes	long
=	O
reader	*((*(void),*(char),long)->(long))
(	O
f	*(void)
,	O
*	O
buf	*(char)
+	O
length	long
,	O
*	O
bufsize	long
-	O
2	int
*	O
sizeof	O
(	O
size_t	long
)	O
-	O
length	long
-	O
1	int
)	O
)	O
>	O
0	int
)	O
{	O
length	long
+=	O
nbytes	long
;	O
if	O
(	O
(	O
p	*(char)
=	O
memchr	(*(void),int,long)->(*(void))
(	O
*	O
buf	*(char)
+	O
length	long
-	O
nbytes	long
,	O
'\n'	O
,	O
nbytes	long
)	O
)	O
)	O
{	O
*	O
p	*(char)
++	O
=	O
0	int
;	O
sizep	*(long)
[	O
0	int
]	O
=	O
p	*(char)
-	O
*	O
buf	*(char)
;	O
sizep	*(long)
[	O
1	int
]	O
=	O
length	long
-	O
sizep	*(long)
[	O
0	int
]	O
;	O
return	O
sizep	*(long)
[	O
0	int
]	O
-	O
1	int
;	O
}	O
if	O
(	O
length	long
>=	O
*	O
bufsize	long
-	O
2	int
*	O
sizeof	O
(	O
size_t	long
)	O
-	O
1	int
)	O
{	O
ptrdiff_t	long
off	float
=	O
(	O
(	O
char	O
*	O
)	O
sizep	*(long)
)	O
-	O
*	O
buf	*(char)
;	O
size_t	long
*	O
old	*(long)
;	O
if	O
(	O
!	O
(	O
p	*(char)
=	O
wget_realloc	(*(void),long)->(*(void))
(	O
*	O
buf	*(char)
,	O
*	O
bufsize	long
=	O
*	O
bufsize	long
*	O
2	int
)	O
)	O
)	O
return	O
WGET_E_MEMORY	int
;	O
*	O
buf	*(char)
=	O
p	*(char)
;	O
old	*(long)
=	O
(	O
size_t	long
*	O
)	O
(	O
void	O
*	O
)	O
(	O
*	O
buf	*(char)
+	O
off	float
)	O
;	O
sizep	*(long)
=	O
(	O
size_t	long
*	O
)	O
(	O
void	O
*	O
)	O
(	O
*	O
buf	*(char)
+	O
*	O
bufsize	long
-	O
2	int
*	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
sizep	*(long)
[	O
0	int
]	O
=	O
old	*(long)
[	O
0	int
]	O
;	O
sizep	*(long)
[	O
1	int
]	O
=	O
old	*(long)
[	O
1	int
]	O
;	O
}	O
}	O
if	O
(	O
nbytes	long
==	O
-	O
1	int
&&	O
errno	O
!=	O
EAGAIN	int
)	O
{	O
if	O
(	O
errno	O
!=	O
EBADF	int
)	O
error_printf	O
(	O
_	O
(	O
"%s: Failed to read, error %d\n"	*(char)
)	O
,	O
__func__	O
,	O
errno	O
)	O
;	O
}	O
if	O
(	O
length	long
)	O
{	O
if	O
(	O
(	O
*	O
buf	*(char)
)	O
[	O
length	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
(	O
*	O
buf	*(char)
)	O
[	O
length	long
-	O
1	int
]	O
=	O
0	int
;	O
else	O
(	O
*	O
buf	*(char)
)	O
[	O
length	long
]	O
=	O
0	int
;	O
return	O
length	long
;	O
}	O
else	O
*	O
*	O
buf	*(char)
=	O
0	int
;	O
return	O
-	O
1	int
;	O
}	O
ssize_t	long
wget_fdgetline	(*(*(char)),*(long),int)->(long)
(	O
char	O
*	O
*	O
buf	*(char)
,	O
size_t	long
*	O
bufsize	long
,	O
int	O
fd	array(int)
)	O
{	O
return	O
_getline_internal	(*(*(char)),*(long),*(void),*((*(void),*(char),long)->(long)))->(long)
(	O
buf	*(char)
,	O
bufsize	long
,	O
(	O
void	O
*	O
)	O
&	O
fd	array(int)
,	O
__readfd	(*(void),*(char),long)->(long)
)	O
;	O
}	O
ssize_t	long
wget_getline	(*(*(char)),*(long),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
char	O
*	O
*	O
buf	*(char)
,	O
size_t	long
*	O
bufsize	long
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
return	O
_getline_internal	(*(*(char)),*(long),*(void),*((*(void),*(char),long)->(long)))->(long)
(	O
buf	*(char)
,	O
bufsize	long
,	O
(	O
void	O
*	O
)	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
__read	(*(void),*(char),long)->(long)
)	O
;	O
}	O
int	O
wget_ready_2_transfer	(int,int,int)->(int)
(	O
int	O
fd	array(int)
,	O
int	O
timeout	int
,	O
int	O
mode	int
)	O
{	O
int	O
rc	int
=	O
-	O
1	int
;	O
struct	O
pollfd	struct(int,short,short)
pollfd	struct(int,short,short)
;	O
pollfd	struct(int,short,short)
.	O
fd	array(int)
=	O
fd	array(int)
;	O
pollfd	struct(int,short,short)
.	O
events	short
=	O
0	int
;	O
pollfd	struct(int,short,short)
.	O
revents	short
=	O
0	int
;	O
if	O
(	O
mode	int
&	O
WGET_IO_READABLE	int
)	O
pollfd	struct(int,short,short)
.	O
events	short
|=	O
POLLIN	int
;	O
if	O
(	O
mode	int
&	O
WGET_IO_WRITABLE	int
)	O
pollfd	struct(int,short,short)
.	O
events	short
|=	O
POLLOUT	int
;	O
if	O
(	O
(	O
rc	int
=	O
poll	(*(struct(int,short,short)),long,int)->(int)
(	O
&	O
pollfd	struct(int,short,short)
,	O
1	int
,	O
timeout	int
)	O
)	O
>	O
0	int
)	O
{	O
rc	int
=	O
0	int
;	O
if	O
(	O
pollfd	struct(int,short,short)
.	O
revents	short
&	O
POLLIN	int
)	O
rc	int
|=	O
WGET_IO_READABLE	int
;	O
if	O
(	O
pollfd	struct(int,short,short)
.	O
revents	short
&	O
POLLOUT	int
)	O
rc	int
|=	O
WGET_IO_WRITABLE	int
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
wget_ready_2_read	(int,int)->(int)
(	O
int	O
fd	array(int)
,	O
int	O
timeout	int
)	O
{	O
return	O
wget_ready_2_transfer	(int,int,int)->(int)
(	O
fd	array(int)
,	O
timeout	int
,	O
WGET_IO_READABLE	int
)	O
>	O
0	int
;	O
}	O
int	O
wget_ready_2_write	(int,int)->(int)
(	O
int	O
fd	array(int)
,	O
int	O
timeout	int
)	O
{	O
return	O
wget_ready_2_transfer	(int,int,int)->(int)
(	O
fd	array(int)
,	O
timeout	int
,	O
WGET_IO_WRITABLE	int
)	O
>	O
0	int
;	O
}	O
char	O
*	O
wget_read_file	(*(char),*(long))->(*(char))
(	O
const	O
char	O
*	O
fname	*(char)
,	O
size_t	long
*	O
size	*(long)
)	O
{	O
ssize_t	long
nread	long
;	O
char	O
*	O
buf	*(char)
=	O
NULL	O
;	O
if	O
(	O
!	O
fname	*(char)
)	O
return	O
NULL	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
fname	*(char)
,	O
"-"	*(char)
)	O
)	O
{	O
int	O
fd	array(int)
;	O
if	O
(	O
(	O
fd	array(int)
=	O
open	(*(char),int)->(int)
(	O
fname	*(char)
,	O
O_RDONLY	int
|	O
O_BINARY	int
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
if	O
(	O
fstat	(int,*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(int)
(	O
fd	array(int)
,	O
&	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
==	O
0	int
)	O
{	O
off_t	long
total	long
=	O
0	int
;	O
if	O
(	O
!	O
(	O
buf	*(char)
=	O
wget_malloc	(long)->(*(void))
(	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
+	O
1	int
)	O
)	O
)	O
{	O
close	(int)->(int)
(	O
fd	array(int)
)	O
;	O
return	O
NULL	O
;	O
}	O
while	O
(	O
total	long
<	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
&&	O
(	O
nread	long
=	O
read	(int,*(void),long)->(long)
(	O
fd	array(int)
,	O
buf	*(char)
+	O
total	long
,	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
-	O
total	long
)	O
)	O
>	O
0	int
)	O
{	O
total	long
+=	O
nread	long
;	O
}	O
buf	*(char)
[	O
total	long
]	O
=	O
0	int
;	O
if	O
(	O
size	*(long)
)	O
*	O
size	*(long)
=	O
total	long
;	O
if	O
(	O
total	long
!=	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
)	O
error_printf	O
(	O
_	O
(	O
"WARNING: Size of %s changed from %lld to %lld while reading. This may lead to unwanted results !\n"	*(char)
)	O
,	O
fname	*(char)
,	O
(	O
long	O
long	O
)	O
st	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
.	O
st_size	long
,	O
(	O
long	O
long	O
)	O
total	long
)	O
;	O
}	O
else	O
error_printf	O
(	O
_	O
(	O
"Failed to fstat %s\n"	*(char)
)	O
,	O
fname	*(char)
)	O
;	O
close	(int)->(int)
(	O
fd	array(int)
)	O
;	O
}	O
else	O
error_printf	O
(	O
_	O
(	O
"Failed to open %s\n"	*(char)
)	O
,	O
fname	*(char)
)	O
;	O
}	O
else	O
{	O
char	O
tmp	array(char)
[	O
4096	int
]	O
;	O
wget_buffer	struct(*(char),long,long,bool,bool,bool)
buffer	struct(*(char),long,long,bool,bool,bool)
;	O
wget_buffer_init	(*(struct(*(char),long,long,bool,bool,bool)),*(char),long)->(int)
(	O
&	O
buffer	struct(*(char),long,long,bool,bool,bool)
,	O
NULL	O
,	O
4096	int
)	O
;	O
while	O
(	O
(	O
nread	long
=	O
read	(int,*(void),long)->(long)
(	O
STDIN_FILENO	int
,	O
tmp	array(char)
,	O
sizeof	O
(	O
tmp	array(char)
)	O
)	O
)	O
>	O
0	int
)	O
{	O
wget_buffer_memcat	(*(struct(*(char),long,long,bool,bool,bool)),*(void),long)->(long)
(	O
&	O
buffer	struct(*(char),long,long,bool,bool,bool)
,	O
tmp	array(char)
,	O
nread	long
)	O
;	O
}	O
if	O
(	O
size	*(long)
)	O
*	O
size	*(long)
=	O
buffer	struct(*(char),long,long,bool,bool,bool)
.	O
length	long
;	O
buf	*(char)
=	O
buffer	struct(*(char),long,long,bool,bool,bool)
.	O
data	*(void)
;	O
buffer	struct(*(char),long,long,bool,bool,bool)
.	O
data	*(void)
=	O
NULL	O
;	O
wget_buffer_deinit	(*(struct(*(char),long,long,bool,bool,bool)))->(void)
(	O
&	O
buffer	struct(*(char),long,long,bool,bool,bool)
)	O
;	O
}	O
return	O
buf	*(char)
;	O
}	O
int	O
wget_update_file	(*(char),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*((*(void),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))))->(int)),*(void))->(int)
(	O
const	O
char	O
*	O
fname	*(char)
,	O
wget_update_load_fn	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
*	O
load_func	*((*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(int))
,	O
wget_update_load_fn	(*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
*	O
save_func	*((*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(int))
,	O
void	O
*	O
context	*(void)
)	O
{	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
const	O
char	O
*	O
tmpdir	*(char)
,	O
*	O
basename	(*(char))->(*(char))
;	O
int	O
lockfd	int
;	O
char	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
[	O
strlen	(*(char))->(long)
(	O
fname	*(char)
)	O
+	O
6	int
+	O
1	int
]	O
;	O
wget_snprintf	(*(char),long,*(char))->(long)
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
sizeof	O
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
,	O
"%sXXXXXX"	*(char)
,	O
fname	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
tmpdir	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"TMPDIR"	*(char)
)	O
)	O
&&	O
!	O
(	O
tmpdir	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"TMP"	*(char)
)	O
)	O
&&	O
!	O
(	O
tmpdir	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"TEMP"	*(char)
)	O
)	O
&&	O
!	O
(	O
tmpdir	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"TEMPDIR"	*(char)
)	O
)	O
)	O
tmpdir	*(char)
=	O
"/tmp"	*(char)
;	O
basename	(*(char))->(*(char))
=	O
base_name	(*(char))->(*(char))
(	O
fname	*(char)
)	O
;	O
if	O
(	O
!	O
basename	(*(char))->(*(char))
)	O
return	O
WGET_E_MEMORY	int
;	O
size_t	long
tmplen	long
=	O
strlen	(*(char))->(long)
(	O
tmpdir	*(char)
)	O
;	O
char	O
*	O
lockfile	*(char)
;	O
if	O
(	O
!	O
tmplen	long
)	O
lockfile	*(char)
=	O
wget_aprintf	(*(char))->(*(char))
(	O
"%s_lck_%u"	*(char)
,	O
basename	(*(char))->(*(char))
,	O
(	O
unsigned	O
)	O
getuid	()->(int)
(	O
)	O
)	O
;	O
else	O
lockfile	*(char)
=	O
wget_aprintf	(*(char))->(*(char))
(	O
"%s/%s_lck_%u"	*(char)
,	O
tmpdir	*(char)
,	O
basename	(*(char))->(*(char))
,	O
(	O
unsigned	O
)	O
getuid	()->(int)
(	O
)	O
)	O
;	O
xfree	O
(	O
basename	(*(char))->(*(char))
)	O
;	O
if	O
(	O
!	O
lockfile	*(char)
)	O
return	O
WGET_E_MEMORY	int
;	O
if	O
(	O
(	O
lockfd	int
=	O
open	(*(char),int)->(int)
(	O
lockfile	*(char)
,	O
O_WRONLY	int
|	O
O_CREAT	int
,	O
S_IRUSR	O
|	O
S_IWUSR	O
|	O
S_IRGRP	O
|	O
S_IROTH	O
)	O
)	O
==	O
-	O
1	int
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to create '%s' (%d)\n"	*(char)
)	O
,	O
lockfile	*(char)
,	O
errno	O
)	O
;	O
xfree	O
(	O
lockfile	*(char)
)	O
;	O
return	O
WGET_E_OPEN	int
;	O
}	O
if	O
(	O
flock	struct(short,short,long,long,int)
(	O
lockfd	int
,	O
LOCK_EX	int
)	O
==	O
-	O
1	int
)	O
{	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to lock '%s' (%d)\n"	*(char)
)	O
,	O
lockfile	*(char)
,	O
errno	O
)	O
;	O
xfree	O
(	O
lockfile	*(char)
)	O
;	O
return	O
WGET_E_IO	int
;	O
}	O
xfree	O
(	O
lockfile	*(char)
)	O
;	O
if	O
(	O
load_func	*((*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(int))
)	O
{	O
if	O
(	O
!	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fname	*(char)
,	O
"r"	*(char)
)	O
)	O
)	O
{	O
if	O
(	O
errno	O
!=	O
ENOENT	int
)	O
{	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to read open '%s' (%d)\n"	*(char)
)	O
,	O
fname	*(char)
,	O
errno	O
)	O
;	O
return	O
WGET_E_OPEN	int
;	O
}	O
}	O
if	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
if	O
(	O
load_func	*((*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(int))
(	O
context	*(void)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
return	O
WGET_E_UNKNOWN	int
;	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
if	O
(	O
save_func	*((*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(int))
)	O
{	O
int	O
fd	array(int)
;	O
if	O
(	O
(	O
fd	array(int)
=	O
mkstemp	(*(char))->(int)
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
)	O
==	O
-	O
1	int
)	O
{	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to open tmpfile '%s' (%d)\n"	*(char)
)	O
,	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
errno	O
)	O
;	O
return	O
WGET_E_OPEN	int
;	O
}	O
if	O
(	O
!	O
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fdopen	(int,*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
fd	array(int)
,	O
"w"	*(char)
)	O
)	O
)	O
{	O
unlink	(*(char))->(int)
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
close	(int)->(int)
(	O
fd	array(int)
)	O
;	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to write open '%s' (%d)\n"	*(char)
)	O
,	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
errno	O
)	O
;	O
return	O
WGET_E_OPEN	int
;	O
}	O
if	O
(	O
save_func	*((*(void),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))->(int))
(	O
context	*(void)
,	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
unlink	(*(char))->(int)
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
return	O
WGET_E_UNKNOWN	int
;	O
}	O
if	O
(	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
unlink	(*(char))->(int)
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to write/close '%s' (%d)\n"	*(char)
)	O
,	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
errno	O
)	O
;	O
return	O
WGET_E_IO	int
;	O
}	O
if	O
(	O
rename	(*(char),*(char))->(int)
(	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
fname	*(char)
)	O
==	O
-	O
1	int
)	O
{	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Failed to rename '%s' to '%s' (%d)\n"	*(char)
)	O
,	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
fname	*(char)
,	O
errno	O
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Take manually care for '%s'\n"	*(char)
)	O
,	O
tmpfile	()->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
return	O
WGET_E_IO	int
;	O
}	O
debug_printf	O
(	O
"Successfully updated '%s'.\n"	*(char)
,	O
fname	*(char)
)	O
;	O
}	O
close	(int)->(int)
(	O
lockfd	int
)	O
;	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
int	O
wget_truncate	(*(char),long)->(int)
(	O
const	O
char	O
*	O
path	*(char)
,	O
off_t	long
length	long
)	O
{	O
int	O
fd	array(int)
,	O
rc	int
;	O
if	O
(	O
!	O
path	*(char)
)	O
return	O
WGET_E_INVALID	int
;	O
if	O
(	O
(	O
fd	array(int)
=	O
open	(*(char),int)->(int)
(	O
path	*(char)
,	O
O_RDWR	int
|	O
O_BINARY	int
)	O
)	O
==	O
-	O
1	int
)	O
return	O
WGET_E_OPEN	int
;	O
rc	int
=	O
ftruncate	(int,long)->(int)
(	O
fd	array(int)
,	O
length	long
)	O
;	O
close	(int)->(int)
(	O
fd	array(int)
)	O
;	O
return	O
rc	int
?	O
WGET_E_IO	int
:	O
WGET_E_SUCCESS	int
;	O
}	O
