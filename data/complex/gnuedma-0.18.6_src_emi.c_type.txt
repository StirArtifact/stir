ESint32	long
EDMAPROC	O
edma_get_EMI_handler	(*(char))->(long)
(	O
EPChar	*(char)
handler_name	*(char)
)	O
{	O
return	O
edma_subsystem_get_item	(long,*(char))->(long)
(	O
SS_EMI	int
,	O
handler_name	*(char)
)	O
;	O
}	O
ESint32	long
EDMAPROC	O
edma_add_EMI_handler	(*(char),*(char))->(long)
(	O
EPChar	*(char)
handler_name	*(char)
,	O
EPChar	*(char)
class_name	*(char)
)	O
{	O
return	O
edma_subsystem_add_item	(long,*(char),*(char))->(long)
(	O
SS_EMI	int
,	O
handler_name	*(char)
,	O
class_name	*(char)
)	O
;	O
}	O
EUint32	long
EDMAPROC	O
edma_hook_get_class	(long)->(long)
(	O
CLASSID	long
IdClass	long
)	O
{	O
if	O
(	O
(	O
edma_check_class_id	(long,*(char))->(long)
(	O
IdClass	long
,	O
"edma_hook_get_class"	*(char)
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
GVar	*(struct(long,long,long,long,long,long,long,long,long,array(struct(array(char),long)),array(struct(array(char),long)),long,long,array(char),*(struct(long,long,array(char),long,long,long,char,char)),long,long,long,union(struct(int,int,int,int,int,union(struct`,struct`)),array(char),long),array(struct(long,long,array(char))),long,long,long))
->	O
GetClassEMI	long
=	O
IdClass	long
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_get_EMI_num_handlers	()->(long)
(	O
void	O
)	O
{	O
return	O
edma_subsystem_get_num_items	(long)->(long)
(	O
SS_EMI	int
)	O
;	O
}	O
CLASSID	long
EDMAPROC	O
edma_get_EMI_handler_class	(long)->(long)
(	O
ESint32	long
i	long
)	O
{	O
return	O
edma_subsystem_get_item_class	(long,long)->(long)
(	O
SS_EMI	int
,	O
i	long
)	O
;	O
}	O
