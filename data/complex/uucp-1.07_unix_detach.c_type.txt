void	O
usysdep_detach	()->(void)
(	O
)	O
{	O
pid_t	int
igrp	int
;	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_NORMAL	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
igrp	int
=	O
getpgrp	()->(int)
(	O
)	O
;	O
if	O
(	O
igrp	int
==	O
getpid	()->(int)
(	O
)	O
)	O
{	O
boolean	int
fignored	int
;	O
pid_t	int
ipid	int
;	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGHUP	int
,	O
SIG_IGN	O
,	O
FALSE	O
,	O
&	O
fignored	int
)	O
;	O
ipid	int
=	O
ixsfork	()->(int)
(	O
)	O
;	O
if	O
(	O
ipid	int
<	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"fork: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
ipid	int
!=	O
0	int
)	O
_exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
while	O
(	O
getppid	()->(int)
(	O
)	O
!=	O
1	int
)	O
sleep	(int)->(int)
(	O
1	int
)	O
;	O
ipid	int
=	O
getpid	()->(int)
(	O
)	O
;	O
ulog_id	(int)->(void)
(	O
ipid	int
)	O
;	O
if	O
(	O
!	O
fignored	int
)	O
usset_signal	(int,*((int)->(void)),int,*(int))->(void)
(	O
SIGHUP	int
,	O
ussignal	(int)->(void)
,	O
TRUE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
DEBUG_MESSAGE2	O
(	O
DEBUG_PORT	O
,	O
"usysdep_detach: Forked; old PID %ld, new pid %ld"	*(char)
,	O
(	O
long	O
)	O
igrp	int
,	O
(	O
long	O
)	O
ipid	int
)	O
;	O
}	O
(	O
void	O
)	O
close	(int)->(int)
(	O
0	int
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
1	int
)	O
;	O
(	O
void	O
)	O
close	(int)->(int)
(	O
2	int
)	O
;	O
if	O
(	O
open	(*(char),int)->(int)
(	O
(	O
char	O
*	O
)	O
"/dev/null"	*(char)
,	O
O_RDONLY	int
)	O
!=	O
0	int
||	O
open	(*(char),int)->(int)
(	O
(	O
char	O
*	O
)	O
"/dev/null"	*(char)
,	O
O_WRONLY	int
)	O
!=	O
1	int
||	O
open	(*(char),int)->(int)
(	O
(	O
char	O
*	O
)	O
"/dev/null"	*(char)
,	O
O_WRONLY	int
)	O
!=	O
2	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_FATAL	int
,	O
"open (/dev/null): %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
setsid	()->(int)
(	O
)	O
<	O
0	int
)	O
ulog	(enum(int,int,int,int,int,int,int),*(char))->(void)
(	O
LOG_ERROR	int
,	O
"setsid: %s"	*(char)
,	O
strerror	(int)->(*(char))
(	O
errno	O
)	O
)	O
;	O
}	O
