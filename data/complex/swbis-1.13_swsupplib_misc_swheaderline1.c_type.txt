void	O
swheaderline_set_level	(*(char),int)->(void)
(	O
char	O
*	O
outputline	*(char)
,	O
int	O
level	int
)	O
{	O
char	O
slev	array(char)
[	O
4	int
]	O
;	O
char	O
*	O
p	*(char)
=	O
swheaderline_get_type_pointer	(*(char))->(*(char))
(	O
outputline	*(char)
)	O
;	O
if	O
(	O
p	*(char)
)	O
{	O
snprintf	(*(char),long,*(char))->(int)
(	O
slev	array(char)
,	O
sizeof	O
(	O
slev	array(char)
)	O
,	O
"%02d"	*(char)
,	O
level	int
)	O
;	O
slev	array(char)
[	O
sizeof	O
(	O
slev	array(char)
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
p	*(char)
+	O
1	int
,	O
slev	array(char)
,	O
2	int
)	O
;	O
}	O
}	O
int	O
swheaderline_write_debug	(*(char),int)->(int)
(	O
char	O
*	O
line	*(char)
,	O
int	O
fd	int
)	O
{	O
int	O
i	int
,	O
ret	int
;	O
char	O
*	O
p	*(char)
;	O
char	O
*	O
keyw	*(char)
=	O
swheaderline_get_keyword	(*(char))->(*(char))
(	O
line	*(char)
)	O
;	O
char	O
*	O
value	int
=	O
swheaderline_get_value	(*(char),*(int))->(*(char))
(	O
line	*(char)
,	O
&	O
i	int
)	O
;	O
int	O
level	int
=	O
swheaderline_get_level	(*(char))->(int)
(	O
line	*(char)
)	O
;	O
if	O
(	O
!	O
strlen	(*(char))->(long)
(	O
value	int
)	O
)	O
{	O
ret	int
=	O
swparse_write_attribute_obj	(int,*(char),int,int)->(int)
(	O
fd	int
,	O
keyw	*(char)
,	O
level	int
,	O
1	int
)	O
;	O
}	O
else	O
{	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
value	int
,	O
(	O
int	O
)	O
'\n'	O
)	O
;	O
if	O
(	O
!	O
p	*(char)
)	O
{	O
p	*(char)
=	O
value	int
+	O
strlen	(*(char))->(long)
(	O
value	int
)	O
;	O
}	O
*	O
p	*(char)
=	O
'\0'	O
;	O
ret	int
=	O
swparse_write_attribute_att	(int,*(char),*(char),int,int)->(int)
(	O
fd	int
,	O
keyw	*(char)
,	O
value	int
,	O
level	int
,	O
1	int
)	O
;	O
*	O
p	*(char)
=	O
(	O
char	O
)	O
'\n'	O
;	O
}	O
return	O
ret	int
;	O
}	O
