local	O
int	O
gz_init	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
)	O
;	O
local	O
int	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
,	O
int	O
)	O
)	O
;	O
local	O
int	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
,	O
z_off64_t	O
)	O
)	O
;	O
local	O
z_size_t	long
gz_write	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
OF	O
(	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
,	O
voidpc	*(void)
,	O
z_size_t	long
)	O
)	O
;	O
local	O
int	O
gz_init	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
{	O
int	O
ret	int
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
=	O
(	O
unsigned	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
state	*(struct)
->	O
want	int
<<	O
1	int
)	O
;	O
if	O
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
==	O
NULL	O
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_MEM_ERROR	O
,	O
"out of memory"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
state	*(struct)
->	O
direct	int
)	O
{	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
=	O
(	O
unsigned	O
char	O
*	O
)	O
malloc	(long)->(*(void))
(	O
state	*(struct)
->	O
want	int
)	O
;	O
if	O
(	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
==	O
NULL	O
)	O
{	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_MEM_ERROR	O
,	O
"out of memory"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
zalloc	*((*(void),int,int)->(*(void)))
=	O
Z_NULL	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
zfree	*((*(void),*(void))->(void))
=	O
Z_NULL	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
opaque	*(void)
=	O
Z_NULL	int
;	O
ret	int
=	O
deflateInit2	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
,	O
state	*(struct)
->	O
level	int
,	O
Z_DEFLATED	int
,	O
MAX_WBITS	int
+	O
16	int
,	O
DEF_MEM_LEVEL	int
,	O
state	*(struct)
->	O
strategy	int
)	O
;	O
if	O
(	O
ret	int
!=	O
Z_OK	int
)	O
{	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_MEM_ERROR	O
,	O
"out of memory"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
=	O
NULL	O
;	O
}	O
state	*(struct)
->	O
size	int
=	O
state	*(struct)
->	O
want	int
;	O
if	O
(	O
!	O
state	*(struct)
->	O
direct	int
)	O
{	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
=	O
state	*(struct)
->	O
size	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
;	O
}	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
flush	int
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
int	O
flush	int
;	O
{	O
int	O
ret	int
,	O
writ	int
;	O
unsigned	O
have	int
,	O
put	int
,	O
max	int
=	O
(	O
(	O
unsigned	O
)	O
-	O
1	int
>>	O
2	int
)	O
+	O
1	int
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
state	*(struct)
->	O
size	int
==	O
0	int
&&	O
gz_init	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
direct	int
)	O
{	O
while	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
{	O
put	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
>	O
max	int
?	O
max	int
:	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
;	O
writ	int
=	O
write	(int,*(void),long)->(long)
(	O
state	*(struct)
->	O
fd	int
,	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
,	O
put	int
)	O
;	O
if	O
(	O
writ	int
<	O
0	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_ERRNO	O
,	O
zstrerror	O
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
-=	O
(	O
unsigned	O
)	O
writ	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
+=	O
writ	int
;	O
}	O
return	O
0	int
;	O
}	O
ret	int
=	O
Z_OK	int
;	O
do	O
{	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
==	O
0	int
||	O
(	O
flush	int
!=	O
Z_NO_FLUSH	int
&&	O
(	O
flush	int
!=	O
Z_FINISH	int
||	O
ret	int
==	O
Z_STREAM_END	int
)	O
)	O
)	O
{	O
while	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
>	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
)	O
{	O
put	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
-	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
>	O
(	O
int	O
)	O
max	int
?	O
max	int
:	O
(	O
unsigned	O
)	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
-	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
)	O
;	O
writ	int
=	O
write	(int,*(void),long)->(long)
(	O
state	*(struct)
->	O
fd	int
,	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
,	O
put	int
)	O
;	O
if	O
(	O
writ	int
<	O
0	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_ERRNO	O
,	O
zstrerror	O
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
+=	O
writ	int
;	O
}	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
==	O
0	int
)	O
{	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
=	O
state	*(struct)
->	O
size	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_out	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
next	*(char)
=	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
;	O
}	O
}	O
have	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
;	O
ret	int
=	O
deflate	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)),int)->(int)
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
,	O
flush	int
)	O
;	O
if	O
(	O
ret	int
==	O
Z_STREAM_ERROR	O
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_STREAM_ERROR	O
,	O
"internal error: deflate stream corrupt"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
have	int
-=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_out	int
;	O
}	O
while	O
(	O
have	int
)	O
;	O
if	O
(	O
flush	int
==	O
Z_FINISH	int
)	O
deflateReset	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))->(int)
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
return	O
0	int
;	O
}	O
local	O
int	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
len	int
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
z_off64_t	O
len	int
;	O
{	O
int	O
first	int
;	O
unsigned	O
n	int
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
&&	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_NO_FLUSH	int
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
first	int
=	O
1	int
;	O
while	O
(	O
len	int
)	O
{	O
n	int
=	O
GT_OFF	O
(	O
state	*(struct)
->	O
size	int
)	O
||	O
(	O
z_off64_t	O
)	O
state	*(struct)
->	O
size	int
>	O
len	int
?	O
(	O
unsigned	O
)	O
len	int
:	O
state	*(struct)
->	O
size	int
;	O
if	O
(	O
first	int
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
,	O
0	int
,	O
n	int
)	O
;	O
first	int
=	O
0	int
;	O
}	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
=	O
n	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
n	int
;	O
if	O
(	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_NO_FLUSH	int
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
len	int
-=	O
n	int
;	O
}	O
return	O
0	int
;	O
}	O
local	O
z_size_t	long
gz_write	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
voidpc	*(void)
buf	*(void)
;	O
z_size_t	long
len	int
;	O
{	O
z_size_t	long
put	int
=	O
len	int
;	O
if	O
(	O
len	int
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
state	*(struct)
->	O
size	int
==	O
0	int
&&	O
gz_init	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
}	O
if	O
(	O
len	int
<	O
state	*(struct)
->	O
size	int
)	O
{	O
do	O
{	O
unsigned	O
have	int
,	O
copy	int
;	O
if	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
==	O
0	int
)	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
next_in	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
have	int
=	O
(	O
unsigned	O
)	O
(	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
next_in	*(char)
+	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
)	O
-	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
copy	int
=	O
state	*(struct)
->	O
size	int
-	O
have	int
;	O
if	O
(	O
copy	int
>	O
len	int
)	O
copy	int
=	O
len	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
+	O
have	int
,	O
buf	*(void)
,	O
copy	int
)	O
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
+=	O
copy	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
copy	int
;	O
buf	*(void)
=	O
(	O
const	O
char	O
*	O
)	O
buf	*(void)
+	O
copy	int
;	O
len	int
-=	O
copy	int
;	O
if	O
(	O
len	int
&&	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_NO_FLUSH	int
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
}	O
while	O
(	O
len	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
&&	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_NO_FLUSH	int
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
next_in	*(char)
=	O
(	O
z_const	O
Bytef	char
*	O
)	O
buf	*(void)
;	O
do	O
{	O
unsigned	O
n	int
=	O
(	O
unsigned	O
)	O
-	O
1	int
;	O
if	O
(	O
n	int
>	O
len	int
)	O
n	int
=	O
len	int
;	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
.	O
avail_in	int
=	O
n	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
n	int
;	O
if	O
(	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_NO_FLUSH	int
)	O
==	O
-	O
1	int
)	O
return	O
0	int
;	O
len	int
-=	O
n	int
;	O
}	O
while	O
(	O
len	int
)	O
;	O
}	O
return	O
put	int
;	O
}	O
int	O
ZEXPORT	O
gzwrite	(*(struct),*(void),int)->(int)
(	O
file	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
gzFile	*(struct)
file	*(struct)
;	O
voidpc	*(void)
buf	*(void)
;	O
unsigned	O
len	int
;	O
{	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
0	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
0	int
;	O
if	O
(	O
(	O
int	O
)	O
len	int
<	O
0	int
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_DATA_ERROR	O
,	O
"requested length does not fit in int"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
return	O
(	O
int	O
)	O
gz_write	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
;	O
}	O
z_size_t	long
ZEXPORT	O
gzfwrite	(*(void),long,long,*(struct))->(long)
(	O
buf	*(void)
,	O
size	int
,	O
nitems	long
,	O
file	*(struct)
)	O
voidpc	*(void)
buf	*(void)
;	O
z_size_t	long
size	int
;	O
z_size_t	long
nitems	long
;	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
z_size_t	long
len	int
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
0	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
0	int
;	O
len	int
=	O
nitems	long
*	O
size	int
;	O
if	O
(	O
size	int
&&	O
len	int
/	O
size	int
!=	O
nitems	long
)	O
{	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_STREAM_ERROR	O
,	O
"request does not fit in a size_t"	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
return	O
len	int
?	O
gz_write	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
len	int
)	O
/	O
size	int
:	O
0	int
;	O
}	O
int	O
ZEXPORT	O
gzputc	(*(struct),int)->(int)
(	O
file	*(struct)
,	O
c	int
)	O
gzFile	*(struct)
file	*(struct)
;	O
int	O
c	int
;	O
{	O
unsigned	O
have	int
;	O
unsigned	O
char	O
buf	*(void)
[	O
1	int
]	O
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
state	*(struct)
->	O
size	int
)	O
{	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
==	O
0	int
)	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
have	int
=	O
(	O
unsigned	O
)	O
(	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
+	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
-	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
if	O
(	O
have	int
<	O
state	*(struct)
->	O
size	int
)	O
{	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
[	O
have	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
c	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
++	O
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
++	O
;	O
return	O
c	int
&	O
0xff	int
;	O
}	O
}	O
buf	*(void)
[	O
0	int
]	O
=	O
(	O
unsigned	O
char	O
)	O
c	int
;	O
if	O
(	O
gz_write	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
buf	*(void)
,	O
1	int
)	O
!=	O
1	int
)	O
return	O
-	O
1	int
;	O
return	O
c	int
&	O
0xff	int
;	O
}	O
int	O
ZEXPORT	O
gzputs	(*(struct),*(char))->(int)
(	O
file	*(struct)
,	O
str	*(char)
)	O
gzFile	*(struct)
file	*(struct)
;	O
const	O
char	O
*	O
str	*(char)
;	O
{	O
int	O
ret	int
;	O
z_size_t	long
len	int
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
-	O
1	int
;	O
len	int
=	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
;	O
ret	int
=	O
gz_write	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),*(void),long)->(long)
(	O
state	*(struct)
,	O
str	*(char)
,	O
len	int
)	O
;	O
return	O
ret	int
==	O
0	int
&&	O
len	int
!=	O
0	int
?	O
-	O
1	int
:	O
ret	int
;	O
}	O
int	O
ZEXPORTVA	O
gzvprintf	(*(struct(int,*(char),long)),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
gzFile	*(struct)
file	*(struct)
,	O
const	O
char	O
*	O
format	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
va	array(struct(int,int,*(void),*(void)))
)	O
{	O
int	O
len	int
;	O
unsigned	O
left	int
;	O
char	O
*	O
next	*(char)
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
Z_STREAM_ERROR	O
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
Z_STREAM_ERROR	O
;	O
if	O
(	O
state	*(struct)
->	O
size	int
==	O
0	int
&&	O
gz_init	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))))->(int)
(	O
state	*(struct)
)	O
==	O
-	O
1	int
)	O
return	O
state	*(struct)
->	O
err	int
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
state	*(struct)
->	O
err	int
;	O
}	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
==	O
0	int
)	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
next	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
+	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
-	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
+	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
)	O
;	O
next	*(char)
[	O
state	*(struct)
->	O
size	int
-	O
1	int
]	O
=	O
0	int
;	O
len	int
=	O
vsnprintf	(*(char),long,*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
next	*(char)
,	O
state	*(struct)
->	O
size	int
,	O
format	*(char)
,	O
va	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
len	int
==	O
0	int
||	O
(	O
unsigned	O
)	O
len	int
>=	O
state	*(struct)
->	O
size	int
||	O
next	*(char)
[	O
state	*(struct)
->	O
size	int
-	O
1	int
]	O
!=	O
0	int
)	O
return	O
0	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
+=	O
(	O
unsigned	O
)	O
len	int
;	O
state	*(struct)
->	O
x	struct(int,*(char),long)
.	O
pos	long
+=	O
len	int
;	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
>=	O
state	*(struct)
->	O
size	int
)	O
{	O
left	int
=	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
-	O
state	*(struct)
->	O
size	int
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
=	O
state	*(struct)
->	O
size	int
;	O
if	O
(	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_NO_FLUSH	int
)	O
==	O
-	O
1	int
)	O
return	O
state	*(struct)
->	O
err	int
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
,	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
+	O
state	*(struct)
->	O
size	int
,	O
left	int
)	O
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
next_in	*(char)
=	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
=	O
left	int
;	O
}	O
return	O
len	int
;	O
}	O
int	O
ZEXPORTVA	O
gzprintf	(*(struct),*(char))->(int)
(	O
gzFile	*(struct)
file	*(struct)
,	O
const	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
va	array(struct(int,int,*(void),*(void)))
;	O
int	O
ret	int
;	O
va_start	O
(	O
va	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
ret	int
=	O
gzvprintf	(*(struct(int,*(char),long)),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
file	*(struct)
,	O
format	*(char)
,	O
va	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
va	array(struct(int,int,*(void),*(void)))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
ZEXPORT	O
gzflush	(*(struct),int)->(int)
(	O
file	*(struct)
,	O
flush	int
)	O
gzFile	*(struct)
file	*(struct)
;	O
int	O
flush	int
;	O
{	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
Z_STREAM_ERROR	O
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
Z_STREAM_ERROR	O
;	O
if	O
(	O
flush	int
<	O
0	int
||	O
flush	int
>	O
Z_FINISH	int
)	O
return	O
Z_STREAM_ERROR	O
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
state	*(struct)
->	O
err	int
;	O
}	O
(	O
void	O
)	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
flush	int
)	O
;	O
return	O
state	*(struct)
->	O
err	int
;	O
}	O
int	O
ZEXPORT	O
gzsetparams	(*(struct),int,int)->(int)
(	O
file	*(struct)
,	O
level	int
,	O
strategy	int
)	O
gzFile	*(struct)
file	*(struct)
;	O
int	O
level	int
;	O
int	O
strategy	int
;	O
{	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
z_streamp	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
Z_STREAM_ERROR	O
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
=	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
||	O
state	*(struct)
->	O
err	int
!=	O
Z_OK	int
)	O
return	O
Z_STREAM_ERROR	O
;	O
if	O
(	O
level	int
==	O
state	*(struct)
->	O
level	int
&&	O
strategy	int
==	O
state	*(struct)
->	O
strategy	int
)	O
return	O
Z_OK	int
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
return	O
state	*(struct)
->	O
err	int
;	O
}	O
if	O
(	O
state	*(struct)
->	O
size	int
)	O
{	O
if	O
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
->	O
avail_in	int
&&	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_BLOCK	int
)	O
==	O
-	O
1	int
)	O
return	O
state	*(struct)
->	O
err	int
;	O
deflateParams	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)),int,int)->(int)
(	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
,	O
level	int
,	O
strategy	int
)	O
;	O
}	O
state	*(struct)
->	O
level	int
=	O
level	int
;	O
state	*(struct)
->	O
strategy	int
=	O
strategy	int
;	O
return	O
Z_OK	int
;	O
}	O
int	O
ZEXPORT	O
gzclose_w	(*(struct))->(int)
(	O
file	*(struct)
)	O
gzFile	*(struct)
file	*(struct)
;	O
{	O
int	O
ret	int
=	O
Z_OK	int
;	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
state	*(struct)
;	O
if	O
(	O
file	*(struct)
==	O
NULL	O
)	O
return	O
Z_STREAM_ERROR	O
;	O
state	*(struct)
=	O
(	O
gz_statep	*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))
)	O
file	*(struct)
;	O
if	O
(	O
state	*(struct)
->	O
mode	*(char)
!=	O
GZ_WRITE	int
)	O
return	O
Z_STREAM_ERROR	O
;	O
if	O
(	O
state	*(struct)
->	O
seek	int
)	O
{	O
state	*(struct)
->	O
seek	int
=	O
0	int
;	O
if	O
(	O
gz_zero	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),long)->(int)
(	O
state	*(struct)
,	O
state	*(struct)
->	O
skip	long
)	O
==	O
-	O
1	int
)	O
ret	int
=	O
state	*(struct)
->	O
err	int
;	O
}	O
if	O
(	O
gz_comp	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int)->(int)
(	O
state	*(struct)
,	O
Z_FINISH	int
)	O
==	O
-	O
1	int
)	O
ret	int
=	O
state	*(struct)
->	O
err	int
;	O
if	O
(	O
state	*(struct)
->	O
size	int
)	O
{	O
if	O
(	O
!	O
state	*(struct)
->	O
direct	int
)	O
{	O
(	O
void	O
)	O
deflateEnd	(*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long)))->(int)
(	O
&	O
(	O
state	*(struct)
->	O
strm	*(struct(*(char),int,long,*(char),int,long,*(char),*(struct),*((*(void),int,int)->(*(void))),*((*(void),*(void))->(void)),*(void),int,long,long))
)	O
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
out	*((*(void),*(char),int)->(int))
)	O
;	O
}	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
in	*((*(void),*(*(char)))->(int))
)	O
;	O
}	O
gz_error	(*(struct(struct(int,*(char),long),int,int,*(char),int,int,*(char),*(char),int,int,long,int,int,int,int,long,int,int,*(char),struct(*(char),int,long,*(char),int,long,*(char),*(struct`),*((*`,int,int)->(*`)),*((*`,*`)->(void)),*(void),int,long,long))),int,*(char))->(void)
(	O
state	*(struct)
,	O
Z_OK	int
,	O
NULL	O
)	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
->	O
path	*(char)
)	O
;	O
if	O
(	O
close	(int)->(int)
(	O
state	*(struct)
->	O
fd	int
)	O
==	O
-	O
1	int
)	O
ret	int
=	O
Z_ERRNO	O
;	O
free	(*(void))->(void)
(	O
state	*(struct)
)	O
;	O
return	O
ret	int
;	O
}	O
