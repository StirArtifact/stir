void	O
ldversion	O
(	O
int	O
noisy	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"GNU ld %s\n"	*(char)
)	O
,	O
BFD_VERSION_STRING	O
)	O
;	O
if	O
(	O
noisy	O
&	O
2	int
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Copyright (C) 2020 Free Software Foundation, Inc.\n"	*(char)
)	O
)	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"This program is free software; you may redistribute it under the terms of\nthe GNU General Public License version 3 or (at your option) a later version.\nThis program has absolutely no warranty.\n"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
noisy	O
&	O
1	int
)	O
{	O
ld_emulation_xfer_type	O
*	O
*	O
ptr	*(*(char))
=	O
ld_emulations	O
;	O
printf	(*(char))->(int)
(	O
_	O
(	O
"  Supported emulations:\n"	*(char)
)	O
)	O
;	O
while	O
(	O
*	O
ptr	*(*(char))
)	O
{	O
printf	(*(char))->(int)
(	O
"   %s\n"	*(char)
,	O
(	O
*	O
ptr	*(*(char))
)	O
->	O
emulation_name	O
)	O
;	O
ptr	*(*(char))
++	O
;	O
}	O
}	O
}	O
