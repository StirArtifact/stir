int	O
mu_smtp_cmd	(*(struct),int,*(*(char)))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
int	O
status	int
,	O
i	int
;	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
MU_SMTP_FISSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_ERR	int
)	O
)	O
return	O
MU_ERR_FAILURE	O
;	O
status	int
=	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
smtp	*(struct)
,	O
"%s"	*(char)
,	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
status	int
=	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
smtp	*(struct)
,	O
" %s"	*(char)
,	O
argv	*(*(char))
[	O
i	int
]	O
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
}	O
status	int
=	O
mu_smtp_write	(*(struct),*(char))->(int)
(	O
smtp	*(struct)
,	O
"\r\n"	*(char)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
status	int
=	O
mu_smtp_response	(*(struct))->(int)
(	O
smtp	*(struct)
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	*(struct)
,	O
status	int
)	O
;	O
if	O
(	O
smtp	*(struct)
->	O
replcode	array(char)
[	O
0	int
]	O
>	O
'3'	O
)	O
return	O
MU_ERR_REPLY	O
;	O
return	O
0	int
;	O
}	O
