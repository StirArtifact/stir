int	O
mu_smtp_set_secret	(*(struct),*(struct))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
mu_secret_t	*(struct)
secret	*(struct)
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
{	O
if	O
(	O
MU_SMTP_FISSET	O
(	O
smtp	*(struct)
,	O
_MU_SMTP_CLNPASS	int
)	O
)	O
mu_secret_password_unref	(*(struct))->(void)
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
mu_secret_destroy	(*(*(struct)))->(void)
(	O
&	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
}	O
if	O
(	O
!	O
secret	*(struct)
)	O
return	O
0	int
;	O
return	O
mu_secret_dup	(*(struct),*(*(struct)))->(int)
(	O
secret	*(struct)
,	O
&	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
}	O
int	O
mu_smtp_get_secret	(*(struct),*(*(struct)))->(int)
(	O
mu_smtp_t	*(struct)
smtp	*(struct)
,	O
mu_secret_t	*(struct)
*	O
secret	*(struct)
)	O
{	O
if	O
(	O
!	O
smtp	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
return	O
MU_ERR_NOENT	O
;	O
*	O
secret	*(struct)
=	O
smtp	*(struct)
->	O
secret	*(struct)
;	O
mu_secret_ref	(*(struct))->(void)
(	O
smtp	*(struct)
->	O
secret	*(struct)
)	O
;	O
return	O
0	int
;	O
}	O
