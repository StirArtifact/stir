char	O
*	O
program_name	*(char)
;	O
int	O
debugging_enabled	int
=	O
0	int
;	O
int	O
ahz	int
=	O
AHZ	int
;	O
void	O
give_usage	()->(void)
(	O
void	O
)	O
{	O
printf	(*(char))->(int)
(	O
"Usage: %s [-hrR] [-n <recs>] <files>\n          [--num <recs>] [--raw] [--reverse] [--help]\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"          [--format <version>] [--byteswap]\n"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"          [--ahz <freq>]\n"	*(char)
)	O
;	O
print_acct_file_location	()->(void)
(	O
)	O
;	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
c	int
;	O
int	O
backwards_flag	int
=	O
0	int
;	O
long	O
num_lines_to_print	long
=	O
-	O
1	int
;	O
int	O
raw	int
=	O
0	int
;	O
int	O
version	int
=	O
-	O
1	int
;	O
int	O
byteswap	int
=	O
0	int
;	O
size_t	long
size	long
;	O
static	O
struct	O
acct	struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)
buf	struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)
;	O
program_name	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
while	O
(	O
1	int
)	O
{	O
int	O
option_index	int
=	O
0	int
;	O
static	O
struct	O
option	struct(*(char),int,*(int),int)
long_options	array(struct(*(char),int,*(int),int))
[	O
]	O
=	O
{	O
{	O
"reverse"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
"help"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
"num"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
3	int
}	O
,	O
{	O
"raw"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
4	int
}	O
,	O
{	O
"ahz"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
5	int
}	O
,	O
{	O
"format"	*(char)
,	O
required_argument	int
,	O
NULL	O
,	O
6	int
}	O
,	O
{	O
"byteswap"	*(char)
,	O
no_argument	int
,	O
NULL	O
,	O
7	int
}	O
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
}	O
,	O
}	O
;	O
c	int
=	O
getopt_long	(int,*(*(char)),*(char),*(struct(*(char),int,*(int),int)),*(int))->(int)
(	O
argc	int
,	O
argv	array(*(char))
,	O
"rhn:R"	*(char)
,	O
long_options	array(struct(*(char),int,*(int),int))
,	O
&	O
option_index	int
)	O
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
break	O
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
'r'	O
:	O
case	O
1	int
:	O
backwards_flag	int
=	O
1	int
;	O
break	O
;	O
case	O
'h'	O
:	O
case	O
2	int
:	O
give_usage	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
case	O
'n'	O
:	O
case	O
3	int
:	O
num_lines_to_print	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
num_lines_to_print	long
<	O
1	int
)	O
fatal	(*(char))->(void)
(	O
"number of lines to print must be positive and non-zero"	*(char)
)	O
;	O
break	O
;	O
case	O
'R'	O
:	O
case	O
4	int
:	O
raw	int
=	O
1	int
;	O
break	O
;	O
case	O
5	int
:	O
ahz	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
ahz	int
<	O
1	int
)	O
{	O
(	O
void	O
)	O
printf	(*(char))->(int)
(	O
"%s: AHZ must be one or greater\n"	*(char)
,	O
program_name	*(char)
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
break	O
;	O
case	O
6	int
:	O
if	O
(	O
optarg	*(char)
[	O
0	int
]	O
==	O
'v'	O
)	O
optarg	*(char)
++	O
;	O
version	int
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
optarg	*(char)
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
break	O
;	O
case	O
7	int
:	O
byteswap	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
optind	int
>=	O
argc	int
)	O
{	O
give_usage	()->(void)
(	O
)	O
;	O
exit	(int)->(void)
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
pacct_init	(int)->(void)
(	O
backwards_flag	int
)	O
;	O
while	O
(	O
optind	int
<	O
argc	int
)	O
add_pacct_file	(*(char))->(void)
(	O
argv	array(*(char))
[	O
optind	int
++	O
]	O
)	O
;	O
{	O
struct	O
acct	struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)
*	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
;	O
while	O
(	O
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
=	O
pacct_get_entry	()->(*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)))
(	O
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
raw	int
)	O
{	O
size	long
=	O
convert_acct_record_write	(*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)),*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)),int,int)->(long)
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
,	O
&	O
buf	struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)
,	O
version	int
,	O
byteswap	int
)	O
;	O
(	O
void	O
)	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
buf	struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)
,	O
size	long
,	O
1	int
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
else	O
print_pacct_record	(*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
rec	*(struct(char,char,short,int,int,int,int,int,int,float,short,short,short,short,short,short,short,short,array(char),short,short,short,short,short,char,char))
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
num_lines_to_print	long
>	O
-	O
1	int
)	O
{	O
num_lines_to_print	long
--	O
;	O
if	O
(	O
num_lines_to_print	long
==	O
0	int
)	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
}	O
}	O
exit	(int)->(void)
(	O
EXIT_SUCCESS	int
)	O
;	O
}	O
