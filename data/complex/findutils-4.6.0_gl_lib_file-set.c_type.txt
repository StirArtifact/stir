void	O
record_file	(*(struct),*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(void)
(	O
Hash_table	struct
*	O
ht	*(struct)
,	O
char	O
const	O
*	O
file	*(char)
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
const	O
*	O
stats	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
struct	O
F_triple	struct(*(char),long,long)
*	O
ent	*(struct(*(char),long,long))
;	O
if	O
(	O
ht	*(struct)
==	O
NULL	O
)	O
return	O
;	O
ent	*(struct(*(char),long,long))
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
*	O
ent	*(struct(*(char),long,long))
)	O
;	O
ent	*(struct(*(char),long,long))
->	O
name	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
file	*(char)
)	O
;	O
ent	*(struct(*(char),long,long))
->	O
st_ino	long
=	O
stats	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_ino	long
;	O
ent	*(struct(*(char),long,long))
->	O
st_dev	long
=	O
stats	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
;	O
{	O
struct	O
F_triple	struct(*(char),long,long)
*	O
ent_from_table	*(struct(*(char),long,long))
=	O
hash_insert	(*(struct),*(void))->(*(void))
(	O
ht	*(struct)
,	O
ent	*(struct(*(char),long,long))
)	O
;	O
if	O
(	O
ent_from_table	*(struct(*(char),long,long))
==	O
NULL	O
)	O
{	O
xalloc_die	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
ent_from_table	*(struct(*(char),long,long))
!=	O
ent	*(struct(*(char),long,long))
)	O
{	O
triple_free	(*(void))->(void)
(	O
ent	*(struct(*(char),long,long))
)	O
;	O
}	O
}	O
}	O
bool	bool
seen_file	(*(struct),*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(bool)
(	O
Hash_table	struct
const	O
*	O
ht	*(struct)
,	O
char	O
const	O
*	O
file	*(char)
,	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
const	O
*	O
stats	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
)	O
{	O
struct	O
F_triple	struct(*(char),long,long)
new_ent	struct(*(char),long,long)
;	O
if	O
(	O
ht	*(struct)
==	O
NULL	O
)	O
return	O
false	int
;	O
new_ent	struct(*(char),long,long)
.	O
name	*(char)
=	O
(	O
char	O
*	O
)	O
file	*(char)
;	O
new_ent	struct(*(char),long,long)
.	O
st_ino	long
=	O
stats	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_ino	long
;	O
new_ent	struct(*(char),long,long)
.	O
st_dev	long
=	O
stats	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_dev	long
;	O
return	O
!	O
!	O
hash_lookup	(*(struct),*(void))->(*(void))
(	O
ht	*(struct)
,	O
&	O
new_ent	struct(*(char),long,long)
)	O
;	O
}	O
