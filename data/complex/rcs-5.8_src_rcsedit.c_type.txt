struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
{	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
char	O
const	O
*	O
filename	*(char)
;	O
size_t	long
script_lno	long
;	O
long	O
lcount	long
;	O
long	O
corr	long
;	O
char	O
*	O
*	O
line	*(*(char))
;	O
size_t	long
gap	long
,	O
gapsize	long
,	O
lim	*(char)
;	O
struct	O
sff	struct(*(char),enum(int,int,int))
*	O
sff	struct(*(char),enum(int,int,int))
;	O
}	O
;	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
make_editstuff	()->(*(struct))
(	O
void	O
)	O
{	O
return	O
ZLLOC	O
(	O
1	int
,	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
)	O
;	O
}	O
void	O
unmake_editstuff	(*(struct))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
)	O
{	O
free	(*(void))->(void)
(	O
es	*(struct)
->	O
line	*(*(char))
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
es	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
)	O
)	O
;	O
}	O
static	O
void	O
*	O
okalloc	(*(void))->(*(void))
(	O
void	O
*	O
p	*(char)
)	O
{	O
if	O
(	O
!	O
p	*(char)
)	O
oom	()->(void)
(	O
)	O
;	O
return	O
p	*(char)
;	O
}	O
static	O
void	O
*	O
testalloc	(long)->(*(void))
(	O
size_t	long
size	long
)	O
{	O
return	O
okalloc	(*(void))->(*(void))
(	O
malloc	(long)->(*(void))
(	O
size	long
)	O
)	O
;	O
}	O
static	O
void	O
*	O
testrealloc	(*(void),long)->(*(void))
(	O
void	O
*	O
ptr	*(void)
,	O
size_t	long
size	long
)	O
{	O
return	O
okalloc	(*(void))->(*(void))
(	O
realloc	(*(void),long)->(*(void))
(	O
ptr	*(void)
,	O
size	long
)	O
)	O
;	O
}	O
static	O
bool	bool
nfs_NOENT_p	()->(bool)
(	O
void	O
)	O
{	O
return	O
has_NFS	int
&&	O
ENOENT	int
==	O
errno	O
;	O
}	O
int	O
un_link	(*(char))->(int)
(	O
char	O
const	O
*	O
s	*(char)
)	O
{	O
int	O
rv	int
=	O
unlink	(*(char))->(int)
(	O
s	*(char)
)	O
;	O
if	O
(	O
!	O
PROB	O
(	O
rv	int
)	O
)	O
;	O
else	O
{	O
if	O
(	O
BAD_UNLINK	int
)	O
{	O
int	O
e	*(char)
=	O
errno	O
;	O
if	O
(	O
PROB	O
(	O
chmod	(*(char),int)->(int)
(	O
s	*(char)
,	O
S_IWUSR	O
)	O
)	O
)	O
{	O
errno	O
=	O
e	*(char)
;	O
rv	int
=	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
nfs_NOENT_p	()->(bool)
(	O
)	O
)	O
rv	int
=	O
0	int
;	O
}	O
return	O
rv	int
;	O
}	O
static	O
void	O
insertline	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,*(char))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
unsigned	O
long	O
n	int
,	O
char	O
*	O
l	*(char)
)	O
{	O
if	O
(	O
es	*(struct)
->	O
lim	*(char)
-	O
es	*(struct)
->	O
gapsize	long
<	O
n	int
)	O
EDIT_SCRIPT_OVERFLOW	O
(	O
)	O
;	O
if	O
(	O
!	O
es	*(struct)
->	O
gapsize	long
)	O
es	*(struct)
->	O
line	*(*(char))
=	O
!	O
es	*(struct)
->	O
lim	*(char)
?	O
testalloc	(long)->(*(void))
(	O
sizeof	O
(	O
char	O
*	O
)	O
*	O
(	O
es	*(struct)
->	O
lim	*(char)
=	O
es	*(struct)
->	O
gapsize	long
=	O
1024	int
)	O
)	O
:	O
(	O
es	*(struct)
->	O
gap	long
=	O
es	*(struct)
->	O
gapsize	long
=	O
es	*(struct)
->	O
lim	*(char)
,	O
testrealloc	(*(void),long)->(*(void))
(	O
es	*(struct)
->	O
line	*(*(char))
,	O
sizeof	O
(	O
char	O
*	O
)	O
*	O
(	O
es	*(struct)
->	O
lim	*(char)
<<=	O
1	int
)	O
)	O
)	O
;	O
if	O
(	O
n	int
<	O
es	*(struct)
->	O
gap	long
)	O
movelines	O
(	O
es	*(struct)
->	O
line	*(*(char))
+	O
n	int
+	O
es	*(struct)
->	O
gapsize	long
,	O
es	*(struct)
->	O
line	*(*(char))
+	O
n	int
,	O
es	*(struct)
->	O
gap	long
-	O
n	int
)	O
;	O
else	O
if	O
(	O
es	*(struct)
->	O
gap	long
<	O
n	int
)	O
movelines	O
(	O
es	*(struct)
->	O
line	*(*(char))
+	O
es	*(struct)
->	O
gap	long
,	O
es	*(struct)
->	O
line	*(*(char))
+	O
es	*(struct)
->	O
gap	long
+	O
es	*(struct)
->	O
gapsize	long
,	O
n	int
-	O
es	*(struct)
->	O
gap	long
)	O
;	O
es	*(struct)
->	O
line	*(*(char))
[	O
n	int
]	O
=	O
l	*(char)
;	O
es	*(struct)
->	O
gap	long
=	O
n	int
+	O
1	int
;	O
es	*(struct)
->	O
gapsize	long
--	O
;	O
}	O
static	O
void	O
deletelines	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,long)->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
unsigned	O
long	O
n	int
,	O
unsigned	O
long	O
nlines	long
)	O
{	O
unsigned	O
long	O
l	*(char)
=	O
n	int
+	O
nlines	long
;	O
if	O
(	O
es	*(struct)
->	O
lim	*(char)
-	O
es	*(struct)
->	O
gapsize	long
<	O
l	*(char)
||	O
l	*(char)
<	O
n	int
)	O
EDIT_SCRIPT_OVERFLOW	O
(	O
)	O
;	O
if	O
(	O
l	*(char)
<	O
es	*(struct)
->	O
gap	long
)	O
movelines	O
(	O
es	*(struct)
->	O
line	*(*(char))
+	O
l	*(char)
+	O
es	*(struct)
->	O
gapsize	long
,	O
es	*(struct)
->	O
line	*(*(char))
+	O
l	*(char)
,	O
es	*(struct)
->	O
gap	long
-	O
l	*(char)
)	O
;	O
else	O
if	O
(	O
es	*(struct)
->	O
gap	long
<	O
n	int
)	O
movelines	O
(	O
es	*(struct)
->	O
line	*(*(char))
+	O
es	*(struct)
->	O
gap	long
,	O
es	*(struct)
->	O
line	*(*(char))
+	O
es	*(struct)
->	O
gap	long
+	O
es	*(struct)
->	O
gapsize	long
,	O
n	int
-	O
es	*(struct)
->	O
gap	long
)	O
;	O
es	*(struct)
->	O
gap	long
=	O
n	int
;	O
es	*(struct)
->	O
gapsize	long
+=	O
nlines	long
;	O
}	O
static	O
void	O
snapshotline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
register	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
register	O
char	O
*	O
l	*(char)
)	O
{	O
register	O
int	O
c	int
;	O
do	O
{	O
if	O
(	O
(	O
c	int
=	O
*	O
l	*(char)
++	O
)	O
==	O
SDELIM	char
&&	O
*	O
l	*(char)
++	O
!=	O
SDELIM	char
)	O
return	O
;	O
aputc	O
(	O
c	int
,	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
while	O
(	O
c	int
!=	O
'\n'	O
)	O
;	O
}	O
static	O
void	O
snapshotedit_fast	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
register	O
char	O
*	O
*	O
p	*(char)
,	O
*	O
*	O
lim	*(char)
,	O
*	O
*	O
l	*(char)
=	O
es	*(struct)
->	O
line	*(*(char))
;	O
for	O
(	O
p	*(char)
=	O
l	*(char)
,	O
lim	*(char)
=	O
l	*(char)
+	O
es	*(struct)
->	O
gap	long
;	O
p	*(char)
<	O
lim	*(char)
;	O
)	O
snapshotline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
p	*(char)
++	O
)	O
;	O
for	O
(	O
p	*(char)
+=	O
es	*(struct)
->	O
gapsize	long
,	O
lim	*(char)
=	O
l	*(char)
+	O
es	*(struct)
->	O
lim	*(char)
;	O
p	*(char)
<	O
lim	*(char)
;	O
)	O
snapshotline	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
p	*(char)
++	O
)	O
;	O
}	O
struct	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
{	O
struct	O
expctx	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*(struct`),long,array(long))),*(struct(long,long,long,*(struct`),long,array(long))),*(char),struct(*(char),long),*(struct(*(void),*(struct`))),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long)))
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
;	O
size_t	long
script_lno	long
;	O
}	O
;	O
static	O
void	O
finisheditline	(*(struct(struct(*(struct`),*(struct`),*(struct`),*(struct`),bool,bool,*(struct`)),long)),*(char))->(void)
(	O
struct	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
*	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
,	O
char	O
*	O
l	*(char)
)	O
{	O
struct	O
expctx	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*(struct`),long,array(long))),*(struct(long,long,long,*(struct`),long,array(long))),*(char),struct(*(char),long),*(struct(*(void),*(struct`))),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long)))
*	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
=	O
&	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
->	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
;	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
->	O
from	*(struct)
->	O
ptr	*(void)
=	O
l	*(char)
;	O
if	O
(	O
expandline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,bool,*(struct(*`,*`,*`,long)))))->(int)
(	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
<	O
0	int
)	O
PFATAL	O
(	O
"%s:%zu: error expanding keywords while applying delta %s"	*(char)
,	O
REPO	O
(	O
filename	*(char)
)	O
,	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
->	O
script_lno	long
,	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
->	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
->	O
num	*(char)
)	O
;	O
}	O
static	O
void	O
finishedit_fast	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
struct	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
const	O
*	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
,	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
bool	bool
done	bool
)	O
{	O
if	O
(	O
done	bool
)	O
{	O
openfcopy	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
!	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
snapshotedit_fast	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
es	*(struct)
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
else	O
{	O
register	O
char	O
*	O
*	O
p	*(char)
,	O
*	O
*	O
lim	*(char)
,	O
*	O
*	O
l	*(char)
=	O
es	*(struct)
->	O
line	*(*(char))
;	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
FLOW	O
(	O
from	*(struct)
)	O
;	O
char	O
*	O
here	*(char)
=	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
->	O
ptr	*(void)
;	O
struct	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
=	O
{	O
.	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
=	O
EXPCTX_1OUT	O
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
true	int
,	O
true	int
)	O
,	O
.	O
script_lno	long
=	O
es	*(struct)
->	O
script_lno	long
}	O
;	O
for	O
(	O
p	*(char)
=	O
l	*(char)
,	O
lim	*(char)
=	O
l	*(char)
+	O
es	*(struct)
->	O
gap	long
;	O
p	*(char)
<	O
lim	*(char)
;	O
)	O
finisheditline	(*(struct(struct(*(struct`),*(struct`),*(struct`),*(struct`),bool,bool,*(struct`)),long)),*(char))->(void)
(	O
&	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
,	O
*	O
p	*(char)
++	O
)	O
;	O
for	O
(	O
p	*(char)
+=	O
es	*(struct)
->	O
gapsize	long
,	O
lim	*(char)
=	O
l	*(char)
+	O
es	*(struct)
->	O
lim	*(char)
;	O
p	*(char)
<	O
lim	*(char)
;	O
)	O
finisheditline	(*(struct(struct(*(struct`),*(struct`),*(struct`),*(struct`),bool,bool,*(struct`)),long)),*(char))->(void)
(	O
&	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
,	O
*	O
p	*(char)
++	O
)	O
;	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
->	O
ptr	*(void)
=	O
here	*(char)
;	O
FINISH_EXPCTX	O
(	O
&	O
finctx	struct(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long))),long)
.	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
;	O
}	O
}	O
}	O
static	O
FILE	struct
*	O
fopen_update_truncate	(*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
char	O
const	O
*	O
name	*(char)
)	O
{	O
if	O
(	O
!	O
STDIO_P	O
(	O
FLOW	O
(	O
from	*(struct)
)	O
)	O
)	O
return	O
fopen_safer	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
name	*(char)
,	O
FOPEN_W_WORK	*(char)
)	O
;	O
else	O
{	O
if	O
(	O
BAD_FOPEN_WPLUS	int
&&	O
PROB	O
(	O
un_link	(*(char))->(int)
(	O
name	*(char)
)	O
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
name	*(char)
)	O
;	O
return	O
fopen_safer	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
name	*(char)
,	O
FOPEN_WPLUS_WORK	*(char)
)	O
;	O
}	O
}	O
void	O
openfcopy	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
if	O
(	O
!	O
(	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
=	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
{	O
if	O
(	O
!	O
FLOW	O
(	O
result	*(char)
)	O
)	O
FLOW	O
(	O
result	*(char)
)	O
=	O
maketemp	(int)->(*(char))
(	O
2	int
)	O
;	O
if	O
(	O
!	O
(	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
=	O
fopen_update_truncate	(*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
FLOW	O
(	O
result	*(char)
)	O
)	O
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
FLOW	O
(	O
result	*(char)
)	O
)	O
;	O
}	O
}	O
static	O
void	O
swapeditfiles	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
char	O
const	O
*	O
tmpptr	*(char)
;	O
FILE	struct
*	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
es	*(struct)
->	O
lcount	long
=	O
0	int
;	O
es	*(struct)
->	O
corr	long
=	O
0	int
;	O
if	O
(	O
!	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
FZLLOC	O
(	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
)	O
;	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
->	O
rm	enum(int,int,int)
=	O
RM_STDIO	int
;	O
}	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
->	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
->	O
end	*(char)
=	O
ftello	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
rewind	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
tmpptr	*(char)
=	O
es	*(struct)
->	O
filename	*(char)
;	O
es	*(struct)
->	O
filename	*(char)
=	O
FLOW	O
(	O
result	*(char)
)	O
;	O
FLOW	O
(	O
result	*(char)
)	O
=	O
tmpptr	*(char)
;	O
openfcopy	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
void	O
finishedit_slow	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
struct	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
const	O
*	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
,	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
bool	bool
done	bool
)	O
{	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
register	O
FILE	struct
*	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
if	O
(	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
{	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
{	O
struct	O
expctx	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*(struct`),long,array(long))),*(struct(long,long,long,*(struct`),long,array(long))),*(char),struct(*(char),long),*(struct(*(void),*(struct`))),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long)))
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
=	O
EXPCTX_1OUT	O
(	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
false	int
,	O
true	int
)	O
;	O
while	O
(	O
1	int
<	O
expandline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,bool,*(struct(*`,*`,*`,long)))))->(int)
(	O
&	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
)	O
;	O
FINISH_EXPCTX	O
(	O
&	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
;	O
}	O
else	O
{	O
VERBATIM	O
(	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
ftello	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
->	O
stream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
;	O
fro_spew	(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
fro_close	(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)))->(void)
(	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
}	O
if	O
(	O
!	O
done	bool
)	O
swapeditfiles	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
es	*(struct)
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
void	O
snapshotedit_slow	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
finishedit_slow	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
(	O
es	*(struct)
,	O
NULL	O
,	O
NULL	O
,	O
false	int
)	O
;	O
fro_spew	(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fro_bob	O
(	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
}	O
void	O
finishedit	(*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
struct	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
const	O
*	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
,	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
bool	bool
done	bool
)	O
{	O
(	O
!	O
STDIO_P	O
(	O
FLOW	O
(	O
from	*(struct)
)	O
)	O
?	O
finishedit_fast	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
:	O
finishedit_slow	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
)	O
(	O
es	*(struct)
,	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
,	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
done	bool
)	O
;	O
}	O
void	O
snapshotedit	(*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
(	O
!	O
STDIO_P	O
(	O
FLOW	O
(	O
from	*(struct)
)	O
)	O
?	O
snapshotedit_fast	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
:	O
snapshotedit_slow	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
)	O
(	O
es	*(struct)
,	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
static	O
void	O
copylines	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
register	O
long	O
upto	long
,	O
struct	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
const	O
*	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
{	O
if	O
(	O
!	O
STDIO_P	O
(	O
FLOW	O
(	O
from	*(struct)
)	O
)	O
)	O
es	*(struct)
->	O
lcount	long
=	O
upto	long
;	O
else	O
{	O
int	O
c	int
;	O
register	O
FILE	struct
*	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
if	O
(	O
upto	long
<	O
es	*(struct)
->	O
lcount	long
)	O
{	O
finishedit_slow	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),bool)->(void)
(	O
es	*(struct)
,	O
NULL	O
,	O
NULL	O
,	O
false	int
)	O
;	O
}	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
es	*(struct)
->	O
lcount	long
<	O
upto	long
)	O
{	O
struct	O
expctx	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*(struct`),long,array(long))),*(struct(long,long,long,*(struct`),long,array(long))),*(char),struct(*(char),long),*(struct(*(void),*(struct`))),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long)))
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
=	O
EXPCTX_1OUT	O
(	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
false	int
,	O
true	int
)	O
;	O
if	O
(	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
do	O
{	O
if	O
(	O
expandline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,bool,*(struct(*`,*`,*`,long)))))->(int)
(	O
&	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
<=	O
1	int
)	O
EDIT_SCRIPT_OVERFLOW	O
(	O
)	O
;	O
}	O
while	O
(	O
++	O
es	*(struct)
->	O
lcount	long
<	O
upto	long
)	O
;	O
else	O
{	O
do	O
{	O
do	O
{	O
GETCHAR_OR	O
(	O
c	int
,	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
EDIT_SCRIPT_OVERFLOW	O
(	O
)	O
)	O
;	O
aputc	O
(	O
c	int
,	O
fc	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
while	O
(	O
c	int
!=	O
'\n'	O
)	O
;	O
}	O
while	O
(	O
++	O
es	*(struct)
->	O
lcount	long
<	O
upto	long
)	O
;	O
}	O
FINISH_EXPCTX	O
(	O
&	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
;	O
}	O
}	O
}	O
void	O
copystring	(*(struct),*(struct))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
struct	O
atat	*(struct)
*	O
atat	*(struct)
)	O
{	O
atat_display	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(long,long,long,*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),long,array(long))),bool)->(void)
(	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
atat	*(struct)
,	O
false	int
)	O
;	O
if	O
(	O
FLOW	O
(	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
atat_put	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(long,long,long,*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),long,array(long))))->(void)
(	O
FLOW	O
(	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
atat	*(struct)
)	O
;	O
es	*(struct)
->	O
lcount	long
+=	O
atat	*(struct)
->	O
line_count	long
;	O
}	O
void	O
enterstring	(*(struct),*(struct))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
struct	O
atat	*(struct)
*	O
atat	*(struct)
)	O
{	O
if	O
(	O
STDIO_P	O
(	O
FLOW	O
(	O
from	*(struct)
)	O
)	O
)	O
{	O
char	O
const	O
*	O
filename	*(char)
;	O
es	*(struct)
->	O
filename	*(char)
=	O
NULL	O
;	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
NULL	O
;	O
es	*(struct)
->	O
lcount	long
=	O
es	*(struct)
->	O
corr	long
=	O
0	int
;	O
FLOW	O
(	O
result	*(char)
)	O
=	O
filename	*(char)
=	O
maketemp	(int)->(*(char))
(	O
1	int
)	O
;	O
if	O
(	O
!	O
(	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
=	O
fopen_update_truncate	(*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
filename	*(char)
)	O
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
filename	*(char)
)	O
;	O
copystring	(*(struct),*(struct))->(void)
(	O
es	*(struct)
,	O
atat	*(struct)
)	O
;	O
}	O
else	O
{	O
int	O
c	int
;	O
register	O
FILE	struct
*	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
register	O
long	O
e	*(char)
,	O
oe	long
;	O
register	O
bool	bool
amidline	bool
,	O
oamidline	bool
;	O
register	O
char	O
*	O
optr	*(char)
;	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
e	*(char)
=	O
0	int
;	O
es	*(struct)
->	O
gap	long
=	O
0	int
;	O
es	*(struct)
->	O
gapsize	long
=	O
es	*(struct)
->	O
lim	*(char)
;	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
FLOW	O
(	O
from	*(struct)
)	O
;	O
fro_trundling	(bool,*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)))->(void)
(	O
false	int
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
GETCHAR	O
(	O
c	int
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
if	O
(	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
afputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
c	int
,	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
amidline	bool
=	O
false	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
optr	*(char)
=	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
->	O
ptr	*(void)
;	O
TEECHAR	O
(	O
)	O
;	O
oamidline	bool
=	O
amidline	bool
;	O
oe	long
=	O
e	*(char)
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
'\n'	O
:	O
++	O
e	*(char)
;	O
amidline	bool
=	O
false	int
;	O
break	O
;	O
case	O
SDELIM	char
:	O
TEECHAR	O
(	O
)	O
;	O
if	O
(	O
c	int
!=	O
SDELIM	char
)	O
{	O
es	*(struct)
->	O
lcount	long
=	O
e	*(char)
+	O
amidline	bool
;	O
es	*(struct)
->	O
corr	long
=	O
0	int
;	O
return	O
;	O
}	O
default	O
:	O
amidline	bool
=	O
true	int
;	O
break	O
;	O
}	O
if	O
(	O
!	O
oamidline	bool
)	O
insertline	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,*(char))->(void)
(	O
es	*(struct)
,	O
oe	long
,	O
optr	*(char)
)	O
;	O
}	O
}	O
}	O
void	O
editstring	(*(struct),*(struct),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)))->(void)
(	O
struct	O
editstuff	struct(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*(char),enum(int,int,int))))
*	O
es	*(struct)
,	O
struct	O
atat	*(struct)
const	O
*	O
script	*(struct)
,	O
struct	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
const	O
*	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
{	O
int	O
ed	int
;	O
int	O
c	int
;	O
register	O
FILE	struct
*	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
register	O
FILE	struct
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
long	O
line_lim	long
=	O
LONG_MAX	O
;	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
register	O
long	O
i	int
;	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
register	O
long	O
j	long
=	O
0	int
;	O
struct	O
diffcmd	struct(long,long,long,long)
dc	*(struct(long,long,long,long))
;	O
es	*(struct)
->	O
script_lno	long
=	O
script	*(struct)
->	O
lno	long
;	O
es	*(struct)
->	O
lcount	long
+=	O
es	*(struct)
->	O
corr	long
;	O
es	*(struct)
->	O
corr	long
=	O
0	int
;	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
FLOW	O
(	O
from	*(struct)
)	O
;	O
GETCHAR	O
(	O
c	int
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
if	O
(	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
afputc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
c	int
,	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
initdiffcmd	(*(struct(long,long,long,long)))->(void)
(	O
&	O
dc	*(struct(long,long,long,long))
)	O
;	O
while	O
(	O
0	int
<=	O
(	O
ed	int
=	O
getdiffcmd	(*(struct),bool,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(long,long,long,long)))->(int)
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
true	int
,	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
dc	*(struct(long,long,long,long))
)	O
)	O
)	O
if	O
(	O
STDIO_P	O
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
&&	O
line_lim	long
<=	O
dc	*(struct(long,long,long,long))
.	O
line1	long
)	O
EDIT_SCRIPT_OVERFLOW	O
(	O
)	O
;	O
else	O
if	O
(	O
!	O
ed	int
)	O
{	O
copylines	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)))->(void)
(	O
es	*(struct)
,	O
dc	*(struct(long,long,long,long))
.	O
line1	long
-	O
1	int
,	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
;	O
i	int
=	O
dc	*(struct(long,long,long,long))
.	O
nlines	long
;	O
es	*(struct)
->	O
corr	long
-=	O
i	int
;	O
es	*(struct)
->	O
lcount	long
+=	O
i	int
;	O
if	O
(	O
!	O
STDIO_P	O
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
)	O
deletelines	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,long)->(void)
(	O
es	*(struct)
,	O
es	*(struct)
->	O
lcount	long
+	O
es	*(struct)
->	O
corr	long
,	O
i	int
)	O
;	O
else	O
{	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
es	*(struct)
->	O
fedit	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
do	O
{	O
do	O
GETCHAR_OR	O
(	O
c	int
,	O
fe	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
{	O
if	O
(	O
i	int
!=	O
1	int
)	O
EDIT_SCRIPT_OVERFLOW	O
(	O
)	O
;	O
line_lim	long
=	O
dc	*(struct(long,long,long,long))
.	O
dafter	long
;	O
goto	O
done	bool
;	O
}	O
)	O
;	O
while	O
(	O
c	int
!=	O
'\n'	O
)	O
;	O
done	bool
:	O
;	O
}	O
while	O
(	O
--	O
i	int
)	O
;	O
}	O
es	*(struct)
->	O
script_lno	long
++	O
;	O
}	O
else	O
{	O
copylines	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*`,long,array(long))),*(struct(long,long,long,*`,long,array(long))),*(char),struct(*(char),long),*(struct(*`,*`)),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)))->(void)
(	O
es	*(struct)
,	O
dc	*(struct(long,long,long,long))
.	O
line1	long
,	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
;	O
i	int
=	O
dc	*(struct(long,long,long,long))
.	O
nlines	long
;	O
if	O
(	O
!	O
STDIO_P	O
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
)	O
j	long
=	O
es	*(struct)
->	O
lcount	long
+	O
es	*(struct)
->	O
corr	long
;	O
es	*(struct)
->	O
corr	long
+=	O
i	int
;	O
if	O
(	O
STDIO_P	O
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
&&	O
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
res	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
)	O
)	O
{	O
struct	O
expctx	struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct(long,long,long,*(struct`),long,array(long))),*(struct(long,long,long,*(struct`),long,array(long))),*(char),struct(*(char),long),*(struct(*(void),*(struct`))),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,bool,*(struct(*(char),*(struct),*(void),long)))
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
=	O
EXPCTX	O
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
true	int
,	O
true	int
)	O
;	O
do	O
{	O
switch	O
(	O
expandline	(*(struct(*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,bool,*(struct(*`,*`,*`,long)))))->(int)
(	O
&	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
)	O
{	O
case	O
0	int
:	O
case	O
1	int
:	O
if	O
(	O
i	int
==	O
1	int
)	O
return	O
;	O
case	O
-	O
1	int
:	O
EDIT_SCRIPT_SHORT	O
(	O
)	O
;	O
}	O
}	O
while	O
(	O
--	O
i	int
)	O
;	O
FINISH_EXPCTX	O
(	O
&	O
ctx	*(struct(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,bool,*(struct(*(char),*(struct`),*(void),long))))
)	O
;	O
}	O
else	O
{	O
do	O
{	O
if	O
(	O
!	O
STDIO_P	O
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
)	O
insertline	(*(struct(*(struct(int,long,enum(int,int,int),*`,*`,*`,*`,*`,long)),*(char),long,long,long,*(*(char)),long,long,long,*(struct(*`,enum(int,int,int))))),long,*(char))->(void)
(	O
es	*(struct)
,	O
j	long
++	O
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
->	O
ptr	*(void)
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
TEECHAR	O
(	O
)	O
;	O
if	O
(	O
c	int
==	O
SDELIM	char
)	O
{	O
TEECHAR	O
(	O
)	O
;	O
if	O
(	O
c	int
!=	O
SDELIM	char
)	O
{	O
if	O
(	O
--	O
i	int
)	O
EDIT_SCRIPT_SHORT	O
(	O
)	O
;	O
return	O
;	O
}	O
}	O
if	O
(	O
STDIO_P	O
(	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
)	O
aputc	O
(	O
c	int
,	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
break	O
;	O
}	O
}	O
while	O
(	O
--	O
i	int
)	O
;	O
}	O
es	*(struct)
->	O
script_lno	long
+=	O
1	int
+	O
dc	*(struct(long,long,long,long))
.	O
nlines	long
;	O
}	O
}	O
static	O
int	O
naturalize	(*(struct(*((*`)->(*`)),bool,struct(*(char),long),*(struct(*`,*`,*`,long)),struct(*(char),long),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long))),int)),*(bool))->(int)
(	O
struct	O
maybe	struct(*((*(struct(*((*`)->(*`)),bool,struct(*`,long),*(struct`),struct(*`,long),*(struct`),int)))->(*(struct))),bool,struct(*(char),long),*(struct),struct(*(char),long),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),int)
*	O
m	*(struct)
,	O
bool	bool
*	O
symbolicp	*(bool)
)	O
{	O
int	O
e	*(char)
;	O
ssize_t	long
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
int	O
linkcount	int
=	O
_POSIX_SYMLOOP_MAX	int
;	O
struct	O
cbuf	struct(*(char),long)
*	O
fn	*(struct(*(char),long))
=	O
&	O
m	*(struct)
->	O
tentative	struct(*(char),long)
;	O
struct	O
divvy	struct(*(char),*(struct),*(void),long)
*	O
space	*(struct)
=	O
m	*(struct)
->	O
space	*(struct)
;	O
size_t	long
len	char
=	O
SIZEABLE_FILENAME_LEN	O
;	O
char	O
*	O
chased	*(char)
=	O
alloc	(*(struct(*(char),*(struct),*(void),long)),*(char),long)->(*(void))
(	O
space	*(struct)
,	O
"chased"	*(char)
,	O
len	char
)	O
;	O
char	O
const	O
*	O
orig	*(char)
=	O
fn	*(struct(*(char),long))
->	O
string	*(char)
;	O
while	O
(	O
(	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
readlink	(*(char),*(char),long)->(long)
(	O
fn	*(struct(*(char),long))
->	O
string	*(char)
,	O
chased	*(char)
,	O
len	char
)	O
)	O
!=	O
-	O
1	int
)	O
if	O
(	O
len	char
==	O
(	O
size_t	long
)	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
)	O
{	O
len	char
<<=	O
1	int
;	O
chased	*(char)
=	O
alloc	(*(struct(*(char),*(struct),*(void),long)),*(char),long)->(*(void))
(	O
space	*(struct)
,	O
"chased"	*(char)
,	O
len	char
)	O
;	O
}	O
else	O
if	O
(	O
!	O
linkcount	int
--	O
)	O
{	O
errno	O
=	O
ELOOP	int
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
chased	*(char)
[	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
]	O
=	O
'\0'	O
;	O
if	O
(	O
ABSFNAME	O
(	O
chased	*(char)
)	O
)	O
{	O
fn	*(struct(*(char),long))
->	O
string	*(char)
=	O
chased	*(char)
;	O
fn	*(struct(*(char),long))
->	O
size	long
=	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
}	O
else	O
{	O
char	O
const	O
*	O
s	*(char)
=	O
fn	*(struct(*(char),long))
->	O
string	*(char)
;	O
accumulate_range	(*(struct(*(char),*(struct),*(void),long)),*(char),*(char))->(void)
(	O
space	*(struct)
,	O
s	*(char)
,	O
basefilename	(*(char))->(*(char))
(	O
s	*(char)
)	O
)	O
;	O
accs	O
(	O
space	*(struct)
,	O
chased	*(char)
)	O
;	O
fn	*(struct(*(char),long))
->	O
string	*(char)
=	O
finish_string	(*(struct(*(char),*(struct),*(void),long)),*(long))->(*(char))
(	O
space	*(struct)
,	O
&	O
fn	*(struct(*(char),long))
->	O
size	long
)	O
;	O
}	O
}	O
e	*(char)
=	O
errno	O
;	O
*	O
symbolicp	*(bool)
=	O
fn	*(struct(*(char),long))
->	O
string	*(char)
!=	O
orig	*(char)
;	O
errno	O
=	O
e	*(char)
;	O
switch	O
(	O
e	*(char)
)	O
{	O
case	O
EINVAL	int
:	O
return	O
1	int
;	O
case	O
ENOENT	int
:	O
return	O
0	int
;	O
default	O
:	O
return	O
-	O
1	int
;	O
}	O
}	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
rcswriteopen	(*(struct(*((*`)->(*`)),bool,struct(*(char),long),*(struct),struct(*(char),long),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long))),int)))->(*(struct))
(	O
struct	O
maybe	struct(*((*(struct(*((*`)->(*`)),bool,struct(*`,long),*(struct`),struct(*`,long),*(struct`),int)))->(*(struct))),bool,struct(*(char),long),*(struct),struct(*(char),long),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))),int)
*	O
m	*(struct)
)	O
{	O
struct	O
cbuf	struct(*(char),long)
*	O
RCSbuf	*(struct(*(char),long))
=	O
&	O
m	*(struct)
->	O
tentative	struct(*(char),long)
;	O
register	O
char	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
;	O
register	O
char	O
const	O
*	O
sp	*(char)
,	O
*	O
repofn	*(char)
,	O
*	O
x	*(struct(*(char),long))
;	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
size_t	long
len	char
;	O
int	O
e	*(char)
,	O
exists	int
,	O
fdesc	int
,	O
fdescSafer	int
,	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
bool	bool
waslocked	bool
;	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
;	O
bool	bool
symbolicp	*(bool)
=	O
false	int
;	O
char	O
*	O
lfn	*(char)
;	O
struct	O
sff	struct(*(char),enum(int,int,int))
*	O
sff	struct(*(char),enum(int,int,int))
=	O
BE	O
(	O
sff	struct(*(char),enum(int,int,int))
)	O
;	O
waslocked	bool
=	O
0	int
<=	O
REPO	O
(	O
fd_lock	int
)	O
;	O
exists	int
=	O
naturalize	(*(struct(*((*`)->(*`)),bool,struct(*(char),long),*(struct(*`,*`,*`,long)),struct(*(char),long),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct`,struct`,struct`,array(long))),int)),*(bool))->(int)
(	O
m	*(struct)
,	O
&	O
symbolicp	*(bool)
)	O
;	O
if	O
(	O
exists	int
<	O
(	O
m	*(struct)
->	O
mustread	bool
|	O
waslocked	bool
)	O
)	O
return	O
NULL	O
;	O
repofn	*(char)
=	O
RCSbuf	*(struct(*(char),long))
->	O
string	*(char)
;	O
accs	O
(	O
m	*(struct)
->	O
space	*(struct)
,	O
RCSbuf	*(struct(*(char),long))
->	O
string	*(char)
)	O
;	O
lfn	*(char)
=	O
finish_string	(*(struct(*(char),*(struct),*(void),long)),*(long))->(*(char))
(	O
m	*(struct)
->	O
space	*(struct)
,	O
&	O
len	char
)	O
;	O
sp	*(char)
=	O
basefilename	(*(char))->(*(char))
(	O
lfn	*(char)
)	O
;	O
x	*(struct(*(char),long))
=	O
rcssuffix	(*(char))->(*(char))
(	O
repofn	*(char)
)	O
;	O
if	O
(	O
!	O
x	*(struct(*(char),long))
&&	O
symbolicp	*(bool)
)	O
{	O
PERR	O
(	O
"symbolic link to non RCS file `%s'"	*(char)
,	O
repofn	*(char)
)	O
;	O
errno	O
=	O
EINVAL	int
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
*	O
sp	*(char)
==	O
*	O
x	*(struct(*(char),long))
)	O
{	O
PERR	O
(	O
"RCS filename `%s' incompatible with suffix `%s'"	*(char)
,	O
sp	*(char)
,	O
x	*(struct(*(char),long))
)	O
;	O
errno	O
=	O
EINVAL	int
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
*	O
x	*(struct(*(char),long))
)	O
{	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
lfn	*(char)
+	O
len	char
;	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
--	O
=	O
'\0'	O
;	O
while	O
(	O
sp	*(char)
<	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
)	O
{	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
[	O
-	O
1	int
]	O
;	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
--	O
;	O
}	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
*	O
x	*(struct(*(char),long))
;	O
}	O
else	O
{	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
lfn	*(char)
+	O
len	char
-	O
1	int
;	O
if	O
(	O
'_'	O
==	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
)	O
{	O
PERR	O
(	O
"RCS filename `%s' ends with `%c'"	*(char)
,	O
repofn	*(char)
,	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
)	O
;	O
errno	O
=	O
EINVAL	int
;	O
return	O
NULL	O
;	O
}	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
'_'	O
;	O
}	O
sff	struct(*(char),enum(int,int,int))
[	O
waslocked	bool
]	O
.	O
filename	*(char)
=	O
intern	(*(struct(*(char),*(struct),*(void),long)),*(char),long)->(*(char))
(	O
SINGLE	O
,	O
lfn	*(char)
,	O
len	char
)	O
;	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
ISR_DO	O
(	O
CATCHINTS	O
)	O
;	O
IGNOREINTS	O
(	O
)	O
;	O
seteid	()->(void)
(	O
)	O
;	O
fdesc	int
=	O
create	O
(	O
lfn	*(char)
)	O
;	O
fdescSafer	int
=	O
fd_safer	(int)->(int)
(	O
fdesc	int
)	O
;	O
e	*(char)
=	O
errno	O
;	O
setrid	()->(void)
(	O
)	O
;	O
if	O
(	O
0	int
<=	O
fdesc	int
)	O
sff	struct(*(char),enum(int,int,int))
[	O
SFFI_LOCKDIR	int
]	O
.	O
disposition	enum(int,int,int)
=	O
effective	int
;	O
if	O
(	O
PROB	O
(	O
fdescSafer	int
)	O
)	O
{	O
if	O
(	O
e	*(char)
==	O
EACCES	int
&&	O
!	O
PROB	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
(	O
lfn	*(char)
,	O
&	O
statbuf	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
)	O
e	*(char)
=	O
EEXIST	int
;	O
}	O
else	O
{	O
e	*(char)
=	O
ENOENT	int
;	O
if	O
(	O
exists	int
)	O
{	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fro_open	(*(char),*(char),*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)))
(	O
repofn	*(char)
,	O
FOPEN_RB	*(char)
,	O
m	*(struct)
->	O
status	int
)	O
;	O
e	*(char)
=	O
errno	O
;	O
if	O
(	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
&&	O
waslocked	bool
)	O
{	O
ORCSclose	()->(void)
(	O
)	O
;	O
seteid	()->(void)
(	O
)	O
;	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
un_link	(*(char))->(int)
(	O
lockname	O
)	O
;	O
e	*(char)
=	O
errno	O
;	O
setrid	()->(void)
(	O
)	O
;	O
errno	O
=	O
e	*(char)
;	O
if	O
(	O
PROB	O
(	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
lockname	O
)	O
;	O
sff	struct(*(char),enum(int,int,int))
[	O
SFFI_LOCKDIR	int
]	O
.	O
filename	*(char)
=	O
lfn	*(char)
;	O
}	O
}	O
REPO	O
(	O
fd_lock	int
)	O
=	O
fdescSafer	int
;	O
}	O
RESTOREINTS	O
(	O
)	O
;	O
errno	O
=	O
e	*(char)
;	O
return	O
f	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
}	O
int	O
chnamemod	(*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))),*(char),*(char),int,int,long)->(int)
(	O
FILE	struct
*	O
*	O
fromp	*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
char	O
const	O
*	O
from	*(struct)
,	O
char	O
const	O
*	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
int	O
set_mode	int
,	O
mode_t	int
mode	int
,	O
time_t	long
mtime	long
)	O
{	O
mode_t	int
mode_while_renaming	int
=	O
mode	int
;	O
int	O
fchmod_set_mode	int
=	O
0	int
;	O
if	O
(	O
0	int
<	O
set_mode	int
&&	O
!	O
PROB	O
(	O
change_mode	(int,int)->(int)
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
*	O
fromp	*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
,	O
mode_while_renaming	int
)	O
)	O
)	O
fchmod_set_mode	int
=	O
set_mode	int
;	O
Ozclose	(*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))->(void)
(	O
fromp	*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
)	O
;	O
if	O
(	O
fchmod_set_mode	int
<	O
set_mode	int
&&	O
PROB	O
(	O
chmod	(*(char),int)->(int)
(	O
from	*(struct)
,	O
mode_while_renaming	int
)	O
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
PROB	O
(	O
setmtime	(*(char),long)->(int)
(	O
from	*(struct)
,	O
mtime	long
)	O
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
PROB	O
(	O
rename	(*(char),*(char))->(int)
(	O
from	*(struct)
,	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
&&	O
!	O
nfs_NOENT_p	()->(bool)
(	O
)	O
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
setmtime	(*(char),long)->(int)
(	O
char	O
const	O
*	O
file	*(char)
,	O
time_t	long
mtime	long
)	O
{	O
struct	O
utimbuf	struct(long,long)
amtime	struct(long,long)
;	O
if	O
(	O
mtime	long
==	O
-	O
1	int
)	O
return	O
0	int
;	O
amtime	struct(long,long)
.	O
actime	long
=	O
BE	O
(	O
now	long
)	O
;	O
amtime	struct(long,long)
.	O
modtime	long
=	O
mtime	long
;	O
return	O
utime	(*(char),*(struct(long,long)))->(int)
(	O
file	*(char)
,	O
&	O
amtime	struct(long,long)
)	O
;	O
}	O
int	O
findlock	(bool,*(*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long))))->(int)
(	O
bool	bool
delete	bool
,	O
struct	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
*	O
*	O
target	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)))
)	O
{	O
struct	O
rcslock	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)))
const	O
*	O
rl	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long))))
;	O
struct	O
link	(*(char),*(char))->(int)
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
*	O
found	*(struct(int,*(struct(char,array(char)))))
;	O
char	O
const	O
*	O
me	*(char)
=	O
getcaller	()->(*(char))
(	O
)	O
;	O
if	O
(	O
!	O
(	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
.	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
GROK	O
(	O
locks	*(struct)
)	O
)	O
||	O
!	O
(	O
found	*(struct(int,*(struct(char,array(char)))))
=	O
lock_login_memq	O
(	O
&	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
me	*(char)
)	O
)	O
)	O
return	O
0	int
;	O
if	O
(	O
lock_login_memq	O
(	O
found	*(struct(int,*(struct(char,array(char)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
me	*(char)
)	O
)	O
{	O
RERR	O
(	O
"multiple revisions locked by %s; please specify one"	*(char)
,	O
me	*(char)
)	O
;	O
return	O
2	int
;	O
}	O
rl	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long))))
=	O
found	*(struct(int,*(struct(char,array(char)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
entry	*(void)
;	O
*	O
target	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)))
=	O
rl	*(struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long))))
->	O
delta	struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long)),bool,long)
;	O
if	O
(	O
delete	bool
)	O
lock_drop	(*(struct(*(void),*(struct(*`,*`)))),*(struct(*(void),*(struct(*`,*`)))))->(void)
(	O
&	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
found	*(struct(int,*(struct(char,array(char)))))
)	O
;	O
return	O
1	int
;	O
}	O
int	O
addsymbol	(*(char),*(char),bool)->(int)
(	O
char	O
const	O
*	O
num	*(char)
,	O
char	O
const	O
*	O
name	*(char)
,	O
bool	bool
rebind	bool
)	O
{	O
struct	O
link	(*(char),*(char))->(int)
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
*	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
;	O
struct	O
symdef	struct(*(char),*(char))
*	O
d	*(struct(*(char),*(char)))
;	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
.	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
GROK	O
(	O
symbols	*(struct)
)	O
;	O
for	O
(	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
&	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
;	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
;	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
)	O
{	O
struct	O
symdef	struct(*(char),*(char))
const	O
*	O
dk	*(struct(*(char),*(char)))
=	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
entry	*(void)
;	O
if	O
(	O
STR_SAME	O
(	O
name	*(char)
,	O
dk	*(struct(*(char),*(char)))
->	O
meaningful	*(char)
)	O
)	O
{	O
if	O
(	O
STR_SAME	O
(	O
dk	*(struct(*(char),*(char)))
->	O
underlying	*(char)
,	O
num	*(char)
)	O
)	O
return	O
0	int
;	O
else	O
if	O
(	O
rebind	bool
)	O
{	O
MAKEDEF	O
(	O
)	O
;	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
prepend	(*(void),*(struct(*(void),*(struct(*`,*`)))),*(struct(*(char),*(struct),*(void),long)))->(*(struct(*(void),*(struct(*`,*`)))))
(	O
d	*(struct(*(char),*(char)))
,	O
tp	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
SINGLE	O
)	O
;	O
goto	O
ok	O
;	O
}	O
else	O
{	O
RERR	O
(	O
"symbolic name %s already bound to %s"	*(char)
,	O
name	*(char)
,	O
dk	*(struct(*(char),*(char)))
->	O
underlying	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
}	O
MAKEDEF	O
(	O
)	O
;	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
.	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
prepend	(*(void),*(struct(*(void),*(struct(*`,*`)))),*(struct(*(char),*(struct),*(void),long)))->(*(struct(*(void),*(struct(*`,*`)))))
(	O
d	*(struct(*(char),*(char)))
,	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
.	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
,	O
SINGLE	O
)	O
;	O
ok	O
:	O
GROK	O
(	O
symbols	*(struct)
)	O
=	O
box	*(struct(*(void),*(struct(*(void),*(struct`)))))
.	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
;	O
return	O
1	int
;	O
}	O
bool	bool
checkaccesslist	()->(bool)
(	O
void	O
)	O
{	O
struct	O
link	(*(char),*(char))->(int)
*	O
ls	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
GROK	O
(	O
access	*(struct)
)	O
;	O
if	O
(	O
!	O
ls	*(struct(*(void),*(struct(*(void),*(struct`)))))
||	O
stat_mine_p	(*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))))->(bool)
(	O
&	O
REPO	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
)	O
||	O
caller_login_p	(*(char))->(bool)
(	O
"root"	*(char)
)	O
)	O
return	O
true	int
;	O
for	O
(	O
;	O
ls	*(struct(*(void),*(struct(*(void),*(struct`)))))
;	O
ls	*(struct(*(void),*(struct(*(void),*(struct`)))))
=	O
ls	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
next	*(struct(*(void),*(struct(*(void),*(struct`)))))
)	O
if	O
(	O
caller_login_p	(*(char))->(bool)
(	O
ls	*(struct(*(void),*(struct(*(void),*(struct`)))))
->	O
entry	*(void)
)	O
)	O
return	O
true	int
;	O
RERR	O
(	O
"user %s not on the access list"	*(char)
,	O
getcaller	()->(*(char))
(	O
)	O
)	O
;	O
return	O
false	int
;	O
}	O
int	O
dorewrite	(bool,int)->(int)
(	O
bool	bool
lockflag	bool
,	O
int	O
changed	int
)	O
{	O
int	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
0	int
,	O
e	*(char)
;	O
if	O
(	O
lockflag	bool
)	O
{	O
if	O
(	O
changed	int
)	O
{	O
FILE	struct
*	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
if	O
(	O
changed	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
putadmin	()->(void)
(	O
)	O
;	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
puttree	(*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,struct`,*`,*`,*`,bool,long)),bool,long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
REPO	O
(	O
tip	*(struct(*(char),*(char),*(char),*(char),*(char),*(struct),*(struct),*(char),struct(*(char),long),*(struct),*(char),*(struct(*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),*(char),struct(*`,long),*(struct`),*(char),*(struct`),bool,long)),bool,long))
)	O
,	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
aprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"\n\n%s\n"	*(char)
,	O
TINYKS	O
(	O
desc	*(struct)
)	O
)	O
;	O
FLOW	O
(	O
to	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
=	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
}	O
else	O
{	O
ORCSclose	()->(void)
(	O
)	O
;	O
seteid	()->(void)
(	O
)	O
;	O
IGNOREINTS	O
(	O
)	O
;	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
un_link	(*(char))->(int)
(	O
lockname	O
)	O
;	O
e	*(char)
=	O
errno	O
;	O
keepdirtemp	(*(char))->(void)
(	O
lockname	O
)	O
;	O
RESTOREINTS	O
(	O
)	O
;	O
setrid	()->(void)
(	O
)	O
;	O
if	O
(	O
PROB	O
(	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
)	O
)	O
syserror	(int,*(char))->(void)
(	O
e	*(char)
,	O
lockname	O
)	O
;	O
}	O
}	O
return	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
}	O
int	O
donerewrite	(int,long)->(int)
(	O
int	O
changed	int
,	O
time_t	long
newRCStime	long
)	O
{	O
int	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
0	int
,	O
e	*(char)
=	O
0	int
;	O
if	O
(	O
changed	int
&&	O
!	O
FLOW	O
(	O
erroneousp	bool
)	O
)	O
{	O
struct	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
*	O
repo_stat	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
=	O
&	O
REPO	O
(	O
stat	struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long))
)	O
;	O
char	O
const	O
*	O
repo_filename	*(char)
=	O
REPO	O
(	O
filename	*(char)
)	O
;	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
from	*(struct)
=	O
FLOW	O
(	O
from	*(struct)
)	O
;	O
FILE	struct
*	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
if	O
(	O
from	*(struct)
)	O
{	O
fro_spew	(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),long)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
from	*(struct)
,	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fro_zclose	(*(*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long))))->(void)
(	O
&	O
FLOW	O
(	O
from	*(struct)
)	O
)	O
;	O
}	O
if	O
(	O
1	int
<	O
repo_stat	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_nlink	long
)	O
RWARN	O
(	O
"breaking hard link"	*(char)
)	O
;	O
aflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
seteid	()->(void)
(	O
)	O
;	O
IGNOREINTS	O
(	O
)	O
;	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
=	O
chnamemod	(*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))),*(char),*(char),int,int,long)->(int)
(	O
&	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
,	O
newRCSname	O
,	O
repo_filename	*(char)
,	O
changed	int
,	O
repo_stat	*(struct(long,long,long,int,int,int,int,long,long,long,long,struct(long,long),struct(long,long),struct(long,long),array(long)))
->	O
st_mode	int
&	O
(	O
mode_t	int
)	O
~	O
(	O
S_IWUSR	O
|	O
S_IWGRP	O
|	O
S_IWOTH	O
)	O
,	O
newRCStime	long
)	O
;	O
frew	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
e	*(char)
=	O
errno	O
;	O
keepdirtemp	(*(char))->(void)
(	O
newRCSname	O
)	O
;	O
RESTOREINTS	O
(	O
)	O
;	O
setrid	()->(void)
(	O
)	O
;	O
if	O
(	O
PROB	O
(	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
)	O
)	O
{	O
syserror	(int,*(char))->(void)
(	O
e	*(char)
,	O
repo_filename	*(char)
)	O
;	O
PERR	O
(	O
"saved in %s"	*(char)
,	O
newRCSname	O
)	O
;	O
}	O
}	O
return	O
r	*(struct(*(char),*(char),long,*(struct),long,*(struct),long,*(struct),bool,*(struct),*(struct),int,long,*(struct),*(struct),long,*(struct),*(struct)))
;	O
}	O
void	O
ORCSclose	()->(void)
(	O
void	O
)	O
{	O
int	O
repo_fd_lock	int
=	O
REPO	O
(	O
fd_lock	int
)	O
;	O
if	O
(	O
0	int
<=	O
repo_fd_lock	int
)	O
{	O
if	O
(	O
PROB	O
(	O
close	*((*(void))->(int))
(	O
repo_fd_lock	int
)	O
)	O
)	O
fatal_sys	(*(char))->(void)
(	O
lockname	O
)	O
;	O
REPO	O
(	O
fd_lock	int
)	O
=	O
-	O
1	int
;	O
}	O
Ozclose	(*(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))->(void)
(	O
&	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
;	O
}	O
void	O
ORCSerror	()->(void)
(	O
void	O
)	O
{	O
int	O
repo_fd_lock	int
=	O
REPO	O
(	O
fd_lock	int
)	O
;	O
if	O
(	O
0	int
<=	O
repo_fd_lock	int
)	O
close	*((*(void))->(int))
(	O
repo_fd_lock	int
)	O
;	O
if	O
(	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
close	*((*(void))->(int))
(	O
fileno	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
FLOW	O
(	O
rewr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
)	O
;	O
}	O
void	O
unexpected_EOF	()->(void)
(	O
void	O
)	O
{	O
RFATAL	O
(	O
"unexpected EOF in diff output"	*(char)
)	O
;	O
}	O
void	O
initdiffcmd	(*(struct(long,long,long,long)))->(void)
(	O
register	O
struct	O
diffcmd	struct(long,long,long,long)
*	O
dc	*(struct(long,long,long,long))
)	O
{	O
dc	*(struct(long,long,long,long))
->	O
adprev	long
=	O
0	int
;	O
dc	*(struct(long,long,long,long))
->	O
dafter	long
=	O
0	int
;	O
}	O
static	O
void	O
badDiffOutput	(*(char))->(void)
(	O
char	O
const	O
*	O
buf	*(char)
)	O
{	O
RFATAL	O
(	O
"bad diff output line: %s"	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
static	O
void	O
diffLineNumberTooLarge	(*(char))->(void)
(	O
char	O
const	O
*	O
buf	*(char)
)	O
{	O
RFATAL	O
(	O
"diff line number too large: %s"	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
int	O
getdiffcmd	(*(struct),bool,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(struct(long,long,long,long)))->(int)
(	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
finfile	*(struct)
,	O
bool	bool
delimiter	bool
,	O
FILE	struct
*	O
foutfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
struct	O
diffcmd	struct(long,long,long,long)
*	O
dc	*(struct(long,long,long,long))
)	O
{	O
int	O
c	int
;	O
register	O
FILE	struct
*	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
register	O
char	O
*	O
p	*(char)
;	O
register	O
struct	O
fro	struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*`)->(void)),*(struct`),long)))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),long)
*	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
;	O
long	O
line1	long
,	O
nlines	long
,	O
t	long
;	O
char	O
buf	*(char)
[	O
BUFSIZ	int
]	O
;	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
=	O
finfile	*(struct)
;	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
foutfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
GETCHAR_OR	O
(	O
c	int
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
{	O
if	O
(	O
delimiter	bool
)	O
unexpected_EOF	()->(void)
(	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
)	O
;	O
if	O
(	O
delimiter	bool
)	O
{	O
if	O
(	O
c	int
==	O
SDELIM	char
)	O
{	O
GETCHAR	O
(	O
c	int
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
)	O
;	O
if	O
(	O
c	int
==	O
SDELIM	char
)	O
{	O
buf	*(char)
[	O
0	int
]	O
=	O
c	int
;	O
buf	*(char)
[	O
1	int
]	O
=	O
0	int
;	O
badDiffOutput	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
}	O
if	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
aprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%c%c"	*(char)
,	O
SDELIM	char
,	O
c	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
p	*(char)
=	O
buf	*(char)
;	O
do	O
{	O
if	O
(	O
buf	*(char)
+	O
BUFSIZ	int
-	O
2	int
<=	O
p	*(char)
)	O
{	O
RFATAL	O
(	O
"diff output command line too long"	*(char)
)	O
;	O
}	O
*	O
p	*(char)
++	O
=	O
c	int
;	O
GETCHAR_OR	O
(	O
c	int
,	O
fin	*(struct(int,long,enum(int,int,int),*(char),*(char),*(char),*((*(struct`))->(void)),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),long))
,	O
unexpected_EOF	()->(void)
(	O
)	O
)	O
;	O
}	O
while	O
(	O
c	int
!=	O
'\n'	O
)	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
for	O
(	O
p	*(char)
=	O
buf	*(char)
+	O
1	int
;	O
(	O
c	int
=	O
*	O
p	*(char)
++	O
)	O
==	O
' '	O
;	O
)	O
continue	O
;	O
line1	long
=	O
0	int
;	O
while	O
(	O
isdigit	(int)->(int)
(	O
c	int
)	O
)	O
{	O
if	O
(	O
LONG_MAX	O
/	O
10	int
<	O
line1	long
||	O
(	O
t	long
=	O
line1	long
*	O
10	int
,	O
(	O
line1	long
=	O
t	long
+	O
(	O
c	int
-	O
'0'	O
)	O
)	O
<	O
t	long
)	O
)	O
diffLineNumberTooLarge	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
c	int
=	O
*	O
p	*(char)
++	O
;	O
}	O
while	O
(	O
c	int
==	O
' '	O
)	O
c	int
=	O
*	O
p	*(char)
++	O
;	O
nlines	long
=	O
0	int
;	O
while	O
(	O
isdigit	(int)->(int)
(	O
c	int
)	O
)	O
{	O
if	O
(	O
LONG_MAX	O
/	O
10	int
<	O
nlines	long
||	O
(	O
t	long
=	O
nlines	long
*	O
10	int
,	O
(	O
nlines	long
=	O
t	long
+	O
(	O
c	int
-	O
'0'	O
)	O
)	O
<	O
t	long
)	O
)	O
diffLineNumberTooLarge	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
c	int
=	O
*	O
p	*(char)
++	O
;	O
}	O
if	O
(	O
c	int
==	O
'\r'	O
)	O
c	int
=	O
*	O
p	*(char)
++	O
;	O
if	O
(	O
c	int
||	O
!	O
nlines	long
)	O
{	O
badDiffOutput	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
}	O
if	O
(	O
line1	long
+	O
nlines	long
<	O
line1	long
)	O
diffLineNumberTooLarge	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
switch	O
(	O
buf	*(char)
[	O
0	int
]	O
)	O
{	O
case	O
'a'	O
:	O
if	O
(	O
line1	long
<	O
dc	*(struct(long,long,long,long))
->	O
adprev	long
)	O
{	O
RFATAL	O
(	O
"backward insertion in diff output: %s"	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
dc	*(struct(long,long,long,long))
->	O
adprev	long
=	O
line1	long
+	O
1	int
;	O
break	O
;	O
case	O
'd'	O
:	O
if	O
(	O
line1	long
<	O
dc	*(struct(long,long,long,long))
->	O
adprev	long
||	O
line1	long
<	O
dc	*(struct(long,long,long,long))
->	O
dafter	long
)	O
{	O
RFATAL	O
(	O
"backward deletion in diff output: %s"	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
dc	*(struct(long,long,long,long))
->	O
adprev	long
=	O
line1	long
;	O
dc	*(struct(long,long,long,long))
->	O
dafter	long
=	O
line1	long
+	O
nlines	long
;	O
break	O
;	O
default	O
:	O
badDiffOutput	(*(char))->(void)
(	O
buf	*(char)
)	O
;	O
}	O
if	O
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
aprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(void)
(	O
fout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
buf	*(char)
)	O
;	O
}	O
dc	*(struct(long,long,long,long))
->	O
line1	long
=	O
line1	long
;	O
dc	*(struct(long,long,long,long))
->	O
nlines	long
=	O
nlines	long
;	O
return	O
buf	*(char)
[	O
0	int
]	O
==	O
'a'	O
;	O
}	O
