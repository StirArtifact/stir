void	O
mpn_toom33_mul	O
(	O
mp_ptr	*(long)
pp	*(long)
,	O
mp_srcptr	*(long)
ap	*(long)
,	O
mp_size_t	long
an	long
,	O
mp_srcptr	*(long)
bp	*(long)
,	O
mp_size_t	long
bn	long
,	O
mp_ptr	*(long)
scratch	*(long)
)	O
{	O
const	O
int	O
__gmpn_cpuvec_initialized	int
=	O
1	int
;	O
mp_size_t	long
n	long
,	O
s	array(char)
,	O
t	long
;	O
int	O
vm1_neg	int
;	O
mp_limb_t	long
cy	long
,	O
vinf0	long
;	O
mp_ptr	*(long)
gp	*(long)
;	O
mp_ptr	*(long)
as1	*(long)
,	O
asm1	*(long)
,	O
as2	*(long)
;	O
mp_ptr	*(long)
bs1	*(long)
,	O
bsm1	*(long)
,	O
bs2	*(long)
;	O
n	long
=	O
(	O
an	long
+	O
2	int
)	O
/	O
(	O
size_t	long
)	O
3	int
;	O
s	array(char)
=	O
an	long
-	O
2	int
*	O
n	long
;	O
t	long
=	O
bn	long
-	O
2	int
*	O
n	long
;	O
ASSERT	O
(	O
an	long
>=	O
bn	long
)	O
;	O
ASSERT	O
(	O
0	int
<	O
s	array(char)
&&	O
s	array(char)
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
0	int
<	O
t	long
&&	O
t	long
<=	O
n	long
)	O
;	O
as1	*(long)
=	O
scratch	*(long)
+	O
4	int
*	O
n	long
+	O
4	int
;	O
asm1	*(long)
=	O
scratch	*(long)
+	O
2	int
*	O
n	long
+	O
2	int
;	O
as2	*(long)
=	O
pp	*(long)
+	O
n	long
+	O
1	int
;	O
bs1	*(long)
=	O
pp	*(long)
;	O
bsm1	*(long)
=	O
scratch	*(long)
+	O
3	int
*	O
n	long
+	O
3	int
;	O
bs2	*(long)
=	O
pp	*(long)
+	O
2	int
*	O
n	long
+	O
2	int
;	O
gp	*(long)
=	O
scratch	*(long)
;	O
vm1_neg	int
=	O
0	int
;	O
cy	long
=	O
mpn_add	O
(	O
gp	*(long)
,	O
a0	O
,	O
n	long
,	O
a2	O
,	O
s	array(char)
)	O
;	O
as1	*(long)
[	O
n	long
]	O
=	O
cy	long
+	O
mpn_add_n	O
(	O
as1	*(long)
,	O
gp	*(long)
,	O
a1	O
,	O
n	long
)	O
;	O
if	O
(	O
cy	long
==	O
0	int
&&	O
mpn_cmp	O
(	O
gp	*(long)
,	O
a1	O
,	O
n	long
)	O
<	O
0	int
)	O
{	O
mpn_sub_n	O
(	O
asm1	*(long)
,	O
a1	O
,	O
gp	*(long)
,	O
n	long
)	O
;	O
asm1	*(long)
[	O
n	long
]	O
=	O
0	int
;	O
vm1_neg	int
=	O
1	int
;	O
}	O
else	O
{	O
cy	long
-=	O
mpn_sub_n	O
(	O
asm1	*(long)
,	O
gp	*(long)
,	O
a1	O
,	O
n	long
)	O
;	O
asm1	*(long)
[	O
n	long
]	O
=	O
cy	long
;	O
}	O
cy	long
=	O
mpn_add_n	O
(	O
as2	*(long)
,	O
a2	O
,	O
as1	*(long)
,	O
s	array(char)
)	O
;	O
if	O
(	O
s	array(char)
!=	O
n	long
)	O
cy	long
=	O
mpn_add_1	O
(	O
as2	*(long)
+	O
s	array(char)
,	O
as1	*(long)
+	O
s	array(char)
,	O
n	long
-	O
s	array(char)
,	O
cy	long
)	O
;	O
cy	long
+=	O
as1	*(long)
[	O
n	long
]	O
;	O
cy	long
=	O
2	int
*	O
cy	long
+	O
mpn_rsblsh1_n	O
(	O
as2	*(long)
,	O
a0	O
,	O
as2	*(long)
,	O
n	long
)	O
;	O
as2	*(long)
[	O
n	long
]	O
=	O
cy	long
;	O
cy	long
=	O
mpn_add	O
(	O
gp	*(long)
,	O
b0	O
,	O
n	long
,	O
b2	O
,	O
t	long
)	O
;	O
bs1	*(long)
[	O
n	long
]	O
=	O
cy	long
+	O
mpn_add_n	O
(	O
bs1	*(long)
,	O
gp	*(long)
,	O
b1	O
,	O
n	long
)	O
;	O
if	O
(	O
cy	long
==	O
0	int
&&	O
mpn_cmp	O
(	O
gp	*(long)
,	O
b1	O
,	O
n	long
)	O
<	O
0	int
)	O
{	O
mpn_sub_n	O
(	O
bsm1	*(long)
,	O
b1	O
,	O
gp	*(long)
,	O
n	long
)	O
;	O
bsm1	*(long)
[	O
n	long
]	O
=	O
0	int
;	O
vm1_neg	int
^=	O
1	int
;	O
}	O
else	O
{	O
cy	long
-=	O
mpn_sub_n	O
(	O
bsm1	*(long)
,	O
gp	*(long)
,	O
b1	O
,	O
n	long
)	O
;	O
bsm1	*(long)
[	O
n	long
]	O
=	O
cy	long
;	O
}	O
cy	long
=	O
mpn_add_n	O
(	O
bs2	*(long)
,	O
b2	O
,	O
bs1	*(long)
,	O
t	long
)	O
;	O
if	O
(	O
t	long
!=	O
n	long
)	O
cy	long
=	O
mpn_add_1	O
(	O
bs2	*(long)
+	O
t	long
,	O
bs1	*(long)
+	O
t	long
,	O
n	long
-	O
t	long
,	O
cy	long
)	O
;	O
cy	long
+=	O
bs1	*(long)
[	O
n	long
]	O
;	O
cy	long
=	O
2	int
*	O
cy	long
+	O
mpn_rsblsh1_n	O
(	O
bs2	*(long)
,	O
b0	O
,	O
bs2	*(long)
,	O
n	long
)	O
;	O
bs2	*(long)
[	O
n	long
]	O
=	O
cy	long
;	O
ASSERT	O
(	O
as1	*(long)
[	O
n	long
]	O
<=	O
2	int
)	O
;	O
ASSERT	O
(	O
bs1	*(long)
[	O
n	long
]	O
<=	O
2	int
)	O
;	O
ASSERT	O
(	O
asm1	*(long)
[	O
n	long
]	O
<=	O
1	int
)	O
;	O
ASSERT	O
(	O
bsm1	*(long)
[	O
n	long
]	O
<=	O
1	int
)	O
;	O
ASSERT	O
(	O
as2	*(long)
[	O
n	long
]	O
<=	O
6	int
)	O
;	O
ASSERT	O
(	O
bs2	*(long)
[	O
n	long
]	O
<=	O
6	int
)	O
;	O
TOOM33_MUL_N_REC	O
(	O
vm1	O
,	O
asm1	*(long)
,	O
bsm1	*(long)
,	O
n	long
+	O
1	int
,	O
scratch_out	O
)	O
;	O
TOOM33_MUL_N_REC	O
(	O
v2	O
,	O
as2	*(long)
,	O
bs2	*(long)
,	O
n	long
+	O
1	int
,	O
scratch_out	O
)	O
;	O
if	O
(	O
s	array(char)
>	O
t	long
)	O
mpn_mul	O
(	O
vinf	O
,	O
a2	O
,	O
s	array(char)
,	O
b2	O
,	O
t	long
)	O
;	O
else	O
TOOM33_MUL_N_REC	O
(	O
vinf	O
,	O
a2	O
,	O
b2	O
,	O
s	array(char)
,	O
scratch_out	O
)	O
;	O
vinf0	long
=	O
vinf	O
[	O
0	int
]	O
;	O
cy	long
=	O
vinf	O
[	O
1	int
]	O
;	O
TOOM33_MUL_N_REC	O
(	O
v1	O
,	O
as1	*(long)
,	O
bs1	*(long)
,	O
n	long
+	O
1	int
,	O
scratch_out	O
)	O
;	O
vinf	O
[	O
1	int
]	O
=	O
cy	long
;	O
TOOM33_MUL_N_REC	O
(	O
v0	O
,	O
ap	*(long)
,	O
bp	*(long)
,	O
n	long
,	O
scratch_out	O
)	O
;	O
mpn_toom_interpolate_5pts	O
(	O
pp	*(long)
,	O
v2	O
,	O
vm1	O
,	O
n	long
,	O
s	array(char)
+	O
t	long
,	O
vm1_neg	int
,	O
vinf0	long
)	O
;	O
}	O
