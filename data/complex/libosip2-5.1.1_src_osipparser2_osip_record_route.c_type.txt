int	O
osip_record_route_init	(*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
*	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
)	O
{	O
return	O
osip_from_init	(*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
(	O
osip_from_t	struct
*	O
*	O
)	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
)	O
;	O
}	O
int	O
osip_message_set_record_route	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
;	O
int	O
i	int
;	O
if	O
(	O
hvalue	*(char)
==	O
NULL	O
||	O
hvalue	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
i	int
=	O
osip_record_route_init	(*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
&	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
i	int
=	O
osip_record_route_parse	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(char))->(int)
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
,	O
hvalue	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_record_route_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
)	O
;	O
return	O
i	int
;	O
}	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
2	int
;	O
osip_list_add	(*(struct(int,*(struct(*`,*`)))),*(void),int)->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_record_route	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),int,*(*(struct(*(char),*(struct`),struct(int,*`)))))->(int)
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
int	O
pos	int
,	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
*	O
dest	*(char)
)	O
{	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	(*(struct(int,*(struct(*`,*`)))))->(int)
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
)	O
<=	O
pos	int
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
=	O
(	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
)	O
osip_list_get	(*(struct(int,*(struct(*`,*`)))),int)->(*(void))
(	O
&	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
record_routes	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
pos	int
)	O
;	O
*	O
dest	*(char)
=	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
;	O
return	O
pos	int
;	O
}	O
int	O
osip_record_route_parse	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(char))->(int)
(	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
return	O
osip_from_parse	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(char))->(int)
(	O
(	O
osip_from_t	struct
*	O
)	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
,	O
hvalue	*(char)
)	O
;	O
}	O
int	O
osip_record_route_to_str	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))),*(*(char)))->(int)
(	O
const	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
char	O
*	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
;	O
char	O
*	O
buf	*(char)
;	O
int	O
i	int
;	O
size_t	long
len	long
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
==	O
NULL	O
)	O
||	O
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
==	O
NULL	O
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_uri_to_str	(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),*(*(char)))->(int)
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
,	O
&	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
displayname	*(char)
==	O
NULL	O
)	O
len	long
=	O
strlen	(*(char))->(long)
(	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
+	O
5	int
;	O
else	O
len	long
=	O
strlen	(*(char))->(long)
(	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
+	O
strlen	(*(char))->(long)
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
displayname	*(char)
)	O
+	O
5	int
;	O
buf	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
buf	*(char)
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
displayname	*(char)
!=	O
NULL	O
)	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"%s <%s>"	*(char)
,	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
displayname	*(char)
,	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
;	O
else	O
sprintf	(*(char),*(char))->(int)
(	O
buf	*(char)
,	O
"<%s>"	*(char)
,	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
;	O
osip_free	O
(	O
url	*(*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))))
)	O
;	O
{	O
size_t	long
plen	long
;	O
char	O
*	O
tmp	*(char)
;	O
osip_list_iterator_t	struct
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
;	O
osip_generic_param_t	struct(*(char),*(char))
*	O
u_param	*(struct(*(char),*(char)))
=	O
(	O
osip_generic_param_t	struct(*(char),*(char))
*	O
)	O
osip_list_get_first	(*(struct(int,*(struct(*`,*`)))),*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
->	O
gen_params	struct(int,*(struct(*(struct(*`,*`)),*(void))))
,	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
while	O
(	O
u_param	*(struct(*(char),*(char)))
!=	O
OSIP_SUCCESS	int
)	O
{	O
if	O
(	O
u_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
==	O
NULL	O
)	O
plen	long
=	O
strlen	(*(char))->(long)
(	O
u_param	*(struct(*(char),*(char)))
->	O
gname	*(char)
)	O
+	O
2	int
;	O
else	O
plen	long
=	O
strlen	(*(char))->(long)
(	O
u_param	*(struct(*(char),*(char)))
->	O
gname	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
u_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
+	O
3	int
;	O
len	long
=	O
len	long
+	O
plen	long
;	O
buf	*(char)
=	O
(	O
char	O
*	O
)	O
osip_realloc	O
(	O
buf	*(char)
,	O
len	long
)	O
;	O
tmp	*(char)
=	O
buf	*(char)
;	O
tmp	*(char)
=	O
tmp	*(char)
+	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
;	O
if	O
(	O
u_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
==	O
NULL	O
)	O
snprintf	(*(char),long,*(char))->(int)
(	O
tmp	*(char)
,	O
len	long
-	O
(	O
tmp	*(char)
-	O
buf	*(char)
)	O
,	O
";%s"	*(char)
,	O
u_param	*(struct(*(char),*(char)))
->	O
gname	*(char)
)	O
;	O
else	O
snprintf	(*(char),long,*(char))->(int)
(	O
tmp	*(char)
,	O
len	long
-	O
(	O
tmp	*(char)
-	O
buf	*(char)
)	O
,	O
";%s=%s"	*(char)
,	O
u_param	*(struct(*(char),*(char)))
->	O
gname	*(char)
,	O
u_param	*(struct(*(char),*(char)))
->	O
gvalue	*(char)
)	O
;	O
u_param	*(struct(*(char),*(char)))
=	O
(	O
osip_generic_param_t	struct(*(char),*(char))
*	O
)	O
osip_list_get_next	(*(struct(*(struct(*`,*`)),*(*(struct`)),*(struct(int,*`)),int)))->(*(void))
(	O
&	O
it	*(struct(*(struct(*(struct`),*(void))),*(*(struct(*`,*`))),*(struct(int,*(struct`))),int))
)	O
;	O
}	O
}	O
*	O
dest	*(char)
=	O
buf	*(char)
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_record_route_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
osip_record_route_t	struct(*(char),*(struct(*(char),*(char),*(char),*(char),*(char),struct(int,*(struct`)),struct(int,*(struct`)),*(char))),struct(int,*(struct(*(struct`),*(void)))))
*	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
)	O
{	O
osip_from_free	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))->(void)
(	O
(	O
osip_from_t	struct
*	O
)	O
record_route	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),struct(int,*(struct`)))))
)	O
;	O
}	O
