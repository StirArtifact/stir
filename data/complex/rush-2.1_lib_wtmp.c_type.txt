enum	O
rush_wtmp_dir	enum(int,int)
rush_wtmp_dir	enum(int,int)
=	O
rush_wtmp_forward	int
;	O
static	O
int	O
wtmp_fd	int
=	O
-	O
1	int
;	O
static	O
size_t	long
wtmp_recsize	long
=	O
0	int
;	O
int	O
rush_wtmp_open	(*(char),int)->(int)
(	O
const	O
char	O
*	O
name	*(char)
,	O
int	O
rw	int
)	O
{	O
int	O
fd	int
;	O
fd	int
=	O
open	(*(char),int)->(int)
(	O
name	*(char)
,	O
rw	int
?	O
O_RDWR	int
|	O
O_CREAT	int
:	O
O_RDONLY	int
,	O
rushdb_file_mode	int
)	O
;	O
if	O
(	O
fd	int
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
wtmp_fd	int
=	O
fd	int
;	O
return	O
0	int
;	O
}	O
int	O
rush_wtmp_close	()->(int)
(	O
)	O
{	O
int	O
rc	int
=	O
close	(int)->(int)
(	O
wtmp_fd	int
)	O
;	O
wtmp_fd	int
=	O
-	O
1	int
;	O
return	O
rc	int
;	O
}	O
int	O
rush_wtmp_rewind	()->(int)
(	O
void	O
)	O
{	O
int	O
whence	int
;	O
switch	O
(	O
rush_wtmp_dir	enum(int,int)
)	O
{	O
case	O
rush_wtmp_forward	int
:	O
whence	int
=	O
SEEK_SET	int
;	O
break	O
;	O
case	O
rush_wtmp_backward	int
:	O
whence	int
=	O
SEEK_END	int
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
return	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
0	int
,	O
whence	int
)	O
==	O
-	O
1	int
;	O
}	O
void	O
rush_wtmp_set_dir	(enum(int,int))->(void)
(	O
enum	O
rush_wtmp_dir	enum(int,int)
dir	enum(int,int)
)	O
{	O
rush_wtmp_dir	enum(int,int)
=	O
dir	enum(int,int)
;	O
rush_wtmp_rewind	()->(int)
(	O
)	O
;	O
}	O
int	O
rush_wtmp_seek	(long)->(int)
(	O
off_t	long
off	long
)	O
{	O
off_t	long
rc	int
=	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
off	long
,	O
SEEK_SET	int
)	O
;	O
if	O
(	O
rc	int
==	O
off	long
)	O
{	O
wtmp_recsize	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
alloc_wtmp	(long)->(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
(	O
size_t	long
reclen	long
)	O
{	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
=	O
malloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
+	O
reclen	long
-	O
sizeof	O
(	O
size_t	long
)	O
)	O
;	O
if	O
(	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
=	O
reclen	long
;	O
return	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
}	O
enum	O
rushdb_result	enum(int,int,int)
rush_wtmp_read_fwd	(*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))))->(enum(int,int,int))
(	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
*	O
pwtmp	*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
)	O
{	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
size_t	long
reclen	long
,	O
left	long
;	O
ssize_t	long
size	long
;	O
char	O
*	O
p	*(char)
,	O
*	O
s	*(char)
;	O
if	O
(	O
wtmp_fd	int
==	O
-	O
1	int
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
rushdb_result_fail	int
;	O
}	O
size	long
=	O
read	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
&	O
reclen	long
,	O
sizeof	O
(	O
reclen	long
)	O
)	O
;	O
if	O
(	O
size	long
==	O
0	int
)	O
return	O
rushdb_result_eof	int
;	O
if	O
(	O
size	long
!=	O
sizeof	O
(	O
reclen	long
)	O
)	O
return	O
rushdb_result_fail	int
;	O
wtmp_recsize	long
=	O
reclen	long
;	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
=	O
alloc_wtmp	(long)->(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
(	O
reclen	long
)	O
;	O
if	O
(	O
!	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
return	O
rushdb_result_fail	int
;	O
p	*(char)
=	O
RUSH_WTMP_DATA_PTR	O
(	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
;	O
reclen	long
-=	O
sizeof	O
(	O
reclen	long
)	O
;	O
left	long
=	O
reclen	long
;	O
while	O
(	O
left	long
)	O
{	O
ssize_t	long
n	long
=	O
read	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
p	*(char)
,	O
left	long
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
goto	O
errlab	O
;	O
p	*(char)
+=	O
n	long
;	O
left	long
-=	O
n	long
;	O
}	O
p	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
+	O
1	int
)	O
;	O
s	*(char)
=	O
p	*(char)
;	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
user	*(char)
=	O
s	*(char)
;	O
s	*(char)
+=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
+	O
1	int
;	O
if	O
(	O
s	*(char)
-	O
p	*(char)
>	O
reclen	long
)	O
goto	O
errlab	O
;	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
rule	*(char)
=	O
s	*(char)
;	O
s	*(char)
+=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
+	O
1	int
;	O
if	O
(	O
s	*(char)
-	O
p	*(char)
>	O
reclen	long
)	O
goto	O
errlab	O
;	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
command	*(char)
=	O
s	*(char)
;	O
*	O
pwtmp	*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
=	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
return	O
rushdb_result_ok	int
;	O
errlab	O
:	O
free	(*(void))->(void)
(	O
wtmprec	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
;	O
rush_wtmp_close	()->(int)
(	O
)	O
;	O
return	O
rushdb_result_fail	int
;	O
}	O
enum	O
rushdb_result	enum(int,int,int)
rush_wtmp_read	(*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))))->(enum(int,int,int))
(	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
*	O
pwtmp	*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
)	O
{	O
size_t	long
reclen	long
;	O
enum	O
rushdb_result	enum(int,int,int)
res	enum(int,int,int)
;	O
switch	O
(	O
rush_wtmp_dir	enum(int,int)
)	O
{	O
case	O
rush_wtmp_forward	int
:	O
res	enum(int,int,int)
=	O
rush_wtmp_read_fwd	(*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))))->(enum(int,int,int))
(	O
pwtmp	*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
)	O
;	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
sizeof	O
(	O
reclen	long
)	O
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
res	enum(int,int,int)
=	O
rushdb_result_fail	int
;	O
break	O
;	O
case	O
rush_wtmp_backward	int
:	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
0	int
,	O
SEEK_CUR	int
)	O
==	O
0	int
)	O
return	O
rushdb_result_eof	int
;	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
-	O
sizeof	O
(	O
reclen	long
)	O
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
return	O
rushdb_result_fail	int
;	O
if	O
(	O
read	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
&	O
reclen	long
,	O
sizeof	O
(	O
reclen	long
)	O
)	O
!=	O
sizeof	O
(	O
reclen	long
)	O
)	O
return	O
rushdb_result_fail	int
;	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
-	O
(	O
reclen	long
+	O
sizeof	O
(	O
reclen	long
)	O
)	O
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
return	O
rushdb_result_fail	int
;	O
res	enum(int,int,int)
=	O
rush_wtmp_read_fwd	(*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))))->(enum(int,int,int))
(	O
pwtmp	*(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
)	O
;	O
if	O
(	O
res	enum(int,int,int)
==	O
rushdb_result_ok	int
)	O
{	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
-	O
reclen	long
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
return	O
rushdb_result_fail	int
;	O
}	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
return	O
res	enum(int,int,int)
;	O
}	O
size_t	long
rush_wtmp_reclen	(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))->(long)
(	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
{	O
size_t	long
reclen	long
=	O
sizeof	O
(	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
)	O
+	O
strlen	(*(char))->(long)
(	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
user	*(char)
)	O
+	O
1	int
+	O
strlen	(*(char))->(long)
(	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
rule	*(char)
)	O
+	O
1	int
+	O
strlen	(*(char))->(long)
(	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
command	*(char)
)	O
+	O
1	int
;	O
return	O
reclen	long
;	O
}	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
rush_wtmp_copy	(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))->(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
(	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
{	O
size_t	long
reclen	long
=	O
rush_wtmp_reclen	(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))->(long)
(	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
;	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
=	O
malloc	(long)->(*(void))
(	O
reclen	long
)	O
;	O
if	O
(	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
{	O
char	O
*	O
p	*(char)
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
=	O
reclen	long
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
pid	int
=	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
pid	int
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
start	struct(long,long)
=	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
start	struct(long,long)
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
stop	struct(long,long)
=	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
stop	struct(long,long)
;	O
p	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
p	*(char)
,	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
user	*(char)
)	O
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
user	*(char)
=	O
NULL	O
;	O
p	*(char)
+=	O
strlen	(*(char))->(long)
(	O
p	*(char)
)	O
+	O
1	int
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
rule	*(char)
=	O
NULL	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
p	*(char)
,	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
rule	*(char)
)	O
;	O
p	*(char)
+=	O
strlen	(*(char))->(long)
(	O
p	*(char)
)	O
+	O
1	int
;	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
command	*(char)
=	O
NULL	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
p	*(char)
,	O
src	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
command	*(char)
)	O
;	O
p	*(char)
+=	O
strlen	(*(char))->(long)
(	O
p	*(char)
)	O
+	O
1	int
;	O
}	O
return	O
dst	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
}	O
off_t	long
rush_wtmp_append	(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))->(long)
(	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
{	O
size_t	long
left	long
;	O
char	O
*	O
p	*(char)
;	O
off_t	long
off	long
;	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
*	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
if	O
(	O
wtmp_fd	int
==	O
-	O
1	int
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
off	long
=	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
0	int
,	O
SEEK_END	int
)	O
;	O
if	O
(	O
off	long
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
=	O
rush_wtmp_copy	(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))->(*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))))
(	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
;	O
rushdb_lock	(int,long,long,int,int)->(int)
(	O
wtmp_fd	int
,	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
,	O
off	long
,	O
SEEK_SET	int
,	O
RUSH_LOCK_WRITE	int
)	O
;	O
left	long
=	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
;	O
p	*(char)
=	O
(	O
char	O
*	O
)	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
while	O
(	O
left	long
)	O
{	O
ssize_t	long
n	long
=	O
write	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
p	*(char)
,	O
left	long
)	O
;	O
if	O
(	O
n	long
==	O
-	O
1	int
)	O
goto	O
errlab	O
;	O
p	*(char)
+=	O
n	long
;	O
left	long
-=	O
n	long
;	O
}	O
if	O
(	O
write	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
&	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
,	O
sizeof	O
(	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
)	O
)	O
!=	O
sizeof	O
(	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
)	O
)	O
goto	O
errlab	O
;	O
rushdb_unlock	(int,long,long,int)->(int)
(	O
wtmp_fd	int
,	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
,	O
off	long
,	O
SEEK_SET	int
)	O
;	O
wtmp_recsize	long
=	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
;	O
free	(*(void))->(void)
(	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
;	O
return	O
off	long
;	O
errlab	O
:	O
rushdb_unlock	(int,long,long,int)->(int)
(	O
wtmp_fd	int
,	O
record	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
->	O
reclen	long
,	O
off	long
,	O
SEEK_SET	int
)	O
;	O
rush_wtmp_close	()->(int)
(	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
int	O
rush_wtmp_update	(*(struct(long,long)))->(int)
(	O
struct	O
timeval	struct(long,long)
*	O
tv	*(struct(long,long))
)	O
{	O
struct	O
rush_wtmp	struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char))
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
-	O
(	O
wtmp_recsize	long
+	O
sizeof	O
(	O
size_t	long
)	O
)	O
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
return	O
1	int
;	O
if	O
(	O
read	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
&	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
,	O
sizeof	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
!=	O
sizeof	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
return	O
1	int
;	O
if	O
(	O
lseek	(int,long,int)->(long)
(	O
wtmp_fd	int
,	O
-	O
sizeof	O
(	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
,	O
SEEK_CUR	int
)	O
==	O
-	O
1	int
)	O
return	O
1	int
;	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
.	O
stop	struct(long,long)
=	O
*	O
tv	*(struct(long,long))
;	O
return	O
write	(int,*(void),long)->(long)
(	O
wtmp_fd	int
,	O
&	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
,	O
sizeof	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
)	O
!=	O
sizeof	O
wtmp	*(struct(long,int,struct(long,long),struct(long,long),*(char),*(char),*(char)))
;	O
}	O
