int	O
gsl_sf_bessel_Ynupos_e	(double,double,*(struct(double,double)))->(int)
(	O
double	O
nu	double
,	O
double	O
x	double
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
if	O
(	O
nu	double
>	O
50.0	int
)	O
{	O
return	O
gsl_sf_bessel_Ynu_asymp_Olver_e	(double,double,*(struct(double,double)))->(int)
(	O
nu	double
,	O
x	double
,	O
result	*(struct(double,double))
)	O
;	O
}	O
else	O
{	O
int	O
N	int
=	O
(	O
int	O
)	O
(	O
nu	double
+	O
0.5	int
)	O
;	O
double	O
mu	double
=	O
nu	double
-	O
N	int
;	O
gsl_sf_result	struct(double,double)
Y_mu	struct(double,double)
,	O
Y_mup1	struct(double,double)
;	O
int	O
stat_mu	int
;	O
double	O
Ynm1	double
;	O
double	O
Yn	double
;	O
double	O
Ynp1	double
;	O
int	O
n	int
;	O
if	O
(	O
x	double
<	O
2.0	int
)	O
{	O
stat_mu	int
=	O
gsl_sf_bessel_Y_temme	(double,double,*(struct(double,double)),*(struct(double,double)))->(int)
(	O
mu	double
,	O
x	double
,	O
&	O
Y_mu	struct(double,double)
,	O
&	O
Y_mup1	struct(double,double)
)	O
;	O
}	O
else	O
{	O
gsl_sf_result	struct(double,double)
J_mu	struct(double,double)
,	O
J_mup1	struct(double,double)
;	O
stat_mu	int
=	O
gsl_sf_bessel_JY_mu_restricted	(double,double,*(struct(double,double)),*(struct(double,double)),*(struct(double,double)),*(struct(double,double)))->(int)
(	O
mu	double
,	O
x	double
,	O
&	O
J_mu	struct(double,double)
,	O
&	O
J_mup1	struct(double,double)
,	O
&	O
Y_mu	struct(double,double)
,	O
&	O
Y_mup1	struct(double,double)
)	O
;	O
}	O
Ynm1	double
=	O
Y_mu	struct(double,double)
.	O
val	double
;	O
Yn	double
=	O
Y_mup1	struct(double,double)
.	O
val	double
;	O
for	O
(	O
n	int
=	O
1	int
;	O
n	int
<=	O
N	int
;	O
n	int
++	O
)	O
{	O
Ynp1	double
=	O
2.0	int
*	O
(	O
mu	double
+	O
n	int
)	O
/	O
x	double
*	O
Yn	double
-	O
Ynm1	double
;	O
Ynm1	double
=	O
Yn	double
;	O
Yn	double
=	O
Ynp1	double
;	O
}	O
result	*(struct(double,double))
->	O
val	double
=	O
Ynm1	double
;	O
result	*(struct(double,double))
->	O
err	double
=	O
(	O
N	int
+	O
1.0	int
)	O
*	O
fabs	(double)->(double)
(	O
Ynm1	double
)	O
*	O
(	O
fabs	(double)->(double)
(	O
Y_mu	struct(double,double)
.	O
err	double
/	O
Y_mu	struct(double,double)
.	O
val	double
)	O
+	O
fabs	(double)->(double)
(	O
Y_mup1	struct(double,double)
.	O
err	double
/	O
Y_mup1	struct(double,double)
.	O
val	double
)	O
)	O
;	O
result	*(struct(double,double))
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	(double)->(double)
(	O
Ynm1	double
)	O
;	O
return	O
stat_mu	int
;	O
}	O
}	O
int	O
gsl_sf_bessel_Ynu_e	(double,double,*(struct(double,double)))->(int)
(	O
double	O
nu	double
,	O
double	O
x	double
,	O
gsl_sf_result	struct(double,double)
*	O
result	*(struct(double,double))
)	O
{	O
if	O
(	O
x	double
<=	O
0.0	int
)	O
{	O
DOMAIN_ERROR	O
(	O
result	*(struct(double,double))
)	O
;	O
}	O
else	O
if	O
(	O
nu	double
<	O
0.0	int
)	O
{	O
int	O
Jstatus	int
=	O
gsl_sf_bessel_Jnupos_e	(double,double,*(struct(double,double)))->(int)
(	O
-	O
nu	double
,	O
x	double
,	O
result	*(struct(double,double))
)	O
;	O
double	O
Jval	double
=	O
result	*(struct(double,double))
->	O
val	double
;	O
double	O
Jerr	double
=	O
result	*(struct(double,double))
->	O
err	double
;	O
int	O
Ystatus	int
=	O
gsl_sf_bessel_Ynupos_e	(double,double,*(struct(double,double)))->(int)
(	O
-	O
nu	double
,	O
x	double
,	O
result	*(struct(double,double))
)	O
;	O
double	O
Yval	double
=	O
result	*(struct(double,double))
->	O
val	double
;	O
double	O
Yerr	double
=	O
result	*(struct(double,double))
->	O
err	double
;	O
int	O
sinstatus	int
=	O
gsl_sf_sin_pi_e	(double,*(struct(double,double)))->(int)
(	O
nu	double
,	O
result	*(struct(double,double))
)	O
;	O
double	O
s	int
=	O
result	*(struct(double,double))
->	O
val	double
;	O
double	O
serr	double
=	O
result	*(struct(double,double))
->	O
err	double
;	O
int	O
cosstatus	int
=	O
gsl_sf_cos_pi_e	(double,*(struct(double,double)))->(int)
(	O
nu	double
,	O
result	*(struct(double,double))
)	O
;	O
double	O
c	double
=	O
result	*(struct(double,double))
->	O
val	double
;	O
double	O
cerr	double
=	O
result	*(struct(double,double))
->	O
err	double
;	O
result	*(struct(double,double))
->	O
val	double
=	O
c	double
*	O
Yval	double
-	O
s	int
*	O
Jval	double
;	O
result	*(struct(double,double))
->	O
err	double
=	O
fabs	(double)->(double)
(	O
c	double
*	O
Yerr	double
)	O
+	O
fabs	(double)->(double)
(	O
s	int
*	O
Jerr	double
)	O
+	O
fabs	(double)->(double)
(	O
cerr	double
*	O
Yval	double
)	O
+	O
fabs	(double)->(double)
(	O
serr	double
*	O
Jval	double
)	O
;	O
return	O
GSL_ERROR_SELECT_4	O
(	O
Jstatus	int
,	O
Ystatus	int
,	O
sinstatus	int
,	O
cosstatus	int
)	O
;	O
}	O
else	O
return	O
gsl_sf_bessel_Ynupos_e	(double,double,*(struct(double,double)))->(int)
(	O
nu	double
,	O
x	double
,	O
result	*(struct(double,double))
)	O
;	O
}	O
double	O
gsl_sf_bessel_Ynu	(double,double)->(double)
(	O
const	O
double	O
nu	double
,	O
const	O
double	O
x	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_bessel_Ynu_e	(double,double,*(struct(double,double)))->(int)
(	O
nu	double
,	O
x	double
,	O
&	O
result	*(struct(double,double))
)	O
)	O
;	O
}	O
