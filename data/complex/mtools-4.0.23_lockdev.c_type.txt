static	O
void	O
alrm	(int)->(void)
(	O
int	O
a	int
UNUSEDP	O
)	O
{	O
}	O
int	O
lock_dev	(int,int,*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))))->(int)
(	O
int	O
fd	int
,	O
int	O
mode	int
,	O
struct	O
device	struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char))
*	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
{	O
unsigned	O
int	O
retries	int
=	O
0	int
;	O
if	O
(	O
IS_NOLOCK	O
(	O
dev	*(struct(*(char),char,int,int,int,short,short,int,long,int,int,char,int,*(char),int,int,int,*(char)))
)	O
)	O
return	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
int	O
ret	int
=	O
0	int
;	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
old_alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
;	O
int	O
old_alrm	int
=	O
alarm	(int)->(int)
(	O
0	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
0	int
,	O
sizeof	O
(	O
alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
)	O
)	O
;	O
alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_handler	*((int)->(void))
=	O
alrm	(int)->(void)
;	O
alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
.	O
sa_flags	int
=	O
0	int
;	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGALRM	int
,	O
&	O
alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
&	O
old_alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
)	O
;	O
alarm	(int)->(int)
(	O
mtools_lock_timeout	int
)	O
;	O
ret	int
=	O
flock	struct(short,short,long,long,int)
(	O
fd	int
,	O
(	O
mode	int
?	O
LOCK_EX	int
:	O
LOCK_SH	int
)	O
)	O
;	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGALRM	int
,	O
&	O
old_alrm_action	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
NULL	O
)	O
;	O
alarm	(int)->(int)
(	O
old_alrm	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
{	O
return	O
1	int
;	O
}	O
if	O
(	O
(	O
errno	O
!=	O
EWOULDBLOCK	O
)	O
&&	O
(	O
errno	O
!=	O
EAGAIN	int
)	O
&&	O
(	O
errno	O
!=	O
EINTR	int
)	O
)	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
return	O
0	int
;	O
if	O
(	O
retries	int
++	O
<	O
mtools_lock_timeout	int
*	O
10	int
)	O
usleep	(int)->(int)
(	O
100000	int
)	O
;	O
else	O
return	O
1	int
;	O
}	O
}	O
