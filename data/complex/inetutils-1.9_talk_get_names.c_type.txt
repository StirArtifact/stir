char	O
*	O
getlogin	()->(*(char))
(	O
void	O
)	O
;	O
char	O
*	O
ttyname	(int)->(*(char))
(	O
int	O
)	O
;	O
extern	O
CTL_MSG	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
;	O
int	O
get_names	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
char	O
*	O
his_name	*(char)
,	O
*	O
my_name	*(char)
;	O
char	O
*	O
my_machine_name	*(char)
,	O
*	O
his_machine_name	*(char)
;	O
char	O
*	O
his_tty	*(char)
;	O
register	O
char	O
*	O
cp	*(char)
;	O
if	O
(	O
(	O
my_name	*(char)
=	O
getlogin	()->(*(char))
(	O
)	O
)	O
==	O
NULL	O
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
if	O
(	O
(	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
getuid	()->(int)
(	O
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
printf	(*(char))->(int)
(	O
"You don't exist. Go away.\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
-	O
1	int
)	O
;	O
}	O
my_name	*(char)
=	O
pw	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
;	O
}	O
my_machine_name	*(char)
=	O
localhost	()->(*(char))
(	O
)	O
;	O
if	O
(	O
!	O
my_machine_name	*(char)
)	O
{	O
perror	(*(char))->(void)
(	O
"Cannot get local hostname"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
-	O
1	int
)	O
;	O
}	O
for	O
(	O
cp	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
*	O
cp	*(char)
&&	O
!	O
strchr	(*(char),int)->(*(char))
(	O
"@:!."	*(char)
,	O
*	O
cp	*(char)
)	O
;	O
cp	*(char)
++	O
)	O
;	O
if	O
(	O
*	O
cp	*(char)
==	O
'\0'	O
)	O
{	O
his_name	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
his_machine_name	*(char)
=	O
my_machine_name	*(char)
;	O
}	O
else	O
{	O
if	O
(	O
*	O
cp	*(char)
++	O
==	O
'@'	O
)	O
{	O
his_name	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
his_machine_name	*(char)
=	O
cp	*(char)
;	O
}	O
else	O
{	O
his_name	*(char)
=	O
cp	*(char)
;	O
his_machine_name	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
}	O
*	O
--	O
cp	*(char)
=	O
'\0'	O
;	O
}	O
if	O
(	O
argc	int
>	O
1	int
)	O
his_tty	*(char)
=	O
argv	array(*(char))
[	O
1	int
]	O
;	O
else	O
his_tty	*(char)
=	O
""	*(char)
;	O
get_addrs	(*(char),*(char))->(int)
(	O
my_machine_name	*(char)
,	O
his_machine_name	*(char)
)	O
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
vers	char
=	O
TALK_VERSION	int
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
addr	struct(short,array(char))
.	O
sa_family	short
=	O
htons	(short)->(short)
(	O
AF_INET	O
)	O
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
ctl_addr	struct(short,array(char))
.	O
sa_family	short
=	O
htons	(short)->(short)
(	O
AF_INET	O
)	O
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
id_num	int
=	O
htonl	(int)->(int)
(	O
0	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
l_name	array(char)
,	O
my_name	*(char)
,	O
NAME_SIZE	int
)	O
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
l_name	array(char)
[	O
NAME_SIZE	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
r_name	array(char)
,	O
his_name	*(char)
,	O
NAME_SIZE	int
)	O
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
r_name	array(char)
[	O
NAME_SIZE	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
r_tty	array(char)
,	O
his_tty	*(char)
,	O
TTY_SIZE	int
)	O
;	O
msg	struct(char,char,char,char,int,struct(short,array(char)),struct(short,array(char)),int,array(char),array(char),array(char))
.	O
r_tty	array(char)
[	O
TTY_SIZE	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
free	(*(void))->(void)
(	O
my_machine_name	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
