int	O
mu_mailbox_msgset_copy	(*(struct),*(struct),*(char),int)->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
mu_msgset_t	*(struct)
msgset	*(struct)
,	O
const	O
char	O
*	O
dest	*(char)
,	O
int	O
flags	int
)	O
{	O
if	O
(	O
!	O
mbox	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
mbox	*(struct)
->	O
_copy	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int))
)	O
return	O
ENOSYS	int
;	O
return	O
mbox	*(struct)
->	O
_copy	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int))
(	O
mbox	*(struct)
,	O
msgset	*(struct)
,	O
dest	*(char)
,	O
flags	int
)	O
;	O
}	O
int	O
mu_mailbox_message_copy	(*(struct),long,*(char),int)->(int)
(	O
mu_mailbox_t	*(struct)
mbox	*(struct)
,	O
size_t	long
msgno	long
,	O
const	O
char	O
*	O
dest	*(char)
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
mu_msgset_t	*(struct)
msgset	*(struct)
;	O
int	O
mode	int
;	O
if	O
(	O
!	O
mbox	*(struct)
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
mbox	*(struct)
->	O
_copy	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int))
)	O
return	O
ENOSYS	int
;	O
mode	int
=	O
flags	int
&	O
MU_MAILBOX_COPY_UID	int
?	O
MU_MSGSET_UID	int
:	O
MU_MSGSET_NUM	int
;	O
rc	int
=	O
mu_msgset_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msgset	*(struct)
,	O
mbox	*(struct)
,	O
mode	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_msgset_add_range	(*(struct),long,long,int)->(int)
(	O
msgset	*(struct)
,	O
1	int
,	O
1	int
,	O
mode	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mbox	*(struct)
->	O
_copy	*((*(struct(*(struct`),*(struct`),*(struct`),*(struct`),*(struct`),int,*(struct`),*(struct`),*(struct`),*(char),int,*(struct`),*(void),*((*`)->(void)),*((*`,int)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,long,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,long,*`)->(int)),*((*`)->(int)),*((*`,*`)->(int)),*((*`,*`,*`)->(int)),*((*`,*`)->(int)),*((*`,int,long,*`)->(int)),*((*`,*`,*`,int)->(int)),*((*`,*`)->(int)))),*(struct),*(char),int)->(int))
(	O
mbox	*(struct)
,	O
msgset	*(struct)
,	O
dest	*(char)
,	O
flags	int
)	O
;	O
mu_msgset_destroy	(*(*(struct)))->(void)
(	O
&	O
msgset	*(struct)
)	O
;	O
return	O
rc	int
;	O
}	O
