extern	O
int	O
AnsiColors	int
;	O
static	O
char	O
*	O
InputLineFields	array(*(char))
[	O
INPUTLINE_FIELDS	int
]	O
=	O
{	O
"InputLineForeground"	*(char)
,	O
"InputLineBackground"	*(char)
,	O
"InputLineBrightness"	*(char)
,	O
"InputLineErrorForeground"	*(char)
,	O
"InputLineErrorBackground"	*(char)
,	O
"InputLineErrorBrightness"	*(char)
,	O
}	O
;	O
static	O
int	O
InputLineColors	array(int)
[	O
INPUTLINE_FIELDS	int
]	O
=	O
{	O
WHITE	int
,	O
BLACK	int
,	O
ON	int
,	O
RED	int
,	O
BLACK	int
,	O
ON	int
}	O
;	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
=	O
NULL	O
;	O
static	O
int	O
il_separator	(int)->(int)
(	O
c	char
)	O
char	O
c	char
;	O
{	O
if	O
(	O
(	O
c	char
>=	O
'a'	O
&&	O
c	char
<=	O
'z'	O
)	O
||	O
(	O
c	char
>=	O
'A'	O
&&	O
c	char
<=	O
'Z'	O
)	O
||	O
(	O
c	char
>=	O
'0'	O
&&	O
c	char
<=	O
'9'	O
)	O
||	O
(	O
c	char
==	O
'$'	O
)	O
||	O
(	O
c	char
==	O
'%'	O
)	O
)	O
return	O
0	int
;	O
else	O
return	O
1	int
;	O
}	O
static	O
void	O
il_region_command	(int)->(void)
(	O
flags	int
)	O
int	O
flags	int
;	O
{	O
size_t	long
region_start	long
;	O
size_t	long
region_end	long
;	O
size_t	long
region_size	long
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
==	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
return	O
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
{	O
region_start	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
region_end	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
;	O
}	O
else	O
{	O
region_start	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
;	O
region_end	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
}	O
region_size	long
=	O
region_end	long
-	O
region_start	long
;	O
if	O
(	O
flags	int
&	O
IL_STORE	int
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
xfree	(*(void))->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
region_size	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
region_start	long
,	O
region_size	long
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
[	O
region_size	long
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
flags	int
&	O
IL_KILL	int
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
-=	O
region_size	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-=	O
region_size	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
region_start	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
region_start	long
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
region_start	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
region_end	long
)	O
;	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
)	O
;	O
}	O
}	O
void	O
il_free	(*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))))->(void)
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
)	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
;	O
{	O
if	O
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
)	O
xfree	(*(void))->(void)
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
)	O
;	O
if	O
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
xfree	(*(void))->(void)
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
;	O
xfree	(*(void))->(void)
(	O
some_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
)	O
;	O
}	O
static	O
size_t	long
il_compute_scroll	()->(long)
(	O
)	O
{	O
return	O
max	O
(	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
/	O
4	int
,	O
1	int
)	O
;	O
}	O
void	O
il_init	()->(void)
(	O
)	O
{	O
char	O
*	O
data	*(char)
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
=	O
(	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
)	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
echo	int
=	O
1	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
=	O
0	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
=	O
NULL	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
=	O
NULL	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
=	O
0	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
line	*(char)
=	O
0	int
;	O
il_reset_line	()->(void)
(	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
=	O
window_init	()->(*(struct(int,int,int,int,int,int)))
(	O
)	O
;	O
use_section	(*(char))->(void)
(	O
"[GITFM-Setup]"	*(char)
)	O
;	O
configuration_getvarinfo	(*(char),*(*(char)),int,int)->(void)
(	O
"HistoryFile"	*(char)
,	O
&	O
data	*(char)
,	O
1	int
,	O
DO_SEEK	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
history_file	*(char)
=	O
tilde_expand	()->(*(char))
(	O
data	*(char)
?	O
data	*(char)
:	O
"~/.githistory"	*(char)
)	O
;	O
use_section	(*(char))->(void)
(	O
AnsiColors	int
?	O
color_section	array(char)
:	O
monochrome_section	array(char)
)	O
;	O
get_colorset_var	(*(int),array(*(char)),int)->(void)
(	O
InputLineColors	array(int)
,	O
InputLineFields	array(*(char))
,	O
INPUTLINE_FIELDS	int
)	O
;	O
using_history	()->(void)
(	O
)	O
;	O
read_history	()->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
history_file	*(char)
)	O
;	O
while	O
(	O
next_history	()->(*(struct(*(char),*(char))))
(	O
)	O
)	O
;	O
stifle_history	()->(void)
(	O
MAX_INPUT_HISTORY	int
)	O
;	O
}	O
void	O
il_end	()->(void)
(	O
)	O
{	O
write_history	()->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
history_file	*(char)
)	O
;	O
window_end	(*(struct(int,int,int,int,int,int)))->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
)	O
;	O
il_free	(*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))))->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
=	O
NULL	O
;	O
}	O
void	O
il_resize	(int,int)->(void)
(	O
_columns	int
,	O
_line	int
)	O
int	O
_columns	int
,	O
_line	int
;	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
=	O
_columns	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
line	*(char)
=	O
_line	int
;	O
window_resize	(*(struct(int,int,int,int,int,int)),int,int,int,int)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
,	O
0	int
,	O
_line	int
,	O
1	int
,	O
_columns	int
)	O
;	O
}	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
il_save	()->(*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))))
(	O
)	O
{	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
=	O
(	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
)	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
)	O
)	O
;	O
*	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
=	O
*	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
;	O
if	O
(	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
,	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
,	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
;	O
}	O
if	O
(	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
=	O
xstrdup	(*(char))->(*(char))
(	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
;	O
return	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
;	O
}	O
void	O
il_restore	(*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))))->(void)
(	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
)	O
input_line_t	struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))
*	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
;	O
{	O
size_t	long
columns	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
;	O
size_t	long
line	*(char)
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
line	*(char)
;	O
if	O
(	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
==	O
NULL	O
)	O
return	O
;	O
il_free	(*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char))))->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
=	O
saved_il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
;	O
il_resize	(int,int)->(void)
(	O
columns	int
,	O
line	*(char)
)	O
;	O
}	O
size_t	long
il_point	()->(long)
(	O
)	O
{	O
return	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
}	O
int	O
il_echo	(int)->(int)
(	O
echo	int
)	O
int	O
echo	int
;	O
{	O
int	O
old_echo_flag	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
echo	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
echo	int
=	O
echo	int
;	O
return	O
old_echo_flag	int
;	O
}	O
int	O
il_is_empty	()->(int)
(	O
)	O
{	O
return	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
==	O
0	int
;	O
}	O
void	O
il_set_mark	()->(void)
(	O
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
}	O
void	O
il_kill_region	()->(void)
(	O
)	O
{	O
il_region_command	(int)->(void)
(	O
IL_STORE	int
|	O
IL_KILL	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_KILL_REGION	int
;	O
}	O
void	O
il_kill_ring_save	()->(void)
(	O
)	O
{	O
il_region_command	(int)->(void)
(	O
IL_STORE	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_KILL_RING_SAVE	int
;	O
}	O
void	O
il_yank	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
{	O
il_insert_text	(*(char))->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
kill_ring	*(char)
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_YANK	int
;	O
}	O
}	O
void	O
il_exchange_point_and_mark	()->(void)
(	O
)	O
{	O
int	O
point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
point	long
;	O
}	O
void	O
il_backward_char	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
--	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_BACKWARD_CHAR	int
;	O
}	O
}	O
void	O
il_forward_char	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
++	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_FORWARD_CHAR	int
;	O
}	O
}	O
void	O
il_backward_word	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
{	O
while	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
&&	O
il_separator	(int)->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
1	int
]	O
)	O
)	O
il_backward_char	()->(void)
(	O
)	O
;	O
while	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
&&	O
!	O
il_separator	(int)->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
1	int
]	O
)	O
)	O
il_backward_char	()->(void)
(	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_BACKWARD_WORD	int
;	O
}	O
}	O
void	O
il_forward_word	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
{	O
while	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
&&	O
il_separator	(int)->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
]	O
)	O
)	O
il_forward_char	()->(void)
(	O
)	O
;	O
while	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
&&	O
!	O
il_separator	(int)->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
]	O
)	O
)	O
il_forward_char	()->(void)
(	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_FORWARD_WORD	int
;	O
}	O
}	O
void	O
il_beginning_of_line	()->(void)
(	O
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_BEGINNING_OF_LINE	int
;	O
}	O
void	O
il_end_of_line	()->(void)
(	O
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_END_OF_LINE	int
;	O
}	O
void	O
il_insert_char	(int)->(void)
(	O
c	char
)	O
int	O
c	char
;	O
{	O
if	O
(	O
!	O
isprint	(int)->(int)
(	O
c	char
)	O
)	O
return	O
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
>=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
+	O
32	int
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
1	int
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
1	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
]	O
=	O
c	char
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
++	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
++	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
++	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_INSERT_CHAR	int
;	O
}	O
void	O
il_delete_char	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
1	int
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
1	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
--	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
--	O
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
%	O
16	int
==	O
0	int
)	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_DELETE_CHAR	int
;	O
}	O
}	O
void	O
il_backward_delete_char	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
1	int
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
1	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
--	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
--	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
--	O
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
%	O
16	int
==	O
0	int
)	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_BACKWARD_DELETE_CHAR	int
;	O
}	O
}	O
void	O
il_kill_word	()->(void)
(	O
)	O
{	O
size_t	long
end_of_word	long
;	O
size_t	long
old_mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
;	O
il_set_mark	()->(void)
(	O
)	O
;	O
il_forward_word	()->(void)
(	O
)	O
;	O
end_of_word	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il_region_command	(int)->(void)
(	O
IL_STORE	int
|	O
IL_KILL	int
)	O
;	O
if	O
(	O
old_mark	long
<=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
old_mark	long
;	O
else	O
if	O
(	O
old_mark	long
>=	O
end_of_word	long
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
old_mark	long
-	O
(	O
end_of_word	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
;	O
else	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_KILL_WORD	int
;	O
}	O
void	O
il_backward_kill_word	()->(void)
(	O
)	O
{	O
size_t	long
old_mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
;	O
size_t	long
old_point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il_set_mark	()->(void)
(	O
)	O
;	O
il_backward_word	()->(void)
(	O
)	O
;	O
il_region_command	(int)->(void)
(	O
IL_STORE	int
|	O
IL_KILL	int
)	O
;	O
if	O
(	O
old_mark	long
<=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
old_mark	long
;	O
else	O
if	O
(	O
old_mark	long
>=	O
old_point	long
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
old_mark	long
-	O
(	O
old_point	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
;	O
else	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_BACKWARD_KILL_WORD	int
;	O
}	O
void	O
il_reset_line	()->(void)
(	O
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
0	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
0	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
=	O
0	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
=	O
0	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
=	O
0	int
;	O
IL_RESIZE	O
(	O
1	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_RESET_LINE	int
;	O
}	O
void	O
il_kill_line	(int)->(void)
(	O
store	int
)	O
int	O
store	int
;	O
{	O
il_beginning_of_line	()->(void)
(	O
)	O
;	O
il_set_mark	()->(void)
(	O
)	O
;	O
il_end_of_line	()->(void)
(	O
)	O
;	O
il_region_command	(int)->(void)
(	O
store	int
|	O
IL_KILL	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_KILL_LINE	int
;	O
}	O
void	O
il_kill_to_beginning_of_line	()->(void)
(	O
)	O
{	O
size_t	long
old_mark	long
=	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
<=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
)	O
?	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
:	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il_set_mark	()->(void)
(	O
)	O
;	O
il_beginning_of_line	()->(void)
(	O
)	O
;	O
il_region_command	(int)->(void)
(	O
IL_STORE	int
|	O
IL_KILL	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
min	O
(	O
old_mark	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_KILL_TO_BEGINNING_OF_LINE	int
;	O
}	O
void	O
il_kill_to_end_of_line	()->(void)
(	O
)	O
{	O
size_t	long
old_mark	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
;	O
il_set_mark	()->(void)
(	O
)	O
;	O
il_end_of_line	()->(void)
(	O
)	O
;	O
il_region_command	(int)->(void)
(	O
IL_STORE	int
|	O
IL_KILL	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
=	O
min	O
(	O
old_mark	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_KILL_TO_END_OF_LINE	int
;	O
}	O
void	O
il_just_one_space	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
]	O
==	O
' '	O
)	O
{	O
il_delete_horizontal_space	()->(void)
(	O
)	O
;	O
il_insert_char	(int)->(void)
(	O
' '	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_JUST_ONE_SPACE	int
;	O
}	O
}	O
void	O
il_delete_horizontal_space	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
]	O
==	O
' '	O
)	O
{	O
while	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
]	O
==	O
' '	O
)	O
il_delete_char	()->(void)
(	O
)	O
;	O
while	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
&&	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
1	int
]	O
==	O
' '	O
)	O
il_backward_delete_char	()->(void)
(	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_DELETE_HORIZONTAL_SPACE	int
;	O
}	O
}	O
void	O
il_downcase_word	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
{	O
size_t	long
i	long
;	O
size_t	long
previous_point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il_forward_word	()->(void)
(	O
)	O
;	O
for	O
(	O
i	long
=	O
previous_point	long
;	O
i	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
i	long
++	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
=	O
tolower	(int)->(int)
(	O
(	O
int	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_DOWNCASE_WORD	int
;	O
}	O
}	O
void	O
il_upcase_word	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
{	O
size_t	long
i	long
;	O
size_t	long
previous_point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il_forward_word	()->(void)
(	O
)	O
;	O
for	O
(	O
i	long
=	O
previous_point	long
;	O
i	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
i	long
++	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
=	O
toupper	(int)->(int)
(	O
(	O
int	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_UPCASE_WORD	int
;	O
}	O
}	O
void	O
il_capitalize_word	()->(void)
(	O
)	O
{	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
)	O
{	O
size_t	long
i	long
;	O
int	O
first	int
=	O
1	int
;	O
size_t	long
previous_point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
il_forward_word	()->(void)
(	O
)	O
;	O
for	O
(	O
i	long
=	O
previous_point	long
;	O
i	long
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
;	O
i	long
++	O
)	O
if	O
(	O
isalnum	(int)->(int)
(	O
(	O
int	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
)	O
)	O
{	O
if	O
(	O
first	int
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
=	O
toupper	(int)->(int)
(	O
(	O
int	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
)	O
;	O
first	int
=	O
0	int
;	O
}	O
else	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
=	O
tolower	(int)->(int)
(	O
(	O
int	O
)	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
[	O
i	long
]	O
)	O
;	O
}	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_CAPITALIZE_WORD	int
;	O
}	O
}	O
void	O
il_set_static_text	(*(char))->(void)
(	O
static_text	*(char)
)	O
char	O
*	O
static_text	*(char)
;	O
{	O
size_t	long
len	long
;	O
assert	O
(	O
static_text	*(char)
)	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
static_text	*(char)
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+=	O
len	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
+=	O
len	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
if	O
(	O
len	long
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
+	O
1	int
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
IL_RESIZE	O
(	O
len	long
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
+	O
1	int
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
len	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
,	O
static_text	*(char)
,	O
len	long
)	O
;	O
toprintable	(*(char),long)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
,	O
len	long
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
=	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
=	O
len	long
)	O
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_SET_STATIC_TEXT	int
;	O
}	O
void	O
il_insert_text	(*(char))->(void)
(	O
text	*(char)
)	O
char	O
*	O
text	*(char)
;	O
{	O
size_t	long
len	long
;	O
if	O
(	O
text	*(char)
==	O
NULL	O
)	O
return	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
text	*(char)
)	O
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
len	long
+	O
1	int
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
+	O
len	long
+	O
1	int
+	O
32	int
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
len	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
,	O
text	*(char)
,	O
len	long
)	O
;	O
toprintable	(*(char),long)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
,	O
len	long
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+=	O
len	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+=	O
len	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
+=	O
len	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
last_operation	int
=	O
IL_INSERT_TEXT	int
;	O
}	O
static	O
int	O
il_hide_static	()->(int)
(	O
)	O
{	O
int	O
normal_static_length	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
-=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
=	O
0	int
;	O
return	O
normal_static_length	int
;	O
}	O
static	O
void	O
il_restore_static	(int)->(void)
(	O
normal_static_length	int
)	O
int	O
normal_static_length	int
;	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
=	O
normal_static_length	int
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
-=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
+=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
mark	long
+=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
;	O
}	O
void	O
il_update_point	()->(void)
(	O
)	O
{	O
int	O
scroll	int
;	O
size_t	long
len	long
;	O
size_t	long
normal_static_length	int
=	O
0	int
;	O
int	O
il_too_small	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
+	O
3	int
;	O
tty_colors	(int,int,int)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
?	O
InputLineErrorBrightness	O
:	O
InputLineBrightness	O
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
?	O
InputLineErrorForeground	O
:	O
InputLineForeground	O
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
?	O
InputLineErrorBackground	O
:	O
InputLineBackground	O
)	O
;	O
if	O
(	O
il_too_small	int
)	O
normal_static_length	int
=	O
il_hide_static	()->(int)
(	O
)	O
;	O
scroll	int
=	O
il_compute_scroll	()->(long)
(	O
)	O
;	O
len	long
=	O
(	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
)	O
?	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
+	O
1	int
+	O
(	O
scroll	int
-	O
1	int
)	O
-	O
(	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
)	O
%	O
scroll	int
)	O
:	O
0	int
)	O
;	O
window_goto	(*(struct(int,int,int,int,int,int)),int,int)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
,	O
0	int
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
len	long
)	O
;	O
if	O
(	O
il_too_small	int
)	O
il_restore_static	(int)->(void)
(	O
normal_static_length	int
)	O
;	O
}	O
void	O
il_update	()->(void)
(	O
)	O
{	O
int	O
scroll	int
;	O
char	O
*	O
temp	*(char)
;	O
unsigned	O
len	long
;	O
tty_status_t	char
status	int
;	O
size_t	long
normal_static_length	int
=	O
0	int
;	O
int	O
il_too_small	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
<	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
+	O
3	int
;	O
tty_save	(*(char))->(void)
(	O
&	O
status	int
)	O
;	O
tty_colors	(int,int,int)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
?	O
InputLineErrorBrightness	O
:	O
InputLineBrightness	O
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
?	O
InputLineErrorForeground	O
:	O
InputLineForeground	O
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
?	O
InputLineErrorBackground	O
:	O
InputLineBackground	O
)	O
;	O
if	O
(	O
il_too_small	int
)	O
normal_static_length	int
=	O
il_hide_static	()->(int)
(	O
)	O
;	O
scroll	int
=	O
il_compute_scroll	()->(long)
(	O
)	O
;	O
len	long
=	O
(	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
>=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
)	O
?	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
+	O
1	int
+	O
(	O
scroll	int
-	O
1	int
)	O
-	O
(	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
)	O
%	O
scroll	int
)	O
:	O
0	int
)	O
;	O
temp	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
temp	*(char)
,	O
' '	O
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
)	O
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
echo	int
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
temp	*(char)
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
+	O
len	long
,	O
min	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
-	O
len	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
)	O
;	O
else	O
memset	(*(void),int,long)->(*(void))
(	O
temp	*(char)
,	O
'*'	O
,	O
min	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
-	O
len	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
)	O
;	O
window_goto	(*(struct(int,int,int,int,int,int)),int,int)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
!	O
il_too_small	int
)	O
window_puts	(*(struct(int,int,int,int,int,int)),*(char),int)->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
;	O
window_puts	(*(struct(int,int,int,int,int,int)),*(char),int)->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
,	O
temp	*(char)
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
columns	int
-	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
;	O
window_goto	(*(struct(int,int,int,int,int,int)),int,int)->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
window	*(struct(int,int,int,int,int,int))
,	O
0	int
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
-	O
len	long
)	O
;	O
if	O
(	O
il_too_small	int
)	O
il_restore_static	(int)->(void)
(	O
normal_static_length	int
)	O
;	O
xfree	(*(void))->(void)
(	O
temp	*(char)
)	O
;	O
tty_restore	(*(char))->(void)
(	O
&	O
status	int
)	O
;	O
}	O
int	O
il_get_contents	(*(*(char)))->(int)
(	O
dest	*(*(char))
)	O
char	O
*	O
*	O
dest	*(*(char))
;	O
{	O
*	O
dest	*(*(char))
=	O
xrealloc	(*(void),long)->(*(void))
(	O
*	O
dest	*(*(char))
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
*	O
dest	*(*(char))
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
,	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
+	O
1	int
)	O
;	O
return	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
;	O
}	O
void	O
il_message	(*(char))->(void)
(	O
message	*(char)
)	O
char	O
*	O
message	*(char)
;	O
{	O
il_reset_line	()->(void)
(	O
)	O
;	O
il_set_static_text	(*(char))->(void)
(	O
message	*(char)
?	O
message	*(char)
:	O
"Wait...."	*(char)
)	O
;	O
il_update	()->(void)
(	O
)	O
;	O
il_update_point	()->(void)
(	O
)	O
;	O
}	O
void	O
il_set_error_flag	(int)->(void)
(	O
flag	int
)	O
int	O
flag	int
;	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
error	int
=	O
flag	int
;	O
}	O
void	O
il_history	(int)->(void)
(	O
dir	int
)	O
int	O
dir	int
;	O
{	O
static	O
int	O
browsing	int
=	O
0	int
;	O
static	O
int	O
last_history_position	int
;	O
HIST_ENTRY	struct(*(char),*(char))
*	O
hist	*(struct(*(char),*(char)))
;	O
switch	O
(	O
dir	int
)	O
{	O
case	O
IL_PREVIOUS	int
:	O
if	O
(	O
!	O
browsing	int
)	O
{	O
browsing	int
=	O
1	int
;	O
last_history_position	int
=	O
where_history	()->(int)
(	O
)	O
;	O
}	O
if	O
(	O
(	O
hist	*(struct(*(char),*(char)))
=	O
previous_history	()->(*(struct(*(char),*(char))))
(	O
)	O
)	O
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
=	O
strlen	(*(char))->(long)
(	O
hist	*(struct(*(char),*(char)))
->	O
line	*(char)
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
,	O
hist	*(struct(*(char),*(char)))
->	O
line	*(char)
)	O
;	O
il_update	()->(void)
(	O
)	O
;	O
}	O
break	O
;	O
case	O
IL_NEXT	int
:	O
if	O
(	O
!	O
browsing	int
)	O
{	O
browsing	int
=	O
1	int
;	O
last_history_position	int
=	O
where_history	()->(int)
(	O
)	O
;	O
}	O
if	O
(	O
(	O
hist	*(struct(*(char),*(char)))
=	O
next_history	()->(*(struct(*(char),*(char))))
(	O
)	O
)	O
)	O
{	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
=	O
strlen	(*(char))->(long)
(	O
hist	*(struct(*(char),*(char)))
->	O
line	*(char)
)	O
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
dynamic_length	long
;	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
point	long
=	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
;	O
if	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
>	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
size	int
)	O
IL_RESIZE	O
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
length	int
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
,	O
hist	*(struct(*(char),*(char)))
->	O
line	*(char)
)	O
;	O
}	O
else	O
il_kill_line	(int)->(void)
(	O
IL_DONT_STORE	int
)	O
;	O
il_update	()->(void)
(	O
)	O
;	O
break	O
;	O
case	O
IL_RECORD	int
:	O
if	O
(	O
browsing	int
)	O
{	O
history_set_pos	()->(int)
(	O
last_history_position	int
)	O
;	O
browsing	int
=	O
0	int
;	O
}	O
if	O
(	O
(	O
hist	*(struct(*(char),*(char)))
=	O
previous_history	()->(*(struct(*(char),*(char))))
(	O
)	O
)	O
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
,	O
hist	*(struct(*(char),*(char)))
->	O
line	*(char)
)	O
!=	O
0	int
)	O
{	O
add_history	()->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
;	O
next_history	()->(*(struct(*(char),*(char))))
(	O
)	O
;	O
}	O
}	O
else	O
add_history	()->(void)
(	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
buffer	*(char)
+	O
il	*(struct(*(struct(int,int,int,int,int,int)),int,int,int,long,long,long,long,long,long,long,long,*(char),*(char),*(char)))
->	O
static_length	long
)	O
;	O
next_history	()->(*(struct(*(char),*(char))))
(	O
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
