void	O
adns__vlprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
)	O
{	O
ads	*(struct)
->	O
logfn	*((*(struct),*(void),*(char),array(struct(int,int,*(void),*(void))))->(void))
(	O
ads	*(struct)
,	O
ads	*(struct)
->	O
logfndata	*(void)
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
adns__vlprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
ads	*(struct)
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
adns__vdiag	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),enum(int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
,	O
const	O
char	O
*	O
pfx	*(char)
,	O
adns_initflags	enum(int,int,int,int,int,int,int,int,int,int,int)
prevent	enum(int,int,int,int,int,int,int,int,int,int,int)
,	O
int	O
serv	int
,	O
adns_query	*(struct)
qu	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
)	O
{	O
const	O
char	O
*	O
bef	*(char)
,	O
*	O
aft	*(char)
;	O
vbuf	struct(int,int,*(char))
vb	*(struct(int,int,*(char)))
;	O
if	O
(	O
!	O
ads	*(struct)
->	O
logfn	*((*(struct),*(void),*(char),array(struct(int,int,*(void),*(void))))->(void))
||	O
(	O
!	O
(	O
ads	*(struct)
->	O
iflags	enum(int,int,int,int,int,int,int,int,int,int,int)
&	O
adns_if_debug	int
)	O
&&	O
(	O
!	O
prevent	enum(int,int,int,int,int,int,int,int,int,int,int)
||	O
(	O
ads	*(struct)
->	O
iflags	enum(int,int,int,int,int,int,int,int,int,int,int)
&	O
prevent	enum(int,int,int,int,int,int,int,int,int,int,int)
)	O
)	O
)	O
)	O
return	O
;	O
if	O
(	O
ads	*(struct)
->	O
iflags	enum(int,int,int,int,int,int,int,int,int,int,int)
&	O
adns_if_logpid	int
)	O
{	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
ads	*(struct)
,	O
"adns%s [%ld]: "	*(char)
,	O
pfx	*(char)
,	O
(	O
long	O
)	O
getpid	()->(int)
(	O
)	O
)	O
;	O
}	O
else	O
{	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
ads	*(struct)
,	O
"adns%s: "	*(char)
,	O
pfx	*(char)
)	O
;	O
}	O
adns__vlprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
ads	*(struct)
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
bef	*(char)
=	O
" ("	*(char)
;	O
aft	*(char)
=	O
"\n"	*(char)
;	O
if	O
(	O
qu	*(struct)
&&	O
qu	*(struct)
->	O
query_dgram	*(char)
)	O
{	O
adns__vbuf_init	(*(struct(int,int,*(char))))->(void)
(	O
&	O
vb	*(struct(int,int,*(char)))
)	O
;	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
ads	*(struct)
,	O
"%sQNAME=%s, QTYPE=%s"	*(char)
,	O
bef	*(char)
,	O
adns__diag_domain	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(struct(int,int,*(char))),*(char),int,int)->(*(char))
(	O
qu	*(struct)
->	O
ads	*(struct)
,	O
-	O
1	int
,	O
0	int
,	O
&	O
vb	*(struct(int,int,*(char)))
,	O
qu	*(struct)
->	O
query_dgram	*(char)
,	O
qu	*(struct)
->	O
query_dglen	int
,	O
DNS_HDRSIZE	int
)	O
,	O
qu	*(struct)
->	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
?	O
qu	*(struct)
->	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
rrtname	*(char)
:	O
"<unknown>"	*(char)
)	O
;	O
if	O
(	O
qu	*(struct)
->	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
&&	O
qu	*(struct)
->	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
fmtname	*(char)
)	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
ads	*(struct)
,	O
"(%s)"	*(char)
,	O
qu	*(struct)
->	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
fmtname	*(char)
)	O
;	O
bef	*(char)
=	O
", "	*(char)
;	O
aft	*(char)
=	O
")\n"	*(char)
;	O
adns__vbuf_free	(*(struct(int,int,*(char))))->(void)
(	O
&	O
vb	*(struct(int,int,*(char)))
)	O
;	O
}	O
if	O
(	O
serv	int
>=	O
0	int
)	O
{	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
ads	*(struct)
,	O
"%sNS=%s"	*(char)
,	O
bef	*(char)
,	O
inet_ntoa	(struct(int))->(*(char))
(	O
ads	*(struct)
->	O
servers	array(struct(struct(int)))
[	O
serv	int
]	O
.	O
addr	union(struct(short,array(char)),struct(short,short,struct(int),array(char)))
)	O
)	O
;	O
bef	*(char)
=	O
", "	*(char)
;	O
aft	*(char)
=	O
")\n"	*(char)
;	O
}	O
adns__lprintf	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char))->(void)
(	O
ads	*(struct)
,	O
"%s"	*(char)
,	O
aft	*(char)
)	O
;	O
}	O
void	O
adns__debug	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
,	O
int	O
serv	int
,	O
adns_query	*(struct)
qu	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
adns__vdiag	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),enum(int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
ads	*(struct)
,	O
" debug"	*(char)
,	O
0	int
,	O
serv	int
,	O
qu	*(struct)
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
adns__warn	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
,	O
int	O
serv	int
,	O
adns_query	*(struct)
qu	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
adns__vdiag	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),enum(int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
ads	*(struct)
,	O
" warning"	*(char)
,	O
adns_if_noerrprint	int
|	O
adns_if_noserverwarn	int
,	O
serv	int
,	O
qu	*(struct)
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
adns__diag	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
,	O
int	O
serv	int
,	O
adns_query	*(struct)
qu	*(struct)
,	O
const	O
char	O
*	O
fmt	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
al	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
al	array(struct(int,int,*(void),*(void)))
,	O
fmt	*(char)
)	O
;	O
adns__vdiag	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),*(char),enum(int,int,int,int,int,int,int,int,int,int,int),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(char),array(struct(int,int,*(void),*(void))))->(void)
(	O
ads	*(struct)
,	O
""	*(char)
,	O
adns_if_noerrprint	int
,	O
serv	int
,	O
qu	*(struct)
,	O
fmt	*(char)
,	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
va_end	O
(	O
al	array(struct(int,int,*(void),*(void)))
)	O
;	O
}	O
void	O
adns__vbuf_init	(*(struct(int,int,*(char))))->(void)
(	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
)	O
{	O
vb	*(struct(int,int,*(char)))
->	O
used	int
=	O
vb	*(struct(int,int,*(char)))
->	O
avail	int
=	O
0	int
;	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
=	O
0	int
;	O
}	O
int	O
adns__vbuf_ensure	(*(struct(int,int,*(char))),int)->(int)
(	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
,	O
int	O
want	int
)	O
{	O
void	O
*	O
nb	*(void)
;	O
if	O
(	O
vb	*(struct(int,int,*(char)))
->	O
avail	int
>=	O
want	int
)	O
return	O
1	int
;	O
nb	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
,	O
want	int
)	O
;	O
if	O
(	O
!	O
nb	*(void)
)	O
return	O
0	int
;	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
=	O
nb	*(void)
;	O
vb	*(struct(int,int,*(char)))
->	O
avail	int
=	O
want	int
;	O
return	O
1	int
;	O
}	O
void	O
adns__vbuf_appendq	(*(struct(int,int,*(char))),*(char),int)->(void)
(	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
,	O
const	O
byte	char
*	O
data	*(char)
,	O
int	O
len	int
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
+	O
vb	*(struct(int,int,*(char)))
->	O
used	int
,	O
data	*(char)
,	O
len	int
)	O
;	O
vb	*(struct(int,int,*(char)))
->	O
used	int
+=	O
len	int
;	O
}	O
int	O
adns__vbuf_append	(*(struct(int,int,*(char))),*(char),int)->(int)
(	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
,	O
const	O
byte	char
*	O
data	*(char)
,	O
int	O
len	int
)	O
{	O
int	O
newlen	int
;	O
void	O
*	O
nb	*(void)
;	O
newlen	int
=	O
vb	*(struct(int,int,*(char)))
->	O
used	int
+	O
len	int
;	O
if	O
(	O
vb	*(struct(int,int,*(char)))
->	O
avail	int
<	O
newlen	int
)	O
{	O
if	O
(	O
newlen	int
<	O
20	int
)	O
newlen	int
=	O
20	int
;	O
newlen	int
<<=	O
1	int
;	O
nb	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
,	O
newlen	int
)	O
;	O
if	O
(	O
!	O
nb	*(void)
)	O
{	O
newlen	int
=	O
vb	*(struct(int,int,*(char)))
->	O
used	int
+	O
len	int
;	O
nb	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
,	O
newlen	int
)	O
;	O
}	O
if	O
(	O
!	O
nb	*(void)
)	O
return	O
0	int
;	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
=	O
nb	*(void)
;	O
vb	*(struct(int,int,*(char)))
->	O
avail	int
=	O
newlen	int
;	O
}	O
adns__vbuf_appendq	(*(struct(int,int,*(char))),*(char),int)->(void)
(	O
vb	*(struct(int,int,*(char)))
,	O
data	*(char)
,	O
len	int
)	O
;	O
return	O
1	int
;	O
}	O
int	O
adns__vbuf_appendstr	(*(struct(int,int,*(char))),*(char))->(int)
(	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
,	O
const	O
char	O
*	O
data	*(char)
)	O
{	O
int	O
l	long
;	O
l	long
=	O
strlen	(*(char))->(long)
(	O
data	*(char)
)	O
;	O
return	O
adns__vbuf_append	(*(struct(int,int,*(char))),*(char),int)->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
data	*(char)
,	O
l	long
)	O
;	O
}	O
void	O
adns__vbuf_free	(*(struct(int,int,*(char))))->(void)
(	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
)	O
{	O
free	(*(void))->(void)
(	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
)	O
;	O
adns__vbuf_init	(*(struct(int,int,*(char))))->(void)
(	O
vb	*(struct(int,int,*(char)))
)	O
;	O
}	O
const	O
char	O
*	O
adns__diag_domain	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(struct(int,int,*(char))),*(char),int,int)->(*(char))
(	O
adns_state	*(struct)
ads	*(struct)
,	O
int	O
serv	int
,	O
adns_query	*(struct)
qu	*(struct)
,	O
vbuf	struct(int,int,*(char))
*	O
vb	*(struct(int,int,*(char)))
,	O
const	O
byte	char
*	O
dgram	*(char)
,	O
int	O
dglen	int
,	O
int	O
cbyte	int
)	O
{	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
adns__parse_domain	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))),int,*(struct(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,struct`,struct`,struct`,struct`,*`,int,int,int,struct`,struct`,int,int,int,int,int,int,enum(int,int,int,int),struct`,struct`,struct`,array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*`,array(short))),enum(int,int,int,int),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),int,int,*(void),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,int,*`,*`,*`,*`,*`,*`)),*(char),int,struct(int,int,*(char)),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*`,*`,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),long,int,int,union`)),*(char),int,int,struct(int,int,*(char)),int,int,int,int,int,int,int,long,struct(long,long),long,struct(*(void),*((*`,*`)->(void)),union(struct`,*`)))),*(struct(int,int,*(char))),enum(int),*(char),int,*(int),int)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
(	O
ads	*(struct)
,	O
serv	int
,	O
qu	*(struct)
,	O
vb	*(struct(int,int,*(char)))
,	O
pdf_quoteok	int
,	O
dgram	*(char)
,	O
dglen	int
,	O
&	O
cbyte	int
,	O
dglen	int
)	O
;	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
adns_s_nomemory	int
)	O
{	O
return	O
"<cannot report domain... out of memory>"	*(char)
;	O
}	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
vb	*(struct(int,int,*(char)))
->	O
used	int
=	O
0	int
;	O
if	O
(	O
!	O
(	O
adns__vbuf_appendstr	(*(struct(int,int,*(char))),*(char))->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
"<bad format... "	*(char)
)	O
&&	O
adns__vbuf_appendstr	(*(struct(int,int,*(char))),*(char))->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
adns_strerror	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
)	O
&&	O
adns__vbuf_appendstr	(*(struct(int,int,*(char))),*(char))->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
">"	*(char)
)	O
&&	O
adns__vbuf_append	(*(struct(int,int,*(char))),*(char),int)->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
""	*(char)
,	O
1	int
)	O
)	O
)	O
{	O
return	O
"<cannot report bad format... out of memory>"	*(char)
;	O
}	O
}	O
if	O
(	O
!	O
vb	*(struct(int,int,*(char)))
->	O
used	int
)	O
{	O
adns__vbuf_appendstr	(*(struct(int,int,*(char))),*(char))->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
"<truncated ...>"	*(char)
)	O
;	O
adns__vbuf_append	(*(struct(int,int,*(char))),*(char),int)->(int)
(	O
vb	*(struct(int,int,*(char)))
,	O
""	*(char)
,	O
1	int
)	O
;	O
}	O
return	O
vb	*(struct(int,int,*(char)))
->	O
buf	*(char)
;	O
}	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
adns_rr_info	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(*(char)),*(*(char)),*(int),*(void),*(*(char)))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))
(	O
adns_rrtype	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
const	O
char	O
*	O
*	O
rrtname_r	*(*(char))
,	O
const	O
char	O
*	O
*	O
fmtname_r	*(*(char))
,	O
int	O
*	O
len_r	*(int)
,	O
const	O
void	O
*	O
datap	*(void)
,	O
char	O
*	O
*	O
data_r	*(*(char))
)	O
{	O
const	O
typeinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct),*(void))->(void)),*((*(struct(int,int,*(char))),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct(*(struct`),*(struct`),int,*(char),int,int,int,int,struct(long,long))),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct),*(void),*(void))->(int)),*((*(struct),*(*(char)),*(char),int,array(char),*(int),enum(int,int,int,int,int,int,int,int,int,int,int),*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*`,*`)->(void)),*((*`,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,int,int,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,*`)->(int)),*((*`,*`,*`,int,array(char),*`,enum(int,int,int,int,int,int,int,int,int,int,int),*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,int,*`)->(void)))))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct),*(void),int,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*`,*`)->(void)),*((*`,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,int,int,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,*`)->(int)),*((*`,*`,*`,int,array(char),*`,enum(int,int,int,int,int,int,int,int,int,int,int),*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,int,*`)->(void)))))->(void)))
*	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
;	O
vbuf	struct(int,int,*(char))
vb	*(struct(int,int,*(char)))
;	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
=	O
adns__findtype	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*`,*`)->(void)),*((*`,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,int,int,*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,*`)->(int)),*((*`,*`,*`,int,array(char),*`,enum(int,int,int,int,int,int,int,int,int,int,int),*`)->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*`,*`,int,*`)->(void)))))
(	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
if	O
(	O
!	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
)	O
return	O
adns_s_unknownrrtype	int
;	O
if	O
(	O
rrtname_r	*(*(char))
)	O
*	O
rrtname_r	*(*(char))
=	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
rrtname	*(char)
;	O
if	O
(	O
fmtname_r	*(*(char))
)	O
*	O
fmtname_r	*(*(char))
=	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
fmtname	*(char)
;	O
if	O
(	O
len_r	*(int)
)	O
*	O
len_r	*(int)
=	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
rrsz	int
;	O
if	O
(	O
!	O
datap	*(void)
)	O
return	O
adns_s_ok	int
;	O
adns__vbuf_init	(*(struct(int,int,*(char))))->(void)
(	O
&	O
vb	*(struct(int,int,*(char)))
)	O
;	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
typei	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char),int,*((*(struct`),*(void))->(void)),*((*(struct`),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),int,int,*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))),*((*(struct`),*(void),*(void))->(int))))
->	O
convstring	*((*(struct(int,int,*(char))),*(void))->(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)))
(	O
&	O
vb	*(struct(int,int,*(char)))
,	O
datap	*(void)
)	O
;	O
if	O
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
goto	O
x_freevb	O
;	O
if	O
(	O
!	O
adns__vbuf_append	(*(struct(int,int,*(char))),*(char),int)->(int)
(	O
&	O
vb	*(struct(int,int,*(char)))
,	O
""	*(char)
,	O
1	int
)	O
)	O
{	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
adns_s_nomemory	int
;	O
goto	O
x_freevb	O
;	O
}	O
assert	O
(	O
strlen	(*(char))->(long)
(	O
vb	*(struct(int,int,*(char)))
.	O
buf	*(char)
)	O
==	O
vb	*(struct(int,int,*(char)))
.	O
used	int
-	O
1	int
)	O
;	O
*	O
data_r	*(*(char))
=	O
realloc	(*(void),long)->(*(void))
(	O
vb	*(struct(int,int,*(char)))
.	O
buf	*(char)
,	O
vb	*(struct(int,int,*(char)))
.	O
used	int
)	O
;	O
if	O
(	O
!	O
*	O
data_r	*(*(char))
)	O
*	O
data_r	*(*(char))
=	O
vb	*(struct(int,int,*(char)))
.	O
buf	*(char)
;	O
return	O
adns_s_ok	int
;	O
x_freevb	O
:	O
adns__vbuf_free	(*(struct(int,int,*(char))))->(void)
(	O
&	O
vb	*(struct(int,int,*(char)))
)	O
;	O
return	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
}	O
static	O
const	O
struct	O
sinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))
{	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
const	O
char	O
*	O
abbrev	*(char)
;	O
const	O
char	O
*	O
string	*(char)
;	O
}	O
sinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
[	O
]	O
=	O
{	O
SINFO	O
(	O
ok	O
,	O
"OK"	*(char)
)	O
,	O
SINFO	O
(	O
nomemory	O
,	O
"Out of memory"	*(char)
)	O
,	O
SINFO	O
(	O
unknownrrtype	O
,	O
"Query not implemented in DNS library"	*(char)
)	O
,	O
SINFO	O
(	O
systemfail	O
,	O
"General resolver or system failure"	*(char)
)	O
,	O
SINFO	O
(	O
timeout	struct(long,long)
,	O
"DNS query timed out"	*(char)
)	O
,	O
SINFO	O
(	O
allservfail	O
,	O
"All nameservers failed"	*(char)
)	O
,	O
SINFO	O
(	O
norecurse	O
,	O
"Recursion denied by nameserver"	*(char)
)	O
,	O
SINFO	O
(	O
invalidresponse	O
,	O
"Nameserver sent bad response"	*(char)
)	O
,	O
SINFO	O
(	O
unknownformat	O
,	O
"Nameserver used unknown format"	*(char)
)	O
,	O
SINFO	O
(	O
rcodeservfail	O
,	O
"Nameserver reports failure"	*(char)
)	O
,	O
SINFO	O
(	O
rcodeformaterror	O
,	O
"Query not understood by nameserver"	*(char)
)	O
,	O
SINFO	O
(	O
rcodenotimplemented	O
,	O
"Query not implemented by nameserver"	*(char)
)	O
,	O
SINFO	O
(	O
rcoderefused	O
,	O
"Query refused by nameserver"	*(char)
)	O
,	O
SINFO	O
(	O
rcodeunknown	O
,	O
"Nameserver sent unknown response code"	*(char)
)	O
,	O
SINFO	O
(	O
inconsistent	O
,	O
"Inconsistent resource records in DNS"	*(char)
)	O
,	O
SINFO	O
(	O
prohibitedcname	O
,	O
"DNS alias found where canonical name wanted"	*(char)
)	O
,	O
SINFO	O
(	O
answerdomaininvalid	O
,	O
"Found syntactically invalid domain name"	*(char)
)	O
,	O
SINFO	O
(	O
answerdomaintoolong	O
,	O
"Found overly-long domain name"	*(char)
)	O
,	O
SINFO	O
(	O
invaliddata	O
,	O
"Found invalid DNS data"	*(char)
)	O
,	O
SINFO	O
(	O
querydomainwrong	O
,	O
"Domain invalid for particular DNS query type"	*(char)
)	O
,	O
SINFO	O
(	O
querydomaininvalid	O
,	O
"Domain name is syntactically invalid"	*(char)
)	O
,	O
SINFO	O
(	O
querydomaintoolong	O
,	O
"Domain name or component is too long"	*(char)
)	O
,	O
SINFO	O
(	O
nxdomain	O
,	O
"No such domain"	*(char)
)	O
,	O
SINFO	O
(	O
nodata	O
,	O
"No such data"	*(char)
)	O
}	O
;	O
static	O
int	O
si_compar	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
key	*(void)
,	O
const	O
void	O
*	O
elem	*(void)
)	O
{	O
const	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
*	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
key	*(void)
;	O
const	O
struct	O
sinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))
*	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
=	O
elem	*(void)
;	O
return	O
*	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
<	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
->	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
?	O
-	O
1	int
:	O
*	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
>	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
->	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
?	O
1	int
:	O
0	int
;	O
}	O
static	O
const	O
struct	O
sinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))
*	O
findsinfo	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))))
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
return	O
bsearch	(*(void),*(void),long,long,*((*(void),*(void))->(int)))->(*(void))
(	O
&	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
sinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
,	O
sizeof	O
(	O
sinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
)	O
/	O
sizeof	O
(	O
*	O
sinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
)	O
,	O
sizeof	O
(	O
*	O
sinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
)	O
,	O
si_compar	(*(void),*(void))->(int)
)	O
;	O
}	O
const	O
char	O
*	O
adns_strerror	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
const	O
struct	O
sinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))
*	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
;	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
=	O
findsinfo	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
return	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
->	O
string	*(char)
;	O
}	O
const	O
char	O
*	O
adns_errabbrev	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
const	O
struct	O
sinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))
*	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
;	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
=	O
findsinfo	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char))))
(	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
;	O
return	O
si	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char),*(char)))
->	O
abbrev	*(char)
;	O
}	O
static	O
const	O
struct	O
stinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char))
{	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
stmax	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
const	O
char	O
*	O
abbrev	*(char)
;	O
}	O
stinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
[	O
]	O
=	O
{	O
{	O
adns_s_ok	int
,	O
"ok"	*(char)
}	O
,	O
STINFO	O
(	O
localfail	O
)	O
,	O
STINFO	O
(	O
remotefail	O
)	O
,	O
STINFO	O
(	O
tempfail	O
)	O
,	O
STINFO	O
(	O
misconfig	O
)	O
,	O
STINFO	O
(	O
misquery	O
)	O
,	O
STINFO	O
(	O
permfail	O
)	O
}	O
;	O
static	O
int	O
sti_compar	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
key	*(void)
,	O
const	O
void	O
*	O
elem	*(void)
)	O
{	O
const	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
*	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
key	*(void)
;	O
const	O
struct	O
stinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char))
*	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
=	O
elem	*(void)
;	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
here	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
min	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
max	int
;	O
here	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
*	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
min	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
(	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
==	O
stinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
)	O
?	O
0	int
:	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
[	O
-	O
1	int
]	O
.	O
stmax	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
+	O
1	int
;	O
max	int
=	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
->	O
stmax	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
return	O
here	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
<	O
min	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
?	O
-	O
1	int
:	O
here	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
>	O
max	int
?	O
1	int
:	O
0	int
;	O
}	O
const	O
char	O
*	O
adns_errtypeabbrev	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(*(char))
(	O
adns_status	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
const	O
struct	O
stinfo	struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char))
*	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
;	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
=	O
bsearch	(*(void),*(void),long,long,*((*(void),*(void))->(int)))->(*(void))
(	O
&	O
st	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
,	O
stinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
,	O
sizeof	O
(	O
stinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
)	O
/	O
sizeof	O
(	O
*	O
stinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
)	O
,	O
sizeof	O
(	O
*	O
stinfos	array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
)	O
,	O
sti_compar	(*(void),*(void))->(int)
)	O
;	O
return	O
sti	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(char)))
->	O
abbrev	*(char)
;	O
}	O
void	O
adns__isort	(*(void),int,int,*(void),*((*(void),*(void),*(void))->(int)),*(void))->(void)
(	O
void	O
*	O
array	array(*(char))
,	O
int	O
nobjs	int
,	O
int	O
sz	int
,	O
void	O
*	O
tempbuf	*(void)
,	O
int	O
(	O
*	O
needswap	*((*(void),*(void),*(void))->(int))
)	O
(	O
void	O
*	O
context	*(void)
,	O
const	O
void	O
*	O
a	*(void)
,	O
const	O
void	O
*	O
b	*(void)
)	O
,	O
void	O
*	O
context	*(void)
)	O
{	O
byte	char
*	O
data	*(char)
=	O
array	array(*(char))
;	O
int	O
i	int
,	O
place	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nobjs	int
;	O
i	int
++	O
)	O
{	O
for	O
(	O
place	int
=	O
i	int
;	O
place	int
>	O
0	int
&&	O
needswap	*((*(void),*(void),*(void))->(int))
(	O
context	*(void)
,	O
data	*(char)
+	O
(	O
place	int
-	O
1	int
)	O
*	O
sz	int
,	O
data	*(char)
+	O
i	int
*	O
sz	int
)	O
;	O
place	int
--	O
)	O
;	O
if	O
(	O
place	int
!=	O
i	int
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
tempbuf	*(void)
,	O
data	*(char)
+	O
i	int
*	O
sz	int
,	O
sz	int
)	O
;	O
memmove	(*(void),*(void),long)->(*(void))
(	O
data	*(char)
+	O
(	O
place	int
+	O
1	int
)	O
*	O
sz	int
,	O
data	*(char)
+	O
place	int
*	O
sz	int
,	O
(	O
i	int
-	O
place	int
)	O
*	O
sz	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
data	*(char)
+	O
place	int
*	O
sz	int
,	O
tempbuf	*(void)
,	O
sz	int
)	O
;	O
}	O
}	O
}	O
void	O
adns__sigpipe_protect	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
)	O
{	O
sigset_t	struct(array(long))
toblock	struct(array(long))
;	O
struct	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
sa	struct(short,array(char))
;	O
int	O
r	int
;	O
if	O
(	O
ads	*(struct)
->	O
iflags	enum(int,int,int,int,int,int,int,int,int,int,int)
&	O
adns_if_nosigpipe	int
)	O
return	O
;	O
sigfillset	(*(struct(array(long))))->(int)
(	O
&	O
toblock	struct(array(long))
)	O
;	O
sigdelset	(*(struct(array(long))),int)->(int)
(	O
&	O
toblock	struct(array(long))
,	O
SIGPIPE	int
)	O
;	O
sa	struct(short,array(char))
.	O
sa_handler	*((int)->(void))
=	O
SIG_IGN	O
;	O
sigfillset	(*(struct(array(long))))->(int)
(	O
&	O
sa	struct(short,array(char))
.	O
sa_mask	struct(array(long))
)	O
;	O
sa	struct(short,array(char))
.	O
sa_flags	int
=	O
0	int
;	O
r	int
=	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_SETMASK	int
,	O
&	O
toblock	struct(array(long))
,	O
&	O
ads	*(struct)
->	O
stdsigmask	struct(array(long))
)	O
;	O
assert	O
(	O
!	O
r	int
)	O
;	O
r	int
=	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGPIPE	int
,	O
&	O
sa	struct(short,array(char))
,	O
&	O
ads	*(struct)
->	O
stdsigpipe	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
)	O
;	O
assert	O
(	O
!	O
r	int
)	O
;	O
}	O
void	O
adns__sigpipe_unprotect	(*(struct(enum(int,int,int,int,int,int,int,int,int,int,int),*((*`,*`,*`,array(struct(int,int,*(void),*(void))))->(void)),*(void),int,struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),struct(*(struct`),*(struct`)),*(struct(*`,enum(int,int,int,int),*`,*`,*`,struct`,struct`,struct`,int,int,*`,*`,*`,int,struct`,*`,*`,int,int,struct`,int,int,int,int,int,int,int,long,struct`,long,struct`)),int,int,int,struct(int,int,*(char)),struct(int,int,*(char)),int,int,int,int,int,int,enum(int,int,int,int),struct(long,long),struct(union(*`,*`),struct(array(long)),int,*(()->(void))),struct(array(long)),array(struct(int,short,short)),array(struct(struct(int))),array(struct(struct(int),struct(int))),*(*(char)),array(short))))->(void)
(	O
adns_state	*(struct)
ads	*(struct)
)	O
{	O
int	O
r	int
;	O
if	O
(	O
ads	*(struct)
->	O
iflags	enum(int,int,int,int,int,int,int,int,int,int,int)
&	O
adns_if_nosigpipe	int
)	O
return	O
;	O
r	int
=	O
sigaction	struct(union(*((int)->(void)),*((int,*(struct(int,int,int,int,union`)),*(void))->(void))),struct(array(long)),int,*(()->(void)))
(	O
SIGPIPE	int
,	O
&	O
ads	*(struct)
->	O
stdsigpipe	struct(union(*((int)->(void)),*((int,*(struct`),*(void))->(void))),struct(array(long)),int,*(()->(void)))
,	O
0	int
)	O
;	O
assert	O
(	O
!	O
r	int
)	O
;	O
r	int
=	O
sigprocmask	(int,*(struct(array(long))),*(struct(array(long))))->(int)
(	O
SIG_SETMASK	int
,	O
&	O
ads	*(struct)
->	O
stdsigmask	struct(array(long))
,	O
0	int
)	O
;	O
assert	O
(	O
!	O
r	int
)	O
;	O
}	O
