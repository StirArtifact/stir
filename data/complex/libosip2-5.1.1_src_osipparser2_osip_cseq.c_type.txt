int	O
osip_cseq_init	(*(*(struct(*(char),*(char)))))->(int)
(	O
osip_cseq_t	struct
*	O
*	O
cseq	*(struct(*(char),*(char)))
)	O
{	O
*	O
cseq	*(struct(*(char),*(char)))
=	O
(	O
osip_cseq_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_cseq_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
(	O
*	O
cseq	*(struct(*(char),*(char)))
)	O
->	O
method	*(char)
=	O
NULL	O
;	O
(	O
*	O
cseq	*(struct(*(char),*(char)))
)	O
->	O
number	*(char)
=	O
NULL	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_cseq	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))),*(char))->(int)
(	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
int	O
i	int
;	O
if	O
(	O
hvalue	*(char)
==	O
NULL	O
||	O
hvalue	*(char)
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
!=	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_cseq_init	(*(*(struct(*(char),*(char)))))->(int)
(	O
&	O
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
message_property	int
=	O
2	int
;	O
i	int
=	O
osip_cseq_parse	(*(struct(*(char),*(char))),*(char))->(int)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
,	O
hvalue	*(char)
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_cseq_free	(*(struct(*(char),*(char))))->(void)
(	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
)	O
;	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_cseq_parse	(*(struct(*(char),*(char))),*(char))->(int)
(	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
,	O
const	O
char	O
*	O
hvalue	*(char)
)	O
{	O
char	O
*	O
method	*(char)
=	O
NULL	O
;	O
const	O
char	O
*	O
end	*(char)
=	O
NULL	O
;	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
hvalue	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
=	O
NULL	O
;	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
=	O
NULL	O
;	O
method	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
hvalue	*(char)
,	O
' '	O
)	O
;	O
if	O
(	O
method	*(char)
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
end	*(char)
=	O
hvalue	*(char)
+	O
strlen	(*(char))->(long)
(	O
hvalue	*(char)
)	O
;	O
if	O
(	O
method	*(char)
-	O
hvalue	*(char)
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
method	*(char)
-	O
hvalue	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_clrncpy	(*(char),*(char),long)->(*(char))
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
,	O
hvalue	*(char)
,	O
method	*(char)
-	O
hvalue	*(char)
)	O
;	O
if	O
(	O
end	*(char)
-	O
method	*(char)
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
end	*(char)
-	O
method	*(char)
+	O
1	int
)	O
;	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_clrncpy	(*(char),*(char),long)->(*(char))
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
,	O
method	*(char)
+	O
1	int
,	O
end	*(char)
-	O
method	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_cseq_t	struct
*	O
osip_message_get_cseq	(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))->(*(struct(*(char),*(char))))
(	O
const	O
osip_message_t	struct
*	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
)	O
{	O
return	O
sip	*(*(struct(*(char),*(struct(*`,*`,*`,*`,*`,struct`,struct`,*`)),*(char),int,*(char),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`)),*(struct(*`,*`,struct`)),*(struct(*`,*`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),*(struct(*`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),*(struct(*`,*`,struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),struct(int,*(struct`)),int,*(char),long,*(void))))
->	O
cseq	*(struct(*(char),*(char)))
;	O
}	O
char	O
*	O
osip_cseq_get_number	(*(struct(*(char),*(char))))->(*(char))
(	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
)	O
{	O
return	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
;	O
}	O
char	O
*	O
osip_cseq_get_method	(*(struct(*(char),*(char))))->(*(char))
(	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
)	O
{	O
return	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
;	O
}	O
void	O
osip_cseq_set_number	(*(struct(*(char),*(char))),*(char))->(void)
(	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
,	O
char	O
*	O
number	*(char)
)	O
{	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
=	O
(	O
char	O
*	O
)	O
number	*(char)
;	O
}	O
void	O
osip_cseq_set_method	(*(struct(*(char),*(char))),*(char))->(void)
(	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
,	O
char	O
*	O
method	*(char)
)	O
{	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
=	O
(	O
char	O
*	O
)	O
method	*(char)
;	O
}	O
int	O
osip_cseq_to_str	(*(struct(*(char),*(char))),*(*(char)))->(int)
(	O
const	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
,	O
char	O
*	O
*	O
dest	*(char)
)	O
{	O
size_t	long
len	long
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
(	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
||	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
==	O
NULL	O
)	O
||	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
==	O
NULL	O
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
strlen	(*(char))->(long)
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
+	O
2	int
;	O
*	O
dest	*(char)
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
*	O
dest	*(char)
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
snprintf	(*(char),long,*(char))->(int)
(	O
*	O
dest	*(char)
,	O
len	long
,	O
"%s %s"	*(char)
,	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
,	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_cseq_free	(*(struct(*(char),*(char))))->(void)
(	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
)	O
{	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
)	O
;	O
osip_free	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
;	O
osip_free	O
(	O
cseq	*(struct(*(char),*(char)))
)	O
;	O
}	O
int	O
osip_cseq_clone	(*(struct(*(char),*(char))),*(*(struct(*(char),*(char)))))->(int)
(	O
const	O
osip_cseq_t	struct
*	O
cseq	*(struct(*(char),*(char)))
,	O
osip_cseq_t	struct
*	O
*	O
dest	*(char)
)	O
{	O
int	O
i	int
;	O
osip_cseq_t	struct
*	O
cs	*(struct(*(char),*(char)))
;	O
*	O
dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_cseq_init	(*(*(struct(*(char),*(char)))))->(int)
(	O
&	O
cs	*(struct(*(char),*(char)))
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_cseq_free	(*(struct(*(char),*(char))))->(void)
(	O
cs	*(struct(*(char),*(char)))
)	O
;	O
return	O
i	int
;	O
}	O
cs	*(struct(*(char),*(char)))
->	O
method	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
cseq	*(struct(*(char),*(char)))
->	O
method	*(char)
)	O
;	O
cs	*(struct(*(char),*(char)))
->	O
number	*(char)
=	O
osip_strdup	(*(char))->(*(char))
(	O
cseq	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
;	O
*	O
dest	*(char)
=	O
cs	*(struct(*(char),*(char)))
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_cseq_match	(*(struct(*(char),*(char))),*(struct(*(char),*(char))))->(int)
(	O
osip_cseq_t	struct
*	O
cseq1	*(struct(*(char),*(char)))
,	O
osip_cseq_t	struct
*	O
cseq2	*(struct(*(char),*(char)))
)	O
{	O
if	O
(	O
cseq1	*(struct(*(char),*(char)))
==	O
NULL	O
||	O
cseq2	*(struct(*(char),*(char)))
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
cseq1	*(struct(*(char),*(char)))
->	O
number	*(char)
==	O
NULL	O
||	O
cseq2	*(struct(*(char),*(char)))
->	O
number	*(char)
==	O
NULL	O
||	O
cseq1	*(struct(*(char),*(char)))
->	O
method	*(char)
==	O
NULL	O
||	O
cseq2	*(struct(*(char),*(char)))
->	O
method	*(char)
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
cseq1	*(struct(*(char),*(char)))
->	O
number	*(char)
,	O
cseq2	*(struct(*(char),*(char)))
->	O
number	*(char)
)	O
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
cseq2	*(struct(*(char),*(char)))
->	O
method	*(char)
,	O
"INVITE"	*(char)
)	O
||	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
cseq2	*(struct(*(char),*(char)))
->	O
method	*(char)
,	O
"ACK"	*(char)
)	O
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
cseq1	*(struct(*(char),*(char)))
->	O
method	*(char)
,	O
"INVITE"	*(char)
)	O
||	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
cseq1	*(struct(*(char),*(char)))
->	O
method	*(char)
,	O
"ACK"	*(char)
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
{	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
cseq1	*(struct(*(char),*(char)))
->	O
method	*(char)
,	O
cseq2	*(struct(*(char),*(char)))
->	O
method	*(char)
)	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
}	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
