static	O
CodepageInfo	struct(int,array(short))
codepages	array(struct(int,array(short)))
[	O
14	int
]	O
=	O
{	O
{	O
850	int
,	O
{	O
0x00c7	int
,	O
0x00fc	int
,	O
0x00e9	int
,	O
0x00e2	int
,	O
0x00e4	int
,	O
0x00e0	int
,	O
0x00e5	int
,	O
0x00e7	int
,	O
0x00ea	int
,	O
0x00eb	int
,	O
0x00e8	int
,	O
0x00ef	int
,	O
0x00ee	int
,	O
0x00ec	int
,	O
0x00c4	int
,	O
0x00c5	int
,	O
0x00c9	int
,	O
0x00e6	int
,	O
0x00c6	int
,	O
0x00f4	int
,	O
0x00f6	int
,	O
0x00f2	int
,	O
0x00fb	int
,	O
0x00f9	int
,	O
0x00ff	int
,	O
0x00d6	int
,	O
0x00dc	int
,	O
0x00f8	int
,	O
0x00a3	int
,	O
0x00d8	int
,	O
0x00d7	int
,	O
0x0192	int
,	O
0x00e1	int
,	O
0x00ed	int
,	O
0x00f3	int
,	O
0x00fa	int
,	O
0x00f1	int
,	O
0x00d1	int
,	O
0x00aa	int
,	O
0x00ba	int
,	O
0x00bf	int
,	O
0x00ae	int
,	O
0x00ac	int
,	O
0x00bd	int
,	O
0x00bc	int
,	O
0x00a1	int
,	O
0x00ab	int
,	O
0x00bb	int
,	O
0x2591	int
,	O
0x2592	int
,	O
0x2593	int
,	O
0x2502	int
,	O
0x2524	int
,	O
0x00c1	int
,	O
0x00c2	int
,	O
0x00c0	int
,	O
0x00a9	int
,	O
0x2563	int
,	O
0x2551	int
,	O
0x2557	int
,	O
0x255d	int
,	O
0x00a2	int
,	O
0x00a5	int
,	O
0x2510	int
,	O
0x2514	int
,	O
0x2534	int
,	O
0x252c	int
,	O
0x251c	int
,	O
0x2500	int
,	O
0x253c	int
,	O
0x00e3	int
,	O
0x00c3	int
,	O
0x255a	int
,	O
0x2554	int
,	O
0x2569	int
,	O
0x2566	int
,	O
0x2560	int
,	O
0x2550	int
,	O
0x256c	int
,	O
0x00a4	int
,	O
0x00f0	int
,	O
0x00d0	int
,	O
0x00ca	int
,	O
0x00cb	int
,	O
0x00c8	int
,	O
0x0131	int
,	O
0x00cd	int
,	O
0x00ce	int
,	O
0x00cf	int
,	O
0x2518	int
,	O
0x250c	int
,	O
0x2588	int
,	O
0x2584	int
,	O
0x00a6	int
,	O
0x00cc	int
,	O
0x2580	int
,	O
0x00d3	int
,	O
0x00df	int
,	O
0x00d4	int
,	O
0x00d2	int
,	O
0x00f5	int
,	O
0x00d5	int
,	O
0x00b5	int
,	O
0x00fe	int
,	O
0x00de	int
,	O
0x00da	int
,	O
0x00db	int
,	O
0x00d9	int
,	O
0x00fd	int
,	O
0x00dd	int
,	O
0x00af	int
,	O
0x00b4	int
,	O
0x00ad	int
,	O
0x00b1	int
,	O
0x2017	int
,	O
0x00be	int
,	O
0x00b6	int
,	O
0x00a7	int
,	O
0x00f7	int
,	O
0x00b8	int
,	O
0x00b0	int
,	O
0x00a8	int
,	O
0x00b7	int
,	O
0x00b9	int
,	O
0x00b3	int
,	O
0x00b2	int
,	O
0x25a0	int
,	O
0x00a0	int
,	O
}	O
}	O
,	O
{	O
866	int
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0x2591	int
,	O
0x2592	int
,	O
0x2593	int
,	O
0x2502	int
,	O
0x2524	int
,	O
0x2561	int
,	O
0x2562	int
,	O
0x2556	int
,	O
0x2555	int
,	O
0x2563	int
,	O
0x2551	int
,	O
0x2557	int
,	O
0x255d	int
,	O
0x255c	int
,	O
0x255b	int
,	O
0x2510	int
,	O
0x2514	int
,	O
0x2534	int
,	O
0x252c	int
,	O
0x251c	int
,	O
0x2500	int
,	O
0x253c	int
,	O
0x255e	int
,	O
0x255f	int
,	O
0x255a	int
,	O
0x2554	int
,	O
0x2569	int
,	O
0x2566	int
,	O
0x2560	int
,	O
0x2550	int
,	O
0x256c	int
,	O
0x2567	int
,	O
0x2568	int
,	O
0x2564	int
,	O
0x2565	int
,	O
0x2559	int
,	O
0x2558	int
,	O
0x2552	int
,	O
0x2553	int
,	O
0x256b	int
,	O
0x256a	int
,	O
0x2518	int
,	O
0x250c	int
,	O
0x2588	int
,	O
0x2584	int
,	O
0x258c	int
,	O
0x2590	int
,	O
0x2580	int
,	O
0x0440	int
,	O
0x0441	int
,	O
0x0442	int
,	O
0x0443	int
,	O
0x0444	int
,	O
0x0445	int
,	O
0x0446	int
,	O
0x0447	int
,	O
0x0448	int
,	O
0x0449	int
,	O
0x044a	int
,	O
0x044b	int
,	O
0x044c	int
,	O
0x044d	int
,	O
0x044e	int
,	O
0x044f	int
,	O
0x0401	int
,	O
0x0451	int
,	O
0x0404	int
,	O
0x0454	int
,	O
0x0407	int
,	O
0x0457	int
,	O
0x040e	int
,	O
0x045e	int
,	O
0x00b0	int
,	O
0x2219	int
,	O
0x00b7	int
,	O
0x221a	int
,	O
0x2116	int
,	O
0x00a4	int
,	O
0x25a0	int
,	O
0x00a0	int
,	O
}	O
}	O
,	O
{	O
874	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2026	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x00a0	int
,	O
0x0e01	int
,	O
0x0e02	int
,	O
0x0e03	int
,	O
0x0e04	int
,	O
0x0e05	int
,	O
0x0e06	int
,	O
0x0e07	int
,	O
0x0e08	int
,	O
0x0e09	int
,	O
0x0e0a	int
,	O
0x0e0b	int
,	O
0x0e0c	int
,	O
0x0e0d	int
,	O
0x0e0e	int
,	O
0x0e0f	int
,	O
0x0e10	int
,	O
0x0e11	int
,	O
0x0e12	int
,	O
0x0e13	int
,	O
0x0e14	int
,	O
0x0e15	int
,	O
0x0e16	int
,	O
0x0e17	int
,	O
0x0e18	int
,	O
0x0e19	int
,	O
0x0e1a	int
,	O
0x0e1b	int
,	O
0x0e1c	int
,	O
0x0e1d	int
,	O
0x0e1e	int
,	O
0x0e1f	int
,	O
0x0e20	int
,	O
0x0e21	int
,	O
0x0e22	int
,	O
0x0e23	int
,	O
0x0e24	int
,	O
0x0e25	int
,	O
0x0e26	int
,	O
0x0e27	int
,	O
0x0e28	int
,	O
0x0e29	int
,	O
0x0e2a	int
,	O
0x0e2b	int
,	O
0x0e2c	int
,	O
0x0e2d	int
,	O
0x0e2e	int
,	O
0x0e2f	int
,	O
0x0e30	int
,	O
0x0e31	int
,	O
0x0e32	int
,	O
0x0e33	int
,	O
0x0e34	int
,	O
0x0e35	int
,	O
0x0e36	int
,	O
0x0e37	int
,	O
0x0e38	int
,	O
0x0e39	int
,	O
0x0e3a	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x0e3f	int
,	O
0x0e40	int
,	O
0x0e41	int
,	O
0x0e42	int
,	O
0x0e43	int
,	O
0x0e44	int
,	O
0x0e45	int
,	O
0x0e46	int
,	O
0x0e47	int
,	O
0x0e48	int
,	O
0x0e49	int
,	O
0x0e4a	int
,	O
0x0e4b	int
,	O
0x0e4c	int
,	O
0x0e4d	int
,	O
0x0e4e	int
,	O
0x0e4f	int
,	O
0x0e50	int
,	O
0x0e51	int
,	O
0x0e52	int
,	O
0x0e53	int
,	O
0x0e54	int
,	O
0x0e55	int
,	O
0x0e56	int
,	O
0x0e57	int
,	O
0x0e58	int
,	O
0x0e59	int
,	O
0x0e5a	int
,	O
0x0e5b	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
}	O
}	O
,	O
{	O
1133	int
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0x00a0	int
,	O
0x0e81	int
,	O
0x0e82	int
,	O
0x0e84	int
,	O
0x0e87	int
,	O
0x0e88	int
,	O
0x0eaa	int
,	O
0x0e8a	int
,	O
0x0e8d	int
,	O
0x0e94	int
,	O
0x0e95	int
,	O
0x0e96	int
,	O
0x0e97	int
,	O
0x0e99	int
,	O
0x0e9a	int
,	O
0x0e9b	int
,	O
0x0e9c	int
,	O
0x0e9d	int
,	O
0x0e9e	int
,	O
0x0e9f	int
,	O
0x0ea1	int
,	O
0x0ea2	int
,	O
0x0ea3	int
,	O
0x0ea5	int
,	O
0x0ea7	int
,	O
0x0eab	int
,	O
0x0ead	int
,	O
0x0eae	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x0eaf	int
,	O
0x0eb0	int
,	O
0x0eb2	int
,	O
0x0eb3	int
,	O
0x0eb4	int
,	O
0x0eb5	int
,	O
0x0eb6	int
,	O
0x0eb7	int
,	O
0x0eb8	int
,	O
0x0eb9	int
,	O
0x0ebc	int
,	O
0x0eb1	int
,	O
0x0ebb	int
,	O
0x0ebd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x0ec0	int
,	O
0x0ec1	int
,	O
0x0ec2	int
,	O
0x0ec3	int
,	O
0x0ec4	int
,	O
0x0ec8	int
,	O
0x0ec9	int
,	O
0x0eca	int
,	O
0x0ecb	int
,	O
0x0ecc	int
,	O
0x0ecd	int
,	O
0x0ec6	int
,	O
0xfffd	int
,	O
0x0edc	int
,	O
0x0edd	int
,	O
0x20ad	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0x0ed0	int
,	O
0x0ed1	int
,	O
0x0ed2	int
,	O
0x0ed3	int
,	O
0x0ed4	int
,	O
0x0ed5	int
,	O
0x0ed6	int
,	O
0x0ed7	int
,	O
0x0ed8	int
,	O
0x0ed9	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x00a2	int
,	O
0x00ac	int
,	O
0x00a6	int
,	O
0xfffd	int
,	O
}	O
}	O
,	O
{	O
1250	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0xfffd	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0xfffd	int
,	O
0x2030	int
,	O
0x0160	int
,	O
0x2039	int
,	O
0x015a	int
,	O
0x0164	int
,	O
0x017d	int
,	O
0x0179	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0xfffd	int
,	O
0x2122	int
,	O
0x0161	int
,	O
0x203a	int
,	O
0x015b	int
,	O
0x0165	int
,	O
0x017e	int
,	O
0x017a	int
,	O
0x00a0	int
,	O
0x02c7	int
,	O
0x02d8	int
,	O
0x0141	int
,	O
0x00a4	int
,	O
0x0104	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x00a8	int
,	O
0x00a9	int
,	O
0x015e	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x017b	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x02db	int
,	O
0x0142	int
,	O
0x00b4	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x00b8	int
,	O
0x0105	int
,	O
0x015f	int
,	O
0x00bb	int
,	O
0x013d	int
,	O
0x02dd	int
,	O
0x013e	int
,	O
0x017c	int
,	O
0x0154	int
,	O
0x00c1	int
,	O
0x00c2	int
,	O
0x0102	int
,	O
0x00c4	int
,	O
0x0139	int
,	O
0x0106	int
,	O
0x00c7	int
,	O
0x010c	int
,	O
0x00c9	int
,	O
0x0118	int
,	O
0x00cb	int
,	O
0x011a	int
,	O
0x00cd	int
,	O
0x00ce	int
,	O
0x010e	int
,	O
0x0110	int
,	O
0x0143	int
,	O
0x0147	int
,	O
0x00d3	int
,	O
0x00d4	int
,	O
0x0150	int
,	O
0x00d6	int
,	O
0x00d7	int
,	O
0x0158	int
,	O
0x016e	int
,	O
0x00da	int
,	O
0x0170	int
,	O
0x00dc	int
,	O
0x00dd	int
,	O
0x0162	int
,	O
0x00df	int
,	O
0x0155	int
,	O
0x00e1	int
,	O
0x00e2	int
,	O
0x0103	int
,	O
0x00e4	int
,	O
0x013a	int
,	O
0x0107	int
,	O
0x00e7	int
,	O
0x010d	int
,	O
0x00e9	int
,	O
0x0119	int
,	O
0x00eb	int
,	O
0x011b	int
,	O
0x00ed	int
,	O
0x00ee	int
,	O
0x010f	int
,	O
0x0111	int
,	O
0x0144	int
,	O
0x0148	int
,	O
0x00f3	int
,	O
0x00f4	int
,	O
0x0151	int
,	O
0x00f6	int
,	O
0x00f7	int
,	O
0x0159	int
,	O
0x016f	int
,	O
0x00fa	int
,	O
0x0171	int
,	O
0x00fc	int
,	O
0x00fd	int
,	O
0x0163	int
,	O
0x02d9	int
,	O
}	O
}	O
,	O
{	O
1251	int
,	O
{	O
0x0402	int
,	O
0x0403	int
,	O
0x201a	int
,	O
0x0453	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0x20ac	int
,	O
0x2030	int
,	O
0x0409	int
,	O
0x2039	int
,	O
0x040a	int
,	O
0x040c	int
,	O
0x040b	int
,	O
0x040f	int
,	O
0x0452	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0xfffd	int
,	O
0x2122	int
,	O
0x0459	int
,	O
0x203a	int
,	O
0x045a	int
,	O
0x045c	int
,	O
0x045b	int
,	O
0x045f	int
,	O
0x00a0	int
,	O
0x040e	int
,	O
0x045e	int
,	O
0x0408	int
,	O
0x00a4	int
,	O
0x0490	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x0401	int
,	O
0x00a9	int
,	O
0x0404	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x0407	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x0406	int
,	O
0x0456	int
,	O
0x0491	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x0451	int
,	O
0x2116	int
,	O
0x0454	int
,	O
0x00bb	int
,	O
0x0458	int
,	O
0x0405	int
,	O
0x0455	int
,	O
0x0457	int
,	O
0x0410	int
,	O
0x0411	int
,	O
0x0412	int
,	O
0x0413	int
,	O
0x0414	int
,	O
0x0415	int
,	O
0x0416	int
,	O
0x0417	int
,	O
0x0418	int
,	O
0x0419	int
,	O
0x041a	int
,	O
0x041b	int
,	O
0x041c	int
,	O
0x041d	int
,	O
0x041e	int
,	O
0x041f	int
,	O
0x0420	int
,	O
0x0421	int
,	O
0x0422	int
,	O
0x0423	int
,	O
0x0424	int
,	O
0x0425	int
,	O
0x0426	int
,	O
0x0427	int
,	O
0x0428	int
,	O
0x0429	int
,	O
0x042a	int
,	O
0x042b	int
,	O
0x042c	int
,	O
0x042d	int
,	O
0x042e	int
,	O
0x042f	int
,	O
0x0430	int
,	O
0x0431	int
,	O
0x0432	int
,	O
0x0433	int
,	O
0x0434	int
,	O
0x0435	int
,	O
0x0436	int
,	O
0x0437	int
,	O
0x0438	int
,	O
0x0439	int
,	O
0x043a	int
,	O
0x043b	int
,	O
0x043c	int
,	O
0x043d	int
,	O
0x043e	int
,	O
0x043f	int
,	O
0x0440	int
,	O
0x0441	int
,	O
0x0442	int
,	O
0x0443	int
,	O
0x0444	int
,	O
0x0445	int
,	O
0x0446	int
,	O
0x0447	int
,	O
0x0448	int
,	O
0x0449	int
,	O
0x044a	int
,	O
0x044b	int
,	O
0x044c	int
,	O
0x044d	int
,	O
0x044e	int
,	O
0x044f	int
,	O
}	O
}	O
,	O
{	O
1252	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0x0192	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0x02c6	int
,	O
0x2030	int
,	O
0x0160	int
,	O
0x2039	int
,	O
0x0152	int
,	O
0xfffd	int
,	O
0x017d	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0x02dc	int
,	O
0x2122	int
,	O
0x0161	int
,	O
0x203a	int
,	O
0x0153	int
,	O
0xfffd	int
,	O
0x017e	int
,	O
0x0178	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
}	O
}	O
,	O
{	O
1253	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0x0192	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0xfffd	int
,	O
0x2030	int
,	O
0xfffd	int
,	O
0x2039	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0xfffd	int
,	O
0x2122	int
,	O
0xfffd	int
,	O
0x203a	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x00a0	int
,	O
0x0385	int
,	O
0x0386	int
,	O
0x00a3	int
,	O
0x00a4	int
,	O
0x00a5	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x00a8	int
,	O
0x00a9	int
,	O
0xfffd	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x2015	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x00b2	int
,	O
0x00b3	int
,	O
0x0384	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x0388	int
,	O
0x0389	int
,	O
0x038a	int
,	O
0x00bb	int
,	O
0x038c	int
,	O
0x00bd	int
,	O
0x038e	int
,	O
0x038f	int
,	O
0x0390	int
,	O
0x0391	int
,	O
0x0392	int
,	O
0x0393	int
,	O
0x0394	int
,	O
0x0395	int
,	O
0x0396	int
,	O
0x0397	int
,	O
0x0398	int
,	O
0x0399	int
,	O
0x039a	int
,	O
0x039b	int
,	O
0x039c	int
,	O
0x039d	int
,	O
0x039e	int
,	O
0x039f	int
,	O
0x03a0	int
,	O
0x03a1	int
,	O
0xfffd	int
,	O
0x03a3	int
,	O
0x03a4	int
,	O
0x03a5	int
,	O
0x03a6	int
,	O
0x03a7	int
,	O
0x03a8	int
,	O
0x03a9	int
,	O
0x03aa	int
,	O
0x03ab	int
,	O
0x03ac	int
,	O
0x03ad	int
,	O
0x03ae	int
,	O
0x03af	int
,	O
0x03b0	int
,	O
0x03b1	int
,	O
0x03b2	int
,	O
0x03b3	int
,	O
0x03b4	int
,	O
0x03b5	int
,	O
0x03b6	int
,	O
0x03b7	int
,	O
0x03b8	int
,	O
0x03b9	int
,	O
0x03ba	int
,	O
0x03bb	int
,	O
0x03bc	int
,	O
0x03bd	int
,	O
0x03be	int
,	O
0x03bf	int
,	O
0x03c0	int
,	O
0x03c1	int
,	O
0x03c2	int
,	O
0x03c3	int
,	O
0x03c4	int
,	O
0x03c5	int
,	O
0x03c6	int
,	O
0x03c7	int
,	O
0x03c8	int
,	O
0x03c9	int
,	O
0x03ca	int
,	O
0x03cb	int
,	O
0x03cc	int
,	O
0x03cd	int
,	O
0x03ce	int
,	O
0xfffd	int
,	O
}	O
}	O
,	O
{	O
1254	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0x0192	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0x02c6	int
,	O
0x2030	int
,	O
0x0160	int
,	O
0x2039	int
,	O
0x0152	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0x02dc	int
,	O
0x2122	int
,	O
0x0161	int
,	O
0x203a	int
,	O
0x0153	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x0178	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0x011e	int
,	O
0x00d1	int
,	O
0x00d2	int
,	O
0x00d3	int
,	O
0x00d4	int
,	O
0x00d5	int
,	O
0x00d6	int
,	O
0x00d7	int
,	O
0x00d8	int
,	O
0x00d9	int
,	O
0x00da	int
,	O
0x00db	int
,	O
0x00dc	int
,	O
0x0130	int
,	O
0x015e	int
,	O
0x00df	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0x011f	int
,	O
0x00f1	int
,	O
0x00f2	int
,	O
0x00f3	int
,	O
0x00f4	int
,	O
0x00f5	int
,	O
0x00f6	int
,	O
0x00f7	int
,	O
0x00f8	int
,	O
0x00f9	int
,	O
0x00fa	int
,	O
0x00fb	int
,	O
0x00fc	int
,	O
0x0131	int
,	O
0x015f	int
,	O
0x00ff	int
,	O
}	O
}	O
,	O
{	O
1255	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0x0192	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0x02c6	int
,	O
0x2030	int
,	O
0xfffd	int
,	O
0x2039	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0x02dc	int
,	O
0x2122	int
,	O
0xfffd	int
,	O
0x203a	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x00a0	int
,	O
0x00a1	int
,	O
0x00a2	int
,	O
0x00a3	int
,	O
0x20aa	int
,	O
0x00a5	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x00a8	int
,	O
0x00a9	int
,	O
0x00d7	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x00af	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x00b2	int
,	O
0x00b3	int
,	O
0x00b4	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x00b8	int
,	O
0x00b9	int
,	O
0x00f7	int
,	O
0x00bb	int
,	O
0x00bc	int
,	O
0x00bd	int
,	O
0x00be	int
,	O
0x00bf	int
,	O
0x05b0	int
,	O
0x05b1	int
,	O
0x05b2	int
,	O
0x05b3	int
,	O
0x05b4	int
,	O
0x05b5	int
,	O
0x05b6	int
,	O
0x05b7	int
,	O
0x05b8	int
,	O
0x05b9	int
,	O
0xfffd	int
,	O
0x05bb	int
,	O
0x05bc	int
,	O
0x05bd	int
,	O
0x05be	int
,	O
0x05bf	int
,	O
0x05c0	int
,	O
0x05c1	int
,	O
0x05c2	int
,	O
0x05c3	int
,	O
0x05f0	int
,	O
0x05f1	int
,	O
0x05f2	int
,	O
0x05f3	int
,	O
0x05f4	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x05d0	int
,	O
0x05d1	int
,	O
0x05d2	int
,	O
0x05d3	int
,	O
0x05d4	int
,	O
0x05d5	int
,	O
0x05d6	int
,	O
0x05d7	int
,	O
0x05d8	int
,	O
0x05d9	int
,	O
0x05da	int
,	O
0x05db	int
,	O
0x05dc	int
,	O
0x05dd	int
,	O
0x05de	int
,	O
0x05df	int
,	O
0x05e0	int
,	O
0x05e1	int
,	O
0x05e2	int
,	O
0x05e3	int
,	O
0x05e4	int
,	O
0x05e5	int
,	O
0x05e6	int
,	O
0x05e7	int
,	O
0x05e8	int
,	O
0x05e9	int
,	O
0x05ea	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x200e	int
,	O
0x200f	int
,	O
0xfffd	int
,	O
}	O
}	O
,	O
{	O
1256	int
,	O
{	O
0x20ac	int
,	O
0x067e	int
,	O
0x201a	int
,	O
0x0192	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0x02c6	int
,	O
0x2030	int
,	O
0x0679	int
,	O
0x2039	int
,	O
0x0152	int
,	O
0x0686	int
,	O
0x0698	int
,	O
0x0688	int
,	O
0x06af	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0x06a9	int
,	O
0x2122	int
,	O
0x0691	int
,	O
0x203a	int
,	O
0x0153	int
,	O
0x200c	int
,	O
0x200d	int
,	O
0x06ba	int
,	O
0x00a0	int
,	O
0x060c	int
,	O
0x00a2	int
,	O
0x00a3	int
,	O
0x00a4	int
,	O
0x00a5	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x00a8	int
,	O
0x00a9	int
,	O
0x06be	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x00af	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x00b2	int
,	O
0x00b3	int
,	O
0x00b4	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x00b8	int
,	O
0x00b9	int
,	O
0x061b	int
,	O
0x00bb	int
,	O
0x00bc	int
,	O
0x00bd	int
,	O
0x00be	int
,	O
0x061f	int
,	O
0x06c1	int
,	O
0x0621	int
,	O
0x0622	int
,	O
0x0623	int
,	O
0x0624	int
,	O
0x0625	int
,	O
0x0626	int
,	O
0x0627	int
,	O
0x0628	int
,	O
0x0629	int
,	O
0x062a	int
,	O
0x062b	int
,	O
0x062c	int
,	O
0x062d	int
,	O
0x062e	int
,	O
0x062f	int
,	O
0x0630	int
,	O
0x0631	int
,	O
0x0632	int
,	O
0x0633	int
,	O
0x0634	int
,	O
0x0635	int
,	O
0x0636	int
,	O
0x00d7	int
,	O
0x0637	int
,	O
0x0638	int
,	O
0x0639	int
,	O
0x063a	int
,	O
0x0640	int
,	O
0x0641	int
,	O
0x0642	int
,	O
0x0643	int
,	O
0x00e0	int
,	O
0x0644	int
,	O
0x00e2	int
,	O
0x0645	int
,	O
0x0646	int
,	O
0x0647	int
,	O
0x0648	int
,	O
0x00e7	int
,	O
0x00e8	int
,	O
0x00e9	int
,	O
0x00ea	int
,	O
0x00eb	int
,	O
0x0649	int
,	O
0x064a	int
,	O
0x00ee	int
,	O
0x00ef	int
,	O
0x064b	int
,	O
0x064c	int
,	O
0x064d	int
,	O
0x064e	int
,	O
0x00f4	int
,	O
0x064f	int
,	O
0x0650	int
,	O
0x00f7	int
,	O
0x0651	int
,	O
0x00f9	int
,	O
0x0652	int
,	O
0x00fb	int
,	O
0x00fc	int
,	O
0x200e	int
,	O
0x200f	int
,	O
0x06d2	int
,	O
}	O
}	O
,	O
{	O
1257	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0xfffd	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0xfffd	int
,	O
0x2030	int
,	O
0xfffd	int
,	O
0x2039	int
,	O
0xfffd	int
,	O
0x00a8	int
,	O
0x02c7	int
,	O
0x00b8	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0xfffd	int
,	O
0x2122	int
,	O
0xfffd	int
,	O
0x203a	int
,	O
0xfffd	int
,	O
0x00af	int
,	O
0x02db	int
,	O
0xfffd	int
,	O
0x00a0	int
,	O
0xfffd	int
,	O
0x00a2	int
,	O
0x00a3	int
,	O
0x00a4	int
,	O
0xfffd	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x00d8	int
,	O
0x00a9	int
,	O
0x0156	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x00c6	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x00b2	int
,	O
0x00b3	int
,	O
0x00b4	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x00f8	int
,	O
0x00b9	int
,	O
0x0157	int
,	O
0x00bb	int
,	O
0x00bc	int
,	O
0x00bd	int
,	O
0x00be	int
,	O
0x00e6	int
,	O
0x0104	int
,	O
0x012e	int
,	O
0x0100	int
,	O
0x0106	int
,	O
0x00c4	int
,	O
0x00c5	int
,	O
0x0118	int
,	O
0x0112	int
,	O
0x010c	int
,	O
0x00c9	int
,	O
0x0179	int
,	O
0x0116	int
,	O
0x0122	int
,	O
0x0136	int
,	O
0x012a	int
,	O
0x013b	int
,	O
0x0160	int
,	O
0x0143	int
,	O
0x0145	int
,	O
0x00d3	int
,	O
0x014c	int
,	O
0x00d5	int
,	O
0x00d6	int
,	O
0x00d7	int
,	O
0x0172	int
,	O
0x0141	int
,	O
0x015a	int
,	O
0x016a	int
,	O
0x00dc	int
,	O
0x017b	int
,	O
0x017d	int
,	O
0x00df	int
,	O
0x0105	int
,	O
0x012f	int
,	O
0x0101	int
,	O
0x0107	int
,	O
0x00e4	int
,	O
0x00e5	int
,	O
0x0119	int
,	O
0x0113	int
,	O
0x010d	int
,	O
0x00e9	int
,	O
0x017a	int
,	O
0x0117	int
,	O
0x0123	int
,	O
0x0137	int
,	O
0x012b	int
,	O
0x013c	int
,	O
0x0161	int
,	O
0x0144	int
,	O
0x0146	int
,	O
0x00f3	int
,	O
0x014d	int
,	O
0x00f5	int
,	O
0x00f6	int
,	O
0x00f7	int
,	O
0x0173	int
,	O
0x0142	int
,	O
0x015b	int
,	O
0x016b	int
,	O
0x00fc	int
,	O
0x017c	int
,	O
0x017e	int
,	O
0x02d9	int
,	O
}	O
}	O
,	O
{	O
1258	int
,	O
{	O
0x20ac	int
,	O
0xfffd	int
,	O
0x201a	int
,	O
0x0192	int
,	O
0x201e	int
,	O
0x2026	int
,	O
0x2020	int
,	O
0x2021	int
,	O
0x02c6	int
,	O
0x2030	int
,	O
0xfffd	int
,	O
0x2039	int
,	O
0x0152	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x2018	int
,	O
0x2019	int
,	O
0x201c	int
,	O
0x201d	int
,	O
0x2022	int
,	O
0x2013	int
,	O
0x2014	int
,	O
0x02dc	int
,	O
0x2122	int
,	O
0xfffd	int
,	O
0x203a	int
,	O
0x0153	int
,	O
0xfffd	int
,	O
0xfffd	int
,	O
0x0178	int
,	O
0x00a0	int
,	O
0x00a1	int
,	O
0x00a2	int
,	O
0x00a3	int
,	O
0x00a4	int
,	O
0x00a5	int
,	O
0x00a6	int
,	O
0x00a7	int
,	O
0x00a8	int
,	O
0x00a9	int
,	O
0x00aa	int
,	O
0x00ab	int
,	O
0x00ac	int
,	O
0x00ad	int
,	O
0x00ae	int
,	O
0x00af	int
,	O
0x00b0	int
,	O
0x00b1	int
,	O
0x00b2	int
,	O
0x00b3	int
,	O
0x00b4	int
,	O
0x00b5	int
,	O
0x00b6	int
,	O
0x00b7	int
,	O
0x00b8	int
,	O
0x00b9	int
,	O
0x00ba	int
,	O
0x00bb	int
,	O
0x00bc	int
,	O
0x00bd	int
,	O
0x00be	int
,	O
0x00bf	int
,	O
0x00c0	int
,	O
0x00c1	int
,	O
0x00c2	int
,	O
0x0102	int
,	O
0x00c4	int
,	O
0x00c5	int
,	O
0x00c6	int
,	O
0x00c7	int
,	O
0x00c8	int
,	O
0x00c9	int
,	O
0x00ca	int
,	O
0x00cb	int
,	O
0x0300	int
,	O
0x00cd	int
,	O
0x00ce	int
,	O
0x00cf	int
,	O
0x0110	int
,	O
0x00d1	int
,	O
0x0309	int
,	O
0x00d3	int
,	O
0x00d4	int
,	O
0x01a0	int
,	O
0x00d6	int
,	O
0x00d7	int
,	O
0x00d8	int
,	O
0x00d9	int
,	O
0x00da	int
,	O
0x00db	int
,	O
0x00dc	int
,	O
0x01af	int
,	O
0x0303	int
,	O
0x00df	int
,	O
0x00e0	int
,	O
0x00e1	int
,	O
0x00e2	int
,	O
0x0103	int
,	O
0x00e4	int
,	O
0x00e5	int
,	O
0x00e6	int
,	O
0x00e7	int
,	O
0x00e8	int
,	O
0x00e9	int
,	O
0x00ea	int
,	O
0x00eb	int
,	O
0x0301	int
,	O
0x00ed	int
,	O
0x00ee	int
,	O
0x00ef	int
,	O
0x0111	int
,	O
0x00f1	int
,	O
0x0323	int
,	O
0x00f3	int
,	O
0x00f4	int
,	O
0x01a1	int
,	O
0x00f6	int
,	O
0x00f7	int
,	O
0x00f8	int
,	O
0x00f9	int
,	O
0x00fa	int
,	O
0x00fb	int
,	O
0x00fc	int
,	O
0x01b0	int
,	O
0x20ab	int
,	O
0x00ff	int
,	O
}	O
}	O
,	O
{	O
0	int
,	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
}	O
}	O
,	O
}	O
;	O
extern	O
int	O
nopict_mode	int
;	O
static	O
int	O
charset_type	int
=	O
CHARSET_ANSI	int
;	O
static	O
CodepageInfo	struct(int,array(short))
*	O
charset_codepage	*(struct(int,array(short)))
;	O
static	O
int	O
coming_pars_that_are_tabular	int
=	O
0	int
;	O
static	O
int	O
within_table	int
=	O
FALSE	O
;	O
static	O
int	O
have_printed_row_begin	int
=	O
FALSE	O
;	O
static	O
int	O
have_printed_cell_begin	int
=	O
FALSE	O
;	O
static	O
int	O
have_printed_row_end	int
=	O
FALSE	O
;	O
static	O
int	O
have_printed_cell_end	int
=	O
FALSE	O
;	O
static	O
int	O
total_chars_this_line	int
=	O
0	int
;	O
enum	O
{	O
ALIGN_LEFT	int
=	O
0	int
,	O
ALIGN_RIGHT	int
,	O
ALIGN_CENTER	int
,	O
ALIGN_JUSTIFY	int
}	O
;	O
int	O
simulate_smallcaps	int
;	O
int	O
simulate_allcaps	int
;	O
enum	O
{	O
PICT_UNKNOWN	int
=	O
0	int
,	O
PICT_WM	int
,	O
PICT_MAC	int
,	O
PICT_PM	int
,	O
PICT_DI	int
,	O
PICT_WB	int
,	O
PICT_JPEG	int
,	O
PICT_PNG	int
,	O
}	O
;	O
static	O
int	O
within_picture	int
=	O
FALSE	O
;	O
static	O
int	O
picture_file_number	int
=	O
1	int
;	O
static	O
char	O
picture_path	array(char)
[	O
255	int
]	O
;	O
static	O
int	O
picture_width	int
;	O
static	O
int	O
picture_height	int
;	O
static	O
int	O
picture_bits_per_pixel	int
=	O
1	int
;	O
static	O
int	O
picture_type	int
=	O
PICT_UNKNOWN	int
;	O
static	O
int	O
picture_wmetafile_type	int
;	O
static	O
char	O
*	O
picture_wmetafile_type_str	*(char)
;	O
static	O
int	O
have_printed_body	int
=	O
FALSE	O
;	O
static	O
int	O
within_header	int
=	O
TRUE	O
;	O
static	O
char	O
*	O
hyperlink_base	*(char)
=	O
NULL	O
;	O
void	O
starting_body	()->(void)
(	O
)	O
;	O
void	O
starting_text	()->(void)
(	O
)	O
;	O
void	O
print_with_special_exprs	(*(char))->(void)
(	O
char	O
*	O
s	*(char)
)	O
;	O
static	O
int	O
banner_printed	int
=	O
FALSE	O
;	O
void	O
print_banner	()->(void)
(	O
)	O
{	O
if	O
(	O
!	O
banner_printed	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Translation from RTF performed by "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"UnRTF, version "	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
PACKAGE_VERSION	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
banner_printed	int
=	O
TRUE	O
;	O
}	O
void	O
starting_body	()->(void)
(	O
)	O
{	O
if	O
(	O
!	O
have_printed_body	int
)	O
{	O
if	O
(	O
!	O
inline_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
header_end	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
body_begin	*(char)
)	O
;	O
}	O
within_header	int
=	O
FALSE	O
;	O
have_printed_body	int
=	O
TRUE	O
;	O
}	O
}	O
static	O
char	O
*	O
month_strings	array(*(char))
[	O
12	int
]	O
=	O
{	O
"January"	*(char)
,	O
"February"	*(char)
,	O
"March"	*(char)
,	O
"April"	*(char)
,	O
"May"	*(char)
,	O
"June"	*(char)
,	O
"July"	*(char)
,	O
"August"	*(char)
,	O
"September"	*(char)
,	O
"October"	*(char)
,	O
"November"	*(char)
,	O
"December"	*(char)
}	O
;	O
void	O
word_dump_date	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
int	O
year	int
=	O
0	int
,	O
month	int
=	O
0	int
,	O
day	int
=	O
0	int
,	O
hour	int
=	O
0	int
,	O
minute	int
=	O
0	int
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
*	O
s	*(char)
==	O
'\\'	O
)	O
{	O
++	O
s	*(char)
;	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
"yr"	*(char)
,	O
2	int
)	O
&&	O
isdigit	(int)->(int)
(	O
s	*(char)
[	O
2	int
]	O
)	O
)	O
{	O
year	int
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
2	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
"mo"	*(char)
,	O
2	int
)	O
&&	O
isdigit	(int)->(int)
(	O
s	*(char)
[	O
2	int
]	O
)	O
)	O
{	O
month	int
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
2	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
"dy"	*(char)
,	O
2	int
)	O
&&	O
isdigit	(int)->(int)
(	O
s	*(char)
[	O
2	int
]	O
)	O
)	O
{	O
day	int
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
2	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
"min"	*(char)
,	O
3	int
)	O
&&	O
isdigit	(int)->(int)
(	O
s	*(char)
[	O
3	int
]	O
)	O
)	O
{	O
minute	int
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
3	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
"hr"	*(char)
,	O
2	int
)	O
&&	O
isdigit	(int)->(int)
(	O
s	*(char)
[	O
2	int
]	O
)	O
)	O
{	O
hour	int
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
2	int
]	O
)	O
;	O
}	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
if	O
(	O
year	int
&&	O
month	int
&&	O
day	int
)	O
{	O
printf	(*(char))->(int)
(	O
"%d %s %d "	*(char)
,	O
day	int
,	O
month_strings	array(*(char))
[	O
month	int
-	O
1	int
]	O
,	O
year	int
)	O
;	O
}	O
if	O
(	O
hour	int
&&	O
minute	int
)	O
{	O
printf	(*(char))->(int)
(	O
"%02d:%02d "	*(char)
,	O
hour	int
,	O
minute	int
)	O
;	O
}	O
}	O
typedef	O
struct	O
{	O
int	O
num	int
;	O
char	O
*	O
name	*(char)
;	O
}	O
FontEntry	struct(int,*(char))
;	O
static	O
FontEntry	struct(int,*(char))
font_table	array(struct(int,*(char)))
[	O
MAX_FONTS	O
]	O
;	O
static	O
int	O
total_fonts	int
=	O
0	int
;	O
char	O
*	O
lookup_fontname	(int)->(*(char))
(	O
int	O
num	int
)	O
{	O
int	O
i	int
;	O
if	O
(	O
total_fonts	int
)	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
total_fonts	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
font_table	array(struct(int,*(char)))
[	O
i	int
]	O
.	O
num	int
==	O
num	int
)	O
return	O
font_table	array(struct(int,*(char)))
[	O
i	int
]	O
.	O
name	*(char)
;	O
}	O
return	O
NULL	O
;	O
}	O
void	O
process_font_table	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
int	O
num	int
;	O
char	O
name	*(char)
[	O
BUFSIZ	int
]	O
;	O
char	O
*	O
tmp	*(char)
;	O
if	O
(	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
)	O
{	O
tmp	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\f"	*(char)
,	O
tmp	*(char)
,	O
2	int
)	O
)	O
{	O
num	int
=	O
atoi	(*(char))->(int)
(	O
&	O
tmp	*(char)
[	O
2	int
]	O
)	O
;	O
name	*(char)
[	O
0	int
]	O
=	O
0	int
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
tmp	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
tmp	*(char)
&&	O
tmp	*(char)
[	O
0	int
]	O
!=	O
'\\'	O
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tmp	*(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
>	O
BUFSIZ	int
-	O
1	int
)	O
{	O
printf	(*(char))->(int)
(	O
"Invalid font table entry\n"	*(char)
)	O
;	O
name	*(char)
[	O
0	int
]	O
=	O
0	int
;	O
}	O
else	O
strncat	(*(char),*(char),long)->(*(char))
(	O
name	*(char)
,	O
tmp	*(char)
,	O
sizeof	O
(	O
name	*(char)
)	O
-	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
-	O
1	int
)	O
;	O
}	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
if	O
(	O
(	O
tmp	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
name	*(char)
,	O
';'	O
)	O
)	O
)	O
*	O
tmp	*(char)
=	O
0	int
;	O
font_table	array(struct(int,*(char)))
[	O
total_fonts	int
]	O
.	O
num	int
=	O
num	int
;	O
font_table	array(struct(int,*(char)))
[	O
total_fonts	int
]	O
.	O
name	*(char)
=	O
my_strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
total_fonts	int
++	O
;	O
}	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"font table contains %d fonts total"	*(char)
,	O
total_fonts	int
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
if	O
(	O
debug_mode	int
)	O
{	O
int	O
i	int
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"font table dump: \n"	*(char)
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
total_fonts	int
;	O
i	int
++	O
)	O
{	O
printf	(*(char))->(int)
(	O
" font %d = %s\n"	*(char)
,	O
font_table	array(struct(int,*(char)))
[	O
i	int
]	O
.	O
num	int
,	O
font_table	array(struct(int,*(char)))
[	O
i	int
]	O
.	O
name	*(char)
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
void	O
process_index_entry	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
)	O
{	O
char	O
*	O
str	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
debug_mode	int
&&	O
str	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"index entry word: %s "	*(char)
,	O
str	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
}	O
void	O
process_toc_entry	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int)->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
include_page_num	int
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
if	O
(	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
)	O
{	O
char	O
*	O
str	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
debug_mode	int
&&	O
str	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"toc %s entry word: %s "	*(char)
,	O
include_page_num	int
?	O
"page#"	*(char)
:	O
"no page#"	*(char)
,	O
str	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
}	O
void	O
process_info_group	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
if	O
(	O
!	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
printf	(*(char))->(int)
(	O
"AUTHOR'S COMMENT: \\info command is null!\n"	*(char)
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
char	O
*	O
s	*(char)
;	O
s	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
inline_mode	int
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\title"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_title_begin	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s2	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s2	*(char)
[	O
0	int
]	O
!=	O
'\\'	O
)	O
{	O
print_with_special_exprs	(*(char))->(void)
(	O
s2	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
s2	*(char)
[	O
1	int
]	O
==	O
'\''	O
)	O
{	O
int	O
ch	int
=	O
h2toi	(*(char))->(int)
(	O
&	O
s2	*(char)
[	O
2	int
]	O
)	O
;	O
char	O
*	O
s3	*(char)
;	O
s3	*(char)
=	O
op_translate_char	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*`)),*((int,int,int)->(void)))),int,*(struct(int,array(short))),int,int)->(*(char))
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
,	O
charset_type	int
,	O
charset_codepage	*(struct(int,array(short)))
,	O
ch	int
,	O
numchar_table	short
)	O
;	O
if	O
(	O
!	O
s3	*(char)
||	O
!	O
*	O
s3	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"char 0x%02x"	*(char)
,	O
ch	int
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_begin	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
s3	*(char)
)	O
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_end	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_end	*(char)
)	O
;	O
}	O
}	O
}	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_title_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\keywords"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_keywords_begin	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s2	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s2	*(char)
[	O
0	int
]	O
!=	O
'\\'	O
)	O
printf	(*(char))->(int)
(	O
"%s,"	*(char)
,	O
s2	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_keywords_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\author"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_author_begin	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s2	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s2	*(char)
[	O
0	int
]	O
!=	O
'\\'	O
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
s2	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_author_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\comment"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"comments: "	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s2	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s2	*(char)
[	O
0	int
]	O
!=	O
'\\'	O
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
s2	*(char)
)	O
;	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\nofpages"	*(char)
,	O
s	*(char)
,	O
9	int
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"total pages: %s"	*(char)
,	O
&	O
s	*(char)
[	O
9	int
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\nofwords"	*(char)
,	O
s	*(char)
,	O
9	int
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"total words: %s"	*(char)
,	O
&	O
s	*(char)
[	O
9	int
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\nofchars"	*(char)
,	O
s	*(char)
,	O
9	int
)	O
&&	O
isdigit	(int)->(int)
(	O
s	*(char)
[	O
9	int
]	O
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"total chars: %s"	*(char)
,	O
&	O
s	*(char)
[	O
9	int
]	O
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\creatim"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"creation date: "	*(char)
)	O
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
word_dump_date	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\printim"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"last printed: "	*(char)
)	O
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
word_dump_date	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\buptim"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"last backup: "	*(char)
)	O
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
word_dump_date	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\revtim"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"revision date: "	*(char)
)	O
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
word_dump_date	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\hlinkbase"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
char	O
*	O
linkstr	*(char)
=	O
NULL	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"hyperlink base: "	*(char)
)	O
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
nextword	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
if	O
(	O
nextword	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
linkstr	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
nextword	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
}	O
if	O
(	O
linkstr	*(char)
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
linkstr	*(char)
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"(none)"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
hyperlink_base	*(char)
=	O
linkstr	*(char)
;	O
}	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
}	O
typedef	O
struct	O
{	O
unsigned	O
char	O
r	char
,	O
g	char
,	O
b	char
;	O
}	O
Color	struct(char,char,char)
;	O
static	O
Color	struct(char,char,char)
color_table	array(struct(char,char,char))
[	O
MAX_COLORS	O
]	O
;	O
static	O
int	O
total_colors	int
=	O
0	int
;	O
void	O
process_color_table	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
int	O
r	char
,	O
g	char
,	O
b	char
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
r	char
=	O
g	char
=	O
b	char
=	O
0	int
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\red"	*(char)
,	O
s	*(char)
,	O
4	int
)	O
)	O
{	O
r	char
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
4	int
]	O
)	O
;	O
while	O
(	O
r	char
>	O
255	int
)	O
r	char
>>=	O
8	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\green"	*(char)
,	O
s	*(char)
,	O
6	int
)	O
)	O
{	O
g	char
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
6	int
]	O
)	O
;	O
while	O
(	O
g	char
>	O
255	int
)	O
g	char
>>=	O
8	int
;	O
}	O
else	O
if	O
(	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
"\\blue"	*(char)
,	O
s	*(char)
,	O
5	int
)	O
)	O
{	O
b	char
=	O
atoi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
5	int
]	O
)	O
;	O
while	O
(	O
b	char
>	O
255	int
)	O
b	char
>>=	O
8	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
";"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
color_table	array(struct(char,char,char))
[	O
total_colors	int
]	O
.	O
r	char
=	O
r	char
;	O
color_table	array(struct(char,char,char))
[	O
total_colors	int
]	O
.	O
g	char
=	O
g	char
;	O
color_table	array(struct(char,char,char))
[	O
total_colors	int
++	O
]	O
.	O
b	char
=	O
b	char
;	O
if	O
(	O
debug_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"storing color entry %d: %02x%02x%02x"	*(char)
,	O
total_colors	int
-	O
1	int
,	O
r	char
,	O
g	char
,	O
b	char
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
r	char
=	O
g	char
=	O
b	char
=	O
0	int
;	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
if	O
(	O
debug_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"color table had %d entries -->\n"	*(char)
,	O
total_colors	int
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
static	O
int	O
cmd_cf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
num	int
)	O
{	O
char	O
str	*(char)
[	O
40	int
]	O
;	O
if	O
(	O
!	O
has_param	char
||	O
num	int
>=	O
total_colors	int
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"font color change attempted is invalid"	*(char)
)	O
;	O
}	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"#%02x%02x%02x"	*(char)
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
r	char
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
g	char
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
b	char
)	O
;	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FOREGROUND	int
,	O
str	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_cb	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
num	int
)	O
{	O
char	O
str	*(char)
[	O
40	int
]	O
;	O
if	O
(	O
!	O
has_param	char
||	O
num	int
>=	O
total_colors	int
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"font color change attempted is invalid"	*(char)
)	O
;	O
}	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"#%02x%02x%02x"	*(char)
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
r	char
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
g	char
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
b	char
)	O
;	O
attr_push	(int,*(char))->(void)
(	O
ATTR_BACKGROUND	int
,	O
str	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_fs	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
points	int
)	O
{	O
char	O
str	*(char)
[	O
20	int
]	O
;	O
if	O
(	O
!	O
has_param	char
)	O
return	O
FALSE	O
;	O
points	int
/=	O
2	int
;	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"%d"	*(char)
,	O
points	int
)	O
;	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTSIZE	int
,	O
str	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_field	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
num	int
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
char	O
*	O
s	*(char)
;	O
s	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\*"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s2	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s2	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"\\fldinst"	*(char)
,	O
s2	*(char)
)	O
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
char	O
*	O
s	*(char)
;	O
char	O
*	O
s4	*(char)
;	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
s	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
"SYMBOL"	*(char)
)	O
)	O
{	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
,	O
" "	*(char)
)	O
)	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
s4	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s4	*(char)
)	O
{	O
int	O
char_num	int
;	O
char_num	int
=	O
atoi	(*(char))->(int)
(	O
s4	*(char)
)	O
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
symbol_first_char	short
<=	O
char_num	int
&&	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
symbol_last_char	short
>=	O
char_num	int
)	O
{	O
char	O
*	O
string	*(char)
;	O
if	O
(	O
(	O
string	*(char)
=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
symbol_translation_table	*(*(char))
[	O
char_num	int
-	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
symbol_first_char	short
]	O
)	O
!=	O
0	int
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
string	*(char)
)	O
;	O
}	O
}	O
}	O
while	O
(	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
&&	O
!	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
if	O
(	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s3	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s3	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"HYPERLINK"	*(char)
,	O
s3	*(char)
)	O
)	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
char	O
*	O
s4	*(char)
;	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
while	O
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
" "	*(char)
,	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
)	O
)	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
if	O
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
s4	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w4	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
hyperlink_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
s4	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
hyperlink_end	*(char)
)	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w3	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
}	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w2	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
}	O
}	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_f	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
num	int
)	O
{	O
char	O
*	O
name	*(char)
;	O
if	O
(	O
!	O
has_param	char
)	O
return	O
FALSE	O
;	O
name	*(char)
=	O
lookup_fontname	(int)->(*(char))
(	O
num	int
)	O
;	O
numchar_table	short
=	O
FONTROMAN_TABLE	int
;	O
if	O
(	O
!	O
name	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"invalid font number %d"	*(char)
,	O
num	int
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
name	*(char)
)	O
;	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"Symbol"	*(char)
)	O
!=	O
NULL	O
)	O
numchar_table	short
=	O
FONTSYMBOL_TABLE	int
;	O
else	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
name	*(char)
,	O
"Greek"	*(char)
)	O
!=	O
NULL	O
)	O
numchar_table	short
=	O
FONTGREEK_TABLE	int
;	O
if	O
(	O
0	int
)	O
printf	(*(char))->(int)
(	O
"<numchar_table set to %d>"	*(char)
,	O
numchar_table	short
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_highlight	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
num	int
)	O
{	O
char	O
str	*(char)
[	O
40	int
]	O
;	O
if	O
(	O
!	O
has_param	char
||	O
num	int
>=	O
total_colors	int
)	O
{	O
warning_handler	(*(char))->(void)
(	O
"font background color change attempted is invalid"	*(char)
)	O
;	O
}	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"#%02x%02x%02x"	*(char)
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
r	char
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
g	char
,	O
color_table	array(struct(char,char,char))
[	O
num	int
]	O
.	O
b	char
)	O
;	O
attr_push	(int,*(char))->(void)
(	O
ATTR_BACKGROUND	int
,	O
str	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_tab	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
int	O
need	int
=	O
8	int
-	O
(	O
total_chars_this_line	int
%	O
8	int
)	O
;	O
total_chars_this_line	int
+=	O
need	int
;	O
while	O
(	O
need	int
>	O
0	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
forced_space	*(char)
)	O
;	O
need	int
--	O
;	O
}	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_plain	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_pop_all	()->(void)
(	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_fnil	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTNIL_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_froman	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTROMAN_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_fswiss	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTSWISS_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_fmodern	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTMODERN_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_fscript	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTSCRIPT_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_fdecor	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTDECOR_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ftech	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_FONTFACE	int
,	O
FONTTECH_STR	*(char)
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_expand	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
char	O
str	*(char)
[	O
10	int
]	O
;	O
if	O
(	O
has_param	char
)	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"%d"	*(char)
,	O
param	*(char)
/	O
4	int
)	O
;	O
if	O
(	O
!	O
param	*(char)
)	O
attr_pop	(int)->(int)
(	O
ATTR_EXPAND	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_EXPAND	int
,	O
str	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_emboss	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
char	O
str	*(char)
[	O
10	int
]	O
;	O
if	O
(	O
has_param	char
&&	O
!	O
param	*(char)
)	O
attr_pop	(int)->(int)
(	O
ATTR_EMBOSS	int
)	O
;	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"%d"	*(char)
,	O
param	*(char)
)	O
;	O
attr_push	(int,*(char))->(void)
(	O
ATTR_EMBOSS	int
,	O
str	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_engrave	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
char	O
str	*(char)
[	O
10	int
]	O
;	O
if	O
(	O
has_param	char
&&	O
!	O
param	*(char)
)	O
attr_pop	(int)->(int)
(	O
ATTR_ENGRAVE	int
)	O
;	O
else	O
{	O
sprintf	(*(char),*(char))->(int)
(	O
str	*(char)
,	O
"%d"	*(char)
,	O
param	*(char)
)	O
;	O
attr_push	(int,*(char))->(void)
(	O
ATTR_ENGRAVE	int
,	O
str	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_caps	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
!	O
param	*(char)
)	O
attr_pop	(int)->(int)
(	O
ATTR_CAPS	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_CAPS	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_scaps	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
!	O
param	*(char)
)	O
attr_pop	(int)->(int)
(	O
ATTR_SMALLCAPS	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_SMALLCAPS	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_bullet	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
bullet	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
bullet	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ldblquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
left_dbl_quote	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
left_dbl_quote	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_rdblquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
right_dbl_quote	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
right_dbl_quote	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_lquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
left_quote	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
left_quote	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_nonbreaking_space	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
nonbreaking_space	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
nonbreaking_space	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_nonbreaking_hyphen	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
nonbreaking_hyphen	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
nonbreaking_hyphen	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_optional_hyphen	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
optional_hyphen	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
optional_hyphen	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_emdash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
emdash	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
emdash	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_endash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
endash	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
endash	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_rquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
right_quote	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
chars	array(short)
.	O
right_quote	*(char)
)	O
;	O
++	O
total_chars_this_line	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_par	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
line_break	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
line_break	*(char)
)	O
;	O
total_chars_this_line	int
=	O
0	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_line	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
line_break	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
line_break	*(char)
)	O
;	O
total_chars_this_line	int
=	O
0	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_page	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
page_break	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
page_break	*(char)
)	O
;	O
total_chars_this_line	int
=	O
0	int
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_intbl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
++	O
coming_pars_that_are_tabular	int
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ulnone	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
int	O
attr	int
,	O
more	int
=	O
TRUE	O
;	O
do	O
{	O
attr	int
=	O
attr_read	()->(int)
(	O
)	O
;	O
if	O
(	O
attr	int
==	O
ATTR_UNDERLINE	int
||	O
attr	int
==	O
ATTR_DOT_UL	int
||	O
attr	int
==	O
ATTR_DASH_UL	int
||	O
attr	int
==	O
ATTR_DOT_DASH_UL	int
||	O
attr	int
==	O
ATTR_2DOT_DASH_UL	int
||	O
attr	int
==	O
ATTR_WORD_UL	int
||	O
attr	int
==	O
ATTR_WAVE_UL	int
||	O
attr	int
==	O
ATTR_THICK_UL	int
||	O
attr	int
==	O
ATTR_DOUBLE_UL	int
)	O
{	O
if	O
(	O
!	O
attr_pop	(int)->(int)
(	O
ATTR_UNDERLINE	int
)	O
)	O
;	O
}	O
else	O
more	int
=	O
FALSE	O
;	O
}	O
while	O
(	O
more	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ul	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
{	O
cmd_ulnone	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
align	int
,	O
has_param	char
,	O
param	*(char)
)	O
;	O
}	O
else	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_UNDERLINE	int
,	O
NULL	O
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_uld	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_DOUBLE_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_uldb	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_DOT_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_uldash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_DASH_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_uldashd	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_DOT_DASH_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_uldashdd	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_2DOT_DASH_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ulw	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_WORD_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ulth	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_THICK_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ulthd	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_THICK_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ulthdash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_THICK_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ulwave	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_push	(int,*(char))->(void)
(	O
ATTR_WAVE_UL	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_strike	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_STRIKE	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_STRIKE	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_strikedl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_DBL_STRIKE	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_DBL_STRIKE	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_striked	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_DBL_STRIKE	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_DBL_STRIKE	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_rtf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_up	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_SUPER	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_SUPER	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_u	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
short	O
done	short
=	O
0	int
;	O
if	O
(	O
param	*(char)
>=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol1_first_char	int
&&	O
param	*(char)
<=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol1_last_char	int
)	O
{	O
char	O
*	O
string	*(char)
;	O
if	O
(	O
(	O
string	*(char)
=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol1_translation_table	*(*(char))
[	O
param	*(char)
-	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol1_first_char	int
]	O
)	O
!=	O
0	int
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
string	*(char)
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"&#%u;"	*(char)
,	O
(	O
unsigned	O
int	O
)	O
param	*(char)
)	O
;	O
done	short
++	O
;	O
}	O
if	O
(	O
param	*(char)
>=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol2_first_char	int
&&	O
param	*(char)
<=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol2_last_char	int
)	O
{	O
char	O
*	O
string	*(char)
;	O
if	O
(	O
(	O
string	*(char)
=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol2_translation_table	*(*(char))
[	O
param	*(char)
-	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol2_first_char	int
]	O
)	O
!=	O
0	int
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
string	*(char)
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"&#%u;"	*(char)
,	O
(	O
unsigned	O
int	O
)	O
param	*(char)
)	O
;	O
done	short
++	O
;	O
}	O
if	O
(	O
param	*(char)
>=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol3_first_char	int
&&	O
param	*(char)
<=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol3_last_char	int
)	O
{	O
char	O
*	O
string	*(char)
;	O
if	O
(	O
(	O
string	*(char)
=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol3_translation_table	*(*(char))
[	O
param	*(char)
-	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol3_first_char	int
]	O
)	O
!=	O
0	int
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
string	*(char)
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"&#%u;"	*(char)
,	O
(	O
unsigned	O
int	O
)	O
param	*(char)
)	O
;	O
done	short
++	O
;	O
}	O
if	O
(	O
param	*(char)
>=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol4_first_char	int
&&	O
param	*(char)
<=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol4_last_char	int
)	O
{	O
char	O
*	O
string	*(char)
;	O
if	O
(	O
(	O
string	*(char)
=	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol4_translation_table	*(*(char))
[	O
param	*(char)
-	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol4_first_char	int
]	O
)	O
!=	O
0	int
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
string	*(char)
)	O
;	O
else	O
printf	(*(char))->(int)
(	O
"&#%u;"	*(char)
,	O
(	O
unsigned	O
int	O
)	O
param	*(char)
)	O
;	O
done	short
++	O
;	O
}	O
if	O
(	O
!	O
done	short
&&	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol_print	*((short)->(*(char)))
)	O
{	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
unisymbol_print	*((short)->(*(char)))
(	O
param	*(char)
)	O
)	O
;	O
done	short
++	O
;	O
}	O
if	O
(	O
done	short
)	O
return	O
(	O
SKIP_ONE_WORD	int
)	O
;	O
return	O
(	O
FALSE	O
)	O
;	O
}	O
static	O
int	O
cmd_dn	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_SUB	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_SUB	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_nosupersub	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
attr_pop	(int)->(int)
(	O
ATTR_SUPER	int
)	O
;	O
attr_pop	(int)->(int)
(	O
ATTR_SUB	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_super	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_SUPER	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_SUPER	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_sub	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_SUB	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_SUB	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_shad	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_SHADOW	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_SHADOW	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_b	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
{	O
attr_pop	(int)->(int)
(	O
ATTR_BOLD	int
)	O
;	O
}	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_BOLD	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_i	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_ITALIC	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_ITALIC	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_s	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_sect	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
paragraph_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
paragraph_begin	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_shp	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Drawn Shape (ignored--not implemented yet)"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_outl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
has_param	char
&&	O
param	*(char)
==	O
0	int
)	O
attr_pop	(int)->(int)
(	O
ATTR_OUTLINE	int
)	O
;	O
else	O
attr_push	(int,*(char))->(void)
(	O
ATTR_OUTLINE	int
,	O
NULL	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ansi	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
charset_type	int
=	O
CHARSET_ANSI	int
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"document uses ANSI character set"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_ansicpg	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sizeof	O
(	O
codepages	array(struct(int,array(short)))
)	O
/	O
sizeof	O
(	O
CodepageInfo	struct(int,array(short))
)	O
;	O
i	int
++	O
)	O
{	O
charset_codepage	*(struct(int,array(short)))
=	O
&	O
codepages	array(struct(int,array(short)))
[	O
i	int
]	O
;	O
if	O
(	O
charset_codepage	*(struct(int,array(short)))
->	O
cp	int
==	O
param	*(char)
)	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"document uses ANSI codepage %d character set"	*(char)
,	O
param	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
charset_codepage	*(struct(int,array(short)))
==	O
NULL	O
||	O
charset_codepage	*(struct(int,array(short)))
->	O
cp	int
==	O
0	int
)	O
&&	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"document uses default ANSI codepage character set"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_pc	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
charset_type	int
=	O
CHARSET_CP437	int
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"document uses PC codepage 437 character set"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_pca	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
charset_type	int
=	O
CHARSET_CP850	int
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"document uses PC codepage 850 character set"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_mac	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
charset_type	int
=	O
CHARSET_MAC	int
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"document uses Macintosh character set"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_colortbl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
process_color_table	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_fonttbl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
process_font_table	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_header	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_headerl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_headerr	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_headerf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_footer	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_footerl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_footerr	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_footerf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_ignore	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_info	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
process_info_group	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_pict	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
within_picture	int
=	O
TRUE	O
;	O
picture_width	int
=	O
picture_height	int
=	O
0	int
;	O
picture_type	int
=	O
PICT_WB	int
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_bin	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_macpict	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
picture_type	int
=	O
PICT_MAC	int
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_jpegblip	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
picture_type	int
=	O
PICT_JPEG	int
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_pngblip	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
picture_type	int
=	O
PICT_PNG	int
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_pnmetafile	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
picture_type	int
=	O
PICT_PM	int
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_wmetafile	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
picture_type	int
=	O
PICT_WM	int
;	O
if	O
(	O
within_picture	int
&&	O
has_param	char
)	O
{	O
picture_wmetafile_type	int
=	O
param	*(char)
;	O
switch	O
(	O
param	*(char)
)	O
{	O
case	O
1	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_TEXT"	*(char)
;	O
break	O
;	O
case	O
2	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_LOMETRIC"	*(char)
;	O
break	O
;	O
case	O
3	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_HIMETRIC"	*(char)
;	O
break	O
;	O
case	O
4	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_LOENGLISH"	*(char)
;	O
break	O
;	O
case	O
5	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_HIENGLISH"	*(char)
;	O
break	O
;	O
case	O
6	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_TWIPS"	*(char)
;	O
break	O
;	O
case	O
7	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_ISOTROPIC"	*(char)
;	O
break	O
;	O
case	O
8	int
:	O
picture_wmetafile_type_str	*(char)
=	O
"MM_ANISOTROPIC"	*(char)
;	O
break	O
;	O
default	O
:	O
picture_wmetafile_type_str	*(char)
=	O
"default:MM_TEXT"	*(char)
;	O
break	O
;	O
}	O
}	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_wbmbitspixel	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
within_picture	int
&&	O
has_param	char
)	O
picture_bits_per_pixel	int
=	O
param	*(char)
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_picw	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
within_picture	int
&&	O
has_param	char
)	O
picture_width	int
=	O
param	*(char)
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_pich	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
if	O
(	O
within_picture	int
&&	O
has_param	char
)	O
picture_height	int
=	O
param	*(char)
;	O
return	O
FALSE	O
;	O
}	O
static	O
int	O
cmd_xe	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
process_index_entry	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_tc	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
process_toc_entry	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int)->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
TRUE	O
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
cmd_tcn	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
int	O
align	int
,	O
char	O
has_param	char
,	O
int	O
param	*(char)
)	O
{	O
process_toc_entry	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int)->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
FALSE	O
)	O
;	O
return	O
TRUE	O
;	O
}	O
typedef	O
struct	O
{	O
char	O
*	O
name	*(char)
;	O
int	O
(	O
*	O
func	*((*(struct(long,*(struct`),*(struct`))),int,char,int)->(int))
)	O
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
,	O
int	O
,	O
char	O
,	O
int	O
)	O
;	O
char	O
*	O
debug_print	*(char)
;	O
}	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_other	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"*"	*(char)
,	O
cmd_ignore	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"-"	*(char)
,	O
cmd_optional_hyphen	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"optional hyphen"	*(char)
}	O
,	O
{	O
"_"	*(char)
,	O
cmd_nonbreaking_hyphen	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"nonbreaking hyphen"	*(char)
}	O
,	O
{	O
"~"	*(char)
,	O
cmd_nonbreaking_space	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_a	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"ansi"	*(char)
,	O
&	O
cmd_ansi	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ansicpg"	*(char)
,	O
&	O
cmd_ansicpg	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_b	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"b"	*(char)
,	O
&	O
cmd_b	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"bullet"	*(char)
,	O
&	O
cmd_bullet	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"bin"	*(char)
,	O
&	O
cmd_bin	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"picture is binary"	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_c	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"caps"	*(char)
,	O
&	O
cmd_caps	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"cb"	*(char)
,	O
cmd_cb	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"cf"	*(char)
,	O
cmd_cf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"colortbl"	*(char)
,	O
&	O
cmd_colortbl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"color table"	*(char)
}	O
,	O
{	O
"cols"	*(char)
,	O
NULL	O
,	O
"columns (not implemented)"	*(char)
}	O
,	O
{	O
"column"	*(char)
,	O
NULL	O
,	O
"column break (not implemented)"	*(char)
}	O
,	O
{	O
"cbpat"	*(char)
,	O
NULL	O
,	O
"Paragraph Shading"	*(char)
}	O
,	O
{	O
"cellx"	*(char)
,	O
NULL	O
,	O
"Table Definitions"	*(char)
}	O
,	O
{	O
"cfpat"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"cgrid"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"charrsid"	*(char)
,	O
NULL	O
,	O
"Revision Mark (ignore)"	*(char)
}	O
,	O
{	O
"clbgbcross"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbdiag"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbkbdiag"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbkcross"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbkdcross"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbkfdiag"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbkhor"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgbkvert"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgdcross"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgfdiag"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbghoriz"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbgvert"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbrdrb"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbrdrl"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbrdrr"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clbrdrt"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clcbpat"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clcfpat"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clmgf"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clmrg"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"clshdng"	*(char)
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_d	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"deff"	*(char)
,	O
NULL	O
,	O
"Default Font"	*(char)
}	O
,	O
{	O
"dn"	*(char)
,	O
&	O
cmd_dn	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_e	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"emdash"	*(char)
,	O
cmd_emdash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"endash"	*(char)
,	O
cmd_endash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"embo"	*(char)
,	O
&	O
cmd_emboss	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"expand"	*(char)
,	O
&	O
cmd_expand	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"expnd"	*(char)
,	O
&	O
cmd_expand	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_f	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"f"	*(char)
,	O
cmd_f	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fdecor"	*(char)
,	O
cmd_fdecor	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fmodern"	*(char)
,	O
cmd_fmodern	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fnil"	*(char)
,	O
cmd_fnil	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fonttbl"	*(char)
,	O
cmd_fonttbl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"font table"	*(char)
}	O
,	O
{	O
"froman"	*(char)
,	O
cmd_froman	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fs"	*(char)
,	O
cmd_fs	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fscript"	*(char)
,	O
cmd_fscript	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"fswiss"	*(char)
,	O
cmd_fswiss	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ftech"	*(char)
,	O
cmd_ftech	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"field"	*(char)
,	O
cmd_field	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"footer"	*(char)
,	O
cmd_footer	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"footerf"	*(char)
,	O
cmd_footerf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"footerl"	*(char)
,	O
cmd_footerl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"footerr"	*(char)
,	O
cmd_footerr	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_h	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"highlight"	*(char)
,	O
&	O
cmd_highlight	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"header"	*(char)
,	O
cmd_header	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"headerf"	*(char)
,	O
cmd_headerf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"headerl"	*(char)
,	O
cmd_headerl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"headerr"	*(char)
,	O
cmd_headerr	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"hl"	*(char)
,	O
cmd_ignore	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"hyperlink within object"	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_i	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"i"	*(char)
,	O
&	O
cmd_i	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"info"	*(char)
,	O
&	O
cmd_info	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"insrsid"	*(char)
,	O
NULL	O
,	O
"Revision Mark (ignore)"	*(char)
}	O
,	O
{	O
"intbl"	*(char)
,	O
&	O
cmd_intbl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"impr"	*(char)
,	O
&	O
cmd_engrave	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_j	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"jpegblip"	*(char)
,	O
&	O
cmd_jpegblip	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_l	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"ldblquote"	*(char)
,	O
&	O
cmd_ldblquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"line"	*(char)
,	O
&	O
cmd_line	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"lquote"	*(char)
,	O
&	O
cmd_lquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_m	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"mac"	*(char)
,	O
&	O
cmd_mac	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"macpict"	*(char)
,	O
&	O
cmd_macpict	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_n	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"nosupersub"	*(char)
,	O
&	O
cmd_nosupersub	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_o	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"outl"	*(char)
,	O
&	O
cmd_outl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_p	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"page"	*(char)
,	O
&	O
cmd_page	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"par"	*(char)
,	O
&	O
cmd_par	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"pc"	*(char)
,	O
&	O
cmd_pc	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"pca"	*(char)
,	O
&	O
cmd_pca	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"pich"	*(char)
,	O
&	O
cmd_pich	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"pict"	*(char)
,	O
&	O
cmd_pict	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"picture"	*(char)
}	O
,	O
{	O
"picw"	*(char)
,	O
&	O
cmd_picw	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"plain"	*(char)
,	O
&	O
cmd_plain	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"pngblip"	*(char)
,	O
&	O
cmd_pngblip	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"pnmetafile"	*(char)
,	O
&	O
cmd_pnmetafile	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_r	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"rdblquote"	*(char)
,	O
&	O
cmd_rdblquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"rquote"	*(char)
,	O
&	O
cmd_rquote	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"rtf"	*(char)
,	O
&	O
cmd_rtf	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_s	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"s"	*(char)
,	O
cmd_s	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"style"	*(char)
}	O
,	O
{	O
"sect"	*(char)
,	O
&	O
cmd_sect	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"section break"	*(char)
}	O
,	O
{	O
"scaps"	*(char)
,	O
&	O
cmd_scaps	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"super"	*(char)
,	O
&	O
cmd_super	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"sub"	*(char)
,	O
&	O
cmd_sub	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"shad"	*(char)
,	O
&	O
cmd_shad	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"strike"	*(char)
,	O
&	O
cmd_strike	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"striked"	*(char)
,	O
&	O
cmd_striked	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"strikedl"	*(char)
,	O
&	O
cmd_strikedl	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"stylesheet"	*(char)
,	O
&	O
cmd_ignore	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"style sheet"	*(char)
}	O
,	O
{	O
"shp"	*(char)
,	O
cmd_shp	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"drawn shape"	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_t	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"tab"	*(char)
,	O
&	O
cmd_tab	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"tc"	*(char)
,	O
cmd_tc	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"TOC entry"	*(char)
}	O
,	O
{	O
"tcn"	*(char)
,	O
cmd_tcn	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"TOC entry"	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_u	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"u"	*(char)
,	O
&	O
cmd_u	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ul"	*(char)
,	O
&	O
cmd_ul	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"up"	*(char)
,	O
&	O
cmd_up	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"uld"	*(char)
,	O
&	O
cmd_uld	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"uldash"	*(char)
,	O
&	O
cmd_uldash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"uldashd"	*(char)
,	O
&	O
cmd_uldashd	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"uldashdd"	*(char)
,	O
&	O
cmd_uldashdd	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"uldb"	*(char)
,	O
&	O
cmd_uldb	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ulnone"	*(char)
,	O
&	O
cmd_ulnone	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ulth"	*(char)
,	O
&	O
cmd_ulth	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ulthd"	*(char)
,	O
&	O
cmd_ulthd	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ulthdash"	*(char)
,	O
&	O
cmd_ulthdash	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ulw"	*(char)
,	O
&	O
cmd_ulw	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"ulwave"	*(char)
,	O
&	O
cmd_ulwave	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_v	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"v"	*(char)
,	O
NULL	O
,	O
"Hidden Text"	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_w	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"wbmbitspixel"	*(char)
,	O
&	O
cmd_wbmbitspixel	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
"wmetafile"	*(char)
,	O
&	O
cmd_wmetafile	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
hashArray_x	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
[	O
]	O
=	O
{	O
{	O
"xe"	*(char)
,	O
cmd_xe	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),int,char,int)->(int)
,	O
"index entry"	*(char)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
*	O
hash	array(*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char))))
[	O
26	int
]	O
=	O
{	O
hashArray_a	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_b	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_c	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_d	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_e	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_f	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
NULL	O
,	O
hashArray_h	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_i	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_j	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
NULL	O
,	O
hashArray_l	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_m	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_n	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_o	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_p	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
NULL	O
,	O
hashArray_r	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_s	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_t	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_u	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_v	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_w	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
hashArray_x	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
,	O
NULL	O
,	O
NULL	O
}	O
;	O
void	O
print_with_special_exprs	(*(char))->(void)
(	O
char	O
*	O
s	*(char)
)	O
{	O
int	O
ch	int
;	O
int	O
state	*(int)
;	O
enum	O
{	O
SMALL	int
=	O
0	int
,	O
BIG	int
=	O
1	int
}	O
;	O
CHECK_PARAM_NOT_NULL	O
(	O
s	*(char)
)	O
;	O
state	*(int)
=	O
SMALL	int
;	O
if	O
(	O
simulate_smallcaps	int
)	O
{	O
if	O
(	O
*	O
s	*(char)
>=	O
'a'	O
&&	O
*	O
s	*(char)
<=	O
'z'	O
)	O
{	O
state	*(int)
=	O
SMALL	int
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
smaller_begin	*(char)
)	O
;	O
}	O
else	O
state	*(int)
=	O
BIG	int
;	O
}	O
while	O
(	O
(	O
ch	int
=	O
*	O
s	*(char)
)	O
)	O
{	O
char	O
*	O
post_trans	*(char)
=	O
NULL	O
;	O
if	O
(	O
simulate_allcaps	int
||	O
simulate_smallcaps	int
)	O
ch	int
=	O
toupper	(int)->(int)
(	O
ch	int
)	O
;	O
if	O
(	O
ch	int
>=	O
0x20	int
&&	O
ch	int
<	O
0x80	int
)	O
{	O
post_trans	*(char)
=	O
op_translate_char	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*`)),*((int,int,int)->(void)))),int,*(struct(int,array(short))),int,int)->(*(char))
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
,	O
charset_type	int
,	O
charset_codepage	*(struct(int,array(short)))
,	O
ch	int
,	O
numchar_table	short
)	O
;	O
if	O
(	O
post_trans	*(char)
)	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
post_trans	*(char)
)	O
;	O
}	O
s	*(char)
++	O
;	O
if	O
(	O
simulate_smallcaps	int
)	O
{	O
ch	int
=	O
*	O
s	*(char)
;	O
if	O
(	O
ch	int
>=	O
'a'	O
&&	O
ch	int
<=	O
'z'	O
)	O
{	O
if	O
(	O
state	*(int)
==	O
BIG	int
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
smaller_begin	*(char)
)	O
;	O
state	*(int)
=	O
SMALL	int
;	O
}	O
else	O
{	O
if	O
(	O
state	*(int)
==	O
SMALL	int
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
smaller_end	*(char)
)	O
;	O
state	*(int)
=	O
BIG	int
;	O
}	O
}	O
}	O
}	O
static	O
void	O
begin_table	()->(void)
(	O
)	O
{	O
within_table	int
=	O
TRUE	O
;	O
have_printed_row_begin	int
=	O
FALSE	O
;	O
have_printed_cell_begin	int
=	O
FALSE	O
;	O
have_printed_row_end	int
=	O
FALSE	O
;	O
have_printed_cell_end	int
=	O
FALSE	O
;	O
attrstack_push	()->(void)
(	O
)	O
;	O
starting_body	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_begin	*(char)
)	O
;	O
}	O
void	O
end_table	()->(void)
(	O
)	O
{	O
if	O
(	O
within_table	int
)	O
{	O
if	O
(	O
!	O
have_printed_cell_end	int
)	O
{	O
attr_pop_dump	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_cell_end	*(char)
)	O
;	O
}	O
if	O
(	O
!	O
have_printed_row_end	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_row_end	*(char)
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_end	*(char)
)	O
;	O
within_table	int
=	O
FALSE	O
;	O
have_printed_row_begin	int
=	O
FALSE	O
;	O
have_printed_cell_begin	int
=	O
FALSE	O
;	O
have_printed_row_end	int
=	O
FALSE	O
;	O
have_printed_cell_end	int
=	O
FALSE	O
;	O
}	O
}	O
void	O
starting_text	()->(void)
(	O
)	O
{	O
if	O
(	O
within_table	int
)	O
{	O
if	O
(	O
!	O
have_printed_row_begin	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_row_begin	*(char)
)	O
;	O
have_printed_row_begin	int
=	O
TRUE	O
;	O
have_printed_row_end	int
=	O
FALSE	O
;	O
have_printed_cell_begin	int
=	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
have_printed_cell_begin	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_cell_begin	*(char)
)	O
;	O
attrstack_express_all	()->(void)
(	O
)	O
;	O
have_printed_cell_begin	int
=	O
TRUE	O
;	O
have_printed_cell_end	int
=	O
FALSE	O
;	O
}	O
}	O
}	O
static	O
void	O
starting_paragraph_align	(int)->(void)
(	O
int	O
align	int
)	O
{	O
if	O
(	O
within_header	int
&&	O
align	int
!=	O
ALIGN_LEFT	int
)	O
starting_body	()->(void)
(	O
)	O
;	O
switch	O
(	O
align	int
)	O
{	O
case	O
ALIGN_CENTER	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
center_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ALIGN_LEFT	int
:	O
break	O
;	O
case	O
ALIGN_RIGHT	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
align_right_begin	*(char)
)	O
;	O
break	O
;	O
case	O
ALIGN_JUSTIFY	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
align_right_begin	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
static	O
void	O
ending_paragraph_align	(int)->(void)
(	O
int	O
align	int
)	O
{	O
switch	O
(	O
align	int
)	O
{	O
case	O
ALIGN_CENTER	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
center_end	*(char)
)	O
;	O
break	O
;	O
case	O
ALIGN_LEFT	int
:	O
break	O
;	O
case	O
ALIGN_RIGHT	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
align_right_end	*(char)
)	O
;	O
break	O
;	O
case	O
ALIGN_JUSTIFY	int
:	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
justify_end	*(char)
)	O
;	O
break	O
;	O
}	O
}	O
static	O
void	O
word_print_core	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
char	O
*	O
s	*(char)
;	O
FILE	struct
*	O
pictfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
NULL	O
;	O
int	O
in_pict_data	int
=	O
FALSE	O
;	O
int	O
is_cell_group	int
=	O
FALSE	O
;	O
int	O
paragraph_begined	int
=	O
FALSE	O
;	O
int	O
paragraph_align	int
=	O
ALIGN_LEFT	int
;	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
coming_pars_that_are_tabular	int
&&	O
within_table	int
)	O
{	O
end_table	()->(void)
(	O
)	O
;	O
}	O
else	O
if	O
(	O
coming_pars_that_are_tabular	int
&&	O
!	O
within_table	int
)	O
{	O
begin_table	()->(void)
(	O
)	O
;	O
}	O
attrstack_push	()->(void)
(	O
)	O
;	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
s	*(char)
=	O
word_string	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(*(char))
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
s	*(char)
)	O
{	O
if	O
(	O
*	O
s	*(char)
==	O
' '	O
&&	O
within_header	int
)	O
{	O
}	O
else	O
if	O
(	O
s	*(char)
[	O
0	int
]	O
!=	O
'\\'	O
)	O
{	O
starting_body	()->(void)
(	O
)	O
;	O
starting_text	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
paragraph_begined	int
)	O
{	O
starting_paragraph_align	(int)->(void)
(	O
paragraph_align	int
)	O
;	O
paragraph_begined	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
within_picture	int
)	O
{	O
starting_body	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
in_pict_data	int
)	O
{	O
in_pict_data	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
nopict_mode	int
)	O
{	O
char	O
*	O
ext	*(char)
=	O
NULL	O
;	O
switch	O
(	O
picture_type	int
)	O
{	O
case	O
PICT_WB	int
:	O
ext	*(char)
=	O
"bmp"	*(char)
;	O
break	O
;	O
case	O
PICT_WM	int
:	O
ext	*(char)
=	O
"wmf"	*(char)
;	O
break	O
;	O
case	O
PICT_MAC	int
:	O
ext	*(char)
=	O
"pict"	*(char)
;	O
break	O
;	O
case	O
PICT_JPEG	int
:	O
ext	*(char)
=	O
"jpg"	*(char)
;	O
break	O
;	O
case	O
PICT_PNG	int
:	O
ext	*(char)
=	O
"png"	*(char)
;	O
break	O
;	O
case	O
PICT_DI	int
:	O
ext	*(char)
=	O
"dib"	*(char)
;	O
break	O
;	O
case	O
PICT_PM	int
:	O
ext	*(char)
=	O
"pmm"	*(char)
;	O
break	O
;	O
}	O
sprintf	(*(char),*(char))->(int)
(	O
picture_path	array(char)
,	O
"pict%03d.%s"	*(char)
,	O
picture_file_number	int
++	O
,	O
ext	*(char)
)	O
;	O
pictfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
picture_path	array(char)
,	O
"w"	*(char)
)	O
;	O
}	O
}	O
if	O
(	O
s	*(char)
[	O
0	int
]	O
!=	O
' '	O
)	O
{	O
char	O
*	O
s2	*(char)
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"picture data found, "	*(char)
)	O
;	O
if	O
(	O
picture_wmetafile_type_str	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
"WMF type is %s, "	*(char)
,	O
picture_wmetafile_type_str	*(char)
)	O
;	O
}	O
printf	(*(char))->(int)
(	O
"picture dimensions are %d by %d, depth %d"	*(char)
,	O
picture_width	int
,	O
picture_height	int
,	O
picture_bits_per_pixel	int
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
if	O
(	O
picture_width	int
&&	O
picture_height	int
&&	O
picture_bits_per_pixel	int
)	O
{	O
s2	*(char)
=	O
s	*(char)
;	O
while	O
(	O
*	O
s2	*(char)
)	O
{	O
unsigned	O
int	O
tmp	*(char)
,	O
value	int
;	O
tmp	*(char)
=	O
tolower	(int)->(int)
(	O
*	O
s2	*(char)
++	O
)	O
;	O
if	O
(	O
tmp	*(char)
>	O
'9'	O
)	O
tmp	*(char)
-=	O
(	O
'a'	O
-	O
10	int
)	O
;	O
else	O
tmp	*(char)
-=	O
'0'	O
;	O
value	int
=	O
16	int
*	O
tmp	*(char)
;	O
tmp	*(char)
=	O
tolower	(int)->(int)
(	O
*	O
s2	*(char)
++	O
)	O
;	O
if	O
(	O
tmp	*(char)
>	O
'9'	O
)	O
tmp	*(char)
-=	O
(	O
'a'	O
-	O
10	int
)	O
;	O
else	O
tmp	*(char)
-=	O
'0'	O
;	O
value	int
+=	O
tmp	*(char)
;	O
if	O
(	O
pictfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
pictfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%c"	*(char)
,	O
value	int
)	O
;	O
}	O
}	O
}	O
}	O
}	O
else	O
{	O
total_chars_this_line	int
+=	O
strlen	(*(char))->(long)
(	O
s	*(char)
)	O
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_begin	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_begin	*(char)
)	O
;	O
print_with_special_exprs	(*(char))->(void)
(	O
s	*(char)
)	O
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_end	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_end	*(char)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
*	O
(	O
s	*(char)
+	O
1	int
)	O
==	O
'\\'	O
)	O
{	O
s	*(char)
++	O
;	O
putchar	(int)->(int)
(	O
'\\'	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
s	*(char)
+	O
1	int
)	O
==	O
'{'	O
)	O
{	O
s	*(char)
++	O
;	O
putchar	(int)->(int)
(	O
'{'	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
(	O
s	*(char)
+	O
1	int
)	O
==	O
'}'	O
)	O
{	O
s	*(char)
++	O
;	O
putchar	(int)->(int)
(	O
'}'	O
)	O
;	O
}	O
else	O
{	O
int	O
done	short
=	O
FALSE	O
;	O
s	*(char)
++	O
;	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"ql"	*(char)
,	O
s	*(char)
)	O
)	O
paragraph_align	int
=	O
ALIGN_LEFT	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"qr"	*(char)
,	O
s	*(char)
)	O
)	O
paragraph_align	int
=	O
ALIGN_RIGHT	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"qj"	*(char)
,	O
s	*(char)
)	O
)	O
paragraph_align	int
=	O
ALIGN_JUSTIFY	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"qc"	*(char)
,	O
s	*(char)
)	O
)	O
paragraph_align	int
=	O
ALIGN_CENTER	int
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
"pard"	*(char)
,	O
s	*(char)
)	O
)	O
{	O
attr_pop_all	()->(void)
(	O
)	O
;	O
if	O
(	O
coming_pars_that_are_tabular	int
)	O
{	O
--	O
coming_pars_that_are_tabular	int
;	O
}	O
ending_paragraph_align	(int)->(void)
(	O
paragraph_align	int
)	O
;	O
paragraph_align	int
=	O
ALIGN_LEFT	int
;	O
paragraph_begined	int
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
"cell"	*(char)
)	O
)	O
{	O
is_cell_group	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
have_printed_cell_begin	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_cell_begin	*(char)
)	O
;	O
attrstack_express_all	()->(void)
(	O
)	O
;	O
}	O
attr_pop_dump	()->(void)
(	O
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_cell_end	*(char)
)	O
;	O
have_printed_cell_begin	int
=	O
FALSE	O
;	O
have_printed_cell_end	int
=	O
TRUE	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
"row"	*(char)
)	O
)	O
{	O
if	O
(	O
within_table	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
table_row_end	*(char)
)	O
;	O
have_printed_row_begin	int
=	O
FALSE	O
;	O
have_printed_row_end	int
=	O
TRUE	O
;	O
}	O
else	O
{	O
if	O
(	O
debug_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"end of table row"	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
}	O
else	O
if	O
(	O
*	O
s	*(char)
==	O
'\''	O
)	O
{	O
int	O
ch	int
=	O
h2toi	(*(char))->(int)
(	O
&	O
s	*(char)
[	O
1	int
]	O
)	O
;	O
char	O
*	O
s2	*(char)
;	O
s2	*(char)
=	O
op_translate_char	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*`)),*((int,int,int)->(void)))),int,*(struct(int,array(short))),int,int)->(*(char))
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
,	O
charset_type	int
,	O
charset_codepage	*(struct(int,array(short)))
,	O
ch	int
,	O
numchar_table	short
)	O
;	O
if	O
(	O
!	O
s2	*(char)
||	O
!	O
*	O
s2	*(char)
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"char 0x%02x"	*(char)
,	O
ch	int
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
else	O
{	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_begin	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
s2	*(char)
)	O
;	O
if	O
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_end	*(char)
)	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
word_end	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
int	O
ch	int
;	O
int	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
int	O
have_param	int
=	O
FALSE	O
,	O
param	*(char)
=	O
0	int
;	O
HashItem	struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char))
*	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
;	O
char	O
*	O
p	*(char)
;	O
int	O
match	int
=	O
FALSE	O
;	O
p	*(char)
=	O
s	*(char)
;	O
while	O
(	O
*	O
p	*(char)
&&	O
(	O
!	O
isdigit	(int)->(int)
(	O
*	O
p	*(char)
)	O
&&	O
*	O
p	*(char)
!=	O
'-'	O
)	O
)	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
&&	O
(	O
isdigit	(int)->(int)
(	O
*	O
p	*(char)
)	O
||	O
*	O
p	*(char)
==	O
'-'	O
)	O
)	O
{	O
have_param	int
=	O
TRUE	O
;	O
param	*(char)
=	O
atoi	(*(char))->(int)
(	O
p	*(char)
)	O
;	O
}	O
ch	int
=	O
tolower	(int)->(int)
(	O
*	O
s	*(char)
)	O
;	O
if	O
(	O
ch	int
>=	O
'a'	O
&&	O
ch	int
<=	O
'z'	O
)	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
=	O
hash	array(*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char))))
[	O
ch	int
-	O
'a'	O
]	O
;	O
else	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
=	O
hashArray_other	array(struct(*(char),*((*(struct(long,*`,*`)),int,char,int)->(int)),*(char)))
;	O
if	O
(	O
!	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
)	O
{	O
if	O
(	O
debug_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Unfamiliar RTF command: %s (HashIndex not found)"	*(char)
,	O
s	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
else	O
{	O
while	O
(	O
!	O
done	short
)	O
{	O
match	int
=	O
FALSE	O
;	O
if	O
(	O
have_param	int
)	O
{	O
int	O
len	int
=	O
p	*(char)
-	O
s	*(char)
;	O
if	O
(	O
!	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
name	*(char)
[	O
len	int
]	O
&&	O
!	O
strncmp	(*(char),*(char),long)->(int)
(	O
s	*(char)
,	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
name	*(char)
,	O
len	int
)	O
)	O
match	int
=	O
TRUE	O
;	O
}	O
else	O
match	int
=	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
s	*(char)
,	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
name	*(char)
)	O
;	O
if	O
(	O
match	int
)	O
{	O
char	O
*	O
debug	*(char)
;	O
int	O
terminate_group	int
;	O
if	O
(	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
func	*((*(struct(long,*(struct`),*(struct`))),int,char,int)->(int))
)	O
{	O
terminate_group	int
=	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
func	*((*(struct(long,*(struct`),*(struct`))),int,char,int)->(int))
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
,	O
paragraph_align	int
,	O
have_param	int
,	O
param	*(char)
)	O
;	O
if	O
(	O
terminate_group	int
==	O
SKIP_ONE_WORD	int
)	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
else	O
if	O
(	O
terminate_group	int
)	O
while	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
debug	*(char)
=	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
debug_print	*(char)
;	O
if	O
(	O
debug	*(char)
&&	O
debug_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
debug	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
done	short
=	O
TRUE	O
;	O
}	O
else	O
{	O
index	(*(char),int)->(*(char))
++	O
;	O
if	O
(	O
!	O
hip	*(struct(*(char),*((*(struct`),int,char,int)->(int)),*(char)))
[	O
index	(*(char),int)->(*(char))
]	O
.	O
name	*(char)
)	O
done	short
=	O
TRUE	O
;	O
}	O
}	O
}	O
if	O
(	O
!	O
match	int
)	O
{	O
if	O
(	O
debug_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"Unfamiliar RTF command: %s"	*(char)
,	O
s	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
comment_end	*(char)
)	O
;	O
}	O
}	O
}	O
}	O
}	O
else	O
{	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
if	O
(	O
!	O
paragraph_begined	int
)	O
{	O
starting_paragraph_align	(int)->(void)
(	O
paragraph_align	int
)	O
;	O
paragraph_begined	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
word_print_core	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
child	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
}	O
if	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
=	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
->	O
next	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
;	O
}	O
if	O
(	O
in_pict_data	int
)	O
{	O
if	O
(	O
pictfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
pictfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
imagelink_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
"%s"	*(char)
,	O
picture_path	array(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
imagelink_end	*(char)
)	O
;	O
}	O
within_picture	int
=	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
is_cell_group	int
)	O
attr_pop_all	()->(void)
(	O
)	O
;	O
else	O
attr_drop_all	()->(void)
(	O
)	O
;	O
if	O
(	O
paragraph_begined	int
)	O
ending_paragraph_align	(int)->(void)
(	O
paragraph_align	int
)	O
;	O
attrstack_drop	()->(void)
(	O
)	O
;	O
if	O
(	O
0	int
)	O
printf	(*(char))->(int)
(	O
"<numchar_table was %d>"	*(char)
,	O
numchar_table	short
)	O
;	O
if	O
(	O
(	O
s	*(char)
=	O
attr_get_param	(int)->(*(char))
(	O
ATTR_FONTFACE	int
)	O
)	O
!=	O
NULL	O
&&	O
strstr	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"Symbol"	*(char)
)	O
!=	O
NULL	O
)	O
numchar_table	short
=	O
FONTSYMBOL_TABLE	int
;	O
else	O
if	O
(	O
(	O
s	*(char)
=	O
attr_get_param	(int)->(*(char))
(	O
ATTR_FONTFACE	int
)	O
)	O
!=	O
NULL	O
&&	O
strstr	(*(char),*(char))->(*(char))
(	O
s	*(char)
,	O
"Greek"	*(char)
)	O
!=	O
NULL	O
)	O
numchar_table	short
=	O
FONTGREEK_TABLE	int
;	O
else	O
numchar_table	short
=	O
FONTROMAN_TABLE	int
;	O
if	O
(	O
0	int
)	O
printf	(*(char))->(int)
(	O
"<numchar_table = %d>"	*(char)
,	O
numchar_table	short
)	O
;	O
}	O
void	O
word_print	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
Word	struct(long,*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))),*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))
*	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
{	O
CHECK_PARAM_NOT_NULL	O
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
if	O
(	O
!	O
inline_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_begin	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
header_begin	*(char)
)	O
;	O
}	O
print_banner	()->(void)
(	O
)	O
;	O
within_header	int
=	O
TRUE	O
;	O
have_printed_body	int
=	O
FALSE	O
;	O
within_table	int
=	O
FALSE	O
;	O
simulate_allcaps	int
=	O
FALSE	O
;	O
word_print_core	(*(struct(long,*(struct(long,*`,*`)),*(struct(long,*`,*`)))))->(void)
(	O
w	*(struct(long,*(struct(long,*(struct`),*(struct`))),*(struct(long,*(struct`),*(struct`)))))
)	O
;	O
end_table	()->(void)
(	O
)	O
;	O
if	O
(	O
!	O
inline_mode	int
)	O
{	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
body_end	*(char)
)	O
;	O
printf	(*(char))->(int)
(	O
op	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char)),*(*(char)),int,int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),short,short,int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),int,int,*(*(char)),short,short,*(*(char)),short,short,*(*(char)),*((short)->(*(char))),*((int,int,int)->(void))))
->	O
document_end	*(char)
)	O
;	O
}	O
}	O
