static	O
const	O
char	O
revid	array(char)
[	O
]	O
=	O
"$Id: hash_func.c,v 1.3 2000/06/28 16:47:01 loic Exp $"	*(char)
;	O
u_int32_t	int
CDB___ham_func2	(*(void),int)->(int)
(	O
key	struct(*(void),int,int,int,int,int,*(void))
,	O
len	short
)	O
const	O
void	O
*	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
u_int32_t	int
len	short
;	O
{	O
const	O
u_int8_t	char
*	O
e	*(char)
,	O
*	O
k	*(char)
;	O
u_int32_t	int
h	int
;	O
u_int8_t	char
c	char
;	O
k	*(char)
=	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
e	*(char)
=	O
k	*(char)
+	O
len	short
;	O
for	O
(	O
h	int
=	O
0	int
;	O
k	*(char)
!=	O
e	*(char)
;	O
)	O
{	O
c	char
=	O
*	O
k	*(char)
++	O
;	O
if	O
(	O
!	O
c	char
&&	O
k	*(char)
>	O
e	*(char)
)	O
break	O
;	O
DCHARHASH	O
(	O
h	int
,	O
c	char
)	O
;	O
}	O
return	O
(	O
h	int
)	O
;	O
}	O
u_int32_t	int
CDB___ham_func3	(*(void),int)->(int)
(	O
key	struct(*(void),int,int,int,int,int,*(void))
,	O
len	short
)	O
const	O
void	O
*	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
u_int32_t	int
len	short
;	O
{	O
const	O
u_int8_t	char
*	O
k	*(char)
;	O
u_int32_t	int
n	int
,	O
loop	int
;	O
if	O
(	O
len	short
==	O
0	int
)	O
return	O
(	O
0	int
)	O
;	O
n	int
=	O
0	int
;	O
k	*(char)
=	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
loop	int
=	O
(	O
len	short
+	O
8	int
-	O
1	int
)	O
>>	O
3	int
;	O
switch	O
(	O
len	short
&	O
(	O
8	int
-	O
1	int
)	O
)	O
{	O
case	O
0	int
:	O
do	O
{	O
HASHC	O
;	O
case	O
7	int
:	O
HASHC	O
;	O
case	O
6	int
:	O
HASHC	O
;	O
case	O
5	int
:	O
HASHC	O
;	O
case	O
4	int
:	O
HASHC	O
;	O
case	O
3	int
:	O
HASHC	O
;	O
case	O
2	int
:	O
HASHC	O
;	O
case	O
1	int
:	O
HASHC	O
;	O
}	O
while	O
(	O
--	O
loop	int
)	O
;	O
}	O
return	O
(	O
n	int
)	O
;	O
}	O
u_int32_t	int
CDB___ham_func4	(*(void),int)->(int)
(	O
key	struct(*(void),int,int,int,int,int,*(void))
,	O
len	short
)	O
const	O
void	O
*	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
u_int32_t	int
len	short
;	O
{	O
const	O
u_int8_t	char
*	O
k	*(char)
;	O
u_int32_t	int
h	int
,	O
loop	int
;	O
if	O
(	O
len	short
==	O
0	int
)	O
return	O
(	O
0	int
)	O
;	O
h	int
=	O
0	int
;	O
k	*(char)
=	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
loop	int
=	O
(	O
len	short
+	O
8	int
-	O
1	int
)	O
>>	O
3	int
;	O
switch	O
(	O
len	short
&	O
(	O
8	int
-	O
1	int
)	O
)	O
{	O
case	O
0	int
:	O
do	O
{	O
HASH4	O
;	O
case	O
7	int
:	O
HASH4	O
;	O
case	O
6	int
:	O
HASH4	O
;	O
case	O
5	int
:	O
HASH4	O
;	O
case	O
4	int
:	O
HASH4	O
;	O
case	O
3	int
:	O
HASH4	O
;	O
case	O
2	int
:	O
HASH4	O
;	O
case	O
1	int
:	O
HASH4	O
;	O
}	O
while	O
(	O
--	O
loop	int
)	O
;	O
}	O
return	O
(	O
h	int
)	O
;	O
}	O
u_int32_t	int
CDB___ham_func5	(*(void),int)->(int)
(	O
key	struct(*(void),int,int,int,int,int,*(void))
,	O
len	short
)	O
const	O
void	O
*	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
u_int32_t	int
len	short
;	O
{	O
const	O
u_int8_t	char
*	O
k	*(char)
,	O
*	O
e	*(char)
;	O
u_int32_t	int
h	int
;	O
k	*(char)
=	O
key	struct(*(void),int,int,int,int,int,*(void))
;	O
e	*(char)
=	O
k	*(char)
+	O
len	short
;	O
for	O
(	O
h	int
=	O
0	int
;	O
k	*(char)
<	O
e	*(char)
;	O
++	O
k	*(char)
)	O
{	O
h	int
*=	O
16777619	int
;	O
h	int
^=	O
*	O
k	*(char)
;	O
}	O
return	O
(	O
h	int
)	O
;	O
}	O
