extern	O
IFILE	O
curr_ifile	*(void)
;	O
extern	O
int	O
sc_height	int
;	O
extern	O
int	O
jump_sline	int
;	O
static	O
struct	O
mark	struct(*(void),struct(long,int))
marks	array(struct(*(void),struct(long,int)))
[	O
NMARKS	O
]	O
;	O
public	O
void	O
init_mark	()->(void)
(	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NMARKS	O
;	O
i	int
++	O
)	O
marks	array(struct(*(void),struct(long,int)))
[	O
i	int
]	O
.	O
m_scrpos	struct(long,int)
.	O
pos	long
=	O
NULL_POSITION	O
;	O
}	O
static	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
getumark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
int	O
c	int
;	O
{	O
if	O
(	O
c	int
>=	O
'a'	O
&&	O
c	int
<=	O
'z'	O
)	O
return	O
(	O
&	O
marks	array(struct(*(void),struct(long,int)))
[	O
c	int
-	O
'a'	O
]	O
)	O
;	O
if	O
(	O
c	int
>=	O
'A'	O
&&	O
c	int
<=	O
'Z'	O
)	O
return	O
(	O
&	O
marks	array(struct(*(void),struct(long,int)))
[	O
c	int
-	O
'A'	O
+	O
26	int
]	O
)	O
;	O
error	(*(char),*(union(*(char),int,long)))->(void)
(	O
"Invalid mark letter"	*(char)
,	O
NULL_PARG	O
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
static	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
getmark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
int	O
c	int
;	O
{	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
m	*(struct(*(void),struct(long,int)))
;	O
static	O
struct	O
mark	struct(*(void),struct(long,int))
sm	struct(*(void),struct(long,int))
;	O
switch	O
(	O
c	int
)	O
{	O
case	O
'^'	O
:	O
m	*(struct(*(void),struct(long,int)))
=	O
&	O
sm	struct(*(void),struct(long,int))
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
=	O
ch_zero	O
(	O
)	O
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
ln	int
=	O
0	int
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
=	O
curr_ifile	*(void)
;	O
break	O
;	O
case	O
'$'	O
:	O
if	O
(	O
ch_end_seek	()->(int)
(	O
)	O
)	O
{	O
error	(*(char),*(union(*(char),int,long)))->(void)
(	O
"Cannot seek to end of file"	*(char)
,	O
NULL_PARG	O
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
m	*(struct(*(void),struct(long,int)))
=	O
&	O
sm	struct(*(void),struct(long,int))
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
=	O
ch_tell	()->(long)
(	O
)	O
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
ln	int
=	O
sc_height	int
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
=	O
curr_ifile	*(void)
;	O
break	O
;	O
case	O
'.'	O
:	O
m	*(struct(*(void),struct(long,int)))
=	O
&	O
sm	struct(*(void),struct(long,int))
;	O
get_scrpos	(*(struct(long,int)),int)->(void)
(	O
&	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
,	O
TOP	O
)	O
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
=	O
curr_ifile	*(void)
;	O
break	O
;	O
case	O
'\''	O
:	O
m	*(struct(*(void),struct(long,int)))
=	O
&	O
marks	array(struct(*(void),struct(long,int)))
[	O
LASTMARK	O
]	O
;	O
break	O
;	O
default	O
:	O
m	*(struct(*(void),struct(long,int)))
=	O
getumark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
==	O
NULL	O
)	O
break	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
==	O
NULL_POSITION	O
)	O
{	O
error	(*(char),*(union(*(char),int,long)))->(void)
(	O
"Mark not set"	*(char)
,	O
NULL_PARG	O
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
break	O
;	O
}	O
return	O
(	O
m	*(struct(*(void),struct(long,int)))
)	O
;	O
}	O
public	O
int	O
badmark	(int)->(int)
(	O
c	int
)	O
int	O
c	int
;	O
{	O
return	O
(	O
getmark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
==	O
NULL	O
)	O
;	O
}	O
public	O
void	O
setmark	(int,int)->(void)
(	O
c	int
,	O
where	int
)	O
int	O
c	int
;	O
int	O
where	int
;	O
{	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
m	*(struct(*(void),struct(long,int)))
;	O
struct	O
scrpos	struct(long,int)
scrpos	struct(long,int)
;	O
m	*(struct(*(void),struct(long,int)))
=	O
getumark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
==	O
NULL	O
)	O
return	O
;	O
get_scrpos	(*(struct(long,int)),int)->(void)
(	O
&	O
scrpos	struct(long,int)
,	O
where	int
)	O
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
=	O
scrpos	struct(long,int)
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
=	O
curr_ifile	*(void)
;	O
}	O
public	O
void	O
clrmark	(int)->(void)
(	O
c	int
)	O
int	O
c	int
;	O
{	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
m	*(struct(*(void),struct(long,int)))
;	O
m	*(struct(*(void),struct(long,int)))
=	O
getumark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
==	O
NULL	O
)	O
return	O
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
=	O
NULL_POSITION	O
;	O
}	O
public	O
void	O
lastmark	()->(void)
(	O
)	O
{	O
struct	O
scrpos	struct(long,int)
scrpos	struct(long,int)
;	O
if	O
(	O
ch_getflags	()->(int)
(	O
)	O
&	O
CH_HELPFILE	int
)	O
return	O
;	O
get_scrpos	(*(struct(long,int)),int)->(void)
(	O
&	O
scrpos	struct(long,int)
,	O
TOP	O
)	O
;	O
if	O
(	O
scrpos	struct(long,int)
.	O
pos	long
==	O
NULL_POSITION	O
)	O
return	O
;	O
marks	array(struct(*(void),struct(long,int)))
[	O
LASTMARK	O
]	O
.	O
m_scrpos	struct(long,int)
=	O
scrpos	struct(long,int)
;	O
marks	array(struct(*(void),struct(long,int)))
[	O
LASTMARK	O
]	O
.	O
m_ifile	*(void)
=	O
curr_ifile	*(void)
;	O
}	O
public	O
void	O
gomark	(int)->(void)
(	O
c	int
)	O
int	O
c	int
;	O
{	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
m	*(struct(*(void),struct(long,int)))
;	O
struct	O
scrpos	struct(long,int)
scrpos	struct(long,int)
;	O
m	*(struct(*(void),struct(long,int)))
=	O
getmark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
==	O
&	O
marks	array(struct(*(void),struct(long,int)))
[	O
LASTMARK	O
]	O
&&	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
==	O
NULL_POSITION	O
)	O
{	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
=	O
curr_ifile	*(void)
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
=	O
ch_zero	O
(	O
)	O
;	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
ln	int
=	O
jump_sline	int
;	O
}	O
scrpos	struct(long,int)
=	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
!=	O
curr_ifile	*(void)
)	O
{	O
if	O
(	O
edit_ifile	(*(void))->(int)
(	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
)	O
)	O
return	O
;	O
}	O
jump_loc	(long,int)->(void)
(	O
scrpos	struct(long,int)
.	O
pos	long
,	O
scrpos	struct(long,int)
.	O
ln	int
)	O
;	O
}	O
public	O
POSITION	long
markpos	(int)->(long)
(	O
c	int
)	O
int	O
c	int
;	O
{	O
struct	O
mark	struct(*(void),struct(long,int))
*	O
m	*(struct(*(void),struct(long,int)))
;	O
m	*(struct(*(void),struct(long,int)))
=	O
getmark	(int)->(*(struct(*(void),struct(long,int))))
(	O
c	int
)	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
==	O
NULL	O
)	O
return	O
(	O
NULL_POSITION	O
)	O
;	O
if	O
(	O
m	*(struct(*(void),struct(long,int)))
->	O
m_ifile	*(void)
!=	O
curr_ifile	*(void)
)	O
{	O
error	(*(char),*(union(*(char),int,long)))->(void)
(	O
"Mark not in current file"	*(char)
,	O
NULL_PARG	O
)	O
;	O
return	O
(	O
NULL_POSITION	O
)	O
;	O
}	O
return	O
(	O
m	*(struct(*(void),struct(long,int)))
->	O
m_scrpos	struct(long,int)
.	O
pos	long
)	O
;	O
}	O
public	O
char	O
posmark	(long)->(char)
(	O
pos	long
)	O
POSITION	long
pos	long
;	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
26	int
*	O
2	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
marks	array(struct(*(void),struct(long,int)))
[	O
i	int
]	O
.	O
m_ifile	*(void)
==	O
curr_ifile	*(void)
&&	O
marks	array(struct(*(void),struct(long,int)))
[	O
i	int
]	O
.	O
m_scrpos	struct(long,int)
.	O
pos	long
==	O
pos	long
)	O
{	O
if	O
(	O
i	int
<	O
26	int
)	O
return	O
'a'	O
+	O
i	int
;	O
return	O
'A'	O
+	O
i	int
-	O
26	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
public	O
void	O
unmark	(*(void))->(void)
(	O
ifile	*(void)
)	O
IFILE	O
ifile	*(void)
;	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NMARKS	O
;	O
i	int
++	O
)	O
if	O
(	O
marks	array(struct(*(void),struct(long,int)))
[	O
i	int
]	O
.	O
m_ifile	*(void)
==	O
ifile	*(void)
)	O
marks	array(struct(*(void),struct(long,int)))
[	O
i	int
]	O
.	O
m_scrpos	struct(long,int)
.	O
pos	long
=	O
NULL_POSITION	O
;	O
}	O
