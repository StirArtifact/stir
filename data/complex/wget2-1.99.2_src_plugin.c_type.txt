static	O
const	O
char	O
*	O
plugin_list_envvar	*(char)
=	O
"WGET2_PLUGINS"	*(char)
;	O
static	O
void	O
split_string	(*(char),char,*(struct))->(void)
(	O
const	O
char	O
*	O
str	*(char)
,	O
char	O
separator	char
,	O
wget_vector	struct
*	O
v	*(struct)
)	O
{	O
const	O
char	O
*	O
ptr	*(void)
,	O
*	O
pmark	*(char)
;	O
for	O
(	O
pmark	*(char)
=	O
ptr	*(void)
=	O
str	*(char)
;	O
*	O
ptr	*(void)
;	O
pmark	*(char)
=	O
ptr	*(void)
+	O
1	int
)	O
{	O
if	O
(	O
(	O
ptr	*(void)
=	O
strchrnul	(*(char),int)->(*(char))
(	O
pmark	*(char)
,	O
separator	char
)	O
)	O
>	O
pmark	*(char)
)	O
wget_vector_add	(*(struct),*(void))->(int)
(	O
v	*(struct)
,	O
wget_strmemdup	(*(void),long)->(*(char))
(	O
pmark	*(char)
,	O
ptr	*(void)
-	O
pmark	*(char)
)	O
)	O
;	O
}	O
}	O
typedef	O
struct	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
;	O
wget_plugin_finalizer_fn	(*(struct(*(void),*(struct))),int)->(void)
*	O
finalizer	*((*(struct(*(void),*(struct`))),int)->(void))
;	O
wget_plugin_option_callback	(*(struct(*(void),*(struct))),*(char),*(char))->(int)
*	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
;	O
wget_plugin_url_filter_callback	(*(struct(*(void),*(struct))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct))))->(void)
*	O
url_filter	*((*(struct(*(void),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct`))))->(void))
;	O
wget_plugin_post_processor	(*(struct(*(void),*(struct))),*(struct(*(struct))))->(int)
*	O
post_processor	*((*(struct(*(void),*(struct`))),*(struct(*(struct`))))->(int))
;	O
char	O
name_buf	array(char)
[	O
]	O
;	O
}	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
;	O
static	O
int	O
initialized	int
=	O
0	int
;	O
static	O
wget_vector	struct
*	O
search_paths	*(struct)
;	O
static	O
wget_vector	struct
*	O
plugin_list	*(struct)
;	O
static	O
wget_stringmap	struct
*	O
plugin_name_index	*(struct)
;	O
static	O
int	O
plugin_help_forwarded	int
;	O
void	O
plugin_db_add_search_paths	(*(char),char)->(void)
(	O
const	O
char	O
*	O
paths	*(char)
,	O
char	O
separator	char
)	O
{	O
split_string	(*(char),char,*(struct))->(void)
(	O
paths	*(char)
,	O
separator	char
,	O
search_paths	*(struct)
)	O
;	O
}	O
void	O
plugin_db_clear_search_paths	()->(void)
(	O
void	O
)	O
{	O
wget_vector_clear	(*(struct))->(void)
(	O
search_paths	*(struct)
)	O
;	O
}	O
static	O
void	O
impl_register_finalizer	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),int)->(void)))->(void)
(	O
wget_plugin	struct(*(void),*(struct))
*	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
wget_plugin_finalizer_fn	(*(struct(*(void),*(struct))),int)->(void)
*	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
)	O
{	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
finalizer	*((*(struct(*(void),*(struct`))),int)->(void))
=	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
;	O
}	O
static	O
const	O
char	O
*	O
impl_get_name	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(char))
(	O
wget_plugin	struct(*(void),*(struct))
*	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
=	O
(	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
)	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
return	O
plugin	*(struct(*(void),*(struct)))
->	O
name	*(char)
;	O
}	O
static	O
void	O
impl_register_argp	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),*(char),*(char))->(int)))->(void)
(	O
wget_plugin	struct(*(void),*(struct))
*	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
wget_plugin_option_callback	(*(struct(*(void),*(struct))),*(char),*(char))->(int)
*	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
)	O
{	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
=	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
;	O
}	O
typedef	O
struct	O
{	O
wget_intercept_action	struct(*(struct))
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
;	O
struct	O
plugin_db_forward_url_verdict	struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool)
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
;	O
}	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
;	O
static	O
void	O
impl_action_reject	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(void)
(	O
wget_intercept_action	struct(*(struct))
*	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
action	*(struct(*(struct)))
=	O
(	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
)	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
reject	bool
=	O
1	int
;	O
}	O
static	O
void	O
impl_action_accept	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(void)
(	O
wget_intercept_action	struct(*(struct))
*	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
action	*(struct(*(struct)))
=	O
(	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
)	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
accept	bool
=	O
1	int
;	O
}	O
static	O
void	O
impl_action_set_alt_url	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void)
(	O
wget_intercept_action	struct(*(struct))
*	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
)	O
{	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
action	*(struct(*(struct)))
=	O
(	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
)	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
if	O
(	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
)	O
wget_iri_free	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))))->(void)
(	O
&	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
)	O
;	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
=	O
wget_iri_clone	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
(	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
)	O
;	O
}	O
static	O
void	O
impl_action_set_local_filename	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(char))->(void)
(	O
wget_intercept_action	struct(*(struct))
*	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
const	O
char	O
*	O
local_filename	*(char)
)	O
{	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
action	*(struct(*(struct)))
=	O
(	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
*	O
)	O
p_action	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
if	O
(	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_local_filename	*(char)
)	O
wget_free	*((*(void))->(void))
(	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_local_filename	*(char)
)	O
;	O
action	*(struct(*(struct)))
->	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_local_filename	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
local_filename	*(char)
)	O
;	O
}	O
static	O
void	O
impl_register_url_filter	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)))->(void)
(	O
wget_plugin	struct(*(void),*(struct))
*	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
wget_plugin_url_filter_callback	(*(struct(*(void),*(struct))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct))))->(void)
*	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
)	O
{	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
url_filter	*((*(struct(*(void),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct`))))->(void))
=	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
;	O
}	O
typedef	O
struct	O
{	O
wget_downloaded_file	struct(*(struct))
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
;	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
;	O
const	O
char	O
*	O
filename	*(*(char))
;	O
uint64_t	long
size	*(long)
;	O
const	O
void	O
*	O
data	*(void)
;	O
void	O
*	O
data_buf	*(void)
;	O
wget_vector	struct
*	O
recurse_iris	*(struct)
;	O
}	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
;	O
static	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
impl_file_get_source_url	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
return	O
file	*(struct(*(struct)))
->	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
;	O
}	O
static	O
const	O
char	O
*	O
impl_file_get_local_filename	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(char))
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
return	O
file	*(struct(*(struct)))
->	O
filename	*(*(char))
;	O
}	O
static	O
uint64_t	long
impl_file_get_size	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(long)
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
return	O
file	*(struct(*(struct)))
->	O
size	*(long)
;	O
}	O
static	O
int	O
impl_file_get_contents	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(void)),*(long))->(int)
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
const	O
void	O
*	O
*	O
data	*(void)
,	O
size_t	long
*	O
size	*(long)
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
if	O
(	O
(	O
!	O
file	*(struct(*(struct)))
->	O
data	*(void)
)	O
&&	O
file	*(struct(*(struct)))
->	O
filename	*(*(char))
)	O
{	O
size_t	long
dummy	long
;	O
file	*(struct(*(struct)))
->	O
data_buf	*(void)
=	O
wget_read_file	(*(char),*(long))->(*(char))
(	O
file	*(struct(*(struct)))
->	O
filename	*(*(char))
,	O
&	O
dummy	long
)	O
;	O
if	O
(	O
!	O
file	*(struct(*(struct)))
->	O
data_buf	*(void)
)	O
return	O
-	O
1	int
;	O
file	*(struct(*(struct)))
->	O
data	*(void)
=	O
file	*(struct(*(struct)))
->	O
data_buf	*(void)
;	O
}	O
*	O
data	*(void)
=	O
file	*(struct(*(struct)))
->	O
data	*(void)
;	O
*	O
size	*(long)
=	O
file	*(struct(*(struct)))
->	O
size	*(long)
;	O
return	O
0	int
;	O
}	O
static	O
FILE	struct
*	O
impl_file_open_stream	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
if	O
(	O
file	*(struct(*(struct)))
->	O
data	*(void)
)	O
return	O
fmemopen	(*(void),long,*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
(	O
void	O
*	O
)	O
file	*(struct(*(struct)))
->	O
data	*(void)
,	O
file	*(struct(*(struct)))
->	O
size	*(long)
,	O
"rb"	*(char)
)	O
;	O
if	O
(	O
file	*(struct(*(struct)))
->	O
filename	*(*(char))
)	O
return	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
file	*(struct(*(struct)))
->	O
filename	*(*(char))
,	O
"rb"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
static	O
bool	bool
impl_file_get_recurse	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(bool)
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
return	O
file	*(struct(*(struct)))
->	O
recurse_iris	*(struct)
?	O
true	int
:	O
false	int
;	O
}	O
static	O
void	O
impl_file_add_recurse_url	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void)
(	O
wget_downloaded_file	struct(*(struct))
*	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
)	O
{	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
file	*(struct(*(struct)))
=	O
(	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
*	O
)	O
p_file	*(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
if	O
(	O
file	*(struct(*(struct)))
->	O
recurse_iris	*(struct)
)	O
wget_vector_add	(*(struct),*(void))->(int)
(	O
file	*(struct(*(struct)))
->	O
recurse_iris	*(struct)
,	O
wget_iri_clone	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
(	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
)	O
)	O
;	O
}	O
static	O
void	O
impl_register_post_processor	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),*(struct(*`)))->(int)))->(void)
(	O
wget_plugin	struct(*(void),*(struct))
*	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
,	O
wget_plugin_post_processor	(*(struct(*(void),*(struct))),*(struct(*(struct))))->(int)
*	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
)	O
{	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
p_plugin	*(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))))
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
post_processor	*((*(struct(*(void),*(struct`))),*(struct(*(struct`))))->(int))
=	O
fn	*((*(struct(*(void),*(struct`))),int)->(void))
;	O
}	O
static	O
struct	O
wget_plugin_vtable	struct(*((*(struct(*(void),*(struct`))))->(*(char))),*((*(struct(*(void),*(struct`))),*((*(struct`),int)->(void)))->(void)),*((*(struct(*(void),*(struct`))),*((*(struct`),*(char),*(char))->(int)))->(void)),*((*(struct(*(struct`))))->(void)),*((*(struct(*(struct`))))->(void)),*((*(struct(*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void)),*((*(struct(*(struct`))),*(char))->(void)),*((*(struct(*(void),*(struct`))),*((*(struct`),*(struct`),*(struct`))->(void)))->(void)),*((*(struct(*(struct`))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))),*((*(struct(*(struct`))))->(*(char))),*((*(struct(*(struct`))))->(long)),*((*(struct(*(struct`))),*(*(void)),*(long))->(int)),*((*(struct(*(struct`))))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))))),*((*(struct(*(struct`))))->(bool)),*((*(struct(*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void)),*((*(struct(*(void),*(struct`))),*((*(struct`),*(struct`))->(int)))->(void)))
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
=	O
{	O
.	O
get_name	*((*(struct(*(void),*(struct`))))->(*(char)))
=	O
impl_get_name	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(char))
,	O
.	O
register_finalizer	*((*(struct(*(void),*(struct`))),*((*(struct`),int)->(void)))->(void))
=	O
impl_register_finalizer	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),int)->(void)))->(void)
,	O
.	O
register_argp	*((*(struct(*(void),*(struct`))),*((*(struct`),*(char),*(char))->(int)))->(void))
=	O
impl_register_argp	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),*(char),*(char))->(int)))->(void)
,	O
.	O
action_reject	*((*(struct(*(struct`))))->(void))
=	O
impl_action_reject	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(void)
,	O
.	O
action_accept	*((*(struct(*(struct`))))->(void))
=	O
impl_action_accept	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(void)
,	O
.	O
action_set_alt_url	*((*(struct(*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void))
=	O
impl_action_set_alt_url	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void)
,	O
.	O
action_set_local_filename	*((*(struct(*(struct`))),*(char))->(void))
=	O
impl_action_set_local_filename	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(char))->(void)
,	O
.	O
register_url_filter	*((*(struct(*(void),*(struct`))),*((*(struct`),*(struct`),*(struct`))->(void)))->(void))
=	O
impl_register_url_filter	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)))->(void)
,	O
.	O
file_get_source_url	*((*(struct(*(struct`))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))))
=	O
impl_file_get_source_url	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
,	O
.	O
file_get_local_filename	*((*(struct(*(struct`))))->(*(char)))
=	O
impl_file_get_local_filename	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(char))
,	O
.	O
file_get_size	*((*(struct(*(struct`))))->(long))
=	O
impl_file_get_size	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(long)
,	O
.	O
file_get_contents	*((*(struct(*(struct`))),*(*(void)),*(long))->(int))
=	O
impl_file_get_contents	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(*(void)),*(long))->(int)
,	O
.	O
file_open_stream	*((*(struct(*(struct`))))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char)))))
=	O
impl_file_open_stream	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
,	O
.	O
file_get_recurse	*((*(struct(*(struct`))))->(bool))
=	O
impl_file_get_recurse	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))))->(bool)
,	O
.	O
file_add_recurse_url	*((*(struct(*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void))
=	O
impl_file_add_recurse_url	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))->(void)
,	O
.	O
register_post_processor	*((*(struct(*(void),*(struct`))),*((*(struct`),*(struct`))->(int)))->(void))
=	O
impl_register_post_processor	(*(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`)))),*((*(struct(*`,*`)),*(struct(*`)))->(int)))->(void)
,	O
}	O
;	O
static	O
void	O
plugin_free	(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))->(void)
(	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
)	O
{	O
dl_file_close	(*(struct))->(void)
(	O
plugin	*(struct(*(void),*(struct)))
->	O
dm	*(struct)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin	*(struct(*(void),*(struct)))
)	O
;	O
}	O
static	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
_load_plugin	(*(char),*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
const	O
char	O
*	O
name	*(char)
,	O
const	O
char	O
*	O
path	*(char)
,	O
dl_error_t	struct(*(char))
*	O
e	*(struct(*(char)))
)	O
{	O
size_t	long
name_len	long
;	O
dl_file_t	struct
*	O
dm	*(struct)
;	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
;	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
;	O
wget_plugin_initializer_fn	(*(struct(*(void),*(struct))))->(int)
*	O
init_fn	*((*(struct(*(void),*(struct`))))->(int))
;	O
name_len	long
=	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
;	O
dm	*(struct)
=	O
dl_file_open	(*(char),*(struct(*(char))))->(*(struct))
(	O
path	*(char)
,	O
e	*(struct(*(char)))
)	O
;	O
if	O
(	O
!	O
dm	*(struct)
)	O
return	O
NULL	O
;	O
plugin	*(struct(*(void),*(struct)))
=	O
wget_malloc	(long)->(*(void))
(	O
sizeof	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
)	O
+	O
name_len	long
+	O
1	int
)	O
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
finalizer	*((*(struct(*(void),*(struct`))),int)->(void))
=	O
NULL	O
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
=	O
NULL	O
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
url_filter	*((*(struct(*(void),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct`))))->(void))
=	O
NULL	O
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
post_processor	*((*(struct(*(void),*(struct`))),*(struct(*(struct`))))->(int))
=	O
NULL	O
;	O
wget_strscpy	(*(char),*(char),long)->(long)
(	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
name_buf	array(char)
,	O
name	*(char)
,	O
name_len	long
+	O
1	int
)	O
;	O
plugin	*(struct(*(void),*(struct)))
->	O
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
.	O
plugin_data	*(void)
=	O
NULL	O
;	O
plugin	*(struct(*(void),*(struct)))
->	O
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
.	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
=	O
&	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
;	O
plugin	*(struct(*(void),*(struct)))
->	O
name	*(char)
=	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
name_buf	array(char)
;	O
plugin	*(struct(*(void),*(struct)))
->	O
dm	*(struct)
=	O
dm	*(struct)
;	O
*	O
(	O
(	O
void	O
*	O
*	O
)	O
(	O
&	O
init_fn	*((*(struct(*(void),*(struct`))))->(int))
)	O
)	O
=	O
dl_file_lookup	(*(struct),*(char),*(struct(*(char))))->(*(void))
(	O
dm	*(struct)
,	O
"wget_plugin_initializer"	*(char)
,	O
e	*(struct(*(char)))
)	O
;	O
if	O
(	O
!	O
init_fn	*((*(struct(*(void),*(struct`))))->(int))
)	O
{	O
plugin_free	(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))->(void)
(	O
plugin	*(struct(*(void),*(struct)))
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
init_fn	*((*(struct(*(void),*(struct`))))->(int))
(	O
(	O
wget_plugin	struct(*(void),*(struct))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
)	O
!=	O
0	int
)	O
{	O
dl_error_set	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"Plugin failed to initialize"	*(char)
)	O
;	O
plugin_free	(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))->(void)
(	O
plugin	*(struct(*(void),*(struct)))
)	O
;	O
return	O
NULL	O
;	O
}	O
wget_vector_add	(*(struct),*(void))->(int)
(	O
plugin_list	*(struct)
,	O
plugin	*(struct(*(void),*(struct)))
)	O
;	O
wget_stringmap_put	(*(struct),*(char),*(void))->(int)
(	O
plugin_name_index	*(struct)
,	O
plugin	*(struct(*(void),*(struct)))
->	O
name	*(char)
,	O
plugin	*(struct(*(void),*(struct)))
)	O
;	O
return	O
plugin	*(struct(*(void),*(struct)))
;	O
}	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin_db_load_from_path	(*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
const	O
char	O
*	O
path	*(char)
,	O
dl_error_t	struct(*(char))
*	O
e	*(struct(*(char)))
)	O
{	O
char	O
*	O
name	*(char)
=	O
dl_get_name_from_path	(*(char),int)->(*(char))
(	O
path	*(char)
,	O
0	int
)	O
;	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
=	O
_load_plugin	(*(char),*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
name	*(char)
,	O
path	*(char)
,	O
e	*(struct(*(char)))
)	O
;	O
wget_free	*((*(void))->(void))
(	O
name	*(char)
)	O
;	O
return	O
plugin	*(struct(*(void),*(struct)))
;	O
}	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin_db_load_from_name	(*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
const	O
char	O
*	O
name	*(char)
,	O
dl_error_t	struct(*(char))
*	O
e	*(struct(*(char)))
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
;	O
char	O
*	O
filename	*(*(char))
=	O
dl_search	(*(char),*(struct))->(*(char))
(	O
name	*(char)
,	O
search_paths	*(struct)
)	O
;	O
if	O
(	O
!	O
filename	*(*(char))
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"Plugin '%s' not found in any of the plugin search paths."	*(char)
,	O
name	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
plugin	*(struct(*(void),*(struct)))
=	O
_load_plugin	(*(char),*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
name	*(char)
,	O
filename	*(*(char))
,	O
e	*(struct(*(char)))
)	O
;	O
wget_free	*((*(void))->(void))
(	O
filename	*(*(char))
)	O
;	O
return	O
plugin	*(struct(*(void),*(struct)))
;	O
}	O
int	O
plugin_db_load_from_envvar	()->(int)
(	O
void	O
)	O
{	O
dl_error_t	struct(*(char))
e	*(struct(*(char)))
[	O
1	int
]	O
;	O
wget_vector	struct
*	O
v	*(struct)
;	O
const	O
char	O
*	O
str	*(char)
;	O
int	O
ret	int
=	O
0	int
;	O
str	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
plugin_list_envvar	*(char)
)	O
;	O
if	O
(	O
str	*(char)
)	O
{	O
char	O
sep	char
=	O
':'	O
;	O
dl_error_init	(*(struct(*(char))))->(void)
(	O
e	*(struct(*(char)))
)	O
;	O
v	*(struct)
=	O
wget_vector_create	(int,*((*(void),*(void))->(int)))->(*(struct))
(	O
16	int
,	O
NULL	O
)	O
;	O
split_string	(*(char),char,*(struct))->(void)
(	O
str	*(char)
,	O
sep	char
,	O
v	*(struct)
)	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
wget_vector_size	(*(struct))->(int)
(	O
v	*(struct)
)	O
&&	O
ret	int
==	O
0	int
;	O
i	int
++	O
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
;	O
int	O
local	int
=	O
0	int
;	O
str	*(char)
=	O
(	O
const	O
char	O
*	O
)	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
v	*(struct)
,	O
i	int
)	O
;	O
if	O
(	O
strchr	(*(char),int)->(*(char))
(	O
str	*(char)
,	O
'/'	O
)	O
)	O
local	int
=	O
1	int
;	O
if	O
(	O
local	int
)	O
plugin	*(struct(*(void),*(struct)))
=	O
plugin_db_load_from_path	(*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
str	*(char)
,	O
e	*(struct(*(char)))
)	O
;	O
else	O
plugin	*(struct(*(void),*(struct)))
=	O
plugin_db_load_from_name	(*(char),*(struct(*(char))))->(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))
(	O
str	*(char)
,	O
e	*(struct(*(char)))
)	O
;	O
if	O
(	O
!	O
plugin	*(struct(*(void),*(struct)))
)	O
{	O
wget_error_printf	(*(char))->(void)
(	O
_	O
(	O
"Plugin '%s' failed to load: %s"	*(char)
)	O
,	O
str	*(char)
,	O
dl_error_get_msg	(*(struct(*(char))))->(*(char))
(	O
e	*(struct(*(char)))
)	O
)	O
;	O
dl_error_set	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
NULL	O
)	O
;	O
ret	int
=	O
-	O
1	int
;	O
}	O
}	O
wget_vector_free	(*(*(struct)))->(void)
(	O
&	O
v	*(struct)
)	O
;	O
}	O
return	O
ret	int
;	O
}	O
void	O
plugin_db_list	(*(struct))->(void)
(	O
wget_vector	struct
*	O
names_out	*(struct)
)	O
{	O
dl_list	(*(struct),*(struct))->(void)
(	O
search_paths	*(struct)
,	O
names_out	*(struct)
)	O
;	O
}	O
int	O
plugin_db_forward_option	(*(char),*(struct(*(char))))->(int)
(	O
const	O
char	O
*	O
plugin_option	*(char)
,	O
dl_error_t	struct(*(char))
*	O
e	*(struct(*(char)))
)	O
{	O
char	O
*	O
plugin_option_copy	*(char)
;	O
char	O
*	O
plugin_name	*(char)
,	O
*	O
option	*(char)
,	O
*	O
value	*(void)
;	O
char	O
*	O
ptr	*(void)
;	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
;	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
;	O
int	O
op_res	int
;	O
plugin_option_copy	*(char)
=	O
wget_strdup	(*(char))->(*(char))
(	O
plugin_option	*(char)
)	O
;	O
ptr	*(void)
=	O
strchr	(*(char),int)->(*(char))
(	O
plugin_option_copy	*(char)
,	O
'.'	O
)	O
;	O
if	O
(	O
!	O
ptr	*(void)
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"'%s': '.' is missing (separates plugin name and option)"	*(char)
,	O
plugin_option	*(char)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
ptr	*(void)
==	O
plugin_option_copy	*(char)
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"'%s': Plugin name is missing."	*(char)
,	O
plugin_option	*(char)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
*	O
ptr	*(void)
=	O
0	int
;	O
plugin_name	*(char)
=	O
plugin_option_copy	*(char)
;	O
option	*(char)
=	O
ptr	*(void)
+	O
1	int
;	O
ptr	*(void)
=	O
strchr	(*(char),int)->(*(char))
(	O
option	*(char)
,	O
'='	O
)	O
;	O
if	O
(	O
ptr	*(void)
)	O
{	O
*	O
ptr	*(void)
=	O
0	int
;	O
value	*(void)
=	O
ptr	*(void)
+	O
1	int
;	O
}	O
else	O
{	O
value	*(void)
=	O
NULL	O
;	O
}	O
if	O
(	O
*	O
option	*(char)
==	O
0	int
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"'%s': An option is required (after '.', and before '=' if present)"	*(char)
,	O
plugin_option	*(char)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
option	*(char)
,	O
"help"	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
value	*(void)
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"'help' option does not accept arguments\n"	*(char)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
plugin_help_forwarded	int
=	O
1	int
;	O
}	O
if	O
(	O
!	O
wget_stringmap_get	(*(struct),*(char),*(*(void)))->(int)
(	O
plugin_name_index	*(struct)
,	O
plugin_name	*(char)
,	O
&	O
plugin	*(struct(*(void),*(struct)))
)	O
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"Plugin '%s' is not loaded."	*(char)
,	O
plugin_name	*(char)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
;	O
if	O
(	O
!	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"Plugin '%s' does not accept options."	*(char)
,	O
plugin	*(struct(*(void),*(struct)))
->	O
name	*(char)
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
op_res	int
=	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
(	O
(	O
wget_plugin	struct(*(void),*(struct))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
,	O
option	*(char)
,	O
value	*(void)
)	O
;	O
if	O
(	O
op_res	int
<	O
0	int
)	O
{	O
dl_error_set_printf	(*(struct(*(char))),*(char))->(void)
(	O
e	*(struct(*(char)))
,	O
"Plugin '%s' did not accept option '%s'"	*(char)
,	O
plugin	*(struct(*(void),*(struct)))
->	O
name	*(char)
,	O
strchrnul	(*(char),int)->(*(char))
(	O
plugin_option	*(char)
,	O
'.'	O
)	O
)	O
;	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
wget_free	*((*(void))->(void))
(	O
plugin_option_copy	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
void	O
plugin_db_show_help	()->(void)
(	O
void	O
)	O
{	O
int	O
n_plugins	int
=	O
wget_vector_size	(*(struct))->(int)
(	O
plugin_list	*(struct)
)	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
n_plugins	int
;	O
i	int
++	O
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
=	O
(	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
)	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
plugin_list	*(struct)
,	O
i	int
)	O
;	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
;	O
if	O
(	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"Options for %s:\n"	*(char)
)	O
,	O
plugin	*(struct(*(void),*(struct)))
->	O
name	*(char)
)	O
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
argp	*((*(struct(*(void),*(struct`))),*(char),*(char))->(int))
(	O
(	O
wget_plugin	struct(*(void),*(struct))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
,	O
"help"	*(char)
,	O
NULL	O
)	O
;	O
printf	(*(char))->(int)
(	O
"\n"	*(char)
)	O
;	O
}	O
}	O
plugin_help_forwarded	int
=	O
1	int
;	O
}	O
int	O
plugin_db_help_forwarded	()->(int)
(	O
void	O
)	O
{	O
return	O
plugin_help_forwarded	int
;	O
}	O
void	O
plugin_db_forward_url	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool)))->(void)
(	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
,	O
struct	O
plugin_db_forward_url_verdict	struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool)
*	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
)	O
{	O
intercept_action_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
action	*(struct(*(struct)))
=	O
{	O
.	O
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
.	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
=	O
&	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
}	O
;	O
int	O
n_plugins	int
=	O
wget_vector_size	(*(struct))->(int)
(	O
plugin_list	*(struct)
)	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
n_plugins	int
;	O
i	int
++	O
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
=	O
(	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
)	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
plugin_list	*(struct)
,	O
i	int
)	O
;	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
;	O
if	O
(	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
url_filter	*((*(struct(*(void),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct`))))->(void))
)	O
{	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
cur_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
=	O
action	*(struct(*(struct)))
.	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
alt_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
;	O
if	O
(	O
!	O
cur_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
)	O
cur_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
=	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
;	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
url_filter	*((*(struct(*(void),*(struct`))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*(struct`))))->(void))
(	O
(	O
wget_plugin	struct(*(void),*(struct))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
,	O
cur_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
,	O
(	O
wget_intercept_action	struct(*(struct))
*	O
)	O
&	O
action	*(struct(*(struct)))
)	O
;	O
if	O
(	O
action	*(struct(*(struct)))
.	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
reject	bool
||	O
action	*(struct(*(struct)))
.	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
.	O
accept	bool
)	O
break	O
;	O
}	O
}	O
*	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
=	O
action	*(struct(*(struct)))
.	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
;	O
}	O
void	O
plugin_db_forward_url_verdict_free	(*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool)))->(void)
(	O
struct	O
plugin_db_forward_url_verdict	struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool)
*	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
)	O
{	O
if	O
(	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
->	O
alt_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
)	O
wget_iri_free	(*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))))->(void)
(	O
&	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
->	O
alt_iri	*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool))
)	O
;	O
if	O
(	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
->	O
alt_local_filename	*(char)
)	O
wget_free	*((*(void))->(void))
(	O
verdict	*(struct(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),bool,bool))
->	O
alt_local_filename	*(char)
)	O
;	O
}	O
int	O
plugin_db_forward_downloaded_file	(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),long,*(char),*(void),*(struct))->(int)
(	O
const	O
wget_iri	struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)
*	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
,	O
uint64_t	long
size	*(long)
,	O
const	O
char	O
*	O
filename	*(*(char))
,	O
const	O
void	O
*	O
data	*(void)
,	O
wget_vector	struct
*	O
recurse_iris	*(struct)
)	O
{	O
int	O
ret	int
=	O
1	int
;	O
downloaded_file_t	struct(struct(*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(char),long,*(void),*(void),*(struct))
file	*(struct(*(struct)))
=	O
{	O
.	O
parent	struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void)))))
.	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
=	O
&	O
vtable	*(struct(*((*(struct`),*(char),short)->(int)),*((*(struct`),*(char))->(*(struct`))),*((*(struct`))->(void)),*((*(*`))->(void)),*((*(struct`),*(char),short,long,int)->(void)),*((*(struct`))->(int)),*((*(struct`))->(int))))
,	O
.	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
=	O
iri	*(*(struct(*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)))
,	O
.	O
filename	*(*(char))
=	O
filename	*(*(char))
,	O
.	O
size	*(long)
=	O
size	*(long)
,	O
.	O
data	*(void)
=	O
data	*(void)
,	O
.	O
data_buf	*(void)
=	O
NULL	O
,	O
.	O
recurse_iris	*(struct)
=	O
recurse_iris	*(struct)
}	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
wget_vector_size	(*(struct))->(int)
(	O
plugin_list	*(struct)
)	O
;	O
i	int
++	O
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
=	O
(	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
)	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
plugin_list	*(struct)
,	O
i	int
)	O
;	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
;	O
if	O
(	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
post_processor	*((*(struct(*(void),*(struct`))),*(struct(*(struct`))))->(int))
)	O
{	O
if	O
(	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
post_processor	*((*(struct(*(void),*(struct`))),*(struct(*(struct`))))->(int))
(	O
(	O
wget_plugin	struct(*(void),*(struct))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
,	O
(	O
wget_downloaded_file	struct(*(struct))
*	O
)	O
&	O
file	*(struct(*(struct)))
)	O
==	O
0	int
)	O
{	O
ret	int
=	O
0	int
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
file	*(struct(*(struct)))
.	O
data_buf	*(void)
)	O
wget_free	*((*(void))->(void))
(	O
file	*(struct(*(struct)))
.	O
data_buf	*(void)
)	O
;	O
return	O
ret	int
;	O
}	O
void	O
plugin_db_init	()->(void)
(	O
void	O
)	O
{	O
if	O
(	O
!	O
initialized	int
)	O
{	O
search_paths	*(struct)
=	O
wget_vector_create	(int,*((*(void),*(void))->(int)))->(*(struct))
(	O
16	int
,	O
NULL	O
)	O
;	O
plugin_list	*(struct)
=	O
wget_vector_create	(int,*((*(void),*(void))->(int)))->(*(struct))
(	O
16	int
,	O
NULL	O
)	O
;	O
wget_vector_set_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
plugin_list	*(struct)
,	O
(	O
wget_vector_destructor	(*(void))->(void)
*	O
)	O
plugin_free	(*(struct(struct(*(void),*(struct`)),*(char),*(struct))))->(void)
)	O
;	O
plugin_name_index	*(struct)
=	O
wget_stringmap_create	(int)->(*(struct))
(	O
16	int
)	O
;	O
wget_stringmap_set_key_destructor	(*(struct),*((*(char))->(void)))->(void)
(	O
plugin_name_index	*(struct)
,	O
NULL	O
)	O
;	O
wget_stringmap_set_value_destructor	(*(struct),*((*(void))->(void)))->(void)
(	O
plugin_name_index	*(struct)
,	O
NULL	O
)	O
;	O
plugin_help_forwarded	int
=	O
0	int
;	O
initialized	int
=	O
1	int
;	O
}	O
}	O
void	O
plugin_db_finalize	(int)->(void)
(	O
int	O
exitcode	int
)	O
{	O
if	O
(	O
!	O
initialized	int
)	O
return	O
;	O
int	O
n_plugins	int
=	O
wget_vector_size	(*(struct))->(int)
(	O
plugin_list	*(struct)
)	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
n_plugins	int
;	O
i	int
++	O
)	O
{	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
plugin	*(struct(*(void),*(struct)))
=	O
(	O
plugin_t	struct(struct(*(void),*(struct(*((*`)->(*`)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(void)),*((*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`,*`)->(void)),*((*`)->(*`)),*((*`)->(*`)),*((*`)->(long)),*((*`,*`,*`)->(int)),*((*`)->(*`)),*((*`)->(bool)),*((*`,*`)->(void)),*((*`,*`)->(void))))),*(char),*(struct))
*	O
)	O
wget_vector_get	(*(struct),int)->(*(void))
(	O
plugin_list	*(struct)
,	O
i	int
)	O
;	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
=	O
(	O
plugin_priv_t	struct(struct(struct(*(void),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`))),*(char),*(struct)),*((*(struct(*`,*`)),int)->(void)),*((*(struct(*`,*`)),*(char),*(char))->(int)),*((*(struct(*`,*`)),*(struct(*`,*`,*`,*`,*`,*`,*`,*`,*`,long,long,short,enum(int,int),bool,bool,bool,bool,bool,bool,bool)),*(struct(*`)))->(void)),*((*(struct(*`,*`)),*(struct(*`)))->(int)),array(char))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
;	O
if	O
(	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
finalizer	*((*(struct(*(void),*(struct`))),int)->(void))
)	O
priv	*(struct(struct(struct(*(void),*(struct`)),*(char),*(struct)),*((*(struct`),int)->(void)),*((*(struct`),*(char),*(char))->(int)),*((*(struct`),*(struct`),*(struct`))->(void)),*((*(struct`),*(struct`))->(int)),array(char)))
->	O
finalizer	*((*(struct(*(void),*(struct`))),int)->(void))
(	O
(	O
wget_plugin	struct(*(void),*(struct))
*	O
)	O
plugin	*(struct(*(void),*(struct)))
,	O
exitcode	int
)	O
;	O
}	O
wget_vector_free	(*(*(struct)))->(void)
(	O
&	O
plugin_list	*(struct)
)	O
;	O
wget_stringmap_free	(*(*(struct)))->(void)
(	O
&	O
plugin_name_index	*(struct)
)	O
;	O
wget_vector_free	(*(*(struct)))->(void)
(	O
&	O
search_paths	*(struct)
)	O
;	O
initialized	int
=	O
0	int
;	O
}	O
