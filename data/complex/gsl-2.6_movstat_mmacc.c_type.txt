typedef	O
double	O
mmacc_type_t	double
;	O
typedef	O
mmacc_type_t	double
ringbuf_type_t	double
;	O
typedef	O
struct	O
{	O
size_t	long
n	int
;	O
size_t	long
k	long
;	O
mmacc_type_t	double
xprev	double
;	O
ringbuf	struct(*(double),int,int,int)
*	O
rbuf	*(struct(*(double),int,int,int))
;	O
deque	struct(int,int,int,*(int))
*	O
minque	*(struct(int,int,int,*(int)))
;	O
deque	struct(int,int,int,*(int))
*	O
maxque	*(struct(int,int,int,*(int)))
;	O
}	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
;	O
static	O
size_t	long
mmacc_size	(long)->(long)
(	O
const	O
size_t	long
n	int
)	O
;	O
static	O
int	O
mmacc_init	(long,*(void))->(int)
(	O
const	O
size_t	long
n	int
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
mmacc_insert	(double,*(void))->(int)
(	O
const	O
mmacc_type_t	double
x	double
,	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
mmacc_delete	(*(void))->(int)
(	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
mmacc_min	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
mmacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
mmacc_max	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
mmacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
int	O
mmacc_minmax	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
mmacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
;	O
static	O
size_t	long
mmacc_size	(long)->(long)
(	O
const	O
size_t	long
n	int
)	O
{	O
size_t	long
size	long
=	O
0	int
;	O
size	long
+=	O
sizeof	O
(	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
)	O
;	O
size	long
+=	O
ringbuf_size	(long)->(long)
(	O
n	int
)	O
;	O
size	long
+=	O
2	int
*	O
deque_size	(long)->(long)
(	O
n	int
+	O
1	int
)	O
;	O
return	O
size	long
;	O
}	O
static	O
int	O
mmacc_init	(long,*(void))->(int)
(	O
const	O
size_t	long
n	int
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
state	*(int)
=	O
(	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
)	O
vstate	*(void)
;	O
state	*(int)
->	O
n	int
=	O
n	int
;	O
state	*(int)
->	O
k	long
=	O
0	int
;	O
state	*(int)
->	O
xprev	double
=	O
0.0	int
;	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
=	O
(	O
ringbuf	struct(*(double),int,int,int)
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
vstate	*(void)
+	O
sizeof	O
(	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
)	O
)	O
;	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
=	O
(	O
deque	struct(int,int,int,*(int))
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
+	O
ringbuf_size	(long)->(long)
(	O
n	int
)	O
)	O
;	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
=	O
(	O
deque	struct(int,int,int,*(int))
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
+	O
deque_size	(long)->(long)
(	O
n	int
+	O
1	int
)	O
)	O
;	O
ringbuf_init	(long,*(struct(*(double),int,int,int)))->(int)
(	O
n	int
,	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
)	O
;	O
deque_init	(long,*(struct(int,int,int,*(int))))->(int)
(	O
n	int
+	O
1	int
,	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
deque_init	(long,*(struct(int,int,int,*(int))))->(int)
(	O
n	int
+	O
1	int
,	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
mmacc_insert	(double,*(void))->(int)
(	O
const	O
mmacc_type_t	double
x	double
,	O
void	O
*	O
vstate	*(void)
)	O
{	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
state	*(int)
=	O
(	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
)	O
vstate	*(void)
;	O
int	O
head	int
,	O
tail	int
;	O
if	O
(	O
state	*(int)
->	O
k	long
==	O
0	int
)	O
{	O
ringbuf_insert	(double,*(struct(*(double),int,int,int)))->(int)
(	O
x	double
,	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
)	O
;	O
head	int
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
head	int
;	O
deque_push_back	(int,*(struct(int,int,int,*(int))))->(int)
(	O
head	int
,	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
deque_push_back	(int,*(struct(int,int,int,*(int))))->(int)
(	O
head	int
,	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
}	O
else	O
{	O
if	O
(	O
x	double
>	O
state	*(int)
->	O
xprev	double
)	O
{	O
deque_pop_back	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
while	O
(	O
!	O
deque_is_empty	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
)	O
{	O
if	O
(	O
x	double
<=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
array	*(int)
[	O
deque_peek_back	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
]	O
)	O
break	O
;	O
deque_pop_back	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
}	O
}	O
else	O
{	O
deque_pop_back	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
while	O
(	O
!	O
deque_is_empty	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
)	O
{	O
if	O
(	O
x	double
>=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
array	*(int)
[	O
deque_peek_back	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
]	O
)	O
break	O
;	O
deque_pop_back	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
}	O
}	O
tail	int
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
tail	int
;	O
ringbuf_insert	(double,*(struct(*(double),int,int,int)))->(int)
(	O
x	double
,	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
)	O
;	O
head	int
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
head	int
;	O
deque_push_back	(int,*(struct(int,int,int,*(int))))->(int)
(	O
head	int
,	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
deque_push_back	(int,*(struct(int,int,int,*(int))))->(int)
(	O
head	int
,	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
if	O
(	O
state	*(int)
->	O
k	long
==	O
state	*(int)
->	O
n	int
)	O
{	O
if	O
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
->	O
head	int
!=	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
->	O
tail	int
&&	O
tail	int
==	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
)	O
deque_pop_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
else	O
if	O
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
->	O
head	int
!=	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
->	O
tail	int
&&	O
tail	int
==	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
)	O
deque_pop_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
}	O
}	O
if	O
(	O
state	*(int)
->	O
k	long
<	O
state	*(int)
->	O
n	int
)	O
++	O
(	O
state	*(int)
->	O
k	long
)	O
;	O
state	*(int)
->	O
xprev	double
=	O
x	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
mmacc_delete	(*(void))->(int)
(	O
void	O
*	O
vstate	*(void)
)	O
{	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
state	*(int)
=	O
(	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
)	O
vstate	*(void)
;	O
if	O
(	O
state	*(int)
->	O
k	long
>	O
0	int
)	O
{	O
if	O
(	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
tail	int
==	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
)	O
deque_pop_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
;	O
else	O
if	O
(	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
tail	int
==	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
)	O
deque_pop_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
;	O
ringbuf_pop_back	(*(struct(*(double),int,int,int)))->(int)
(	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
)	O
;	O
--	O
(	O
state	*(int)
->	O
k	long
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
mmacc_min	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
mmacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
{	O
const	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
state	*(int)
=	O
(	O
const	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
)	O
vstate	*(void)
;	O
(	O
void	O
)	O
params	*(void)
;	O
if	O
(	O
state	*(int)
->	O
k	long
==	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"no samples yet added to workspace"	*(char)
,	O
GSL_EINVAL	int
)	O
;	O
}	O
else	O
{	O
*	O
result	*(double)
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
array	*(int)
[	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
]	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
static	O
int	O
mmacc_max	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
mmacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
{	O
const	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
state	*(int)
=	O
(	O
const	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
)	O
vstate	*(void)
;	O
(	O
void	O
)	O
params	*(void)
;	O
if	O
(	O
state	*(int)
->	O
k	long
==	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"no samples yet added to workspace"	*(char)
,	O
GSL_EINVAL	int
)	O
;	O
}	O
else	O
{	O
*	O
result	*(double)
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
array	*(int)
[	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
]	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
static	O
int	O
mmacc_minmax	(*(void),*(double),*(void))->(int)
(	O
void	O
*	O
params	*(void)
,	O
mmacc_type_t	double
*	O
result	*(double)
,	O
const	O
void	O
*	O
vstate	*(void)
)	O
{	O
const	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
state	*(int)
=	O
(	O
const	O
mmacc_state_t	struct(long,long,double,*(struct(*(double),int,int,int)),*(struct(int,int,int,*(int))),*(struct(int,int,int,*(int))))
*	O
)	O
vstate	*(void)
;	O
(	O
void	O
)	O
params	*(void)
;	O
if	O
(	O
state	*(int)
->	O
k	long
==	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"no samples yet added to workspace"	*(char)
,	O
GSL_EINVAL	int
)	O
;	O
}	O
else	O
{	O
result	*(double)
[	O
0	int
]	O
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
array	*(int)
[	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
minque	*(struct(int,int,int,*(int)))
)	O
]	O
;	O
result	*(double)
[	O
1	int
]	O
=	O
state	*(int)
->	O
rbuf	*(struct(*(double),int,int,int))
->	O
array	*(int)
[	O
deque_peek_front	(*(struct(int,int,int,*(int))))->(int)
(	O
state	*(int)
->	O
maxque	*(struct(int,int,int,*(int)))
)	O
]	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
static	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
min_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
=	O
{	O
mmacc_size	(long)->(long)
,	O
mmacc_init	(long,*(void))->(int)
,	O
mmacc_insert	(double,*(void))->(int)
,	O
mmacc_delete	(*(void))->(int)
,	O
mmacc_min	(*(void),*(double),*(void))->(int)
}	O
;	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
*	O
gsl_movstat_accum_min	*(struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int))))
=	O
&	O
min_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
;	O
static	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
max_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
=	O
{	O
mmacc_size	(long)->(long)
,	O
mmacc_init	(long,*(void))->(int)
,	O
mmacc_insert	(double,*(void))->(int)
,	O
mmacc_delete	(*(void))->(int)
,	O
mmacc_max	(*(void),*(double),*(void))->(int)
}	O
;	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
*	O
gsl_movstat_accum_max	*(struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int))))
=	O
&	O
max_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
;	O
static	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
minmax_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
=	O
{	O
mmacc_size	(long)->(long)
,	O
mmacc_init	(long,*(void))->(int)
,	O
mmacc_insert	(double,*(void))->(int)
,	O
mmacc_delete	(*(void))->(int)
,	O
mmacc_minmax	(*(void),*(double),*(void))->(int)
}	O
;	O
const	O
gsl_movstat_accum	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
*	O
gsl_movstat_accum_minmax	*(struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int))))
=	O
&	O
minmax_accum_type	struct(*((long)->(long)),*((long,*(void))->(int)),*((double,*(void))->(int)),*((*(void))->(int)),*((*(void),*(double),*(void))->(int)))
;	O
