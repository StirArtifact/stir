static	O
struct	O
err	long
{	O
int	O
code	int
;	O
char	O
string	*(char)
[	O
1024	int
]	O
;	O
}	O
errorRec	struct(int,array(char))
;	O
static	O
rpmErrorCallBackType	*(()->(void))
errorCallback	*(()->(void))
=	O
NULL	O
;	O
int	O
rpmErrorCode	()->(int)
(	O
void	O
)	O
{	O
return	O
errorRec	struct(int,array(char))
.	O
code	int
;	O
}	O
char	O
*	O
rpmErrorCodeString	()->(*(char))
(	O
void	O
)	O
{	O
return	O
NULL	O
;	O
}	O
char	O
*	O
rpmErrorString	()->(*(char))
(	O
void	O
)	O
{	O
return	O
errorRec	struct(int,array(char))
.	O
string	*(char)
;	O
}	O
rpmErrorCallBackType	*(()->(void))
rpmErrorSetCallback	(*(()->(void)))->(*(()->(void)))
(	O
rpmErrorCallBackType	*(()->(void))
cb	*(()->(void))
)	O
{	O
rpmErrorCallBackType	*(()->(void))
ocb	*(()->(void))
;	O
ocb	*(()->(void))
=	O
errorCallback	*(()->(void))
;	O
errorCallback	*(()->(void))
=	O
cb	*(()->(void))
;	O
return	O
ocb	*(()->(void))
;	O
}	O
void	O
rpmError	(int,*(char))->(void)
(	O
int	O
code	int
,	O
char	O
*	O
format	*(char)
,	O
...	O
)	O
{	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
;	O
va_start	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
format	*(char)
)	O
;	O
errorRec	struct(int,array(char))
.	O
code	int
=	O
code	int
;	O
vsprintf	(*(char),*(char),array(struct(int,int,*(void),*(void))))->(int)
(	O
errorRec	struct(int,array(char))
.	O
string	*(char)
,	O
format	*(char)
,	O
args	array(struct(int,int,*(void),*(void)))
)	O
;	O
if	O
(	O
errorCallback	*(()->(void))
)	O
{	O
errorCallback	*(()->(void))
(	O
)	O
;	O
}	O
else	O
{	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
errorRec	struct(int,array(char))
.	O
string	*(char)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fputs	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
"\n"	*(char)
,	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
}	O
