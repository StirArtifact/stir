void	O
local_who	()->(void)
(	O
)	O
;	O
void	O
radius_who	()->(void)
(	O
)	O
;	O
void	O
print_header	()->(void)
(	O
)	O
;	O
int	O
want_rad_record	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
;	O
int	O
fingerd	int
;	O
int	O
secure	int
;	O
int	O
showlocal	int
;	O
int	O
display_header	int
=	O
1	int
;	O
int	O
showall	int
;	O
char	O
*	O
username	*(char)
=	O
NULL	O
;	O
char	O
*	O
filename	*(char)
=	O
NULL	O
;	O
char	O
*	O
eol	*(char)
=	O
"\n"	*(char)
;	O
static	O
struct	O
{	O
char	O
*	O
name	*(char)
;	O
char	O
*	O
fmt	*(char)
;	O
}	O
fmtdef	array(struct(*(char),*(char)))
[	O
]	O
=	O
{	O
{	O
"default"	*(char)
,	O
"(login 10 Login) (gecos 17 Name) (protocol 5 Proto) (nas-port 5 TTY) (time 9 When) (nas-address 9 From) (framed-address 16 Location)"	*(char)
}	O
,	O
{	O
"sid"	*(char)
,	O
"(login 10 Login) (session-id 17 SID) (protocol 5 Proto) (nas-port 5 TTY) (time 9 When) (nas-address 9 From) (framed-address 16 Location)"	*(char)
}	O
,	O
{	O
"clid"	*(char)
,	O
"(login 10 Login) (clid 17 CLID) (protocol 5 Proto) (nas-port 5 TTY) (time 9 When) (nas-address 9 From) (framed-address 16 Location)"	*(char)
}	O
,	O
{	O
"long"	*(char)
,	O
"(login 32 Login) (session-id 32 SID) (protocol 5 Proto) (nas-port 5 Port) (time 27 Date) (nas-address 32 NAS) (clid 17 CLID) (duration 7 Duration) (framed-address 16 Location) (realm 16 Realm)"	*(char)
}	O
,	O
{	O
"gnu"	*(char)
,	O
"User: (login)(newline)In real life: (gecos)(newline)Logged in: (time :format %c)(newline)NAS: (nas-address)(newline)Port: (nas-port)(newline)CLID: (clid)(newline)Protocol: (protocol)(newline)Session ID: (session-id)(newline)Uptime: (duration)(newline)Assigned IP: (framed-address)(newline)Realm: (realm)(newline)"	*(char)
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
static	O
char	O
*	O
lookup_format	(*(char))->(*(char))
(	O
char	O
*	O
name	*(char)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
fmtdef	array(struct(*(char),*(char)))
[	O
i	int
]	O
.	O
name	*(char)
;	O
i	int
++	O
)	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
fmtdef	array(struct(*(char),*(char)))
[	O
i	int
]	O
.	O
name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
return	O
fmtdef	array(struct(*(char),*(char)))
[	O
i	int
]	O
.	O
fmt	*(char)
;	O
return	O
name	*(char)
;	O
}	O
char	O
*	O
fmtspec	*(char)
=	O
NULL	O
;	O
format_data_t	struct
*	O
form	*(struct)
;	O
const	O
char	O
*	O
argp_program_version	*(char)
=	O
"radwho ("	*(char)
PACKAGE	*(char)
") "	*(char)
VERSION	*(char)
;	O
static	O
char	O
doc	*(char)
[	O
]	O
=	O
N_	O
(	O
"display who is logged on by Radius"	*(char)
)	O
;	O
static	O
struct	O
argp_option	struct(*(char),int,*(char),int,*(char),int)
options	*(struct(*(char),int,*(char),int,*(char),int))
[	O
]	O
=	O
{	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"radwho specific switches:"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"all"	*(char)
,	O
'A'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"print all entries, not only active ones"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"calling-id"	*(char)
,	O
'c'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"display CLID in second column"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"date-format"	*(char)
,	O
'D'	O
,	O
N_	O
(	O
"DATEFMT"	*(char)
)	O
,	O
0	int
,	O
N_	O
(	O
"change date representation format"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"empty"	*(char)
,	O
'e'	O
,	O
N_	O
(	O
"STRING"	*(char)
)	O
,	O
0	int
,	O
N_	O
(	O
"print STRING instead of an empty column"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"file"	*(char)
,	O
'f'	O
,	O
N_	O
(	O
"FILE"	*(char)
)	O
,	O
0	int
,	O
N_	O
(	O
"Use FILE instead of /var/log/radutmp"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"finger"	*(char)
,	O
'F'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"act as a finger daemon"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"no-header"	*(char)
,	O
'H'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"do not display header line"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"session-id"	*(char)
,	O
'i'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"display session ID in the second column"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"ip-strip-domain"	*(char)
,	O
'I'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"display hostnames without domain part"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"long"	*(char)
,	O
'l'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"Long output. All fields will be printed."	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"local-also"	*(char)
,	O
'u'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"display also local users"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"no-resolve"	*(char)
,	O
'n'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"do not resolve hostnames."	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"format"	*(char)
,	O
'o'	O
,	O
N_	O
(	O
"FORMAT"	*(char)
)	O
,	O
0	int
,	O
N_	O
(	O
"change output format"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
"secure"	*(char)
,	O
's'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"secure mode: requires that the username be specified"	*(char)
)	O
,	O
0	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
error_t	int
parse_opt	(int,*(char),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),int,*(*(char)),int,int,int,int,*(void),*(*(void)),*(void),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void))))->(int)
(	O
int	O
key	int
,	O
char	O
*	O
arg	*(char)
,	O
struct	O
argp_state	struct(*(struct(*(struct(*(char),int,*(char),int,*(char),int)),*((int,*(char),*(struct`))->(int)),*(char),*(char),*(struct(*(struct`),int,*(char),int)),*((int,*(char),*(void))->(*(char))),*(char))),int,*(*(char)),int,int,int,int,*(void),*(*(void)),*(void),*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char))),*(void))
*	O
state	*(int)
)	O
{	O
switch	O
(	O
key	int
)	O
{	O
case	O
'A'	O
:	O
showall	int
++	O
;	O
break	O
;	O
case	O
'c'	O
:	O
fmtspec	*(char)
=	O
lookup_format	(*(char))->(*(char))
(	O
"clid"	*(char)
)	O
;	O
break	O
;	O
case	O
'D'	O
:	O
grad_printutmp_date_format	*(char)
=	O
arg	*(char)
;	O
break	O
;	O
case	O
'e'	O
:	O
grad_printutmp_empty_string	*(char)
=	O
arg	*(char)
;	O
break	O
;	O
case	O
'f'	O
:	O
filename	*(char)
=	O
arg	*(char)
;	O
break	O
;	O
case	O
'F'	O
:	O
fingerd	int
++	O
;	O
break	O
;	O
case	O
'H'	O
:	O
display_header	int
=	O
0	int
;	O
break	O
;	O
case	O
'i'	O
:	O
fmtspec	*(char)
=	O
lookup_format	(*(char))->(*(char))
(	O
"sid"	*(char)
)	O
;	O
break	O
;	O
case	O
'I'	O
:	O
break	O
;	O
case	O
'l'	O
:	O
fmtspec	*(char)
=	O
lookup_format	(*(char))->(*(char))
(	O
"long"	*(char)
)	O
;	O
break	O
;	O
case	O
'n'	O
:	O
grad_resolve_hostnames	int
=	O
0	int
;	O
break	O
;	O
case	O
'o'	O
:	O
fmtspec	*(char)
=	O
lookup_format	(*(char))->(*(char))
(	O
arg	*(char)
)	O
;	O
break	O
;	O
case	O
's'	O
:	O
secure	int
++	O
;	O
break	O
;	O
case	O
'u'	O
:	O
showlocal	int
++	O
;	O
break	O
;	O
default	O
:	O
return	O
ARGP_ERR_UNKNOWN	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
struct	O
argp	struct(*(struct(*(char),int,*(char),int,*(char),int)),*((int,*(char),*(struct))->(int)),*(char),*(char),*(struct),*((int,*(char),*(void))->(*(char))),*(char))
argp	struct(*(struct(*(char),int,*(char),int,*(char),int)),*((int,*(char),*(struct))->(int)),*(char),*(char),*(struct),*((int,*(char),*(void))->(*(char))),*(char))
=	O
{	O
options	*(struct(*(char),int,*(char),int,*(char),int))
,	O
parse_opt	(int,*(char),*(struct(*(struct(*`,*`,*`,*`,*`,*`,*`)),int,*(*(char)),int,int,int,int,*(void),*(*(void)),*(void),*(char),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void))))->(int)
,	O
NULL	O
,	O
doc	*(char)
,	O
grad_common_argp_child	array(struct(*(struct(*(struct(*`,int,*`,int,*`,int)),*((int,*`,*`)->(int)),*(char),*(char),*(struct(*`,int,*`,int)),*((int,*`,*`)->(*`)),*(char))),int,*(char),int))
,	O
NULL	O
,	O
NULL	O
}	O
;	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
inbuf	array(char)
[	O
128	int
]	O
;	O
char	O
*	O
path	*(char)
;	O
char	O
*	O
p	*(struct)
,	O
*	O
q	*(char)
;	O
int	O
index	(*(char),int)->(*(char))
;	O
grad_app_setup	()->(void)
(	O
)	O
;	O
if	O
(	O
grad_argp_parse	(*(struct(*(struct(*`,int,*`,int,*`,int)),*((int,*`,*`)->(int)),*(char),*(char),*(struct(*`,int,*`,int)),*((int,*`,*`)->(*`)),*(char))),*(int),array(*(*(char))),int,*(int),*(void))->(int)
(	O
&	O
argp	struct(*(struct(*(char),int,*(char),int,*(char),int)),*((int,*(char),*(struct))->(int)),*(char),*(char),*(struct),*((int,*(char),*(void))->(*(char))),*(char))
,	O
&	O
argc	int
,	O
&	O
argv	*(*(char))
,	O
0	int
,	O
&	O
index	(*(char),int)->(*(char))
,	O
NULL	O
)	O
)	O
return	O
1	int
;	O
if	O
(	O
!	O
fmtspec	*(char)
)	O
fmtspec	*(char)
=	O
getenv	(*(char))->(*(char))
(	O
"RADWHO_FORMAT"	*(char)
)	O
;	O
if	O
(	O
!	O
fmtspec	*(char)
)	O
fmtspec	*(char)
=	O
lookup_format	(*(char))->(*(char))
(	O
"default"	*(char)
)	O
;	O
form	*(struct)
=	O
grad_utent_compile_form	(*(char))->(*(struct))
(	O
fmtspec	*(char)
)	O
;	O
if	O
(	O
!	O
form	*(struct)
)	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
if	O
(	O
!	O
filename	*(char)
)	O
filename	*(char)
=	O
grad_utmp_file	*(char)
;	O
grad_dict_init	()->(int)
(	O
)	O
;	O
path	*(char)
=	O
grad_mkfilename	(*(char),*(char))->(*(char))
(	O
grad_config_dir	*(char)
,	O
RADIUS_NASLIST	*(char)
)	O
;	O
if	O
(	O
grad_nas_read_file	(*(char))->(int)
(	O
path	*(char)
)	O
)	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
grad_free	(*(void))->(void)
(	O
path	*(char)
)	O
;	O
path	*(char)
=	O
grad_mkfilename	(*(char),*(char))->(*(char))
(	O
grad_config_dir	*(char)
,	O
RADIUS_REALMS	*(char)
)	O
;	O
grad_read_realms	(*(char),int,int,*(()->(int)))->(int)
(	O
path	*(char)
,	O
0	int
,	O
0	int
,	O
NULL	O
)	O
;	O
grad_free	(*(void))->(void)
(	O
path	*(char)
)	O
;	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
argv	*(*(char))
[	O
0	int
]	O
,	O
"fingerd"	*(char)
)	O
)	O
fingerd	int
++	O
;	O
if	O
(	O
fingerd	int
)	O
{	O
eol	*(char)
=	O
"\r\n"	*(char)
;	O
fgets	(*(char),int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(char))
(	O
inbuf	array(char)
,	O
sizeof	O
(	O
inbuf	array(char)
)	O
,	O
stdin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
p	*(struct)
=	O
inbuf	array(char)
;	O
while	O
(	O
*	O
p	*(struct)
==	O
' '	O
||	O
*	O
p	*(struct)
==	O
'\t'	O
)	O
p	*(struct)
++	O
;	O
if	O
(	O
*	O
p	*(struct)
==	O
'/'	O
&&	O
*	O
(	O
p	*(struct)
+	O
1	int
)	O
)	O
p	*(struct)
+=	O
2	int
;	O
while	O
(	O
*	O
p	*(struct)
==	O
' '	O
||	O
*	O
p	*(struct)
==	O
'\t'	O
)	O
p	*(struct)
++	O
;	O
for	O
(	O
q	*(char)
=	O
p	*(struct)
;	O
*	O
q	*(char)
&&	O
*	O
q	*(char)
!=	O
'\r'	O
&&	O
*	O
q	*(char)
!=	O
'\n'	O
;	O
q	*(char)
++	O
)	O
;	O
*	O
q	*(char)
=	O
0	int
;	O
if	O
(	O
*	O
p	*(struct)
)	O
username	*(char)
=	O
p	*(struct)
;	O
if	O
(	O
secure	int
&&	O
username	*(char)
==	O
0	int
)	O
{	O
printf	(*(char))->(int)
(	O
_	O
(	O
"must provide username\n"	*(char)
)	O
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
showlocal	int
)	O
local_who	()->(void)
(	O
)	O
;	O
radius_who	()->(void)
(	O
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
fflush	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
return	O
0	int
;	O
}	O
void	O
tty_to_port	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))),*(char))->(void)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
char	O
*	O
tty	*(char)
)	O
{	O
char	O
*	O
p	*(struct)
;	O
p	*(struct)
=	O
tty	*(char)
+	O
strlen	(*(char))->(long)
(	O
tty	*(char)
)	O
-	O
1	int
;	O
while	O
(	O
p	*(struct)
>=	O
tty	*(char)
&&	O
isdigit	(int)->(int)
(	O
*	O
p	*(struct)
)	O
)	O
p	*(struct)
--	O
;	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
nas_port	int
=	O
atoi	(*(char))->(int)
(	O
p	*(struct)
+	O
1	int
)	O
;	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
porttype	int
=	O
0	int
;	O
}	O
void	O
local_who	()->(void)
(	O
)	O
{	O
FILE	struct
*	O
fp	*((*(void),*(char),*(struct(*(char),int,int,int,int,*((*`,*`)->(int)))))->(int))
;	O
struct	O
utmp	struct(short,int,array(char),array(char),array(char),array(char),struct(short,short),int,struct(int,int),array(int),array(char))
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
if	O
(	O
(	O
fp	*((*(void),*(char),*(struct(*(char),int,int,int,int,*((*`,*`)->(int)))))->(int))
=	O
fopen	(*(char),*(char))->(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))
(	O
UTMP_FILE	O
,	O
"r"	*(char)
)	O
)	O
==	O
NULL	O
)	O
{	O
grad_log	(int,*(char))->(void)
(	O
GRAD_LOG_ERR	int
,	O
_	O
(	O
"can't open file: %s"	*(char)
)	O
,	O
UTMP_FILE	O
)	O
;	O
return	O
;	O
}	O
print_header	()->(void)
(	O
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
&	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
0	int
,	O
sizeof	O
(	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
;	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
nas_address	int
=	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
framed_address	int
=	O
htonl	(int)->(int)
(	O
INADDR_LOOPBACK	O
)	O
;	O
while	O
(	O
fread	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
sizeof	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
,	O
1	int
,	O
fp	*((*(void),*(char),*(struct(*(char),int,int,int,int,*((*`,*`)->(int)))))->(int))
)	O
==	O
1	int
)	O
{	O
if	O
(	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_user	array(char)
[	O
0	int
]	O
&&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_line	array(char)
[	O
0	int
]	O
&&	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_type	short
==	O
USER_PROCESS	int
)	O
{	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
type	int
=	O
P_CONSOLE	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
login	array(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_name	O
,	O
RUT_NAMESIZE	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
orig_login	array(char)
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_host	array(char)
,	O
RUT_NAMESIZE	int
)	O
;	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
time	struct(long,long)
=	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_time	O
;	O
tty_to_port	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))),*(char))->(void)
(	O
&	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
ut	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
.	O
ut_line	array(char)
)	O
;	O
if	O
(	O
want_rad_record	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
&	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
grad_utent_print	()->(int)
(	O
form	*(struct)
,	O
&	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
1	int
)	O
;	O
}	O
}	O
fclose	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*((*(void),*(char),*(struct(*(char),int,int,int,int,*((*`,*`)->(int)))))->(int))
)	O
;	O
}	O
void	O
radius_who	()->(void)
(	O
)	O
{	O
radut_file_t	*(struct)
file	*(char)
;	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
;	O
print_header	()->(void)
(	O
)	O
;	O
if	O
(	O
(	O
file	*(char)
=	O
grad_ut_setent	(*(char),int)->(*(struct))
(	O
filename	*(char)
,	O
0	int
)	O
)	O
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
=	O
grad_ut_getent	(*(struct))->(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))
(	O
file	*(char)
)	O
)	O
{	O
if	O
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	int
==	O
P_ACCT_DISABLED	int
)	O
printf	(*(char))->(int)
(	O
_	O
(	O
"System accounting is disabled\n"	*(char)
)	O
)	O
;	O
else	O
if	O
(	O
want_rad_record	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
)	O
grad_utent_print	()->(int)
(	O
form	*(struct)
,	O
up	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
,	O
1	int
)	O
;	O
}	O
grad_ut_endent	(*(struct))->(void)
(	O
file	*(char)
)	O
;	O
}	O
void	O
print_header	()->(void)
(	O
)	O
{	O
if	O
(	O
display_header	int
)	O
{	O
grad_utent_print_header	(*(struct))->(void)
(	O
form	*(struct)
)	O
;	O
display_header	int
=	O
0	int
;	O
}	O
}	O
int	O
want_rad_record	(*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))))->(int)
(	O
struct	O
radutmp	struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char))
*	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
)	O
{	O
if	O
(	O
(	O
username	*(char)
&&	O
strcmp	(*(char),*(char))->(int)
(	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
,	O
username	*(char)
)	O
)	O
||	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	int
==	O
P_ACCT_ENABLED	int
)	O
return	O
0	int
;	O
switch	O
(	O
showall	int
)	O
{	O
case	O
0	int
:	O
return	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	int
!=	O
P_IDLE	int
;	O
case	O
1	int
:	O
return	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
[	O
0	int
]	O
!=	O
0	int
;	O
case	O
2	int
:	O
default	O
:	O
return	O
(	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
type	int
==	O
P_IDLE	int
&&	O
rt	*(struct(array(char),array(char),int,array(char),int,int,int,long,long,int,int,long,array(char),int,array(char)))
->	O
login	array(char)
[	O
0	int
]	O
!=	O
0	int
)	O
;	O
}	O
}	O
