struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
{	O
union	O
{	O
uid_t	int
u	int
;	O
gid_t	int
g	int
;	O
}	O
id	union(int,int)
;	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
char	O
name	array(char)
[	O
FLEXIBLE_ARRAY_MEMBER	O
]	O
;	O
}	O
;	O
static	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
static	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
nouser_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
static	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
static	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
nogroup_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
char	O
*	O
getuser	(int)->(*(char))
(	O
uid_t	int
uid	int
)	O
{	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
NULL	O
;	O
for	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
)	O
{	O
if	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
u	int
==	O
uid	int
)	O
{	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
break	O
;	O
}	O
}	O
if	O
(	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
==	O
NULL	O
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
uid	int
)	O
;	O
char	O
const	O
*	O
name	array(char)
=	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
?	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
:	O
""	*(char)
;	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
xmalloc	(long)->(*(void))
(	O
offsetof	O
(	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
,	O
name	array(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
name	array(char)
)	O
+	O
1	int
)	O
;	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
u	int
=	O
uid	int
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
name	array(char)
)	O
;	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
}	O
return	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
[	O
0	int
]	O
?	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
:	O
NULL	O
;	O
}	O
uid_t	int
*	O
getuidbyname	(*(char))->(*(int))
(	O
const	O
char	O
*	O
user	*(char)
)	O
{	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
for	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
==	O
*	O
user	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
user	*(char)
)	O
)	O
return	O
&	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
u	int
;	O
for	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
nouser_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
==	O
*	O
user	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
user	*(char)
)	O
)	O
return	O
NULL	O
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
user	*(char)
)	O
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
xmalloc	(long)->(*(void))
(	O
offsetof	O
(	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
,	O
name	array(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
user	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
user	*(char)
)	O
;	O
if	O
(	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
u	int
=	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
user_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
return	O
&	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
u	int
;	O
}	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
nouser_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
nouser_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
return	O
NULL	O
;	O
}	O
char	O
*	O
getgroup	(int)->(*(char))
(	O
gid_t	int
gid	int
)	O
{	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
NULL	O
;	O
for	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
)	O
{	O
if	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
g	int
==	O
gid	int
)	O
{	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
break	O
;	O
}	O
}	O
if	O
(	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
==	O
NULL	O
)	O
{	O
struct	O
group	*(char)
*	O
grent	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrgid	(int)->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
gid	int
)	O
;	O
char	O
const	O
*	O
name	array(char)
=	O
grent	*(struct(*(char),*(char),int,*(*(char))))
?	O
grent	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_name	*(char)
:	O
""	*(char)
;	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
xmalloc	(long)->(*(void))
(	O
offsetof	O
(	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
,	O
name	array(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
name	array(char)
)	O
+	O
1	int
)	O
;	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
g	int
=	O
gid	int
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
name	array(char)
)	O
;	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
}	O
return	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
[	O
0	int
]	O
?	O
match	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
:	O
NULL	O
;	O
}	O
gid_t	int
*	O
getgidbyname	(*(char))->(*(int))
(	O
const	O
char	O
*	O
group	*(char)
)	O
{	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
struct	O
group	*(char)
*	O
grent	*(struct(*(char),*(char),int,*(*(char))))
;	O
for	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
==	O
*	O
group	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
group	*(char)
)	O
)	O
return	O
&	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
g	int
;	O
for	O
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
nogroup_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
)	O
if	O
(	O
*	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
==	O
*	O
group	*(char)
&&	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
group	*(char)
)	O
)	O
return	O
NULL	O
;	O
grent	*(struct(*(char),*(char),int,*(*(char))))
=	O
getgrnam	(*(char))->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
group	*(char)
)	O
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
xmalloc	(long)->(*(void))
(	O
offsetof	O
(	O
struct	O
userid	struct(union(int,int),*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char))),array(char))
,	O
name	array(char)
)	O
+	O
strlen	(*(char))->(long)
(	O
group	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
name	array(char)
,	O
group	*(char)
)	O
;	O
if	O
(	O
grent	*(struct(*(char),*(char),int,*(*(char))))
)	O
{	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
g	int
=	O
grent	*(struct(*(char),*(char),int,*(*(char))))
->	O
gr_gid	int
;	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
group_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
return	O
&	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
id	union(int,int)
.	O
g	int
;	O
}	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
->	O
next	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
nogroup_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
nogroup_alist	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
=	O
tail	*(struct(union(int,int),*(struct(union(int,int),*(struct`),array(char))),array(char)))
;	O
return	O
NULL	O
;	O
}	O
