int	O
mu_pop3_retr	(*(struct),int,*(*(struct)))->(int)
(	O
mu_pop3_t	*(struct)
pop3	*(*(struct))
,	O
unsigned	O
int	O
msgno	int
,	O
mu_stream_t	*(struct)
*	O
pstream	*(*(struct))
)	O
{	O
int	O
status	int
=	O
EINPROGRESS	int
;	O
if	O
(	O
pop3	*(*(struct))
==	O
NULL	O
||	O
msgno	int
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pstream	*(*(struct))
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
switch	O
(	O
pop3	*(*(struct))
->	O
state	*(int)
)	O
{	O
case	O
MU_POP3_NO_STATE	int
:	O
status	int
=	O
mu_pop3_writeline	(*(struct),*(char))->(int)
(	O
pop3	*(*(struct))
,	O
"RETR %d\r\n"	*(char)
,	O
msgno	int
)	O
;	O
MU_POP3_CHECK_ERROR	O
(	O
pop3	*(*(struct))
,	O
status	int
)	O
;	O
MU_POP3_FCLR	O
(	O
pop3	*(*(struct))
,	O
MU_POP3_ACK	int
)	O
;	O
pop3	*(*(struct))
->	O
state	*(int)
=	O
MU_POP3_RETR	int
;	O
case	O
MU_POP3_RETR	int
:	O
status	int
=	O
mu_pop3_response	(*(struct),*(long))->(int)
(	O
pop3	*(*(struct))
,	O
NULL	O
)	O
;	O
MU_POP3_CHECK_EAGAIN	O
(	O
pop3	*(*(struct))
,	O
status	int
)	O
;	O
MU_POP3_CHECK_OK	O
(	O
pop3	*(*(struct))
)	O
;	O
status	int
=	O
mu_pop3_stream_create	(*(struct(int,*(char),long,*(char),long,*(char),int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct),*(struct))),*(*(struct)))->(int)
(	O
pop3	*(*(struct))
,	O
pstream	*(*(struct))
)	O
;	O
MU_POP3_CHECK_ERROR	O
(	O
pop3	*(*(struct))
,	O
status	int
)	O
;	O
if	O
(	O
mu_pop3_trace_mask	(*(struct),int,int)->(int)
(	O
pop3	*(*(struct))
,	O
MU_POP3_TRACE_QRY	int
,	O
MU_XSCRIPT_PAYLOAD	int
)	O
)	O
_mu_pop3_xscript_level	(*(struct(int,*(char),long,*(char),long,*(char),int,enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),*(struct),*(struct))),int)->(int)
(	O
pop3	*(*(struct))
,	O
MU_XSCRIPT_PAYLOAD	int
)	O
;	O
pop3	*(*(struct))
->	O
state	*(int)
=	O
MU_POP3_RETR_RX	int
;	O
case	O
MU_POP3_RETR_RX	int
:	O
break	O
;	O
case	O
MU_POP3_ERROR	int
:	O
status	int
=	O
ECANCELED	int
;	O
break	O
;	O
default	O
:	O
status	int
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	int
;	O
}	O
