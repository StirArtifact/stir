FILE	struct
*	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
column_stdout	int
;	O
int	O
column_stderr	int
;	O
int	O
*	O
column	*(int)
=	O
&	O
column_stdout	int
;	O
int	O
had_output	int
;	O
struct	O
format_handle	struct(*(char),*((*(struct(*(char),*(struct`),int,int,*(char),int)),int,*(*(char)))->(void)))
format_handles	array(struct(*(char),*((*(struct(*`,*`,int,int,*`,int)),int,*(*(char)))->(void))))
[	O
]	O
=	O
{	O
SYSTEM_FORMAT_HANDLER	O
{	O
""	*(char)
,	O
fh_nothing	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"format?"	*(char)
,	O
fh_format_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"docstr"	*(char)
,	O
fh_docstr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"defn"	*(char)
,	O
fh_defn	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"foreachformat"	*(char)
,	O
fh_foreachformat	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"verbose?"	*(char)
,	O
fh_verbose_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"newline"	*(char)
,	O
fh_newline	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"\\n"	*(char)
,	O
fh_newline	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"\\t"	*(char)
,	O
fh_tabulator	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"rep"	*(char)
,	O
fh_rep	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"first?"	*(char)
,	O
fh_first	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"ifdisplay?"	*(char)
,	O
fh_ifdisplay_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"tab"	*(char)
,	O
fh_tab	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"join"	*(char)
,	O
fh_join	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"exists?"	*(char)
,	O
fh_exists_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"format"	*(char)
,	O
fh_format	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"error"	*(char)
,	O
fh_error	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"progname"	*(char)
,	O
fh_progname	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"exit"	*(char)
,	O
fh_exit	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"name"	*(char)
,	O
fh_name	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"index?"	*(char)
,	O
fh_index_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"index"	*(char)
,	O
fh_index	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"addr?"	*(char)
,	O
fh_addr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"addr"	*(char)
,	O
fh_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"netmask?"	*(char)
,	O
fh_netmask_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"netmask"	*(char)
,	O
fh_netmask	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"brdaddr?"	*(char)
,	O
fh_brdaddr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"brdaddr"	*(char)
,	O
fh_brdaddr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"dstaddr?"	*(char)
,	O
fh_dstaddr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"dstaddr"	*(char)
,	O
fh_dstaddr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"flags?"	*(char)
,	O
fh_flags_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"flags"	*(char)
,	O
fh_flags	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"mtu?"	*(char)
,	O
fh_mtu_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"mtu"	*(char)
,	O
fh_mtu	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"metric?"	*(char)
,	O
fh_metric_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"metric"	*(char)
,	O
fh_metric	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"map?"	*(char)
,	O
fh_map_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"irq?"	*(char)
,	O
fh_irq_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"irq"	*(char)
,	O
fh_irq	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"baseaddr?"	*(char)
,	O
fh_baseaddr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"baseaddr"	*(char)
,	O
fh_baseaddr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"memstart?"	*(char)
,	O
fh_memstart_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"memstart"	*(char)
,	O
fh_memstart	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"memend?"	*(char)
,	O
fh_memend_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"memend"	*(char)
,	O
fh_memend	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"dma?"	*(char)
,	O
fh_dma_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
"dma"	*(char)
,	O
fh_dma	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
}	O
,	O
{	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
void	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
char	O
c	char
)	O
{	O
switch	O
(	O
c	char
)	O
{	O
case	O
'\n'	O
:	O
*	O
column	*(int)
=	O
0	int
;	O
break	O
;	O
case	O
'\t'	O
:	O
*	O
column	*(int)
=	O
(	O
(	O
*	O
column	*(int)
/	O
TAB_STOP	int
)	O
+	O
1	int
)	O
*	O
TAB_STOP	int
;	O
break	O
;	O
default	O
:	O
(	O
*	O
column	*(int)
)	O
++	O
;	O
}	O
putc	(int,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
c	char
,	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
had_output	int
=	O
1	int
;	O
}	O
void	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
const	O
char	O
*	O
s	*(char)
)	O
{	O
while	O
(	O
*	O
s	*(char)
!=	O
'\0'	O
)	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
*	O
(	O
s	*(char)
++	O
)	O
)	O
;	O
}	O
void	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
int	O
nr	int
)	O
{	O
char	O
*	O
fmt	*(char)
;	O
if	O
(	O
argc	int
>	O
0	int
)	O
{	O
char	O
*	O
p	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
if	O
(	O
*	O
p	*(char)
!=	O
'%'	O
)	O
fmt	*(char)
=	O
"%i"	*(char)
;	O
else	O
{	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
'#'	O
)	O
p	*(char)
++	O
;	O
while	O
(	O
isdigit	(int)->(int)
(	O
*	O
p	*(char)
)	O
)	O
p	*(char)
++	O
;	O
if	O
(	O
(	O
*	O
p	*(char)
==	O
'h'	O
||	O
*	O
p	*(char)
==	O
'H'	O
)	O
&&	O
p	*(char)
[	O
1	int
]	O
)	O
++	O
p	*(char)
;	O
switch	O
(	O
*	O
p	*(char)
)	O
{	O
default	O
:	O
case	O
'i'	O
:	O
case	O
'd'	O
:	O
case	O
'D'	O
:	O
*	O
p	*(char)
=	O
'i'	O
;	O
break	O
;	O
case	O
'x'	O
:	O
case	O
'h'	O
:	O
*	O
p	*(char)
=	O
'x'	O
;	O
break	O
;	O
case	O
'X'	O
:	O
case	O
'H'	O
:	O
*	O
p	*(char)
=	O
'X'	O
;	O
break	O
;	O
case	O
'o'	O
:	O
case	O
'O'	O
:	O
*	O
p	*(char)
=	O
'o'	O
;	O
break	O
;	O
}	O
p	*(char)
++	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
fmt	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
}	O
}	O
else	O
fmt	*(char)
=	O
"%i"	*(char)
;	O
*	O
column	*(int)
+=	O
printf	(*(char))->(int)
(	O
fmt	*(char)
,	O
nr	int
)	O
;	O
had_output	int
=	O
1	int
;	O
}	O
void	O
put_ulong	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),long)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
unsigned	O
long	O
value	long
)	O
{	O
char	O
*	O
fmt	*(char)
;	O
if	O
(	O
argc	int
>	O
0	int
)	O
{	O
char	O
*	O
p	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
if	O
(	O
*	O
p	*(char)
!=	O
'%'	O
)	O
fmt	*(char)
=	O
"%lu"	*(char)
;	O
else	O
{	O
p	*(char)
++	O
;	O
while	O
(	O
isdigit	(int)->(int)
(	O
*	O
p	*(char)
)	O
)	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
'#'	O
)	O
p	*(char)
++	O
;	O
if	O
(	O
*	O
p	*(char)
==	O
'l'	O
)	O
p	*(char)
++	O
;	O
switch	O
(	O
*	O
p	*(char)
)	O
{	O
default	O
:	O
case	O
'i'	O
:	O
case	O
'd'	O
:	O
case	O
'D'	O
:	O
*	O
p	*(char)
=	O
'i'	O
;	O
break	O
;	O
case	O
'x'	O
:	O
case	O
'h'	O
:	O
*	O
p	*(char)
=	O
'x'	O
;	O
break	O
;	O
case	O
'X'	O
:	O
case	O
'H'	O
:	O
*	O
p	*(char)
=	O
'X'	O
;	O
break	O
;	O
case	O
'o'	O
:	O
case	O
'O'	O
:	O
*	O
p	*(char)
=	O
'o'	O
;	O
break	O
;	O
}	O
p	*(char)
++	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
fmt	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
}	O
}	O
else	O
fmt	*(char)
=	O
"%lu"	*(char)
;	O
*	O
column	*(int)
+=	O
printf	(*(char))->(int)
(	O
fmt	*(char)
,	O
value	long
)	O
;	O
had_output	int
=	O
1	int
;	O
}	O
void	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
int	O
nr	int
)	O
{	O
if	O
(	O
nr	int
<	O
argc	int
)	O
{	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
argv	array(*(char))
[	O
nr	int
]	O
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
0	int
)	O
;	O
}	O
}	O
void	O
put_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),*(struct(short,array(char))))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
struct	O
sockaddr	struct(short,array(char))
*	O
sa	*(struct(short,array(char)))
)	O
{	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
*	O
sin	*(struct(short,short,struct(int),array(char)))
=	O
(	O
struct	O
sockaddr_in	struct(short,short,struct(int),array(char))
*	O
)	O
sa	*(struct(short,array(char)))
;	O
char	O
*	O
addr	*(char)
=	O
inet_ntoa	(struct(int))->(*(char))
(	O
sin	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
)	O
;	O
long	O
byte	array(long)
[	O
4	int
]	O
;	O
char	O
*	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
addr	*(char)
,	O
'.'	O
)	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
byte	array(long)
[	O
0	int
]	O
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
addr	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
addr	*(char)
=	O
p	*(char)
+	O
1	int
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
addr	*(char)
,	O
'.'	O
)	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
byte	array(long)
[	O
1	int
]	O
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
addr	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
addr	*(char)
=	O
p	*(char)
+	O
1	int
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
addr	*(char)
,	O
'.'	O
)	O
;	O
*	O
p	*(char)
=	O
'\0'	O
;	O
byte	array(long)
[	O
2	int
]	O
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
addr	*(char)
,	O
NULL	O
,	O
0	int
)	O
;	O
byte	array(long)
[	O
3	int
]	O
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
p	*(char)
+	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
addr	*(char)
=	O
inet_ntoa	(struct(int))->(*(char))
(	O
sin	*(struct(short,short,struct(int),array(char)))
->	O
sin_addr	struct(int)
)	O
;	O
if	O
(	O
argc	int
>	O
0	int
)	O
{	O
long	O
i	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
i	long
>=	O
0	int
&&	O
i	long
<=	O
3	int
)	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
-	O
1	int
,	O
&	O
argv	array(*(char))
[	O
1	int
]	O
,	O
byte	array(long)
[	O
i	long
]	O
)	O
;	O
}	O
else	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
addr	*(char)
)	O
;	O
}	O
void	O
put_flags	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),short)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
short	O
flags	int
)	O
{	O
unsigned	O
short	O
int	O
f	short
=	O
1	int
;	O
const	O
char	O
*	O
name	*(char)
;	O
int	O
first	int
=	O
1	int
;	O
while	O
(	O
flags	int
&&	O
f	short
)	O
{	O
if	O
(	O
f	short
&	O
flags	int
)	O
{	O
name	*(char)
=	O
if_flagtoname	(int,*(char))->(*(char))
(	O
f	short
,	O
NULL	O
)	O
;	O
if	O
(	O
name	*(char)
)	O
{	O
if	O
(	O
!	O
first	int
)	O
{	O
if	O
(	O
argc	int
>	O
0	int
)	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argv	array(*(char))
[	O
0	int
]	O
)	O
;	O
else	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
' '	O
)	O
;	O
}	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
name	*(char)
)	O
;	O
flags	int
&=	O
~	O
f	short
;	O
first	int
=	O
0	int
;	O
}	O
}	O
f	short
=	O
f	short
<<	O
1	int
;	O
}	O
if	O
(	O
flags	int
)	O
{	O
if	O
(	O
!	O
first	int
)	O
{	O
if	O
(	O
argc	int
>	O
0	int
)	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argv	array(*(char))
[	O
0	int
]	O
)	O
;	O
else	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
' '	O
)	O
;	O
}	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
-	O
1	int
,	O
&	O
argv	array(*(char))
[	O
1	int
]	O
,	O
flags	int
)	O
;	O
}	O
}	O
void	O
put_flags_short	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),short)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
,	O
short	O
flags	int
)	O
{	O
char	O
buf	*(char)
[	O
IF_FORMAT_FLAGS_BUFSIZE	int
]	O
;	O
if_format_flags	(int,*(char),long)->(void)
(	O
flags	int
,	O
buf	*(char)
,	O
sizeof	O
buf	*(char)
)	O
;	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
buf	*(char)
)	O
;	O
}	O
void	O
format_handler	(*(char),*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
const	O
char	O
*	O
name	*(char)
,	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
struct	O
format_handle	struct(*(char),*((*(struct(*(char),*(struct`),int,int,*(char),int)),int,*(*(char)))->(void)))
*	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
;	O
for	O
(	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
=	O
format_handles	array(struct(*(char),*((*(struct(*`,*`,int,int,*`,int)),int,*(*(char)))->(void))))
;	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
->	O
name	*(char)
;	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
++	O
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
->	O
name	*(char)
,	O
name	*(char)
)	O
)	O
{	O
if	O
(	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
->	O
handler	*((*(struct(*(char),*(struct`),int,int,*(char),int)),int,*(*(char)))->(void))
)	O
(	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
->	O
handler	*((*(struct(*(char),*(struct`),int,int,*(char),int)),int,*(*(char)))->(void))
)	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
)	O
;	O
return	O
;	O
}	O
}	O
*	O
column	*(int)
+=	O
printf	(*(char))->(int)
(	O
"("	*(char)
)	O
;	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
name	*(char)
)	O
;	O
*	O
column	*(int)
+=	O
printf	(*(char))->(int)
(	O
" unknown)"	*(char)
)	O
;	O
had_output	int
=	O
1	int
;	O
}	O
void	O
fh_nothing	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
}	O
void	O
fh_format_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
argc	int
<	O
1	int
)	O
return	O
;	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
format_find	(*(char))->(*(struct(*(char),*(char),*(char))))
(	O
argv	array(*(char))
[	O
0	int
]	O
)	O
?	O
1	int
:	O
2	int
)	O
;	O
}	O
void	O
fh_docstr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
const	O
char	O
*	O
name	*(char)
;	O
struct	O
format	*(char)
*	O
frm	*(struct(*(char),*(char),*(char)))
;	O
name	*(char)
=	O
(	O
argc	int
==	O
0	int
)	O
?	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
:	O
argv	array(*(char))
[	O
0	int
]	O
;	O
frm	*(struct(*(char),*(char),*(char)))
=	O
format_find	(*(char))->(*(struct(*(char),*(char),*(char))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
frm	*(struct(*(char),*(char),*(char)))
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"unknown format: `%s'"	*(char)
,	O
name	*(char)
)	O
;	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
frm	*(struct(*(char),*(char),*(char)))
->	O
docstr	*(char)
)	O
;	O
}	O
void	O
fh_defn	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
const	O
char	O
*	O
name	*(char)
;	O
struct	O
format	*(char)
*	O
frm	*(struct(*(char),*(char),*(char)))
;	O
name	*(char)
=	O
(	O
argc	int
==	O
0	int
)	O
?	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
:	O
argv	array(*(char))
[	O
0	int
]	O
;	O
frm	*(struct(*(char),*(char),*(char)))
=	O
format_find	(*(char))->(*(struct(*(char),*(char),*(char))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
frm	*(struct(*(char),*(char),*(char)))
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"unknown format: `%s'"	*(char)
,	O
name	*(char)
)	O
;	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
frm	*(struct(*(char),*(char),*(char)))
->	O
templ	*(char)
)	O
;	O
}	O
void	O
fh_foreachformat	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
struct	O
format	*(char)
*	O
frm	*(struct(*(char),*(char),*(char)))
;	O
const	O
char	O
*	O
save_name	*(char)
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
return	O
;	O
save_name	*(char)
=	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
;	O
for	O
(	O
frm	*(struct(*(char),*(char),*(char)))
=	O
formats	array(struct(*(char),*(char),*(char)))
;	O
frm	*(struct(*(char),*(char),*(char)))
->	O
name	*(char)
;	O
frm	*(struct(*(char),*(char),*(char)))
++	O
)	O
{	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
=	O
frm	*(struct(*(char),*(char),*(char)))
->	O
name	*(char)
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
argv	array(*(char))
[	O
0	int
]	O
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
0	int
)	O
;	O
}	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
=	O
save_name	*(char)
;	O
}	O
void	O
fh_newline	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
'\n'	O
)	O
;	O
}	O
void	O
fh_tabulator	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
'\t'	O
)	O
;	O
}	O
void	O
fh_rep	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
unsigned	O
int	O
count	int
;	O
char	O
*	O
p	*(char)
;	O
if	O
(	O
argc	int
<	O
2	int
)	O
return	O
;	O
count	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
&	O
p	*(char)
,	O
10	int
)	O
;	O
if	O
(	O
*	O
p	*(char)
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
0	int
,	O
"invalid repeat count"	*(char)
)	O
;	O
while	O
(	O
count	int
--	O
)	O
{	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
argv	array(*(char))
[	O
1	int
]	O
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
0	int
)	O
;	O
}	O
}	O
void	O
fh_first	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
first	int
?	O
0	int
:	O
1	int
)	O
;	O
}	O
void	O
fh_ifdisplay_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
n	int
;	O
int	O
f	short
;	O
int	O
rev	int
;	O
n	int
=	O
!	O
(	O
all_option	int
||	O
ifs_cmdline	int
||	O
(	O
(	O
f	short
=	O
if_nameztoflag	(*(char),*(int))->(int)
(	O
"UP"	*(char)
,	O
&	O
rev	int
)	O
)	O
&&	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFFLAGS	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
==	O
0	int
&&	O
(	O
f	short
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
)	O
)	O
;	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
n	int
)	O
;	O
}	O
void	O
fh_verbose_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
verbose	int
?	O
0	int
:	O
1	int
)	O
;	O
}	O
void	O
fh_tab	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
long	O
goal	long
=	O
0	int
;	O
errno	O
=	O
0	int
;	O
if	O
(	O
argc	int
>=	O
1	int
)	O
goal	long
=	O
strtol	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
goal	long
<=	O
0	int
)	O
goal	long
=	O
(	O
(	O
*	O
column	*(int)
/	O
TAB_STOP	int
)	O
+	O
1	int
)	O
*	O
TAB_STOP	int
;	O
while	O
(	O
*	O
column	*(int)
<	O
goal	long
)	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
' '	O
)	O
;	O
}	O
void	O
fh_join	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
had_output_saved	int
=	O
had_output	int
;	O
int	O
count	int
=	O
0	int
;	O
if	O
(	O
argc	int
<	O
2	int
)	O
return	O
;	O
had_output	int
=	O
0	int
;	O
while	O
(	O
++	O
count	int
<	O
argc	int
)	O
{	O
if	O
(	O
had_output	int
)	O
{	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argv	array(*(char))
[	O
0	int
]	O
)	O
;	O
had_output	int
=	O
0	int
;	O
had_output_saved	int
=	O
1	int
;	O
}	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
argv	array(*(char))
[	O
count	int
]	O
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
0	int
)	O
;	O
}	O
had_output	int
=	O
had_output_saved	int
;	O
}	O
void	O
fh_exists_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
argc	int
>	O
0	int
)	O
{	O
struct	O
format_handle	struct(*(char),*((*(struct(*(char),*(struct`),int,int,*(char),int)),int,*(*(char)))->(void)))
*	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
;	O
int	O
sel	int
=	O
2	int
;	O
for	O
(	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
=	O
format_handles	array(struct(*(char),*((*(struct(*`,*`,int,int,*`,int)),int,*(*(char)))->(void))))
;	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
->	O
name	*(char)
;	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
++	O
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
fh	*(struct(*(char),*((*(struct`),int,*(*`))->(void))))
->	O
name	*(char)
,	O
argv	array(*(char))
[	O
0	int
]	O
)	O
)	O
{	O
sel	int
=	O
1	int
;	O
break	O
;	O
}	O
}	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
sel	int
)	O
;	O
}	O
}	O
void	O
fh_format	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	int
;	O
i	long
++	O
)	O
{	O
struct	O
format	*(char)
*	O
frm	*(struct(*(char),*(char),*(char)))
=	O
format_find	(*(char))->(*(struct(*(char),*(char),*(char))))
(	O
argv	array(*(char))
[	O
i	long
]	O
)	O
;	O
if	O
(	O
frm	*(struct(*(char),*(char),*(char)))
)	O
{	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
frm	*(struct(*(char),*(char),*(char)))
->	O
templ	*(char)
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
0	int
)	O
;	O
break	O
;	O
}	O
}	O
}	O
void	O
fh_error	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
i	long
;	O
FILE	struct
*	O
s	*(char)
=	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
int	O
*	O
c	char
=	O
column	*(int)
;	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
column	*(int)
=	O
&	O
column_stderr	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	int
;	O
i	long
++	O
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
i	long
)	O
;	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
s	*(char)
;	O
column	*(int)
=	O
c	char
;	O
}	O
void	O
fh_progname	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
program_name	*(char)
)	O
;	O
}	O
void	O
fh_exit	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
err	int
=	O
0	int
;	O
if	O
(	O
argc	int
>	O
0	int
)	O
err	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
NULL	O
,	O
0	int
)	O
;	O
exit	(int)->(void)
(	O
err	int
)	O
;	O
}	O
void	O
fh_name	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
)	O
;	O
}	O
void	O
fh_index_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
(	O
if_nametoindex	(*(char))->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
)	O
==	O
0	int
)	O
?	O
1	int
:	O
0	int
)	O
;	O
}	O
void	O
fh_index	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
indx	int
=	O
if_nametoindex	(*(char))->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
)	O
;	O
if	O
(	O
indx	int
==	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"No index number found for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
name	*(char)
)	O
;	O
*	O
column	*(int)
+=	O
printf	(*(char))->(int)
(	O
"%i"	*(char)
,	O
indx	int
)	O
;	O
had_output	int
=	O
1	int
;	O
}	O
void	O
fh_addr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFADDR	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFADDR	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFADDR failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
put_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),*(struct(short,array(char))))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_addr	O
)	O
;	O
}	O
void	O
fh_netmask_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFNETMASK	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_netmask	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFNETMASK	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFNETMASK failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
put_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),*(struct(short,array(char))))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_netmask	O
)	O
;	O
}	O
void	O
fh_brdaddr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
f	short
;	O
int	O
rev	int
;	O
if	O
(	O
0	int
==	O
(	O
f	short
=	O
if_nameztoflag	(*(char),*(int))->(int)
(	O
"BROADCAST"	*(char)
,	O
&	O
rev	int
)	O
)	O
||	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFFLAGS	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
||	O
(	O
(	O
f	short
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
==	O
0	int
)	O
)	O
{	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
return	O
;	O
}	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFBRDADDR	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_brdaddr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFBRDADDR	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFBRDADDR failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
put_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),*(struct(short,array(char))))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_broadaddr	O
)	O
;	O
}	O
void	O
fh_dstaddr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
int	O
f	short
;	O
int	O
rev	int
;	O
if	O
(	O
0	int
==	O
(	O
f	short
=	O
if_nameztoflag	(*(char),*(int))->(int)
(	O
"POINTOPOINT"	*(char)
,	O
&	O
rev	int
)	O
)	O
||	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFFLAGS	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
||	O
(	O
(	O
f	short
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
==	O
0	int
)	O
)	O
{	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
return	O
;	O
}	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFDSTADDR	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_dstaddr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFDSTADDR	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFDSTADDR failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
put_addr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),*(struct(short,array(char))))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_dstaddr	O
)	O
;	O
}	O
void	O
fh_mtu_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFMTU	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_mtu	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFMTU	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFMTU failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_mtu	O
)	O
;	O
}	O
void	O
fh_metric_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFMETRIC	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_metric	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFMETRIC	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFMETRIC failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_metric	O
?	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_metric	O
:	O
1	int
)	O
;	O
}	O
void	O
fh_flags_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFFLAGS	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_flags	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFFLAGS	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
<	O
0	int
)	O
error	(int,int,*(char))->(void)
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"SIOCGIFFLAGS failed for interface `%s'"	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_name	O
)	O
;	O
else	O
{	O
if	O
(	O
argc	int
>=	O
1	int
)	O
{	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
"number"	*(char)
)	O
)	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
-	O
1	int
,	O
&	O
argv	array(*(char))
[	O
1	int
]	O
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
"short"	*(char)
)	O
)	O
put_flags_short	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),short)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
-	O
1	int
,	O
&	O
argv	array(*(char))
[	O
1	int
]	O
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
;	O
else	O
if	O
(	O
!	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
0	int
]	O
,	O
"string"	*(char)
)	O
)	O
put_flags	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),short)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
-	O
1	int
,	O
&	O
argv	array(*(char))
[	O
1	int
]	O
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
;	O
}	O
else	O
put_flags	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),short)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_flags	O
)	O
;	O
}	O
}	O
void	O
fh_map_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
ioctl	(int,long)->(int)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
sfd	int
,	O
SIOCGIFMAP	int
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
)	O
>=	O
0	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_irq_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
irq	char
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_irq	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
irq	char
)	O
;	O
}	O
void	O
fh_baseaddr_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
base_addr	short
>=	O
0x100	int
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_baseaddr	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
base_addr	short
>=	O
0x100	int
)	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
base_addr	short
)	O
;	O
else	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
"(not available)"	*(char)
)	O
;	O
}	O
void	O
fh_memstart_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
mem_start	long
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_memstart	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
mem_start	long
)	O
put_ulong	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),long)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
mem_start	long
)	O
;	O
else	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
"(not available)"	*(char)
)	O
;	O
}	O
void	O
fh_memend_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
mem_end	long
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_memend	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
mem_end	long
)	O
put_ulong	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),long)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
mem_end	long
)	O
;	O
else	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
"(not available)"	*(char)
)	O
;	O
}	O
void	O
fh_dma_query	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
dma	char
)	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
0	int
)	O
;	O
else	O
select_arg	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
1	int
)	O
;	O
}	O
void	O
fh_dma	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
dma	char
)	O
put_int	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
->	O
ifr_map	O
.	O
dma	char
)	O
;	O
else	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
"(not available)"	*(char)
)	O
;	O
}	O
void	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
format_data_t	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
int	O
quiet	int
)	O
{	O
const	O
char	O
*	O
p	*(char)
=	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
;	O
const	O
char	O
*	O
q	*(char)
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
depth	int
++	O
;	O
while	O
(	O
!	O
(	O
*	O
p	*(char)
==	O
'\0'	O
||	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
depth	int
>	O
1	int
&&	O
*	O
p	*(char)
==	O
'}'	O
)	O
)	O
)	O
{	O
while	O
(	O
!	O
(	O
*	O
p	*(char)
==	O
'$'	O
||	O
*	O
p	*(char)
==	O
'\0'	O
||	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
depth	int
>	O
1	int
&&	O
*	O
p	*(char)
==	O
'}'	O
)	O
)	O
)	O
{	O
quiet	int
||	O
(	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
*	O
p	*(char)
)	O
,	O
0	int
)	O
;	O
p	*(char)
++	O
;	O
}	O
if	O
(	O
*	O
p	*(char)
!=	O
'$'	O
)	O
break	O
;	O
switch	O
(	O
*	O
(	O
++	O
p	*(char)
)	O
)	O
{	O
default	O
:	O
quiet	int
||	O
(	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
'$'	O
)	O
,	O
0	int
)	O
;	O
case	O
'$'	O
:	O
case	O
'}'	O
:	O
quiet	int
||	O
(	O
put_char	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),char)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
*	O
p	*(char)
)	O
,	O
0	int
)	O
;	O
p	*(char)
++	O
;	O
continue	O
;	O
case	O
'{'	O
:	O
p	*(char)
++	O
;	O
break	O
;	O
}	O
q	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
p	*(char)
,	O
'}'	O
)	O
;	O
if	O
(	O
!	O
q	*(char)
)	O
{	O
p	*(char)
-=	O
2	int
;	O
put_string	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),*(char))->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
p	*(char)
)	O
;	O
p	*(char)
=	O
strchr	(*(char),int)->(*(char))
(	O
p	*(char)
,	O
'\0'	O
)	O
;	O
continue	O
;	O
}	O
else	O
{	O
char	O
*	O
id	*(char)
;	O
id	*(char)
=	O
alloca	O
(	O
q	*(char)
-	O
p	*(char)
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
id	*(char)
,	O
p	*(char)
,	O
q	*(char)
-	O
p	*(char)
)	O
;	O
id	*(char)
[	O
q	*(char)
-	O
p	*(char)
]	O
=	O
'\0'	O
;	O
p	*(char)
=	O
q	*(char)
+	O
1	int
;	O
if	O
(	O
quiet	int
)	O
{	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
p	*(char)
;	O
while	O
(	O
*	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
)	O
==	O
'{'	O
)	O
{	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
++	O
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
1	int
)	O
;	O
if	O
(	O
*	O
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
)	O
==	O
'}'	O
)	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
++	O
;	O
}	O
p	*(char)
=	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
;	O
}	O
else	O
{	O
int	O
argc	int
=	O
0	int
;	O
char	O
*	O
*	O
argv	array(*(char))
;	O
argv	array(*(char))
=	O
alloca	O
(	O
strlen	(*(char))->(long)
(	O
q	*(char)
)	O
/	O
2	int
)	O
;	O
while	O
(	O
*	O
p	*(char)
==	O
'{'	O
)	O
{	O
p	*(char)
++	O
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
p	*(char)
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
1	int
)	O
;	O
q	*(char)
=	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
;	O
argv	array(*(char))
[	O
argc	int
]	O
=	O
malloc	(long)->(*(void))
(	O
q	*(char)
-	O
p	*(char)
+	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
argv	array(*(char))
[	O
argc	int
]	O
,	O
p	*(char)
,	O
q	*(char)
-	O
p	*(char)
)	O
;	O
argv	array(*(char))
[	O
argc	int
]	O
[	O
q	*(char)
-	O
p	*(char)
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
q	*(char)
==	O
'}'	O
)	O
q	*(char)
++	O
;	O
p	*(char)
=	O
q	*(char)
;	O
argc	int
++	O
;	O
}	O
format_handler	(*(char),*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int,array(*(char)))->(void)
(	O
id	*(char)
,	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
argc	int
,	O
argv	array(*(char))
)	O
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
p	*(char)
;	O
while	O
(	O
--	O
argc	int
>=	O
0	int
)	O
free	(*(void))->(void)
(	O
argv	array(*(char))
[	O
argc	int
]	O
)	O
;	O
}	O
}	O
}	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
format	*(char)
=	O
p	*(char)
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
->	O
depth	int
--	O
;	O
}	O
void	O
print_interface	(int,*(char),*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))),*(char))->(void)
(	O
int	O
sfd	int
,	O
const	O
char	O
*	O
name	*(char)
,	O
struct	O
ifreq	struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))
*	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
,	O
const	O
char	O
*	O
format	*(char)
)	O
{	O
struct	O
format_data	struct(*(char),*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char)))),int,int,*(char),int)
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
;	O
static	O
int	O
first_passed_already	int
;	O
if	O
(	O
!	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
ostream	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
if	O
(	O
!	O
first_passed_already	int
)	O
first_passed_already	int
=	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
first	int
=	O
1	int
;	O
else	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
first	int
=	O
0	int
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
name	*(char)
=	O
name	*(char)
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
=	O
ifr	*(struct(union(array(char)),union(struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),struct(short,array(char)),short,int,int,struct(long,long,short,char,char,char),array(char),array(char),*(char))))
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
format	*(char)
=	O
format	*(char)
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
sfd	int
=	O
sfd	int
;	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
.	O
depth	int
=	O
0	int
;	O
print_interfaceX	(*(struct(*(char),*(struct(union`,union`)),int,int,*(char),int)),int)->(void)
(	O
&	O
form	*(struct(*(char),*(struct(union(array(char)),union(struct`,struct`,struct`,struct`,struct`,short,int,int,struct`,array(char),array(char),*`))),int,int,*(char),int))
,	O
0	int
)	O
;	O
}	O
