DCHAR_T	char
*	O
VASNPRINTF	O
(	O
DCHAR_T	char
*	O
resultbuf	*(char)
,	O
size_t	long
*	O
lengthp	*(long)
,	O
const	O
FCHAR_T	char
*	O
format	*(char)
,	O
va_list	array(struct(int,int,*(void),*(void)))
args	array(struct(int,int,*(void),*(void)))
)	O
{	O
DIRECTIVES	O
d	*(struct(long,*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long)),long,long,array(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))))
;	O
arguments	struct(long,*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long)))),array(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long)))))
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
;	O
if	O
(	O
PRINTF_PARSE	O
(	O
format	*(char)
,	O
&	O
d	*(struct(long,*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long)),long,long,array(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))))
,	O
&	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
)	O
<	O
0	int
)	O
return	O
NULL	O
;	O
if	O
(	O
PRINTF_FETCHARGS	O
(	O
args	array(struct(int,int,*(void),*(void)))
,	O
&	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
)	O
<	O
0	int
)	O
{	O
CLEANUP	O
(	O
)	O
;	O
errno	O
=	O
EINVAL	int
;	O
return	O
NULL	O
;	O
}	O
{	O
size_t	long
buf_neededlength	long
;	O
TCHAR_T	char
*	O
buf	*(char)
;	O
TCHAR_T	char
*	O
buf_malloced	*(char)
;	O
const	O
FCHAR_T	char
*	O
cp	*(char)
;	O
size_t	long
i	long
;	O
DIRECTIVE	O
*	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
;	O
DCHAR_T	char
*	O
result	*(char)
;	O
size_t	long
allocated	long
;	O
size_t	long
length	long
;	O
buf_neededlength	long
=	O
xsum4	(long,long,long,long)->(long)
(	O
7	int
,	O
d	*(struct(long,*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long)),long,long,array(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))))
.	O
max_width_length	long
,	O
d	*(struct(long,*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long)),long,long,array(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))))
.	O
max_precision_length	long
,	O
6	int
)	O
;	O
if	O
(	O
buf_neededlength	long
<	O
4000	int
/	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
{	O
buf	*(char)
=	O
(	O
TCHAR_T	char
*	O
)	O
alloca	O
(	O
buf_neededlength	long
*	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
;	O
buf_malloced	*(char)
=	O
NULL	O
;	O
}	O
else	O
{	O
size_t	long
buf_memsize	long
=	O
xtimes	O
(	O
buf_neededlength	long
,	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
;	O
if	O
(	O
size_overflow_p	O
(	O
buf_memsize	long
)	O
)	O
goto	O
out_of_memory_1	O
;	O
buf	*(char)
=	O
(	O
TCHAR_T	char
*	O
)	O
malloc	(long)->(*(void))
(	O
buf_memsize	long
)	O
;	O
if	O
(	O
buf	*(char)
==	O
NULL	O
)	O
goto	O
out_of_memory_1	O
;	O
buf_malloced	*(char)
=	O
buf	*(char)
;	O
}	O
if	O
(	O
resultbuf	*(char)
!=	O
NULL	O
)	O
{	O
result	*(char)
=	O
resultbuf	*(char)
;	O
allocated	long
=	O
*	O
lengthp	*(long)
;	O
}	O
else	O
{	O
result	*(char)
=	O
NULL	O
;	O
allocated	long
=	O
0	int
;	O
}	O
length	long
=	O
0	int
;	O
for	O
(	O
cp	*(char)
=	O
format	*(char)
,	O
i	long
=	O
0	int
,	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
=	O
&	O
d	*(struct(long,*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long)),long,long,array(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))))
.	O
dir	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
[	O
0	int
]	O
;	O
;	O
cp	*(char)
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
dir_end	*(char)
,	O
i	long
++	O
,	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
++	O
)	O
{	O
if	O
(	O
cp	*(char)
!=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
dir_start	*(char)
)	O
{	O
size_t	long
n	long
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
dir_start	*(char)
-	O
cp	*(char)
;	O
size_t	long
augmented_length	long
=	O
xsum	(long,long)->(long)
(	O
length	long
,	O
n	long
)	O
;	O
ENSURE_ALLOCATION	O
(	O
augmented_length	long
)	O
;	O
if	O
(	O
sizeof	O
(	O
FCHAR_T	char
)	O
==	O
sizeof	O
(	O
DCHAR_T	char
)	O
)	O
{	O
DCHAR_CPY	O
(	O
result	*(char)
+	O
length	long
,	O
(	O
const	O
DCHAR_T	char
*	O
)	O
cp	*(char)
,	O
n	long
)	O
;	O
length	long
=	O
augmented_length	long
;	O
}	O
else	O
{	O
do	O
result	*(char)
[	O
length	long
++	O
]	O
=	O
*	O
cp	*(char)
++	O
;	O
while	O
(	O
--	O
n	long
>	O
0	int
)	O
;	O
}	O
}	O
if	O
(	O
i	long
==	O
d	*(struct(long,*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long)),long,long,array(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))))
.	O
count	long
)	O
break	O
;	O
if	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
conversion	char
==	O
'%'	O
)	O
{	O
size_t	long
augmented_length	long
;	O
if	O
(	O
!	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
==	O
ARG_NONE	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
augmented_length	long
=	O
xsum	(long,long)->(long)
(	O
length	long
,	O
1	int
)	O
;	O
ENSURE_ALLOCATION	O
(	O
augmented_length	long
)	O
;	O
result	*(char)
[	O
length	long
]	O
=	O
'%'	O
;	O
length	long
=	O
augmented_length	long
;	O
}	O
else	O
{	O
if	O
(	O
!	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
!=	O
ARG_NONE	O
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
conversion	char
==	O
'n'	O
)	O
{	O
switch	O
(	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
TYPE_COUNT_SCHAR_POINTER	int
:	O
*	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_count_schar_pointer	*(char)
=	O
length	long
;	O
break	O
;	O
case	O
TYPE_COUNT_SHORT_POINTER	int
:	O
*	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_count_short_pointer	*(short)
=	O
length	long
;	O
break	O
;	O
case	O
TYPE_COUNT_INT_POINTER	int
:	O
*	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_count_int_pointer	*(int)
=	O
length	long
;	O
break	O
;	O
case	O
TYPE_COUNT_LONGINT_POINTER	int
:	O
*	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_count_longint_pointer	*(long)
=	O
length	long
;	O
break	O
;	O
case	O
TYPE_COUNT_LONGLONGINT_POINTER	int
:	O
*	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_count_longlongint_pointer	*(long long)
=	O
length	long
;	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
}	O
else	O
{	O
arg_type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
;	O
int	O
flags	int
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
flags	int
;	O
TCHAR_T	char
*	O
fbp	*(char)
;	O
unsigned	O
int	O
prefix_count	int
;	O
int	O
prefixes	array(int)
[	O
2	int
]	O
IF_LINT	O
(	O
=	O
{	O
0	int
}	O
)	O
;	O
int	O
orig_errno	int
;	O
fbp	*(char)
=	O
buf	*(char)
;	O
*	O
fbp	*(char)
++	O
=	O
'%'	O
;	O
if	O
(	O
flags	int
&	O
FLAG_GROUP	int
)	O
*	O
fbp	*(char)
++	O
=	O
'\''	O
;	O
if	O
(	O
flags	int
&	O
FLAG_LEFT	int
)	O
*	O
fbp	*(char)
++	O
=	O
'-'	O
;	O
if	O
(	O
flags	int
&	O
FLAG_SHOWSIGN	int
)	O
*	O
fbp	*(char)
++	O
=	O
'+'	O
;	O
if	O
(	O
flags	int
&	O
FLAG_SPACE	int
)	O
*	O
fbp	*(char)
++	O
=	O
' '	O
;	O
if	O
(	O
flags	int
&	O
FLAG_ALT	int
)	O
*	O
fbp	*(char)
++	O
=	O
'#'	O
;	O
if	O
(	O
flags	int
&	O
FLAG_LOCALIZED	int
)	O
*	O
fbp	*(char)
++	O
=	O
'I'	O
;	O
if	O
(	O
!	O
pad_ourselves	int
)	O
{	O
if	O
(	O
flags	int
&	O
FLAG_ZERO	int
)	O
*	O
fbp	*(char)
++	O
=	O
'0'	O
;	O
if	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_start	*(char)
!=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_end	*(char)
)	O
{	O
size_t	long
n	long
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_end	*(char)
-	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_start	*(char)
;	O
if	O
(	O
sizeof	O
(	O
FCHAR_T	char
)	O
==	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
fbp	*(char)
,	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_start	*(char)
,	O
n	long
*	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
;	O
fbp	*(char)
+=	O
n	long
;	O
}	O
else	O
{	O
const	O
FCHAR_T	char
*	O
mp	*(char)
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_start	*(char)
;	O
do	O
*	O
fbp	*(char)
++	O
=	O
*	O
mp	*(char)
++	O
;	O
while	O
(	O
--	O
n	long
>	O
0	int
)	O
;	O
}	O
}	O
}	O
if	O
(	O
!	O
prec_ourselves	int
)	O
{	O
if	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_start	*(char)
!=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_end	*(char)
)	O
{	O
size_t	long
n	long
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_end	*(char)
-	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_start	*(char)
;	O
if	O
(	O
sizeof	O
(	O
FCHAR_T	char
)	O
==	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
fbp	*(char)
,	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_start	*(char)
,	O
n	long
*	O
sizeof	O
(	O
TCHAR_T	char
)	O
)	O
;	O
fbp	*(char)
+=	O
n	long
;	O
}	O
else	O
{	O
const	O
FCHAR_T	char
*	O
mp	*(char)
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_start	*(char)
;	O
do	O
*	O
fbp	*(char)
++	O
=	O
*	O
mp	*(char)
++	O
;	O
while	O
(	O
--	O
n	long
>	O
0	int
)	O
;	O
}	O
}	O
}	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
TYPE_LONGLONGINT	int
:	O
case	O
TYPE_ULONGLONGINT	int
:	O
*	O
fbp	*(char)
++	O
=	O
'l'	O
;	O
FALLTHROUGH	O
;	O
case	O
TYPE_LONGINT	int
:	O
case	O
TYPE_ULONGINT	int
:	O
case	O
TYPE_WIDE_CHAR	int
:	O
case	O
TYPE_WIDE_STRING	int
:	O
*	O
fbp	*(char)
++	O
=	O
'l'	O
;	O
break	O
;	O
case	O
TYPE_LONGDOUBLE	int
:	O
*	O
fbp	*(char)
++	O
=	O
'L'	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
*	O
fbp	*(char)
=	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
conversion	char
;	O
fbp	*(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
prefix_count	int
=	O
0	int
;	O
if	O
(	O
!	O
pad_ourselves	int
&&	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_arg_index	long
!=	O
ARG_NONE	O
)	O
{	O
if	O
(	O
!	O
(	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_arg_index	long
]	O
.	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
TYPE_INT	int
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
prefixes	array(int)
[	O
prefix_count	int
++	O
]	O
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
width_arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_int	int
;	O
}	O
if	O
(	O
!	O
prec_ourselves	int
&&	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_arg_index	long
!=	O
ARG_NONE	O
)	O
{	O
if	O
(	O
!	O
(	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_arg_index	long
]	O
.	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
==	O
TYPE_INT	int
)	O
)	O
abort	()->(void)
(	O
)	O
;	O
prefixes	array(int)
[	O
prefix_count	int
++	O
]	O
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
precision_arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_int	int
;	O
}	O
ENSURE_ALLOCATION	O
(	O
xsum	(long,long)->(long)
(	O
length	long
,	O
(	O
2	int
+	O
TCHARS_PER_DCHAR	O
-	O
1	int
)	O
/	O
TCHARS_PER_DCHAR	O
)	O
)	O
;	O
*	O
(	O
TCHAR_T	char
*	O
)	O
(	O
result	*(char)
+	O
length	long
)	O
=	O
'\0'	O
;	O
orig_errno	int
=	O
errno	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
count	long
=	O
-	O
1	int
;	O
int	O
retcount	int
=	O
0	int
;	O
size_t	long
maxlen	long
=	O
allocated	long
-	O
length	long
;	O
if	O
(	O
maxlen	long
>	O
INT_MAX	O
/	O
TCHARS_PER_DCHAR	O
)	O
maxlen	long
=	O
INT_MAX	O
/	O
TCHARS_PER_DCHAR	O
;	O
maxlen	long
=	O
maxlen	long
*	O
TCHARS_PER_DCHAR	O
;	O
errno	O
=	O
0	int
;	O
switch	O
(	O
type	enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
)	O
{	O
case	O
TYPE_SCHAR	int
:	O
{	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_schar	char
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_UCHAR	int
:	O
{	O
unsigned	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_uchar	char
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_SHORT	int
:	O
{	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_short	short
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_USHORT	int
:	O
{	O
unsigned	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_ushort	short
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_INT	int
:	O
{	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_int	int
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_UINT	int
:	O
{	O
unsigned	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_uint	int
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_LONGINT	int
:	O
{	O
long	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_longint	long
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_ULONGINT	int
:	O
{	O
unsigned	O
long	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_ulongint	long
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_LONGLONGINT	int
:	O
{	O
long	O
long	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_longlongint	long long
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_ULONGLONGINT	int
:	O
{	O
unsigned	O
long	O
long	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_ulonglongint	long long
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_DOUBLE	int
:	O
{	O
double	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_double	double
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_LONGDOUBLE	int
:	O
{	O
long	O
double	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_longdouble	long double
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_CHAR	int
:	O
{	O
int	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_char	int
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_WIDE_CHAR	int
:	O
{	O
wint_t	int
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_wide_char	int
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_STRING	int
:	O
{	O
const	O
char	O
*	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_string	*(char)
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_WIDE_STRING	int
:	O
{	O
const	O
wchar_t	int
*	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_wide_string	*(int)
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
case	O
TYPE_POINTER	int
:	O
{	O
void	O
*	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
=	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
[	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
arg_index	long
]	O
.	O
a	union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))
.	O
a_pointer	*(void)
;	O
SNPRINTF_BUF	O
(	O
arg	*(struct(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int),union(char,char,short,short,int,int,long,long,long long,long long,float,double,long double,int,int,*(char),*(int),*(void),*(char),*(short),*(int),*(long),*(long long))))
)	O
;	O
}	O
break	O
;	O
default	O
:	O
abort	()->(void)
(	O
)	O
;	O
}	O
if	O
(	O
count	long
>=	O
0	int
)	O
{	O
if	O
(	O
count	long
<	O
maxlen	long
&&	O
(	O
(	O
TCHAR_T	char
*	O
)	O
(	O
result	*(char)
+	O
length	long
)	O
)	O
[	O
count	long
]	O
!=	O
'\0'	O
)	O
abort	()->(void)
(	O
)	O
;	O
if	O
(	O
retcount	int
>	O
count	long
)	O
count	long
=	O
retcount	int
;	O
}	O
else	O
{	O
if	O
(	O
fbp	*(char)
[	O
1	int
]	O
!=	O
'\0'	O
)	O
{	O
fbp	*(char)
[	O
1	int
]	O
=	O
'\0'	O
;	O
continue	O
;	O
}	O
else	O
{	O
if	O
(	O
retcount	int
<	O
0	int
)	O
{	O
}	O
else	O
count	long
=	O
retcount	int
;	O
}	O
}	O
if	O
(	O
count	long
<	O
0	int
)	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
if	O
(	O
saved_errno	int
==	O
0	int
)	O
{	O
if	O
(	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
conversion	char
==	O
'c'	O
||	O
dp	*(struct(*(char),*(char),int,*(char),*(char),long,*(char),*(char),long,char,long))
->	O
conversion	char
==	O
's'	O
)	O
saved_errno	int
=	O
EILSEQ	int
;	O
else	O
saved_errno	int
=	O
EINVAL	int
;	O
}	O
if	O
(	O
!	O
(	O
result	*(char)
==	O
resultbuf	*(char)
||	O
result	*(char)
==	O
NULL	O
)	O
)	O
free	(*(void))->(void)
(	O
result	*(char)
)	O
;	O
if	O
(	O
buf_malloced	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
buf_malloced	*(char)
)	O
;	O
CLEANUP	O
(	O
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
(	O
unsigned	O
int	O
)	O
count	long
+	O
1	int
>=	O
maxlen	long
)	O
{	O
if	O
(	O
maxlen	long
==	O
INT_MAX	O
/	O
TCHARS_PER_DCHAR	O
)	O
goto	O
overflow	O
;	O
else	O
{	O
size_t	long
n	long
=	O
xmax	(long,long)->(long)
(	O
xsum	(long,long)->(long)
(	O
length	long
,	O
(	O
(	O
unsigned	O
int	O
)	O
count	long
+	O
2	int
+	O
TCHARS_PER_DCHAR	O
-	O
1	int
)	O
/	O
TCHARS_PER_DCHAR	O
)	O
,	O
xtimes	O
(	O
allocated	long
,	O
2	int
)	O
)	O
;	O
ENSURE_ALLOCATION	O
(	O
n	long
)	O
;	O
continue	O
;	O
}	O
}	O
length	long
+=	O
count	long
;	O
break	O
;	O
}	O
errno	O
=	O
orig_errno	int
;	O
}	O
}	O
}	O
ENSURE_ALLOCATION	O
(	O
xsum	(long,long)->(long)
(	O
length	long
,	O
1	int
)	O
)	O
;	O
result	*(char)
[	O
length	long
]	O
=	O
'\0'	O
;	O
if	O
(	O
result	*(char)
!=	O
resultbuf	*(char)
&&	O
length	long
+	O
1	int
<	O
allocated	long
)	O
{	O
DCHAR_T	char
*	O
memory	*(char)
;	O
memory	*(char)
=	O
(	O
DCHAR_T	char
*	O
)	O
realloc	(*(void),long)->(*(void))
(	O
result	*(char)
,	O
(	O
length	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
DCHAR_T	char
)	O
)	O
;	O
if	O
(	O
memory	*(char)
!=	O
NULL	O
)	O
result	*(char)
=	O
memory	*(char)
;	O
}	O
if	O
(	O
buf_malloced	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
buf_malloced	*(char)
)	O
;	O
CLEANUP	O
(	O
)	O
;	O
*	O
lengthp	*(long)
=	O
length	long
;	O
return	O
result	*(char)
;	O
overflow	O
:	O
if	O
(	O
!	O
(	O
result	*(char)
==	O
resultbuf	*(char)
||	O
result	*(char)
==	O
NULL	O
)	O
)	O
free	(*(void))->(void)
(	O
result	*(char)
)	O
;	O
if	O
(	O
buf_malloced	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
buf_malloced	*(char)
)	O
;	O
CLEANUP	O
(	O
)	O
;	O
errno	O
=	O
EOVERFLOW	int
;	O
return	O
NULL	O
;	O
out_of_memory	O
:	O
if	O
(	O
!	O
(	O
result	*(char)
==	O
resultbuf	*(char)
||	O
result	*(char)
==	O
NULL	O
)	O
)	O
free	(*(void))->(void)
(	O
result	*(char)
)	O
;	O
if	O
(	O
buf_malloced	*(char)
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
buf_malloced	*(char)
)	O
;	O
out_of_memory_1	O
:	O
CLEANUP	O
(	O
)	O
;	O
errno	O
=	O
ENOMEM	int
;	O
return	O
NULL	O
;	O
}	O
}	O
