static	O
int	O
_authenticate_null	(*(struct(*(void),*(struct(*`,int,*`,*`,*`,*`,*`)),*(struct))))->(int)
(	O
mu_authority_t	*(struct)
auth	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
MU_ARG_UNUSED	O
)	O
{	O
return	O
0	int
;	O
}	O
int	O
mu_authority_create_null	(*(*(struct)),*(void))->(int)
(	O
mu_authority_t	*(struct)
*	O
pauthority	*(*(struct))
,	O
void	O
*	O
owner	*(void)
)	O
{	O
int	O
rc	int
=	O
mu_authority_create	(*(*(struct)),*(struct),*(void))->(int)
(	O
pauthority	*(*(struct))
,	O
NULL	O
,	O
owner	*(void)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_authority_set_authenticate	(*(struct),*((*(struct))->(int)),*(void))->(int)
(	O
*	O
pauthority	*(*(struct))
,	O
_authenticate_null	(*(struct(*(void),*(struct(*`,int,*`,*`,*`,*`,*`)),*(struct))))->(int)
,	O
owner	*(void)
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_authority_create	(*(*(struct)),*(struct),*(void))->(int)
(	O
mu_authority_t	*(struct)
*	O
pauthority	*(*(struct))
,	O
mu_ticket_t	*(struct)
ticket	*(struct)
,	O
void	O
*	O
owner	*(void)
)	O
{	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
;	O
if	O
(	O
pauthority	*(*(struct))
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
=	O
calloc	(long,long)->(*(void))
(	O
1	int
,	O
sizeof	O
(	O
*	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
)	O
;	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
=	O
ticket	*(struct)
;	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
owner	*(void)
=	O
owner	*(void)
;	O
*	O
pauthority	*(*(struct))
=	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
;	O
return	O
0	int
;	O
}	O
void	O
mu_authority_destroy	(*(*(struct)),*(void))->(void)
(	O
mu_authority_t	*(struct)
*	O
pauthority	*(*(struct))
,	O
void	O
*	O
owner	*(void)
)	O
{	O
if	O
(	O
pauthority	*(*(struct))
&&	O
*	O
pauthority	*(*(struct))
)	O
{	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
=	O
*	O
pauthority	*(*(struct))
;	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
owner	*(void)
==	O
owner	*(void)
)	O
{	O
mu_ticket_destroy	(*(*(struct)))->(void)
(	O
&	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
)	O
;	O
mu_list_destroy	(*(*(struct)))->(void)
(	O
&	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
auth_methods	*(struct)
)	O
;	O
free	(*(void))->(void)
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
;	O
}	O
*	O
pauthority	*(*(struct))
=	O
NULL	O
;	O
}	O
}	O
void	O
*	O
mu_authority_get_owner	(*(struct))->(*(void))
(	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
{	O
return	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
?	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
owner	*(void)
:	O
NULL	O
;	O
}	O
int	O
mu_authority_set_ticket	(*(struct),*(struct))->(int)
(	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
,	O
mu_ticket_t	*(struct)
ticket	*(struct)
)	O
{	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
)	O
mu_ticket_destroy	(*(*(struct)))->(void)
(	O
&	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
)	O
;	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
=	O
ticket	*(struct)
;	O
return	O
0	int
;	O
}	O
int	O
mu_authority_get_ticket	(*(struct),*(*(struct)))->(int)
(	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
,	O
mu_ticket_t	*(struct)
*	O
pticket	*(*(struct))
)	O
{	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pticket	*(*(struct))
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
==	O
NULL	O
)	O
{	O
int	O
status	int
=	O
mu_ticket_create	(*(*(struct)),*(void))->(int)
(	O
&	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
)	O
,	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
*	O
pticket	*(*(struct))
=	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
ticket	*(struct)
;	O
return	O
0	int
;	O
}	O
struct	O
auth_cb	struct(int,*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct))))
{	O
int	O
status	int
;	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
;	O
}	O
;	O
static	O
int	O
try_auth	(*(void),*(void))->(int)
(	O
void	O
*	O
item	*(void)
,	O
void	O
*	O
data	*(void)
)	O
{	O
int	O
(	O
*	O
authenticate	*((*(struct(*(void),*(struct`),*(struct`))))->(int))
)	O
(	O
mu_authority_t	*(struct)
)	O
=	O
item	*(void)
;	O
struct	O
auth_cb	struct(int,*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct))))
*	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
=	O
data	*(void)
;	O
if	O
(	O
authenticate	*((*(struct(*(void),*(struct`),*(struct`))))->(int))
(	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
->	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
==	O
0	int
)	O
{	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
->	O
status	int
=	O
0	int
;	O
return	O
MU_ERR_USER0	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_authority_authenticate	(*(struct))->(int)
(	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
)	O
{	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
&&	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
auth_methods	*(struct)
)	O
{	O
struct	O
auth_cb	struct(int,*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct))))
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
;	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
.	O
status	int
=	O
MU_ERR_AUTH_FAILURE	O
;	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
.	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
=	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
;	O
mu_list_foreach	(*(struct),*((*(void),*(void))->(int)),*(void))->(int)
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
auth_methods	*(struct)
,	O
try_auth	(*(void),*(void))->(int)
,	O
&	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
)	O
;	O
return	O
cb	*(struct(int,*(struct(*(void),*(struct`),*(struct`)))))
.	O
status	int
;	O
}	O
return	O
EINVAL	int
;	O
}	O
int	O
mu_authority_set_authenticate	(*(struct),*((*(struct))->(int)),*(void))->(int)
(	O
mu_authority_t	*(struct)
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
,	O
int	O
(	O
*	O
_authenticate	*((*(struct))->(int))
)	O
(	O
mu_authority_t	*(struct)
)	O
,	O
void	O
*	O
owner	*(void)
)	O
{	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
owner	*(void)
!=	O
owner	*(void)
)	O
return	O
EACCES	int
;	O
if	O
(	O
!	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
auth_methods	*(struct)
)	O
{	O
int	O
rc	int
=	O
mu_list_create	(*(*(struct)))->(int)
(	O
&	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
auth_methods	*(struct)
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
mu_list_append	(*(struct),*(void))->(int)
(	O
authority	*(struct(*(void),*(struct(*(void),int,*(char),*(struct`),*((*`)->(void)),*((*`,*`,*`,*`,*`)->(int)),*(void))),*(struct)))
->	O
auth_methods	*(struct)
,	O
_authenticate	*((*(struct))->(int))
)	O
;	O
return	O
0	int
;	O
}	O
